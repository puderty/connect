{"version":3,"file":"js/app.5990d6ab.js","mappings":"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","sources":["webpack://okxconnectdemo/../packages/core/src/connect/commands.js","webpack://okxconnectdemo/../packages/core/src/connect/connect.js","webpack://okxconnectdemo/../packages/core/src/connect/connectionManager.js","webpack://okxconnectdemo/../packages/core/src/connect/connectionSplitPackages.js","webpack://okxconnectdemo/../packages/core/src/connect/constants.js","webpack://okxconnectdemo/../packages/core/src/connect/engine.js","webpack://okxconnectdemo/../packages/core/src/connect/index.js","webpack://okxconnectdemo/../packages/core/src/connect/jwt.js","webpack://okxconnectdemo/../packages/core/src/connect/jwtconstants.js","webpack://okxconnectdemo/../packages/core/src/connect/sessionUtils.js","webpack://okxconnectdemo/../packages/core/src/connect/storage.js","webpack://okxconnectdemo/../packages/core/src/connect/storageconstants.js","webpack://okxconnectdemo/../packages/core/src/connect/walletConnectionConstants.js","webpack://okxconnectdemo/../packages/core/src/connect/walletConnectionManager.js","webpack://okxconnectdemo/../packages/core/src/crypto/crypto.js","webpack://okxconnectdemo/../packages/core/src/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/engine.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/json-rpc.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/connect-event.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/connect-wallet.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/wallet-info.js","webpack://okxconnectdemo/../packages/core/src/protocol/constants.js","webpack://okxconnectdemo/../packages/core/src/protocol/error/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/error/okx-connect.error.js","webpack://okxconnectdemo/../packages/core/src/protocol/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/misc.js","webpack://okxconnectdemo/../packages/core/src/utils/call-for-success.js","webpack://okxconnectdemo/../packages/core/src/utils/index.js","webpack://okxconnectdemo/../packages/core/src/utils/log.js","webpack://okxconnectdemo/../packages/core/src/utils/report.js","webpack://okxconnectdemo/../packages/core/src/utils/reportconstants.js","webpack://okxconnectdemo/../packages/core/src/utils/request.js","webpack://okxconnectdemo/../packages/core/src/utils/safejson.js","webpack://okxconnectdemo/../packages/core/src/utils/stringUtils.js","webpack://okxconnectdemo/../packages/core/src/utils/tma-api.js","webpack://okxconnectdemo/../packages/core/src/utils/url.js","webpack://okxconnectdemo/../packages/core/src/utils/utils.js","webpack://okxconnectdemo/../packages/core/src/utils/web-api.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXBtcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXCosmosProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTonProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTronProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXUniversalProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/sign-client/client.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/ConnectMethodUtils.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/namespaces.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/events.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/values.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/aptos.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/btc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/cosmos.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/eip155.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcConnection.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/solana.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/sui.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/ton.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/tron.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/misc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/providers.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/globals.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/misc.js","webpack://okxconnectdemo/./src/App.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue?1b44","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue?e4fb","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue?aa83","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue?089a","webpack://okxconnectdemo/./src/App.vue?7ccd","webpack://okxconnectdemo/./src/main.js","webpack://okxconnectdemo/webpack/bootstrap","webpack://okxconnectdemo/webpack/runtime/amd options","webpack://okxconnectdemo/webpack/runtime/chunk loaded","webpack://okxconnectdemo/webpack/runtime/compat get default export","webpack://okxconnectdemo/webpack/runtime/define property getters","webpack://okxconnectdemo/webpack/runtime/global","webpack://okxconnectdemo/webpack/runtime/hasOwnProperty shorthand","webpack://okxconnectdemo/webpack/runtime/make namespace object","webpack://okxconnectdemo/webpack/runtime/node module decorator","webpack://okxconnectdemo/webpack/runtime/jsonp chunk loading","webpack://okxconnectdemo/webpack/startup"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_METHOD_BATCH_FETCHMSG = exports.CONNECT_METHOD_FETCHMSG = exports.CONNECT_METHOD_RECEIVE = exports.CONNECT_METHOD_UNSUB = exports.CONNECT_METHOD_SUB = exports.CONNECT_METHOD_PUBLISH = exports.CONNECT_METHOD_LOGIN = exports.CONNECT_METHOD_PUSH = void 0;\n// --------------- ws methods -------------\nexports.CONNECT_METHOD_PUSH = \"push\";\nexports.CONNECT_METHOD_LOGIN = \"login\";\nexports.CONNECT_METHOD_PUBLISH = \"publish\";\nexports.CONNECT_METHOD_SUB = \"subscribe\";\nexports.CONNECT_METHOD_UNSUB = \"unsubscribe\";\nexports.CONNECT_METHOD_RECEIVE = \"receive\";\nexports.CONNECT_METHOD_FETCHMSG = \"fetchMessages\";\nexports.CONNECT_METHOD_BATCH_FETCHMSG = \"batchFetchMessages\";\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXWalletConnector = void 0;\nconst constants_1 = require(\"./constants\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils\");\nconst utils_2 = require(\"../utils/utils\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst log = __importStar(require(\"../utils/log\"));\nconst protocol_1 = require(\"../protocol\");\nconst WS = (0, utils_2.resolveWebSocketImplementation)();\nclass OKXWalletConnector {\n    constructor(url) {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.state = constants_1.ConnectorState.InitState;\n        this.selectedUrlIndex = 0;\n        // reconnect\n        this.retryCount = 0;\n        // default timeout limit: 8 sec\n        this.timeOutLimit = 8000;\n        if (!(0, utils_2.checkWSUrl)(url)) {\n            throw new Error(`CONNECTOR: invalid url ${url}`);\n        }\n        this.url = url;\n        this.heartbeatTimer = null;\n        this.connectionTimeoutTimer = null;\n        this.connectURLStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY + storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n    }\n    get connecting() {\n        return this.state == constants_1.ConnectorState.Connecting;\n    }\n    // ------------------------------------------------------\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        log.logDebug('get received data');\n        log.logDebug(e);\n        if (typeof e.data === \"string\") {\n            let rsp = e.data;\n            if (rsp === \"pong\") {\n                log.logDebug(`CONNECT: receive pong ${Date.now().toString()}`);\n                return;\n            }\n        }\n        this.events.emit(\"payload\", e.data);\n    }\n    onClose(event) {\n        var _a;\n        log.logDebug('socket get closed: ', (_a = this.socket) === null || _a === void 0 ? void 0 : _a.url, event.code);\n        this.socket = undefined;\n        this.events.emit(\"close\", event);\n    }\n    onError(id, e) {\n        const payload = { id: id, msg: e.toString() };\n        this.events.emit(\"payload\", payload);\n    }\n    onopen(socket) {\n        socket.onmessage = (event) => this.onPayload(event);\n        socket.onclose = (event) => this.onClose(event);\n        this.socket = socket;\n        this.state = constants_1.ConnectorState.Connected;\n        this.events.emit(\"open\");\n    }\n    // ------------------------------------------------------\n    emitError(errorEvent) {\n        this.events.emit(\"fail\", errorEvent);\n    }\n    // ------------------------------------------------------\n    heartbeat() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.heartbeatTimer) {\n                clearTimeout(this.heartbeatTimer);\n            }\n            if (this.state != constants_1.ConnectorState.Connected && this.state != constants_1.ConnectorState.OnError) {\n                log.logDebug('heart beat close');\n                return;\n            }\n            if (!this.socket) {\n                log.logDebug('socket not exist');\n                if (this.state == constants_1.ConnectorState.Connected || this.state == constants_1.ConnectorState.OnError) {\n                    log.logDebug('socket reconnect by heartbeat');\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                        this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n                    }\n                }\n                return;\n            }\n            if (this.socket.readyState !== WebSocket.OPEN) {\n                log.logDebug('socket not ready');\n                if (this.state == constants_1.ConnectorState.Connected || this.state == constants_1.ConnectorState.OnError) {\n                    log.logDebug('socket reconnect by heartbeat with state', this.state, this.socket.readyState);\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                        this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n                    }\n                }\n                return;\n            }\n            log.logDebug(`send ping heart beat: ${Date.now().toString()}, ${this.socket}`);\n            this.socket.send(\"ping\");\n            this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n        });\n    }\n    registOpen(url = this.url, inRetry = false) {\n        if (!(0, utils_2.checkWSUrl)(url)) {\n            throw new Error(`CONNECTOR: invalid url ${url}`);\n        }\n        this.url = url;\n        if (!inRetry) {\n            log.logDebug('Connection connect:', this.url, new Date().toUTCString());\n        }\n        this.state = constants_1.ConnectorState.Connecting;\n        const origin = new URLSearchParams(url).get(\"origin\");\n        return new Promise((resolve, reject) => {\n            const socket = new WS(url, []);\n            log.logDebug('Connection connect Begin:', this.url, new Date().toUTCString());\n            this.startTimeOutTimer(socket);\n            if ((0, utils_2.hasBuiltInWebSocket)()) {\n                log.logDebug('Add socket error handler');\n                socket.onerror = () => {\n                    reject(new Error('socket error'));\n                    socket.close();\n                };\n            }\n            else {\n                log.logDebug('Add socket error handler');\n                socket.on(\"error\", () => {\n                    reject(new Error('socket error'));\n                    socket.close();\n                });\n            }\n            socket.onopen = () => {\n                log.logDebug('socket opened');\n                this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.FINISHED);\n                this.onopen(socket);\n                this.heartbeat();\n                resolve(socket);\n            };\n        });\n    }\n    checkMaxRetry() {\n        log.logDebug('current retry count:', this.retryCount, 'of', constants_1.OKXCONNECTOR_WS_URL_LIST.length);\n        return this.retryCount > constants_1.OKXCONNECTOR_WS_URL_LIST.length;\n    }\n    connectionTryNext() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.checkMaxRetry()) {\n                //TODO: mark descent\n                this.retryCount += 1;\n                let nextUrl = this.getNextSelectUrl();\n                log.logDebug('Connection retry:', nextUrl, new Date().toUTCString());\n                return this.registOpen(nextUrl, true);\n            }\n            else {\n                log.logDebug('Max Connection retry ', this.retryCount, new Date().toUTCString());\n            }\n        });\n    }\n    startTimeOutTimer(socket) {\n        if (this.connectionTimeoutTimer) {\n            this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.CANCELED);\n        }\n        this.pendingSocket = socket;\n        this.connectionTimeoutTimer = setTimeout(() => {\n            if (this.pendingSocket) {\n                this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.TIME_OUT);\n            }\n        }, this.timeOutLimit);\n    }\n    resetTimeOutTimer(code) {\n        var _a;\n        // 1. cancel connecting pending sockets\n        if (code != constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.FINISHED) {\n            (_a = this.pendingSocket) === null || _a === void 0 ? void 0 : _a.close(code);\n        }\n        this.pendingSocket = undefined;\n        // 2. remove timer\n        clearTimeout(this.connectionTimeoutTimer);\n    }\n    cacheSuccessUrlSelect() {\n        this.connectURLStorage.saveContent(this.selectedUrlIndex.toString(), storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n    }\n    // private getSuccessUrlSelect(): string {\n    //     let selectIndex = this.connectURLStorage.getItem(OKXCONNECTOR_CACHE_KEY)?.content\n    //     let index = 0\n    //     if (selectIndex) {\n    //         index = Number(selectIndex)\n    //     }\n    //     this.selectedUrlIndex = index\n    //     return OKXCONNECTOR_WS_URL_LIST[index]\n    // }\n    getNextSelectUrl() {\n        this.selectedUrlIndex += 1;\n        this.selectedUrlIndex = this.selectedUrlIndex % constants_1.OKXCONNECTOR_WS_URL_LIST.length;\n        return constants_1.OKXCONNECTOR_WS_URL_LIST[this.selectedUrlIndex];\n    }\n    // ------------------------------------------------------\n    onVisibleChanged() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (document.visibilityState === 'visible') {\n                // check and restore\n                log.logDebug(`get changed ${this.state}, ${this.socket}`);\n                if (this.state == constants_1.ConnectorState.Connected && typeof this.socket === \"undefined\") {\n                    log.logDebug('CONNECTION need reopen');\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                    }\n                    return;\n                }\n            }\n        });\n    }\n    tryRegistOpen() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (this.connecting) {\n                log.logDebug('tryRegistOpen => connecting state');\n                return new Promise((resolve, reject) => {\n                    this.events.once('fail', (e) => {\n                        log.logDebug('tryRegistOpen => connecting fail listener', e);\n                        return reject(e);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.socket == \"undefined\") {\n                            return reject(new Error(\"Connect lost\"));\n                        }\n                        return resolve(this.socket);\n                    });\n                });\n            }\n            log.logDebug('tryRegistOpen => try registOpen until retry limit is hit');\n            let inRetry = false;\n            while (!this.checkMaxRetry() && !this.socket) {\n                try {\n                    log.logDebug('tryRegistOpen => call registOpen, try count:', this.retryCount, inRetry);\n                    yield this.registOpen(url, inRetry);\n                }\n                catch (err) {\n                    log.logDebug('tryRegistOpen => registOpen failed', err);\n                    this.retryCount += 1;\n                    url = this.getNextSelectUrl();\n                    inRetry = true;\n                }\n            }\n            log.logDebug('tryRegistOpen => exit while loop', this.retryCount, this.socket);\n            if (!this.socket && this.checkMaxRetry()) {\n                log.logDebug('tryRegistOpen => failed to open a socket', this.retryCount, this.socket);\n                this.retryCount = 0;\n                this.state = constants_1.ConnectorState.OnError;\n                this.emitError(new Error('tryRegistOpen failed'));\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CONNECTION_ERROR, \"Failed to connect\");\n            }\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.tryRegistOpen();\n                // listener for reconnect\n                document.removeEventListener('visibilitychange', this.onVisibleChanged.bind(this));\n                document.addEventListener('visibilitychange', this.onVisibleChanged.bind(this));\n            }\n            catch (e) {\n                log.logDebug('connect => failed to connect', e);\n                throw e;\n            }\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.state = constants_1.ConnectorState.Disconnected;\n            return new Promise((resolve, reject) => {\n                if (typeof this.socket === \"undefined\") {\n                    // reject(new Error(\"CONNECTION closed\"))\n                    resolve();\n                    return;\n                }\n                this.socket.onclose = (event) => {\n                    this.onClose(event);\n                    resolve();\n                };\n                this.socket.close();\n                if (this.heartbeatTimer) {\n                    clearTimeout(this.heartbeatTimer);\n                }\n            });\n        });\n    }\n    currentStatus() {\n        return {\n            state: this.state,\n            url: this.url\n        };\n    }\n    // event will be jsonstr\n    /// @params Promise\n    /// @params success/failed callback\n    addListener(event, decrypt, success, failed, splitCheckComplete) {\n        if (this.listenPayloadHandler) {\n            this.events.removeListener(\"payload\", this.listenPayloadHandler);\n        }\n        this.listenPayloadHandler = (e) => __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            log.logDebug(`<<< get payload ${e}`);\n            let parsedEvent = (0, utils_1.safeJsonParse)(e);\n            // parse the data to chose success or failed\n            if (parsedEvent.params && parsedEvent.params.data) {\n                let rawMsg = (_a = parsedEvent.params.data) === null || _a === void 0 ? void 0 : _a.message;\n                let skipMsg = false;\n                if (rawMsg) {\n                    // 在这里增加检测流程，如果当前包是“分包”，而且没有finalMessage则不继续触发failed/success结果\n                    if (splitCheckComplete) {\n                        let checkResult = yield splitCheckComplete(parsedEvent.params.data);\n                        skipMsg = checkResult.isSplitPackage && (!checkResult.finalMessage);\n                        if (checkResult.isSplitPackage) {\n                            if (checkResult.finalMessage && checkResult.finalMessage.length > 0) {\n                                log.logDebug('CONNECT: update raw msg content');\n                                rawMsg = checkResult.finalMessage;\n                            }\n                            else {\n                                log.logDebug('CONNECT: skip raw msg content');\n                                skipMsg = true;\n                            }\n                        }\n                    }\n                }\n                if (!skipMsg) {\n                    try {\n                        let msg = decrypt(rawMsg);\n                        if (msg === undefined) {\n                            log.logDebug(`CONNECT: decrypt undefined`);\n                            failed(event, 'Decrypt undefined');\n                        }\n                        else {\n                            success(event, msg);\n                        }\n                    }\n                    catch (e) {\n                        log.logDebug(`CONNECT: decrypt failed: ${e}`);\n                        failed(event, e.message);\n                    }\n                }\n            }\n        });\n        this.events.on(\"payload\", this.listenPayloadHandler);\n        if (this.failHandler) {\n            this.events.removeListener(\"fail\", this.failHandler);\n        }\n        this.failHandler = (e) => {\n            if (e) {\n                log.logDebug(`CONNECT failed: ${e}`);\n                failed(event, e.message);\n            }\n            else {\n                failed(event, \"Unkonow error\");\n            }\n        };\n        this.events.on(\"fail\", this.failHandler);\n    }\n    addPackageParse(callback) {\n        if (this.payloadHandler) {\n            this.events.removeListener(\"payload\", this.payloadHandler);\n        }\n        this.payloadHandler = (e) => __awaiter(this, void 0, void 0, function* () {\n            // parse the data to chose success or failed\n            log.logDebug(`CONNECTION @[${new Date().toUTCString()}] <<<< received e:${e}`);\n            let param = (0, utils_1.safeJsonParse)(e);\n            yield callback(param);\n        });\n        this.events.on(\"payload\", this.payloadHandler);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    send(doLogin, payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (typeof this.socket === \"undefined\") {\n                    log.logDebug(`>>> send payload undefined ${payload}`);\n                    // this.socket = await this.registOpen();\n                    yield doLogin();\n                }\n                log.logDebug(`CONNECTION @[${new Date().toUTCString()}]>>> send payload ${(0, utils_1.safeJsonStringify)(payload)}`);\n                if (this.socket) {\n                    this.socket.send((0, utils_1.safeJsonStringify)(payload));\n                }\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    getMsgPayloadFromHistory(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof msg === \"undefined\")\n                return;\n            let tmpMsg = {\n                params: {\n                    data: msg\n                }\n            };\n            let jsonstr = (0, utils_1.safeJsonStringify)(msg);\n            log.logDebug('get received data from history');\n            log.logDebug(jsonstr);\n            jsonstr = (0, utils_1.safeJsonStringify)(tmpMsg);\n            this.events.emit(\"payload\", jsonstr);\n        });\n    }\n    onOpen(callback) {\n        if (this.openHandler) {\n            this.events.removeListener(\"open\", this.openHandler);\n        }\n        this.openHandler = () => __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> ws opened: `);\n            yield callback();\n        });\n        this.events.on(\"open\", this.openHandler);\n        this.cacheSuccessUrlSelect();\n    }\n}\nexports.OKXWalletConnector = OKXWalletConnector;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionManager = void 0;\nconst connect_1 = require(\"./connect\");\nconst commands_1 = require(\"./commands\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst jwtconstants_1 = require(\"./jwtconstants\");\nconst constants_1 = require(\"./constants\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils/utils\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst jwt_1 = require(\"./jwt\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst report_1 = require(\"../utils/report\");\nconst url_1 = require(\"../utils/url\");\nconst connectionSplitPackages_1 = require(\"./connectionSplitPackages\");\nclass ConnectionManager {\n    constructor(appname = undefined) {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.splitManager = new connectionSplitPackages_1.ConnectionSplitPackages('dapp');\n        // local storage\n        this.connectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY_DAPP + appname, storageconstants_1.OKXCONNECTOR_CACHE_KEY_DAPP);\n        this.crypto = new crypto_1.SessionCrypto();\n        let inTMA = (0, url_1.isInTMA)();\n        (0, log_1.logDebug)('do init:', inTMA);\n        log.reportLog('connection manager do init');\n        if (inTMA) {\n            // recovery from cache\n            const keyPairInfo = this.getCachedCryptoKeyPair();\n            (0, log_1.logDebug)('use same pk:', keyPairInfo);\n            this.crypto = new crypto_1.SessionCrypto(keyPairInfo);\n        }\n        this.jwtKeyPair = this.getCachedJWTKeyPair();\n        this.saveJWTKeyPair(this.jwtKeyPair);\n        // wss connection\n        this.connector = new connect_1.OKXWalletConnector(constants_1.OKXCONNECTOR_WS_URL_1);\n        this.packageId = Date.now();\n        // connection state\n        this.connectedWalletPK = '';\n        this.currentTopic = '';\n        log.logDebug(`this.connectedWalletPK  constructor   ${this.connectedWalletPK}`);\n    }\n    refreshPackageId() {\n        let nowDate = Date.now();\n        if (nowDate == this.packageId) {\n            this.packageId = nowDate + 1;\n        }\n        this.packageId = nowDate;\n    }\n    saveCryptoKeyPair(keyPair) {\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(keyPair);\n        // encrypt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_CRYPTO_KEY);\n    }\n    getCachedCryptoKeyPair() {\n        // decrypt kp\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_CRYPTO_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            log.logDebug('get cached crypto key:');\n            log.logDebug(content);\n            let keyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            return keyPairInfo;\n        }\n        else {\n            this.connectStorage.clearCache();\n        }\n        return null;\n    }\n    saveJWTKeyPair(keyPair) {\n        var strkeyPair = {\n            publicKey: (0, utils_1.toHexString)(keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(keyPair.secretKey)\n        };\n        log.logDebug('save jwt kp');\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(strkeyPair);\n        log.logDebug(cacheInfo);\n        // encrypt jwt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_JWT_KEY);\n    }\n    getCachedJWTKeyPair() {\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            // TODO: decrypt jwt kp\n            log.logDebug('get cached jwt kp:');\n            log.logDebug(content);\n            let strKeyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            log.logDebug('save jwt kp');\n            log.logDebug(strKeyPairInfo);\n            var keyPair = {\n                publicKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.publicKey),\n                secretKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.secretKey)\n            };\n            return keyPair;\n        }\n        else {\n            return (0, jwt_1.generateKeyPair)();\n        }\n    }\n    isWalletPKReady() {\n        log.logDebug(`isWalletPKReady  ===> ${this.connectedWalletPK}`);\n        return this.connectedWalletPK.length > 0;\n    }\n    makeJWT(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, jwt_1.signJWT)(topic, jwtconstants_1.OKXCONNECTOR_JWT_SIDE, jwtconstants_1.OKXCONNECTOR_JWT_TTL, // 24h\n            this.jwtKeyPair);\n        });\n    }\n    parsePackage(input_1) {\n        return __awaiter(this, arguments, void 0, function* (input, ignoreACK = false) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o;\n            this.events.emit(input.id, input);\n            // send back ACK\n            if (!ignoreACK) {\n                yield this.sendACK(input.id, true);\n                let topic = (_a = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE)) === null || _a === void 0 ? void 0 : _a.content;\n                if (topic) {\n                    let inputObj = input;\n                    if ((_c = (_b = inputObj.params) === null || _b === void 0 ? void 0 : _b.data) === null || _c === void 0 ? void 0 : _c.messageId) {\n                        // change into split check receive\n                        let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload((_e = (_d = inputObj.params) === null || _d === void 0 ? void 0 : _d.data) === null || _e === void 0 ? void 0 : _e.message);\n                        if (msgPlayloadObject) {\n                            let msgObject = {\n                                topicId: (_g = (_f = inputObj.params) === null || _f === void 0 ? void 0 : _f.data) === null || _g === void 0 ? void 0 : _g.topic,\n                                messageId: (_j = (_h = inputObj.params) === null || _h === void 0 ? void 0 : _h.data) === null || _j === void 0 ? void 0 : _j.messageId,\n                                messageObject: msgPlayloadObject,\n                                publishedAt: (_l = (_k = inputObj.params) === null || _k === void 0 ? void 0 : _k.data) === null || _l === void 0 ? void 0 : _l.publishedAt,\n                            };\n                            let checkResult = yield this.splitManager.onReceivedPackageCheck(msgObject);\n                            if (checkResult.completeMessageIdList) {\n                                checkResult.completeMessageIdList.forEach((msgId) => __awaiter(this, void 0, void 0, function* () {\n                                    // 发送receive\n                                    this.refreshPackageId();\n                                    yield this.sendReceive(this.packageId.toString(), msgId, topic);\n                                }));\n                            }\n                        }\n                        else {\n                            this.refreshPackageId();\n                            yield this.sendReceive(this.packageId.toString(), (_o = (_m = inputObj.params) === null || _m === void 0 ? void 0 : _m.data) === null || _o === void 0 ? void 0 : _o.messageId, topic);\n                        }\n                    }\n                }\n            }\n        });\n    }\n    restoreConnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.reportLog('connection manager restore connection');\n            log.logDebug(`connectionManager  restoreConenct   ${topic}`);\n            if ((typeof topic !== 'string') || topic.length === 0) {\n                throw new Error('CONNECTION: invalid topic');\n            }\n            log.logDebug(`connectionManager  restoreConenct   disconnect`);\n            yield this.disconnect(true);\n            this.connectStorage.saveContent(topic, storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`connectionManager  restoreConenct   conect`);\n            yield this.connect(true);\n        });\n    }\n    getConnectInfo() {\n        var topic = (0, utils_1.generateTopic)();\n        log.logDebug(`generate topic token: ${topic}`);\n        log.reportLog('connection manager generate connection info');\n        this.currentTopic = topic;\n        const info = {\n            channelId: topic,\n            clientId: this.crypto.stringifyKeypair().publicKey,\n        };\n        return info;\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            this.timeLog = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---enter->\", this.timeLog);\n            log.reportLog('connection manager begin connect');\n            let lastConnectId = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            //1. generate topic & jwt\n            var topic = this.currentTopic;\n            log.logDebug(`generate topic token: ${topic}`);\n            // crypto keypair\n            if (fromRestore) {\n                if (typeof lastConnectId !== 'undefined' && lastConnectId !== null) {\n                    log.logDebug(`read last connect id: ${lastConnectId}`);\n                    topic = lastConnectId.content;\n                }\n                var cachedSenderPublicKey = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                if (cachedSenderPublicKey) {\n                    this.connectedWalletPK = cachedSenderPublicKey.content;\n                    (0, log_1.logDebug)(`connectionManager connect() this.connectedWalletPK : ${this.connectedWalletPK}`);\n                }\n                log.reportLog('connection manager do restore connection');\n            }\n            if (fromRestore) {\n                // recovery from cache\n                const keyPairInfo = this.getCachedCryptoKeyPair();\n                if (keyPairInfo) {\n                    this.crypto = new crypto_1.SessionCrypto(keyPairInfo);\n                }\n            }\n            log.logDebug(`use crypto client id: ${this.crypto.stringifyKeypair().publicKey}`);\n            // cache topic\n            this.connectStorage.saveContent(topic, storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            var jwtToken = yield this.makeJWT(topic);\n            log.logDebug(`generate jwt token: ${jwtToken}`);\n            this.connectStorage.saveContent(jwtToken, 'jwt');\n            return new Promise((resolve, reject) => {\n                // 1. when websocket opened\n                this.connector.onOpen(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug(`1. connector on open`);\n                    log.reportLog('1. connect ws open');\n                    const timeOne = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---open->\", timeOne - this.timeLog);\n                    //2. send jwt to login\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when login');\n                            log.reportLog('2. connect login failed');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // throw error\n                            reject(error);\n                        }\n                        //3. send subscribe\n                        this.refreshPackageId();\n                        this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                            // ack\n                            if (rsp && rsp.error) {\n                                log.logError('failed when subscribe');\n                                log.reportLog('3. connect subscribe failed');\n                                yield this.connector.disconnect();\n                                var error = new Error();\n                                error.message = rsp.error.message;\n                                error.name = rsp.error.code.toString();\n                                // throw error\n                                reject(error);\n                            }\n                            this.refreshPackageId();\n                            log.logDebug(`4. subscribe callback then send fetch: ${this.packageId}`);\n                            log.reportLog('4. subscribe callback then send fetch');\n                            const timeF = new Date().getTime();\n                            (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n                            // 4. fetch messages\n                            yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                            // 5. split init\n                            log.logDebug(`5. splitmanager init: ${this.packageId}`);\n                            log.reportLog('5. splitmanager init');\n                            yield this.splitManager.init(this.sendRaw.bind(this));\n                            resolve();\n                        }));\n                        log.logDebug(`3. login callback then send subscribe: ${this.packageId}`);\n                        log.reportLog('3. connect subscribe failed');\n                        const timeTh = new Date().getTime();\n                        (0, log_1.logDebug)(\"ConnectTime---login callback->\", timeTh - this.timeLog);\n                        yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                            log.logDebug('CONNECT: reconnect before send');\n                            yield this.connector.connect()\n                                .catch((err) => {\n                                (0, log_1.logDebug)('ConnectionManager connect error', err);\n                                reject(err);\n                            });\n                        }), {\n                            id: this.packageId.toString(),\n                            jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                            method: commands_1.CONNECT_METHOD_SUB,\n                            params: {\n                                topic: topic\n                            }\n                        });\n                    }));\n                    log.logDebug(`2. login called`);\n                    log.reportLog('2. connection manager connect call login');\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        yield this.connector.connect()\n                            .catch((err) => {\n                            (0, log_1.logDebug)('ConnectionManager connect error', err);\n                            reject(err);\n                        });\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_LOGIN,\n                        params: {\n                            token: jwtToken\n                        }\n                    });\n                    // 4. listen when dapp back to front, receive wallet public key\n                    this.connector.addPackageParse((event) => {\n                        var _a;\n                        log.logDebug(`connect: parse package`);\n                        log.logDebug(event);\n                        if (!(\"params\" in event) || !(\"data\" in event[\"params\"])) {\n                            this.parsePackage(event, true);\n                            return;\n                        }\n                        let rawMsg = (_a = event.params.data) === null || _a === void 0 ? void 0 : _a.message;\n                        if (typeof rawMsg !== 'undefined') {\n                            rawMsg = rawMsg.replace(/'/g, '\"');\n                            let parsedMessage = (0, safejson_1.safeJsonParse)(rawMsg);\n                            if (typeof parsedMessage !== 'string' && \"clientId\" in parsedMessage && parsedMessage.clientId && parsedMessage.clientId.length > 0) {\n                                this.connectedWalletPK = parsedMessage.clientId;\n                                log.logDebug(`this.connectedWalletPK  addPackageParse   ${this.connectedWalletPK}`);\n                                // exchange sender public key\n                                // cache wallet public key\n                                this.connectStorage.saveContent(this.connectedWalletPK, storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                                // cache crypto keypair\n                                this.saveCryptoKeyPair(this.crypto.stringifyKeypair());\n                            }\n                        }\n                        // ignore receive echo\n                        this.parsePackage(event, event.method === commands_1.CONNECT_METHOD_RECEIVE);\n                    });\n                }));\n                this.connector.connect().catch((err) => {\n                    (0, log_1.logDebug)('ConnectionManager connect error', err);\n                    reject(err);\n                });\n            });\n        });\n    }\n    disconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            yield this.connector.disconnect();\n            log.reportLog('connect disconnect');\n            //clean cached topic\n            //如果是恢复连接，就不清理解密public key\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            if (!fromRestore) {\n                this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                this.connectedWalletPK = '';\n                (0, log_1.logDebug)(`connectionManager disconnect() this.connectedWalletPK : ${this.connectedWalletPK}`);\n            }\n        });\n    }\n    updateProtocolVersion(topic, protocolVersion) {\n        this.splitManager.updateTopicSenderVersion(topic, protocolVersion);\n    }\n    addListener(event, success, fail) {\n        this.connector.addListener((0, safejson_1.safeJsonStringify)(event), (rawMsg) => {\n            rawMsg = rawMsg.replace(/'/g, '\"');\n            log.logDebug(`addListener ===> ${rawMsg}`);\n            if (typeof rawMsg !== 'undefined') {\n                var msgObj = (0, safejson_1.safeJsonParse)(rawMsg);\n                var msg = msgObj.message;\n                let result;\n                if (msg.trimStart().startsWith('{')) {\n                    result = msg;\n                }\n                else {\n                    if (msgObj.clientId && msgObj.clientId.length > 0) {\n                        this.connectedWalletPK = msgObj.clientId;\n                        this.connectStorage.saveContent(this.connectedWalletPK, storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                        log.logDebug(`this.connectedWalletPK  addListener   ${this.connectedWalletPK}`);\n                        log.logDebug(`this.cryptoKey  addListener   ${(0, utils_1.toHexString)(this.crypto.keyPair.publicKey)}`);\n                        // cache crypto keypair\n                        this.saveCryptoKeyPair(this.crypto.stringifyKeypair());\n                    }\n                    result = this.crypto.decrypt(msg, this.connectedWalletPK);\n                }\n                log.logDebug(`addListener ===> ${result}`);\n                return result;\n            }\n            return undefined;\n        }, success, fail, (inputDataObj) => {\n            // 判断获取是否是分包，如果是则返回合包结果，如果不是则继续\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(inputDataObj.message);\n                if (msgPlayloadObject) {\n                    let msgObject = {\n                        topicId: inputDataObj.topic,\n                        messageId: inputDataObj === null || inputDataObj === void 0 ? void 0 : inputDataObj.messageId,\n                        messageObject: msgPlayloadObject,\n                        publishedAt: inputDataObj === null || inputDataObj === void 0 ? void 0 : inputDataObj.publishedAt,\n                    };\n                    let msgResult = yield this.splitManager.onReceivedPackageCheck(msgObject);\n                    resolve(msgResult);\n                }\n                else {\n                    resolve({\n                        isSplitPackage: false,\n                    });\n                }\n            }));\n        });\n    }\n    sendRaw(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`message send =====> ${msg}`);\n            log.reportLog('connect send raw msg');\n            let message = msg;\n            log.logDebug(`message send =====encrypt message.length>>>> ${message.length}`);\n            // only one topic\n            let topic = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`message send =====topic>>>> ${topic === null || topic === void 0 ? void 0 : topic.content}`);\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                method: commands_1.CONNECT_METHOD_PUBLISH,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                params: {\n                    message: {\n                        topic: topic === null || topic === void 0 ? void 0 : topic.content,\n                        message: message,\n                        ttl: constants_1.OKXCONNECTOR_MESSAGE_TTL\n                    }\n                } // crypted\n            };\n            this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                // ack\n                if (rsp && rsp.error) {\n                    log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                }\n                else if (rsp && !rsp.error) {\n                    log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                }\n            }));\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n            return this.packageId;\n        });\n    }\n    sendEncryptedMsg(topic_1, encryptedMsg_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, encryptedMsg, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL) {\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                method: commands_1.CONNECT_METHOD_PUBLISH,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                params: {\n                    message: {\n                        topic: topic,\n                        message: encryptedMsg,\n                        ttl: ttl\n                    }\n                } // crypted\n            };\n            this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                // ack\n                if (rsp && rsp.error) {\n                    log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                }\n                else if (rsp && !rsp.error) {\n                    log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                }\n            }));\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    send(msg_1) {\n        return __awaiter(this, arguments, void 0, function* (msg, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL) {\n            // make send msg payload\n            log.logDebug(`message send =====> ${msg}`);\n            log.reportLog('connect send msg');\n            if (!this.isWalletPKReady()) {\n                // channel not ready\n                throw new Error('connection not finish');\n            }\n            let message = this.crypto.encrypt(msg, this.connectedWalletPK);\n            log.logDebug(`message send =====encrypt message.length>>>> ${message.length}`);\n            log.reportEvent(report_1.OKXReportType.LOG, 'msg_size', message.length.toString());\n            // only one topic\n            let topic = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`message send =====topic>>>> ${topic === null || topic === void 0 ? void 0 : topic.content}`);\n            // before send message check split\n            yield this.splitManager.sendSplitPackages(topic === null || topic === void 0 ? void 0 : topic.content, message, this.sendEncryptedMsg.bind(this), this.sendRaw.bind(this));\n            // await this.sendEncryptedMsg(topic?.content, message, ttl)\n            // this.refreshPackageId()\n            // const payload : ConnectPayloadReq = {\n            //    id : this.packageId.toString(),\n            //    method: CONNECT_METHOD_PUBLISH,\n            //    jsonrpc: CONNECT_JSONRPC_VER,\n            //    params: {\n            //       message: {\n            //          topic: topic?.content,\n            //          message: message,\n            //          ttl: ttl\n            //       }\n            //    } // crypted\n            // }\n            // this.events.once(this.packageId.toString(), async (rsp:ConnectPayloadRsp)=>{\n            //    // ack\n            //    if (rsp && rsp.error) {\n            //       log.logError(`@${new Date().toUTCString()} >>> failed when send msg`)\n            //    } else if ( rsp && !rsp.error) {\n            //       log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`)\n            //    }\n            // })\n            // await this.connector.send(async ()=>{\n            //    log.logDebug('CONNECT: reconnect before send')\n            //    return await this.connector.connect();\n            // }, payload)\n            return this.packageId;\n        });\n    }\n    sendACK(msgId_1, success_1) {\n        return __awaiter(this, arguments, void 0, function* (msgId, success, reason = undefined) {\n            if (success === true) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    result: true\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n            else if (reason) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    error: {\n                        code: reason.code, //int\n                        message: reason.message\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    // send receive\n    sendReceive(msgId, messageId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECEIVE,\n                params: {\n                    data: {\n                        messageId: messageId,\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    // send receive\n    // 1. fetch all \n    // 2. send back receive\n    // 3. check has more, if so, repeat from 1st step\n    sendFetchAndConsumeMessages(msgId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(msgId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic == topic) {\n                                let messageId = msg.messageId;\n                                log.reportLog('5. get fetch result');\n                                // fetch result receive control\n                                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(msg.message);\n                                if (msgPlayloadObject) {\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                    log.logDebug('skip receive');\n                                }\n                                else {\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                    // send receive command to relay server\n                                    this.refreshPackageId();\n                                    yield this.sendReceive(this.packageId.toString(), messageId, topic);\n                                }\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            log.reportLog('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_FETCHMSG,\n                params: {\n                    data: {\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    cleanCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.reportLog('connection cache clean called');\n            this.connectStorage.clearCache();\n        });\n    }\n    saveSessionContent(key, data) {\n        if (!data) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(data);\n        this.connectStorage.encryptStoreMsg(jsonData, storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n    }\n    getSessionContent(key) {\n        let jsonStr = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        if (jsonStr) {\n            let object = (0, safejson_1.safeJsonParse)(jsonStr);\n            return object;\n        }\n        return undefined;\n    }\n    getCurrentConnectionReady() {\n        return this.isWalletPKReady();\n    }\n}\nexports.ConnectionManager = ConnectionManager;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionSplitPackages = void 0;\nconst storageconstants_1 = require(\"./storageconstants\");\nconst localforage_1 = __importDefault(require(\"localforage\"));\nconst utils_1 = require(\"../utils/utils\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst ConnectionSplitSupportedVersionLimit = 2;\nconst ConnectionSplitSupportedSizeLimit = 63000;\n// test\n//  const ConnectionSplitSupportedSizeLimit = 500\nconst ConnectionReceiveKey = 'ConnectionReceiveKey';\nconst ConnectionSendKey = 'ConnectionSendKey';\nconst ConnectionTopicVersionKey = 'ConnectionSenderVersionKey';\nclass ConnectionSplitPackages {\n    constructor(side) {\n        // 发送队列, 保存分片数据，需要断点续传发送，\n        this.splitMessageSendArray = new Map();\n        // 接收队列, 保存回包数据，需要冗余去重复\n        this.splitMessageReceivedArray = new Map();\n        // sender 版本校验缓存\n        this.splitMessageSenderVersionMap = new Map();\n        this.splitPackageCache = localforage_1.default.createInstance({\n            name: storageconstants_1.OKXCONNECTOR_STORAGE_PROTOCOL_CACHE + side\n        });\n    }\n    init(sendRawMsg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // 1. 恢复缓存\n            yield this.recoverFromCache();\n            //2. 缓存中发送队列重发\n            if (this.splitMessageSendArray.size > 0) {\n                for (const [topic, payloadList] of this.splitMessageSendArray.entries()) {\n                    for (let i = 0; i < payloadList.length;) {\n                        const payload = payloadList[i];\n                        try {\n                            // 尝试发送消息\n                            yield sendRawMsg((0, safejson_1.safeJsonStringify)(payload), topic);\n                            log.logDebug(`Successfully sent payload: ${(0, safejson_1.safeJsonStringify)(payload)} to topic: ${topic}`);\n                            // 成功后移除元素\n                            payloadList.splice(i, 1);\n                        }\n                        catch (error) {\n                            log.logError(`Failed to send payload: ${(0, safejson_1.safeJsonStringify)(payload)} to topic: ${topic}`, error);\n                            // 重试逻辑（最多重试 3 次）\n                            payload.retryCount = (payload.retryCount || 0) + 1;\n                            if (payload.retryCount > 3) {\n                                log.logError(`Payload failed after 3 retries: ${(0, safejson_1.safeJsonStringify)(payload)}`);\n                                payloadList.splice(i, 1); // 放弃重试，移除元素\n                            }\n                            else {\n                                i++; // 跳过当前元素，继续处理下一个\n                            }\n                        }\n                    }\n                }\n                yield this.syncCache();\n            }\n        });\n    }\n    tryParseMessageSplitPayload(message) {\n        var _a;\n        let result = undefined;\n        try {\n            if (message.trimStart().startsWith('{')) {\n                let messageObj = (0, safejson_1.safeJsonParse)(message);\n                if (messageObj\n                    && messageObj.protocol_version\n                    && messageObj.protocol_version >= 2) {\n                    let protocolMessageObject = messageObj;\n                    if (protocolMessageObject.package_group_id && ((_a = protocolMessageObject.package_group_id) === null || _a === void 0 ? void 0 : _a.length) > 0) {\n                        result = messageObj;\n                    }\n                }\n            }\n            else {\n                (0, log_1.logDebug)('not split packages');\n            }\n        }\n        catch (error) {\n            (0, log_1.logDebug)('not split packages');\n        }\n        return result;\n    }\n    updateTopicSenderVersion(topic, protocolVersion) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.splitMessageSenderVersionMap.set(topic, protocolVersion);\n            yield this.syncCache();\n            (0, log_1.logDebug)('get update topic sender version: ', topic, protocolVersion);\n        });\n    }\n    /**\n     * topic\n     * message 待发送的消息体\n     * sendMsg 正常发送消息的方法\n     * sendRawMsg 发送明文格式，即拆包消息的方法\n    */\n    sendSplitPackages(topic, message, sendMsg, sendRawMsg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // 1. 长度校验拆分子包\n            // 2. 确认连接协议最大支持版本\n            // 3. 分包缓存\n            // 4. 缓存包发送\n            // 5. ACK确认并清理缓存\n            if (!topic) {\n                log.logError('sendSplitPackages invalid topic');\n                return;\n            }\n            let senderVersion = this.splitMessageSenderVersionMap.get(topic);\n            let msgLength = message.length;\n            try {\n                if (msgLength < ConnectionSplitSupportedSizeLimit) {\n                    throw new Error(`no need to split (size:${msgLength})`);\n                }\n                if (!senderVersion || (senderVersion && senderVersion < ConnectionSplitSupportedVersionLimit)) {\n                    throw new Error(`version not support split (version: ${senderVersion})`);\n                }\n                const msg_parts = [];\n                let msg_part_length = ConnectionSplitSupportedSizeLimit;\n                for (let i = 0; i < message.length; i += msg_part_length) {\n                    if (i + msg_part_length < message.length) {\n                        msg_parts.push(message.slice(i, i + msg_part_length));\n                    }\n                    else {\n                        msg_parts.push(message.slice(i));\n                    }\n                }\n                let groupId = (0, utils_1.generateGroupId)();\n                let splitMessagePackages = msg_parts.map((msg, index) => {\n                    // make msg split parts\n                    let msgObj = {\n                        topicId: topic,\n                        protocol_version: ConnectionSplitSupportedVersionLimit,\n                        total_count: msg_parts.length,\n                        package_index: index,\n                        package_group_id: groupId,\n                        content: msg\n                    };\n                    return msgObj;\n                });\n                // save cache\n                this.mergePackageArray(true, splitMessagePackages);\n                // try send out\n                for (let i = 0; i < splitMessagePackages.length;) {\n                    const msgObj = splitMessagePackages[i];\n                    const payload = (0, safejson_1.safeJsonStringify)(msgObj);\n                    try {\n                        // 尝试发送消息\n                        yield sendRawMsg(payload, topic);\n                        log.logDebug(`Successfully sent payload: ${payload} to topic: ${topic}`);\n                        // 成功后移除元素\n                        splitMessagePackages.splice(i, 1);\n                    }\n                    catch (error) {\n                        log.logError(`Failed to send payload: ${payload} to topic: ${topic}`, error);\n                        // 重试逻辑（最多重试 3 次）\n                        msgObj.retryCount = (msgObj.retryCount || 0) + 1;\n                        if (msgObj.retryCount > 3) {\n                            log.logError(`Payload failed after 3 retries: ${payload}`);\n                            splitMessagePackages.splice(i, 1); // 放弃重试，移除元素\n                        }\n                        else {\n                            i++; // 跳过当前元素，继续处理下一个\n                        }\n                    }\n                }\n                // clean cache\n                this.splitMessageSendArray.set(topic, []);\n                yield this.syncCache();\n            }\n            catch (e) {\n                (0, log_1.logDebug)('send split packages no split');\n                (0, log_1.logDebug)(e);\n                yield sendMsg(topic, message);\n            }\n        });\n    }\n    onReceivedPackageCheck(payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // 1. merge 进入缓存\n            this.mergePackageArray(false, [payload]);\n            let completeMap = new Map();\n            let inputTopic = payload.topicId;\n            // 2. 返回检查结果,输出完整message结果\n            this.splitMessageReceivedArray.forEach((itemList, topic) => {\n                if (topic == payload.topicId) {\n                    itemList.forEach((item) => {\n                        if (item.messageObject.package_group_id) {\n                            let messageCache = completeMap.get(item.messageObject.package_group_id);\n                            if (!messageCache) {\n                                messageCache = new Array();\n                            }\n                            messageCache.push(item);\n                            completeMap.set(item.messageObject.package_group_id, messageCache);\n                        }\n                    });\n                }\n            });\n            (0, log_1.logDebug)('on received message, check message cache');\n            let checkResult = {\n                isSplitPackage: false,\n                // finalMessage: undefined,\n                // completeMessageIdList: undefined \n            };\n            if (payload.messageObject.package_group_id) {\n                checkResult.isSplitPackage = true;\n                let messageCache = completeMap.get(payload.messageObject.package_group_id);\n                // 判断是否收齐\n                if (messageCache === null || messageCache === void 0 ? void 0 : messageCache.length) {\n                    let index_check = new Set();\n                    messageCache.forEach((item) => {\n                        if (item.messageObject.package_index !== undefined) {\n                            index_check.add(item.messageObject.package_index);\n                        }\n                    });\n                    if (index_check.size == payload.messageObject.total_count) {\n                        // 满足条件，更新checkResult\n                        messageCache.sort((a, b) => {\n                            if ((a.messageObject.package_index || a.messageObject.package_index === 0)\n                                && (b.messageObject.package_index || b.messageObject.package_index === 0)) {\n                                return a.messageObject.package_index - b.messageObject.package_index;\n                            }\n                            else {\n                                return 0;\n                            }\n                        });\n                        let messageList = messageCache.reduce((msgList, item) => {\n                            msgList.push(item.messageObject.content);\n                            return msgList;\n                        }, []);\n                        let messageIdList = messageCache.reduce((msgIdList, item) => {\n                            msgIdList.push(item.messageId);\n                            return msgIdList;\n                        }, []);\n                        checkResult.isSplitPackage = true;\n                        checkResult.finalMessage = messageList.join('');\n                        checkResult.completeMessageIdList = messageIdList;\n                        // 清理缓存\n                        let receivedList = this.splitMessageReceivedArray.get(inputTopic);\n                        if (receivedList) {\n                            receivedList = receivedList.filter((item) => {\n                                return !messageIdList.includes(item.messageId);\n                            });\n                            this.splitMessageReceivedArray.set(inputTopic, receivedList);\n                        }\n                        yield this.syncCache();\n                    }\n                }\n            }\n            // 抛出，交给manager来发送receive\n            return checkResult;\n        });\n    }\n    /* -------------------------- */\n    /** private methods */\n    /* -------------------------- */\n    mergePackageArray(isSending, inputPayloadArray) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('append sending array');\n            if (isSending) {\n                let inputSendArray = inputPayloadArray;\n                let filtedArray = inputSendArray.filter((payload) => {\n                    let inputTopic = payload.topicId;\n                    let accept = true;\n                    let sendCacheArray = this.splitMessageSendArray.get(inputTopic);\n                    sendCacheArray === null || sendCacheArray === void 0 ? void 0 : sendCacheArray.forEach((cachedPayload) => {\n                        if (cachedPayload.package_group_id == payload.package_group_id\n                            && cachedPayload.total_count == payload.total_count\n                            && cachedPayload.package_index == payload.package_index) {\n                            accept = false;\n                        }\n                    });\n                    return accept;\n                });\n                if (filtedArray.length > 0) {\n                    let inputTopic = filtedArray[0].topicId;\n                    let sendArray = this.splitMessageSendArray.get(inputTopic);\n                    if (!sendArray) {\n                        sendArray = new Array();\n                    }\n                    sendArray = sendArray.concat(filtedArray);\n                    this.splitMessageSendArray.set(inputTopic, sendArray);\n                    (0, log_1.logDebug)('append sending array (after filted): ', sendArray);\n                }\n            }\n            else {\n                let inputReceiveArray = inputPayloadArray;\n                let filtedArray = inputReceiveArray.filter((payload) => {\n                    let inputTopic = payload.topicId;\n                    let accept = true;\n                    let receiveCacheArray = this.splitMessageReceivedArray.get(inputTopic);\n                    receiveCacheArray === null || receiveCacheArray === void 0 ? void 0 : receiveCacheArray.forEach((cachedPayload) => {\n                        if (cachedPayload.messageId == payload.messageId) {\n                            accept = false;\n                        }\n                    });\n                    return accept;\n                });\n                if (filtedArray.length > 0) {\n                    let inputTopic = filtedArray[0].topicId;\n                    let receiveArray = this.splitMessageReceivedArray.get(inputTopic);\n                    if (!receiveArray) {\n                        receiveArray = new Array();\n                    }\n                    receiveArray = receiveArray.concat(filtedArray);\n                    this.splitMessageReceivedArray.set(inputTopic, receiveArray);\n                    (0, log_1.logDebug)('append received array (after filted): ', receiveArray);\n                }\n            }\n        });\n    }\n    syncCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('sync split message cache');\n            yield this.splitPackageCache.setItem(ConnectionReceiveKey, this.splitMessageReceivedArray);\n            yield this.splitPackageCache.setItem(ConnectionSendKey, this.splitMessageSendArray);\n            yield this.splitPackageCache.setItem(ConnectionTopicVersionKey, this.splitMessageSenderVersionMap);\n        });\n    }\n    recoverFromCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // rec\n            let rec_array = yield this.splitPackageCache.getItem(ConnectionReceiveKey);\n            if (rec_array) {\n                this.splitMessageReceivedArray = rec_array;\n            }\n            else {\n                this.splitMessageReceivedArray = new Map();\n            }\n            //send\n            let send_array = yield this.splitPackageCache.getItem(ConnectionSendKey);\n            if (send_array) {\n                this.splitMessageSendArray = send_array;\n            }\n            else {\n                this.splitMessageSendArray = new Map();\n            }\n            // topic/version cach\n            let topic = yield this.splitPackageCache.getItem(ConnectionTopicVersionKey);\n            if (topic) {\n                this.splitMessageSenderVersionMap = topic;\n            }\n            else {\n                this.splitMessageSenderVersionMap = new Map();\n            }\n        });\n    }\n}\nexports.ConnectionSplitPackages = ConnectionSplitPackages;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectorState = exports.CONNECT_PROTOCOL_VER = exports.CONNECT_JSONRPC_VER = exports.OKXCONNECTOR_MESSAGE_TTL = exports.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE = exports.OKXCONNECTOR_WS_URL_LIST = exports.OKXCONNECTOR_WS_URL_IDX_KEY = exports.OKXCONNECTOR_WS_URL_3 = exports.OKXCONNECTOR_WS_URL_2 = exports.OKXCONNECTOR_WS_URL_1 = exports.EVENT_EMITTER_MAX_LISTENERS = exports.OKXCONNECTOR_PROTOCOL_VERSION = void 0;\nexports.OKXCONNECTOR_PROTOCOL_VERSION = 2;\nexports.EVENT_EMITTER_MAX_LISTENERS = 10;\nexports.OKXCONNECTOR_WS_URL_1 = \"wss://wsdexpri.okx.com/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_2 = \"wss://wsdexpri.okx.ac/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_3 = \"wss://wsdexpri.coinall.ltd/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_IDX_KEY = \"wuik\";\nexports.OKXCONNECTOR_WS_URL_LIST = [\n    exports.OKXCONNECTOR_WS_URL_1,\n    exports.OKXCONNECTOR_WS_URL_2,\n    exports.OKXCONNECTOR_WS_URL_3,\n];\nexports.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE = {\n    TIME_OUT: 3990,\n    CANCELED: 3991,\n    FINISHED: 3992,\n};\nexports.OKXCONNECTOR_MESSAGE_TTL = 300000;\n// --------------- JSON RPC ---------------\nexports.CONNECT_JSONRPC_VER = \"2.0\";\n// --------------- Protocol Version -------\nexports.CONNECT_PROTOCOL_VER = 2;\nexports.ConnectorState = {\n    InitState: 0,\n    Connecting: 1,\n    Connected: 2,\n    Disconnected: 3,\n    OnError: 4,\n};\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Engine = void 0;\nconst safejson_1 = require(\"../utils/safejson\");\nconst log_1 = require(\"../utils/log\");\nconst protocol_1 = require(\"../protocol\");\nconst constants_1 = require(\"./constants\");\n// import {standardDeeplink, tonConnectSdkVersion} from \"../../ton/tonsdk/constants/version\";\nconst utils_1 = require(\"../utils\");\nconst utils_2 = require(\"../utils\");\nconst sessionUtils_1 = require(\"./sessionUtils\");\nconst url_1 = require(\"../utils/url\");\nclass Engine {\n    constructor(connectionManager) {\n        this.pendingRequests = new Map();\n        this.disconnectListener = [];\n        this.connectionManager = connectionManager;\n        // report api begin\n        (0, log_1.getDefaultReporter)().beginReport();\n        this.connectionManager.addListener(\"sdk_response\", (event, msg) => {\n            var jsonResponse = (0, safejson_1.safeJsonParse)(msg);\n            (0, log_1.logDebug)(`Engine ==>> addListener ==> success ==> ${jsonResponse}`);\n            this.handleResponse(event, jsonResponse);\n        }, function () {\n        });\n    }\n    addDisconnectListener(disconnecter) {\n        this.disconnectListener.push(disconnecter);\n    }\n    setSessionConnectingListener(sessionConnectingListener) {\n        this.sessionConnectingListener = sessionConnectingListener;\n    }\n    disconnect() {\n        (0, log_1.logDebug)('Engine ==>> disconnect');\n        this.pendingRequests.clear();\n    }\n    getRequestId() {\n        const requestId = Date.now().toString();\n        (0, log_1.logDebug)('Engine ==>> getRequestId ==>', requestId);\n        return requestId;\n    }\n    bindRequestForPromise(requestId, resolve) {\n        this.pendingRequests.set(requestId, resolve);\n    }\n    send(request, requestAnswer, option, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('Engine ==>> send  request==>', JSON.stringify(request));\n            const requestId = this.getRequestId();\n            try {\n                let packageId = yield this.connectionManager.send(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId })), ttl);\n                this.connectionManager.events.once(packageId.toString(), (event) => {\n                    var _a;\n                    (0, log_1.logDebug)(`Engine ==> send => onAck => ${(0, safejson_1.safeJsonStringify)(event)}`);\n                    if (event && event.result) {\n                        (_a = requestAnswer.onAck) === null || _a === void 0 ? void 0 : _a.call(requestAnswer);\n                    }\n                });\n                if (requestAnswer.resolve) {\n                    this.bindRequestForPromise(requestId, requestAnswer.resolve);\n                }\n            }\n            catch (e) {\n                return Promise.reject(e);\n            }\n        });\n    }\n    sendSession(sessionInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('[Connect] sendSession called:', sessionInfo);\n            const requestId = this.getRequestId();\n            let request = {\n                method: 'session_info',\n                // 字段标识当前支持的最大协议版本\n                params: { protocolVersion: constants_1.CONNECT_PROTOCOL_VER, sessionInfo: sessionInfo }\n            };\n            yield this.connectionManager.sendRaw(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId })));\n        });\n    }\n    handleResponse(event, response) {\n        (0, log_1.logDebug)(`Engine ==>> handleResponse_1  ======>response: ${(0, safejson_1.safeJsonStringify)(response)}`, event);\n        if (\"requestId\" in response) {\n            (0, log_1.logDebug)(\"Engine ==>> handleResponse_2  ===> in response\");\n            let requestId = response.requestId;\n            const resolve = this.pendingRequests.get(requestId);\n            if (resolve) {\n                (0, log_1.logDebug)(\"Engine ==>> handleResponse_3  ===> find resolve:\", resolve);\n                resolve(response);\n                // 从pendingRequests中删除这个Promise\n                this.pendingRequests.delete(requestId);\n            }\n            else {\n                (0, log_1.logDebug)(\"Engine ==>> handleResponse_3  ===> not find resolve:\");\n                if (response.method === \"disconnect\") {\n                    this.disconnectListener.forEach(listener => listener());\n                    this.disconnectListener = [];\n                    this.disconnect();\n                }\n                else if (response.method === \"session_connecting\") {\n                    (0, log_1.logDebug)(\"Engine ==>> handleResponse_4  ===> sessionConnectingListener\");\n                    if (this.sessionConnectingListener) {\n                        (0, log_1.logDebug)(\"Engine ==>> handleResponse_4  ===> sessionConnectingListener not null\");\n                        this.sessionConnectingListener();\n                        this.sessionConnectingListener = undefined;\n                    }\n                }\n            }\n        }\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.restoreConnect(sessionInfo.topic));\n            onConnectResult(sessionInfo);\n        });\n    }\n    conect(request, sessionConfig, onConnectResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            const connectInfo = this.connectionManager.getConnectInfo();\n            const requestId = this.getRequestId();\n            let openUniversalLink = (_a = sessionConfig.openUniversalUrl) !== null && _a !== void 0 ? _a : false;\n            const connectRequest = {\n                protocolVer: Number(protocol_1.tonConnectSdkVersion),\n                topic: connectInfo.channelId,\n                clientId: connectInfo.clientId,\n                requestId: requestId,\n                dAppInfo: sessionConfig.dappInfo,\n                requests: request,\n            };\n            const connectRequestStr = JSON.stringify(connectRequest);\n            const utf8Array = new TextEncoder().encode(connectRequestStr);\n            const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n            const deeplinkUrl = `${protocol_1.standardDeeplink}?param=${base64Encoded}`;\n            (0, log_1.logDebug)('engine ==>> connect ==>>deeplinkUrl:', deeplinkUrl);\n            const isIOS = (0, utils_2.isIos)();\n            (0, log_1.logDebug)(`engine ==>> connect ==>>isIOS: ${isIOS}   openUniversalLink: ${openUniversalLink}`);\n            if (isIOS && openUniversalLink) {\n                (0, log_1.logDebug)('bridge-provider ==>> connect_3');\n                (0, utils_1.openOKXDeeplinkWithFallback)(deeplinkUrl);\n            }\n            yield ((_b = this.connectionManager) === null || _b === void 0 ? void 0 : _b.disconnect(false));\n            this.bindRequestForPromise(requestId, (response) => {\n                let session = this.onConnect(response, sessionConfig, connectInfo.channelId);\n                onConnectResult(session, response);\n            });\n            try {\n                yield this.connectionManager.connect();\n            }\n            catch (e) {\n                (0, log_1.logDebug)('Engine conect error', e);\n                throw e;\n            }\n            if (!isIOS && openUniversalLink) {\n                (0, log_1.logDebug)('bridge-provider ==>> connect_4');\n                (0, utils_1.openOKXDeeplinkWithFallback)(deeplinkUrl);\n            }\n            return {\n                connectInfo: connectInfo,\n                deeplinkUrl: (0, utils_1.getUniversalLink)(deeplinkUrl)\n            };\n        });\n    }\n    onConnect(connectResponse, sessionConfig, topic) {\n        if (connectResponse.method == \"connect\") {\n            let namespaces = (0, sessionUtils_1.buildNameSpacesByConnectResponse)(connectResponse);\n            // update connectManager protocol version\n            this.connectionManager.updateProtocolVersion(topic, connectResponse.payload.wallet.maxProtocolVersion);\n            if (namespaces) {\n                let session = {\n                    topic: topic,\n                    sessionConfig: sessionConfig,\n                    namespaces: namespaces\n                };\n                return session;\n            }\n        }\n        return null;\n    }\n    universalConnect(request, sessionConfig, connectInfoAndUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b, _c, _d, _e;\n                try {\n                    (0, log_1.logDebug)(\"engine universalConnect request :\", JSON.stringify(request));\n                    (0, log_1.logDebug)(\"engine universalConnect sessionConfig :\", JSON.stringify(sessionConfig));\n                    let tonRequest = [];\n                    let universalRequest = [];\n                    request.forEach((item) => {\n                        let name = item.name;\n                        if (name.startsWith(\"requestAccounts\")) {\n                            universalRequest.push(item);\n                        }\n                        else if (name.startsWith(\"ton\")) {\n                            tonRequest.push(item);\n                        }\n                    });\n                    (0, log_1.logDebug)(\"engine universalConnect tonRequest :\", JSON.stringify(tonRequest));\n                    (0, log_1.logDebug)(\"engine universalConnect universalRequest :\", JSON.stringify(universalRequest));\n                    const connectInfo = this.connectionManager.getConnectInfo();\n                    const requestId = this.getRequestId();\n                    let openUniversalLink = (_a = sessionConfig.openUniversalUrl) !== null && _a !== void 0 ? _a : false;\n                    const universalConnectRequest = {\n                        protocolVer: Number(protocol_1.tonConnectSdkVersion),\n                        topic: connectInfo.channelId,\n                        clientId: connectInfo.clientId,\n                        requestId: requestId,\n                        dAppInfo: sessionConfig.dappInfo,\n                        requests: universalRequest,\n                        redirect: (_b = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _b !== void 0 ? _b : \"none\"\n                    };\n                    const base64Encoded = (0, url_1.encodeConnectParams)(universalConnectRequest);\n                    universalConnectRequest.redirect = (_c = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _c !== void 0 ? _c : \"none\";\n                    const tonConnectRequest = {\n                        protocolVer: Number(protocol_1.tonConnectSdkVersion),\n                        topic: connectInfo.channelId,\n                        clientId: connectInfo.clientId,\n                        requestId: requestId,\n                        dAppInfo: sessionConfig.dappInfo,\n                        requests: tonRequest,\n                        redirect: (_d = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _d !== void 0 ? _d : \"none\"\n                    };\n                    let isFromTonSDK = false;\n                    if (tonRequest.length > 0) { //from tonsdk\n                        isFromTonSDK = true;\n                    }\n                    let defaultConnectRequest = isFromTonSDK ? tonConnectRequest : universalConnectRequest;\n                    (0, log_1.logDebug)('engine universalConnect ==>>defaultConnectRequest:', isFromTonSDK, JSON.stringify(defaultConnectRequest));\n                    var openOKXLink = \"\";\n                    // open app wallet\n                    if (openUniversalLink) {\n                        openOKXLink = (0, url_1.getOKXLink)(defaultConnectRequest, sessionConfig.useMini, sessionConfig.tmaReturnUrl);\n                        (0, log_1.logDebug)('engine universalConnect ==>>openOKXLink:', openOKXLink);\n                    }\n                    const openMethod = () => sessionConfig.useMini ? (0, url_1.openOKXTMAWalletlinkWithFallback)(openOKXLink) :\n                        (0, utils_1.useShortLink)() ? (0, utils_1.openOKXUniversalLink)(openOKXLink) : (0, utils_1.openOKXDeeplinkWithFallback)(openOKXLink);\n                    (0, log_1.logDebug)('engine universalConnect ==>>openOKXLink:', openOKXLink);\n                    const isIOS = (0, utils_2.isIos)();\n                    if (isIOS && openUniversalLink) {\n                        (0, log_1.logDebug)(`engine universalConnect ==>>isIOS: ${isIOS}   openUniversalLink: ${openUniversalLink}`);\n                        openMethod();\n                    }\n                    yield ((_e = this.connectionManager) === null || _e === void 0 ? void 0 : _e.disconnect(false));\n                    this.bindRequestForPromise(requestId, (response) => {\n                        var _a, _b, _c, _d;\n                        try {\n                            let connectResponse = response;\n                            if (connectResponse.method == \"connect\") {\n                                this.connectionManager.updateProtocolVersion(defaultConnectRequest.topic, connectResponse.payload.wallet.maxProtocolVersion);\n                                (0, log_1.logDebug)(\"engin  universalConnect success connectResponse:>>>\", JSON.stringify(connectResponse));\n                                let namespaces = (0, sessionUtils_1.buildNameSpacesByConnectResponse)(connectResponse);\n                                if (namespaces) {\n                                    let walletName = undefined;\n                                    if (((_b = (_a = connectResponse.payload) === null || _a === void 0 ? void 0 : _a.responses) === null || _b === void 0 ? void 0 : _b[0]) && \"walletName\" in connectResponse.payload.responses[0]) {\n                                        walletName = connectResponse.payload.responses[0]['walletName'];\n                                    }\n                                    let session = {\n                                        topic: connectInfo.channelId,\n                                        sessionConfig: sessionConfig,\n                                        namespaces: namespaces,\n                                        wallet: Object.assign(Object.assign({}, (_c = connectResponse.payload) === null || _c === void 0 ? void 0 : _c.wallet), { walletName: walletName }),\n                                    };\n                                    let methodsResponse = connectResponse.payload.responses.find(item => item.name === 'requestAccounts');\n                                    if (methodsResponse && methodsResponse.connectRequestMethods) {\n                                        session.signResponse = methodsResponse.connectRequestMethods;\n                                    }\n                                    (0, log_1.logDebug)(\"engin  universalConnect success session:>>>\", JSON.stringify(session));\n                                    resolve(session);\n                                }\n                                else {\n                                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n                                }\n                            }\n                            else if (connectResponse.method == \"connect_error\" && ((_d = connectResponse.payload) === null || _d === void 0 ? void 0 : _d.code)) {\n                                throw new protocol_1.OKXConnectError(connectResponse.payload.code);\n                            }\n                        }\n                        catch (e) {\n                            reject(e);\n                        }\n                    });\n                    try {\n                        yield this.connectionManager.connect();\n                    }\n                    catch (e) {\n                        (0, log_1.logDebug)('Engine universalConnect error', e);\n                        throw e;\n                    }\n                    if (!isIOS && openUniversalLink) {\n                        openMethod();\n                    }\n                    (0, log_1.logDebug)('engin  universalConnect ==>> connectInfoAndUrl:', connectInfoAndUrl);\n                    this.sendSession(base64Encoded);\n                    if (connectInfoAndUrl) {\n                        const info = {\n                            connectRequest: universalConnectRequest,\n                            redirect: sessionConfig.redirect,\n                            tmaReturnUrl: sessionConfig.tmaReturnUrl,\n                        };\n                        if (isFromTonSDK) {\n                            info.tonConnectRequest = tonConnectRequest;\n                        }\n                        (0, log_1.logDebug)(\"universalConnect connectInfoAndUrl info :\", JSON.stringify(info));\n                        connectInfoAndUrl(info);\n                    }\n                }\n                catch (error) {\n                    (0, log_1.logDebug)(\"Engine universalConnect catch error\", error);\n                    reject(error);\n                }\n            }));\n        });\n    }\n}\nexports.Engine = Engine;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = exports.Engine = exports.WalletConnectionManager = exports.ConnectionManager = exports.OKXWalletConnector = void 0;\nvar connect_1 = require(\"./connect\");\nObject.defineProperty(exports, \"OKXWalletConnector\", { enumerable: true, get: function () { return connect_1.OKXWalletConnector; } });\nvar connectionManager_1 = require(\"./connectionManager\");\nObject.defineProperty(exports, \"ConnectionManager\", { enumerable: true, get: function () { return connectionManager_1.ConnectionManager; } });\nvar walletConnectionManager_1 = require(\"./walletConnectionManager\");\nObject.defineProperty(exports, \"WalletConnectionManager\", { enumerable: true, get: function () { return walletConnectionManager_1.WalletConnectionManager; } });\nvar engine_1 = require(\"./engine\");\nObject.defineProperty(exports, \"Engine\", { enumerable: true, get: function () { return engine_1.Engine; } });\nvar storage_1 = require(\"./storage\");\nObject.defineProperty(exports, \"Storage\", { enumerable: true, get: function () { return storage_1.Storage; } });\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MULTICODEC_ED25519_LENGTH = exports.MULTICODEC_ED25519_HEADER = exports.MULTICODEC_ED25519_BASE = exports.MULTICODEC_ED25519_ENCODING = exports.DID_METHOD = exports.DID_PREFIX = exports.DID_DELIMITER = exports.KEY_PAIR_SEED_LENGTH = exports.DATA_ENCODING = exports.JSON_ENCODING = exports.JWT_ENCODING = exports.JWT_DELIMITER = exports.JWT_IRIDIUM_TYP = exports.JWT_IRIDIUM_ALG = exports.JWTHeaderType = void 0;\nexports.generateKeyPair = generateKeyPair;\nexports.decodeJSON = decodeJSON;\nexports.encodeJSON = encodeJSON;\nexports.encodeIss = encodeIss;\nexports.decodeIss = decodeIss;\nexports.encodeSig = encodeSig;\nexports.decodeSig = decodeSig;\nexports.encodeData = encodeData;\nexports.decodeData = decodeData;\nexports.encodeJWT = encodeJWT;\nexports.decodeJWT = decodeJWT;\nexports.signJWT = signJWT;\nexports.verifyJWT = verifyJWT;\nconst ed25519 = __importStar(require(\"@stablelib/ed25519\"));\nconst safejson_1 = require(\"../utils/safejson\");\nconst utils_1 = require(\"../utils/utils\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst log = __importStar(require(\"../utils/log\"));\nconst stringUtils_1 = require(\"../utils/stringUtils\");\nexports.JWTHeaderType = \"dapp\";\nexports.JWT_IRIDIUM_ALG = \"EdDSA\";\nexports.JWT_IRIDIUM_TYP = \"JWT\";\nexports.JWT_DELIMITER = \".\";\nexports.JWT_ENCODING = \"base64url\";\nexports.JSON_ENCODING = \"utf8\";\nexports.DATA_ENCODING = \"utf8\";\nexports.KEY_PAIR_SEED_LENGTH = 32;\nexports.DID_DELIMITER = \":\";\nexports.DID_PREFIX = \"did\";\nexports.DID_METHOD = \"key\";\nexports.MULTICODEC_ED25519_ENCODING = \"base58btc\";\nexports.MULTICODEC_ED25519_BASE = \"z\";\nexports.MULTICODEC_ED25519_HEADER = \"K36\";\nexports.MULTICODEC_ED25519_LENGTH = 32;\nfunction generateKeyPair() {\n    // let local_seed = randomBytes(KEY_PAIR_SEED_LENGTH)\n    // return ed25519.generateKeyPairFromSeed(local_seed);\n    return tweetnacl_1.default.sign.keyPair();\n}\nfunction decodeJSON(str) {\n    return (0, safejson_1.safeJsonParse)((0, stringUtils_1.okxtoString)((0, stringUtils_1.okxfromString)(str, exports.JWT_ENCODING), exports.JSON_ENCODING));\n}\nfunction encodeJSON(val) {\n    return (0, stringUtils_1.okxtoString)((0, stringUtils_1.okxfromString)((0, safejson_1.safeJsonStringify)(val), exports.JSON_ENCODING), exports.JWT_ENCODING);\n}\nfunction encodeIss(publicKey) {\n    log.logDebug(`publicKey: ${(0, utils_1.toHexString)(publicKey)}`);\n    var publicKeyStr = (0, stringUtils_1.okxtoString)(publicKey, exports.MULTICODEC_ED25519_ENCODING);\n    return [exports.DID_PREFIX, exports.DID_METHOD, publicKeyStr].join(exports.DID_DELIMITER);\n}\nfunction decodeIss(issuer) {\n    const [prefix, method, multicodec] = issuer.split(exports.DID_DELIMITER);\n    if (prefix !== exports.DID_PREFIX || method !== exports.DID_METHOD) {\n        throw new Error(`Issuer must be a DID with method \"key\"`);\n    }\n    if (multicodec === undefined) {\n        throw new Error('multicodec is undefined');\n    }\n    const publicKey = (0, stringUtils_1.okxfromString)(multicodec, exports.MULTICODEC_ED25519_ENCODING);\n    if (publicKey === undefined || publicKey.length !== exports.MULTICODEC_ED25519_LENGTH) {\n        throw new Error(`Issuer must be a public key with length 32 bytes`);\n    }\n    return publicKey;\n}\n// ---------- Signature ----------------------------------------------- //\nfunction encodeSig(bytes) {\n    return (0, stringUtils_1.okxtoString)(bytes, exports.JWT_ENCODING);\n}\nfunction decodeSig(encoded) {\n    return (0, stringUtils_1.okxfromString)(encoded, exports.JWT_ENCODING);\n}\n// ---------- Data ----------------------------------------------- //\nfunction encodeData(params) {\n    return (0, stringUtils_1.okxfromString)([encodeJSON(params.header), encodeJSON(params.payload)].join(exports.JWT_DELIMITER), exports.DATA_ENCODING);\n}\nfunction decodeData(data) {\n    var _a, _b;\n    const params = (0, stringUtils_1.okxtoString)(data, exports.DATA_ENCODING).split(exports.JWT_DELIMITER);\n    const header = decodeJSON((_a = params[0]) !== null && _a !== void 0 ? _a : '{}');\n    const payload = decodeJSON((_b = params[1]) !== null && _b !== void 0 ? _b : '{}');\n    return { header, payload };\n}\n// ---------- JWT ----------------------------------------------- //\nfunction encodeJWT(params) {\n    return [encodeJSON(params.header), encodeJSON(params.payload), encodeSig(params.signature)].join(exports.JWT_DELIMITER);\n}\nfunction decodeJWT(jwt) {\n    var _a, _b, _c;\n    const params = jwt.split(exports.JWT_DELIMITER);\n    const header = decodeJSON((_a = params[0]) !== null && _a !== void 0 ? _a : '{}');\n    const payload = decodeJSON((_b = params[1]) !== null && _b !== void 0 ? _b : '{}');\n    const signature = decodeSig((_c = params[2]) !== null && _c !== void 0 ? _c : '{}');\n    const data = (0, stringUtils_1.okxfromString)(params.slice(0, 2).join(exports.JWT_DELIMITER), exports.DATA_ENCODING);\n    return { header, payload, signature, data };\n}\nfunction signJWT(sub_1, aud_1, ttl_1, keyPair_1) {\n    return __awaiter(this, arguments, void 0, function* (sub, aud, ttl, keyPair, iat = Math.floor(Date.now())) {\n        const header = { alg: exports.JWT_IRIDIUM_ALG, typ: exports.JWT_IRIDIUM_TYP };\n        const iss = encodeIss(keyPair.publicKey);\n        const exp = iat + ttl;\n        const act = \"authenticate user\";\n        const payload = { iss, sub, aud, act, iat, exp };\n        const data = encodeData({ header, payload });\n        // const signature = ed25519.sign(keyPair.secretKey, data);\n        log.logDebug(`get sec kp: ${keyPair.secretKey} {${keyPair.secretKey.length}}`);\n        const signature = tweetnacl_1.default.sign.detached(data, keyPair.secretKey);\n        return encodeJWT({ header, payload, signature });\n    });\n}\nfunction verifyJWT(jwt) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { header, payload, data, signature } = decodeJWT(jwt);\n        if (header.alg !== exports.JWT_IRIDIUM_ALG || header.typ !== exports.JWT_IRIDIUM_TYP) {\n            throw new Error(\"JWT must use EdDSA algorithm\");\n        }\n        const publicKey = decodeIss(payload.iss);\n        return ed25519.verify(publicKey, data, signature);\n    });\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCONNECTOR_JWT_TTL = exports.OKXCONNECTOR_JWT_WALLET_SIDE = exports.OKXCONNECTOR_JWT_SIDE = void 0;\nexports.OKXCONNECTOR_JWT_SIDE = \"wallet\";\nexports.OKXCONNECTOR_JWT_WALLET_SIDE = \"dapp\";\nexports.OKXCONNECTOR_JWT_TTL = 86400000;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildNameSpacesByConnectResponse = buildNameSpacesByConnectResponse;\nexports.buildRequestAccountNameSpacesByConnectResponse = buildRequestAccountNameSpacesByConnectResponse;\nconst log_1 = require(\"../utils/log\");\nfunction buildNameSpacesByConnectResponse(connectResponse) {\n    let requestAccountNameSpaces = buildRequestAccountNameSpacesByConnectResponse(connectResponse);\n    return requestAccountNameSpaces;\n}\nfunction buildRequestAccountNameSpacesByConnectResponse(connectResponse) {\n    let result = {};\n    (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start connectResponse>>', JSON.stringify(connectResponse));\n    let universalResponse = connectResponse.payload.responses.find(item => item.name === 'requestAccounts');\n    const tonAddress = connectResponse.payload.responses.find(item => item.name === 'ton_addr');\n    const tonProof = connectResponse.payload.responses.find(item => item.name === 'ton_proof');\n    if (tonAddress && !universalResponse) { //adapt tonsdk\n        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse adapt ton data >>');\n        let address = tonAddress.address;\n        address = 'ton:' + tonAddress.network + \":\" + address;\n        let data = {\n            ton_addr: tonAddress\n        };\n        if (tonProof) {\n            data.ton_proof = tonProof;\n        }\n        universalResponse = {\n            name: \"requestAccounts\",\n            accounts: [{\n                    namespace: 'ton',\n                    addresses: [address],\n                    methods: ['ton_sendTransaction'],\n                    extra: {},\n                    data: data,\n                }]\n        };\n    }\n    (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse end universalResponse>>>', JSON.stringify(universalResponse));\n    universalResponse.accounts.forEach(item => {\n        var chains = [];\n        var accounts = [];\n        item.addresses.forEach(addressItem => {\n            var addressArr = addressItem.split(\":\");\n            (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse addressArr>>', addressArr.length);\n            if (addressArr.length >= 3) {\n                let chain = addressArr.slice(0, 2).join(\":\");\n                chains.push(chain);\n                accounts.push(addressItem);\n                (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse chain:>>', chain, \"addressItem:\", addressItem);\n            }\n        });\n        if (item.data && item.data.ton_addr) {\n            item.data.ton_addr.name = 'ton_addr';\n        }\n        if (item.data && item.data.ton_proof) {\n            item.data.ton_proof.name = 'ton_proof';\n        }\n        result[item.namespace] = {\n            chains: chains,\n            accounts: accounts,\n            methods: item.methods,\n            extra: item.extra,\n            payload: item.data\n        };\n        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse result>>', JSON.stringify(result));\n    });\n    return result;\n}\n/*export function buildTonNameSpaceByConnectResponse(connectResponse: ConnectResponseSuccess): Namespaces | undefined {\n    const tonAddrItem: TonAddressItemReply = connectResponse.payload.responses.find(\n        item => item.name === 'ton_addr'\n    ) as TonAddressItemReply;\n\n    const tonProfItem: TonProofItemReply = connectResponse.payload.responses.find(\n        item => item.name === 'ton_proof'\n    ) as TonProofItemReply;\n\n    if (!tonAddrItem) {\n        return undefined\n    }\n\n    return {\n        NameSpaceKeyTON: {\n            chains: [tonAddrItem.network],\n            accounts: [],\n            methods: connectResponse.payload.wallet.features?.ton,\n            payload: {\n                tonAccount: {\n                    address: tonAddrItem.address,\n                    chain: tonAddrItem.network,\n                    walletStateInit: tonAddrItem.walletStateInit,\n                    publicKey: tonAddrItem.publicKey\n                },\n                tonProof: tonProfItem\n            }\n        }\n    }\n}*/\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = void 0;\nconst storageconstants_1 = require(\"./storageconstants\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst utils_1 = require(\"../utils/utils\");\nconst utils_2 = require(\"../utils\");\nconst log = __importStar(require(\"../utils/log\"));\nconst utils_3 = require(\"../utils\");\nconst crypto_js_1 = require(\"crypto-js\");\nclass Storage {\n    constructor(subKey, beforeKey = undefined) {\n        const localStorage = (0, utils_1.resolveLocalStorage)();\n        // 0. check and upgrade beforeKey\n        log.logDebug('------ update before cache ------');\n        if (beforeKey) {\n            this.checkAndUpgradeCache(beforeKey, subKey);\n        }\n        // 1. load data from local storage\n        this.storeKey = '';\n        this.cipherIV = '';\n        this.subKey = subKey;\n        log.logDebug('--------get current local storage --------');\n        log.logDebug(localStorage);\n        const cacheStr = localStorage.getItem(Storage.cacheKey + subKey);\n        if (typeof cacheStr === \"undefined\" || cacheStr === null) {\n            log.logDebug(\"with no cache\");\n            this.cache = {};\n            return;\n        }\n        log.logDebug(cacheStr);\n        if ((cacheStr === null || cacheStr === void 0 ? void 0 : cacheStr.length) > 0) {\n            var cacheObj = (0, utils_2.safeJsonParse)(cacheStr);\n            this.cache = cacheObj;\n        }\n        log.logDebug(`get cache obj: ${this.cache}`);\n        if (typeof this.cache === 'undefined' || this.cache == null) {\n            this.cache = {};\n        }\n    }\n    checkAndUpgradeCache(fromCacheKey, toCacheKey) {\n        if (fromCacheKey && fromCacheKey.length > 0 && toCacheKey && toCacheKey.length > 0) {\n            // 1. get all infos from from-cache-key\n            log.logDebug('--------get current local storage --------');\n            log.logDebug(localStorage);\n            const cacheStr = localStorage.getItem(Storage.cacheKey + fromCacheKey);\n            if (typeof cacheStr === \"undefined\" || cacheStr === null) {\n                log.logDebug(\"no pre cache content\");\n                return;\n            }\n            log.logDebug(cacheStr);\n            if ((cacheStr === null || cacheStr === void 0 ? void 0 : cacheStr.length) > 0) {\n                // 2. save to to-cache-key\n                log.logDebug(\"write in cache content: \", fromCacheKey, '->', toCacheKey);\n                localStorage.setItem(Storage.cacheKey + toCacheKey, cacheStr);\n                // 3. clean from item\n                log.logDebug(\"clean in cache content: \", fromCacheKey);\n                localStorage.removeItem(Storage.cacheKey + fromCacheKey);\n            }\n        }\n        else {\n            log.logDebug('no pre cache key:', fromCacheKey);\n        }\n    }\n    saveContent(content, key, id = '-') {\n        let item = {\n            id: id,\n            timestamp: Date.now().toString(),\n            content: content\n        };\n        this.saveItem(item, key);\n    }\n    saveItem(item, key) {\n        let localKey = Storage.cacheKey + this.subKey;\n        const localStorage = (0, utils_1.resolveLocalStorage)();\n        log.logDebug(this.cache);\n        log.logDebug(`get cache obj: ${this.cache}, ${key}, ${item}`);\n        this.cache[key] = item;\n        let totalCacheStr = (0, utils_2.safeJsonStringify)(this.cache);\n        log.logDebug(`STORAGE: ${key} @ ${this.cache}`);\n        localStorage.setItem(localKey, totalCacheStr);\n    }\n    getItem(key) {\n        log.logDebug(`STORAGE >> getItem: ${key} @ ${this.cache}`);\n        return this.cache[key];\n    }\n    getCachedPBKDF2InfoKey() {\n        var _a, _b, _c, _d;\n        const pwLen = 32;\n        const saltLen = 24;\n        if (this.storeKey.length > 0 && ((_a = this.cipherIV) === null || _a === void 0 ? void 0 : _a.length) > 0) {\n            return {\n                pw: this.storeKey,\n                iv: this.cipherIV\n            };\n        }\n        let salt = (_b = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGER_CRYPTO_SALT)) === null || _b === void 0 ? void 0 : _b.content;\n        if (!salt) {\n            salt = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(saltLen));\n            this.saveContent(salt, storageconstants_1.OKXCONNECTOR_STORAGER_CRYPTO_SALT);\n        }\n        let pw = (_c = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD)) === null || _c === void 0 ? void 0 : _c.content;\n        if (!pw) {\n            pw = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(pwLen));\n            this.saveContent(pw, storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD);\n        }\n        let cipherIV = (_d = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV)) === null || _d === void 0 ? void 0 : _d.content;\n        if (!cipherIV) {\n            // let ivBuffer = Buffer.from(nacl.randomBytes(16))\n            let ivBuffer = tweetnacl_1.default.randomBytes(16);\n            cipherIV = (0, utils_1.toHexString)(ivBuffer);\n            this.saveContent(cipherIV, storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV);\n        }\n        this.cipherIV = cipherIV;\n        this.storeKey = (0, crypto_js_1.PBKDF2)(pw, salt, { iterations: 10 }).toString();\n        return {\n            pw: this.storeKey,\n            iv: this.cipherIV\n        };\n    }\n    encryptStoreMsg(msg, key) {\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg start ${Date.now()}`);\n        let storeInfo = this.getCachedPBKDF2InfoKey();\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg mid ${Date.now()}`);\n        var result = crypto_js_1.AES.encrypt(msg, storeInfo.pw).toString();\n        this.saveContent(result, key);\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg end ${Date.now()}`);\n    }\n    getAndDecrypt(key) {\n        (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt start ${Date.now()}`);\n        let item = this.getItem(key);\n        if (item && item.content) {\n            let storeInfo = this.getCachedPBKDF2InfoKey();\n            (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt mid ${Date.now()}`);\n            let result = crypto_js_1.AES.decrypt(item.content, storeInfo.pw).toString(crypto_js_1.enc.Utf8);\n            (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt end ${Date.now()}`);\n            return result;\n        }\n        return null;\n    }\n    clearCache(key = undefined) {\n        if (key === undefined) {\n            // clean all\n            this.cache = {};\n            let localKey = Storage.cacheKey + this.subKey;\n            localStorage.setItem(localKey, '');\n        }\n        else {\n            let localKey = Storage.cacheKey + this.subKey;\n            const localStorage = (0, utils_1.resolveLocalStorage)();\n            log.logDebug(this.cache);\n            this.cache[key] = null;\n            let totalCacheStr = (0, utils_2.safeJsonStringify)(this.cache);\n            log.logDebug(`STORAGE: clean key ${key} @ ${this.cache}`);\n            localStorage.setItem(localKey, totalCacheStr);\n        }\n    }\n}\nexports.Storage = Storage;\nStorage.cacheKey = 'OKXStorageKey';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCONNECTOR_STORAGE_PROTOCOL_CACHE = exports.OKXCONNECTOR_STORAGE_CIPHER_METHOD = exports.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV = exports.OKXCONNECTOR_STORAGER_CRYPTO_SALT = exports.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD = exports.OKXCONNECTOR_TON_KEY = exports.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE = exports.OKXCONNECTOR_TOKEN_CACHE = exports.OKXCONNECTOR_JWT_KEY = exports.OKXCONNECTOR_SESSION_PREFIX_KEY = exports.OKXCONNECTOR_CRYPTO_KEY = exports.OKXCONNECTOR_CACHE_KEY_DAPP = exports.OKXCONNECTOR_CACHE_KEY = void 0;\nexports.OKXCONNECTOR_CACHE_KEY = \"ck\";\nexports.OKXCONNECTOR_CACHE_KEY_DAPP = \"ck_dapp\";\nexports.OKXCONNECTOR_CRYPTO_KEY = \"cck_k\";\nexports.OKXCONNECTOR_SESSION_PREFIX_KEY = \"cspk_\";\nexports.OKXCONNECTOR_JWT_KEY = \"cjk_k\";\nexports.OKXCONNECTOR_TOKEN_CACHE = \"ct\";\nexports.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE = \"csp\";\nexports.OKXCONNECTOR_TON_KEY = \"OKXStorage_ctc\";\nexports.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD = \"scp\";\nexports.OKXCONNECTOR_STORAGER_CRYPTO_SALT = \"scs\";\nexports.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV = \"scpc\";\nexports.OKXCONNECTOR_STORAGE_CIPHER_METHOD = \"aes-256-cbc\";\nexports.OKXCONNECTOR_STORAGE_PROTOCOL_CACHE = 'okx_connect_split_cache_key';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnectionManagerEvent = exports.WalletConnectionManagerTopicInfoCacheKey = void 0;\nexports.WalletConnectionManagerTopicInfoCacheKey = \"wcmtic\";\nexports.WalletConnectionManagerEvent = {\n    RECEIVE_REQUEST: \"payload\"\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnectionManager = void 0;\nconst connect_1 = require(\"./connect\");\nconst commands_1 = require(\"./commands\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst jwtconstants_1 = require(\"./jwtconstants\");\nconst constants_1 = require(\"./constants\");\nconst walletConnectionConstants_1 = require(\"./walletConnectionConstants\");\nconst connectionSplitPackages_1 = require(\"./connectionSplitPackages\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils/utils\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst jwt_1 = require(\"./jwt\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst utils_2 = require(\"../utils\");\nclass WalletConnectionManager {\n    constructor() {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.communicateEvents = new eventemitter3_1.EventEmitter();\n        this.splitManager = new connectionSplitPackages_1.ConnectionSplitPackages('wallet');\n        log.logDebug('connect manager construct');\n        // local storage\n        this.connectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n        this.jwtKeyPair = this.getCachedJWTKeyPair();\n        this.saveJWTKeyPair(this.jwtKeyPair);\n        // wss connection\n        this.connector = new connect_1.OKXWalletConnector(constants_1.OKXCONNECTOR_WS_URL_1);\n        this.packageId = Date.now();\n        // connection state\n        this.sessionCryptoInfoMap = new Map();\n        // log.logDebug(`this.connectedWalletPK  constructor   ${this.connectedWalletPK}`)\n        this.inLogin = false;\n        this.isLogined = false;\n    }\n    refreshPackageId(offset = 0) {\n        let nowDate = Date.now() + offset;\n        if (nowDate == this.packageId) {\n            this.packageId = nowDate + 1;\n        }\n        this.packageId = nowDate;\n    }\n    saveCryptoKeyPair(topicId, keyPair) {\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(keyPair);\n        // encrypt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_CRYPTO_KEY + topicId);\n    }\n    getCachedCryptoKeyPair(topicId) {\n        // decrypt kp\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_CRYPTO_KEY + topicId);\n        const content = kp;\n        if (typeof content == 'string') {\n            log.logDebug('get cached crypto key:');\n            log.logDebug(content);\n            let keyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            return keyPairInfo;\n        }\n        else {\n            this.connectStorage.clearCache();\n        }\n        return null;\n    }\n    saveJWTKeyPair(keyPair) {\n        var strkeyPair = {\n            publicKey: (0, utils_1.toHexString)(keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(keyPair.secretKey)\n        };\n        log.logDebug('save jwt kp');\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(strkeyPair);\n        log.logDebug(cacheInfo);\n        // encrypt jwt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        log.logDebug('after save jwt kp');\n    }\n    getCachedJWTKeyPair() {\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            // TODO: decrypt jwt kp\n            log.logDebug('get cached jwt kp:');\n            log.logDebug(content);\n            let strKeyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            log.logDebug('save jwt kp');\n            log.logDebug(strKeyPairInfo);\n            var keyPair = {\n                publicKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.publicKey),\n                secretKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.secretKey)\n            };\n            return keyPair;\n        }\n        else {\n            return (0, jwt_1.generateKeyPair)();\n        }\n    }\n    isTopicPublicKeyExist(topicId) {\n        log.logDebug(`isTopicPublicKeyExist  ===> ${topicId}`);\n        return this.sessionCryptoInfoMap.get(topicId);\n    }\n    makeJWT(timestampStr) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, jwt_1.signJWT)(timestampStr, jwtconstants_1.OKXCONNECTOR_JWT_WALLET_SIDE, jwtconstants_1.OKXCONNECTOR_JWT_TTL, // 24h\n            this.jwtKeyPair);\n        });\n    }\n    parseInternalMsg(internalMsg) {\n        try {\n            let internalObj = (0, safejson_1.safeJsonParse)(internalMsg);\n            let origin = internalObj['ivur-igbfft-ptjip'];\n            if (origin && origin.length > 0) {\n                let originContent = (0, utils_2.base64decode)(origin, true);\n                return originContent.toString();\n            }\n        }\n        catch (error) {\n            log.logError('parse internal msg', error);\n        }\n    }\n    updateClientId(topic, clientId) {\n        let sessionInfo = this.sessionCryptoInfoMap.get(topic);\n        (0, log_1.logDebug)('updateClientId', sessionInfo, topic, clientId);\n        if (sessionInfo && clientId && clientId.length > 0) {\n            if (sessionInfo.cid) {\n                // check\n                let lastCheck = (0, utils_1.getLastSixMd5Hash)(clientId);\n                if (sessionInfo.cid == lastCheck) {\n                    sessionInfo.dappPublicKey = clientId;\n                }\n                else {\n                    log.logError('cid check failed', sessionInfo, topic, clientId);\n                }\n            }\n            else {\n                sessionInfo.dappPublicKey = clientId;\n            }\n            // \n            this.syncCacheSessionInfo();\n        }\n        return false;\n    }\n    parsePackage(topic_1, input_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, input, ignoreACK = false) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s;\n            this.events.emit(input.id, input);\n            // emit event\n            let sessionInfo = this.sessionCryptoInfoMap.get(topic);\n            log.logDebug('get sessionInfo for decrypt topic:', topic);\n            log.logDebug('get sessionInfo for decrypt:', input.id, topic, sessionInfo, this.sessionCryptoInfoMap);\n            let ignoreReceive = false;\n            if (sessionInfo && input.params.data) {\n                if ((_a = input.params.data) === null || _a === void 0 ? void 0 : _a.message) {\n                    // try parse internal message\n                    if ((_b = input.params.data) === null || _b === void 0 ? void 0 : _b.isInternalData) {\n                        let inner_message = (_c = input.params.data) === null || _c === void 0 ? void 0 : _c.message;\n                        let inner_topic = (_d = input.params.data) === null || _d === void 0 ? void 0 : _d.topic;\n                        let originContent = this.parseInternalMsg(inner_message);\n                        (0, log_1.logDebug)('parse internal origin: ', originContent);\n                        if (originContent && originContent.length > 0) {\n                            this.communicateEvents.emit(\"origin\", originContent, inner_topic);\n                        }\n                    }\n                    else {\n                        // try parse message base64\n                        try {\n                            let message = (_e = input.params.data) === null || _e === void 0 ? void 0 : _e.message;\n                            if (message.trimStart().startsWith('{')) {\n                                // 判断是否是分包数据\n                                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(message);\n                                if (msgPlayloadObject) {\n                                    (0, log_1.logDebug)('parse split msg object: ', msgPlayloadObject);\n                                    // 屏蔽后续的receive逻辑\n                                    ignoreReceive = true;\n                                    let msgObject = {\n                                        topicId: (_g = (_f = input.params) === null || _f === void 0 ? void 0 : _f.data) === null || _g === void 0 ? void 0 : _g.topic,\n                                        messageId: (_j = (_h = input.params) === null || _h === void 0 ? void 0 : _h.data) === null || _j === void 0 ? void 0 : _j.messageId,\n                                        messageObject: msgPlayloadObject,\n                                        publishedAt: (_l = (_k = input.params) === null || _k === void 0 ? void 0 : _k.data) === null || _l === void 0 ? void 0 : _l.publishedAt,\n                                    };\n                                    let checkResult = yield this.splitManager.onReceivedPackageCheck(msgObject);\n                                    if (checkResult.completeMessageIdList) {\n                                        checkResult.completeMessageIdList.forEach((msgId) => __awaiter(this, void 0, void 0, function* () {\n                                            // 发送批量receive\n                                            this.refreshPackageId();\n                                            yield this.sendReceive(this.packageId.toString(), msgId, topic);\n                                        }));\n                                    }\n                                    // 抛出finalmessage\n                                    if (checkResult.finalMessage) {\n                                        let message = sessionInfo.crypto.decryptWallet(checkResult.finalMessage, sessionInfo.dappPublicKey);\n                                        (0, log_1.logDebug)('<<< receive msg from split:', topic, message);\n                                        this.communicateEvents.emit(topic, message);\n                                    }\n                                }\n                                else {\n                                    let messageObj = (0, safejson_1.safeJsonParse)(message);\n                                    if (messageObj.method) {\n                                        if (messageObj.method == 'session_info') {\n                                            let sessionInfoString = messageObj.params.sessionInfo;\n                                            let base64Content = (0, utils_2.base64decode)(sessionInfoString, false);\n                                            (0, log_1.logDebug)(\"wallet connection manager requset base64Content:\", base64Content);\n                                            (0, log_1.logDebug)(\"base64Content:\" + base64Content);\n                                            let inner_connection = base64Content.toObject();\n                                            this.updateClientId(topic, inner_connection.clientId);\n                                        }\n                                        (0, log_1.logDebug)('<<< parse raw msg:', topic, messageObj);\n                                        this.communicateEvents.emit(topic, message);\n                                    }\n                                }\n                            }\n                            else {\n                                let message = sessionInfo.crypto.decryptWallet((_m = input.params.data) === null || _m === void 0 ? void 0 : _m.message, sessionInfo.dappPublicKey);\n                                (0, log_1.logDebug)('<<< receive msg:', topic, message);\n                                this.communicateEvents.emit(topic, message);\n                            }\n                        }\n                        catch (error) {\n                            let message = sessionInfo.crypto.decryptWallet((_o = input.params.data) === null || _o === void 0 ? void 0 : _o.message, sessionInfo.dappPublicKey);\n                            (0, log_1.logDebug)('<<< receive msg:', topic, message);\n                            this.communicateEvents.emit(topic, message);\n                        }\n                    }\n                }\n                else {\n                }\n            }\n            // send back ACK\n            if (!ignoreACK) {\n                yield this.sendACK(input.id, true);\n                if (topic && !ignoreReceive) {\n                    let inputObj = input;\n                    if ((_q = (_p = inputObj.params) === null || _p === void 0 ? void 0 : _p.data) === null || _q === void 0 ? void 0 : _q.messageId) {\n                        this.refreshPackageId();\n                        yield this.sendReceive(this.packageId.toString(), (_s = (_r = inputObj.params) === null || _r === void 0 ? void 0 : _r.data) === null || _s === void 0 ? void 0 : _s.messageId, topic);\n                    }\n                }\n            }\n        });\n    }\n    recovrySessionInfoFromCache() {\n        // get topic ids and keys from session\n        // WalletConnectionCryptoCacheMap\n        // {[topicId]: {cryptoKeypair: {publicKey:string, secretKey:string}, dappPublicKey:clientId}}\n        let jsonStr = this.connectStorage.getAndDecrypt(walletConnectionConstants_1.WalletConnectionManagerTopicInfoCacheKey);\n        log.logDebug('get cached sessionInfos:', jsonStr);\n        if (jsonStr) {\n            let cacheMap = (0, safejson_1.safeJsonParse)(jsonStr);\n            for (let topicId in cacheMap) {\n                let topicItem = cacheMap[topicId];\n                log.logDebug('make topicItem:', topicItem);\n                let cryptoItem = {\n                    topic: topicId,\n                    crypto: new crypto_1.SessionCrypto({\n                        publicKey: topicItem.cryptoKeyPair.publicKey,\n                        secretKey: topicItem.cryptoKeyPair.secretKey\n                    }),\n                    dappPublicKey: topicItem.dappPublicKey,\n                    cid: topicItem.cid\n                };\n                this.sessionCryptoInfoMap.set(topicId, cryptoItem);\n            }\n        }\n        log.logDebug('get cached sessionInfos map:', this.sessionCryptoInfoMap);\n    }\n    syncCacheSessionInfo() {\n        let cacheMap = {};\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            log.logDebug('for each Keys', topicId);\n            if (cryptoItem) {\n                cacheMap[topicId] = {\n                    cryptoKeyPair: cryptoItem.crypto.stringifyKeypair(),\n                    dappPublicKey: cryptoItem.dappPublicKey,\n                    cid: cryptoItem.cid\n                };\n            }\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(cacheMap);\n        log.logDebug('sync cache sessionInfos:', jsonData);\n        this.connectStorage.encryptStoreMsg(jsonData, walletConnectionConstants_1.WalletConnectionManagerTopicInfoCacheKey);\n    }\n    cacheSessionInfo(topic, sessionInfo, sync = true) {\n        let dappPublicKey = sessionInfo.dappPublicKey;\n        // 1. search dapp public related topic ids\n        let duplicatedTopics = [];\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            log.logDebug('for each Keys', topicId);\n            if (cryptoItem.dappPublicKey == dappPublicKey) {\n                log.logDebug('duplicated dapp public key:', topicId, dappPublicKey);\n                duplicatedTopics.push(topicId);\n            }\n        }\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            if (duplicatedTopics.includes(topicId)) {\n                this.sessionCryptoInfoMap.delete(topicId);\n            }\n        }\n        // discard useless topics\n        log.logDebug('cleaned connect session cache:', this.sessionCryptoInfoMap);\n        // 2. remove previous connected topic ids\n        // 3. write in current topic\n        this.sessionCryptoInfoMap.set(topic, sessionInfo);\n        // TODO: search domain info and then delete \n        log.logDebug('cache sessionInfo:', topic, sessionInfo, this.sessionCryptoInfoMap);\n        if (sync) {\n            this.syncCacheSessionInfo();\n        }\n        return duplicatedTopics;\n    }\n    updateProtocolVersion(topic, protocolVersion) {\n        this.splitManager.updateTopicSenderVersion(topic, protocolVersion);\n    }\n    // add and subscribe topic\n    appendTopic(topic, sessionPublicKey, cid) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('4.1. get append Topic:', topic);\n            // 1. check if connected\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.isLogined) {\n                    var error = new Error();\n                    error.message = \"connection is not logined\";\n                    error.name = \"append error\";\n                    // throw error\n                    reject(error);\n                    return;\n                }\n                // 2. subscribe topic and session public key\n                let cryptoItem = {\n                    topic: topic,\n                    crypto: new crypto_1.SessionCrypto(),\n                    dappPublicKey: sessionPublicKey ? sessionPublicKey : \"\",\n                    cid: cid\n                };\n                let duplicatedTopics = this.cacheSessionInfo(topic, cryptoItem, false);\n                // make sure cache session info before subscribe\n                yield this.subscribeTopics(Array.from([topic]));\n                this.refreshPackageId();\n                log.logDebug(`5. subscribe callback then fetch append message: ${this.packageId}, ${topic}`);\n                log.reportLog(`5. subscribe callback then fetch append message`);\n                const timeF = new Date().getTime();\n                (0, log_1.logDebug)(\"Append --subscribe callback->\", timeF - this.timeLog);\n                resolve(duplicatedTopics);\n            }));\n        });\n    }\n    confirmAppendingTopics() {\n        this.syncCacheSessionInfo();\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.timeLog = new Date().getTime();\n            (0, log_1.logDebug)(\"[Wallet] ConnectTime---enter->\", this.timeLog);\n            log.reportLog('wallet connect connect called');\n            // 0. get cached topics and infos\n            let timestampStr = Date.now().toString();\n            var jwtToken = yield this.makeJWT(timestampStr);\n            log.logDebug(`generate jwt token: ${jwtToken}`);\n            this.connectStorage.saveContent(jwtToken, 'jwt');\n            this.recovrySessionInfoFromCache();\n            // 1.\n            return new Promise((resolve, reject) => {\n                // 1. when websocket opened\n                this.inLogin = true;\n                this.connector.onOpen(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug(`1. connector on open`);\n                    log.reportLog('1. wallet connect connect on open');\n                    const timeOne = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---open->\", timeOne - this.timeLog);\n                    //2. send jwt to login\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when login');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // throw error\n                            reject(error);\n                        }\n                        else {\n                            this.isLogined = true;\n                            resolve();\n                            // 3. subscribe cached topics\n                            log.logDebug('3. subscribe cached topics', this.sessionCryptoInfoMap);\n                            log.reportLog('3. wallet connect connect subscribe cached topics');\n                            if (this.sessionCryptoInfoMap.size > 0) {\n                                yield this.subscribeTopics(Array.from(this.sessionCryptoInfoMap.keys()));\n                            }\n                        }\n                    }));\n                    log.logDebug(`2. login called`);\n                    log.reportLog('2. wallet connect login called');\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        return yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_LOGIN,\n                        params: {\n                            token: jwtToken\n                        }\n                    });\n                }));\n                this.connector.connect().catch((err) => {\n                    (0, log_1.logDebug)('WalletConnectionManager connect error', err);\n                    reject(err);\n                });\n                // add callback\n                this.connector.addPackageParse((event) => {\n                    var _a, _b;\n                    log.logDebug(`connect: parse package`);\n                    log.logDebug(event);\n                    if (!(\"params\" in event) || !(\"data\" in event[\"params\"])) {\n                        this.parsePackage(\"\", event, true);\n                        return;\n                    }\n                    // ignore receive echo\n                    if ((_a = event.params.data) === null || _a === void 0 ? void 0 : _a.topic) {\n                        this.parsePackage((_b = event.params.data) === null || _b === void 0 ? void 0 : _b.topic, event, event.method === commands_1.CONNECT_METHOD_RECEIVE);\n                    }\n                });\n                // this.connector.addListener(safeJsonStringify(event), (rawMsg: string)=> {\n                //    rawMsg = rawMsg.replace(/'/g, '\"')\n                //    log.logDebug(`addListener ===> ${rawMsg}`)\n                //    if (typeof rawMsg !== 'undefined') {\n                //       var msgObj = safeJsonParse(rawMsg)\n                //       var msg = msgObj.message\n                //       let crypto = \n                //       var result = this.crypto.decrypt(msg, this.connectedWalletPK)\n                //       log.logDebug(`addListener ===> ${result}`)\n                //       return result\n                //    }\n                //    return undefined\n                // }, ()=>{\n                //    // emit success\n                // }, ()=>{\n                //    // emit fail\n                // })\n            });\n        });\n    }\n    // 获取对应topic session下的钱包公钥\n    // 在返回approve时需要填充到clientId字段中\n    getSessionPublicKey(topicId) {\n        if (this.isTopicPublicKeyExist(topicId)) {\n            let item = this.sessionCryptoInfoMap.get(topicId);\n            if (item) {\n                return (0, utils_1.toHexString)(item.crypto.keyPair.publicKey);\n            }\n        }\n        return undefined;\n    }\n    getCurrentCachedTopicIdList() {\n        return Array.from(this.sessionCryptoInfoMap.keys());\n    }\n    disconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            yield this.connector.disconnect();\n            //clean cached topic\n            //如果是恢复连接，就不清理解密public key\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            if (!fromRestore) {\n                this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n            }\n        });\n    }\n    sendRaw(msg, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (topic) {\n                yield this.sendMsg(topic, msg, constants_1.OKXCONNECTOR_MESSAGE_TTL);\n            }\n        });\n    }\n    sendMsg(topic, message, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (message) {\n                this.refreshPackageId();\n                const payload = {\n                    id: this.packageId.toString(),\n                    method: commands_1.CONNECT_METHOD_PUBLISH,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    params: {\n                        message: {\n                            topic: topic,\n                            message: message,\n                            ttl: ttl\n                        }\n                    } // crypted\n                };\n                this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                    // ack\n                    if (rsp && rsp.error) {\n                        log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                    }\n                    else if (rsp && !rsp.error) {\n                        log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                    }\n                }));\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    send(topic_1, msg_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, msg, needPublicKey = false, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL, useRaw = false) {\n            var _a, _b;\n            // make send msg payload\n            log.logDebug(`message send =====> ${msg}`);\n            if (!this.isTopicPublicKeyExist(topic)) {\n                // channel not ready\n                throw new Error('connection not finish');\n            }\n            let connectedDappPK = (_a = this.sessionCryptoInfoMap.get(topic)) === null || _a === void 0 ? void 0 : _a.dappPublicKey;\n            let cryptoObject = (_b = this.sessionCryptoInfoMap.get(topic)) === null || _b === void 0 ? void 0 : _b.crypto;\n            let messageObj = undefined;\n            if (useRaw) {\n                messageObj = {\n                    message: msg,\n                };\n            }\n            let useCrypto = false;\n            if (cryptoObject && connectedDappPK && !useRaw) {\n                let message = cryptoObject.encryptWallet(msg, connectedDappPK);\n                useCrypto = true;\n                messageObj = {\n                    message: message,\n                };\n            }\n            if (messageObj) {\n                if (needPublicKey && cryptoObject) {\n                    messageObj.clientId = (0, utils_1.toHexString)(cryptoObject.keyPair.publicKey);\n                    // let privateKey = toHexString(cryptoObject.keyPair.secretKey)\n                    // log.logDebug(`message send use dapp publicKey =====> ${connectedDappPK}`)\n                    // log.logDebug(`message send use publicKey =====> ${messageObj.clientId}`)\n                    // log.logDebug(`message send use secretKey =====> ${privateKey}`)\n                }\n                let messageStr = (0, safejson_1.safeJsonStringify)(messageObj);\n                if (!useRaw && useCrypto) {\n                    yield this.splitManager.sendSplitPackages(topic, messageStr, this.sendMsg.bind(this), this.sendRaw.bind(this));\n                }\n                else {\n                    yield this.sendMsg(topic, messageStr, ttl);\n                }\n            }\n        });\n    }\n    sendACK(msgId_1, success_1) {\n        return __awaiter(this, arguments, void 0, function* (msgId, success, reason = undefined) {\n            if (success === true) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    result: true\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n            else if (reason) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    error: {\n                        code: reason.code, //int\n                        message: reason.message\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    // send receive\n    sendReceive(msgId, messageId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECEIVE,\n                params: {\n                    data: {\n                        messageId: messageId,\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendUnsubscribe(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: make disconnect payload\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), {\n                id: this.packageId.toString(),\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_UNSUB,\n                params: {\n                    topic: topic\n                }\n            });\n            // remove topicId\n            this.sessionCryptoInfoMap.delete(topic);\n            this.syncCacheSessionInfo();\n        });\n    }\n    // send receive\n    // 1. fetch all \n    // 2. send back receive\n    // 3. check has more, if so, repeat from 1st step\n    sendFetchAndConsumeMessages(msgId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(msgId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic == topic) {\n                                let messageId = msg.messageId;\n                                yield this.connector.getMsgPayloadFromHistory(msg);\n                                // send receive command to relay server\n                                this.refreshPackageId();\n                                yield this.sendReceive(this.packageId.toString(), messageId, topic);\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_FETCHMSG,\n                params: {\n                    data: {\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendBatchFetchAndConsumeMessages(packageId, topicIdList) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(packageId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic) {\n                                // send receive command to relay server\n                                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(msg.message);\n                                if (msgPlayloadObject) {\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                }\n                                else {\n                                    let messageId = msg.messageId;\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                    this.refreshPackageId(i);\n                                    yield this.sendReceive(this.packageId.toString(), messageId, msg.topic);\n                                }\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendBatchFetchAndConsumeMessages(this.packageId.toString(), topicIdList);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            log.reportLog('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: packageId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_BATCH_FETCHMSG,\n                params: {\n                    topics: topicIdList,\n                    withInternalData: true\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                yield this.connector.connect();\n            }), payload);\n        });\n    }\n    cleanCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.connectStorage.clearCache();\n        });\n    }\n    saveSessionContent(key, data) {\n        if (!data) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(data);\n        this.connectStorage.encryptStoreMsg(jsonData, storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n    }\n    getSessionContent(key) {\n        let jsonStr = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        if (jsonStr) {\n            let object = (0, safejson_1.safeJsonParse)(jsonStr);\n            return object;\n        }\n        return undefined;\n    }\n    // subscribe then fetch messages for each topics\n    subscribeTopics(topicIdList) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)(\"4. topicid list\", topicIdList);\n            log.reportLog(\"4. topicid list\");\n            this.refreshPackageId();\n            const timeF = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let finishCount = 0;\n                //3. send subscribe\n                for (let idx = 0; idx < topicIdList.length; ++idx) {\n                    let topicId = topicIdList[idx];\n                    this.refreshPackageId(idx);\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when subscribe');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // reject(error)\n                            finishCount += 1;\n                            if (finishCount == topicIdList.length) {\n                                resolve();\n                            }\n                        }\n                        this.refreshPackageId(idx);\n                        const timeF = new Date().getTime();\n                        (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n                        finishCount += 1;\n                        if (finishCount == topicIdList.length) {\n                            // 4. fetch messages\n                            log.logDebug(`5. send fetch msg: ${this.packageId}, ${topicId}`);\n                            yield this.sendBatchFetchAndConsumeMessages(this.packageId.toString(), topicIdList);\n                            // 5. split manager resend\n                            yield this.splitManager.init(this.sendRaw.bind(this));\n                            resolve();\n                        }\n                    }));\n                    log.logDebug(`3. login callback then send subscribe: ${this.packageId}, ${topicId}`);\n                    log.reportLog('3. login callback then send subscribe');\n                    const timeTh = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---login callback->\", timeTh - this.timeLog);\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        return yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_SUB,\n                        params: {\n                            topic: topicId\n                        }\n                    });\n                }\n            }));\n        });\n    }\n}\nexports.WalletConnectionManager = WalletConnectionManager;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SessionCrypto = void 0;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst utils_1 = require(\"../utils/utils\");\nclass SessionCrypto {\n    constructor(keyPair = undefined) {\n        this.nonceLength = 24;\n        this.sessionKeyPair = keyPair ? this.createKeypairFromString(keyPair) : this.createKeypair();\n    }\n    createKeypair() {\n        return tweetnacl_1.default.box.keyPair();\n    }\n    createKeypairFromString(keyPair) {\n        return {\n            publicKey: (0, utils_1.hexToByteArray)(keyPair.publicKey),\n            secretKey: (0, utils_1.hexToByteArray)(keyPair.secretKey),\n        };\n    }\n    createNonce() {\n        return tweetnacl_1.default.randomBytes(this.nonceLength);\n    }\n    get keyPair() {\n        return this.sessionKeyPair;\n    }\n    // dapp 加密:\n    // base64(hex（nonce+加密内容）)\n    encrypt(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl_1.default.box(encodedMessage, nonce, (0, utils_1.hexToByteArray)(receiverPublicKey), this.keyPair.secretKey);\n        let concatInfo = (0, utils_1.concatUint8Arrays)(nonce, encrypted);\n        var hexResult = (0, utils_1.toHexString)(concatInfo);\n        var encodedResult = new TextEncoder().encode(hexResult);\n        return (0, utils_1.base64encode)(encodedResult, false);\n    }\n    // 钱包加密内容\n    // 注意：没有中间hex的环节\n    // base64（nonce+加密内容)\n    encryptWallet(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl_1.default.box(encodedMessage, nonce, (0, utils_1.hexToByteArray)(receiverPublicKey), this.keyPair.secretKey);\n        let concatInfo = (0, utils_1.concatUint8Arrays)(nonce, encrypted);\n        return (0, utils_1.base64encode)(concatInfo, false);\n    }\n    // dapp 解密\n    // base64(split(nonce+加密内容))\n    decrypt(message, senderPublicKey) {\n        let base64Content = (0, utils_1.base64decode)(message, true);\n        let messageByteArray = base64Content.toUint8Array();\n        const [nonce, internalMessage] = (0, utils_1.splitToUint8Arrays)(messageByteArray, this.nonceLength);\n        const decrypted = tweetnacl_1.default.box.open(internalMessage, nonce, (0, utils_1.hexToByteArray)(senderPublicKey), this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${(0, utils_1.toHexString)(this.keyPair.publicKey)} \\n keypair secretkey: ${(0, utils_1.toHexString)(this.keyPair.secretKey)}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    // dapp 解密\n    // base64(hextoByte(split(nonce+加密内容)))\n    decryptWallet(message, senderPublicKey) {\n        let base64Content = (0, utils_1.base64decode)(message, true);\n        let messageByteArray = (0, utils_1.hexToByteArray)(base64Content.toString());\n        const [nonce, internalMessage] = (0, utils_1.splitToUint8Arrays)(messageByteArray, this.nonceLength);\n        const decrypted = tweetnacl_1.default.box.open(internalMessage, nonce, (0, utils_1.hexToByteArray)(senderPublicKey), this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${(0, utils_1.toHexString)(this.keyPair.publicKey)} \\n keypair secretkey: ${(0, utils_1.toHexString)(this.keyPair.secretKey)}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    stringifyKeypair() {\n        return {\n            publicKey: (0, utils_1.toHexString)(this.keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(this.keyPair.secretKey)\n        };\n    }\n}\nexports.SessionCrypto = SessionCrypto;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./connect\"), exports);\n__exportStar(require(\"./protocol\"), exports);\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IEngine = exports.ISignClient = exports.ISignClientEvents = exports.IEngineEvents = void 0;\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nclass IEngineEvents extends eventemitter3_1.default {\n    constructor() {\n        super();\n    }\n}\nexports.IEngineEvents = IEngineEvents;\nclass ISignClientEvents extends eventemitter3_1.default {\n    constructor() {\n        super();\n    }\n}\nexports.ISignClientEvents = ISignClientEvents;\nclass ISignClient {\n    constructor(data) {\n        this.data = data;\n    }\n}\nexports.ISignClient = ISignClient;\nclass IEngine {\n    constructor(client) {\n        this.client = client;\n    }\n}\nexports.IEngine = IEngine;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.creatOKXMiniAppWalletInfo = exports.creatOKXWalletInfo = exports.ISignClientEvents = exports.IEngine = exports.IEngineEvents = exports.ISignClient = exports.getBigIntRpcId = exports.formatJsonRpcRequest = exports.isJsonRpcError = exports.isJsonRpcResponse = exports.parseConnectionError = exports.isHttpUrl = exports.formatJsonRpcError = void 0;\nvar json_rpc_1 = require(\"./json-rpc\");\nObject.defineProperty(exports, \"formatJsonRpcError\", { enumerable: true, get: function () { return json_rpc_1.formatJsonRpcError; } });\nObject.defineProperty(exports, \"isHttpUrl\", { enumerable: true, get: function () { return json_rpc_1.isHttpUrl; } });\nObject.defineProperty(exports, \"parseConnectionError\", { enumerable: true, get: function () { return json_rpc_1.parseConnectionError; } });\nObject.defineProperty(exports, \"isJsonRpcResponse\", { enumerable: true, get: function () { return json_rpc_1.isJsonRpcResponse; } });\nObject.defineProperty(exports, \"isJsonRpcError\", { enumerable: true, get: function () { return json_rpc_1.isJsonRpcError; } });\nObject.defineProperty(exports, \"formatJsonRpcRequest\", { enumerable: true, get: function () { return json_rpc_1.formatJsonRpcRequest; } });\nObject.defineProperty(exports, \"getBigIntRpcId\", { enumerable: true, get: function () { return json_rpc_1.getBigIntRpcId; } });\nvar engine_1 = require(\"./engine\");\nObject.defineProperty(exports, \"ISignClient\", { enumerable: true, get: function () { return engine_1.ISignClient; } });\nObject.defineProperty(exports, \"IEngineEvents\", { enumerable: true, get: function () { return engine_1.IEngineEvents; } });\nObject.defineProperty(exports, \"IEngine\", { enumerable: true, get: function () { return engine_1.IEngine; } });\nObject.defineProperty(exports, \"ISignClientEvents\", { enumerable: true, get: function () { return engine_1.ISignClientEvents; } });\n__exportStar(require(\"./ton\"), exports);\nvar wallet_info_1 = require(\"./wallet-info\");\nObject.defineProperty(exports, \"creatOKXWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXWalletInfo; } });\nObject.defineProperty(exports, \"creatOKXMiniAppWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXMiniAppWalletInfo; } });\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isJsonRpcPayload = isJsonRpcPayload;\nexports.isJsonRpcRequest = isJsonRpcRequest;\nexports.isJsonRpcResponse = isJsonRpcResponse;\nexports.isJsonRpcResult = isJsonRpcResult;\nexports.isJsonRpcError = isJsonRpcError;\nexports.payloadId = payloadId;\nexports.getBigIntRpcId = getBigIntRpcId;\nexports.formatJsonRpcRequest = formatJsonRpcRequest;\nexports.formatJsonRpcResult = formatJsonRpcResult;\nexports.formatJsonRpcError = formatJsonRpcError;\nexports.isReservedErrorCode = isReservedErrorCode;\nexports.getError = getError;\nexports.getErrorByCode = getErrorByCode;\nexports.formatErrorMessage = formatErrorMessage;\nexports.isHttpUrl = isHttpUrl;\nexports.isWsUrl = isWsUrl;\nexports.parseConnectionError = parseConnectionError;\nfunction isJsonRpcPayload(payload) {\n    return (typeof payload === \"object\" &&\n        \"id\" in payload &&\n        \"jsonrpc\" in payload &&\n        payload.jsonrpc === \"2.0\");\n}\nfunction isJsonRpcRequest(payload) {\n    return isJsonRpcPayload(payload) && \"method\" in payload;\n}\nfunction isJsonRpcResponse(payload) {\n    return isJsonRpcPayload(payload) && (isJsonRpcResult(payload) || isJsonRpcError(payload));\n}\nfunction isJsonRpcResult(payload) {\n    return \"result\" in payload;\n}\nfunction isJsonRpcError(payload) {\n    return \"error\" in payload;\n}\nconst okx_connect_error_1 = require(\"../error/okx-connect.error\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nclass IncrementalRandomGenerator {\n    constructor(bits) {\n        this.i = 1;\n        const typedArray = bits === 8 ? new Uint8Array(1) : bits === 16 ? new Uint16Array(1) : new Uint32Array(1);\n        if (bits) {\n            this.initialValue = tweetnacl_1.default.randomBytes(bits / 8)[0];\n        }\n        else {\n            this.initialValue = 0;\n        }\n    }\n    getNextValue() {\n        return this.initialValue + this.i++;\n    }\n}\nconst uint8Generator = new IncrementalRandomGenerator(8);\nconst uint16Generator = new IncrementalRandomGenerator(16);\nfunction payloadId() {\n    const date = Date.now() * 1000;\n    const extra = uint8Generator.getNextValue();\n    return date + extra;\n}\nfunction getBigIntRpcId() {\n    const date = BigInt(Date.now()) * BigInt(1000000);\n    const extra = BigInt(uint16Generator.getNextValue());\n    return date + extra;\n}\nfunction formatJsonRpcRequest(method, params, id) {\n    return {\n        id: id || payloadId(),\n        jsonrpc: \"2.0\",\n        method,\n        params,\n    };\n}\nfunction formatJsonRpcResult(id, result) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        result,\n    };\n}\nfunction formatJsonRpcError(id, error, data) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        error: formatErrorMessage(error, data),\n    };\n}\nfunction isReservedErrorCode(code) {\n    return okx_connect_error_1.RESERVED_ERROR_CODES.includes(code);\n}\nfunction getError(type) {\n    if (!Object.keys(okx_connect_error_1.STANDARD_ERROR_MAP).includes(type)) {\n        return okx_connect_error_1.STANDARD_ERROR_MAP[okx_connect_error_1.DEFAULT_ERROR];\n    }\n    return okx_connect_error_1.STANDARD_ERROR_MAP[type];\n}\nfunction getErrorByCode(code) {\n    const match = Object.values(okx_connect_error_1.STANDARD_ERROR_MAP).find((e) => e.code === code);\n    if (!match) {\n        return okx_connect_error_1.STANDARD_ERROR_MAP[okx_connect_error_1.DEFAULT_ERROR];\n    }\n    return match;\n}\nfunction formatErrorMessage(error, data) {\n    if (typeof error === \"undefined\") {\n        return getError(okx_connect_error_1.INTERNAL_ERROR);\n    }\n    if (typeof error === \"string\") {\n        error = Object.assign(Object.assign({}, getError(okx_connect_error_1.SERVER_ERROR)), { message: error });\n    }\n    if (typeof data !== \"undefined\") {\n        error.data = data;\n    }\n    if (isReservedErrorCode(error.code)) {\n        error = getErrorByCode(error.code);\n    }\n    return error;\n}\nfunction getUrlProtocol(url) {\n    const matches = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!matches || !matches.length)\n        return;\n    return matches[0];\n}\nfunction matchRegexProtocol(url, regex) {\n    const protocol = getUrlProtocol(url);\n    if (typeof protocol === \"undefined\")\n        return false;\n    return new RegExp(regex).test(protocol);\n}\nfunction isHttpUrl(url) {\n    return matchRegexProtocol(url, \"^https?:\");\n}\nfunction isWsUrl(url) {\n    return matchRegexProtocol(url, \"^wss?:\");\n}\nfunction parseConnectionError(e, url, type) {\n    return e.message.includes(\"getaddrinfo ENOTFOUND\") || e.message.includes(\"connect ECONNREFUSED\")\n        ? new Error(`Unavailable ${type} RPC url at ${url}`)\n        : e;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_ITEM_ERROR_CODES = void 0;\nvar CONNECT_ITEM_ERROR_CODES;\n(function (CONNECT_ITEM_ERROR_CODES) {\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(CONNECT_ITEM_ERROR_CODES || (exports.CONNECT_ITEM_ERROR_CODES = CONNECT_ITEM_ERROR_CODES = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TONCHAIN = void 0;\nvar TONCHAIN;\n(function (TONCHAIN) {\n    TONCHAIN[\"MAINNET\"] = \"-239\";\n})(TONCHAIN || (exports.TONCHAIN = TONCHAIN = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_ITEM_ERROR_CODES = exports.TONCHAIN = void 0;\nvar connect_wallet_1 = require(\"./connect-wallet\");\nObject.defineProperty(exports, \"TONCHAIN\", { enumerable: true, get: function () { return connect_wallet_1.TONCHAIN; } });\nvar connect_event_1 = require(\"./connect-event\");\nObject.defineProperty(exports, \"CONNECT_ITEM_ERROR_CODES\", { enumerable: true, get: function () { return connect_event_1.CONNECT_ITEM_ERROR_CODES; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.creatOKXWalletInfo = creatOKXWalletInfo;\nexports.creatOKXMiniAppWalletInfo = creatOKXMiniAppWalletInfo;\nconst constants_1 = require(\"../constants\");\nfunction creatOKXWalletInfo() {\n    return {\n        \"appName\": \"okxAppWallet\",\n        \"name\": \"OKX Wallet\",\n        \"imageUrl\": \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\",\n        \"aboutUrl\": constants_1.downloadUrl,\n        \"universalLink\": constants_1.standardUniversalLink,\n        \"deepLink\": constants_1.standardDeeplink,\n        \"platforms\": [\"ios\", \"android\"]\n    };\n}\nfunction creatOKXMiniAppWalletInfo() {\n    return {\n        \"appName\": \"okxMiniApp\",\n        \"name\": \"OKX Mini Wallet\",\n        \"imageUrl\": \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\",\n        \"aboutUrl\": constants_1.downloadUrl,\n        \"universalLink\": `https://t.me/${constants_1.tgwalletName}/start`,\n        \"deepLink\": \"\",\n        \"platforms\": [\"ios\", \"android\", 'macos', 'windows']\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.tgwalletAppName = exports.tgwalletName = exports.tonConnectSdkVersion = exports.shortUniversalLink = exports.standardDeeplink = exports.downloadUrl = exports.standardUniversalLink = exports.okxDeeplink = void 0;\nexports.getTestTwaUrl = getTestTwaUrl;\nexports.getTestTgTwaUrl = getTestTgTwaUrl;\nexports.okxDeeplink = 'okx://web3';\nexports.standardUniversalLink = typeof window !== \"undefined\" && window.location.hostname.includes(\"okx.com\")\n    ? \"https://link.okx.com/download\"\n    : \"https://www.okx.com/download\";\nexports.downloadUrl = \"https://www.okx.com/download\";\n// export const standardUniversalLink = 'http://localhost:5173';\nexports.standardDeeplink = `${exports.okxDeeplink}/wallet/connect`;\nexports.shortUniversalLink = `https://www.okx.com/ul/connect`;\n// export const standardDeeplink = 'http://localhost:5173';\nexports.tonConnectSdkVersion = '1';\n// export const tgwalletName: string = \"TCTestqdqwdqwdqBot\"\nexports.tgwalletName = \"OKX_WALLET_BOT\";\nexports.tgwalletAppName = \"start\";\n// https://t.me/OKX_WALLET_BOT/start\nfunction getTestTwaUrl() {\n    return window.okxTesttwaUrl;\n}\nfunction getTestTgTwaUrl() {\n    return window.okxTestTgtwaUrl;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_CONNECT_ERROR_CODES = exports.OKXConnectError = void 0;\nvar okx_connect_error_1 = require(\"./okx-connect.error\");\nObject.defineProperty(exports, \"OKXConnectError\", { enumerable: true, get: function () { return okx_connect_error_1.OKXConnectError; } });\nObject.defineProperty(exports, \"OKX_CONNECT_ERROR_CODES\", { enumerable: true, get: function () { return okx_connect_error_1.OKX_CONNECT_ERROR_CODES; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_ERROR = exports.STANDARD_ERROR_MAP = exports.SERVER_ERROR_CODE_RANGE = exports.RESERVED_ERROR_CODES = exports.SERVER_ERROR = exports.INTERNAL_ERROR = exports.INVALID_PARAMS = exports.METHOD_NOT_FOUND = exports.INVALID_REQUEST = exports.PARSE_ERROR = exports.OKX_CONNECT_ERROR_CODES = exports.OKXConnectError = void 0;\nclass OKXConnectError extends Error {\n    constructor(code, message) {\n        if (message == undefined) {\n            message = getDefaultMessageByCode(code);\n        }\n        super(message);\n        this.code = code;\n        this.message = `${OKXConnectError.prefix} ${message ? '\\n' + message : ''}`;\n        Object.setPrototypeOf(this, OKXConnectError.prototype);\n    }\n    toJSON() {\n        return {\n            message: this.message,\n            code: this.code\n        };\n    }\n}\nexports.OKXConnectError = OKXConnectError;\nOKXConnectError.prefix = '[OKX_CONNECT_SDK_ERROR]';\nfunction getDefaultMessageByCode(code) {\n    if (code == OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR) {\n        return \"unknown error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR) {\n        return \"bad request error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.ALREADY_CONNECTED_ERROR) {\n        return \"already connected error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR) {\n        return \"not connected error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.UNKNOWN_APP_ERROR) {\n        return \"unknown app error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n        return \"user rejects error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED) {\n        return \"method not supported\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.CONNECTION_ERROR) {\n        return \"connect error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED) {\n        return \"chain not supported\";\n    }\n    return \"unknown error\";\n}\nvar OKX_CONNECT_ERROR_CODES;\n(function (OKX_CONNECT_ERROR_CODES) {\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"BAD_REQUEST_ERROR\"] = 1] = \"BAD_REQUEST_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"ALREADY_CONNECTED_ERROR\"] = 11] = \"ALREADY_CONNECTED_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"NOT_CONNECTED_ERROR\"] = 12] = \"NOT_CONNECTED_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"UNKNOWN_APP_ERROR\"] = 100] = \"UNKNOWN_APP_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"USER_REJECTS_ERROR\"] = 300] = \"USER_REJECTS_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"CHAIN_NOT_SUPPORTED\"] = 500] = \"CHAIN_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"WALLET_NOT_SUPPORTED\"] = 600] = \"WALLET_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"CONNECTION_ERROR\"] = 700] = \"CONNECTION_ERROR\";\n})(OKX_CONNECT_ERROR_CODES || (exports.OKX_CONNECT_ERROR_CODES = OKX_CONNECT_ERROR_CODES = {}));\nexports.PARSE_ERROR = \"PARSE_ERROR\";\nexports.INVALID_REQUEST = \"INVALID_REQUEST\";\nexports.METHOD_NOT_FOUND = \"METHOD_NOT_FOUND\";\nexports.INVALID_PARAMS = \"INVALID_PARAMS\";\nexports.INTERNAL_ERROR = \"INTERNAL_ERROR\";\nexports.SERVER_ERROR = \"SERVER_ERROR\";\nexports.RESERVED_ERROR_CODES = [-32700, -32600, -32601, -32602, -32603];\nexports.SERVER_ERROR_CODE_RANGE = [-32000, -32099];\nexports.STANDARD_ERROR_MAP = {\n    [exports.PARSE_ERROR]: { code: -32700, message: \"Parse error\" },\n    [exports.INVALID_REQUEST]: { code: -32600, message: \"Invalid Request\" },\n    [exports.METHOD_NOT_FOUND]: { code: -32601, message: \"Method not found\" },\n    [exports.INVALID_PARAMS]: { code: -32602, message: \"Invalid params\" },\n    [exports.INTERNAL_ERROR]: { code: -32603, message: \"Internal error\" },\n    [exports.SERVER_ERROR]: { code: -32000, message: \"Server error\" },\n};\nexports.DEFAULT_ERROR = exports.SERVER_ERROR;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.downloadUrl = exports.okxDeeplink = exports.tonConnectSdkVersion = exports.standardDeeplink = exports.standardUniversalLink = exports.NameSpaceKeyTron = exports.NameSpaceKeyCosmos = exports.NameSpaceKeyAptos = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.NameSpaceKeyTON = exports.NameSpaceKeySOL = exports.NameSpaceKeyEip155 = void 0;\n__exportStar(require(\"./error\"), exports);\nvar misc_1 = require(\"./misc\");\nObject.defineProperty(exports, \"NameSpaceKeyEip155\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyEip155; } });\nObject.defineProperty(exports, \"NameSpaceKeySOL\", { enumerable: true, get: function () { return misc_1.NameSpaceKeySOL; } });\nObject.defineProperty(exports, \"NameSpaceKeyTON\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyTON; } });\nObject.defineProperty(exports, \"NameSpaceKeySui\", { enumerable: true, get: function () { return misc_1.NameSpaceKeySui; } });\nObject.defineProperty(exports, \"NameSpaceKeyBtc\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyBtc; } });\nObject.defineProperty(exports, \"NameSpaceKeyAptos\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyAptos; } });\nObject.defineProperty(exports, \"NameSpaceKeyCosmos\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyCosmos; } });\nObject.defineProperty(exports, \"NameSpaceKeyTron\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyTron; } });\nvar constants_1 = require(\"./constants\");\nObject.defineProperty(exports, \"standardUniversalLink\", { enumerable: true, get: function () { return constants_1.standardUniversalLink; } });\nObject.defineProperty(exports, \"standardDeeplink\", { enumerable: true, get: function () { return constants_1.standardDeeplink; } });\nObject.defineProperty(exports, \"tonConnectSdkVersion\", { enumerable: true, get: function () { return constants_1.tonConnectSdkVersion; } });\nObject.defineProperty(exports, \"okxDeeplink\", { enumerable: true, get: function () { return constants_1.okxDeeplink; } });\nObject.defineProperty(exports, \"downloadUrl\", { enumerable: true, get: function () { return constants_1.downloadUrl; } });\n__exportStar(require(\"./connect\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NameSpaceKeyTron = exports.NameSpaceKeyCosmos = exports.NameSpaceKeyAptos = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.NameSpaceKeyTON = exports.NameSpaceKeySOL = exports.NameSpaceKeyEip155 = void 0;\nexports.NameSpaceKeyEip155 = \"eip155\";\nexports.NameSpaceKeySOL = \"solana\";\nexports.NameSpaceKeyTON = \"ton\";\nexports.NameSpaceKeySui = \"sui\";\nexports.NameSpaceKeyBtc = \"btc\";\nexports.NameSpaceKeyAptos = \"aptos\";\nexports.NameSpaceKeyCosmos = \"cosmos\";\nexports.NameSpaceKeyTron = \"tron\";\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.callForSuccess = callForSuccess;\nexports.delay = delay;\n/**\n * Function to call ton api until we get response.\n * Because ton network is pretty unstable we need to make sure response is final.\n * @param {T} fn - function to call\n * @param {CallForSuccessOptions} [options] - optional configuration options\n */\nfunction callForSuccess(fn, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b;\n        const attempts = (_a = options === null || options === void 0 ? void 0 : options.attempts) !== null && _a !== void 0 ? _a : 3;\n        const delayMs = (_b = options === null || options === void 0 ? void 0 : options.delayMs) !== null && _b !== void 0 ? _b : 800;\n        if (typeof fn !== 'function') {\n            throw new Error(`Expected a function, got ${typeof fn}`);\n        }\n        let i = 0;\n        let lastError;\n        while (i < attempts) {\n            try {\n                return yield fn();\n            }\n            catch (err) {\n                lastError = err;\n                i++;\n                if (i < attempts) {\n                    yield delay(delayMs);\n                }\n            }\n        }\n        throw lastError;\n    });\n}\n/**\n * Delays the execution of code for a specified number of milliseconds.\n * @param {number} timeout - The number of milliseconds to delay the execution.\n * @param {DelayOptions} [options] - Optional configuration options for the delay.\n * @return {Promise<void>} - A promise that resolves after the specified delay, or rejects if the delay is aborted.\n */\nfunction delay(timeout, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            var _a, _b;\n            if ((_a = options === null || options === void 0 ? void 0 : options.signal) === null || _a === void 0 ? void 0 : _a.aborted) {\n                reject(new Error('Delay aborted'));\n                return;\n            }\n            const timeoutId = setTimeout(() => resolve(), timeout);\n            (_b = options === null || options === void 0 ? void 0 : options.signal) === null || _b === void 0 ? void 0 : _b.addEventListener('abort', () => {\n                clearTimeout(timeoutId);\n                reject(new Error('Delay aborted'));\n            });\n        });\n    });\n}\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkMetaData = exports.versionCompare = exports.isBrowser = exports.isOS = exports.isMobileUserAgent = exports.openDeeplinkWithFallback = exports.openLinkBlank = exports.openLink = exports.useShortLink = exports.toSafeBase64FromBase64 = exports.isValidObject = exports.isIos = exports.base64decode = exports.base64encode = exports.splitToUint8Arrays = exports.concatUint8Arrays = exports.toHexString = exports.hexToByteArray = exports.getOKXLink = exports.openOKXUniversalLink = exports.getAppWalletShortDeepLink = exports.encodeTWAConnectURLParams = exports.encodeConnectParams = exports.openOKXTMAWalletlinkWithFallback = exports.getTelegramWalletTWAUrl = exports.getAppWalletDeepLink = exports.encodeTelegramUrlParameters = exports.isTelegramUrl = exports.openOKXDeeplinkWithFallback = exports.openOKXDeeplink = exports.getUniversalLink = exports.safeJsonStringify = exports.safeJsonParse = exports.getDefaultReporter = exports.reportEvent = exports.reportLog = exports.logWarning = exports.logError = exports.logDebug = exports.callForSuccess = void 0;\nvar call_for_success_1 = require(\"./call-for-success\");\nObject.defineProperty(exports, \"callForSuccess\", { enumerable: true, get: function () { return call_for_success_1.callForSuccess; } });\nvar log_1 = require(\"./log\");\nObject.defineProperty(exports, \"logDebug\", { enumerable: true, get: function () { return log_1.logDebug; } });\nObject.defineProperty(exports, \"logError\", { enumerable: true, get: function () { return log_1.logError; } });\nObject.defineProperty(exports, \"logWarning\", { enumerable: true, get: function () { return log_1.logWarning; } });\nObject.defineProperty(exports, \"reportLog\", { enumerable: true, get: function () { return log_1.reportLog; } });\nObject.defineProperty(exports, \"reportEvent\", { enumerable: true, get: function () { return log_1.reportEvent; } });\nObject.defineProperty(exports, \"getDefaultReporter\", { enumerable: true, get: function () { return log_1.getDefaultReporter; } });\n__exportStar(require(\"./reportconstants\"), exports);\n__exportStar(require(\"./report\"), exports);\nvar safejson_1 = require(\"./safejson\");\nObject.defineProperty(exports, \"safeJsonParse\", { enumerable: true, get: function () { return safejson_1.safeJsonParse; } });\nObject.defineProperty(exports, \"safeJsonStringify\", { enumerable: true, get: function () { return safejson_1.safeJsonStringify; } });\nvar url_1 = require(\"./url\");\nObject.defineProperty(exports, \"getUniversalLink\", { enumerable: true, get: function () { return url_1.getUniversalLink; } });\nObject.defineProperty(exports, \"openOKXDeeplink\", { enumerable: true, get: function () { return url_1.openOKXDeeplink; } });\nObject.defineProperty(exports, \"openOKXDeeplinkWithFallback\", { enumerable: true, get: function () { return url_1.openOKXDeeplinkWithFallback; } });\nObject.defineProperty(exports, \"isTelegramUrl\", { enumerable: true, get: function () { return url_1.isTelegramUrl; } });\nObject.defineProperty(exports, \"encodeTelegramUrlParameters\", { enumerable: true, get: function () { return url_1.encodeTelegramUrlParameters; } });\nObject.defineProperty(exports, \"getAppWalletDeepLink\", { enumerable: true, get: function () { return url_1.getAppWalletDeepLink; } });\nObject.defineProperty(exports, \"getTelegramWalletTWAUrl\", { enumerable: true, get: function () { return url_1.getTelegramWalletTWAUrl; } });\nObject.defineProperty(exports, \"openOKXTMAWalletlinkWithFallback\", { enumerable: true, get: function () { return url_1.openOKXTMAWalletlinkWithFallback; } });\nObject.defineProperty(exports, \"encodeConnectParams\", { enumerable: true, get: function () { return url_1.encodeConnectParams; } });\nObject.defineProperty(exports, \"encodeTWAConnectURLParams\", { enumerable: true, get: function () { return url_1.encodeTWAConnectURLParams; } });\nObject.defineProperty(exports, \"getAppWalletShortDeepLink\", { enumerable: true, get: function () { return url_1.getAppWalletShortDeepLink; } });\nObject.defineProperty(exports, \"openOKXUniversalLink\", { enumerable: true, get: function () { return url_1.openOKXUniversalLink; } });\nObject.defineProperty(exports, \"getOKXLink\", { enumerable: true, get: function () { return url_1.getOKXLink; } });\nvar utils_1 = require(\"./utils\");\nObject.defineProperty(exports, \"hexToByteArray\", { enumerable: true, get: function () { return utils_1.hexToByteArray; } });\nObject.defineProperty(exports, \"toHexString\", { enumerable: true, get: function () { return utils_1.toHexString; } });\nObject.defineProperty(exports, \"concatUint8Arrays\", { enumerable: true, get: function () { return utils_1.concatUint8Arrays; } });\nObject.defineProperty(exports, \"splitToUint8Arrays\", { enumerable: true, get: function () { return utils_1.splitToUint8Arrays; } });\nObject.defineProperty(exports, \"base64encode\", { enumerable: true, get: function () { return utils_1.base64encode; } });\nObject.defineProperty(exports, \"base64decode\", { enumerable: true, get: function () { return utils_1.base64decode; } });\nObject.defineProperty(exports, \"isIos\", { enumerable: true, get: function () { return utils_1.isIos; } });\nObject.defineProperty(exports, \"isValidObject\", { enumerable: true, get: function () { return utils_1.isValidObject; } });\nObject.defineProperty(exports, \"toSafeBase64FromBase64\", { enumerable: true, get: function () { return utils_1.toSafeBase64FromBase64; } });\nObject.defineProperty(exports, \"useShortLink\", { enumerable: true, get: function () { return utils_1.useShortLink; } });\nvar web_api_1 = require(\"./web-api\");\nObject.defineProperty(exports, \"openLink\", { enumerable: true, get: function () { return web_api_1.openLink; } });\nObject.defineProperty(exports, \"openLinkBlank\", { enumerable: true, get: function () { return web_api_1.openLinkBlank; } });\nObject.defineProperty(exports, \"openDeeplinkWithFallback\", { enumerable: true, get: function () { return web_api_1.openDeeplinkWithFallback; } });\nObject.defineProperty(exports, \"isMobileUserAgent\", { enumerable: true, get: function () { return web_api_1.isMobileUserAgent; } });\nObject.defineProperty(exports, \"isOS\", { enumerable: true, get: function () { return web_api_1.isOS; } });\nObject.defineProperty(exports, \"isBrowser\", { enumerable: true, get: function () { return web_api_1.isBrowser; } });\nvar tma_api_1 = require(\"./tma-api\");\nObject.defineProperty(exports, \"versionCompare\", { enumerable: true, get: function () { return tma_api_1.versionCompare; } });\nvar request_1 = require(\"./request\");\nObject.defineProperty(exports, \"checkMetaData\", { enumerable: true, get: function () { return request_1.checkMetaData; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getDefaultReporter = getDefaultReporter;\nexports.logDebug = logDebug;\nexports.logError = logError;\nexports.logWarning = logWarning;\nexports.reportEvent = reportEvent;\nexports.reportLog = reportLog;\nconst debug = false;\nconst forceReport = false;\nconst report_1 = require(\"./report\");\nconst defaultReporter = new report_1.OKXReporter();\nfunction getDefaultReporter() {\n    return defaultReporter;\n}\nconst packageJson = require('../../package.json');\nconst version = packageJson.version;\nfunction logDebug(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.log(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction logError(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.error(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n            if (forceReport || !debug) {\n                let content = '';\n                content += [...args].reduce((result, item) => {\n                    if (typeof item == 'string') {\n                        result += ',' + item;\n                    }\n                    else if (typeof item == 'object') {\n                        result += JSON.stringify(item);\n                    }\n                });\n                defaultReporter.sendRecordContent(content, report_1.OKXReportType.LOG, '');\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction logWarning(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.warn(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction reportEvent(type, action, content) {\n    return __awaiter(this, void 0, void 0, function* () {\n        yield defaultReporter.sendRecordContent(content, type, action);\n    });\n}\nfunction reportLog(content_1) {\n    return __awaiter(this, arguments, void 0, function* (content, action = 'default') {\n        // await defaultReporter.sendRecordContent(content, OKXReportType.LOG, action)\n    });\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXReporter = exports.OKXReportSide = exports.OKXReportType = exports.versionStr = void 0;\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst log_1 = require(\"./log\");\nconst url_1 = require(\"./url\");\nconst utils_1 = require(\"../utils\");\nconst localforage_1 = __importDefault(require(\"localforage\"));\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nexports.versionStr = '1.6.0';\nconst reportApiList = [\n    'https://www.okx.com/dappstat/wallet-connect',\n    'https://www.okx.ac/dappstat/wallet-connect'\n];\nconst reportCacheKey = 'OKX_RP_CK';\nconst reportUUIDKey = 'OKX_RP_UUID_CK';\nconst MAX_LIMIT_REPORTCOUNT = 100;\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"*/*\",\n    \"Content-Type\": \"text/plain\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\nexports.OKXReportType = {\n    PAGE_IN: 'page_in',\n    PAGE_OUT: 'page_out',\n    CLICK: 'click',\n    LOG: 'log',\n};\nexports.OKXReportSide = {\n    DAPP: 'dapp',\n    WALLET: 'wallet',\n};\nclass IReporter {\n}\nconst fetchWithTimeout = (url, options, timeout = 5000) => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n    const fetchPromise = (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, options), { signal }));\n    const timeoutPromise = new Promise((_, reject) => setTimeout(() => {\n        controller.abort();\n        reject(new Error('Request timed out'));\n    }, timeout));\n    return Promise.race([fetchPromise, timeoutPromise]);\n};\nconst fetchListWithTimeout = (urls_1, ...args_1) => __awaiter(void 0, [urls_1, ...args_1], void 0, function* (urls, options = {}, timeout = 5000) {\n    for (const url of urls) {\n        try {\n            const controller = new AbortController();\n            const signal = controller.signal;\n            const fetchPromise = (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, options), { signal }));\n            const timeoutPromise = new Promise((_, reject) => setTimeout(() => {\n                controller.abort();\n                reject(new Error('Request timed out'));\n            }, timeout));\n            const response = yield Promise.race([fetchPromise, timeoutPromise]);\n            if (response.ok) {\n                return response;\n            }\n            if (response.status == 502) {\n                console.error(`Fetch error status 502`, url);\n                return response;\n            }\n        }\n        catch (error) {\n            console.error(`Fetch error for ${url}:`, error);\n        }\n    }\n    console.error(`'All fetch attempts failed.'`);\n    throw new Error('All fetch attempts failed.');\n});\nclass OKXReporter {\n    constructor() {\n        this.currentSide = exports.OKXReportSide.DAPP;\n        this.currentVersion = exports.versionStr;\n        this.storage = localforage_1.default.createInstance({\n            name: \"OKXReporter\"\n        });\n        this.recordList = new Array();\n        this.currentUUID = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(16));\n    }\n    configVersionAndSide(version, side, appname) {\n        this.currentVersion = version;\n        this.currentSide = side;\n        this.appName = appname;\n    }\n    get recordCacheKey() {\n        return reportCacheKey + \"@\" + this.appName;\n    }\n    get reportPlatform() {\n        if ((0, utils_1.isMobileUserAgent)()) {\n            if ((0, utils_1.isIos)()) {\n                return 'iOS';\n            }\n            else {\n                return 'android';\n            }\n        }\n        else {\n            return 'pc';\n        }\n    }\n    beginReport() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.startErrorCatching();\n            let records = yield this.storage.getItem(this.recordCacheKey);\n            let uuid = yield this.storage.getItem(reportUUIDKey);\n            if (uuid) {\n                this.currentUUID = uuid;\n            }\n            else {\n                this.storage.setItem(reportUUIDKey, this.currentUUID);\n            }\n            if (records) {\n                this.recordList = records;\n                (0, log_1.logDebug)('resume records from cache length: ', this.recordList.length);\n                yield this.sendCachedRecords();\n            }\n        });\n    }\n    startErrorCatching() {\n        let window = (0, url_1.getWindow)();\n        if (window) {\n            (0, log_1.logDebug)('begin capture console error');\n            // window.onerror = (event: Event | string, source?: string, lineno?: number, colno?: number, error?: Error) => {\n            //     logDebug('capture error info:', error, source)\n            //     this.markRecord(error?.message+'/'+error?.name+'/'+error?.stack, OKXReportType.LOG, '', this.currentSide)\n            // }\n        }\n    }\n    cachedErrors() {\n        return this.recordList;\n    }\n    sendRecord(record) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    const body = JSON.stringify(record);\n                    (0, log_1.logDebug)('[REPORT] record: ', body);\n                    const res = yield fetchListWithTimeout(reportApiList, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body: body }));\n                    (0, log_1.logDebug)('[REPORT] get rsp:', res);\n                    if (res && res.status && res.status == 200) {\n                        this.recordList = this.recordList.filter((item) => {\n                            return item.timestamp != record.timestamp || item.content != record.content;\n                        });\n                        yield this.storage.setItem(this.recordCacheKey, this.recordList);\n                        resolve(true);\n                    }\n                    else {\n                        reject(false);\n                    }\n                }\n                catch (e) {\n                    (0, log_1.logDebug)('send record error:', e);\n                    resolve(true);\n                    // reject(e)\n                }\n            }));\n        });\n    }\n    sendRecordContent(content, type, action) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            let path = (_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.location.pathname;\n            let location = (_b = (0, url_1.getWindow)()) === null || _b === void 0 ? void 0 : _b.location.origin;\n            if (path && location) {\n                location = location + path;\n            }\n            let language = (_c = (0, url_1.getWindow)()) === null || _c === void 0 ? void 0 : _c.navigator.language;\n            let ua = (_d = (0, url_1.getWindow)()) === null || _d === void 0 ? void 0 : _d.navigator.userAgent;\n            let platform = this.reportPlatform;\n            let reportItem = {\n                uuid: this.currentUUID,\n                version: this.currentVersion,\n                content: content,\n                action: action,\n                side: this.currentSide,\n                timestamp: new Date().getTime(),\n                url: location,\n                lang: language,\n                type: type,\n                platform: platform,\n                \"user-agent\": ua\n            };\n            yield this.markRecordItem(reportItem);\n            yield this.sendRecord(reportItem);\n        });\n    }\n    sendCachedRecords() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let sendList = this.recordList.map(record => this.sendRecord(record));\n                (0, log_1.logDebug)('[REPORT] submit & clean recorded caches begin @', new Date().toUTCString());\n                Promise.allSettled(sendList).then((results) => {\n                    (0, log_1.logDebug)('[REPORT] submit & clean recorded caches ends @', new Date().toUTCString());\n                    let keepIndex = [];\n                    results.forEach((result, index) => {\n                        if (result.status == \"rejected\") {\n                            keepIndex.push(index);\n                        }\n                    });\n                    this.recordList = this.recordList.filter((_, index) => !keepIndex.includes(index));\n                    this.storage.setItem(this.recordCacheKey, this.recordList).then(function (value) {\n                        resolve();\n                    }).catch(function (err) {\n                        reject(err);\n                    });\n                });\n            }));\n        });\n    }\n    markRecordItem(item) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.recordList.push(item);\n            if (this.recordList.length > MAX_LIMIT_REPORTCOUNT) {\n                let offset = this.recordList.length - MAX_LIMIT_REPORTCOUNT;\n                this.recordList.splice(0, offset);\n            }\n            return new Promise((resolve, reject) => {\n                this.storage.setItem(this.recordCacheKey, this.recordList).then(function (value) {\n                    resolve(item);\n                }).catch(function (err) {\n                    reject(err);\n                });\n            });\n        });\n    }\n    markRecord(content, type, action, side) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            let path = (_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.location.pathname;\n            let location = (_b = (0, url_1.getWindow)()) === null || _b === void 0 ? void 0 : _b.location.origin;\n            if (path && location) {\n                location = location + path;\n            }\n            let language = (_c = (0, url_1.getWindow)()) === null || _c === void 0 ? void 0 : _c.navigator.language;\n            let platform = this.reportPlatform;\n            let ua = (_d = (0, url_1.getWindow)()) === null || _d === void 0 ? void 0 : _d.navigator.userAgent;\n            let reportItem = {\n                uuid: this.currentUUID,\n                version: this.currentVersion,\n                content: content,\n                action: action,\n                side: side,\n                timestamp: new Date().getTime(),\n                url: location,\n                lang: language,\n                type: type,\n                platform: platform,\n                \"user-agent\": ua\n            };\n            return yield this.markRecordItem(reportItem);\n        });\n    }\n}\nexports.OKXReporter = OKXReporter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Report_WalletType_Key = exports.Report_Proceed_QRCode_Click = exports.Report_ChooseType_Download_Click = exports.Report_ChooseType_ConnectWallet_Click = exports.Report_Proceed_Retry_Click = exports.Report_ChooseType_ConnectWallet_View = exports.Report_Loading_ConnectWallet_View = exports.Report_Proceed_QRCode_View = exports.Report_Proceed_Proceed_View = void 0;\nexports.Report_Proceed_Proceed_View = \"OKXConnectSDK_Proceed_Proceed_View\";\nexports.Report_Proceed_QRCode_View = \"OKXConnectSDK_Proceed_QRCode_View\";\nexports.Report_Loading_ConnectWallet_View = \"OKXConnectSDK_Loading_ConnectWallet_View\";\nexports.Report_ChooseType_ConnectWallet_View = \"OKXConnectSDK_ChooseType_ConnectWallet_View\";\nexports.Report_Proceed_Retry_Click = \"OKXConnectSDK_Proceed_Retry_Click\";\nexports.Report_ChooseType_ConnectWallet_Click = \"OKXConnectSDK_ChooseType_ConnectWallet_Click\";\nexports.Report_ChooseType_Download_Click = \"OKXConnectSDK_ChooseType_Download_Click\";\nexports.Report_Proceed_QRCode_Click = \"OKXConnectSDK_Proceed_QRCode_Click\";\nexports.Report_WalletType_Key = 'wallet_type';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkMetaData = checkMetaData;\nconst protocol_1 = require(\"../protocol\");\nfunction checkMetaData(dappMetaData) {\n    if (!dappMetaData) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"You have to specify a `dappMetaData`in the options.\");\n    }\n    if (!dappMetaData.name) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"dappName is required\");\n    }\n    if (!dappMetaData.icon) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"icon is required\");\n    }\n    return true;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.safeJsonParse = safeJsonParse;\nexports.safeJsonStringify = safeJsonStringify;\nconst log_1 = require(\"./log\");\nconst JSONStringify = (data) => JSON.stringify(data, (_, value) => (typeof value === \"bigint\" ? value.toString() + \"n\" : value));\n/*\n  Function to parse JSON.\n  If JSON has values in our custom format BigInt (strings with \"n\" character at the end), we just parse them to BigInt values.\n  If JSON has big number values, but not in our custom format, we copy it, and in a copy we convert those values to our custom format,\n  then parse them to BigInt values.\n  Other values (not big numbers and not our custom format BigInt values) are not affected and parsed as native JSON.parse() would parse them.\n*/\nconst JSONParse = (json) => {\n    /*\n      Big numbers are found and marked using Regex with this condition:\n      Number's length is bigger than 16 || Number's length is 16 and any numerical digit of the number is greater than that of the Number.MAX_SAFE_INTEGER\n      Additionally, it skips values that are strings (between double quotes).\n      */\n    // prettier-ignore\n    // eslint-disable-next-line no-useless-escape\n    const numbersBiggerThanMaxInt = /:(\\b\\d{17,}|\\b(?:[9](?:[1-9]07199254740991|0[1-9]7199254740991|00[8-9]199254740991|007[2-9]99254740991|007199[3-9]54740991|0071992[6-9]4740991|00719925[5-9]740991|007199254[8-9]40991|0071992547[5-9]0991|00719925474[1-9]991|00719925474099[2-9])))(?=[,\\}\\]]|$)/g;\n    const serializedData = json.replace(numbersBiggerThanMaxInt, (match, group) => `:\"${group}n\"`);\n    try {\n        return JSON.parse(serializedData, (_, value) => {\n            const isCustomFormatBigInt = typeof value === \"string\" && value.match(/^\\d+n$/);\n            if (isCustomFormatBigInt)\n                return BigInt(value.substring(0, value.length - 1));\n            return value;\n        });\n    }\n    catch (e) {\n        return JSON.parse(json);\n    }\n};\nfunction safeJsonParse(value) {\n    if (typeof value !== \"string\") {\n        (0, log_1.logDebug)(value);\n        throw new Error(`Cannot safe json parse value of type ${typeof value}`);\n    }\n    try {\n        return JSONParse(value);\n    }\n    catch (e) {\n        // eslint-disable-next-line no-console\n        console.error(\"safeJsonParse error:\", e);\n        return value;\n    }\n}\nfunction safeJsonStringify(value) {\n    return typeof value === \"string\" ? value : JSONStringify(value) || \"\";\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.okxfromString = okxfromString;\nexports.okxtoString = okxtoString;\nexports.alloc = alloc;\nexports.allocUnsafe = allocUnsafe;\nconst basics_1 = require(\"multiformats/basics\");\nconst log_1 = require(\"../utils/log\");\nfunction okxfromString(string, encoding = 'utf8') {\n    const base = BASES[encoding];\n    (0, log_1.logDebug)(\"okxfromstring ====> \");\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    return base.decoder.decode(`${base.prefix}${string}`);\n}\nfunction okxtoString(array, encoding = 'utf8') {\n    const base = BASES[encoding];\n    (0, log_1.logDebug)(\"okxtoString ====> \");\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    return base.encoder.encode(array).substring(1);\n}\nfunction alloc(size = 0) {\n    return new Uint8Array(size);\n}\nfunction allocUnsafe(size = 0) {\n    return new Uint8Array(size);\n}\nfunction createCodec(name, prefix, encode, decode) {\n    return {\n        name,\n        prefix,\n        encoder: {\n            name,\n            prefix,\n            encode\n        },\n        decoder: { decode }\n    };\n}\nconst string = createCodec('utf8', 'u', buf => {\n    const decoder = new TextDecoder('utf8');\n    return 'u' + decoder.decode(buf);\n}, str => {\n    const encoder = new TextEncoder();\n    return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n    let result = 'a';\n    for (let i = 0; i < buf.length; i++) {\n        let bufNum = buf[i];\n        if (bufNum && String.fromCharCode(bufNum)) {\n            result += String.fromCharCode(bufNum);\n        }\n    }\n    return result;\n}, str => {\n    str = str.substring(1);\n    const buf = allocUnsafe(str.length);\n    for (let i = 0; i < str.length; i++) {\n        buf[i] = str.charCodeAt(i);\n    }\n    return buf;\n});\nconst BASES = Object.assign({ utf8: string, 'utf-8': string, hex: basics_1.bases.base16, latin1: ascii, ascii: ascii, binary: ascii }, basics_1.bases);\n","\"use strict\";\nvar _a, _b, _c, _d, _e, _f, _g;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isTmaPlatform = isTmaPlatform;\nexports.isInTMA = isInTMA;\nexports.isInTelegramBrowser = isInTelegramBrowser;\nexports.sendExpand = sendExpand;\nexports.sendOpenTelegramLink = sendOpenTelegramLink;\nexports.versionCompare = versionCompare;\nconst url_1 = require(\"./url\");\nconst log_1 = require(\"./log\");\nconst protocol_1 = require(\"../protocol\");\nconst web_api_1 = require(\"./web-api\");\nlet initParams = {};\ntry {\n    let locationHash = location.hash.toString();\n    initParams = urlParseHashParams(locationHash);\n}\ncatch (e) { }\nlet tmaPlatform = 'unknown';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppPlatform) {\n    tmaPlatform = (_a = initParams.tgWebAppPlatform) !== null && _a !== void 0 ? _a : 'unknown';\n}\nif (tmaPlatform === 'unknown') {\n    const window = (0, url_1.getWindow)();\n    tmaPlatform = (_d = (_c = (_b = window === null || window === void 0 ? void 0 : window.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : 'unknown';\n}\nlet webAppVersion = '6.0';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppVersion) {\n    webAppVersion = initParams.tgWebAppVersion;\n}\nif (!webAppVersion) {\n    const window = (0, url_1.getWindow)();\n    webAppVersion = (_g = (_f = (_e = window === null || window === void 0 ? void 0 : window.Telegram) === null || _e === void 0 ? void 0 : _e.WebApp) === null || _f === void 0 ? void 0 : _f.version) !== null && _g !== void 0 ? _g : '6.0';\n}\n/**\n * Returns true if the app is running in TMA on the specified platform.\n * @param platforms\n */\nfunction isTmaPlatform(...platforms) {\n    return platforms.includes(tmaPlatform);\n}\n/**\n * Returns true if the app is running in TMA.\n */\nfunction isInTMA() {\n    var _a;\n    return tmaPlatform !== 'unknown' || !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n}\n/**\n * Returns true if the app is running in the Telegram browser.\n */\nfunction isInTelegramBrowser() {\n    var _a;\n    const isTelegramWebview = !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebview);\n    return (isInTMA() || isTelegramWebview) && tmaPlatform === 'unknown';\n}\n/**\n * Expand the app window.\n */\nfunction sendExpand() {\n    postEvent('web_app_expand', {});\n}\n/**\n * Opens link in TMA or in new tab and returns a function that closes the tab.\n * @param link The link to open.\n * @param fallback The function to call if the link can't be opened in TMA.\n */\nfunction sendOpenTelegramLink(link, fallback) {\n    const url = new URL(link);\n    if (url.protocol !== 'http:' && url.protocol !== 'https:') {\n        if (fallback) {\n            return fallback();\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Url protocol is not supported: ${url}`);\n    }\n    if (url.hostname !== 't.me') {\n        if (fallback) {\n            return fallback();\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Url host is not supported: ${url}`);\n    }\n    const pathFull = url.pathname + url.search;\n    if (isIframe() || versionAtLeast('6.1')) {\n        postEvent('web_app_open_tg_link', { path_full: pathFull });\n    }\n    else {\n        (0, web_api_1.openLinkBlank)('https://t.me' + pathFull);\n    }\n}\nfunction isIframe() {\n    try {\n        const window = (0, url_1.getWindow)();\n        if (!window) {\n            return false;\n        }\n        return window.parent != null && window !== window.parent;\n    }\n    catch (e) {\n        return false;\n    }\n}\nfunction postEvent(eventType, eventData) {\n    try {\n        const window = (0, url_1.getWindow)();\n        if (!window) {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Can't post event to parent window: window is not defined`);\n        }\n        if (window.TelegramWebviewProxy !== undefined) {\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.TelegramWebviewProxy.postEvent(eventType, JSON.stringify(eventData));\n        }\n        else if (window.external && 'notify' in window.external) {\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.external.notify(JSON.stringify({ eventType: eventType, eventData: eventData }));\n        }\n        else if (isIframe()) {\n            const trustedTarget = '*';\n            const message = JSON.stringify({ eventType: eventType, eventData: eventData });\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.parent.postMessage(message, trustedTarget);\n        }\n        else {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Can't post event to TMA`);\n        }\n    }\n    catch (e) {\n        (0, log_1.logError)(`Can't post event to parent window: ${e}`);\n    }\n}\nfunction urlParseHashParams(locationHash) {\n    locationHash = locationHash.replace(/^#/, '');\n    let params = {};\n    if (!locationHash.length) {\n        return params;\n    }\n    if (locationHash.indexOf('=') < 0 && locationHash.indexOf('?') < 0) {\n        params._path = urlSafeDecode(locationHash);\n        return params;\n    }\n    let qIndex = locationHash.indexOf('?');\n    if (qIndex >= 0) {\n        let pathParam = locationHash.substr(0, qIndex);\n        params._path = urlSafeDecode(pathParam);\n        locationHash = locationHash.substr(qIndex + 1);\n    }\n    let query_params = urlParseQueryString(locationHash);\n    for (let k in query_params) {\n        params[k] = query_params[k];\n    }\n    return params;\n}\nfunction urlSafeDecode(urlencoded) {\n    try {\n        urlencoded = urlencoded.replace(/\\+/g, '%20');\n        return decodeURIComponent(urlencoded);\n    }\n    catch (e) {\n        return urlencoded;\n    }\n}\nfunction urlParseQueryString(queryString) {\n    let params = {};\n    if (!queryString.length) {\n        return params;\n    }\n    let queryStringParams = queryString.split('&');\n    let i, param, paramName, paramValue;\n    for (i = 0; i < queryStringParams.length; i++) {\n        param = queryStringParams[i].split('=');\n        paramName = urlSafeDecode(param[0]);\n        paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n        params[paramName] = paramValue;\n    }\n    return params;\n}\nfunction versionCompare(v1, v2) {\n    if (typeof v1 !== 'string')\n        v1 = '';\n    if (typeof v2 !== 'string')\n        v2 = '';\n    let v1List = v1.replace(/^\\s+|\\s+$/g, '').split('.');\n    let v2List = v2.replace(/^\\s+|\\s+$/g, '').split('.');\n    let a, i, p1, p2;\n    a = Math.max(v1List.length, v2List.length);\n    for (i = 0; i < a; i++) {\n        p1 = parseInt(v1List[i]) || 0;\n        p2 = parseInt(v2List[i]) || 0;\n        if (p1 === p2)\n            continue;\n        if (p1 > p2)\n            return 1;\n        return -1;\n    }\n    return 0;\n}\nfunction versionAtLeast(ver) {\n    return versionCompare(webAppVersion, ver) >= 0;\n}\n","\"use strict\";\nvar _a, _b, _c, _d;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.removeUrlLastSlash = removeUrlLastSlash;\nexports.addPathToUrl = addPathToUrl;\nexports.getUniversalLink = getUniversalLink;\nexports.openOKXDeeplink = openOKXDeeplink;\nexports.openOKXUniversalLink = openOKXUniversalLink;\nexports.openOKXDeeplinkWithFallback = openOKXDeeplinkWithFallback;\nexports.getWindow = getWindow;\nexports.isTelegramUrl = isTelegramUrl;\nexports.encodeTelegramUrlParameters = encodeTelegramUrlParameters;\nexports.encodeConnectParams = encodeConnectParams;\nexports.encodeTWAConnectURLParams = encodeTWAConnectURLParams;\nexports.getAppWalletDeepLink = getAppWalletDeepLink;\nexports.getAppWalletShortDeepLink = getAppWalletShortDeepLink;\nexports.getTelegramWalletTWAUrl = getTelegramWalletTWAUrl;\nexports.openOKXTMAWalletlinkWithFallback = openOKXTMAWalletlinkWithFallback;\nexports.isInTMA = isInTMA;\nexports.isInTelegramBrowser = isInTelegramBrowser;\nexports.getOKXLink = getOKXLink;\nconst protocol_1 = require(\"../protocol\");\nconst log_1 = require(\"./log\");\nconst constants_1 = require(\"../protocol/constants\");\nconst utils_1 = require(\"./utils\");\nconst tma_api_1 = require(\"./tma-api\");\nconst constants_2 = require(\"../connect/constants\");\nfunction removeUrlLastSlash(url) {\n    if (url.slice(-1) === '/') {\n        return url.slice(0, -1);\n    }\n    return url;\n}\nfunction addPathToUrl(url, path) {\n    return removeUrlLastSlash(url) + '/' + path;\n}\nfunction getUniversalLink(deeplinkUrl, useStandardUniversalLink = false) {\n    console.log(\"getUniversalLink deeplinkUrl:\", deeplinkUrl, \", useStandardUniversalLink:\", useStandardUniversalLink);\n    const replaceStrWithParam = `${protocol_1.standardDeeplink}?param=`;\n    if (!useStandardUniversalLink && deeplinkUrl.startsWith(replaceStrWithParam)) {\n        const cleanUrl = deeplinkUrl.replace(replaceStrWithParam, '');\n        (0, log_1.logDebug)(\"getUniversalLink cleanUrl:\", cleanUrl);\n        const deeplinkEncodeUrl = encodeURIComponent(cleanUrl);\n        (0, log_1.logDebug)(\"getUniversalLink standardUniversalLink:\", protocol_1.standardUniversalLink);\n        (0, log_1.logDebug)(\"getUniversalLink `${shortUniversalLink}?param=${deeplinkEncodeUrl}`:\", `${constants_1.shortUniversalLink}?param=${deeplinkEncodeUrl}`);\n        return `${constants_1.shortUniversalLink}?param=${deeplinkEncodeUrl}`;\n    }\n    else if (!useStandardUniversalLink && deeplinkUrl == protocol_1.standardDeeplink) {\n        (0, log_1.logDebug)(\"getUniversalLink shortUniversalLink:\", constants_1.shortUniversalLink);\n        return constants_1.shortUniversalLink;\n    }\n    else {\n        const deeplinkEncodeUrl = encodeURIComponent(deeplinkUrl);\n        console.log(\"getUniversalLink standardUniversalLink:\", protocol_1.standardUniversalLink);\n        return `${protocol_1.standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`;\n    }\n}\nfunction openOKXDeeplink(deeplinkUrl) {\n    var _a;\n    const fullUrl = getUniversalLink(deeplinkUrl);\n    const isTelegram = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n    console.log(\"openOKXDeeplink fullUrl:\", fullUrl);\n    if (!(0, utils_1.isIos)()) {\n        let newWindow = null;\n        if (isTelegram) {\n            newWindow = window.open(deeplinkUrl, '_blank');\n        }\n        else {\n            window.location.href = deeplinkUrl;\n        }\n    }\n    else {\n        openOKXUniversalLink(fullUrl);\n    }\n}\nfunction openOKXUniversalLink(fullUrl) {\n    if (!(0, utils_1.isIos)()) {\n        // if (isTelegram) {\n        window.open(fullUrl, '_blank');\n        // } else {\n        //     window.location.href = fullUrl;\n        // }\n    }\n    else {\n        if (isInTMA()) {\n            window.open(fullUrl, '_blank');\n        }\n        else {\n            console.log(\"windowOpen[before]: \", Date.now());\n            if (window === null || window === void 0 ? void 0 : window.okxLogDebug) {\n                window.open(fullUrl, '_blank');\n            }\n            else {\n                window.open(fullUrl, '_self');\n            }\n            console.log(\"windowOpen[after]: \", Date.now());\n        }\n    }\n}\nfunction openOKXDeeplinkWithFallback(deeplinkUrl) {\n    var _a;\n    const fullUrl = getUniversalLink(deeplinkUrl);\n    const isTelegram = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n    console.log(\"openOKXDeeplinkWithFallback fullUrl:\", fullUrl);\n    let deepLinkOpened = false;\n    const timeoutDuration = 3000; // 1.5秒的等待时间\n    const downloadUrl = protocol_1.standardUniversalLink;\n    console.log(\"openOKXDeeplinkWithFallback standardUniversalLink:\", protocol_1.standardUniversalLink);\n    if (!(0, utils_1.isIos)()) {\n        let newWindow = null;\n        var fallbackToDownloadPage = () => {\n            if (!deepLinkOpened) {\n                if (newWindow) {\n                    newWindow.open(fullUrl, '_self');\n                }\n                else {\n                    window.open(fullUrl, '_blank');\n                }\n            }\n        };\n        if (isTelegram) {\n            newWindow = window.open(deeplinkUrl, '_blank');\n        }\n        else {\n            window.location.href = deeplinkUrl;\n        }\n        setTimeout(fallbackToDownloadPage, timeoutDuration);\n        window.addEventListener('blur', () => {\n            deepLinkOpened = true;\n        }, { once: true });\n        document.addEventListener('visibilitychange', () => {\n            if (document.visibilityState === 'hidden') {\n                deepLinkOpened = true;\n            }\n        });\n    }\n    else {\n        if (isTelegram) {\n            window.open(fullUrl, '_blank');\n        }\n        else {\n            console.log(\"windowOpen[before]: \", Date.now());\n            if (window === null || window === void 0 ? void 0 : window.okxLogDebug) {\n                window.open(fullUrl, '_blank');\n            }\n            else {\n                window.open(fullUrl, '_self');\n            }\n            console.log(\"windowOpen[after]: \", Date.now());\n        }\n    }\n}\nfunction getWindow() {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    return undefined;\n}\nfunction isTelegramUrl(link) {\n    if (!link) {\n        return false;\n    }\n    const url = new URL(link);\n    return url.protocol === 'tg:' || url.hostname === 't.me';\n}\nfunction encodeTelegramUrlParameters(parameters) {\n    let encodedParameters = parameters;\n    encodedParameters = encodedParameters.replace(/\\./g, '%2E');\n    encodedParameters = encodedParameters.replace(/-/g, '%2D');\n    encodedParameters = encodedParameters.replace(/_/g, '%5F');\n    encodedParameters = encodedParameters.replace(/&/g, '-');\n    encodedParameters = encodedParameters.replace(/=/g, '__');\n    encodedParameters = encodedParameters.replace(/%/g, '--');\n    return encodedParameters;\n}\nfunction encodeConnectParams(connectRequest) {\n    let connectRequestWithVersion = Object.assign(Object.assign({}, connectRequest), { protocolVersion: constants_2.CONNECT_PROTOCOL_VER });\n    const connectRequestStr = JSON.stringify(connectRequestWithVersion);\n    (0, log_1.logDebug)(\"url encodeConnectParams connectRequestStr \", connectRequestStr);\n    const utf8Array = new TextEncoder().encode(connectRequestStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    // .replace(/\\+/g, '-')\n    // .replace(/\\//g, '_')\n    // .replace(/=+$/, ''); //Compatible with older versions of iOS. Cannot be added directly  (Base64 URL Safe)\n    (0, log_1.logDebug)(\"url encodeConnectParams base64Encoded \", base64Encoded);\n    return base64Encoded;\n}\nfunction encodeTWAConnectURLParams(connectRequest) {\n    const connectRequestStr = JSON.stringify({ topic: connectRequest.topic, clientId: connectRequest.clientId });\n    (0, log_1.logDebug)(\"url encodeConnectParams connectRequestStr\", connectRequestStr);\n    const utf8Array = new TextEncoder().encode(connectRequestStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    return base64Encoded;\n}\nfunction getAppWalletDeepLink(connectParam) {\n    return `${protocol_1.standardDeeplink}?param=${connectParam}`;\n}\nfunction getAppWalletShortDeepLink(topic, clientId) {\n    return `${constants_1.shortUniversalLink}?topic=${topic}${(0, utils_1.getLastSixMd5Hash)(clientId)}`;\n}\n//  make telegram okx wallet TWA url\nfunction getTelegramWalletTWAUrl(connectParam, redirectStr) {\n    let base64Content = { okxconnect: \"\", redirect: \"\", extraparams: \"\" };\n    if (connectParam) {\n        base64Content.okxconnect = connectParam;\n    }\n    if (redirectStr) {\n        base64Content.redirect = redirectStr;\n    }\n    let base64ContentStr = JSON.stringify(base64Content);\n    const utf8Array = new TextEncoder().encode(base64ContentStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    const urlSafeBase64 = (0, utils_1.toSafeBase64FromBase64)(base64Encoded);\n    (0, log_1.logDebug)('[TWA] open link:', base64Content, base64Encoded);\n    if (connectParam || redirectStr) {\n        if (!isInTMA()) {\n            // return `http://localhost:5173?tgWebAppStartParam=${urlSafeBase64}`\n            if ((0, constants_1.getTestTwaUrl)()) {\n                return `${(0, constants_1.getTestTwaUrl)()}?tgWebAppStartParam=${urlSafeBase64}`;\n            }\n            else {\n                return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}&startapp=${urlSafeBase64}`;\n            }\n        }\n        else {\n            if ((0, constants_1.getTestTgTwaUrl)()) {\n                return `${(0, constants_1.getTestTgTwaUrl)()}?startapp=${urlSafeBase64}`;\n            }\n            else {\n                return `https://t.me/${constants_1.tgwalletName}/start?startapp=${urlSafeBase64}`;\n            }\n        }\n    }\n    if (!isInTMA()) {\n        // return \"http://localhost:5173\"\n        if ((0, constants_1.getTestTwaUrl)()) {\n            return `${(0, constants_1.getTestTwaUrl)()}`;\n        }\n        else {\n            return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}`;\n        }\n    }\n    else {\n        if ((0, constants_1.getTestTgTwaUrl)()) {\n            return `${(0, constants_1.getTestTgTwaUrl)()}`;\n        }\n        else {\n            return `https://t.me/${constants_1.tgwalletName}/start`;\n        }\n    }\n}\n//  open TWA url in telegram\nfunction openOKXTMAWalletlinkWithFallback(twaDeepLink) {\n    var _a, _b, _c, _d, _e;\n    (0, log_1.logDebug)('[TWA] open link:', twaDeepLink, \"isInTMA ==> \", isInTMA());\n    if (!isInTMA()) {\n        if ((0, constants_1.getTestTwaUrl)()) {\n            window.open(twaDeepLink, '_blank');\n        }\n        else {\n            window.open(twaDeepLink, '_self');\n        }\n    }\n    else {\n        if ((_b = (_a = getWindow()) === null || _a === void 0 ? void 0 : _a.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) {\n            (_e = (_d = (_c = getWindow()) === null || _c === void 0 ? void 0 : _c.Telegram) === null || _d === void 0 ? void 0 : _d.WebApp) === null || _e === void 0 ? void 0 : _e.openTelegramLink(twaDeepLink);\n        }\n        else {\n            (0, tma_api_1.sendOpenTelegramLink)(twaDeepLink);\n        }\n    }\n}\n/**\n * Returns true if the app is running in TMA.\n */\nfunction urlSafeDecode(urlencoded) {\n    try {\n        urlencoded = urlencoded.replace(/\\+/g, '%20');\n        return decodeURIComponent(urlencoded);\n    }\n    catch (e) {\n        return urlencoded;\n    }\n}\nfunction urlParseQueryString(queryString) {\n    let params = {};\n    if (!queryString.length) {\n        return params;\n    }\n    let queryStringParams = queryString.split('&');\n    let i, param, paramName, paramValue;\n    for (i = 0; i < queryStringParams.length; i++) {\n        param = queryStringParams[i].split('=');\n        paramName = urlSafeDecode(param[0]);\n        paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n        params[paramName] = paramValue;\n    }\n    return params;\n}\nfunction urlParseHashParams(locationHash) {\n    locationHash = locationHash.replace(/^#/, '');\n    let params = {};\n    if (!locationHash.length) {\n        return params;\n    }\n    if (locationHash.indexOf('=') < 0 && locationHash.indexOf('?') < 0) {\n        params._path = urlSafeDecode(locationHash);\n        return params;\n    }\n    let qIndex = locationHash.indexOf('?');\n    if (qIndex >= 0) {\n        let pathParam = locationHash.substr(0, qIndex);\n        params._path = urlSafeDecode(pathParam);\n        locationHash = locationHash.substr(qIndex + 1);\n    }\n    let query_params = urlParseQueryString(locationHash);\n    for (let k in query_params) {\n        params[k] = query_params[k];\n    }\n    return params;\n}\nlet initParams = {};\ntry {\n    let locationHash = location.hash.toString();\n    initParams = urlParseHashParams(locationHash);\n}\ncatch (e) { }\nlet tmaPlatform = 'unknown';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppPlatform) {\n    tmaPlatform = (_a = initParams.tgWebAppPlatform) !== null && _a !== void 0 ? _a : 'unknown';\n}\nif (tmaPlatform === 'unknown') {\n    const window = getWindow();\n    tmaPlatform = (_d = (_c = (_b = window === null || window === void 0 ? void 0 : window.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : 'unknown';\n}\nfunction isInTMA() {\n    var _a;\n    return tmaPlatform !== 'unknown' || !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n}\n/**\n * Returns true if the app is running in the Telegram browser.\n */\nfunction isInTelegramBrowser() {\n    var _a;\n    const isTelegramWebview = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebview);\n    return (isInTMA() || isTelegramWebview) && tmaPlatform === 'unknown';\n}\nfunction getOKXLink(connectRequest, useMini = false, tmaReturnUrl) {\n    (0, log_1.logDebug)(`url  getOKXLink() called connectRequest==> ${JSON.stringify(connectRequest)}  useMini=> ${useMini}  tmaReturnUrl==> ${tmaReturnUrl}`);\n    if (useMini) {\n        var encodeTGParams = encodeTWAConnectURLParams(connectRequest);\n        return getTelegramWalletTWAUrl(encodeTGParams, tmaReturnUrl !== null && tmaReturnUrl !== void 0 ? tmaReturnUrl : \"back\");\n    }\n    else {\n        if ((0, utils_1.useShortLink)()) {\n            return getAppWalletShortDeepLink(connectRequest.topic, connectRequest.clientId);\n        }\n        else {\n            const base64Encoded = encodeConnectParams(connectRequest);\n            return `${protocol_1.standardDeeplink}?param=${base64Encoded}`;\n        }\n    }\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isValidObject = exports.RANDOM_LENGTH = exports.isBrowser = exports.resolveLocalStorage = exports.hasLocalStorage = exports.hasBuiltInWebSocket = exports.resolveWebSocketImplementation = void 0;\nexports.hexToByteArray = hexToByteArray;\nexports.toHexString = toHexString;\nexports.concatUint8Arrays = concatUint8Arrays;\nexports.splitToUint8Arrays = splitToUint8Arrays;\nexports.base64encode = base64encode;\nexports.base64decode = base64decode;\nexports.checkWSUrl = checkWSUrl;\nexports.hashKey = hashKey;\nexports.generateRandomBytes32 = generateRandomBytes32;\nexports.generateTopic = generateTopic;\nexports.generateGroupId = generateGroupId;\nexports.isIos = isIos;\nexports.getLastSixMd5Hash = getLastSixMd5Hash;\nexports.toSafeBase64FromBase64 = toSafeBase64FromBase64;\nexports.useShortLink = useShortLink;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst tweetnacl_util_1 = __importDefault(require(\"tweetnacl-util\"));\nconst to_string_1 = require(\"uint8arrays/to-string\");\nconst sha256_1 = require(\"@stablelib/sha256\");\nconst safejson_1 = require(\"./safejson\");\nconst log_1 = require(\"./log\");\nconst stringUtils_1 = require(\"../utils/stringUtils\");\nconst crypto_js_1 = __importDefault(require(\"crypto-js\"));\nconst BASE16 = \"base16\";\nfunction hexToByteArray(hexString) {\n    if (hexString.length % 2 !== 0) {\n        throw new Error(`Cannot convert ${hexString} to bytesArray`);\n    }\n    const result = new Uint8Array(hexString.length / 2);\n    for (let i = 0; i < hexString.length; i += 2) {\n        result[i / 2] = parseInt(hexString.slice(i, i + 2), 16);\n    }\n    return result;\n}\nfunction toHexString(byteArray) {\n    let hexString = '';\n    byteArray.forEach(byte => {\n        hexString += ('0' + (byte & 0xff).toString(16)).slice(-2);\n    });\n    return hexString;\n}\nfunction concatUint8Arrays(buffer1, buffer2) {\n    const mergedArray = new Uint8Array(buffer1.length + buffer2.length);\n    mergedArray.set(buffer1);\n    mergedArray.set(buffer2, buffer1.length);\n    return mergedArray;\n}\nfunction splitToUint8Arrays(array, index) {\n    if (index >= array.length) {\n        throw new Error('Index is out of buffer');\n    }\n    const subArray1 = array.slice(0, index);\n    const subArray2 = array.slice(index);\n    return [subArray1, subArray2];\n}\nfunction encodeUint8Array(value, urlSafe) {\n    const encoded = tweetnacl_util_1.default.encodeBase64(value);\n    if (!urlSafe) {\n        return encoded;\n    }\n    return encodeURIComponent(encoded);\n}\nfunction decodeToUint8Array(value, urlSafe) {\n    if (urlSafe) {\n        value = decodeURIComponent(value);\n    }\n    return tweetnacl_util_1.default.decodeBase64(value);\n}\nfunction base64encode(value, urlSafe) {\n    let uint8Array;\n    if (value instanceof Uint8Array) {\n        uint8Array = value;\n    }\n    else {\n        if (typeof value !== 'string') {\n            value = (0, safejson_1.safeJsonStringify)(value);\n        }\n        uint8Array = tweetnacl_util_1.default.decodeUTF8(value);\n    }\n    return encodeUint8Array(uint8Array, urlSafe);\n}\nfunction base64decode(value, urlSafe) {\n    const decodedUint8Array = decodeToUint8Array(value, urlSafe);\n    return {\n        toString() {\n            return tweetnacl_util_1.default.encodeUTF8(decodedUint8Array);\n        },\n        toObject() {\n            try {\n                return (0, safejson_1.safeJsonParse)(tweetnacl_util_1.default.encodeUTF8(decodedUint8Array));\n            }\n            catch (e) {\n                return null;\n            }\n        },\n        toUint8Array() {\n            return decodedUint8Array;\n        }\n    };\n}\nfunction checkWSUrl(url) {\n    const match = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!match || !match.length) {\n        return false;\n    }\n    let scheme = match[0];\n    if (scheme === undefined) {\n        return false;\n    }\n    return new RegExp(\"^wss?:\").test(scheme);\n}\nconst resolveWebSocketImplementation = () => {\n    if (typeof WebSocket !== \"undefined\") {\n        return WebSocket;\n    }\n    else if (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") {\n        return global.WebSocket;\n    }\n    else if (typeof window !== \"undefined\" && typeof window.WebSocket !== \"undefined\") {\n        return window.WebSocket;\n    }\n    else if (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\") {\n        return self.WebSocket;\n    }\n    return WebSocket;\n    //\n    // return require(\"ws\");\n};\nexports.resolveWebSocketImplementation = resolveWebSocketImplementation;\nconst hasBuiltInWebSocket = () => typeof WebSocket !== \"undefined\" ||\n    (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") ||\n    (typeof window !== \"undefined\" && typeof window.WebSocket !== \"undefined\") ||\n    (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\");\nexports.hasBuiltInWebSocket = hasBuiltInWebSocket;\nconst hasLocalStorage = () => (typeof global !== \"undefined\" && (typeof global.localStorage !== \"undefined\")) ||\n    (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\");\nexports.hasLocalStorage = hasLocalStorage;\nconst resolveLocalStorage = () => {\n    if (typeof global !== \"undefined\" && typeof global.localStorage !== \"undefined\") {\n        return global.localStorage;\n    }\n    else if (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\") {\n        return window.localStorage;\n    }\n    return localStorage;\n};\nexports.resolveLocalStorage = resolveLocalStorage;\nconst isBrowser = () => typeof window !== \"undefined\";\nexports.isBrowser = isBrowser;\nexports.RANDOM_LENGTH = 32;\nfunction hashKey(key, encode = BASE16) {\n    (0, log_1.logDebug)(`hash key called ${key}`);\n    const result = (0, sha256_1.hash)((0, stringUtils_1.okxfromString)(key, encode));\n    return (0, to_string_1.toString)(result, encode);\n}\nfunction generateRandomBytes32() {\n    return tweetnacl_1.default.randomBytes(exports.RANDOM_LENGTH);\n}\nfunction generateTopic() {\n    let randomBytes32 = generateRandomBytes32();\n    (0, log_1.logDebug)(`generate topic called ${randomBytes32}`);\n    return hashKey((0, to_string_1.toString)(randomBytes32, BASE16));\n}\nfunction generateGroupId() {\n    let randomBytes32 = tweetnacl_1.default.randomBytes(16);\n    (0, log_1.logDebug)(`generate groupid called ${randomBytes32}`);\n    return hashKey((0, to_string_1.toString)(randomBytes32, BASE16));\n}\nconst isValidObject = (obj) => Object.getPrototypeOf(obj) === Object.prototype && Object.keys(obj).length;\nexports.isValidObject = isValidObject;\nfunction isIos() {\n    const userAgent = navigator.userAgent;\n    const maxTouchPoints = navigator.maxTouchPoints || 0;\n    // 检测 iPhone、iPod 和传统的 iPad\n    const isIOSDevice = /iPad|iPhone|iPod/.test(userAgent) && !window.MSStream;\n    // 针对 iPadOS 13 及以上的设备进行额外判断\n    const isIPadOS = (userAgent.includes('Mac') && maxTouchPoints > 1);\n    (0, log_1.logDebug)(`utils isIos >>>isIOSDevice: ${isIOSDevice}    >> isIPadOS: ${isIPadOS}`);\n    // 如果是 iOS 设备或者是 iPadOS 设备，返回 true\n    return isIOSDevice || isIPadOS;\n}\nfunction getLastSixMd5Hash(input) {\n    // 生成 MD5 哈希\n    const hash = crypto_js_1.default.MD5(input).toString();\n    // 获取最后六位\n    return hash.slice(-6);\n}\nfunction toSafeBase64FromBase64(base64) {\n    return base64\n        .replace(/=/g, \"\")\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\");\n}\nfunction useShortLink() {\n    return !!window.useShortLink;\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.openLink = openLink;\nexports.openLinkBlank = openLinkBlank;\nexports.openDeeplinkWithFallback = openDeeplinkWithFallback;\nexports.isMobileUserAgent = isMobileUserAgent;\nexports.getUserAgent = getUserAgent;\nexports.isOS = isOS;\nexports.isBrowser = isBrowser;\nconst ua_parser_js_1 = __importDefault(require(\"ua-parser-js\"));\nconst log_1 = require(\"./log\");\nfunction openLink(href, target = '_self') {\n    (0, log_1.logDebug)('openLink', href, target);\n    window.open(href, target, 'noopener noreferrer');\n}\nfunction openLinkBlank(href) {\n    openLink(href, '_blank');\n}\nfunction openDeeplinkWithFallback(href, fallback) {\n    const doFallback = () => {\n        if (isBrowser('safari') || (isOS('android') && isBrowser('firefox'))) {\n            // Safari does not support fallback to direct link.\n            return;\n        }\n        fallback();\n    };\n    const fallbackTimeout = setTimeout(() => doFallback(), 500);\n    window.addEventListener('blur', () => clearTimeout(fallbackTimeout), { once: true });\n    openLink(href, '_self');\n}\nfunction isMobileUserAgent() {\n    let check = false;\n    (function (a) {\n        if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) ||\n            /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.slice(0, 4)))\n            check = true;\n    })(navigator.userAgent ||\n        navigator.vendor ||\n        window.opera);\n    return check;\n}\nfunction getUserAgent() {\n    var _a, _b, _c;\n    const results = new ua_parser_js_1.default().getResult();\n    const osName = (_a = results.os.name) === null || _a === void 0 ? void 0 : _a.toLowerCase();\n    const deviceModel = (_b = results.device.model) === null || _b === void 0 ? void 0 : _b.toLowerCase();\n    let os;\n    switch (true) {\n        case deviceModel === 'ipad':\n            os = 'ipad';\n            break;\n        case osName === 'ios':\n            os = 'ios';\n            break;\n        case osName === 'android':\n            os = 'android';\n            break;\n        case osName === 'mac os':\n            os = 'macos';\n            break;\n        case osName === 'linux':\n            os = 'linux';\n            break;\n        case osName === null || osName === void 0 ? void 0 : osName.includes('windows'):\n            os = 'windows';\n            break;\n    }\n    const browserName = (_c = results.browser.name) === null || _c === void 0 ? void 0 : _c.toLowerCase();\n    let browser;\n    switch (true) {\n        case browserName === 'chrome':\n            browser = 'chrome';\n            break;\n        case browserName === 'firefox':\n            browser = 'firefox';\n            break;\n        case browserName === null || browserName === void 0 ? void 0 : browserName.includes('safari'):\n            browser = 'safari';\n            break;\n        case browserName === null || browserName === void 0 ? void 0 : browserName.includes('opera'):\n            browser = 'opera';\n            break;\n    }\n    return {\n        os,\n        browser\n    };\n}\nfunction isOS(...os) {\n    return os.includes(getUserAgent().os);\n}\nfunction isBrowser(...browser) {\n    return browser.includes(getUserAgent().browser);\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXBtcProvider = void 0;\nconst _1 = require(\"./\");\nclass OKXBtcProvider {\n    constructor(provider) {\n        this.caip = [\n            \"btc:mainnet\",\n            \"fractal:mainnet\"\n        ];\n        this.provider = provider;\n    }\n    getAddressForChainId(chainId) {\n        var _a, _b;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let accounts = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        });\n        if (accounts == undefined || accounts.length < 0) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `no connected account`);\n        }\n        let account = accounts[0];\n        const address = account.split(':')[2];\n        return address;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let extra = (_c = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[ns]) === null || _b === void 0 ? void 0 : _b.extra) === null || _c === void 0 ? void 0 : _c[chainId];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        return {\n            address: this.getAddressForChainId(chainId),\n            publicKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param signStr\n     * @param chainId\n     * @param type\n     * @returns\n     */\n    signMessage(chainId, signStr, type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (signStr === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signMessage parmas error`);\n            }\n            let params = {\n                signStr: signStr,\n                from: this.getAddressForChainId(chainId)\n            };\n            if (type) {\n                params.type = type;\n            }\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signMessage\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param toAddress\n     * @param satoshis\n     * @param options { feeRate: 0 }\n     * @returns\n     */\n    sendBitcoin(chainId, toAddress, satoshis, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            let params = {\n                from: this.getAddressForChainId(chainId),\n                to: toAddress,\n                value: (satoshis / 100000000).toString(),\n            };\n            if (options === null || options === void 0 ? void 0 : options.feeRate) {\n                params[\"satBytes\"] = options.feeRate.toString();\n            }\n            let result = yield this.send(chainId, params);\n            if (result !== undefined && ('txhash' in result)) {\n                // return txhash directly\n                return result.txhash;\n            }\n            // or return unexpected result\n            return result;\n        });\n    }\n    //  from - string：当前连接的钱包的 BTC 地址\n    //  to - string：接受 BTC 的地址\n    //  value - string：发送 BTC 的数量\n    //  satBytes - string： (可选) 自定义费率\n    //  memo - string： (可选) 指定 outputs OP_RETURN 内容 示例\n    //  memoPos - number： (可选) 指定 outputs OP_RETURN 输出位置，如果传了 memo 则必须传入 memoPos 指定位置，否则 memo 不生效\n    send(chainId, input) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (!this.checkParameters(input, 'to', 'value')) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send parmas  error`);\n            }\n            input[\"from\"] = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: 'btc_send',\n                    params: input\n                }, chainId);\n                if ('result' in ret) {\n                    return {\n                        txhash: ret.result\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param psbtHex string 要签名的 psbt 的十六进制字符串\n     * @param options object { autoFinalized: 0 }\n     */\n    signPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.signPsbts(chainId, [psbtHex], [options]).then(psbtResults => {\n                    let results = JSON.parse(psbtResults);\n                    resolve(results[0]);\n                }).catch(error => {\n                    reject(error);\n                });\n            });\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHexs Array\n     * @param options Array [{ autoFinalized: 0 }]\n     * @returns\n     */\n    signPsbts(chainId, psbtHexs, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHexs === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHexs: psbtHexs,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signPsbts\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHex string\n     * @param options object\n     * @returns\n     */\n    signAndPushPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHex === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHex: psbtHex,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signAndPushPsbt\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return JSON.parse(ret.result);\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param address string, receiver address\n     * @param inscriptionId string, 铭文 ID + 协议，没有传协议则默认是 Ordinals NFT ，目前仅支持 Ordinals 及 Atomicals 协议\n     * @param options object, { feeRate: number } custom rates\n     */\n    sendInscription(chainId, address, inscriptionId, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let extension = {\n                address: address,\n                inscriptionId: inscriptionId,\n                options: options\n            };\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (address === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method sendInscription params error`);\n            }\n            var feeRate = 0;\n            if (options && ('feeRate' in options)) {\n                feeRate = options.feeRate;\n            }\n            let coinId = '';\n            let from = this.getAddressForChainId(chainId);\n            var protocolId = 7; //ProtocolIdBRCNFT\n            if (inscriptionId !== 'undefined') {\n                let atomicSuffix = \"-Atomicals\";\n                let ordinalsSuffix = \"-Ordinals\";\n                if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(atomicSuffix.toLowerCase())) {\n                    protocolId = 8; //WXRCProtocolIdARCNFT\n                    inscriptionId = this.removeSuffix(inscriptionId, atomicSuffix);\n                }\n                else if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(ordinalsSuffix.toLowerCase())) {\n                    inscriptionId = this.removeSuffix(inscriptionId, ordinalsSuffix);\n                }\n            }\n            let params = {\n                scenario: 5,\n                feeRate: feeRate,\n                txType: \"20\",\n                to: address,\n                batchBean: [\n                    {\n                        coinAmount: \"1\",\n                        nftId: inscriptionId,\n                        protocolId: protocolId,\n                        coinId: coinId,\n                        inscriptionId: \"\",\n                        from: from\n                    }\n                ],\n                extension: extension\n            };\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_sendInscription\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    removeSuffix(str, suffix) {\n        if (str.endsWith(suffix)) {\n            return str.slice(0, str.length - suffix.length);\n        }\n        return str;\n    }\n    checkParameters(params, ...keys) {\n        var unexistKeys = [];\n        keys.forEach(key => {\n            if (!(`${key}` in params)) {\n                unexistKeys.push(key);\n            }\n        });\n        if (unexistKeys.length > 0) {\n            console.log('not find key: ', unexistKeys.join(\",\"));\n            return false;\n        }\n        return true;\n    }\n    /**\n     *\n     * @param chainId eg. btc:mainnet\n     * @returns eg. btc\n     */\n    checkChainId(chainId) {\n        if (this.caip.includes(chainId)) {\n            let [namespaceKey, _] = chainId.split(\":\");\n            return namespaceKey;\n        }\n        return undefined;\n    }\n}\nexports.OKXBtcProvider = OKXBtcProvider;\nexports.default = OKXBtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCosmosProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXCosmosProvider {\n    constructor(provider) {\n        this.provider = provider;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e, _f;\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount chainId:\", chainId);\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount namespaces:\", JSON.stringify((_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces));\n        let account = (_c = (_b = this.provider.session) === null || _b === void 0 ? void 0 : _b.namespaces[core_1.NameSpaceKeyCosmos]) === null || _c === void 0 ? void 0 : _c.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount account:\", JSON.stringify(account));\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount address:\", address);\n        let extra = (_f = (_e = (_d = this.provider.session) === null || _d === void 0 ? void 0 : _d.namespaces[core_1.NameSpaceKeyCosmos]) === null || _e === void 0 ? void 0 : _e.extra) === null || _f === void 0 ? void 0 : _f[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n            console.log(\"aptos_publicKey\", publicKey);\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            algo: \"secp256k1\",\n            address: address,\n            bech32Address: address,\n            pubKey: this.hexToUint8Array(publicKey),\n        };\n    }\n    signArbitrary(chainId, signerAddress, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const base64Encoded = window.btoa(data);\n            const signDoc = {\n                chain_id: \"\",\n                account_number: \"0\",\n                sequence: \"0\",\n                fee: {\n                    gas: \"0\",\n                    amount: []\n                },\n                msgs: [{\n                        \"type\": \"sign/MsgSignData\",\n                        \"value\": {\n                            \"signer\": signerAddress,\n                            \"data\": base64Encoded\n                        }\n                    }],\n                memo: \"\"\n            };\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signArbitrary\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chain_id\": chainId.split(\":\")[1],\n                    \"data\": signDoc\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    if (typeof ret.result == \"string\") {\n                        return JSON.parse(ret.result);\n                    }\n                    else {\n                        return ret.result;\n                    }\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAmino(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (signDoc.msgs[0].type == \"sign/MsgSignData\") {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signArbitrary\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chain_id\": chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        return ret.result;\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    return error;\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                }\n            }\n            else {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signAmino\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chainId\": chainId.split(\":\")[1],\n                        \"sign_doc\": signDoc,\n                        \"signOptions\": signOptions\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        const resData = JSON.parse(ret.result);\n                        console.log(\"signdoc\", signDoc, resData.signDoc);\n                        signDoc.fee = resData.signDoc.fee;\n                        return { signed: signDoc, signature: resData.signature };\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                    return error;\n                }\n            }\n        });\n    }\n    signDirect(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const object = {\n                bodyBytes: this.bufferToHex(signDoc.bodyBytes),\n                authInfoBytes: this.bufferToHex(signDoc.authInfoBytes),\n                chainId: signDoc.chainId,\n                accountNumber: signDoc.accountNumber ? signDoc.accountNumber.toString() : null,\n                signOptions: signOptions ? signOptions : null\n            };\n            let data = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signDirect\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chainId\": chainId.split(\":\")[1],\n                    \"sign_doc\": object,\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    const res = JSON.parse(ret.result);\n                    console.log(\"signdirect result\", res);\n                    signDoc.authInfoBytes = this.messageToBuffer(res.signDoc.authInfoBytes);\n                    return { signed: signDoc, signature: res.signature };\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    messageToBuffer(message) {\n        var buffer = Uint8Array.from([]);\n        try {\n            if (typeof message === \"string\") {\n                buffer = this.hexToUint8Array(message.replace(\"0x\", \"\"));\n            }\n            else {\n                buffer = Uint8Array.from(message);\n            }\n        }\n        catch (err) {\n            console.log(`messageToBuffer error: ${err}`);\n        }\n        return buffer;\n    }\n    bufferToHex(arr) {\n        let output = [...new Uint8Array(arr)]\n            .map(x => x.toString(16).padStart(2, '0'))\n            .join('');\n        return '0x' + output;\n    }\n    hexToUint8Array(hexString) {\n        if (hexString.length % 2 !== 0) {\n            throw \"Invalid hexString\";\n        }\n        var arrayBuffer = new Uint8Array(hexString.length / 2);\n        for (var i = 0; i < hexString.length; i += 2) {\n            var byteValue = parseInt(hexString.substr(i, 2), 16);\n            if (isNaN(byteValue)) {\n                throw \"Invalid hexString\";\n            }\n            arrayBuffer[i / 2] = byteValue;\n        }\n        return arrayBuffer;\n    }\n}\nexports.OKXCosmosProvider = OKXCosmosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTonProvider = void 0;\nconst _1 = require(\"./\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTonProvider {\n    constructor(generator) {\n        this.statusChangeSubscriptions = [];\n        this.statusChangeErrorSubscriptions = [];\n        this.provider = generator;\n        this.provider.on(\"connect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event connect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"reconnect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event reconnect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"disconnect\", () => {\n            (0, core_1.logDebug)(\"OKXTONProvider event disconnect:\");\n            this.statusChangeSubscriptions.forEach(callback => callback(null));\n        });\n        this.provider.on(\"connect_error\", (error) => {\n            (0, core_1.logDebug)(\"OKXTONProvider event connect_error:\", JSON.stringify(error));\n            this.statusChangeErrorSubscriptions.forEach(errorsHandler => errorsHandler(error));\n        });\n    }\n    connected() {\n        if (this.provider.connected()) {\n            return !!this.provider.session.namespaces[\"ton\"];\n        }\n        return false;\n    }\n    account() {\n        try {\n            if (!this.provider.session) {\n                return null;\n            }\n            let tonNameSpace = this.provider.session.namespaces['ton'];\n            if (!tonNameSpace || !tonNameSpace.payload || !tonNameSpace.payload.ton_addr) {\n                return null;\n            }\n            let ton_addr = tonNameSpace.payload.ton_addr;\n            return {\n                address: ton_addr.address,\n                chain: ton_addr.network,\n                walletStateInit: ton_addr.walletStateInit,\n                publicKey: ton_addr.publicKey,\n            };\n        }\n        catch (e) {\n            (0, core_1.logDebug)(\"OKXTONProvider account  error:\", JSON.stringify(e));\n            return null;\n        }\n    }\n    wallet() {\n        if (this.connected()) {\n            try {\n                let sessionWallet = this.provider.session.wallet;\n                let tonDeviceInfo = {\n                    platform: sessionWallet.platform,\n                    appName: sessionWallet.appName,\n                    appVersion: sessionWallet.appVersion,\n                    maxProtocolVersion: sessionWallet.maxProtocolVersion,\n                    features: ['ton_sendTransaction'],\n                };\n                const wallet = {\n                    device: tonDeviceInfo,\n                    provider: \"http\",\n                    account: this.account()\n                };\n                let tonNameSpace = this.provider.session.namespaces['ton'];\n                if (tonNameSpace && tonNameSpace.payload && tonNameSpace.payload.ton_proof) {\n                    wallet.connectItems = {\n                        tonProof: tonNameSpace.payload.ton_proof\n                    };\n                }\n                (0, core_1.logDebug)(\"OKXTONProvider wallet :\", JSON.stringify(wallet));\n                return wallet;\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"OKXTONProvider wallet  error:\", JSON.stringify(e));\n                return null;\n            }\n        }\n        return null;\n    }\n    onStatusChange(callback, errorsHandler) {\n        this.statusChangeSubscriptions.push(callback);\n        if (errorsHandler) {\n            this.statusChangeErrorSubscriptions.push(errorsHandler);\n        }\n        return () => {\n            this.statusChangeSubscriptions = this.statusChangeSubscriptions.filter(item => item !== callback);\n            if (errorsHandler) {\n                this.statusChangeErrorSubscriptions = this.statusChangeErrorSubscriptions.filter(item => item !== errorsHandler);\n            }\n        };\n    }\n    sendTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (transaction.network && transaction.network !== core_1.TONCHAIN.MAINNET) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, 'OKXTONProvider sendTransaction network error');\n            }\n            if (!transaction.network) {\n                transaction.network = core_1.TONCHAIN.MAINNET;\n            }\n            if (this.provider.session) {\n                if (!transaction.from) {\n                    const accounts = this.provider.requestAccountsWithNamespace('ton');\n                    transaction.from = accounts[0];\n                }\n            }\n            const requestParams = {\n                method: \"ton_sendTransaction\",\n                params: transaction,\n            };\n            let chain = 'ton:' + core_1.TONCHAIN.MAINNET;\n            (0, core_1.logDebug)(\"OKXTONProvider sendTransaction transaction----:\", chain, JSON.stringify(requestParams));\n            return this.provider.request(requestParams, chain);\n        });\n    }\n}\nexports.OKXTonProvider = OKXTonProvider;\nexports.default = OKXTonProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTronProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTronProvider {\n    constructor(provider) {\n        this.TRON_CHAIN_ID = \"tron:mainnet\";\n        this.provider = provider;\n    }\n    getChain(chainId) {\n        if (chainId == null) {\n            chainId = this.TRON_CHAIN_ID;\n        }\n        if (chainId != this.TRON_CHAIN_ID) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, \"The chainId:\" + chainId + \"is wrong for OKXTronProvider\");\n        }\n        return chainId;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        chainId = this.getChain(chainId);\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyTron]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyTron]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address\n        };\n    }\n    stringToHex(str) {\n        let hex = '';\n        for (let i = 0; i < str.length; i++) {\n            hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n        }\n        return hex;\n    }\n    signMessage(data, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessage\",\n                \"params\": {\n                    \"message\": this.stringToHex(data)\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signMessageV2(data, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessageV2\",\n                \"params\": {\n                    \"message\": data\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let data = {\n                \"method\": \"tron_signTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    let signedTx;\n                    if (typeof ret.result == \"string\") {\n                        signedTx = JSON.parse(ret.result);\n                    }\n                    else {\n                        signedTx = ret.result;\n                    }\n                    let realSignTx = {};\n                    realSignTx.visible = signedTx.visible;\n                    realSignTx.txID = signedTx.txID;\n                    let rawData = {};\n                    rawData.contract = signedTx.raw_data.contract;\n                    rawData.expiration = signedTx.raw_data.expiration;\n                    rawData.ref_block_bytes = signedTx.raw_data.ref_block_bytes;\n                    rawData.ref_block_hash = signedTx.raw_data.ref_block_hash;\n                    rawData.timestamp = signedTx.raw_data.timestamp;\n                    realSignTx.raw_data = rawData;\n                    realSignTx.raw_data_hex = signedTx.raw_data_hex;\n                    realSignTx.signature = signedTx.signature;\n                    return realSignTx;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAndSendTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let data = {\n                \"method\": \"tron_signAndSendTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n}\nexports.OKXTronProvider = OKXTronProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXUniversalProvider = void 0;\nconst eip155_1 = require(\"./provider/providers/eip155\");\nconst sui_1 = require(\"./provider/providers/sui\");\nconst constants_1 = require(\"./provider/constants\");\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nconst client_1 = require(\"./packages/sign-client/client\");\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"./packages/utils/namespaces\");\nconst solana_1 = __importDefault(require(\"./provider/providers/solana\"));\nconst btc_1 = __importDefault(require(\"./provider/providers/btc\"));\nconst aptos_1 = __importDefault(require(\"./provider/providers/aptos\"));\nconst ton_1 = __importDefault(require(\"./provider/providers/ton\"));\nconst cosmos_1 = __importDefault(require(\"./provider/providers/cosmos\"));\nconst tron_1 = __importDefault(require(\"./provider/providers/tron\"));\nconst utils_1 = require(\"./provider/utils\");\nconst packages_1 = require(\"./packages\");\nconst provider_1 = require(\"./provider\");\nclass OKXUniversalProvider {\n    static init(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider init() called');\n            // ignore rpc provider check by default\n            (0, utils_1.setGlobal)('disableProviderPing', true);\n            let provider;\n            if (window && window.okxConnectUniversalinwindow && window.okxConnectUniversalinwindow instanceof OKXUniversalProvider) {\n                (0, core_1.logDebug)('OKXUniversalConnect init() old called');\n                provider = window.okxConnectUniversalinwindow;\n            }\n            else {\n                (0, core_1.logDebug)('OKXUniversalConnect init() new called');\n                provider = new OKXUniversalProvider(opts);\n                yield provider.initialize();\n                if (window) {\n                    window.okxConnectUniversalinwindow = provider;\n                }\n            }\n            (0, core_1.getDefaultReporter)().configVersionAndSide('universalprovider-1.5.2', 'dapp', provider.providerOpts.dappMetaData.name);\n            return provider;\n        });\n    }\n    constructor(opts) {\n        this.rpcProviders = {};\n        this.events = new eventemitter3_1.default();\n        this.providerOpts = opts;\n    }\n    request(args, chain) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider request() called');\n            (0, core_1.reportLog)('OKXUniversalProvider request() called');\n            if (!this.connected()) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return yield this.getProvider(namespace).request(requestParam);\n        });\n    }\n    buildRequestParamFromRequest(args, chain) {\n        var _a;\n        (0, core_1.logDebug)(\"UniversalProvider request args >>>>>>>: \", chain, JSON.stringify(args));\n        let [namespace, chainId] = this.validateChain(chain);\n        if (!this.session) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Please call connect() before request()\");\n        }\n        let keyArr = Object.keys(this.session.namespaces);\n        if (!chain && keyArr && keyArr.length > 1) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Multiple chains have been linked, the request method requires chain`);\n        }\n        if (namespace == \"aptos\" && chainId == \"mainnet\") {\n            namespace = \"aptos\";\n            chainId = \"637\";\n        }\n        if (namespace == \"movement\" && chainId == \"testnet\") {\n            namespace = \"aptos\";\n            chainId = \"70000060\";\n        }\n        const requestParam = Object.assign(Object.assign({}, args), { chainId: `${namespace}:${chainId}`, redirect: (_a = args.redirect) !== null && _a !== void 0 ? _a : this.sessionConfig.redirect });\n        return { namespace, requestParam };\n    }\n    enable() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.client) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (!this.session) {\n                if (this.connectOpts) {\n                    yield this.connect(this.connectOpts);\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n                }\n            }\n            const accounts = yield this.requestAccounts();\n            return accounts;\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider disconnect() called');\n            (0, core_1.reportLog)('provider disconnect called');\n            if (!this.session) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                let called = false;\n                const onRequestSent = () => __awaiter(this, void 0, void 0, function* () {\n                    if (!called) {\n                        called = true;\n                        yield this.disconnectAndEmit();\n                        yield this.cleanup();\n                        resolve();\n                        (0, core_1.logDebug)(\"UniversalProvider disconnect Disconnected\");\n                        (0, core_1.reportLog)('provider disconnect disconnected');\n                    }\n                });\n                try {\n                    yield this.client.disconnect();\n                    yield onRequestSent();\n                }\n                catch (e) {\n                    yield onRequestSent();\n                }\n            }));\n        });\n    }\n    disconnectAndEmit() {\n        var _a, _b;\n        this.client.engine.connectionManager.disconnect();\n        this.events.emit(\"disconnect\", { topic: (_a = this.session) === null || _a === void 0 ? void 0 : _a.topic });\n        this.events.emit(\"session_delete\", { topic: (_b = this.session) === null || _b === void 0 ? void 0 : _b.topic });\n    }\n    aptosChainNameToGeneralId(chainId) {\n        if (chainId == \"aptos:mainnet\") {\n            return \"aptos:637\";\n        }\n        else if (chainId == \"movement:testnet\") {\n            return \"aptos:70000060\";\n        }\n        else {\n            return chainId;\n        }\n    }\n    replaceAptos(opts) {\n        var _a, _b;\n        let aptosNameSpace = (_a = opts.namespaces) === null || _a === void 0 ? void 0 : _a[\"aptos\"];\n        if (aptosNameSpace != undefined) {\n            let realNS = this.replaceAptosInner(aptosNameSpace);\n            if (opts.namespaces != undefined && \"aptos\" in opts.namespaces && realNS != undefined) {\n                opts.namespaces.aptos = realNS;\n            }\n        }\n        let optionAptosNameSpace = (_b = opts.optionalNamespaces) === null || _b === void 0 ? void 0 : _b[\"aptos\"];\n        if (optionAptosNameSpace != undefined) {\n            let realOptionNS = this.replaceAptosInner(optionAptosNameSpace);\n            if (opts.optionalNamespaces != undefined && \"aptos\" in opts.optionalNamespaces && realOptionNS != undefined) {\n                opts.optionalNamespaces.aptos = realOptionNS;\n            }\n        }\n        return opts;\n    }\n    replaceAptosInner(aptosNameSpace) {\n        var _a;\n        if (aptosNameSpace != undefined) {\n            aptosNameSpace.chains = (_a = aptosNameSpace.chains) === null || _a === void 0 ? void 0 : _a.map(chainId => {\n                return this.aptosChainNameToGeneralId(chainId);\n            });\n            if (aptosNameSpace.defaultChain != undefined) {\n                aptosNameSpace.defaultChain = this.aptosChainNameToGeneralId(aptosNameSpace.defaultChain);\n            }\n        }\n        return aptosNameSpace;\n    }\n    replaceAptosGeneralIdWithNetName(chainId) {\n        if (chainId.includes(\"aptos:637\")) {\n            chainId = chainId.replace(\"aptos:637\", \"aptos:mainnet\");\n        }\n        else if (chainId.includes(\"aptos:70000060\")) {\n            chainId = chainId.replace(\"aptos:70000060\", \"movement:testnet\");\n        }\n        return chainId;\n    }\n    replaceSessionAptos(session) {\n        var _a;\n        let namespaces = (_a = session === null || session === void 0 ? void 0 : session.namespaces) === null || _a === void 0 ? void 0 : _a[\"aptos\"];\n        if (namespaces != undefined && namespaces.chains != undefined) {\n            namespaces.chains = namespaces.chains.map(chain => {\n                return this.replaceAptosGeneralIdWithNetName(chain);\n            });\n            namespaces.accounts = namespaces.accounts.map((account) => {\n                return this.replaceAptosGeneralIdWithNetName(account);\n            });\n            let extra = {};\n            Object.keys(namespaces.extra || {}).forEach((key, index) => {\n                let newKey = this.replaceAptosGeneralIdWithNetName(key);\n                extra[this.replaceAptosGeneralIdWithNetName(key)] = Object.values((session === null || session === void 0 ? void 0 : session.namespaces[\"aptos\"].extra) || {})[index];\n            });\n            namespaces.extra = extra;\n        }\n        (0, core_1.logDebug)(\"replaceSessionAptos\", session);\n    }\n    connected() {\n        (0, core_1.logDebug)('OKXUniversalProvider connected() called');\n        (0, core_1.reportLog)('provider connected called');\n        let disconnectInner = () => {\n            try {\n                this.cleanup();\n                this.client.engine.connectionManager.disconnect();\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"Error during disconnect:\", e);\n            }\n        };\n        try {\n            if (!this.session)\n                return false;\n            if (!this.client.engine.connectionManager.getCurrentConnectionReady()) {\n                disconnectInner();\n                return false;\n            }\n            return true;\n        }\n        catch (e) {\n            disconnectInner();\n            return false;\n        }\n    }\n    connectAndSign(opts, signRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() called');\n            const updatedOpts = Object.assign(Object.assign({}, opts), { signRequest });\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() opts:', JSON.stringify(opts));\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() signRequest:', JSON.stringify(signRequest));\n            return yield this.connect(updatedOpts);\n        });\n    }\n    connect(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider connect() called');\n            (0, core_1.reportLog)('provider connect called');\n            if (!this.client) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (this.connected()) {\n                return this.session;\n            }\n            opts = this.replaceAptos(opts);\n            (0, core_1.logDebug)(`OKXUniversalProvider connect >>>>`, JSON.stringify(opts));\n            if (opts.sessionConfig === undefined) {\n                opts.sessionConfig = {};\n            }\n            if (opts.sessionConfig.openUniversalUrl === undefined) {\n                opts.sessionConfig.openUniversalUrl = (0, core_1.isMobileUserAgent)();\n            }\n            this.setNamespaces(opts);\n            try {\n                (0, core_1.logDebug)(`UniversalProvider connect opts.stringify ====> ${JSON.stringify(opts)}`);\n                let session = yield this.client.connect(opts);\n                this.replaceSessionAptos(session);\n                (0, core_1.logDebug)(`UniversalProvider connect success ====> ${JSON.stringify(session)}`);\n                if (session) {\n                    this.session = session;\n                    this.client.session = session;\n                    (0, core_1.logDebug)(`OKXUniversalProvider connect success opts>>>>`, JSON.stringify(opts));\n                    this.onConnect();\n                    if (opts.signRequest && opts.signRequest.length > 0) {\n                        let requestItem = opts.signRequest[0];\n                        let signResponseList = [];\n                        if (typeof window !== \"undefined\" && window && window.okxConnectUniversalUIinwindow) { //from UI\n                            (0, core_1.logDebug)(`OKXUniversalProvider connect success, us UI SDK>>>>`);\n                            if (this.session.signResponse && this.session.signResponse.length > 0) { // >=6.96\n                                signResponseList = this.session.signResponse;\n                            }\n                        }\n                        else {\n                            (0, core_1.logDebug)(`OKXUniversalProvider connect success, us Universal SDK>>>>`);\n                            if (this.session.signResponse && this.session.signResponse.length > 0) { // >=6.96\n                                signResponseList = this.session.signResponse;\n                            }\n                            else {\n                                signResponseList.push((0, packages_1.creatNotSupportMethodItemReplay)(requestItem));\n                            }\n                        }\n                        (0, core_1.logDebug)(`UniversalProvider connect success connectRequestReply ====> ${JSON.stringify(signResponseList)}`);\n                        setTimeout(() => {\n                            this.events.emit(\"connect_signResponse\", signResponseList);\n                        }, 100);\n                    }\n                    return session;\n                }\n                return undefined;\n            }\n            catch (error) {\n                (0, core_1.logDebug)(`UniversalProvider connect error ====> `, JSON.stringify(error));\n                throw error;\n            }\n        });\n    }\n    syncAllAddresses() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if ((0, provider_1.syncAddressAvailable)(this.session.wallet)) {\n                return this.client.syncAllAddress();\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n            }\n        });\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    setDefaultChain(chain, rpcUrl) {\n        (0, core_1.logDebug)('OKXUniversalProvider setDefaultChain() called');\n        // chain = this.aptosChainNameToGeneralId(chain)\n        try {\n            // ignore without active session\n            if (!this.connected())\n                return;\n            const [namespace, chainId] = this.validateChain(chain);\n            const provider = this.getProvider(namespace);\n            provider.setDefaultChain(chainId, rpcUrl);\n        }\n        catch (error) {\n            // ignore the error if the fx is used prematurely before namespaces are set\n            if (!/Please call connect/.test(error.message))\n                throw error;\n        }\n    }\n    checkStorage() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let sessionInfoStr = yield this.getFromStore(\"connectSession\");\n            (0, core_1.logDebug)(sessionInfoStr);\n            if (sessionInfoStr) {\n                let sessionInfo = sessionInfoStr;\n                this.session = sessionInfo;\n                this.client.session = this.session;\n                this.sessionConfig = sessionInfo.sessionConfig;\n                this.client.sessionConfig = this.sessionConfig;\n                (0, core_1.logDebug)('[evm u-provider] do reconnection', this.session);\n                yield this.client.restoreconnect(sessionInfo);\n                this.createProviders();\n                this.registerEventListeners();\n                setTimeout(() => {\n                    this.events.emit(\"reconnect\", { session: this.session });\n                }, 100);\n                this.registerEventListeners();\n            }\n        });\n    }\n    initialize() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider initialize() called');\n            (0, core_1.reportLog)('provider initialize called');\n            const data = Object.assign({ url: window.location.hostname, origin: window.location.origin }, this.providerOpts.dappMetaData);\n            this.client = new client_1.SignClient(data, this.events);\n            yield this.checkStorage();\n        });\n    }\n    createProviders() {\n        if (!this.client) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n        }\n        if (!this.connected()) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Session not initialized. Please call connect() before enable()\");\n        }\n        const providersToCreate = [\n            ...new Set(Object.keys(this.session.namespaces).map((namespace) => (0, namespaces_1.parseNamespaceKey)(namespace))),\n        ];\n        providersToCreate.forEach((namespace) => {\n            if (!this.session)\n                return;\n            const namespacesValue = this.session.namespaces;\n            const currentNameSpace = namespacesValue[namespace];\n            (0, core_1.logDebug)(\"init eip155 >> \", currentNameSpace);\n            switch (namespace) {\n                case \"eip155\":\n                    const opts = {\n                        namespace: currentNameSpace\n                    };\n                    this.rpcProviders[namespace] = new eip155_1.Eip155Provider(opts, this.client, this.events);\n                    break;\n                case \"solana\":\n                    const opts1 = {\n                        namespace: currentNameSpace\n                    };\n                    let solanaProvider = new solana_1.default(opts1, \"solana\", this.client, this.events);\n                    this.rpcProviders[namespace] = solanaProvider;\n                    let sonicProvider = new solana_1.default(opts1, \"sonic\", this.client, this.events);\n                    this.rpcProviders['sonic'] = sonicProvider;\n                    let svmProvider = new solana_1.default(opts1, \"svm\", this.client, this.events);\n                    this.rpcProviders['svm'] = svmProvider;\n                    // this.rpcProviders[namespace] = new SolanaProvider(opts1, () => { return this.session; });\n                    break;\n                case \"ton\":\n                    const optsTon = {\n                        namespace: currentNameSpace\n                    };\n                    let tonProvider = new ton_1.default(optsTon, this.client, this.events);\n                    this.rpcProviders[namespace] = tonProvider;\n                    break;\n                case \"sui\":\n                    const optsSui = {\n                        namespace: currentNameSpace\n                    };\n                    let suiProvider = new sui_1.SuiProvider(optsSui, this.client, this.events);\n                    suiProvider.name = \"sui\";\n                    this.rpcProviders[namespace] = suiProvider;\n                    break;\n                case \"btc\":\n                    const optsBtc = {\n                        namespace: currentNameSpace\n                    };\n                    let btcProvider = new btc_1.default(optsBtc, \"btc\", this.client, this.events);\n                    this.rpcProviders[\"btc\"] = btcProvider;\n                    let fbProvider = new btc_1.default(optsBtc, \"fractal\", this.client, this.events);\n                    this.rpcProviders[\"fractal\"] = fbProvider;\n                    break;\n                case \"aptos\":\n                    let aptosProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"aptos\", this.client, this.events);\n                    this.rpcProviders[namespace] = aptosProvider;\n                    let moveProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"movement\", this.client, this.events);\n                    this.rpcProviders[\"movement\"] = moveProvider;\n                    break;\n                case \"cosmos\":\n                    let cosmosProvider = new cosmos_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = cosmosProvider;\n                    break;\n                case \"tron\":\n                    let tronProvider = new tron_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = tronProvider;\n                    break;\n            }\n        });\n    }\n    registerEventListeners() {\n        if (typeof this.client === \"undefined\") {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client is not initialized\");\n        }\n        this.client.engine.addDisconnectListener(() => {\n            this.disconnectAndEmit();\n            this.cleanup();\n        });\n        this.on(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, (caip2ChainId) => {\n            this.onChainChanged(caip2ChainId);\n        });\n        this.on(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, (nameSpaces) => {\n            if (nameSpaces) {\n                const nameSpacekey = Object.keys(nameSpaces)[0];\n                if (this.session) {\n                    this.session.namespaces[nameSpacekey] = nameSpaces[nameSpacekey];\n                    if (this.session) {\n                        this.persist(\"connectSession\", this.session);\n                        this.events.emit(\"session_update\", this.session);\n                    }\n                    (0, core_1.logDebug)(\"PROVIDER_EVENTS.UPDATE_NAMESPACES this.session... ->>>\", JSON.stringify(this.session));\n                }\n            }\n        });\n    }\n    getProvider(namespace) {\n        (0, core_1.logDebug)('current get providers', this.rpcProviders);\n        (0, core_1.logDebug)('query namespace: ', namespace);\n        return this.rpcProviders[namespace];\n    }\n    setNamespaces(params) {\n        this.connectOpts = params;\n        const { namespaces, sessionConfig } = params;\n        const data = {\n            origin: window.location.origin,\n            url: window.location.hostname,\n            name: this.providerOpts.dappMetaData.name,\n            icon: this.providerOpts.dappMetaData.icon,\n        };\n        this.sessionConfig = Object.assign({ dappInfo: data }, sessionConfig);\n        (0, core_1.logDebug)(\"setNamespaces sessionConfig>>>\", this.sessionConfig);\n        this.client.sessionConfig = this.sessionConfig;\n        this.persist(\"sessionConfig\", sessionConfig);\n    }\n    validateChain(chain) {\n        var _a;\n        let [namespace, chainId] = (chain === null || chain === void 0 ? void 0 : chain.split(\":\")) || [\"\", \"\"];\n        if (!this.session || !this.session.namespaces || !Object.keys(this.session.namespaces).length) {\n            (0, core_1.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        if (namespace) {\n            if (!this.isChainNamespaceInSession(namespace)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace '${namespace}' is not configured. Please call connect() first with namespace config.`);\n            }\n            if (chainId && chain) {\n                (0, core_1.logDebug)('this.session.namespaces -->> ', namespace, JSON.stringify(this.session.namespaces));\n                const chainsArr = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.chains;\n                (0, core_1.logDebug)('get chainsArr & chain', JSON.stringify(chainsArr), chain);\n                if (chainsArr && !chainsArr.includes(chain)) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace not include the chain '${chain}'`);\n                }\n            }\n        }\n        if (namespace && chainId) {\n            (0, core_1.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        let defaultNamespace = (0, namespaces_1.parseNamespaceKey)(Object.keys(this.session.namespaces)[0]);\n        const defaultChain = this.rpcProviders[defaultNamespace].getDefaultChain();\n        (0, core_1.logDebug)('get default chain:', defaultChain);\n        return [defaultNamespace, defaultChain];\n    }\n    isChainNamespaceInSession(namespaceStr) {\n        var _a, _b;\n        if (Object.keys(((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces) || {})\n            .map((key) => (0, namespaces_1.parseNamespaceKey)(key))\n            .includes(namespaceStr)) {\n            return true;\n        }\n        let isChainNamespaceInSession = false;\n        Object.values(((_b = this.session) === null || _b === void 0 ? void 0 : _b.namespaces) || {})\n            .forEach(namespace => {\n            namespace.chains.forEach(chain => {\n                if (chain.split(\":\")[0] == namespaceStr) {\n                    isChainNamespaceInSession = true;\n                }\n            });\n        });\n        return isChainNamespaceInSession;\n    }\n    requestAccountsWithNamespace(namespace) {\n        return this.getProvider(namespace).requestAccounts();\n    }\n    requestDefaultChainWithNamespace(namespace) {\n        return this.getProvider(namespace).getDefaultChain();\n    }\n    requestAccounts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const [namespace] = this.validateChain();\n            return yield this.getProvider(namespace).requestAccounts();\n        });\n    }\n    onChainChanged(caip2Chain) {\n        var _a;\n        if (!((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces))\n            return;\n        const [namespace, chainId] = this.validateChain(caip2Chain);\n        if (!chainId)\n            return;\n        if (this.session.namespaces[namespace]) {\n            this.session.namespaces[namespace].defaultChain = chainId;\n            this.persist(\"connectSession\", this.session);\n        }\n        this.events.emit(\"chainChanged\", chainId);\n    }\n    onConnect() {\n        this.createProviders();\n        if (this.session) {\n            this.persist(\"connectSession\", this.session);\n        }\n        this.events.emit(\"connect\", { session: this.session });\n        this.registerEventListeners();\n    }\n    cleanup() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.session = undefined;\n            this.client.session = undefined;\n            this.sessionProperties = undefined;\n            this.persist(\"optionalNamespaces\", undefined);\n            this.persist(\"sessionProperties\", undefined);\n            this.persist(\"connectSession\", undefined);\n        });\n    }\n    persist(key, data) {\n        (0, core_1.logDebug)('[evm u-provider] persisit data', key, data);\n        return this.client.engine.connectionManager.saveSessionContent(key, data);\n    }\n    getFromStore(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.client.engine.connectionManager.getSessionContent(key);\n        });\n    }\n    showRequestModal(args, chain) {\n        try {\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return this.getProvider(namespace).showRequestModal(requestParam);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n}\nexports.OKXUniversalProvider = OKXUniversalProvider;\nexports.default = OKXUniversalProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTronProvider = exports.OKXTonProvider = exports.OKXCosmosProvider = exports.OKXBtcProvider = exports.OKXUniversalProvider = void 0;\n__exportStar(require(\"./provider/types\"), exports);\n__exportStar(require(\"./packages\"), exports);\nvar OKXUniversalProvider_1 = require(\"./OKXUniversalProvider\");\nObject.defineProperty(exports, \"OKXUniversalProvider\", { enumerable: true, get: function () { return OKXUniversalProvider_1.OKXUniversalProvider; } });\nvar OKXBtcProvider_1 = require(\"./OKXBtcProvider\");\nObject.defineProperty(exports, \"OKXBtcProvider\", { enumerable: true, get: function () { return OKXBtcProvider_1.OKXBtcProvider; } });\nvar OKXCosmosProvider_1 = require(\"./OKXCosmosProvider\");\nObject.defineProperty(exports, \"OKXCosmosProvider\", { enumerable: true, get: function () { return OKXCosmosProvider_1.OKXCosmosProvider; } });\nvar OKXTonProvider_1 = require(\"./OKXTonProvider\");\nObject.defineProperty(exports, \"OKXTonProvider\", { enumerable: true, get: function () { return OKXTonProvider_1.OKXTonProvider; } });\nvar OKXTronProvider_1 = require(\"./OKXTronProvider\");\nObject.defineProperty(exports, \"OKXTronProvider\", { enumerable: true, get: function () { return OKXTronProvider_1.OKXTronProvider; } });\n__exportStar(require(\"@okxconnect/core\"), exports);\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignClient = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"../utils/namespaces\");\nconst ConnectMethodUtils_1 = require(\"../utils/ConnectMethodUtils\");\nconst constants_1 = require(\"../../provider/constants\");\nclass SignClient extends core_1.ISignClient {\n    constructor(metaData, events) {\n        super(metaData);\n        // ---------- Engine ----------------------------------------------- //\n        this.connect = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    var connectRequest = [];\n                    (0, core_1.logDebug)(`client connect params >>>`, JSON.stringify(params));\n                    var requestAccountItem = {\n                        name: \"requestAccounts\",\n                        requiredNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.namespaces),\n                        optionalNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.optionalNamespaces),\n                    };\n                    this.engine.setSessionConnectingListener(() => {\n                        (0, core_1.logDebug)(`sessionConnectingListener >>>`);\n                        this.events.emit(constants_1.PROVIDER_EVENTS.SESSION_CONNECTING);\n                    });\n                    if (params.signRequest) {\n                        requestAccountItem.connectRequestMethods = yield (0, ConnectMethodUtils_1.connectMethodsToConnectWalletMethods)(params.signRequest, requestAccountItem.requiredNamespaces);\n                    }\n                    connectRequest.push(requestAccountItem);\n                    (0, core_1.logDebug)(`client connect connectRequest >>>`, JSON.stringify(connectRequest));\n                    this.engine.universalConnect(connectRequest, Object.assign({ dappInfo: this.metadata }, params.sessionConfig), (info) => {\n                        if (info && info.connectRequest) {\n                            (0, core_1.logDebug)(`universalConect info.connectRequest :`, info.connectRequest);\n                            (0, core_1.logDebug)(`universalConect url:`, (0, core_1.getOKXLink)(info.connectRequest, this.sessionConfig.useMini));\n                            this.events.emit(\"display_uri\", (0, core_1.getOKXLink)(info.connectRequest, this.sessionConfig.useMini));\n                            this.events.emit(\"short_display_uri\", (0, core_1.getAppWalletShortDeepLink)(info.connectRequest.topic, info.connectRequest.clientId));\n                            (0, core_1.logDebug)(`universalConect EngineConnectInfo  ${JSON.stringify(info)}`);\n                            this.events.emit(\"okx_engine_connect_params\", info);\n                        }\n                    }).then((session) => __awaiter(this, void 0, void 0, function* () {\n                        (0, namespaces_1.fillParamsToSession)(session, params.namespaces, params.optionalNamespaces, this.sessionConfig);\n                        (0, core_1.logDebug)(`signClient: connect: session ${JSON.stringify(session)}`);\n                        if (params.signRequest) {\n                            yield (0, ConnectMethodUtils_1.connectMethodsResponseUpdate)(session, params.signRequest);\n                        }\n                        resolve(session);\n                    })).catch((e) => {\n                        (0, core_1.logDebug)(`signClient: connect: catch ${JSON.stringify(e)}`);\n                        this.events.emit(\"connect_error\", e);\n                        reject(e);\n                    });\n                }\n                catch (error) {\n                    (0, core_1.logDebug)(`signClient: connect:  ${JSON.stringify(error)}`);\n                    reject(error);\n                }\n            }));\n        });\n        this.restoreconnect = (sessionConfig) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.restoreconnect(sessionConfig, (session) => {\n                    resolve(session);\n                });\n            });\n        });\n        this.reject = (params) => __awaiter(this, void 0, void 0, function* () {\n            //   try {\n            //     return await this.engine.reject(params);\n            //   } catch (error: any) {\n            //     this.logger.error(error.message);\n            //     throw error;\n            //   }\n        });\n        //\n        // public update: ISignClient[\"update\"] = async (params) => {\n        //   return\n        // //   try {\n        // //     return await this.engine.update(params);\n        // //   } catch (error: any) {\n        // //     this.logger.error(error.message);\n        // //     throw error;\n        // //   }\n        // };\n        this.request = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                (0, core_1.logDebug)(\"clint request --params>>>> >\", this.engine.connectionManager.getCurrentConnectionReady(), (_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl, JSON.stringify(params));\n                try {\n                    // this.sessionConfig\n                    if (((_b = this.sessionConfig) === null || _b === void 0 ? void 0 : _b.openUniversalUrl) && (0, core_1.isIos)()) {\n                        this.openOKXWallet();\n                    }\n                    yield this.engine.send(params, {\n                        resolve: (response) => {\n                            delete response.requestId;\n                            (0, core_1.logDebug)(\"clint request --response >\", JSON.stringify(response));\n                            if (('error' in response) && response.error) {\n                                let error = response.error;\n                                reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                            }\n                            else {\n                                resolve(response);\n                            }\n                        },\n                        onAck: () => {\n                            var _a;\n                            if (!(0, core_1.isIos)() && ((_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl)) {\n                                this.openOKXWallet();\n                            }\n                        }\n                    });\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }));\n        });\n        // public emit: ISignClient[\"emit\"] = async (params) => {\n        //     try {\n        //         // return await this.engine.emit(params);\n        //     } catch (error: any) {\n        //         throw error;\n        //     }\n        // };\n        this.disconnect = () => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"disconnect\"\n                }, {\n                    onAck: () => {\n                        resolve();\n                    }\n                }, undefined, 86400000).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n        this.engine = new core_1.Engine(new core_1.ConnectionManager(metaData.name));\n        this.events = events;\n        this.metadata = metaData;\n    }\n    openOKXWallet() {\n        var _a;\n        // if (this.openUniversalUrl){\n        (0, core_1.logDebug)('bridge-provider ==>> connect_5');\n        if ((_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.useMini) {\n            let url = (0, core_1.getTelegramWalletTWAUrl)(undefined, this.sessionConfig.tmaReturnUrl);\n            (0, core_1.openOKXTMAWalletlinkWithFallback)(url);\n        }\n        else {\n            (0, core_1.openOKXDeeplink)(core_1.standardDeeplink);\n        }\n        // }\n    }\n    syncAllAddress() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"sync_all_addresses\"\n                }, {\n                    resolve: (response) => {\n                        delete response.requestId;\n                        (0, core_1.logDebug)(\"clint syncAllAddress --response >\", JSON.stringify(response));\n                        if (('error' in response) && response.error) {\n                            let error = response.error;\n                            reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                        }\n                        else {\n                            let allAddressStr = response.result;\n                            resolve((0, ConnectMethodUtils_1.syncResoonseToRequire)(allAddressStr));\n                        }\n                    }\n                }).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n    }\n}\nexports.SignClient = SignClient;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.connectSupportMethods = void 0;\nexports.creatNotSupportMethodItemReplay = creatNotSupportMethodItemReplay;\nexports.connectMethodsAdaptOldVersion = connectMethodsAdaptOldVersion;\nexports.connectMethodsResponseUpdate = connectMethodsResponseUpdate;\nexports.connectMethodsToConnectWalletMethods = connectMethodsToConnectWalletMethods;\nexports.syncResoonseToRequire = syncResoonseToRequire;\nconst core_1 = require(\"@okxconnect/core\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst uint8array_extras_1 = require(\"uint8array-extras\");\nconst provider_1 = require(\"../../provider\");\nfunction isArray(value) {\n    return typeof value === \"object\" && value !== null && Array.isArray(value);\n}\nfunction isRecord(value) {\n    return typeof value === \"object\" && value !== null && !Array.isArray(value);\n}\n// \"wallet_addEthereumChain\",\nexports.connectSupportMethods = Object.freeze([\n    \"personal_sign\",\n    \"solana_signMessage\",\n    \"sui_signMessage\",\n    \"sui_signPersonalMessage\",\n    \"btc_signMessage\",\n    \"aptos_signMessage\",\n    \"cosmos_signArbitrary\",\n    \"tron_signMessage\",\n    \"tron_signMessageV2\",\n    \"sync_all_addresses\"\n]);\nfunction creatNotSupportMethodItemReplay(requestParams) {\n    let notSupportError = new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n    var errorItem = {\n        method: requestParams.method,\n        chainId: requestParams.chainId,\n        error: {\n            code: notSupportError.code,\n            message: notSupportError.message\n        },\n    };\n    return errorItem;\n}\nfunction connectMethodsAdaptOldVersion(requestParams, session) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b, _c, _d, _e;\n        try {\n            (0, core_1.logDebug)(\"connectMethodsAdaptOldVersion start params :\", JSON.stringify(requestParams));\n            let callBackParams = {};\n            if (requestParams.method === \"solana_signMessage\") {\n                let solAccount = (_a = session.namespaces[core_1.NameSpaceKeySOL]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account1) {\n                    return account1.startsWith(requestParams.chainId);\n                })[0];\n                const solAddress = (0, provider_1.fromAccountToAddress)(solAccount);\n                if (requestParams.params && solAddress && \"message\" in requestParams.params) {\n                    let realMessage = requestParams.params.message;\n                    if (((_b = session.wallet) === null || _b === void 0 ? void 0 : _b.appName) == \"OKX Wallet\") {\n                        realMessage = bs58_1.default.encode((0, uint8array_extras_1.stringToUint8Array)(realMessage));\n                    }\n                    requestParams.params = {\n                        message: realMessage,\n                        \"pubkey\": solAddress\n                    };\n                    callBackParams = {\n                        publicKey: solAddress\n                    };\n                    (0, core_1.logDebug)(\"solana_signMessage account and address:\", JSON.stringify(solAccount), solAddress);\n                    (0, core_1.logDebug)(\"solana_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"sui_signMessage\" || requestParams.method === \"sui_signPersonalMessage\") {\n                if (\"message\" in requestParams.params && requestParams.params.message) {\n                    let suiMessage = JSON.parse(JSON.stringify(requestParams.params.message));\n                    let convertedArray = Object.values(suiMessage);\n                    let uint8Array = new Uint8Array(convertedArray);\n                    let decoder = new TextDecoder(\"utf8\");\n                    let b64encoded = btoa(decoder.decode(uint8Array));\n                    requestParams.params = {\n                        message: atob(b64encoded),\n                    };\n                    console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", JSON.stringify(requestParams.params), b64encoded);\n                    if (requestParams.method === \"sui_signMessage\") {\n                        callBackParams = {\n                            \"messageBytes\": b64encoded,\n                            \"signature\": \"\"\n                        };\n                    }\n                    else if (requestParams.method === \"sui_signPersonalMessage\") {\n                        callBackParams = {\n                            \"bytes\": b64encoded,\n                            \"signature\": \"\"\n                        };\n                    }\n                    (0, core_1.logDebug)(\"sui_signMessage/sui_signPersonalMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"btc_signMessage\") {\n                let btcAccounts = (_c = session.namespaces[core_1.NameSpaceKeyBtc]) === null || _c === void 0 ? void 0 : _c.accounts.filter(function (account2) {\n                    return account2.startsWith(requestParams.chainId);\n                });\n                let btcAccount = btcAccounts[0];\n                const btcAddress = (0, provider_1.fromAccountToAddress)(btcAccount);\n                (0, core_1.logDebug)(\"btc_signMessage account and address:\", JSON.stringify(btcAccount), btcAddress);\n                if (btcAddress) {\n                    requestParams.params[\"from\"] = btcAddress;\n                    (0, core_1.logDebug)(\"btc_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"aptos_signMessage\") {\n                let paramData = requestParams.params;\n                let aptosAccount = (_d = session.namespaces[core_1.NameSpaceKeyAptos]) === null || _d === void 0 ? void 0 : _d.accounts.filter(function (account3) {\n                    return account3.startsWith(requestParams.chainId);\n                })[0];\n                let aptosAddress = (0, provider_1.fromAccountToAddress)(aptosAccount);\n                if (paramData && aptosAddress) {\n                    let prefix = \"APTOS\";\n                    let message = \"\", nonce = \"\";\n                    var fullMessage = prefix;\n                    let application = window.location.protocol + \"//\" + window.location.hostname;\n                    if (\"address\" in paramData && paramData.address) {\n                        fullMessage += \"\\naddress: \" + aptosAddress;\n                    }\n                    if (\"application\" in paramData && paramData.application) {\n                        fullMessage += \"\\napplication: \" + application;\n                    }\n                    let aptosChainId = 1;\n                    if (\"chainId\" in paramData && paramData.chainId) {\n                        if (paramData.chainId == \"aptos:mainnet\") {\n                            aptosChainId = 1;\n                        }\n                        else if (paramData.chainId == \"movement:testnet\") {\n                            aptosChainId = 2;\n                        }\n                        fullMessage += \"\\nchainId: \" + aptosChainId;\n                    }\n                    if (\"message\" in paramData) {\n                        fullMessage += \"\\nmessage: \" + paramData.message;\n                        message = paramData.message;\n                    }\n                    if (\"nonce\" in paramData) {\n                        fullMessage += \"\\nnonce: \" + paramData.nonce;\n                        nonce = paramData.nonce;\n                    }\n                    const utf8Array = new TextEncoder().encode(fullMessage);\n                    const hex = Array.from(utf8Array)\n                        .map(byte => byte.toString(16).padStart(2, \"0\"))\n                        .join(\"\");\n                    requestParams.params = {\n                        \"message\": hex,\n                    };\n                    (0, core_1.logDebug)(\"aptos_signMessage requestParams:\", JSON.stringify(requestParams));\n                    callBackParams = {\n                        address: aptosAddress,\n                        application: application,\n                        chainId: aptosChainId,\n                        fullMessage: fullMessage,\n                        message: message,\n                        nonce: nonce,\n                        prefix: prefix,\n                        signature: \"\",\n                    };\n                    (0, core_1.logDebug)(\"aptos_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"cosmos_signArbitrary\") {\n                let cosmosAccount = (_e = session === null || session === void 0 ? void 0 : session.namespaces[core_1.NameSpaceKeyCosmos]) === null || _e === void 0 ? void 0 : _e.accounts.filter(function (account_cosmos) {\n                    return account_cosmos.startsWith(requestParams.chainId);\n                })[0];\n                const cosmosAddress = (0, provider_1.fromAccountToAddress)(cosmosAccount);\n                let cosmosData = requestParams.params[\"message\"];\n                const cosmosBase64Encoded = (0, uint8array_extras_1.stringToBase64)(cosmosData);\n                (0, core_1.logDebug)(\"cosmos_signArbitrary account and address:\", JSON.stringify(cosmosAccount), cosmosAddress);\n                (0, core_1.logDebug)(\"cosmos_signArbitrary cosmosBase64Encoded:\", cosmosBase64Encoded);\n                if (cosmosData && cosmosAddress) {\n                    const signDoc = {\n                        chain_id: \"\",\n                        account_number: \"0\",\n                        sequence: \"0\",\n                        fee: {\n                            gas: \"0\",\n                            amount: []\n                        },\n                        msgs: [{\n                                \"type\": \"sign/MsgSignData\",\n                                \"value\": {\n                                    \"signer\": cosmosAddress,\n                                    \"data\": cosmosBase64Encoded\n                                }\n                            }],\n                        memo: \"\"\n                    };\n                    requestParams.params = {\n                        \"signer\": cosmosAddress,\n                        \"chain_id\": requestParams.chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    };\n                    (0, core_1.logDebug)(\"cosmos_signArbitrary callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            (0, core_1.logDebug)(\"sol_handleSignatureData end params:\", JSON.stringify(requestParams));\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\nfunction connectMethodsResponseUpdate(session, requestParams) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a;\n        try {\n            if (session.signResponse) {\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate signResponse:\", JSON.stringify(session.signResponse));\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate session.namespaces:\", JSON.stringify(session.namespaces));\n                for (const methodItem of session.signResponse) {\n                    (0, core_1.logDebug)(\"connectMethodsResponseUpdate methodItem:\", JSON.stringify(methodItem));\n                    if (\"result\" in methodItem) {\n                        if (methodItem.method === \"solana_signMessage\") {\n                            let solanaSuccessData = methodItem.result;\n                            (0, core_1.logDebug)(\"solana_signMessage methodItem.chainId:\", methodItem.chainId);\n                            let account = (_a = session.namespaces[core_1.NameSpaceKeySOL]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account) {\n                                (0, core_1.logDebug)(\"solana_signMessage account:\", account);\n                                return account.startsWith(methodItem.chainId);\n                            })[0];\n                            (0, core_1.logDebug)(\"solana_signMessage result account:\", solanaSuccessData, account);\n                            if (solanaSuccessData && account) {\n                                methodItem.result = {\n                                    \"signature\": bs58_1.default.decode(solanaSuccessData),\n                                    \"publicKey\": (0, provider_1.fromAccountToAddress)(account)\n                                };\n                            }\n                        }\n                        else if (methodItem.method === \"sui_signMessage\" || methodItem.method === \"sui_signPersonalMessage\") {\n                            let suiMethod = requestParams.filter(function (requestMethod) {\n                                return requestMethod.method === methodItem.method;\n                            })[0];\n                            if (suiMethod && suiMethod.params && \"message\" in suiMethod.params) {\n                                let suiMessage = suiMethod.params.message;\n                                let suiMessageb64 = btoa(suiMessage);\n                                console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", suiMessage, suiMessageb64);\n                                if (methodItem.method === \"sui_signMessage\") {\n                                    methodItem.result = {\n                                        \"messageBytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                                else if (methodItem.method === \"sui_signPersonalMessage\") {\n                                    methodItem.result = {\n                                        \"bytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                            }\n                        }\n                        else if (methodItem.method === \"aptos_signMessage\") {\n                            if (methodItem.chainId === \"aptos:637\") {\n                                methodItem.chainId = \"aptos:mainnet\";\n                            }\n                            else if (methodItem.chainId === \"aptos:70000060\") {\n                                methodItem.chainId = \"movement:testnet\";\n                            }\n                            methodItem.result = JSON.parse(methodItem.result);\n                            console.log(\"aptos_signMessage result methodItem.result before:>>>>\", JSON.stringify(methodItem.result));\n                            if (methodItem.result && \"signature\" in methodItem.result) {\n                                let aptosSignature = methodItem.result.signature;\n                                if (aptosSignature && aptosSignature.startsWith(\"0x\")) {\n                                    aptosSignature = aptosSignature.slice(2, aptosSignature.length);\n                                    methodItem.result.signature = aptosSignature;\n                                }\n                            }\n                            console.log(\"aptos_signMessage result methodItem.result after:>>>>\", JSON.stringify(methodItem.result));\n                        }\n                        else if (methodItem.method === \"cosmos_signArbitrary\") {\n                            methodItem.result = JSON.parse(methodItem.result);\n                        }\n                        else if (methodItem.method == 'sync_all_addresses') {\n                            methodItem.result = syncResoonseToRequire(methodItem.result);\n                        }\n                    }\n                }\n            }\n        }\n        catch (error) {\n            (0, core_1.logDebug)(\"connectMethodsResponseUpdate signResponse Error:\", JSON.stringify(error));\n            throw error;\n        }\n    });\n}\nfunction connectMethodsToConnectWalletMethods(params, requireNameSpace) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods requestMethods:\", JSON.stringify(params));\n            const result = [];\n            //TODO  后面需要打开限制\n            if (params && params.length > 1) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect requestMethods only support one data`);\n            }\n            if (!requireNameSpace && params && params.length > 0) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error , RequestMethods cannot be added when the NameSpace is empty`);\n            }\n            // check chianId\n            for (const methodItem of params) {\n                if (methodItem.method === \"aptos_signMessage\") { //update chainId\n                    if (methodItem.chainId === \"aptos:mainnet\") {\n                        methodItem.chainId = \"aptos:637\";\n                    }\n                    else if (methodItem.chainId === \"movement:testnet\") {\n                        methodItem.chainId = \"aptos:70000060\";\n                    }\n                }\n                // check chianId\n                if (methodItem.method === \"wallet_addEthereumChain\") {\n                    var includeEip155 = requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.namespace.includes(\"eip155\"));\n                    if (!includeEip155) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', the EVM chain needs to be included in the NameSpace`);\n                    }\n                }\n                else if (methodItem.method === \"sync_all_addresses\") {\n                    if ((0, provider_1.syncAddressHostAvailable)()) {\n                        methodItem.chainId = \"\";\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                    }\n                }\n                else {\n                    const includeChain = !!(requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.chains.some(chain => chain.includes(`${methodItem.chainId}`))));\n                    if (!includeChain) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', NameSpace must contain '${methodItem.chainId}'`);\n                    }\n                }\n            }\n            for (const item of params) {\n                if (!exports.connectSupportMethods.includes(item.method)) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect requestMethods not support method, method: '${item.method}'`);\n                }\n                if (item.method === \"wallet_addEthereumChain\") {\n                    if (Array.isArray(item.params)) {\n                        const paramsArr = item.params;\n                        if (paramsArr && paramsArr.length === 1) {\n                            const firstParam = paramsArr[0];\n                            if (isRecord(firstParam)) {\n                                item.params = firstParam;\n                            }\n                        }\n                        else if (paramsArr && paramsArr.length > 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params only support one data, method: '${item.method}'`);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is nil, method: '${item.method}'`);\n                        }\n                    }\n                }\n                else if (item.method === \"personal_sign\") {\n                    if (isArray(item.params)) {\n                        if (item.params && item.params.length !== 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params error,  method: '${item.method}' `);\n                        }\n                        let firstObj = item.params[0];\n                        if (firstObj && typeof firstObj === 'string') {\n                            item.params = {\n                                message: firstObj\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                }\n                else if (item.method === \"sui_signMessage\" || item.method === \"sui_signPersonalMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message) {\n                            (0, core_1.logDebug)(\"sui_signMessage item.params.message :\", item.params.message);\n                            let message = JSON.parse(JSON.stringify(item.params.message));\n                            let convertedArray = Object.values(message);\n                            let uint8Array = new Uint8Array(convertedArray);\n                            let decoder = new TextDecoder(\"utf8\");\n                            let b64encoded = btoa(decoder.decode(uint8Array));\n                            item.params.message = atob(b64encoded);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"solana_signMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            item.params[\"bs58Message\"] = bs58_1.default.encode((0, uint8array_extras_1.stringToUint8Array)(item.params.message));\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"aptos_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (item.chainId && (item.chainId === \"aptos:637\" || item.chainId === \"aptos:70000060\")) {\n                            var aptosParams = item.params;\n                            var currentURL = window.location.protocol + \"//\" + window.location.hostname;\n                            let signChainId = 1;\n                            if (item.chainId === \"aptos:637\") {\n                            }\n                            else if (item.chainId === \"aptos:70000060\") {\n                                signChainId = 2;\n                            }\n                            item.params = {\n                                data: aptosParams,\n                                applicationUrl: currentURL,\n                                prefix: \"APTOS\",\n                                aptosChainId: signChainId\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"cosmos_signArbitrary\") {\n                    if (isRecord(item.params)) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            const base64Encoded = (0, uint8array_extras_1.stringToBase64)(item.params.message);\n                            let cosmosChain = item.chainId.split(\":\")[1];\n                            if (cosmosChain) {\n                                item.params = {\n                                    chain_id: cosmosChain,\n                                    data: {\n                                        chain_id: \"\",\n                                        account_number: \"0\",\n                                        sequence: \"0\",\n                                        fee: {\n                                            gas: \"0\",\n                                            amount: []\n                                        },\n                                        msgs: [{\n                                                \"type\": \"sign/MsgSignData\",\n                                                \"value\": {\n                                                    \"signer\": \"\", //address\n                                                    \"data\": base64Encoded\n                                                }\n                                            }],\n                                        memo: \"\"\n                                    }\n                                };\n                            }\n                            else {\n                                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                            }\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params message is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method == \"tron_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (\"message\" in item.params && item.params.message && typeof item.params.message === 'string') {\n                            item.params.message = stringToHex(item.params.message);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods item:\", JSON.stringify(item));\n                result.push(item);\n            }\n            return result;\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\nfunction stringToHex(str) {\n    let hex = '';\n    for (let i = 0; i < str.length; i++) {\n        hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n    }\n    return hex;\n}\nfunction syncResoonseToRequire(responseAddressStr) {\n    const allAddress = JSON.parse(responseAddressStr);\n    const result = {\n        type: allAddress.type,\n        isEvm: allAddress.isEvm,\n        walletName: allAddress.walletName,\n        deriveName: allAddress.deriveName,\n        addresses: allAddress.addresses.map((addr) => ({\n            coinId: addr.ci,\n            address: addr.a && addr.a !== 'null' ? addr.a : allAddress.evmAddress,\n        })),\n    };\n    return result;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.creatNotSupportMethodItemReplay = exports.connectMethodsAdaptOldVersion = void 0;\nvar ConnectMethodUtils_1 = require(\"./ConnectMethodUtils\");\nObject.defineProperty(exports, \"connectMethodsAdaptOldVersion\", { enumerable: true, get: function () { return ConnectMethodUtils_1.connectMethodsAdaptOldVersion; } });\nObject.defineProperty(exports, \"creatNotSupportMethodItemReplay\", { enumerable: true, get: function () { return ConnectMethodUtils_1.creatNotSupportMethodItemReplay; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAccountsChains = getAccountsChains;\nexports.nameSpaceToConnectWalletNameSpace = nameSpaceToConnectWalletNameSpace;\nexports.fillParamsToSession = fillParamsToSession;\nexports.isCaipNamespace = isCaipNamespace;\nexports.parseNamespaceKey = parseNamespaceKey;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getAccountsChains(accounts) {\n    const chains = [];\n    accounts.forEach((account) => {\n        const [chain, chainId] = account.split(\":\");\n        chains.push(`${chain}:${chainId}`);\n    });\n    return chains;\n}\nfunction nameSpaceToConnectWalletNameSpace(namespaces) {\n    var result = [];\n    if (!namespaces) {\n        return result;\n    }\n    Object.keys(namespaces).forEach((key) => {\n        if (key === core_1.NameSpaceKeyEip155 || key === core_1.NameSpaceKeySOL || key === core_1.NameSpaceKeySui || key === core_1.NameSpaceKeyAptos\n            || key == core_1.NameSpaceKeyBtc || key === core_1.NameSpaceKeyTON || key === core_1.NameSpaceKeyCosmos || key === core_1.NameSpaceKeyTron) {\n            if (namespaces[key].chains) {\n                result.push({\n                    namespace: key,\n                    chains: namespaces[key].chains,\n                    params: namespaces[key].params\n                });\n            }\n        }\n    });\n    return result;\n}\nfunction fillParamsToSession(session, namespaces, optionalNamespaces, sessionConfig) {\n    // Helper function to merge rpcMaps\n    const mergeRpcMap = (targetRpcMap, sourceRpcMap) => {\n        Object.assign(targetRpcMap, sourceRpcMap);\n    };\n    // Merge function for namespaces\n    const mergeNamespaces = (target, source) => {\n        for (const key in source) {\n            if (source.hasOwnProperty(key) && source[key].rpcMap) {\n                if (source[key].rpcMap) {\n                    if (!target[key].rpcMap) {\n                        target[key].rpcMap = {};\n                    }\n                    // 合并 rpcMap\n                    mergeRpcMap(target[key].rpcMap, source[key].rpcMap);\n                }\n                if (source[key].defaultChain && target[key].defaultChain === undefined) {\n                    //defaultChain need in session nameSpace\n                    if (target[key].chains.some(chain => chain.split(\":\")[1] === source[key].defaultChain)) {\n                        target[key].defaultChain = source[key].defaultChain;\n                    }\n                }\n            }\n        }\n    };\n    // 合并 namespaces\n    if (namespaces) {\n        mergeNamespaces(session.namespaces, namespaces);\n    }\n    // 合并 optionalNamespaces\n    if (optionalNamespaces) {\n        mergeNamespaces(session.namespaces, optionalNamespaces);\n    }\n    session.sessionConfig = sessionConfig;\n}\n/**\n * util designed for Wallets that builds namespaces structure by provided supported chains, methods, events & accounts.\n * It takes required & optional namespaces provided in the session proposal\n * along with the supported chains/methods/events/accounts by the wallet and returns a structured namespaces object\n * @param {BuildApprovedNamespacesParams} params\n * @returns {SessionTypes.Namespaces}\n */\n// export function buildApprovedNamespaces(\n//   params: BuildApprovedNamespacesParams,\n// ): SessionTypes.Namespaces {\n//   const {\n//     proposal: { requiredNamespaces, optionalNamespaces = {} },\n//     supportedNamespaces,\n//   } = params;\n//   const normalizedRequired = normalizeNamespaces(requiredNamespaces);\n//   const normalizedOptional = normalizeNamespaces(optionalNamespaces);\n//\n//   // build approved namespaces\n//   const namespaces = {};\n//   Object.keys(supportedNamespaces).forEach((namespace) => {\n//     const supportedChains = supportedNamespaces[namespace].chains;\n//     const supportedMethods = supportedNamespaces[namespace].methods;\n//     const supportedEvents = supportedNamespaces[namespace].events;\n//     const supportedAccounts = supportedNamespaces[namespace].accounts;\n//\n//     supportedChains.forEach((chain) => {\n//       if (!supportedAccounts.some((account) => account.includes(chain))) {\n//         throw new Error(`No accounts provided for chain ${chain} in namespace ${namespace}`);\n//       }\n//     });\n//\n//     namespaces[namespace] = {\n//       chains: supportedChains,\n//       methods: supportedMethods,\n//       events: supportedEvents,\n//       accounts: supportedAccounts,\n//     };\n//   });\n//\n//   // verify all required namespaces are supported\n//   const err = isConformingNamespaces(requiredNamespaces, namespaces, \"approve()\");\n//   if (err) throw new Error(err.message);\n//\n//   const approvedNamespaces = {};\n//\n//   // if both required & optional namespaces are empty, return all supported namespaces by the wallet\n//   if (!Object.keys(requiredNamespaces).length && !Object.keys(optionalNamespaces).length)\n//     return namespaces;\n//\n//   // assign accounts for the required namespaces\n//   Object.keys(normalizedRequired).forEach((requiredNamespace) => {\n//     const chains = supportedNamespaces[requiredNamespace].chains.filter((chain) =>\n//       normalizedRequired[requiredNamespace]?.chains?.includes(chain),\n//     );\n//     const methods = supportedNamespaces[requiredNamespace].methods.filter((method) =>\n//       normalizedRequired[requiredNamespace]?.methods?.includes(method),\n//     );\n//     const events = supportedNamespaces[requiredNamespace].events.filter((event) =>\n//       normalizedRequired[requiredNamespace]?.events?.includes(event),\n//     );\n//\n//     const accounts = chains\n//       .map((chain: string) =>\n//         supportedNamespaces[requiredNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[requiredNamespace] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   });\n//\n//   // add optional namespaces\n//   Object.keys(normalizedOptional).forEach((optionalNamespace) => {\n//     if (!supportedNamespaces[optionalNamespace]) return;\n//\n//     const chainsToAdd = normalizedOptional[optionalNamespace]?.chains?.filter((chain) =>\n//       supportedNamespaces[optionalNamespace].chains.includes(chain),\n//     );\n//     const methodsToAdd = supportedNamespaces[optionalNamespace].methods.filter((method) =>\n//       normalizedOptional[optionalNamespace]?.methods?.includes(method),\n//     );\n//     const eventsToAdd = supportedNamespaces[optionalNamespace].events.filter((event) =>\n//       normalizedOptional[optionalNamespace]?.events?.includes(event),\n//     );\n//\n//     const accountsToAdd = chainsToAdd\n//       ?.map((chain: string) =>\n//         supportedNamespaces[optionalNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[optionalNamespace] = {\n//       chains: mergeArrays(approvedNamespaces[optionalNamespace]?.chains, chainsToAdd),\n//       methods: mergeArrays(approvedNamespaces[optionalNamespace]?.methods, methodsToAdd),\n//       events: mergeArrays(approvedNamespaces[optionalNamespace]?.events, eventsToAdd),\n//       accounts: mergeArrays(approvedNamespaces[optionalNamespace]?.accounts, accountsToAdd),\n//     };\n//   });\n//\n//   return approvedNamespaces;\n// }\nfunction isCaipNamespace(namespace) {\n    return namespace.includes(\":\");\n}\nfunction parseNamespaceKey(namespace) {\n    return isCaipNamespace(namespace) ? namespace.split(\":\")[0] : namespace;\n}\n/**\n * Converts\n * ```\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * ```\n * into\n * ```\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *```\n */\n// export function normalizeNamespaces(\n//   namespaces: ProposalTypes.RequiredNamespaces,\n// ): ProposalTypes.RequiredNamespaces {\n//   const normalizedNamespaces = {} as ProposalTypes.RequiredNamespaces;\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       methods: mergeArrays(methods, normalizedNamespaces[normalizedKey]?.methods),\n//       events: mergeArrays(events, normalizedNamespaces[normalizedKey]?.events),\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n// export function getNamespacesFromAccounts(accounts: string[]) {\n//   const namespaces = {};\n//   accounts?.forEach((account) => {\n//     const [namespace, chainId] = account.split(\":\");\n//     if (!namespaces[namespace]) {\n//       namespaces[namespace] = {\n//         accounts: [],\n//         chains: [],\n//         events: [],\n//       };\n//     }\n//     namespaces[namespace].accounts.push(account);\n//     namespaces[namespace].chains.push(`${namespace}:${chainId}`);\n//   });\n//\n//   return namespaces;\n// }\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PROVIDER_EVENTS = void 0;\nexports.PROVIDER_EVENTS = {\n    DEFAULT_CHAIN_CHANGED: \"default_chain_changed\",\n    UPDATE_NAMESPACES: \"update_name_spaces\",\n    SESSION_CONNECTING: \"session_connecting\"\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./values\"), exports);\n__exportStar(require(\"./events\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GENERIC_SUBPROVIDER_NAME = exports.RPC_URL = exports.STORAGE = exports.CONTEXT = exports.WC_VERSION = exports.PROTOCOL = exports.RELAY_URL = exports.LOGGER = void 0;\nexports.LOGGER = \"error\";\nexports.RELAY_URL = \"wss://relay.walletconnect.com\";\nexports.PROTOCOL = \"wc\";\nexports.WC_VERSION = 2;\nexports.CONTEXT = \"universal_provider\";\nexports.STORAGE = `${exports.PROTOCOL}@${exports.WC_VERSION}:${exports.CONTEXT}:`;\nexports.RPC_URL = \"https://rpc.walletconnect.com/v1/\";\nexports.GENERIC_SUBPROVIDER_NAME = \"generic\";\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./types\"), exports);\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass AptosProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"aptos\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"solana request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"solana provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = AptosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass BtcProvider {\n    constructor(opts, name, client, events) {\n        this.name = core_1.NameSpaceKeyBtc;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"btc request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"btc provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = BtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass CosmosProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyCosmos;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"cosmos request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"cosmos provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = CosmosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Eip155Provider = void 0;\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nclass Eip155Provider {\n    constructor(opts, client, events) {\n        this.name = \"eip155\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = parseInt(this.getDefaultChain());\n        // rpc\n        this.httpProviders = this.createHttpProviders();\n        (0, core_1.logDebug)(\"eip155 constructor --opts.namespace-->\", opts.namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    isArray(value) {\n        return typeof value === \"object\" && value !== null && Array.isArray(value);\n    }\n    updateRequestParams(args) {\n        let isDic = args.params && typeof args.params === 'object' && !Array.isArray(args.params);\n        if (args.method === 'wallet_switchEthereumChain') {\n            const switchChainId = args.chainId.split(\":\")[1];\n            // const hexChainId = parseInt(switchChainId, 16);\n            const decimalNumber = parseInt(switchChainId, 10);\n            if (isNaN(decimalNumber)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid decimal number,  chainId: '${switchChainId}' `);\n            }\n            if (!args.params) {\n                args.params = { chainId: '0x' + decimalNumber.toString(16) };\n            }\n            else if (isDic) { //为 Record<string, unknown>\n                let params = args.params;\n                if (!('chainId' in params)) {\n                    params['chainId'] = '0x' + decimalNumber.toString(16);\n                    args.params = params;\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params error ,  method: '${args.method}' `);\n            }\n        }\n        else if (args.method === 'personal_sign'\n            || args.method === 'eth_signTypedData_v4'\n            || args.method === 'eth_sendTransaction'\n            || args.method === 'wallet_watchAsset') {\n            if (!args.params) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params is nil, method: '${args.method}'`);\n            }\n            if (this.isRecord(args.params)) {\n                let params = args.params;\n                (0, core_1.logDebug)(\"eip155 updateRequestParams params>\", JSON.stringify(params));\n                if ('chainId' in params) {\n                    const selectedChainId = args.chainId.split(\":\")[1];\n                    const chainNum = parseInt(selectedChainId, 10);\n                    let paramsChainString = String(params.chainId);\n                    let paramsChainId;\n                    if (paramsChainString.startsWith(this.name) && args.chainId === paramsChainString) { //为\n                        paramsChainId = chainNum;\n                    }\n                    else if (paramsChainString.startsWith(\"0x\")) {\n                        paramsChainId = parseInt(paramsChainString, 16);\n                    }\n                    else if (!isNaN(Number(paramsChainString))) { //数字\n                        paramsChainId = parseInt(paramsChainString, 10);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid params.chainId format, method: '${args.method}'`);\n                    }\n                    if (chainNum !== paramsChainId) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params.chainId not equal chain,  method: '${args.method}' `);\n                    }\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid request params type, method: '${args.method}'`);\n            }\n        }\n    }\n    //adapt array\n    adaptArray(args) {\n        if (args.method === 'wallet_switchEthereumChain'\n            || args.method === 'wallet_addEthereumChain'\n            || args.method === 'wallet_watchAsset'\n            || args.method === 'eth_sendTransaction') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr) {\n                    if (paramsArr.length === 1) {\n                        let firstParam = args.params[0];\n                        if (this.isRecord(firstParam)) {\n                            args.params = firstParam;\n                        }\n                    }\n                    else if (paramsArr.length > 1) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                    }\n                }\n            }\n        }\n        else if (args.method === 'eth_signTypedData_v4') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr && paramsArr.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                }\n                else if (paramsArr && paramsArr.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let messageObj = {};\n                if (paramsArr && paramsArr.length === 2) {\n                    let addressObj = args.params[0]; //address\n                    if (addressObj && typeof addressObj === 'string') { //check address\n                        let isEqual = false;\n                        this.namespace.accounts.forEach((account) => {\n                            let chainAddress = (0, utils_1.fromAccountToAddress)(account);\n                            if (chainAddress.toLowerCase() === addressObj.toLowerCase()) {\n                                isEqual = true;\n                            }\n                        });\n                        (0, core_1.logDebug)(\"eip155 adaptArray eth_signTypedData_v4 >>>isEqual: \", isEqual);\n                        if (!isEqual) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error, not equal,  method: '${args.method}' `);\n                        }\n                        if (this.isRecord(args.params[1])) {\n                            messageObj = args.params[1];\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error , not string,  method: '${args.method}' `);\n                    }\n                }\n                else if (paramsArr && paramsArr.length === 1) {\n                    if (this.isRecord(args.params[0])) {\n                        messageObj = args.params[0];\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                    }\n                }\n                try {\n                    let messages = JSON.stringify(messageObj);\n                    args.params = {\n                        typedDataJson: messages\n                    };\n                }\n                catch (err) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params call JSON.stringify() failed,  method: '${args.method}' `);\n                }\n            }\n        }\n        else if (args.method === 'personal_sign') {\n            if (this.isArray(args.params)) {\n                if (args.params && args.params.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params error,  method: '${args.method}' `);\n                }\n                else if (args.params && args.params.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let firstObj = args.params[0];\n                let secondObj = args.params[1];\n                if (secondObj && typeof secondObj === 'string') { //check address\n                    let isEqual = false;\n                    this.namespace.accounts.forEach((account) => {\n                        let chainAddress = (0, utils_1.fromAccountToAddress)(account);\n                        if (chainAddress.toLowerCase() === secondObj.toLowerCase()) {\n                            isEqual = true;\n                        }\n                    });\n                    (0, core_1.logDebug)(\"eip155 adaptArray personal_sign >>>isEqual: \", isEqual);\n                    if (!isEqual) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error,  method: '${args.method}' `);\n                    }\n                }\n                if (firstObj && typeof firstObj === 'string') {\n                    args.params = {\n                        message: firstObj\n                    };\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is error,  method: '${args.method}' `);\n                }\n            }\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"eth_requestAccounts\":\n            case \"eth_accounts\":\n            case \"eth_chainId\":\n                return false;\n            case \"eth_sendTransaction\":\n            case \"eth_signTransaction\":\n            case \"eth_sign\":\n            case \"personal_sign\":\n            case \"eth_signTypedData\":\n            case \"wallet_addEthereumChain\":\n            case \"wallet_watchAsset\":\n            case \"eth_signTypedData_v4\":\n                return true;\n            case \"wallet_switchEthereumChain\": {\n                this.adaptArray(args);\n                this.updateRequestParams(args);\n                const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n                return !this.isChainApproved(parsedChainId);\n            }\n            default:\n                return false;\n        }\n        return false;\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.adaptArray(args);\n            (0, core_1.logDebug)(\"eip155 request --args--string>\", JSON.stringify(args));\n            this.updateRequestParams(args);\n            (0, core_1.logDebug)(\"eip155 request --params--string>\", JSON.stringify(args));\n            switch (args.method) {\n                case \"eth_requestAccounts\":\n                    return this.getAccounts();\n                case \"eth_accounts\":\n                    return this.getAccounts();\n                case \"eth_chainId\":\n                    return parseInt(this.getDefaultChain());\n                case \"wallet_switchEthereumChain\": {\n                    return (yield this.handleSwitchChain(args));\n                }\n                case \"wallet_addEthereumChain\":\n                    return this.addEthereumChain(args);\n                default:\n                    break;\n            }\n            if (this.namespace.methods.includes(args.method)) {\n                // personal_sign\n                // eth_signTypedData_v4\n                // eth_sendTransaction\n                // wallet_watchAsset\n                try {\n                    const response = yield this.client.request(args);\n                    (0, core_1.logDebug)(\"eip155 request --response----string>\", JSON.stringify(response));\n                    if (this.isRecord(response)) {\n                        if ('result' in response) {\n                            let result = response.result;\n                            if (result && typeof result === 'string' && (result === \"true\" || result === \"false\")) {\n                                (0, core_1.logDebug)(\"eip155 request --wallet_watchAsset>>>>\", result === \"true\");\n                                return (result === \"true\");\n                            }\n                            return response.result;\n                        }\n                    }\n                    return response;\n                }\n                catch (e) {\n                    (0, core_1.logDebug)(`eip155 request --response --error--string> e instanceof OKXConnectError ${e instanceof core_1.OKXConnectError}`, JSON.stringify(e));\n                    throw e;\n                }\n            }\n            else {\n                (0, core_1.logDebug)('[RPC] request begin');\n                return yield this.getHttpProvider().request(args);\n            }\n        });\n    }\n    addEthereumChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let resultData = (yield this.client.request(args));\n            try {\n                if ('result' in resultData) {\n                    let successData = resultData;\n                    let account = resultData.result;\n                    if (account) {\n                        const nameSpace = account.split(\":\")[0];\n                        const chainId = account.split(\":\")[1];\n                        const chain = nameSpace + ':' + chainId;\n                        let newNameSpace = this.namespace;\n                        this.namespace.accounts.push(account);\n                        this.namespace.chains.push(chain);\n                        if (this.isRecord(args.params)) {\n                            if (\"rpcUrls\" in args.params) {\n                                let rpcUrls = args.params.rpcUrls;\n                                let rpcUrl = rpcUrls ? rpcUrls[0] : undefined;\n                                if (rpcUrl) {\n                                    if (this.namespace.rpcMap) {\n                                        this.namespace.rpcMap[chainId] = rpcUrl;\n                                    }\n                                    else {\n                                        this.namespace.rpcMap = {\n                                            [chainId]: rpcUrl\n                                        };\n                                    }\n                                    this.setHttpProvider(chainId, rpcUrl);\n                                }\n                            }\n                        }\n                        this.events.emit(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, {\n                            eip155: this.namespace\n                        });\n                    }\n                }\n                else {\n                    new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request error`);\n                }\n            }\n            catch (error) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request  error`);\n            }\n            return null;\n        });\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        this.chainId = parseInt(chainId);\n        // set rpc\n        if (!this.httpProviders[chainId]) {\n            const rpc = rpcUrl || (0, utils_1.getRpcUrl)(`${this.name}:${chainId}`, this.namespace);\n            if (!rpc) {\n                // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n                (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            }\n            else {\n                this.setHttpProvider(chainId, rpc);\n            }\n        }\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId.toString();\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // ---------- Private ----------------------------------------------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"eip155 getAccounts \", accounts, this.chainId);\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => {\n                return (0, utils_1.fromAccountToAddress)(account);\n            })),\n        ];\n    }\n    getHexChainIdFromRequest(args) {\n        let params = args.params;\n        let hexChainId = \"0x0\";\n        if (params && \"chainId\" in params) {\n            hexChainId = params.chainId;\n        }\n        hexChainId = hexChainId.startsWith(\"0x\") ? hexChainId : `0x${hexChainId}`;\n        (0, core_1.logDebug)(\"handleSwitchChain -->args \", args);\n        (0, core_1.logDebug)(\"handleSwitchChain -->hexChainId \", hexChainId);\n        const parsedChainId = parseInt(hexChainId, 16);\n        (0, core_1.logDebug)(\"handleSwitchChain -->parsedChainId \", parsedChainId);\n        return { parsedChainId, hexChainId };\n    }\n    handleSwitchChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n            if (this.isChainApproved(parsedChainId)) {\n                this.setDefaultChain(`${parsedChainId}`);\n            }\n            else {\n                const resultData = (yield this.client.request({\n                    method: \"wallet_switchEthereumChain\",\n                    chainId: args.chainId,\n                    params: {\n                        chainId: hexChainId,\n                    },\n                }));\n                try {\n                    if ('result' in resultData) {\n                        let successData = resultData;\n                        let account = resultData.result;\n                        if (account) {\n                            const nameSpace = account.split(\":\")[0];\n                            const chainId = account.split(\":\")[1];\n                            const chain = nameSpace + ':' + chainId;\n                            let newNameSpace = this.namespace;\n                            this.namespace.accounts.push(account);\n                            this.namespace.chains.push(chain);\n                            (0, core_1.logDebug)(\"handleSwitchChain -->wallet_switchEthereumChain \", resultData);\n                            this.setDefaultChain(`${parsedChainId}`);\n                            this.events.emit(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, {\n                                eip155: this.namespace\n                            });\n                        }\n                    }\n                    else {\n                        new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request error`);\n                    }\n                }\n                catch (error) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request  error`);\n                }\n            }\n            return null;\n        });\n    }\n    isChainApproved(chainId) {\n        return this.namespace.chains.includes(`${this.name}:${chainId}`);\n    }\n    // rpc\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            //   throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            (0, core_1.logDebug)('get parsed chain and rpc:', parsedChainId, parsedRpc);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        (0, core_1.logDebug)('get http providermap:', http);\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n}\nexports.Eip155Provider = Eip155Provider;\nexports.default = Eip155Provider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcConnection = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\n// Source: https://nodejs.org/api/events.html#emittersetmaxlistenersn\nconst EVENT_EMITTER_MAX_LISTENERS_DEFAULT = 10;\nclass JsonRpcConnection {\n    constructor(url, disableProviderPing = false) {\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n        this.events = new eventemitter3_1.EventEmitter();\n        this.isAvailable = false;\n        this.registering = false;\n        if (!(0, core_2.isHttpUrl)(url)) {\n            throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n        }\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n    }\n    get connected() {\n        return this.isAvailable;\n    }\n    get connecting() {\n        return this.registering;\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            yield this.register(url);\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                throw new Error(\"Connection already closed\");\n            }\n            this.onClose();\n        });\n    }\n    send(payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                yield this.register();\n            }\n            try {\n                const body = (0, core_1.safeJsonStringify)(payload);\n                const res = yield (0, cross_fetch_1.default)(this.url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                const data = yield res.json();\n                this.onPayload({ data });\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    register() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (!(0, core_2.isHttpUrl)(url)) {\n                throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n            }\n            if (this.registering) {\n                return new Promise((resolve, reject) => {\n                    this.events.once(\"register_error\", (error) => {\n                        reject(error);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.isAvailable === \"undefined\") {\n                            return reject(new Error(\"HTTP connection is missing or invalid\"));\n                        }\n                        resolve();\n                    });\n                });\n            }\n            this.url = url;\n            this.registering = true;\n            try {\n                if (!this.disableProviderPing) {\n                    const body = (0, core_1.safeJsonStringify)({ id: 1, jsonrpc: \"2.0\", method: \"test\", params: [] });\n                    yield (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                }\n                this.onOpen();\n            }\n            catch (e) {\n                const error = this.parseError(e);\n                this.events.emit(\"register_error\", error);\n                this.onClose();\n                throw error;\n            }\n        });\n    }\n    onOpen() {\n        this.isAvailable = true;\n        this.registering = false;\n        this.events.emit(\"open\");\n    }\n    onClose() {\n        this.isAvailable = false;\n        this.registering = false;\n        this.events.emit(\"close\");\n    }\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        const payload = typeof e.data === \"string\" ? (0, core_1.safeJsonParse)(e.data) : e.data;\n        this.events.emit(\"payload\", payload);\n    }\n    onError(id, e) {\n        const error = this.parseError(e);\n        const message = error.message || error.toString();\n        const payload = (0, core_2.formatJsonRpcError)(id, message);\n        this.events.emit(\"payload\", payload);\n    }\n    parseError(e, url = this.url) {\n        return (0, core_2.parseConnectionError)(e, url, \"HTTP\");\n    }\n}\nexports.JsonRpcConnection = JsonRpcConnection;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcProvider = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst types_1 = require(\"../../types\");\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nclass JsonRpcProvider extends types_1.IJSONRpcProvider {\n    constructor(connection) {\n        super(connection);\n        this.events = new eventemitter3_1.EventEmitter();\n        this.connected = false;\n        this.connecting = false;\n        this.hasRegisteredEventListeners = false;\n        this.connection = this.setConnection(connection);\n        if (this.connection.connected) {\n            this.registerEventListeners();\n        }\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            yield this.open(connection);\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.close();\n        });\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    request(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.requestStrict((0, core_1.formatJsonRpcRequest)(request.method, request.params || [], (0, core_1.getBigIntRpcId)().toString()), // casting to any is required in order to use BigInt as rpcId\n            context);\n        });\n    }\n    // ---------- Protected ----------------------------------------------- //\n    requestStrict(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.connection.connected) {\n                    try {\n                        yield this.open();\n                    }\n                    catch (e) {\n                        reject(e);\n                    }\n                }\n                this.events.on(`${request.id}`, (response) => {\n                    if ((0, core_1.isJsonRpcError)(response)) {\n                        reject(response.error);\n                    }\n                    else {\n                        resolve(response.result);\n                    }\n                });\n                try {\n                    (0, core_2.logDebug)('[RPC] >>> send request', request, context);\n                    yield this.connection.send(request, context);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }));\n        });\n    }\n    setConnection(connection = this.connection) {\n        return connection;\n    }\n    onPayload(payload) {\n        this.events.emit(\"payload\", payload);\n        if ((0, core_1.isJsonRpcResponse)(payload)) {\n            this.events.emit(`${payload.id}`, payload);\n        }\n        else {\n            this.events.emit(\"message\", {\n                type: payload.method,\n                data: payload.params,\n            });\n        }\n    }\n    onClose(event) {\n        // Code 3000 indicates an abnormal closure signalled by the relay -> emit an error in this case.\n        if (event && event.code === 3000) {\n            this.events.emit(\"error\", new Error(`WebSocket connection closed abnormally with code: ${event.code} ${event.reason ? `(${event.reason})` : \"\"}`));\n        }\n        this.events.emit(\"disconnect\");\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            if (this.connection === connection && this.connection.connected)\n                return;\n            if (this.connection.connected)\n                this.close();\n            if (typeof connection === \"string\") {\n                yield this.connection.open(connection);\n                connection = this.connection;\n            }\n            this.connection = this.setConnection(connection);\n            yield this.connection.open();\n            this.registerEventListeners();\n            this.events.emit(\"connect\");\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.connection.close();\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    registerEventListeners() {\n        if (this.hasRegisteredEventListeners)\n            return;\n        this.connection.on(\"payload\", (payload) => this.onPayload(payload));\n        this.connection.on(\"close\", (event) => this.onClose(event));\n        this.connection.on(\"error\", (error) => this.events.emit(\"error\", error));\n        this.connection.on(\"register_error\", (_error) => this.onClose());\n        this.hasRegisteredEventListeners = true;\n    }\n}\nexports.JsonRpcProvider = JsonRpcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolanaProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SolanaProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"solana\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"solana request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"solana provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    //   {\n    //     \"chains\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\" ],\n    //     \"accounts\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp:F7wnJc5wiBGy1k87jv6gyNwE3jMEWd18oTQiYsF1xVG7\"],\n    //     \"methods\": [\n    //         \"solana_signTransaction\",\n    //         \"solana_signMessage\"\n    //     ],\n    //     \"defaultChain\": \"5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\"\n    // }\n    // TODO:确认上面的defaultChain是否正确（没有solana前缀）\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"solana\"))) {\n                chainId = `solana:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.SolanaProvider = SolanaProvider;\nexports.default = SolanaProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuiProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SuiProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeySui;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"sui request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"sui provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"sui\"))) {\n                chainId = `sui:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"sui_signMessage\":\n            case \"sui_signPersonalMessage\":\n            case \"sui_signTransactionBlock\":\n            case \"sui_signAndExecuteTransactionBlock\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.SuiProvider = SuiProvider;\nexports.default = SuiProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TONProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTON;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            (0, core_1.logDebug)(\"TONProvider request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"TONProvider request provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                if (!args.params) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params is nil\");\n                }\n                if (this.isRecord(args.params)) {\n                    const _e = args.params, { validUntil } = _e, newParams = __rest(_e, [\"validUntil\"]);\n                    let fromAddress = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n                    if ('from' in newParams) {\n                        fromAddress = newParams.from || ((_d = (_c = this.namespace.payload) === null || _c === void 0 ? void 0 : _c.ton_addr) === null || _d === void 0 ? void 0 : _d.address);\n                    }\n                    args.params['from'] = fromAddress;\n                    args.params['network'] = this.getDefaultChain();\n                    args.params['valid_until'] = validUntil;\n                    let response = yield this.client.request(args);\n                    if (this.isRecord(response) && 'result' in response) {\n                        const result = {\n                            boc: response.result.toString()\n                        };\n                        (0, core_1.logDebug)(\"TONProvider request provider response: \", JSON.stringify(response));\n                        (0, core_1.logDebug)(\"TONProvider request provider result: \", JSON.stringify(result));\n                        return result;\n                    }\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton_send request response is nil\");\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params type add nil\");\n                }\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        var _a, _b;\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"ton getAccounts accounts :\", accounts);\n        (0, core_1.logDebug)(\"ton getAccounts .namespace :\", JSON.stringify(this.namespace));\n        if (!accounts) {\n            return [];\n        }\n        let address = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n        (0, core_1.logDebug)(\"ton getAccounts address :\", address);\n        if (address) {\n            return [\n                address\n            ];\n        }\n        return [];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"ton_sendTransaction\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.default = TONProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TronProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTron;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"tron request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"tron provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = TronProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./providers\"), exports);\n__exportStar(require(\"./misc\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IJSONRpcProvider = exports.IJSONRpcConnection = void 0;\nclass IJSONRpcConnection {\n}\nexports.IJSONRpcConnection = IJSONRpcConnection;\nclass IJSONRpcProvider {\n    constructor(opt) {\n    }\n}\nexports.IJSONRpcProvider = IJSONRpcProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setGlobal = exports.getGlobal = void 0;\nconst globals = {};\nconst getGlobal = (key) => {\n    return globals[key];\n};\nexports.getGlobal = getGlobal;\nconst setGlobal = (key, value) => {\n    globals[key] = value;\n};\nexports.setGlobal = setGlobal;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./misc\"), exports);\n__exportStar(require(\"./globals\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRpcUrl = getRpcUrl;\nexports.getChainId = getChainId;\nexports.fromAccountToAddress = fromAccountToAddress;\nexports.convertChainIdToNumber = convertChainIdToNumber;\nexports.parseChainId = parseChainId;\nexports.mergeArrays = mergeArrays;\nexports.syncAddressAvailable = syncAddressAvailable;\nexports.syncAddressHostAvailable = syncAddressHostAvailable;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getRpcUrl(chainId, rpc, projectId) {\n    var _a;\n    const chain = parseChainId(chainId);\n    // no default\n    return (((_a = rpc.rpcMap) === null || _a === void 0 ? void 0 : _a[chain.reference]) ||\n        ``);\n}\nfunction getChainId(chain) {\n    return chain.includes(\":\") ? chain.split(\":\")[1] : chain;\n}\nfunction fromAccountToAddress(account) {\n    if (!account) {\n        return \"\";\n    }\n    try {\n        let addressArr = account.split(\":\").slice(2);\n        let address = addressArr.length > 0 ? addressArr.join(\":\") : \"\";\n        (0, core_1.logDebug)(\"fromAccountToAddress address and account:\", address, account);\n        return address;\n    }\n    catch (e) {\n        (0, core_1.logError)(\"fromAccountToAddress error:\", account);\n        return \"\";\n    }\n}\n// export function validateChainApproval(chain: string, chains: string[]): void {\n//   if (!chains.includes(chain)) {\n//     throw new Error(\n//       `Chain '${chain}' not approved. Please use one of the following: ${chains.toString()}`,\n//     );\n//   }\n// }\n// export function getChainsFromApprovedSession(accounts: string[]): string[] {\n//   return accounts.map((address) => `${address.split(\":\")[0]}:${address.split(\":\")[1]}`);\n// }\n// export function getAccountsFromSession(namespace: string, session: SessionTypes.Struct): string[] {\n//   // match namespaces e.g. eip155 with eip155:1\n//   const matchedNamespaceKeys = Object.keys(session.namespaces).filter((key) =>\n//     key.includes(namespace),\n//   );\n//   if (!matchedNamespaceKeys.length) return [];\n//   const accounts: string[] = [];\n//   matchedNamespaceKeys.forEach((key) => {\n//     const accountsForNamespace = session.namespaces[key].accounts;\n//     accounts.push(...accountsForNamespace);\n//   });\n//   return accounts;\n// }\n// export function mergeRequiredOptionalNamespaces(\n//   required: NamespaceConfig = {},\n//   optional: NamespaceConfig = {},\n// ){\n//   const requiredNamespaces = normalizeNamespaces(required);\n//   const optionalNamespaces = normalizeNamespaces(optional);\n//    return merge.merge(requiredNamespaces,optionalNamespaces)\n// }\n/**\n * Converts\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * into\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *\n */\n// export function normalizeNamespaces(namespaces: NamespaceConfig): NamespaceConfig {\n//   const normalizedNamespaces: NamespaceConfig = {};\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const rpcMap = values.rpcMap || {};\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       ...values,\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       rpcMap: { ...rpcMap, ...normalizedNamespaces[normalizedKey]?.rpcMap },\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n//\n// export function parseCaip10Account(caip10Account: string): string {\n//   return caip10Account.includes(\":\") ? caip10Account.split(\":\")[2] : caip10Account;\n// }\n/**\n * Populates the chains array for each namespace with the chains extracted from the accounts if are otherwise missing\n */\n// export function populateNamespacesChains(\n//   namespaces: SessionTypes.Namespaces,\n// ): Record<string, SessionTypes.Namespace> {\n//   const parsedNamespaces: Record<string, SessionTypes.Namespace> = {};\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const accounts = values.accounts || [];\n//     // If the key includes a CAIP separator `:` we know it's a namespace + chainId (e.g. `eip155:1`)\n//     const chains = isCaipNamespace(key)\n//       ? [key]\n//       : values.chains\n//       ? values.chains\n//       : getChainsFromApprovedSession(values.accounts);\n//     parsedNamespaces[key] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   }\n//   return parsedNamespaces;\n// }\nfunction convertChainIdToNumber(chainId) {\n    if (typeof chainId === \"number\")\n        return chainId;\n    if (chainId.includes(\"0x\")) {\n        return parseInt(chainId, 16);\n    }\n    chainId = chainId.includes(\":\") ? chainId.split(\":\")[1] : chainId;\n    return isNaN(Number(chainId)) ? chainId : Number(chainId);\n}\nconst CAIP_DELIMITER = \":\";\nfunction parseChainId(chain) {\n    const [namespace, reference] = chain.split(CAIP_DELIMITER);\n    return { namespace, reference };\n}\nfunction mergeArrays(a = [], b = []) {\n    return [...new Set([...a, ...b])];\n}\nfunction syncAddressAvailable(wallet) {\n    if (!wallet) {\n        return false;\n    }\n    if (wallet.appName !== 'OKX Wallet') {\n        return false;\n    }\n    if ((0, core_1.versionCompare)('6.97.0', wallet.appVersion) > 0) {\n        return false;\n    }\n    return syncAddressHostAvailable();\n}\nfunction syncAddressHostAvailable() {\n    try {\n        return !!(window.okxGlobal);\n    }\n    catch (e) {\n        return false;\n    }\n}\n","<template>\n  <div id=\"app\">\n    <el-container>\n      <el-header>OKX Connect</el-header>\n      <el-main>\n        <el-card class=\"wallet-info\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Wallet Info</div>\n          </template>\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Wallet Address:</strong> {{ getWalletAddress }}\n            </el-col>\n          </el-row>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Status :</strong> {{ currentStatus }}\n            </el-col>\n          </el-row>\n\n        </el-card>\n\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Connect Params</div>\n          </template>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"withUI\" @change=\"handleWithUI\">\n                Show UI</el-checkbox>\n            </el-col>\n\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"universalToTG\" @change=\"handleUniversalToTG\">\n                Use mini wallet</el-checkbox>\n            </el-col>\n          </el-row>\n\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Modals</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"modals\" placeholder=\"Modals\" @change=\"handleModalsSelect\" multiple>\n                <el-option label=\"Before\" value=\"before\" />\n                <el-option label=\"Success\" value=\"success\" />\n                <el-option label=\"Error\" value=\"error\" />\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center; justify-content: space-between;\">\n            <el-col :span=\"6\" style=\"gap: 2px\">\n              <p style=\"font-size: 11pt; margin: 0px\">Return Strategy</p>\n              <p style=\"font-size: 9pt; margin: 0px\">(Mobile only)</p>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-select\n                v-model=\"returnStrategy\"\n                @change=\"handleReturnStrategySelect\"\n                placeholder=\"Return Strategy\"\n              >\n                <el-option\n                  v-for=\"strategy in returnStrategies\"\n                  :key=\"`return-strategy-select-option-${strategy}`\"\n                  :label=\"strategy\"\n                  :value=\"strategy\"\n                />\n              </el-select>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-input\n                v-if=\"returnStrategy === 'deeplink'\"\n                v-model=\"deeplink\"\n                @change=\"handleReturnStrategyDeeplink\"\n                placeholder=\"Deeplink\"\n                :disabled=\"returnStrategy !== 'deeplink'\"\n                style=\"margin: 0px\"\n              />\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Lang</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"language\" @change=\"handleLanguageSelect\" placeholder=\"Language\">\n                <el-option v-for=\"locale in locales\" :key=\"`language-select-option-${locale}`\" :label=\"locale\"\n                  :value=\"locale\" />\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Theme</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"theme\" @change=\"handleThemeSelect\" placeholder=\"Theme\">\n                <el-option label=\"LIGHT\" :value=\"THEME.LIGHT\" />\n                <el-option label=\"DARK\" :value=\"THEME.DARK\" />\n              </el-select>\n            </el-col>\n          </el-row>\n\n<!--          <el-row>-->\n<!--          <el-row style=\"align-items: center\">-->\n<!--            <el-col :span=\"4\">-->\n<!--              <p style=\"font-size: 11pt\">Connect</p>-->\n<!--              <p style=\"font-size: 11pt\">Methods</p>-->\n<!--            </el-col>-->\n<!--            <el-col :span=\"20\">-->\n<!--              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" placeholder=\"Methods\">-->\n<!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n<!--                           :value=\"methods\" />-->\n\n<!--              </el-select>-->\n<!--            </el-col>-->\n<!--          </el-row>-->\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Connect</p>\n              <p style=\"font-size: 11pt\">Methods</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" multiple placeholder=\"methods\">\n                <el-option\n                    v-for=\"item in connectMethods\"\n                    :key=\"item\"\n                    :label=\"item\"\n                    :value=\"item\">\n                </el-option>\n              </el-select>\n\n\n<!--              <el-select v-model=\"selectedMethod\" placeholder=\"Methods\" @change=\"handleConnectMethodsSelect\" multiple>-->\n<!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n<!--                           :value=\"methods\" />-->\n<!--              </el-select>-->\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">ton_proof</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-input v-model=\"tonProofValue\"  placeholder=\"input ton_proof\"></el-input>\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" align=\"middle\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Required Chains</div>\n            </el-col>\n            <el-col\n              :span=\"6\"\n              v-for=\"item in Object.keys(availableChains)\"\n              :key=\"item\"\n            >\n              <el-checkbox\n                v-model=\"availableChains[item].checked\"\n                :disabled=\"!areChainsInit\"\n                >{{ availableChains[item].name }}</el-checkbox\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" align=\"middle\" style=\"margin-top: 20px\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Optional Chains</div>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(43114)\" @change=\"() => handleOptionChange(43114)\">\n                AVAX</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(10)\" @change=\"() => handleOptionChange(10)\">OP</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(8453)\" @change=\"() => handleOptionChange(8453)\">\n                BASE</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(99781165)\"\n                @change=\"() => handleOptionChange(99781165)\">Nonexist</el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp')\" @change=\"() => handleOptionChange('solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp')\">Solana</el-checkbox>\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"initBtnClicked\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectInitStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                type=\"primary\"\n                @click=\"connectBtnClicked\"\n                icon=\"el-icon-connection\"\n                :disabled=\"!areChainsInit\"\n                >{{ connectStatusStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"syncAllAddressClick\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ syncAllAddressStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                type=\"danger\"\n                @click=\"disconnectAction\"\n                icon=\"el-icon-switch-button\"\n                :disabled=\"!areChainsInit || walletAddress.length == 0\"\n                >{{ disconnectStatusStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n          <teleport to=\"body\">\n            <div v-if=\"showModal\" class=\"modal-overlay\" @click=\"closeModal\">\n              <div class=\"modal-content\" @click.stop>\n                <button class=\"close-button\" @click=\"closeModal\">\n                  &times;\n                </button>\n                <h2>Scan to connect</h2>\n                <qrcode-vue :value=\"qrValue\" :size=\"350\" level=\"L\" />\n              </div>\n            </div>\n          </teleport>\n        </el-card>\n\n        <!-- 发送交易 -->\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Transactions</div>\n          </template>\n\n          <el-tabs v-model=\"activeTab\" type=\"border-card\" @tab-click=\"clickActiveTab\">\n            <!-- ETH -->\n            <el-tab-pane label=\"ETH\" name=\"eip155:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to ETH)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve TONCoin)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(eth mint\n                    nft)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add SPX6900)\n                  </el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"oversized_personal_sign()\">oversized_personal_sign(about 70k, split limit 63k)\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TON\" name=\"ton:-239\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_getAccount\">ton_getAccount</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_sendTransaction\">ton_sendTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- solana -->\n            <el-tab-pane label=\"Sol\" name=\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- Sui-->\n            <el-tab-pane label=\"Sui\" name=\"sui:mainnet\">\n              <SuiPanel @generateTransactionParams=\"sui_generateTransactionParams\" />\n            </el-tab-pane>\n            <!-- BTC -->\n            <el-tab-pane label=\"BTC\" name=\"btc:mainnet\">\n              <BTCPanel @generateTransactionParams=\"btc_generateTransactionParams\" />\n            </el-tab-pane>\n\n            <!-- Fractal BTC -->\n            <el-tab-pane label=\"Fractal\" name=\"fractal:mainnet\">\n              <FractalPanel @generateTransactionParams=\"fractal_generateTransactionParams\" />\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Tron\" name=\"tron:mainnet\">\n              <TronTransactionPanel\n                  @generateTransactionParams=\"tron_generateTransactionParams\"\n                  @generateTransactionResult=\"tron_getTransactionResult\" />\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Aptos\" name=\"aptos:mainnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signTransaction\">aptos_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"aptos_signAndSubmitTransaction\">aptos_signAndSubmitTransaction</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Cosmos\" name=\"cosmos:cosmoshub-4\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <!-- Polygon-->\n            <el-tab-pane label=\"Polygon\" name=\"eip155:137\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send POL)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve sushi)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(polygon mint\n                    nft)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add LGNS)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_testRpc()\">wallet_testRpc(Polygon)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\"\n                  >eth_sendTransaction(转账FUSE)</el-button\n                  >\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\"\n                  >eth_sendTransaction(授权USDC)</el-button\n                  >\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- BSC-->\n            <el-tab-pane label=\"BNB\" name=\"eip155:56\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to BNB)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve POSI)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add FET)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_testRpc()\">wallet_testRpc(check balance on eth)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Fuse\" name=\"eip155:122\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_swap\">eth_sendTransaction(Swap)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Sonic testnet\" name=\"svm:70000062\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Movement\" name=\"movement:testnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"move_signTransaction\">move_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"move_signAndSubmitTransaction\">move_signAndSubmitTransaction</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n\n            <el-tab-pane label=\"osmos\" name=\"cosmos:osmosis-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"SEI\" name=\"cosmos:pacific-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TEST \" name=\"test:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"testBase64UrlSafe\">testBase64UrlSafe</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n          </el-tabs>\n\n          <el-col :xs=\"24\" :sm=\"24\" style=\"margin: 16px 0px;\">\n            <el-row style=\"align-items: center; justify-content: space-between; margin-bottom: 8px;\">\n              <el-col :span=\"4\">\n                <p style=\"font-size: 11pt; margin: 0px; text-align: start\">Redirect param (only for ETH, Polygon, BNB, Fuse)</p>\n              </el-col>\n              <el-col :span=\"9\">\n                <el-select\n                  v-model=\"redirect\"\n                  @change=\"handleRedirectSelect\"\n                  placeholder=\"Return Strategy\"\n                  :disabled=\"!canChainAddRedirectParam()\"\n                  >\n                  <el-option\n                    v-for=\"strategy in returnStrategies\"\n                    :key=\"`return-strategy-select-option-${strategy}`\"\n                    :label=\"strategy\"\n                    :value=\"strategy\"\n                  />\n                </el-select>\n              </el-col>\n              <el-col :span=\"10\">\n                <el-input\n                  v-if=\"redirect === 'deeplink'\"\n                  v-model=\"redirectDeeplink\"\n                  @change=\"handleRedirectDeeplink\"\n                  placeholder=\"Deeplink\"\n                  :disabled=\"!canChainAddRedirectParam() || redirect !== 'deeplink'\"\n                  style=\"margin: 0px\"\n                />\n              </el-col>\n            </el-row>\n            <el-button\n              type=\"primary\" @click=\"addRedirectParam()\"\n              :disabled=\"!canChainAddRedirectParam() || !testTransaction\"\n            >\n              Add redirect param to data\n            </el-button>\n          </el-col>\n\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Data:</div>\n            <el-input v-model=\"testTransaction\" type=\"textarea\" :rows=\"5\" placeholder=\"sendTransactions\"></el-input>\n          </el-col>\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Result :</div>\n            <el-input v-model=\"testboc\" type=\"textarea\" :rows=\"5\" placeholder=\"boc\"></el-input>\n          </el-col>\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button type=\"primary\" @click=\"sendTransaction()\">{{\n                testTransactionStr\n                }}</el-button>\n            </el-col>\n          </el-row>\n        </el-card>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<style scoped>\n/* 重置全局边距和内边距 */\nbody,\nhtml {\n  margin: 0;\n  padding: 0;\n  height: 100%;\n}\n\n/* 确保 app 容器占满整个视口 */\n#app {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin: 0 auto;\n  /* 居中 */\n  max-width: 600px;\n  /* 设置最大宽度 */\n  padding: 0 20px;\n  /* 添加一些左右内边距 */\n}\n\n/* 调整 el-container 样式 */\n.el-container {\n  min-height: 100vh;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n}\n\n/* 调整 el-header 样式 */\n.el-header {\n  background-color: #333333;\n  color: white;\n  height: 50px;\n  line-height: 50px;\n  font-size: 18px;\n  font-weight: bold;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n}\n\n/* 调整 el-main 样式 */\n.el-main {\n  padding: 70px 0 20px;\n  /* 增加顶部内边距以避免被固定header遮挡 */\n  flex-grow: 1;\n}\n\n.el-card {\n  margin-bottom: 20px;\n}\n\n.info-row {\n  margin-bottom: 10px;\n}\n\n.input-label {\n  margin-bottom: 5px;\n  text-align: left;\n}\n\n.el-input {\n  margin-bottom: 10px;\n}\n\n/* 通用按钮样式 */\n.wallet-actions .el-button,\n.transaction .el-button,\n.clear-cache .el-button {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 40px;\n}\n\n.wallet-actions .el-button span,\n.transaction .el-button span,\n.clear-cache .el-button span {\n  margin: 0 auto;\n}\n\n/* 按钮行间距 */\n.wallet-actions .button-row,\n.transaction .button-row {\n  margin-bottom: 8px;\n}\n\n.wallet-actions .button-row:last-child,\n.transaction .button-row:last-child {\n  margin-bottom: 0;\n}\n\n/* 调整图标和文字的对齐 */\n.wallet-actions .el-button [class^=\"el-icon-\"],\n.transaction .el-button [class^=\"el-icon-\"],\n.clear-cache .el-button [class^=\"el-icon-\"] {\n  margin-right: 5px;\n  vertical-align: middle;\n}\n\n/* 新增：调整发送交易按钮与输入框的间距 */\n.transaction .el-row:not(:last-child) {\n  margin-bottom: 10px;\n}\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  text-align: center;\n  position: relative;\n  max-width: 90%;\n  width: 400px;\n}\n\n.close-button {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  font-size: 24px;\n  border: none;\n  background: none;\n  cursor: pointer;\n}\n\n/* 响应式调整 */\n@media (max-width: 600px) {\n  #app {\n    padding: 0 10px;\n  }\n\n  .el-main {\n    padding: 60px 0 10px;\n  }\n}\n</style>\n<script>\nimport {OKX_CONNECT_ERROR_CODES, safeJsonStringify,getAppWalletDeepLink,getUniversalLink} from \"@okxconnect/core\"\nimport {\n  OKXBtcProvider,\n  OKXUniversalProvider,\n  OKXCosmosProvider,\n  OKXTonProvider,\n  OKXTronProvider\n} from \"@okxconnect/universal-provider\"\nimport {OKXSolanaProvider} from \"@okxconnect/solana-provider\";\nimport {\n  Connection,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n  TransactionMessage,\n  VersionedTransaction\n} from '@solana/web3.js';\nimport {OKXSuiProvider as SuiAdapter} from \"@okxconnect/sui-provider\"\nimport QrcodeVue from 'qrcode.vue'\n\nimport {OKXAptosProvider} from \"@okxconnect/aptos-provider\";\nimport {Aptos, AptosConfig, Network} from \"@aptos-labs/ts-sdk\";\n\nimport BTCPanel from \"./components/BtcTransactionPanel.vue\";\nimport FractalPanel from \"./components/FractalTransactionPanel.vue\"\nimport SuiPanel from \"./components/SuiTransactionPanel.vue\";\n\nimport {OKXUniversalConnectUI, THEME} from \"@okxconnect/ui\";\nimport { ethers } from 'ethers';\nimport VConsole from 'vconsole';\nimport nacl from \"tweetnacl\";\nconst { verifyADR36Amino } = require('@keplr-wallet/cosmos')\nconst { fromBech32 } = require('@cosmjs/encoding')\nimport { verifyPersonalMessageSignature } from '@mysten/sui/verify';\nimport {useShortLink} from \"@okxconnect/core\";\nimport TronTransactionPanel from \"@/components/TronTransactionPanel.vue\";\nimport {TronWeb} from \"tronweb\";\nnew VConsole();\n\nconst allChains = {\n  1: { name: \"Eth\", checked: false },\n  56: { name: \"BNB\", checked: false },\n  137: { name: \"Polygon\", checked: false },\n  122: { name: \"Fuse\", checked: false },\n  \"ton:-239\":{name: \"TON\",checked: false},\n  \"btc:mainnet\": { name: \"BTC\", checked: false },\n  \"sui:mainnet\": { name: \"Sui\", checked: false },\n  \"aptos:mainnet\": { name: \"Aptos\", checked: false },\n  \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\": {\n    name: \"Solana\",\n    checked: false,\n  },\n  \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\": {\n    name: \"Sol testnet\",\n    checked: false,\n  },\n  \"svm:70000062\": {\n    name: \"Sonic testnet\",\n    checked: false,\n  },\n  \"movement:testnet\": { name: \"Movement\", checked: false },\n  \"fractal:mainnet\": { name: \"Fractal\", checked: false },\n  \"cosmos:osmosis-1\": {name: \"Osmos\", checked: false},\n  \"cosmos:cosmoshub-4\": {name: \"Cosmos\", checked: false},\n  \"cosmos:pacific-1\": {name: \"SEI\", checked: false},\n  \"cosmos:abvdefg\": {name: \"cosmos:abvdefg\", checked: false},\n  \"tron:mainnet\": {name: \"tron\", checked: false},\n  997865: { name: \"Non Exist chain\", checked: false },\n  2020: { name: \"Ronin\", checked: false },\n  1666600000: { name: \"Harmony\", checked: false },\n};\n\nconst chainsThatCanAddRedirectParam = [\n  \"eip\"\n]\n\nvar optionChains = new Set([]);\nvar selectedModals = [\"before\", \"success\", \"error\"];\nvar selectedReturnStrategy = \"none\";\nvar selectedDeepLink = \"tg://resolve\";\nvar selectedLanguage = \"en_US\";\nvar selectedTheme = THEME.LIGHT;\n\n// import QrcodeVue from 'qrcode.vue'\nexport default {\n  name: \"App\",\n  components: {\n    TronTransactionPanel,\n    QrcodeVue,\n    BTCPanel,\n    FractalPanel,\n    SuiPanel\n  },\n\n  data: () => {\n    return {\n      activeTab: \"eip155:1\",\n      testTopic: \"\",\n      testPublicKey: \"\",\n      testProofPayload: \"\",\n      tonProofValue:\"\",\n      pendingDeepLink: \"-\",\n      logList: [],\n      connectReady: false,\n      connectStatusStr: \"Connect\",\n      syncAllAddressStr: \"syncAllAddress\",\n      connectInitStr: \"init test\",\n      disconnectStatusStr: \"Disconnect\",\n      localPubKey: \"\",\n      localSecKey: \"\",\n      testTransaction: \"\",\n      selectedChain: \"eip155:1\",\n      testTransactionStr: \"Send\",\n      walletAddress: \"\",\n      testboc: \"\",\n      ProofPayloadVerify: \"\",\n      showModal: false,\n      showVerifyRow: false,\n      qrValue: \"https://www.okx.com/download\",\n      currentStatus: \"\",\n      areChainsInit: false,\n      availableChains: allChains,\n      isOptionalChecked: (chainId) => {\n        return optionChains.has(chainId);\n      },\n      withUI: localStorage.getItem(\"autoRefresh\") != \"false\",\n      universalToTG: localStorage.getItem(\"universalToTG\") != \"false\",\n      modals: selectedModals,\n      returnStrategies: [\"none\", \"back\", \"deeplink\"],\n      returnStrategy: selectedReturnStrategy,\n      deeplink: selectedDeepLink,\n      locales: [\n        \"en_US\",\n        \"ru_RU\",\n        \"zh_CN\",\n        \"zh\",\n        \"ar_AE\",\n        \"cs_CZ\",\n        \"de_DE\",\n        \"es_ES\",\n        \"es_LAT\",\n        \"fr_FR\",\n        \"id_ID\",\n        \"it_IT\",\n        \"nl_NL\",\n        \"pl_PL\",\n        \"pt_BR\",\n        \"pt_PT\",\n        \"ro_RO\",\n        \"tr_TR\",\n        \"uk_UA\",\n        \"vi_VN\",\n        \"zh_TW\"\n      ],\n      selectedMethod:[],\n      selectedMethodData:[],\n      connectMethods:[\n        \"wallet_addEthereumChain(ETH)\",\n        \"personal_sign(ETH)\",\n        \"solana_signMessage(Sol mainnet)\",\n        \"sui_signMessage(Sui mainnet)\",\n        \"sui_signPersonalMessage(Sui mainnet)\",\n        \"btc_signMessage(BTC)\",\n        \"aptos_signMessage(aptos mainnet)\",\n        \"cosmos_signArbitrary(cosmoshub)\",\n        \"test_noSupport_eth(ETH)\",\n        \"tron_signMessage\",\n        \"tron_signMessageV2\",\n        \"sync_all_addresses\"\n      ],\n\n      language: selectedLanguage,\n      theme: selectedTheme,\n      THEME: THEME,\n      redirect: selectedReturnStrategy,\n      redirectDeeplink: selectedDeepLink,\n      handleWithUI: (isChecked) => {\n        localStorage.setItem(\"autoRefresh\", `${isChecked}`);\n        location.reload();\n      },\n      handleUniversalToTG: (isChecked) => {\n        localStorage.setItem(\"universalToTG\", `${isChecked}`);\n      },\n      handleOptionChange: (chainId) => {\n        if (optionChains.has(chainId)) {\n          optionChains.delete(chainId);\n        } else {\n          optionChains.add(chainId);\n        }\n      },\n    };\n  },\n  computed: {\n    getWalletAddress: function () {\n      return this.walletAddress;\n    },\n  },\n  methods: {\n    isChecked(chainId) {\n      return this.selectedChains.has(chainId);\n    },\n\n    initChains(newChains) {\n      if (newChains.length > 0) {\n        const updatedChains = Object.assign({}, this.availableChains);\n        for (const chainId of newChains) {\n          if (updatedChains[chainId]){\n            updatedChains[chainId].checked = !updatedChains[chainId].checked;\n          }\n        }\n        this.availableChains = updatedChains;\n      }\n\n      this.areChainsInit = true;\n    },\n\n    async clickActiveTab(tab) {\n      const tabName = tab.props ? tab.props.name : tab.name;\n      this.selectedChain = tabName;\n      console.log(`已切换到链 :`, tabName);\n\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      window.provider.setDefaultChain(this.selectedChain);\n    },\n\n    async initBtnClicked() {\n      var initCall;\n      if (!this.withUI) {\n        initCall = OKXUniversalProvider.init({\n          dappMetaData: {\n            name: \"univer test dapp\",\n            icon: \"https://avatars.githubusercontent.com/u/37784886\",\n          },\n        });\n      } else {\n        initCall = OKXUniversalConnectUI.init({\n          dappMetaData: {\n            icon: \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\",\n            name: \"OKX WalletConnect UI Demo\",\n          },\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: \"all\",\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme\n          },\n        });\n      }\n\n      initCall.then((provider) => {\n        window.provider = provider;\n        window.tonProvider = new OKXTonProvider(window.provider);\n        window.tonProvider.onStatusChange((walletInfo) => {\n              console.log('TONConnection onStatusChange:', JSON.stringify(walletInfo));\n            }, (err) => {\n              console.log('TONConnection onStatusChange error:', err);\n            }\n        )\n\n        if (window.provider instanceof OKXUniversalConnectUI) {\n          window.provider.onModalStateChange((state)=>{\n            console.log(`onModalStateChange   ${JSON.stringify(state)}`)\n          })\n        }\n\n        console.log(\"init finished:\", provider);\n        console.log(\"init finished session:\", JSON.stringify(provider.session));\n\n        if (provider.session?.namespaces) {\n          const newChains = [];\n          console.log(\"namespaces\", provider.session.namespaces);\n          Object.entries(provider.session.namespaces).forEach(([key, value]) => {\n            if (key === \"eip155\") {\n              value.chains.forEach((chain) => {\n                newChains.push(parseInt(chain.substring(7)));\n              });\n            }\n            else {\n              value.chains.forEach((chain) => {\n                newChains.push(chain);\n              });\n            }\n          });\n\n          console.log(\"existing chains:\", newChains);\n          this.initChains(newChains);\n        } else {\n          this.initChains([]);\n        }\n\n        provider.on(\"display_uri\", (uri) => {\n          if (!useShortLink()){\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>display_uri  ==> \", uri);\n        });\n\n        provider.on(\"connect_signResponse\", (items) => {\n          console.log(\"通知>>>connect_signResponse  ==> \", JSON.stringify(items));\n          this.verifyMessage(items)\n        })\n\n        provider.on(\"short_display_uri\", (uri) => {\n          if (useShortLink()){\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>short_display_uri  ==> \", uri);\n        });\n\n\n        provider.on(\"session_connecting\", () => {\n          if (useShortLink()){\n            alert(\"session_connecting\")\n          }\n          console.log(\"通知>>>session_connecting  ==> \");\n        });\n\n        provider.on(\"connect\", (session) => {\n          console.log(\"通知>>>get connect session\", session);\n        });\n        provider.on(\"reconnect\", (session) => {\n          console.log(\"通知>>>get reconnect session\", session);\n          this.walletAddress = \"connected\";\n        });\n        provider.on(\"disconnect\", ({ topic }) => {\n          console.log(`通知>>>get disconnect  ${topic}`);\n          this.walletAddress = \"disconnecteddddd\";\n        });\n        provider.on(\"session_delete\", ({ topic }) => {\n          console.log(`通知>>>get session_delete  ${topic}`);\n        });\n        provider.on(\"session_update\", (session) => {\n          console.log(`通知>>>get session_update `, JSON.stringify(session));\n        });\n      });\n    },\n\n    async connectBtnClicked() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        this.testTonSdk();\n      } else {\n        console.log(`connectBtnClicked provider not finish init`);\n      }\n    },\n\n    async syncAllAddressClick() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        if (window.provider instanceof OKXUniversalProvider){\n          if (window.provider.connected()){\n            try {\n              let message = await window.provider.syncAllAddresses()\n              if (typeof message == \"string\") {\n                this.testboc = message\n              } else {\n                this.testboc = JSON.stringify(message)\n              }\n            }catch (e) {\n              this.testboc = JSON.stringify(e)\n            }\n          }else{\n            this.testboc = \"not connected\"\n          }\n        }\n\n      } else {\n        console.log(`syncAllAddress provider not finish init`);\n      }\n    },\n\n    async disconnectAction() {\n      try {\n        console.log(\"get disconnect wallet btn clicked\");\n        // await TON.disconnect();\n        var provider = window.provider;\n        await provider.disconnect();\n        this.walletAddress = \"disconnected\";\n      } catch (error) {\n        console.log(\"Disconnect  error ==>> \", error.message);\n        this.currentStatus = error.message;\n      }\n    },\n\n    async eth_requestAccounts() {\n      var data = { method: \"eth_requestAccounts\" };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_chainId() {\n      var data = { method: \"eth_chainId\" };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_switchEthereumChain() {\n      var data = { method: \"wallet_switchEthereumChain\" };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_addEthereumChain() {\n      var data = {\n        method: \"wallet_addEthereumChain\",\n        params: {\n          blockExplorerUrls: [\"https://explorer.fuse.io\"],\n          chainId: \"0x7a\",\n          chainName: \"Fuse\",\n          nativeCurrency: { name: \"Fuse\", symbol: \"FUSE\", decimals: 18 },\n          rpcUrls: [\"https://rpc.fuse.io\"],\n        },\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n    async personal_sign() {\n      if (this.selectedChain === \"eip155:1\") {\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0x1ca023f10e157d148deed210f8bee193657a1eaa7f187909e20a9dc3b071dbc364c41fde37960c05093359f410a061ec8a7dca8c0c39fc7c1e24de8a3329775d1b\n\n        var accounts = await window.provider.request(\n          { method: \"eth_requestAccounts\" },\n          \"eip155:1\"\n        );\n        var address = accounts[0];\n        console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n        var dataETH = {\n          method: \"personal_sign\",\n          params: [\n            \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n            address,\n          ],\n        };\n\n        this.testTransaction = JSON.stringify(dataETH);\n      } else if (\n        this.selectedChain === \"eip155:137\" ||\n        this.selectedChain === \"eip155:122\"\n      ) {\n        // method\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0xebda9cfa2af43999058dffa0107031d1ef7fc0252dca85dcbd22ea097af922ca39b64d509ef61ce42b7641c5840b8a80337ffd1411b13e87e2260a3f1b6c151c1b\n\n        var dataPolygon = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n        this.testTransaction = JSON.stringify(dataPolygon);\n      } else if (this.selectedChain === \"eip155:56\") {\n        var data = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n\n        this.testTransaction = JSON.stringify(data);\n      }\n    },\n\n    async eth_sendTransaction_swap() {\n      var data = {\n        method: \"eth_sendTransaction\",\n        chainId: \"eip155:122\",\n        params: {\n          value: \"0x38d7ea4c68000\",\n          gas: \"0x2665f\",\n          to: \"0xf2614A233c7C3e7f08b1F887Ba133a13f1eb2c55\",\n          from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n          data: \"0x2646478b000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00000000000000000000000000000000000000000000000000038d7ea4c68000000000000000000000000000620fd5fa44be6af63715ef4e65ddfa0387ad13f5000000000000000000000000000000000000000000000000000000000000001b000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000700301ffff0201602352A9Eb5234466Eac23E59e7B99bCaE79C39c0BE9e53fd7EDaC9F859882AfdDa116645287C629040BE9e53fd7EDaC9F859882AfdDa116645287C62900602352A9Eb5234466Eac23E59e7B99bCaE79C39c01f2F3e73be57031114dd1f4E75c1DD87658be7F0E000bb800000000000000000000000000000000\",\n        },\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async oversized_personal_sign() {\n      const payload = ``\n      if (this.selectedChain === \"eip155:1\") {\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0x1ca023f10e157d148deed210f8bee193657a1eaa7f187909e20a9dc3b071dbc364c41fde37960c05093359f410a061ec8a7dca8c0c39fc7c1e24de8a3329775d1b\n\n        var accounts = await window.provider.request(\n          { method: \"eth_requestAccounts\" },\n          \"eip155:1\"\n        );\n        var address = accounts[0];\n        console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n        var dataETH = {\n          method: \"personal_sign\",\n          params: [\n            payload,\n            address,\n          ],\n        };\n\n        this.testTransaction = JSON.stringify(dataETH);\n      } else if (\n        this.selectedChain === \"eip155:137\" ||\n        this.selectedChain === \"eip155:122\"\n      ) {\n        // method\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0xebda9cfa2af43999058dffa0107031d1ef7fc0252dca85dcbd22ea097af922ca39b64d509ef61ce42b7641c5840b8a80337ffd1411b13e87e2260a3f1b6c151c1b\n\n        var dataPolygon = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              payload,\n          },\n        };\n        this.testTransaction = JSON.stringify(dataPolygon);\n      } else if (this.selectedChain === \"eip155:56\") {\n        var data = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              payload,\n          },\n        };\n\n        this.testTransaction = JSON.stringify(data);\n      }\n    },\n\n    async eth_signTypedData_v4() {\n      // method\n      // eth_signTypedData\n      // address\n      // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n      // valid\n      // true\n      // result\n      // 0xa8bb3c6b33a119d2d567c7632195c21988df778006082742125a591f5c633f716107883a37f7de6531a6312a5f69022135bf46fe5ab77905b62c82b3395f985e1b\n      //\n\n      // var data = {\n      //   \"method\": \"eth_signTypedData_v4\",\n      //   \"params\": {\n      //     \"typedDataJson\":\"{\\\"types\\\":{\\\"EIP712Domain\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"version\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"chainId\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"name\\\":\\\"verifyingContract\\\",\\\"type\\\":\\\"address\\\"}],\\\"Person\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"wallet\\\",\\\"type\\\":\\\"address\\\"}],\\\"Mail\\\":[{\\\"name\\\":\\\"from\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"to\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"contents\\\",\\\"type\\\":\\\"string\\\"}]},\\\"primaryType\\\":\\\"Mail\\\",\\\"domain\\\":{\\\"name\\\":\\\"Ether Mail\\\",\\\"version\\\":\\\"1\\\",\\\"chainId\\\":1,\\\"verifyingContract\\\":\\\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\\\"},\\\"message\\\":{\\\"from\\\":{\\\"name\\\":\\\"Cow\\\",\\\"wallet\\\":\\\"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\\\"},\\\"to\\\":{\\\"name\\\":\\\"Bob\\\",\\\"wallet\\\":\\\"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\\\"},\\\"contents\\\":\\\"Hello, Bob!\\\"}}\"\n      // }}\n\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        this.selectedChain\n      );\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n      var data = {\n        method: \"eth_signTypedData_v4\",\n        params: [\n          address,\n          {\n            types: {\n              EIP712Domain: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"version\",\n                  type: \"string\",\n                },\n                {\n                  name: \"chainId\",\n                  type: \"uint256\",\n                },\n                {\n                  name: \"verifyingContract\",\n                  type: \"address\",\n                },\n              ],\n              Person: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"wallet\",\n                  type: \"address\",\n                },\n              ],\n              Mail: [\n                {\n                  name: \"from\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"to\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"contents\",\n                  type: \"string\",\n                },\n              ],\n            },\n            primaryType: \"Mail\",\n            domain: {\n              name: \"Ether Mail\",\n              version: \"1\",\n              chainId: 1,\n              verifyingContract: \"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\",\n            },\n            message: {\n              from: {\n                name: \"Cow\",\n                wallet: \"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\",\n              },\n              to: {\n                name: \"Bob\",\n                wallet: \"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\",\n              },\n              contents: \"Hello, Bob!\",\n            },\n          },\n        ],\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_sendTransaction_transfer() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            chainId: \"0x1\",\n            to: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            value: \"0x5af3107a4000\",\n            maxPriorityFeePerGas: \"0x3b9aca00\",\n            gas: \"0x5e56\",\n            maxFeePerGas: \"0x2643b9db8\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gasPrice: \"0x17003f6530\",\n            nonce: \"0x0d30\",\n            data: \"0x\",\n            value: \"0x00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasLimit: \"0x5208\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x5e56\",\n            value: \"0x5af3107a4000\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasPrice: \"0x3b9aca00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            chainId: \"0x38\",\n          },\n        };\n      }else if(this.selectedChain === \"eip155:122\"){\n         data =   {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            value: \"0x0\",\n            chainId: \"0x7a\",\n          }\n        }\n      }\n\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        this.selectedChain\n      );\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"to\"] = address;\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_approve() {\n      var data = {};\n\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000000000000022d473030f116ddee9f6b43ac78ba3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x582d872a1b094fc48f5de31d3b73f2d9be47def1\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000f6f8096ac575b0\",\n            to: \"0x0b3F868E0BE5597D5DB7fEB59E1CADBb0fdDa50a\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            value: \"0x0\",\n            gas: \"0xe117\",\n            gasPrice: \"0xb2d05e00\",\n            data: \"0x095ea7b300000000000000000000000031c2f6fcff4f8759b3bd5bf0e1084a055615c768ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x5CA42204cDaa70d5c773946e69dE942b85CA6706\",\n          },\n        };\n      }else if (this.selectedChain === 'eip155:122'){\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000000000000013b3\",\n            to: \"0x620fd5fa44BE6af63715Ef4E65DDFA0387aD13F5\",\n          },\n        };\n      }\n\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        this.selectedChain\n      );\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_mint() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x4cacb\",\n            data: \"0xa64dfa75000000000000000000000000ed688002f3797599db8b4feacfe8b1dda0df1c8d000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cecb15396825a895ff8da8fc2d2c77a234dccee00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f6261667962656968643737366b6177706e71336f6f6a6635693274787a76617737737164656b34616a776472637472703261366f626b70723773792f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x30795\",\n            data: \"0xa64dfa75000000000000000000000000341b3687f0309778f08f29336b2c4b9c38b9f110000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f62616679626569686a6279676b68747a71376b68377434336266686e676e793236337668766f6578716a6d6e377161716166366e717a64743777712f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      }\n\n      let str = JSON.stringify(data);\n      console.log(\"-----长度--->\", str.length);\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n          this.selectedChain\n      );\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_testRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n        `eip155:56`,\n        `https://eth-mainnet.g.alchemy.com/v2/NxUfYJUr-TQtEpLmSXhhD5pXn70GwsyV`\n      );\n      var data = {\n        method: \"eth_getBalance\",\n        params: [\"0x8D97689C9818892B700e27F316cc3E41e17fBeb9\", \"latest\"],\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_watchAsset() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xe0f63a424a4439cbe457d80e4f4b51ad25b2c56c\",\n              symbol: \"SPX6900\",\n              image:\n                \"https://assets.coingecko.com/coins/images/31401/standard/sticker_%281%29.jpg?1702371083\",\n              decimals: 8,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xeB51D9A39AD5EEF215dC0Bf39a8821ff804A0F01\",\n              symbol: \"LGNS\",\n              image: \"https://polygonscan.com/token/images/originlgns_32.png\",\n              decimals: 9,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0x031b41e504677879370e9dbcf937283a8691fa7f\",\n              symbol: \"FET\",\n              image: \"https://bscscan.com/token/images/fetch_32.png\",\n              decimals: 18,\n            },\n          },\n        };\n      }\n\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async ton_sendTransaction() {\n      var data  = {\n        \"messages\":[{\"address\":\"EQARULUYsmJq1RiZ-YiH-IJLcAZUVkVff-KBPwEmmaQGH6aC\",\"amount\":\"205000000\",\"payload\":\"te6cckEBAgEAhwABbQ+KfqUAAADNgG7tIEATEtAIAO87mQKicbKgHIk4pSPP4k5xhHqutqYgAB7USnesDnCcECwbgQMBAJUlk4VhgBD3JEg1TUr75iTijBghOKm/sxNDXUBl7CD6WMut0Q85x4RafwA/Es89DBXoTxuqxVFxyBbzt9Rav2HBUKl7hmkvLuKHLBCW57aK\"}],\n        \"validUntil\":1792481054,\n        \"network\":'-239'}\n      this.testTransaction = JSON.stringify(data)\n    },\n    ton_getAccount() {\n      this.testTransaction = \"这里是同步获取 不再需要点击 <<发送交易>>\"\n      let result =   window.tonProvider.account()\n      if (result) {\n        this.testboc = JSON.stringify(result);\n      } else {\n        this.testboc = 'null'\n      }\n    },\n\n    async tonUniversalLog() {\n      console.log(\"ton 信息: tonProvider  connected:\",window.tonProvider.connected())\n      console.log(\"ton 信息: tonProvider  account:\",JSON.stringify(window.tonProvider.account()))\n      console.log(\"ton 信息: tonProvider  wallet:\",JSON.stringify(window.tonProvider.wallet()))\n    },\n\n    async sendTransactionAlert() {\n      //\n      const response = await fetch(`https://apitest.fireverse.ai/oauth/okx/getNonce?publicAddress=0x0cecb15396825a895ff8da8fc2d2c77a234dccee`);\n      const data = await response.json();\n      console.log(\"请求数据----\",JSON.stringify(data))\n      await this.personal_sign()\n      if (confirm(\"Are you want to sign message?\")) {\n        this.sendTransaction();\n      }\n\n      // window.open(\"https://www.okx.com/download?deeplink=okx%3A%2F%2Fweb3%2Fwallet%2Fconnect\",'_self')\n    },\n\n    async sendTransaction() {\n      if (this.selectedChain.startsWith(\"aptos\")\n          || this.selectedChain.startsWith(\"movement\")\n          || this.selectedChain.startsWith(\"solana\")\n          || this.selectedChain.startsWith(\"sonic\")\n          || this.selectedChain.startsWith(\"cosmos\")) {\n        return\n      }\n      console.log(\"sendTransaction\", window.provider);\n      console.log(\"sendTransaction内容11------\", this.testTransaction);\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (this.testTransaction && window.provider) {\n        // eslint-disable-next-line no-undef\n        const sendData = JSON.parse(this.testTransaction);\n        try {\n          console.log(\"sendTransaction-----22method>>\", sendData.method);\n\n          let chainId = \"eip155:1\";\n          if (this.selectedChain) {\n            chainId = this.selectedChain;\n            console.log(\n              \"sendTransaction-----this.selectedChain>>\",\n              this.selectedChain\n            );\n          }\n          console.log(\"windowOpen[click_1]: \", Date.now());\n          if (chainId == \"sui:mainnet\") {\n            const adapter = new SuiAdapter(window.provider);\n            var suiResult = \"invalid result\";\n            if (this.currentSuiMethod == 'sui_getAccount') {\n              let result = adapter.getAccount()\n              if (typeof result == \"string\") {\n                this.testboc = result\n              } else {\n                this.testboc = JSON.stringify(result)\n              }\n            }\n            if (this.currentSuiMethod == \"sui_signTransaction\") {\n              suiResult = await adapter.signTransaction(\n                this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signAndExecuteTransaction\") {\n              suiResult = await adapter.signAndExecuteTransaction(\n                this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signMessage\") {\n              console.log(\"signMessage----\", this.currentSuiTransaction);\n              suiResult = await adapter.signMessage(this.currentSuiTransaction);\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_signPersonalMessage\") {\n              console.log(\n                \"signPersonalMessage----\",\n                this.currentSuiTransaction\n              );\n              suiResult = await adapter.signPersonalMessage(\n                this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_testRpc\") {\n              console.log(\"test rpc----\", this.currentSuiTransaction);\n              console.log(\n                `请求数据发送 rpc ----->> ${JSON.stringify(sendData)}`\n              );\n              const res = await window.provider.request(sendData, chainId);\n              console.log(`请求数据回调 rpc ----->> ${JSON.stringify(result)}`);\n              if (typeof res == \"string\") {\n                this.testboc = res;\n              } else {\n                this.testboc = JSON.stringify(res);\n              }\n            }\n            console.log(\"windowOpen[click_2]: \", Date.now());\n            return;\n          }else if(chainId === \"ton:-239\"){\n            console.log(\n                `请求数据发送 sendTransaction ---ton-->> ${JSON.stringify(sendData)}`\n            );\n            let result =  await window.tonProvider.sendTransaction(sendData)\n            console.log(\n                `请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`\n            );\n            if (typeof result == \"string\") {\n              this.testboc = result;\n            } else {\n              this.testboc = JSON.stringify(result);\n            }\n            return\n          }\n\n          if (chainId == 'btc:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var btcResult = 'invalid result'\n\n            if (this.currentBtcMethod == 'btc_signMessage') {\n              btcResult = await btcAdapter.signMessage(chainId, this.currentBtcTransaction[\"signStr\"])\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_send') {\n              btcResult = await btcAdapter.send(chainId, this.currentBtcTransaction)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signPsbt') {\n              btcResult = await btcAdapter.signPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n\n              this.hexToBase64(btcResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentBtcMethod == 'btc_signPsbts') {\n              btcResult = await btcAdapter.signPsbts(chainId, this.currentBtcTransaction.psbtHexs, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_sendInscription') {\n              btcResult = await btcAdapter.sendInscription(chainId, this.currentBtcTransaction.address, this.currentBtcTransaction.inscriptionId, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signAndPushPsbt') {\n              btcResult = await btcAdapter.signAndPushPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            }else if (this.currentBtcMethod == 'btc_sendBitcoin') {\n              btcResult = await btcAdapter.sendBitcoin(chainId, this.currentBtcTransaction.toAddress, this.currentBtcTransaction.satoshis, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            }else if (this.currentBtcMethod == 'btc_getAccount'){\n              btcResult = btcAdapter.getAccount(chainId)\n              this.testboc = JSON.stringify(btcResult)\n            }\n\n            return\n          }\n\n          if (chainId == 'fractal:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var fractalResult = 'invalid result'\n\n            if (this.currentFractalMethod == 'fractal_signMessage') {\n              fractalResult = await btcAdapter.signMessage(chainId, this.currentFractalTransaction['signStr'])\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_send') {\n              fractalResult = await btcAdapter.send(chainId, this.currentFractalTransaction)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signPsbt') {\n              fractalResult = await btcAdapter.signPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.hexToBase64(fractalResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentFractalMethod == 'fractal_signPsbts') {\n              fractalResult = await btcAdapter.signPsbts(chainId, this.currentFractalTransaction.psbtHexs, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_sendInscription') {\n              fractalResult = await btcAdapter.sendInscription(chainId, this.currentFractalTransaction.address, this.currentFractalTransaction.inscriptionId, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signAndPushPsbt') {\n              fractalResult = await btcAdapter.signAndPushPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            }else if (this.currentFractalMethod == 'fractal_sendBitcoin') {\n              fractalResult = await btcAdapter.sendBitcoin(chainId, this.currentFractalTransaction.toAddress, this.currentFractalTransaction.satoshis, this.currentFractalTransaction.options)\n\n              this.testboc = JSON.stringify(fractalResult)\n            }else if (this.currentFractalMethod == 'fractal_getAccount'){\n              fractalResult = btcAdapter.getAccount(chainId)\n              this.testboc = JSON.stringify(fractalResult)\n            }\n\n            return\n          }\n\n          console.log(`请求数据发送 sendTransaction ----->> ${JSON.stringify(sendData)}`)\n          var result = await window.provider.request(sendData, chainId)\n          console.log(`请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`)\n\n          console.log(\"windowOpen[click_3]: \", Date.now());\n          if (typeof result == \"string\") {\n            this.testboc = result;\n          } else {\n            this.testboc = JSON.stringify(result);\n          }\n          console.log(\"方法数据回调 --this.testboc--\", this.testboc);\n        } catch (error) {\n          console.error(\"方法数据回调失败 --Error--\", error.message);\n\n          if (error.code === OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n            this.testboc = error.message;\n          } else {\n            this.testboc = \"wrong signature！\" + error.message;\n          }\n        }\n      } else {\n        alert(\"Please input transaction data\");\n      }\n    },\n\n    hexToBase64(hexStr) {\n      var bytes = [];\n      for (var i = 0; i < hexStr.length; i += 2) {\n        bytes.push(parseInt(hexStr.substr(i, 2), 16));\n      }\n      const buffer = new Uint8Array(bytes)\n      const blob = new Blob([buffer]);\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = function (e) {\n          var base64Data = e.target.result.split(\",\")[1]\n          resolve(base64Data);\n        };\n        reader.onerror = function (e) {\n          reject(e);\n        };\n        reader.readAsDataURL(blob);\n      });\n    },\n    testBase64UrlSafe(){\n      let datatest = {\"protocolVer\":1,\"topic\":\"8a7a4c3be73802d0ae2587123ade7bb79f27433b9aa3ca589a2208a2089eecfd\",\"clientId\":\"5f1bbf9eac92160affa7ef04d0a710817ddb6d8c22ebbd6263e86f059930b404\",\"requestId\":\"1731383250054\",\"dAppInfo\":{\"url\":\"connect.oker.vip\",\"origin\":\"https://connect.oker.vip\",\"name\":\"univer test dapp\",\"icon\":\"https://avatars.githubusercontent.com/u/37784886\"},\"requests\":[{\"name\":\"requestAccounts\",\"requiredNamespaces\":[{\"namespace\":\"aptos\",\"chains\":[\"aptos:637\"]}],\"optionalNamespaces\":[],\"connectRequestMethods\":[{\"chainId\":\"aptos:637\",\"method\":\"aptos_signMessage\",\"params\":{\"data\":{\"address\":true,\"application\":true,\"chainId\":true,\"message\":\"123 中文测试!\",\"nonce\":\"1234\"},\"applicationUrl\":\"https://connect.oker.vip\",\"prefix\":\"APTOS\",\"aptosChainId\":\"1\"}}]}],\"redirect\":\"none\"}\n      let json = JSON.stringify(datatest)\n      const utf8Array = new TextEncoder().encode(json);\n      let binary = '';\n      utf8Array.forEach(byte => {\n        binary += String.fromCharCode(byte);\n      });\n\n      let firstStr =  btoa(binary)\n      console.log(\"字符串编码1>>>>\",firstStr)\n      firstStr = firstStr.replace(/\\+/g, '-')  // 替换 '+'\n      console.log(\"字符串编码2>>>>\",firstStr)\n      firstStr = firstStr.replace(/\\//g, '_')  // 替换 '/'\n      console.log(\"字符串编码3>>>>\",firstStr)\n      firstStr = firstStr.replace(/=+$/, '');  // 移除 '=';\n      console.log(\"字符串编码4>>>>\",firstStr)\n\n      let showUrl =  getUniversalLink(getAppWalletDeepLink(firstStr))\n      console.log(\"字符串编码5>>>>\",showUrl)\n      this.qrValue = showUrl;\n      this.showModal = true;\n    },\n\n\n    async testTonSdk() {\n      // 1. connect\n      //  create sub providers for each namespace/chain\n      let nameSpacesChains = [];\n      let optSpaceChains = [];\n\n      let solanaChains = [\n        \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n        \"svm:70000062\",\n      ];\n      let hasEip155, hasSolana, hasSui, hasBtc, hasAptos, hasTon, hasCosmos, hasTron = false\n\n      let suiChains = [\n        \"sui:mainnet\",\n      ];\n\n      let btcChains = [\n        \"btc:mainnet\",\n        \"fractal:mainnet\"\n      ];\n\n      const chains = Object.entries(this.availableChains)\n          .filter((chain) => chain[1].checked)\n          .map((chain) => chain[0]);\n      console.log(`chains  ===> ${chains.values()}`)\n      chains.forEach(function (chainId) {\n        console.log(`chains.forEach chainId  ===> ${chainId}`)\n\n        if (solanaChains.includes(chainId)) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"ton\")) {\n          nameSpacesChains.push(chainId)\n          hasTon = true\n          return\n        }\n        if (typeof chainId == 'string' && (chainId.startsWith(\"aptos\") || chainId.startsWith(\"movement\"))) {\n          nameSpacesChains.push(chainId)\n          hasAptos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId)\n          hasSolana = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"cosmos\")) {\n          nameSpacesChains.push(chainId)\n          hasCosmos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"tron\")) {\n          nameSpacesChains.push(chainId)\n          hasTron = true\n          return\n        }\n\n        if (suiChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`);\n          nameSpacesChains.push(chainId);\n          hasSui = true;\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`)\n          nameSpacesChains.push(chainId)\n          hasBtc = true\n          return\n        }\n\n        hasEip155 = true\n        nameSpacesChains.push(`eip155:${chainId}`)\n      })\n\n\n      optionChains.forEach(function (chainId) {\n        if (solanaChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n        if (typeof chainId == \"string\" && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (suiChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          optSpaceChains.push(chainId)\n          return\n        }\n\n        optSpaceChains.push(`eip155:${chainId}`)\n      })\n\n      console.log(`namespaceChains  ===> ${JSON.stringify(nameSpacesChains)}`);\n      var connectData = {};\n      if (nameSpacesChains && nameSpacesChains.length > 0) {\n        var requireData = {};\n\n        if (hasEip155) {\n          requireData.eip155 = {\n            chains: nameSpacesChains.filter((item) =>\n              item.startsWith(\"eip155\")\n            ),\n            defaultChain: nameSpacesChains.filter((item) =>\n              item.startsWith(\"eip155\")\n            )[0],\n          };\n        }\n        if (hasSolana) {\n          requireData.solana = {\n            chains: nameSpacesChains.filter(\n              (item) =>\n                item.startsWith(\"solana\") ||\n                item.startsWith(\"sonic\") ||\n                item.startsWith(\"svm\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n              (item) =>\n                item.startsWith(\"solana\") ||\n                item.startsWith(\"sonic\") ||\n                item.startsWith(\"svm\")\n            )[0],\n          };\n        }\n\n        if (hasCosmos) {\n          requireData.cosmos = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            )[0],\n          }\n        }\n        if (hasTron) {\n          requireData.tron = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            )[0],\n          }\n        }\n        if (hasTon) {\n\n          //\n          let tonParams = {\n            ton_addr:{\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue){\n            tonParams = {\n              ton_addr:{\n                name: 'ton_addr',\n              },\n              ton_proof:{\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          requireData.ton = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"ton\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"ton\"))[0],\n            params:tonParams\n          };\n        }\n\n        if (hasSui) {\n          requireData.sui = {\n            chains: nameSpacesChains.filter((item) => item.startsWith(\"sui\")),\n            defaultChain: nameSpacesChains.filter((item) =>\n              item.startsWith(\"sui\")\n            )[0],\n            rpcMap: {\n              \"sui:mainnet\": \"https://www.okx.com/fullnode/sui/discover/rpc\"\n            }\n          };\n        }\n        if (hasAptos) {\n          requireData.aptos = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\"))[0]\n          }\n        }\n\n        if (hasBtc) {\n          let btcChains = nameSpacesChains.filter(item => item.startsWith(\"btc\") || item.startsWith(\"fractal\"))\n          requireData.btc = {\n            chains: btcChains,\n            defaultChain: btcChains[0]\n          }\n        }\n        console.log(`requireData  ===> ${JSON.stringify(requireData)}`)\n        connectData['namespaces'] = requireData;\n        console.log(JSON.stringify(connectData))\n      }\n\n      if (optSpaceChains && optSpaceChains.length > 0) {\n        const optData = {};\n\n        const eip155Chains = optSpaceChains.filter((item) => item.startsWith(\"eip155\"));\n        if (eip155Chains.length > 0) {\n          optData[\"eip155\"] = {\n            chains: eip155Chains,\n            defaultChain: eip155Chains[0],\n          };\n        }\n\n        const solanaChains = optSpaceChains.filter((item) => item.startsWith(\"solana\"));\n        if (solanaChains.length > 0) {\n          optData[\"solana\"] = {\n            chains: solanaChains,\n            defaultChain: solanaChains[0],\n          };\n        }\n\n        connectData[\"optionalNamespaces\"] = optData;\n      }\n\n      if (nameSpacesChains.length === 0 && optSpaceChains.length === 0) {\n        //未选择链\n        alert(\"Please select a chain from above to continue\");\n        return;\n      }\n      console.log(\"=====>connectData \");\n      console.log(connectData);\n\n      var connectMethod;\n      let signMethods = this.getCurrentSelectedMethodData();\n      if (window.provider instanceof OKXUniversalConnectUI) {\n        if (signMethods && signMethods.length>0){\n          connectMethod = window.provider.openModalAndSign(connectData,JSON.parse(JSON.stringify(signMethods)));\n        }else {\n          connectMethod = window.provider.openModal(connectData);\n        }\n      } else {\n        if (this.universalToTG){\n          connectData.sessionConfig = {\n            useMini:true,\n            openUniversalUrl:true,\n            tmaReturnUrl:'back'\n          }\n        }else{\n          connectData.sessionConfig = {\n            redirect: selectedReturnStrategy\n          }\n        }\n        if (signMethods && signMethods.length>0){\n          connectMethod = window.provider.connectAndSign(connectData,JSON.parse(JSON.stringify(signMethods)));\n        }else {\n          connectMethod = window.provider.connect(connectData);\n        }\n      }\n\n      await connectMethod\n        .then((result) => {\n          // 2. set defaul chain\n          this.walletAddress = \"connected\";\n          if (this.isPC()) {\n            this.showModal = false;\n          }\n          if (result){\n            this.testboc = JSON.stringify(result)\n          }\n\n          if (window.provider.session && window.provider.session.namespaces){\n            let ton = window.provider.session.namespaces[\"ton\"];\n          console.log(\"是否包含ton\",ton)\n            if (ton){\n              this.tonUniversalLog()\n            }\n          }\n\n\n\n        })\n        .catch((error) => {\n          if (error.message){\n            alert(error.message)\n          }\n\n          console.error(\"发生了错误：\", error);\n        });\n    },\n\n    getCurrentSelectedMethodData(){// 连接签名\n      var methodList = [];\n      this.selectedMethod.forEach(method =>{\n        switch (method) {\n          case \"wallet_addEthereumChain(ETH)\":\n            methodList.push({\n              method: \"wallet_addEthereumChain\",\n              chainId:\"eip155:1\",\n              params: {\n                blockExplorerUrls: [\"https://explorer.fuse.io\"],\n                chainId: \"0x7a\",\n                chainName: \"Fuse\",\n                nativeCurrency: { name: \"Fuse\", symbol: \"FUSE\", decimals: 18 },\n                rpcUrls: [\"https://rpc.fuse.io\"],\n              },\n            })\n            break;\n          case \"personal_sign(ETH)\":\n            methodList.push(\n              {\n                method: \"personal_sign\",\n                chainId: \"eip155:1\",\n                params: [\n                  \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n                ],\n              });\n            break;\n          case \"solana_signMessage(Sol mainnet)\":\n            methodList.push(\n              {\n                \"chainId\": \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n                \"method\": \"solana_signMessage\",\n                \"params\": {\n                  \"message\": \"Hello Solana\",\n                }\n              }\n            );\n            break;\n          case \"sui_signMessage(Sui mainnet)\":\n          case \"sui_signPersonalMessage(Sui mainnet)\": {\n            let suiData = [\n              76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n              109, 111, 118, 101,\n            ];\n            let uint8Array = new Uint8Array(suiData);\n            let currentMethod = \"sui_signMessage\";\n            this.currentSuiTransaction = {\n              message:uint8Array\n            }\n\n            if(method.startsWith(\"sui_signPersonalMessage\")){\n              currentMethod = \"sui_signPersonalMessage\";\n            }\n            methodList.push(\n                {\n                  method: currentMethod,\n                  chainId: \"sui:mainnet\",\n                  params: {\n                    message: uint8Array,\n                  }\n                }\n            );\n            break;\n          }\n          case \"btc_signMessage(BTC)\":\n            methodList.push(\n              {\n                method: \"btc_signMessage\",\n                chainId: \"btc:mainnet\",\n                params: {\n                  message: \"Welcome to BTC\"\n                }\n              }\n            )\n            break;\n          case \"aptos_signMessage(aptos mainnet)\":\n            methodList.push(\n              {\n                \"chainId\": \"aptos:mainnet\",\n                \"method\": \"aptos_signMessage\",\n                \"params\": {\n                  address: true,\n                  application: true,\n                  chainId: true,\n                  message: \"Hello Aptos\",\n                  nonce: \"1234\"\n                }\n              }\n            )\n            break;\n          case \"cosmos_signArbitrary(cosmoshub)\":\n            methodList.push(\n                {\n                  \"chainId\": \"cosmos:cosmoshub-4\",\n                  \"method\": \"cosmos_signArbitrary\",\n                  \"params\": {\n                    message: \"test cosmos\"\n                  }\n                }\n            )\n\n            break;\n          case \"test_noSupport_eth(ETH)\":\n            methodList.push(\n                {\n                  chainId: \"eip155:1\",\n                  method: \"test_noSupport_eth\",\n                  params: {\n                    message: \"test hello\",\n                  }\n                }\n            )\n            break;\n          case \"sync_all_addresses\":\n            methodList.push(\n                {\n                  method: \"sync_all_addresses\",\n                });\n            break;\n          case \"tron_signMessage\":\n            methodList.push(\n                {\n                  chainId:\"tron:mainnet\",\n                  method: \"tron_signMessage\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n          case \"tron_signMessageV2\":\n            methodList.push(\n                {\n                  chainId:\"tron:mainnet\",\n                  method: \"tron_signMessageV2\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n            //\n          default:\n\n            break;\n        }\n      })\n      this.selectedMethodData = methodList\n      return methodList\n\n    },\n\n\n    closeModal() {\n      this.showModal = false;\n    },\n\n    isPC() {\n      const userAgentInfo = navigator.userAgent;\n      console.log(\"current device ua is ===>\", userAgentInfo);\n\n      const Agents = [\n        \"Android\",\n        \"iPhone\",\n        \"SymbianOS\",\n        \"Windows Phone\",\n        \"iPad\",\n        \"iPod\",\n      ];\n      let flag = true;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = false;\n          break;\n        }\n      }\n      return flag;\n    },\n    isSafariOrChrome() {\n      const userAgentInfo = navigator.userAgent;\n      const Agents = [\"Safari\", \"Chrome\"];\n      let flag = false;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = true;\n          break;\n        }\n      }\n      return flag;\n    },\n\n    /// solana\n    async sol_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      let data = {\n        method: \"solana_signMessage\",\n        params: {\n          message: \"Hello Solana\",\n          pubkey: \"\",\n        },\n      };\n      this.testTransaction = JSON.stringify(data);\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let message = await provider.signMessage(\n          \"Hello Solana\",\n          this.selectedChain\n      );\n      console.log(\"solana_signMessage Result:\",JSON.stringify(message))\n      const result1 = nacl.sign.detached.verify(\n          new TextEncoder().encode(\"Hello Solana\"),\n          message.signature,\n          new PublicKey(message.publicKey).toBytes()\n      );\n      console.log(result1)\n\n      if (typeof message == \"string\") {\n        this.testboc = result1;\n      } else {\n        this.testboc = result1;\n      }\n    },\n\n    async aptos_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      let data = {\n        address: true,\n        application: true,\n        chainId: true,\n        message: \"Hello Aptos\",\n        nonce: \"1234\"\n      }\n\n      let provider = new OKXAptosProvider(window.provider)\n      let message = await provider.signMessage(data, this.selectedChain)\n      this.testTransaction = JSON.stringify(data)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n          functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n          functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        },\n      });\n\n      // let data = {\n      //   \"arguments\": [\"100000\",[\"0\",\"0\",\"10533\"],[\"10\",\"5\",\"5\"],[\"false\",\"false\",\"true\"]],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x3\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\",\"0x73eb84966be67e4697fc5ae75173ca6c35089e802650f75422ab49a8729704ec::coin::DooDoo\",\"0x53a30a6e5936c0a4c5140daed34de39d17ca7fcae08f947c02e979cef98a3719::coin::LSD\",\"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::CurveV1\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x54cb0bb2c18564b86e34539b9f89cfe1186e39d89fce54e1cd007b8e61673a85::bin_steps::X80\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async sol_signVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(\n        provider.getAccount(\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\").address\n      );\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n         recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signTransaction(\n        transaction,\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAndSendVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n        transaction,\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllVersionedTransactions() {\n      let provider = new OKXSolanaProvider(window.provider);\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n        [transaction],\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signTransaction() {\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n         recentBlockhash: blockhash,\n      }).add(\n        SystemProgram.transfer({\n          fromPubkey: new PublicKey(provider.getAccount().address),\n          toPubkey: new PublicKey(provider.getAccount().address),\n          lamports: 1000,\n        })\n      );\n\n      this.testTransaction = safeJsonStringify(transaction)\n      let result = await provider.signTransaction(\n        transaction,\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllTransactions() {\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n        SystemProgram.transfer({\n          fromPubkey: new PublicKey(provider.getAccount().address),\n          toPubkey: new PublicKey(provider.getAccount().address),\n          lamports: \"100\",\n        })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n        [transaction],\n        this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    getSolConnect() {\n      let rpc = \"https://www.okx.com/fullnode/sol/discover/rpc\"\n      if (this.selectedChain === \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\") {\n        rpc = \"https://www.okx.com//fullnode/sol/discover/rpc\"\n      } else if (this.selectedChain === \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\"){\n        rpc = \"https://www.okx.com/fullnode/soltestnet/discover/rpc\"\n      } else if (this.selectedChain === \"svm:70000062\") {\n        rpc = \"https://www.okx.com/fullnode/sonic/testnet/discover/rpc\"\n      }\n      return rpc\n    },\n\n    async sol_signAndSendTransaction() {\n\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n        SystemProgram.transfer({\n          fromPubkey: new PublicKey(provider.getAccount().address),\n          toPubkey: new PublicKey(provider.getAccount().address),\n          lamports: \"100\",\n        })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n        transaction,\n        this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async cosmos_signArbitrary() {\n      let provider = new OKXCosmosProvider(window.provider)\n      let message = await provider.signArbitrary(this.selectedChain, provider.getAccount(this.selectedChain).address, \"test cosmos\")\n      if (typeof message == \"string\") {\n        this.testboc = message;\n      } else {\n        let isValid =  await this.cosmos_verifySignArbitrary(provider.getAccount(this.selectedChain).address,\"test cosmos\",message.signature, message.pub_key.value)\n        console.log(\"verify\",isValid)\n        this.testboc = \"verify:\" + isValid + JSON.stringify(message);\n      }\n    },\n\n    async cosmos_verifySignArbitrary(signer, data, signature, pubkey) {\n      try {\n        console.log(\"cosmos_verifySignArbitrary signer:\",signer)\n        console.log(\"cosmos_verifySignArbitrary data:\",JSON.stringify(data))\n        console.log(\"cosmos_verifySignArbitrary signature:\",signature)\n        console.log(\"cosmos_verifySignArbitrary pubkey:\",pubkey)\n\n        // 将bech32地址转换为公钥\n        const {prefix: prefixStr} = fromBech32(signer)\n\n        const signatureBuffer = Buffer.from(signature, 'base64');\n\n        const uint8Signature = new Uint8Array(signatureBuffer); // Convert the buffer to an Uint8Array\n\n        const pubKeyValueBuffer = Buffer.from(pubkey, 'base64'); // Decode the base64 encoded value\n\n        const pubKeyUint8Array = new Uint8Array(pubKeyValueBuffer); // Convert the buffer to an Uint8Array\n\n        // 验证签名\n        return await verifyADR36Amino(\n            prefixStr,\n            signer,\n            data,\n            pubKeyUint8Array,\n            uint8Signature\n        )\n      } catch (err) {\n        console.error('Verification failed:', err)\n        return false\n      }\n    },\n\n    async cosmos_signAmino(){\n      let provider = new OKXCosmosProvider(window.provider)\n      // const rpcUrl = 'https://osmosis-rpc.publicnode.com:443';\n      // const client = await StargateClient.connect(rpcUrl);\n      // const height = await client.getHeight();\n      // let address = provider.getAccount(this.selectedChain).address\n      // const sequence = await client.getSequence(address)\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      // let signDoc = makeSignDoc(\n      //     transaction.msgs,\n      //     transaction.fee,\n      //     this.selectedChain.split(\":\")[1],\n      //     transaction.memo,\n      //     transaction.accountNumber,\n      //     transaction.sequence,\n      // )\n      let signDoc = {\n        \"chain_id\": \"osmosis-1\",\n        \"account_number\": \"630104\",\n        \"sequence\": \"480\",\n        \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]},\n        \"msgs\": [{\n          \"type\": \"osmosis/poolmanager/swap-exact-amount-in\",\n          \"value\": {\n            \"sender\": \"osmo1u6lts9ng4etxj0zdaxsada6zgl8dudpgelmuyu\",\n            \"routes\": [{\n              \"pool_id\": \"1096\",\n              \"token_out_denom\": \"ibc/987C17B11ABC2B20019178ACE62929FE9840202CE79498E29FE8E5CB02B7C0A4\"\n            }, {\n              \"pool_id\": \"611\",\n              \"token_out_denom\": \"ibc/27394FB092D2ECCD56123C74F36E4C1F926001CEADA9CA97EA622B25F41E5EB2\"\n            }],\n            \"token_in\": {\"denom\": \"uosmo\", \"amount\": \"100\"},\n            \"token_out_min_amount\": \"8\"\n          }\n        }],\n        \"memo\": \"FE\",\n        \"timeout_height\": \"23603788\",\n        \"signOptions\": {\n          \"useOneClickTrading\": false,\n          \"preferNoSetFee\": true,\n          \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]}\n        }\n      }\n\n\n\n\n\n\n\n      // let signOption = {\n      //   memo: true, // optional\n      //   fee: true, // optional\n      //   gasRate: {\n      //     // optional\n      //     average: \"0.2\",\n      //     low: \"0.02\",\n      //     tiny: \"0.002\",\n      //   },\n      // }\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signAmino(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, signDoc)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    messageToBuffer(message) {\n      var buffer = Buffer.from([]);\n      try {\n        if (typeof message === \"string\") {\n          buffer = Buffer.from(message.replace(\"0x\", \"\"), \"hex\");\n        } else {\n          buffer = Buffer.from(message);\n        }\n      } catch (err) {\n        console.log(`messageToBuffer error: ${err}`);\n      }\n      return buffer;\n    },\n\n\n\n    async cosmos_signDirect() {\n      let provider = new OKXCosmosProvider(window.provider)\n\n      let signDoc = {\n        \"bodyBytes\": this.messageToBuffer(\"0x0ac1010a292f6962632e6170706c69636174696f6e732e7472616e736665722e76312e4d73675472616e736665721293010a087472616e7366657212096368616e6e656c2d301a0d0a05756f736d6f120431303030222b6f736d6f3175366c7473396e67346574786a307a64617873616461367a676c386475647067656c6d7579752a2d636f736d6f733175366c7473396e67346574786a307a64617873616461367a676c386475647067337967766a773207080410ebe3f90a3880b0bcafd18cec8218\"),\n        \"authInfoBytes\": this.messageToBuffer(\"0x0a510a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a2102446e19e94ac0e83ea896d2712507577eb39fbdd2d6ae9f0fc0b9759f1fbaba9012040a02080118e00312140a0e0a05756f736d6f1205323530303010859a11\"),\n        \"chainId\": \"osmosis-1\",\n        \"accountNumber\": \"630104\",\n      }\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signDirect(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, transaction)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    sui_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentSuiTransaction = params\n      this.currentSuiMethod = flag\n    },\n\n    btc_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentBtcTransaction = params\n      this.currentBtcMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n\n    fractal_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentFractalTransaction = params\n      this.currentFractalMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n    tron_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n    tron_generateTransactionParams(params){\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n    handleModalsSelect(modals) {\n      selectedModals = modals;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: modals.length === 3 ? \"all\" : modals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n\n    handleReturnStrategySelect(returnStrategy) {\n      selectedReturnStrategy = returnStrategy === \"deeplink\" ? this.deeplink : returnStrategy;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = selectedReturnStrategy;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: selectedReturnStrategy\n          };\n        }\n      }\n    },\n\n    handleReturnStrategyDeeplink(deeplink) {\n      console.log('handleReturnStrategyDeeplink', deeplink)\n      selectedReturnStrategy = deeplink;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: deeplink,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = deeplink;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: deeplink\n          };\n        }\n      }\n    },\n\n    handleLanguageSelect(language) {\n      selectedLanguage = language;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: language,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n    handleConnectMethodsSelect() {\n      console.log(\"当前的方法 this.selectedMethod>>>>\",this.selectedMethod);\n    },\n\n    eth_verifyMessage(message, signature,ethAddress) {\n      console.log(\"eth_verifyMessage   message>>>\",message)\n      console.log(\"eth_verifyMessage   signature>>>\",signature)\n      console.log(\"eth_verifyMessage   ethAddress>>>\",ethAddress)\n      if (!message || !signature){\n        return \"\"\n      }\n      let originalMessage = message\n      if (message.startsWith(\"0x\")){\n        originalMessage = originalMessage.replace(/^0x/, '');\n        let str = '';\n        for (let i = 0; i < originalMessage.length; i += 2) {\n          const byte = originalMessage.slice(i, i + 2);\n          str += String.fromCharCode(parseInt(byte, 16));\n        }\n        originalMessage = str\n      }\n      console.log(\"eth_verifyMessage   originalMessage>>>\",originalMessage)\n\n      // const messageHash = ethers.utils.hashMessage(originalMessage);\n      const recoveredAddress = ethers.utils.verifyMessage(originalMessage, signature);\n      console.log(\"eth_verifyMessage recoveredAddress:\", recoveredAddress);\n      return recoveredAddress.toLowerCase() === ethAddress.toLowerCase();\n    },\n\n    async verifyMessage(list){ //连接验签\n\n        if (window.provider && window.provider.session && list && list.length>0){\n          let verifyList = {}\n          for (let methodItem of list){\n            if (\"result\" in methodItem && \"method\" in methodItem){\n              let requestItme = this.selectedMethodData.filter(item => item.method === methodItem.method)[0];\n              console.log(\"验证签名 请求>>>:\", JSON.stringify(requestItme));\n              console.log(\"验证签名 结果>>>:\", JSON.stringify(methodItem));\n              if (methodItem.method === \"personal_sign\"){\n                let ethAddress = await window.provider.request({ method: \"eth_requestAccounts\" },methodItem.chainId)\n                ethAddress = ethAddress[0];\n                console.log(\"验证eth 钱包地址>>>:\", ethAddress);\n                let ethMessage = requestItme.params[0]\n                console.log(\"验证eth 签名消息体>>:\", JSON.stringify(ethMessage));\n                verifyList[methodItem.method] = this.eth_verifyMessage(ethMessage,methodItem.result,ethAddress)\n              }else if(methodItem.method === \"solana_signMessage\"){\n                let solanaMessage = methodItem.result\n                if (\"signature\" in solanaMessage && \"publicKey\" in solanaMessage){\n                  const verifySol = nacl.sign.detached.verify(\n                      new TextEncoder().encode(\"Hello Solana\"),\n                      solanaMessage.signature,\n                      new PublicKey(solanaMessage.publicKey).toBytes()\n                  );\n                  verifyList[methodItem.method] = verifySol\n                }else {\n                  verifyList[methodItem.method] = false\n                }\n              }else if(methodItem.method === \"sui_signPersonalMessage\" || methodItem.method === \"sui_signMessage\"){\n                let suiResult =  this.sui_verifySignature(methodItem.result);\n                  verifyList[methodItem.method] = (await suiResult).result\n              }else if(methodItem.method === \"btc_signMessage\"){\n\n                verifyList[methodItem.method] = \"Not verified yet\"\n\n              }else if(methodItem.method === \"aptos_signMessage\"){\n                let aptosMessage = methodItem.result\n                let aptosProvider = new OKXAptosProvider(window.provider)\n                let  aptosPublicKey  = aptosProvider.getAccount(methodItem.chainId)?.publicKey\n\n                let signStr = aptosMessage.signature\n                if (signStr.startsWith(\"0x\")) {\n                  signStr = signStr.slice(2, signStr.length)\n                }\n\n                console.log(\"aptos_signMessage aptosPublicKey And signStr\",aptosPublicKey,signStr)\n                verifyList[methodItem.method] = nacl.sign.detached.verify(\n                    Buffer.from(aptosMessage.fullMessage),\n                    Buffer.from(signStr, 'hex'),\n                    Buffer.from(aptosPublicKey, 'hex'),\n                );\n              }else if(methodItem.method === \"cosmos_signArbitrary\"){\n                let cosmosProvider = new OKXCosmosProvider(window.provider)\n                let cosmosAddress = cosmosProvider.getAccount(methodItem.chainId)?.address\n                let cosmosMessage = methodItem.result\n                let isValid =  await this.cosmos_verifySignArbitrary(cosmosAddress,\"test cosmos\",cosmosMessage.signature, cosmosMessage.pub_key.value)\n                verifyList[methodItem.method] = isValid\n\n              }else if (methodItem.method === \"tron_signMessage\") {\n                let tronMessage = methodItem.result\n                let tronWeb = new TronWeb({\n                  \"fullHost\": 'https://api.trongrid.io',\n                  \"headers\": {},\n                  \"privateKey\": ''\n                })\n                let provider = new OKXTronProvider(window.provider)\n                verifyList[methodItem.method] = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), tronMessage, provider.getAccount(\"tron:mainnet\").address)\n              } else if (methodItem.method === \"tron_signMessageV2\") {\n                let tronMessage = methodItem.result\n                let tronWeb = new TronWeb({\n                  \"fullHost\": 'https://api.trongrid.io',\n                  \"headers\": {},\n                  \"privateKey\": ''\n                })\n                const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", tronMessage);\n                let provider = new OKXTronProvider(window.provider)\n\n                verifyList[methodItem.method] = base58Address === provider.getAccount(\"tron:mainnet\").address\n              }\n              else {\n                verifyList[methodItem.method] = \"Not verified yet\"\n\n              }\n            }else if(\"method\" in methodItem && \"error\" in methodItem) {\n              verifyList[methodItem.method] = methodItem.error\n            }\n\n          }\n\n          console.log(\"验证签名 最后的结果>>>:\", JSON.stringify(verifyList));\n          this.testTransaction = \"签名验证结果如下: \\n\" + JSON.stringify(verifyList)\n        }else {\n          console.log(\"验证签名 window.provider.session.connectMethodsReply 为空:\");\n\n        }\n\n    },\n\n    handleThemeSelect(theme) {\n      selectedTheme = theme;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: theme,\n          },\n        };\n      }\n    },\n\n    async sui_verifySignature(signatureResult) {\n      let resultObj = signatureResult\n      let result = false\n      let msg = ''\n      try {\n        /// 获取当前account\n        const adapter = new SuiAdapter(window.provider);\n        let account = adapter.getAccount()\n        console.log(`Account中获取的address：${account.address}`)\n\n        /// 验证签名\n        let pubKey = await verifyPersonalMessageSignature(this.currentSuiTransaction.message, resultObj.signature)\n        let address = pubKey.toSuiAddress()\n        console.log(`验签结果计算得到address：${address}`)\n\n        /// 对比pubKey\n        console.log(`account pubkey: ${account.publicKey}`,)\n        console.log(`result pubkey: ${pubKey.toBase64()}`)\n        result = (account.address === address) && (account.publicKey === pubKey.toBase64())\n\n        msg = `address verify: ${account.address === address}\\npublicKey verify: ${account.publicKey === pubKey.toBase64()}`\n        console.log(\"signature verify success: \", pubKey)\n      } catch (e) {\n        console.log(\"signature verify failed: \", e)\n      }\n      return {\n        result,\n        msg\n      }\n    },\n\n\n    handleRedirectSelect(input) {\n      this.redirect = input;\n    },\n\n    handleRedirectDeeplink(input) {\n      this.redirectDeeplink = input;\n    },\n\n    addRedirectParam() {\n      if (this.testTransaction) {\n        const newTransaction = JSON.parse(this.testTransaction);\n        newTransaction.redirect = this.redirect === 'deeplink' ? this.redirectDeeplink : this.redirect;\n        this.testTransaction = JSON.stringify(newTransaction);\n      }\n    },\n\n    canChainAddRedirectParam() {\n      return chainsThatCanAddRedirectParam.some((c) => this.selectedChain.startsWith(c));\n    }\n  },\n  created() {\n    // for (const eventName of Object.values(OKX_TON_CONNECTION_AND_TRANSACTION_EVENT)) {\n    //   console.log(eventName);\n    //   window.addEventListener(eventName, (event) => {\n    //     console.log(eventName,event.detail)\n    //     this.currentStatus = eventName\n    //   });\n    // }\n  },\n\n  mounted() {\n\n    var scriptTag = document.createElement(\"script\");\n    scriptTag.src = \"https://telegram.org/js/telegram-web-app.js\";\n    scriptTag.id = \"tgsdk\";\n    document.getElementsByTagName('head')[0].appendChild(scriptTag);\n\n    this.connectReady = true;\n    document.title = \"OKX Connect\";\n    this.initBtnClicked()\n  },\n};\n</script>\n","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_getAccount()\">getAccount(BTC)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signMessage()\">signMessage(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_send()\">send(BTC)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendBitcoin()\">sendBitcoin(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signPsbt_up()\">signPsbt(上架NFT)</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"btc_signAndPushPsbt_up()\">signAndPushPsbt(上架NFT)</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在OKX App选择要上架的Btc NFT，点击【上架】\n        </li>\n        <li>\n          2. 弹出签名面板，点开高级选项，查看\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出上架流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendInscription()\">sendInscription(BTC)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Btc NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount\n    }\n  },\n  methods: {\n\n    btc_getAccount() {\n      this.$emit('generateTransactionParams', {}, \"btc_getAccount\")\n    },\n\n    btc_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to BTC\"\n      };\n      this.$emit('generateTransactionParams', params, \"btc_signMessage\")\n    },\n\n    btc_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"btc_send\")\n    },\n\n    btc_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"btc_sendBitcoin\")\n    },\n\n    btc_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"btc_signPsbt\")\n    },\n\n    btc_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"btc_signAndPushPsbt\")\n    },\n\n    btc_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"btc_sendInscription\")\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./BtcTransactionPanel.vue?vue&type=template&id=376d03bc&scoped=true\"\nimport script from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./BtcTransactionPanel.vue?vue&type=style&index=0&id=376d03bc&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-376d03bc\"]])\n\nexport default __exports__","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_getAccount()\">getAccount(Fractal)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signMessage()\">signMessage(Fractal)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_send()\">send(Fractal)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_sendBitcoin()\">sendBitcoin(Fractal)</el-button>\n\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signPsbt_up()\">signPsbt(上架NFT)</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_signAndPushPsbt_up()\">signAndPushPsbt(上架NFT)</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在OKX App选择要上架的Fractal NFT，点击【上架】\n        </li>\n        <li>\n          2. 弹出签名面板，点开高级选项，查看\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出上架流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_sendInscription()\">sendInscription(Fractal)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Fractal NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount\n    }\n  },\n  methods: {\n\n    fractal_getAccount() {\n      this.$emit('generateTransactionParams', {}, \"fractal_getAccount\")\n    },\n\n    fractal_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to UniSat!\\n\\nClick to sign in and accept the UniSat Terms of Service (https://unisat.io/terms-of-service.html) and Privacy Policy (https://unisat.io/privacy-policy.html).\\n    \\nThis request will not trigger a blockchain transaction.\\n    \\nYour authentication status will reset after 24 hours.\\n    \\nWallet address:\\nbc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\\n    \\nNonce:\\n162d70e3-8c21-4cfd-9a22-9bf0a4b7be51\\n\"\n      };\n      this.$emit('generateTransactionParams', params, \"fractal_signMessage\")\n    },\n\n    fractal_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_send\")\n    },\n\n    fractal_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_sendBitcoin\")\n    },\n\n    fractal_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"fractal_signPsbt\")\n    },\n\n    fractal_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"fractal_signAndPushPsbt\")\n    },\n\n    fractal_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"fractal_sendInscription\")\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./FractalTransactionPanel.vue?vue&type=template&id=fb2f7e38&scoped=true\"\nimport script from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./FractalTransactionPanel.vue?vue&type=style&index=0&id=fb2f7e38&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-fb2f7e38\"]])\n\nexport default __exports__","<script>\n\nimport {getFullnodeUrl, SuiClient} from \"@mysten/sui/client\";\nimport {Transaction as SuiTransaction} from '@mysten/sui/transactions';\n\nexport default {\n  name: \"SuiTransactionPanel\",\n  methods: {\n    sui_getAccount() {\n      this.$emit('generateTransactionParams', '', \"sui_getAccount\")\n    },\n\n    //对单个交易签名（不发送)\n    async sui_signMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signMessage\")\n    },\n\n    async sui_signPersonalMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signPersonalMessage\")\n    },\n\n    sui_signTransaction2() {\n      // 定义要转移的金额和目标地址\n      const amount = 109; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    async sui_requestRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n          `sui:mainnet`,\n          `https://fullnode.mainnet.sui.io:443`\n      );\n      var data = {\n        method: \"suix_getBalance\",\n        params: [\n          \"0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae\",\n          \"0x168da5bf1f48dafc111b0a488fa454aca95e0b5e::usdc::USDC\",\n        ],\n      };\n\n      this.$emit(\"generateTransactionParams\", data, \"sui_testRpc\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 102; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signAndExecuteTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n      this.$emit(\"generateTransactionParams\", input, \"sui_signAndExecuteTransaction\")\n    },\n\n    /// generate txBytes and txSerialize\n    async generateTsBytesAndSerizlize(input) {\n      /// txBytes and txSerialize may be constructed in advance by the dapp side\n      let resultTuple = [\"\", \"\"];\n      if (\n          \"txBytes\" in input &&\n          input.txBytes.length > 0 &&\n          \"txSerialize\" in input &&\n          input.txSerialize.length > 0\n      ) {\n        resultTuple = [input.txBytes, input.txSerialize];\n      }\n\n      /// Otherwise, a transactionBlock parameter is required.\n      if (!(\"transactionBlock\" in input)) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      // if (this.walletAddress != \"connected\") {\n      //   alert(\"请先连接钱包\");\n      //   return new Promise((resolve) => {\n      //     resolve(resultTuple);\n      //   });\n      // }\n\n      let senderAccounts = window.provider.requestAccountsWithNamespace(\"sui\");\n      if (senderAccounts.length == 0) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      try {\n        let rpcUrl = getFullnodeUrl(\"mainnet\");\n        rpcUrl = \"https://www.okx.com/fullnode/sui/discover/rpc\"\n        const suiClient = new SuiClient({ url: rpcUrl });\n\n        /// sender is required\n        input.transactionBlock.setSender(senderAccounts[0]);\n        const result = await input.transactionBlock.build({\n          client: suiClient,\n        });\n        const txBytes = Buffer(result).toString(\"base64\");\n        const txSerialize = await SuiTransaction.from(txBytes).toJSON();\n        resultTuple = [txBytes, txSerialize];\n      } catch (error) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      return new Promise((resolve) => {\n        resolve(resultTuple)\n      })\n    },\n\n    //签名并发送交易\n    sui_signAndExecuteTransaction() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n        \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.testTransaction = JSON.stringify(input);\n      this.currentSuiTransaction = input;\n      this.currentSuiMethod = \"sui_signAndExecuteTransaction\";\n    },\n  },\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_getAccount()\">getAccount(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signMessage()\">signMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signPersonalMessage()\">signPersonalMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signTransaction2()\">signTransaction(Sui)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signAndExecuteTransaction()\">sendTransaction(Sui)</el-button>\n      <div style=\"font-size: 12px; color: gray;\">(send to Rally Tiger account)</div>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_requestRpc()\">RPC_getBalance</el-button>\n      <div style=\"font-size: 12px; color: gray;\">get USDC balance of address:</div>\n      <div style=\"font-size: 12px; color: gray\">0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae</div>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signTransaction_pre_execution()\">signTransaction(prepared data)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signAndExecuteTransaction_pre_execution()\">sendTransaction(prepared data)</el-button>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./SuiTransactionPanel.vue?vue&type=template&id=56a8eddf&scoped=true\"\nimport script from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./SuiTransactionPanel.vue?vue&type=style&index=0&id=56a8eddf&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-56a8eddf\"]])\n\nexport default __exports__","<script>\n\n\nimport {OKXTronProvider} from \"@okxconnect/universal-provider\";\nimport {TronWeb} from \"tronweb\";\n\nexport default {\n  name: \"TronTransactionPanel\",\n  methods: {\n\n    async tron_signMessage() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessage(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n\n      const verify = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), res, provider.getAccount(\"tron:mainnet\").address)\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" + res, \"tron_signMessage\")\n    },\n\n    async tron_signMessageV2() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessageV2(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", res);\n      console.log(\"tron_signMessageV2_base58Address\", base58Address)\n      console.log(\"tron_signMessageV2_address\", provider.getAccount(\"tron:mainnet\").address)\n      const verify = base58Address === provider.getAccount(\"tron:mainnet\").address\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" +  res, \"tron_signMessage\")\n    },\n\n    async tron_signTransaction(isOnlySign) {\n      let provider = new OKXTronProvider(window.provider)\n        let tronWeb = new TronWeb({\n          \"fullHost\": 'https://api.trongrid.io',\n          \"headers\": {},\n          \"privateKey\": ''\n        })\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const transaction = await tronWeb.transactionBuilder.sendTrx(\"TGBcVLMnVtvJzjPWZpPiYBgwwb7th1w3BF\", 1000, address);\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let res = await provider.signTransaction( transaction, \"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", res, \"tron_signTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async getContract() {\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33\"\n      \n      try {\n        const contract = await tronWeb.trx.getContract(contractAddress)\n        const abi = contract.abi.entrys;\n        console.log(\"获取到的合约：\")\n        console.log(abi)\n      } catch (error) {\n        console.log(\"Error getting contract ABI:\", error);\n      }\n    },\n    \n    async tron_signAndSendTransactionContract(isOnlySign) {\n      // this.getContract()\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n      ]\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"quote(uint256,uint256,uint256)\", {}, parameter, address);\n      console.log(\"=====>transaction: \")\n      console.log(ret);\n      this.$emit(\"generateTransactionParams\", ret.transaction)\n      if (isOnlySign) {\n        let tx = await provider.signTransaction( ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async tron_signAndSendTransactionApprove(isOnlySign) {\n      let provider = new OKXTronProvider(window.provider)\n\n      let transaction = {\n        \"visible\": false,\n        \"txID\": \"d1ed31b6abd2c37e248254681d3ee61b2e628fbd776def753b5592712ebd98c5\",\n        \"raw_data\": {\n          \"contract\": [{\n            \"parameter\": {\n              \"value\": {\n                \"data\": \"095ea7b3000000000000000000000000e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n                \"owner_address\": \"4157c140be01fa2bbabf7f055ab879d0c05725293c\",\n                \"contract_address\": \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n              },\n              \"type_url\": \"type.googleapis.com/protocol.TriggerSmartContract\"\n            },\n            \"type\": \"TriggerSmartContract\"\n          }],\n          \"ref_block_bytes\": \"1bde\",\n          \"ref_block_hash\": \"af71fa1aa01b5bd1\",\n          \"expiration\": Date.now() + 60000,\n          \"fee_limit\": 250000000,\n          \"timestamp\": Date.now()\n        },\n        \"raw_data_hex\": \"0a021bde2208af71fa1aa01b5bd140f8b1fa98b4325aae01081f12a9010a31747970652e676f6f676c65617069732e636f6d2f70726f746f636f6c2e54726967676572536d617274436f6e747261637412740a154157c140be01fa2bbabf7f055ab879d0c05725293c121541b4a428ab7092c2f1395f376ce297033b3bb446c12244095ea7b3000000000000000000000000e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff70f1e6f698b432900180e59a77\"\n      }\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let tx = await provider.signTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n\n    }\n\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessage()\">tron_signMessage</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessageV2()\">tron_signMessageV2</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(true)\">\n        tron_signTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(true)\">\n        tron_signTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(true)\">\n        tron_signTransaction(Approve)\n      </el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(false)\">\n        tron_signAndSendTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(false)\">\n        tron_signAndSendTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(false)\">\n        tron_signAndSendTransaction(approve)\n      </el-button>\n    </el-col>\n\n\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./TronTransactionPanel.vue?vue&type=template&id=eaaccc08&scoped=true\"\nimport script from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./TronTransactionPanel.vue?vue&type=style&index=0&id=eaaccc08&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-eaaccc08\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=533df950&scoped=true\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=533df950&scoped=true&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-533df950\"]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\nimport App from './App.vue'\n\nconst app = createApp(App)\n\napp.use(ElementPlus)\napp.mount('#app')","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkokxconnectdemo\"] = self[\"webpackChunkokxconnectdemo\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(64226); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["Object","defineProperty","exports","value","CONNECT_METHOD_BATCH_FETCHMSG","CONNECT_METHOD_FETCHMSG","CONNECT_METHOD_RECEIVE","CONNECT_METHOD_UNSUB","CONNECT_METHOD_SUB","CONNECT_METHOD_PUBLISH","CONNECT_METHOD_LOGIN","CONNECT_METHOD_PUSH","require","__createBinding","this","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","__setModuleDefault","v","__importStar","mod","result","prototype","hasOwnProperty","call","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","e","rejected","done","then","apply","OKXWalletConnector","constants_1","storageconstants_1","storage_1","utils_1","utils_2","eventemitter3_1","log","protocol_1","WS","resolveWebSocketImplementation","constructor","url","events","EventEmitter","state","ConnectorState","InitState","selectedUrlIndex","retryCount","timeOutLimit","checkWSUrl","Error","heartbeatTimer","connectionTimeoutTimer","connectURLStorage","Storage","OKXCONNECTOR_CACHE_KEY","connecting","Connecting","onPayload","data","logDebug","rsp","Date","now","toString","emit","onClose","event","_a","socket","code","onError","id","payload","msg","onopen","onmessage","onclose","Connected","emitError","errorEvent","heartbeat","clearTimeout","OnError","readyState","WebSocket","OPEN","send","setTimeout","bind","tryRegistOpen","logError","registOpen","inRetry","toUTCString","URLSearchParams","startTimeOutTimer","hasBuiltInWebSocket","onerror","close","on","resetTimeOutTimer","OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE","FINISHED","checkMaxRetry","OKXCONNECTOR_WS_URL_LIST","length","connectionTryNext","nextUrl","getNextSelectUrl","CANCELED","pendingSocket","TIME_OUT","cacheSuccessUrlSelect","saveContent","onVisibleChanged","document","visibilityState","arguments","once","err","OKXConnectError","OKX_CONNECT_ERROR_CODES","CONNECTION_ERROR","connect","removeEventListener","addEventListener","disconnect","Disconnected","currentStatus","addListener","decrypt","success","failed","splitCheckComplete","listenPayloadHandler","removeListener","parsedEvent","safeJsonParse","params","rawMsg","message","skipMsg","checkResult","isSplitPackage","finalMessage","failHandler","addPackageParse","callback","payloadHandler","param","listener","off","doLogin","safeJsonStringify","getMsgPayloadFromHistory","tmpMsg","jsonstr","onOpen","openHandler","ConnectionManager","connect_1","commands_1","jwtconstants_1","crypto_1","jwt_1","safejson_1","log_1","report_1","url_1","connectionSplitPackages_1","appname","splitManager","ConnectionSplitPackages","connectStorage","OKXCONNECTOR_CACHE_KEY_DAPP","crypto","SessionCrypto","inTMA","isInTMA","reportLog","keyPairInfo","getCachedCryptoKeyPair","jwtKeyPair","getCachedJWTKeyPair","saveJWTKeyPair","connector","OKXCONNECTOR_WS_URL_1","packageId","connectedWalletPK","currentTopic","refreshPackageId","nowDate","saveCryptoKeyPair","keyPair","cacheInfo","encryptStoreMsg","OKXCONNECTOR_CRYPTO_KEY","kp","getAndDecrypt","content","clearCache","strkeyPair","publicKey","toHexString","secretKey","OKXCONNECTOR_JWT_KEY","strKeyPairInfo","hexToByteArray","generateKeyPair","isWalletPKReady","makeJWT","topic","signJWT","OKXCONNECTOR_JWT_SIDE","OKXCONNECTOR_JWT_TTL","parsePackage","input_1","input","ignoreACK","_b","_c","_d","_e","_f","_g","_h","_j","_k","_l","_m","_o","sendACK","getItem","OKXCONNECTOR_TOKEN_CACHE","inputObj","messageId","msgPlayloadObject","tryParseMessageSplitPayload","msgObject","topicId","messageObject","publishedAt","onReceivedPackageCheck","completeMessageIdList","forEach","msgId","sendReceive","restoreConnect","getConnectInfo","generateTopic","info","channelId","clientId","stringifyKeypair","fromRestore","timeLog","getTime","lastConnectId","cachedSenderPublicKey","OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE","jwtToken","timeOne","error","name","timeF","sendFetchAndConsumeMessages","init","sendRaw","timeTh","catch","jsonrpc","CONNECT_JSONRPC_VER","method","token","replace","parsedMessage","updateProtocolVersion","protocolVersion","updateTopicSenderVersion","fail","msgObj","trimStart","startsWith","inputDataObj","msgResult","ttl","OKXCONNECTOR_MESSAGE_TTL","sendEncryptedMsg","topic_1","encryptedMsg_1","encryptedMsg","msg_1","encrypt","reportEvent","OKXReportType","LOG","sendSplitPackages","msgId_1","success_1","reason","fetchedMessages","hasMore","receivedMsgs","i","timeFive","cleanCache","saveSessionContent","key","OKXCONNECTOR_SESSION_PREFIX_KEY","jsonData","getSessionContent","jsonStr","object","getCurrentConnectionReady","__importDefault","localforage_1","ConnectionSplitSupportedVersionLimit","ConnectionSplitSupportedSizeLimit","ConnectionReceiveKey","ConnectionSendKey","ConnectionTopicVersionKey","side","splitMessageSendArray","Map","splitMessageReceivedArray","splitMessageSenderVersionMap","splitPackageCache","default","createInstance","OKXCONNECTOR_STORAGE_PROTOCOL_CACHE","sendRawMsg","recoverFromCache","size","payloadList","entries","splice","syncCache","messageObj","protocol_version","protocolMessageObject","package_group_id","set","sendMsg","senderVersion","msgLength","msg_parts","msg_part_length","push","slice","groupId","generateGroupId","splitMessagePackages","map","index","total_count","package_index","mergePackageArray","completeMap","inputTopic","itemList","item","messageCache","Array","index_check","Set","add","sort","a","b","messageList","reduce","msgList","messageIdList","msgIdList","join","receivedList","filter","includes","isSending","inputPayloadArray","inputSendArray","filtedArray","accept","sendCacheArray","cachedPayload","sendArray","concat","inputReceiveArray","receiveCacheArray","receiveArray","setItem","rec_array","send_array","CONNECT_PROTOCOL_VER","OKXCONNECTOR_WS_URL_IDX_KEY","OKXCONNECTOR_WS_URL_3","OKXCONNECTOR_WS_URL_2","EVENT_EMITTER_MAX_LISTENERS","OKXCONNECTOR_PROTOCOL_VERSION","Engine","sessionUtils_1","connectionManager","pendingRequests","disconnectListener","getDefaultReporter","beginReport","jsonResponse","handleResponse","addDisconnectListener","disconnecter","setSessionConnectingListener","sessionConnectingListener","clear","getRequestId","requestId","bindRequestForPromise","request","requestAnswer","option","JSON","stringify","assign","onAck","sendSession","sessionInfo","response","delete","restoreconnect","onConnectResult","conect","sessionConfig","connectInfo","openUniversalLink","openUniversalUrl","connectRequest","protocolVer","Number","tonConnectSdkVersion","dAppInfo","dappInfo","requests","connectRequestStr","utf8Array","TextEncoder","encode","base64Encoded","btoa","String","fromCharCode","deeplinkUrl","standardDeeplink","isIOS","isIos","openOKXDeeplinkWithFallback","session","onConnect","getUniversalLink","connectResponse","namespaces","buildNameSpacesByConnectResponse","wallet","maxProtocolVersion","universalConnect","connectInfoAndUrl","tonRequest","universalRequest","universalConnectRequest","redirect","encodeConnectParams","tonConnectRequest","isFromTonSDK","defaultConnectRequest","openOKXLink","getOKXLink","useMini","tmaReturnUrl","openMethod","openOKXTMAWalletlinkWithFallback","useShortLink","openOKXUniversalLink","UNKNOWN_ERROR","walletName","responses","methodsResponse","find","connectRequestMethods","signResponse","WalletConnectionManager","connectionManager_1","walletConnectionManager_1","engine_1","MULTICODEC_ED25519_LENGTH","MULTICODEC_ED25519_HEADER","MULTICODEC_ED25519_BASE","MULTICODEC_ED25519_ENCODING","DID_METHOD","DID_PREFIX","DID_DELIMITER","KEY_PAIR_SEED_LENGTH","DATA_ENCODING","JSON_ENCODING","JWT_ENCODING","JWT_DELIMITER","JWT_IRIDIUM_TYP","JWT_IRIDIUM_ALG","JWTHeaderType","decodeJSON","encodeJSON","encodeIss","decodeIss","encodeSig","decodeSig","encodeData","decodeData","encodeJWT","decodeJWT","verifyJWT","ed25519","tweetnacl_1","stringUtils_1","sign","str","okxtoString","okxfromString","val","publicKeyStr","issuer","prefix","multicodec","split","bytes","encoded","header","signature","jwt","sub_1","aud_1","ttl_1","keyPair_1","sub","aud","iat","Math","floor","alg","typ","iss","exp","act","detached","verify","OKXCONNECTOR_JWT_WALLET_SIDE","buildRequestAccountNameSpacesByConnectResponse","requestAccountNameSpaces","universalResponse","tonAddress","tonProof","address","network","ton_addr","ton_proof","accounts","namespace","addresses","methods","extra","chains","addressItem","addressArr","chain","utils_3","crypto_js_1","subKey","beforeKey","localStorage","resolveLocalStorage","checkAndUpgradeCache","storeKey","cipherIV","cacheStr","cacheKey","cache","cacheObj","fromCacheKey","toCacheKey","removeItem","timestamp","saveItem","localKey","totalCacheStr","getCachedPBKDF2InfoKey","pwLen","saltLen","pw","iv","salt","OKXCONNECTOR_STORAGER_CRYPTO_SALT","randomBytes","OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD","OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV","ivBuffer","PBKDF2","iterations","storeInfo","AES","enc","Utf8","OKXCONNECTOR_STORAGE_CIPHER_METHOD","OKXCONNECTOR_TON_KEY","WalletConnectionManagerEvent","WalletConnectionManagerTopicInfoCacheKey","RECEIVE_REQUEST","walletConnectionConstants_1","communicateEvents","sessionCryptoInfoMap","inLogin","isLogined","offset","isTopicPublicKeyExist","timestampStr","parseInternalMsg","internalMsg","internalObj","origin","originContent","base64decode","updateClientId","cid","lastCheck","getLastSixMd5Hash","dappPublicKey","syncCacheSessionInfo","_p","_q","_r","_s","ignoreReceive","isInternalData","inner_message","inner_topic","decryptWallet","sessionInfoString","base64Content","inner_connection","toObject","recovrySessionInfoFromCache","cacheMap","topicItem","cryptoItem","cryptoKeyPair","cacheSessionInfo","sync","duplicatedTopics","appendTopic","sessionPublicKey","subscribeTopics","from","confirmAppendingTopics","keys","getSessionPublicKey","getCurrentCachedTopicIdList","needPublicKey","useRaw","connectedDappPK","cryptoObject","useCrypto","encryptWallet","messageStr","sendUnsubscribe","sendBatchFetchAndConsumeMessages","topicIdList","topics","withInternalData","finishCount","idx","nonceLength","sessionKeyPair","createKeypairFromString","createKeypair","box","createNonce","receiverPublicKey","encodedMessage","nonce","encrypted","concatInfo","concatUint8Arrays","hexResult","encodedResult","base64encode","senderPublicKey","messageByteArray","toUint8Array","internalMessage","splitToUint8Arrays","decrypted","open","TextDecoder","decode","__exportStar","p","IEngine","ISignClient","ISignClientEvents","IEngineEvents","super","client","creatOKXMiniAppWalletInfo","creatOKXWalletInfo","getBigIntRpcId","formatJsonRpcRequest","isJsonRpcError","isJsonRpcResponse","parseConnectionError","isHttpUrl","formatJsonRpcError","json_rpc_1","wallet_info_1","isJsonRpcPayload","isJsonRpcRequest","isJsonRpcResult","payloadId","formatJsonRpcResult","isReservedErrorCode","getError","getErrorByCode","formatErrorMessage","isWsUrl","okx_connect_error_1","IncrementalRandomGenerator","bits","Uint8Array","Uint16Array","Uint32Array","initialValue","getNextValue","uint8Generator","uint16Generator","date","BigInt","RESERVED_ERROR_CODES","type","STANDARD_ERROR_MAP","DEFAULT_ERROR","match","values","INTERNAL_ERROR","SERVER_ERROR","getUrlProtocol","matches","RegExp","matchRegexProtocol","regex","protocol","test","CONNECT_ITEM_ERROR_CODES","TONCHAIN","connect_wallet_1","connect_event_1","downloadUrl","standardUniversalLink","tgwalletName","getTestTwaUrl","window","okxTesttwaUrl","getTestTgTwaUrl","okxTestTgtwaUrl","tgwalletAppName","shortUniversalLink","okxDeeplink","location","hostname","SERVER_ERROR_CODE_RANGE","INVALID_PARAMS","METHOD_NOT_FOUND","INVALID_REQUEST","PARSE_ERROR","getDefaultMessageByCode","setPrototypeOf","toJSON","BAD_REQUEST_ERROR","ALREADY_CONNECTED_ERROR","NOT_CONNECTED_ERROR","UNKNOWN_APP_ERROR","USER_REJECTS_ERROR","METHOD_NOT_SUPPORTED","CHAIN_NOT_SUPPORTED","NameSpaceKeyTron","NameSpaceKeyCosmos","NameSpaceKeyAptos","NameSpaceKeyBtc","NameSpaceKeySui","NameSpaceKeyTON","NameSpaceKeySOL","NameSpaceKeyEip155","misc_1","callForSuccess","fn","options","attempts","delayMs","lastError","delay","timeout","signal","aborted","timeoutId","checkMetaData","versionCompare","isBrowser","isOS","isMobileUserAgent","openDeeplinkWithFallback","openLinkBlank","openLink","toSafeBase64FromBase64","isValidObject","getAppWalletShortDeepLink","encodeTWAConnectURLParams","getTelegramWalletTWAUrl","getAppWalletDeepLink","encodeTelegramUrlParameters","isTelegramUrl","openOKXDeeplink","logWarning","call_for_success_1","web_api_1","tma_api_1","request_1","debug","forceReport","defaultReporter","OKXReporter","packageJson","version","args","console","okxLogDebug","sendRecordContent","warn","action","content_1","OKXReportSide","versionStr","cross_fetch_1","reportApiList","reportCacheKey","reportUUIDKey","MAX_LIMIT_REPORTCOUNT","DEFAULT_HTTP_HEADERS","Accept","DEFAULT_HTTP_METHOD","DEFAULT_FETCH_OPTS","headers","PAGE_IN","PAGE_OUT","CLICK","DAPP","WALLET","fetchListWithTimeout","urls_1","args_1","urls","controller","AbortController","fetchPromise","timeoutPromise","_","abort","race","ok","status","currentSide","currentVersion","storage","recordList","currentUUID","configVersionAndSide","appName","recordCacheKey","reportPlatform","startErrorCatching","records","uuid","sendCachedRecords","getWindow","cachedErrors","sendRecord","record","body","res","path","pathname","language","navigator","ua","userAgent","platform","reportItem","lang","markRecordItem","sendList","allSettled","results","keepIndex","markRecord","Report_WalletType_Key","Report_Proceed_QRCode_Click","Report_ChooseType_Download_Click","Report_ChooseType_ConnectWallet_Click","Report_Proceed_Retry_Click","Report_ChooseType_ConnectWallet_View","Report_Loading_ConnectWallet_View","Report_Proceed_QRCode_View","Report_Proceed_Proceed_View","dappMetaData","icon","JSONStringify","JSONParse","json","numbersBiggerThanMaxInt","serializedData","group","parse","isCustomFormatBigInt","substring","alloc","allocUnsafe","basics_1","string","encoding","base","BASES","decoder","array","encoder","createCodec","buf","ascii","bufNum","charCodeAt","utf8","hex","bases","base16","latin1","binary","isTmaPlatform","isInTelegramBrowser","sendExpand","sendOpenTelegramLink","initParams","locationHash","hash","urlParseHashParams","tmaPlatform","tgWebAppPlatform","Telegram","WebApp","webAppVersion","tgWebAppVersion","platforms","TelegramWebviewProxy","isTelegramWebview","TelegramWebview","postEvent","link","fallback","URL","pathFull","search","isIframe","versionAtLeast","path_full","parent","eventType","eventData","external","notify","trustedTarget","postMessage","indexOf","_path","urlSafeDecode","qIndex","pathParam","substr","query_params","urlParseQueryString","urlencoded","decodeURIComponent","queryString","paramName","paramValue","queryStringParams","v1","v2","p1","p2","v1List","v2List","max","parseInt","ver","removeUrlLastSlash","addPathToUrl","constants_2","useStandardUniversalLink","replaceStrWithParam","cleanUrl","deeplinkEncodeUrl","encodeURIComponent","fullUrl","isTelegram","newWindow","href","deepLinkOpened","timeoutDuration","fallbackToDownloadPage","parameters","encodedParameters","connectRequestWithVersion","connectParam","redirectStr","okxconnect","extraparams","base64ContentStr","urlSafeBase64","twaDeepLink","openTelegramLink","encodeTGParams","RANDOM_LENGTH","hasLocalStorage","hashKey","generateRandomBytes32","tweetnacl_util_1","to_string_1","sha256_1","BASE16","hexString","byteArray","byte","buffer1","buffer2","mergedArray","subArray1","subArray2","encodeUint8Array","urlSafe","encodeBase64","decodeToUint8Array","decodeBase64","uint8Array","decodeUTF8","decodedUint8Array","encodeUTF8","scheme","global","self","randomBytes32","obj","getPrototypeOf","maxTouchPoints","isIOSDevice","MSStream","isIPadOS","MD5","base64","getUserAgent","ua_parser_js_1","target","doFallback","fallbackTimeout","check","vendor","opera","getResult","osName","os","toLowerCase","deviceModel","device","model","browserName","browser","OKXBtcProvider","_1","provider","caip","getAddressForChainId","chainId","ns","checkChainId","account","getAccount","signMessage","signStr","ret","errorData","sendBitcoin","toAddress","satoshis","to","feeRate","txhash","checkParameters","signPsbt","psbtHex","signPsbts","psbtResults","psbtHexs","signAndPushPsbt","sendInscription","inscriptionId","extension","coinId","protocolId","atomicSuffix","ordinalsSuffix","endsWith","removeSuffix","scenario","txType","batchBean","coinAmount","nftId","suffix","unexistKeys","namespaceKey","OKXCosmosProvider","core_1","accountArray","algo","bech32Address","pubKey","hexToUint8Array","signArbitrary","signerAddress","signDoc","chain_id","account_number","sequence","fee","gas","amount","msgs","memo","signData","signAmino","signOptions","resData","signed","signDirect","bodyBytes","bufferToHex","authInfoBytes","accountNumber","messageToBuffer","buffer","arr","output","x","padStart","arrayBuffer","byteValue","isNaN","OKXTonProvider","statusChangeSubscriptions","statusChangeErrorSubscriptions","tonWallet","errorsHandler","connected","tonNameSpace","walletStateInit","sessionWallet","tonDeviceInfo","appVersion","features","connectItems","onStatusChange","sendTransaction","transaction","MAINNET","requestAccountsWithNamespace","requestParams","OKXTronProvider","TRON_CHAIN_ID","getChain","stringToHex","signMessageV2","signTransaction","signedTx","realSignTx","visible","txID","rawData","contract","raw_data","expiration","ref_block_bytes","ref_block_hash","raw_data_hex","signAndSendTransaction","OKXUniversalProvider","eip155_1","sui_1","client_1","namespaces_1","solana_1","btc_1","aptos_1","ton_1","cosmos_1","tron_1","packages_1","provider_1","opts","setGlobal","okxConnectUniversalinwindow","initialize","providerOpts","rpcProviders","requestParam","buildRequestParamFromRequest","getProvider","validateChain","keyArr","enable","connectOpts","requestAccounts","called","onRequestSent","disconnectAndEmit","cleanup","engine","aptosChainNameToGeneralId","replaceAptos","aptosNameSpace","realNS","replaceAptosInner","aptos","optionAptosNameSpace","optionalNamespaces","realOptionNS","defaultChain","replaceAptosGeneralIdWithNetName","replaceSessionAptos","disconnectInner","connectAndSign","signRequest","updatedOpts","setNamespaces","requestItem","signResponseList","okxConnectUniversalUIinwindow","creatNotSupportMethodItemReplay","syncAllAddresses","syncAddressAvailable","syncAllAddress","setDefaultChain","rpcUrl","checkStorage","sessionInfoStr","getFromStore","createProviders","registerEventListeners","SignClient","providersToCreate","parseNamespaceKey","namespacesValue","currentNameSpace","Eip155Provider","opts1","solanaProvider","sonicProvider","svmProvider","optsTon","tonProvider","optsSui","suiProvider","SuiProvider","optsBtc","btcProvider","fbProvider","aptosProvider","moveProvider","cosmosProvider","tronProvider","PROVIDER_EVENTS","DEFAULT_CHAIN_CHANGED","caip2ChainId","onChainChanged","UPDATE_NAMESPACES","nameSpaces","nameSpacekey","persist","isChainNamespaceInSession","chainsArr","defaultNamespace","getDefaultChain","namespaceStr","requestDefaultChainWithNamespace","caip2Chain","sessionProperties","showRequestModal","OKXUniversalProvider_1","OKXBtcProvider_1","OKXCosmosProvider_1","OKXTonProvider_1","OKXTronProvider_1","ConnectMethodUtils_1","metaData","requestAccountItem","requiredNamespaces","nameSpaceToConnectWalletNameSpace","SESSION_CONNECTING","connectMethodsToConnectWalletMethods","metadata","fillParamsToSession","connectMethodsResponseUpdate","openOKXWallet","allAddressStr","syncResoonseToRequire","connectSupportMethods","connectMethodsAdaptOldVersion","bs58_1","uint8array_extras_1","isArray","isRecord","notSupportError","errorItem","callBackParams","solAccount","account1","solAddress","fromAccountToAddress","realMessage","stringToUint8Array","suiMessage","convertedArray","b64encoded","atob","btcAccounts","account2","btcAccount","btcAddress","paramData","aptosAccount","account3","aptosAddress","fullMessage","application","aptosChainId","cosmosAccount","account_cosmos","cosmosAddress","cosmosData","cosmosBase64Encoded","stringToBase64","methodItem","solanaSuccessData","suiMethod","requestMethod","suiMessageb64","aptosSignature","requireNameSpace","includeEip155","some","space","syncAddressHostAvailable","includeChain","paramsArr","firstParam","firstObj","aptosParams","currentURL","signChainId","applicationUrl","cosmosChain","responseAddressStr","allAddress","isEvm","deriveName","addr","ci","evmAddress","freeze","getAccountsChains","isCaipNamespace","mergeRpcMap","targetRpcMap","sourceRpcMap","mergeNamespaces","source","rpcMap","GENERIC_SUBPROVIDER_NAME","RPC_URL","STORAGE","CONTEXT","WC_VERSION","PROTOCOL","RELAY_URL","LOGGER","JsonRpcConnection_1","JsonRpcProvider_1","AptosProvider","httpProviders","createHttpProviders","updateNamespace","getAccounts","setHttpProvider","http","parsedChainId","getChainId","parsedRpc","getRpcUrl","httpProvider","createHttpProvider","getHttpProvider","rpc","JsonRpcProvider","JsonRpcConnection","getGlobal","BtcProvider","CosmosProvider","updateRequestParams","isDic","switchChainId","decimalNumber","selectedChainId","chainNum","paramsChainId","paramsChainString","adaptArray","addressObj","isEqual","chainAddress","messages","typedDataJson","secondObj","hexChainId","getHexChainIdFromRequest","isChainApproved","handleSwitchChain","addEthereumChain","resultData","nameSpace","rpcUrls","eip155","core_2","disableProviderPing","isAvailable","registering","register","parseError","types_1","IJSONRpcProvider","connection","hasRegisteredEventListeners","setConnection","context","requestStrict","_error","SolanaProvider","getPubkey","getWalletAddress","components","__rest","s","t","getOwnPropertySymbols","propertyIsEnumerable","TONProvider","validUntil","newParams","fromAddress","boc","TronProvider","IJSONRpcConnection","opt","globals","convertChainIdToNumber","parseChainId","mergeArrays","projectId","reference","CAIP_DELIMITER","okxGlobal","_createElementBlock","_hoisted_1","_createVNode","_component_el_container","_withCtx","_component_el_header","_cache","_createTextVNode","_component_el_main","_component_el_card","class","_createElementVNode","style","_component_el_row","_component_el_col","span","_toDisplayString","$options","_ctx","_component_el_checkbox","modelValue","withUI","$event","onChange","handleWithUI","universalToTG","handleUniversalToTG","_component_el_select","modals","placeholder","handleModalsSelect","multiple","_component_el_option","label","returnStrategy","handleReturnStrategySelect","_Fragment","_renderList","returnStrategies","strategy","_createBlock","_component_el_input","deeplink","handleReturnStrategyDeeplink","disabled","_createCommentVNode","handleLanguageSelect","locales","locale","theme","handleThemeSelect","THEME","LIGHT","DARK","selectedMethod","handleConnectMethodsSelect","connectMethods","tonProofValue","gutter","align","availableChains","checked","areChainsInit","isOptionalChecked","handleOptionChange","_component_el_button","onClick","initBtnClicked","connectInitStr","connectBtnClicked","connectStatusStr","syncAllAddressClick","syncAllAddressStr","disconnectAction","walletAddress","disconnectStatusStr","_Teleport","showModal","closeModal","_withModifiers","_component_qrcode_vue","qrValue","level","_component_el_tabs","activeTab","onTabClick","clickActiveTab","_component_el_tab_pane","eth_requestAccounts","eth_chainId","wallet_switchEthereumChain","wallet_addEthereumChain","personal_sign","eth_signTypedData_v4","eth_sendTransaction_transfer","eth_sendTransaction_approve","eth_sendTransaction_mint","wallet_watchAsset","oversized_personal_sign","ton_getAccount","ton_sendTransaction","sol_signMessage","sol_signTransaction","sol_signVersionedTransaction","sol_signAllTransactions","sol_signAllVersionedTransactions","sol_signAndSendTransaction","sol_signAndSendVersionedTransaction","_component_SuiPanel","onGenerateTransactionParams","sui_generateTransactionParams","_component_BTCPanel","btc_generateTransactionParams","_component_FractalPanel","fractal_generateTransactionParams","_component_TronTransactionPanel","tron_generateTransactionParams","onGenerateTransactionResult","tron_getTransactionResult","aptos_signMessage","aptos_signTransaction","aptos_signAndSubmitTransaction","cosmos_signArbitrary","cosmos_signAmino","cosmos_signDirect","wallet_testRpc","eth_sendTransaction_swap","move_signTransaction","move_signAndSubmitTransaction","testBase64UrlSafe","xs","sm","handleRedirectSelect","canChainAddRedirectParam","redirectDeeplink","handleRedirectDeeplink","addRedirectParam","testTransaction","rows","testboc","testTransactionStr","btc_getAccount","btc_signMessage","$setup","sendAmount","clearable","btc_send","sendSatoshisAmount","btc_sendBitcoin","btc_signPsbt_up","btc_signAndPushPsbt_up","receiver","btc_sendInscription","props","setup","ref","$emit","alert","autoFinalized","__exports__","fractal_getAccount","fractal_signMessage","fractal_send","fractal_sendBitcoin","fractal_signPsbt_up","fractal_signAndPushPsbt_up","fractal_sendInscription","sui_getAccount","sui_signMessage","sui_signPersonalMessage","sui_signTransaction2","sui_signAndExecuteTransaction","sui_requestRpc","sui_signTransaction_pre_execution","sui_signAndExecuteTransaction_pre_execution","recipientAddress","tx","SuiTransaction","coin","splitCoins","transferObjects","transactionBlock","showEffects","txBytes","txSerialize","generateTsBytesAndSerizlize","resultTuple","senderAccounts","getFullnodeUrl","suiClient","SuiClient","setSender","build","Buffer","currentSuiTransaction","currentSuiMethod","tron_signMessage","tron_signMessageV2","tron_signTransaction","tron_signAndSendTransactionContract","tron_signAndSendTransactionApprove","tronWeb","TronWeb","trx","verifyMessage","base58Address","verifyMessageV2","isOnlySign","transactionBuilder","sendTrx","getContract","contractAddress","abi","entrys","parameter","triggerSmartContract","verifyADR36Amino","fromBech32","VConsole","allChains","chainsThatCanAddRedirectParam","optionChains","selectedModals","selectedReturnStrategy","selectedDeepLink","selectedLanguage","selectedTheme","TronTransactionPanel","QrcodeVue","BTCPanel","FractalPanel","SuiPanel","testTopic","testPublicKey","testProofPayload","pendingDeepLink","logList","connectReady","localPubKey","localSecKey","selectedChain","ProofPayloadVerify","showVerifyRow","has","selectedMethodData","isChecked","reload","computed","selectedChains","initChains","newChains","updatedChains","tab","tabName","initCall","OKXUniversalConnectUI","actionsConfiguration","uiPreferences","walletInfo","onModalStateChange","uri","isPC","items","testTonSdk","blockExplorerUrls","chainName","nativeCurrency","symbol","decimals","dataETH","dataPolygon","types","EIP712Domain","Person","Mail","primaryType","domain","verifyingContract","contents","maxPriorityFeePerGas","maxFeePerGas","gasPrice","gasLimit","image","tonUniversalLog","sendTransactionAlert","fetch","confirm","sendData","adapter","SuiAdapter","suiResult","signAndExecuteTransaction","sui_verifySignature","signPersonalMessage","btcAdapter","btcResult","currentBtcMethod","currentBtcTransaction","hexToBase64","bs64Str","fractalResult","currentFractalMethod","currentFractalTransaction","hexStr","blob","Blob","reader","FileReader","onload","base64Data","readAsDataURL","datatest","firstStr","showUrl","hasEip155","hasSolana","hasSui","hasBtc","hasAptos","hasTon","hasCosmos","nameSpacesChains","optSpaceChains","solanaChains","hasTron","suiChains","btcChains","connectMethod","connectData","requireData","solana","cosmos","tron","tonParams","ton","sui","btc","optData","eip155Chains","signMethods","getCurrentSelectedMethodData","openModalAndSign","openModal","methodList","suiData","currentMethod","userAgentInfo","Agents","flag","isSafariOrChrome","pubkey","OKXSolanaProvider","result1","nacl","PublicKey","toBytes","OKXAptosProvider","config","AptosConfig","Network","Aptos","simple","sender","function","typeArguments","functionArguments","signAndSubmitTransaction","Connection","getSolConnect","blockhash","getLatestBlockhash","versionedTransactionMessage","TransactionMessage","payerKey","recentBlockhash","instructions","SystemProgram","transfer","fromPubkey","toPubkey","lamports","compileToV0Message","VersionedTransaction","signAllTransactions","Transaction","feePayer","isValid","cosmos_verifySignArbitrary","pub_key","signer","prefixStr","signatureBuffer","uint8Signature","pubKeyValueBuffer","pubKeyUint8Array","uiOptions","eth_verifyMessage","ethAddress","originalMessage","recoveredAddress","ethers","list","verifyList","requestItme","ethMessage","solanaMessage","verifySol","aptosMessage","aptosPublicKey","cosmosMessage","tronMessage","signatureResult","resultObj","verifyPersonalMessageSignature","toSuiAddress","toBase64","newTransaction","c","created","mounted","scriptTag","createElement","src","getElementsByTagName","appendChild","title","render","app","createApp","App","use","ElementPlus","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","loaded","__webpack_modules__","amdO","deferred","O","chunkIds","priority","notFulfilled","Infinity","j","every","r","n","getter","d","definition","g","globalThis","Function","prop","Symbol","toStringTag","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}