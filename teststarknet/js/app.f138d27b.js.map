{"version":3,"file":"js/app.f138d27b.js","mappings":"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","sources":["webpack://okxconnectdemo/../packages/core/src/connect/commands.js","webpack://okxconnectdemo/../packages/core/src/connect/connect.js","webpack://okxconnectdemo/../packages/core/src/connect/connectionManager.js","webpack://okxconnectdemo/../packages/core/src/connect/constants.js","webpack://okxconnectdemo/../packages/core/src/connect/engine.js","webpack://okxconnectdemo/../packages/core/src/connect/index.js","webpack://okxconnectdemo/../packages/core/src/connect/jwt.js","webpack://okxconnectdemo/../packages/core/src/connect/jwtconstants.js","webpack://okxconnectdemo/../packages/core/src/connect/sessionUtils.js","webpack://okxconnectdemo/../packages/core/src/connect/storage.js","webpack://okxconnectdemo/../packages/core/src/connect/storageconstants.js","webpack://okxconnectdemo/../packages/core/src/connect/walletConnectionConstants.js","webpack://okxconnectdemo/../packages/core/src/connect/walletConnectionManager.js","webpack://okxconnectdemo/../packages/core/src/crypto/crypto.js","webpack://okxconnectdemo/../packages/core/src/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/engine.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/json-rpc.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/connect-event.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/connect-wallet.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/wallet-info.js","webpack://okxconnectdemo/../packages/core/src/protocol/constants.js","webpack://okxconnectdemo/../packages/core/src/protocol/error/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/error/okx-connect.error.js","webpack://okxconnectdemo/../packages/core/src/protocol/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/misc.js","webpack://okxconnectdemo/../packages/core/src/utils/call-for-success.js","webpack://okxconnectdemo/../packages/core/src/utils/index.js","webpack://okxconnectdemo/../packages/core/src/utils/log.js","webpack://okxconnectdemo/../packages/core/src/utils/report.js","webpack://okxconnectdemo/../packages/core/src/utils/reportconstants.js","webpack://okxconnectdemo/../packages/core/src/utils/request.js","webpack://okxconnectdemo/../packages/core/src/utils/safejson.js","webpack://okxconnectdemo/../packages/core/src/utils/stringUtils.js","webpack://okxconnectdemo/../packages/core/src/utils/tma-api.js","webpack://okxconnectdemo/../packages/core/src/utils/url.js","webpack://okxconnectdemo/../packages/core/src/utils/utils.js","webpack://okxconnectdemo/../packages/core/src/utils/web-api.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXBtcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXCosmosProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXStarknetProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTonProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTronProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXUniversalProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/sign-client/client.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/ConnectMethodUtils.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/namespaces.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/events.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/values.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/aptos.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/btc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/cosmos.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/eip155.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcConnection.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/solana.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/starknet.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/sui.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/ton.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/tron.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/misc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/providers.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/globals.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/misc.js","webpack://okxconnectdemo/./src/App.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue?1b44","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue?e4fb","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue?aa83","webpack://okxconnectdemo/./src/components/StarknetTransactionPanel.vue","webpack://okxconnectdemo/./src/components/StarknetTransactionPanel.vue?1a06","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue?089a","webpack://okxconnectdemo/./src/App.vue?7ccd","webpack://okxconnectdemo/./src/main.js","webpack://okxconnectdemo/webpack/bootstrap","webpack://okxconnectdemo/webpack/runtime/amd options","webpack://okxconnectdemo/webpack/runtime/chunk loaded","webpack://okxconnectdemo/webpack/runtime/compat get default export","webpack://okxconnectdemo/webpack/runtime/create fake namespace object","webpack://okxconnectdemo/webpack/runtime/define property getters","webpack://okxconnectdemo/webpack/runtime/global","webpack://okxconnectdemo/webpack/runtime/hasOwnProperty shorthand","webpack://okxconnectdemo/webpack/runtime/make namespace object","webpack://okxconnectdemo/webpack/runtime/node module decorator","webpack://okxconnectdemo/webpack/runtime/jsonp chunk loading","webpack://okxconnectdemo/webpack/startup"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_METHOD_BATCH_FETCHMSG = exports.CONNECT_METHOD_FETCHMSG = exports.CONNECT_METHOD_RECEIVE = exports.CONNECT_METHOD_UNSUB = exports.CONNECT_METHOD_SUB = exports.CONNECT_METHOD_PUBLISH = exports.CONNECT_METHOD_LOGIN = exports.CONNECT_METHOD_PUSH = void 0;\n// --------------- ws methods -------------\nexports.CONNECT_METHOD_PUSH = \"push\";\nexports.CONNECT_METHOD_LOGIN = \"login\";\nexports.CONNECT_METHOD_PUBLISH = \"publish\";\nexports.CONNECT_METHOD_SUB = \"subscribe\";\nexports.CONNECT_METHOD_UNSUB = \"unsubscribe\";\nexports.CONNECT_METHOD_RECEIVE = \"receive\";\nexports.CONNECT_METHOD_FETCHMSG = \"fetchMessages\";\nexports.CONNECT_METHOD_BATCH_FETCHMSG = \"batchFetchMessages\";\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXWalletConnector = void 0;\nconst constants_1 = require(\"./constants\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils\");\nconst utils_2 = require(\"../utils/utils\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst log = __importStar(require(\"../utils/log\"));\nconst protocol_1 = require(\"../protocol\");\nconst WS = (0, utils_2.resolveWebSocketImplementation)();\nclass OKXWalletConnector {\n    constructor(url) {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.state = constants_1.ConnectorState.InitState;\n        this.selectedUrlIndex = 0;\n        // reconnect\n        this.retryCount = 0;\n        // default timeout limit: 8 sec\n        this.timeOutLimit = 8000;\n        if (!(0, utils_2.checkWSUrl)(url)) {\n            throw new Error(`CONNECTOR: invalid url ${url}`);\n        }\n        this.url = url;\n        this.heartbeatTimer = null;\n        this.connectionTimeoutTimer = null;\n        this.connectURLStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY + storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n    }\n    get connecting() {\n        return this.state == constants_1.ConnectorState.Connecting;\n    }\n    // ------------------------------------------------------\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        log.logDebug('get received data');\n        log.logDebug(e);\n        if (typeof e.data === \"string\") {\n            let rsp = e.data;\n            if (rsp === \"pong\") {\n                log.logDebug(`CONNECT: receive pong ${Date.now().toString()}`);\n                return;\n            }\n        }\n        this.events.emit(\"payload\", e.data);\n    }\n    onClose(event) {\n        var _a;\n        log.logDebug('socket get closed: ', (_a = this.socket) === null || _a === void 0 ? void 0 : _a.url, event.code);\n        this.socket = undefined;\n        this.events.emit(\"close\", event);\n    }\n    onError(id, e) {\n        const payload = { id: id, msg: e.toString() };\n        this.events.emit(\"payload\", payload);\n    }\n    onopen(socket) {\n        socket.onmessage = (event) => this.onPayload(event);\n        socket.onclose = (event) => this.onClose(event);\n        this.socket = socket;\n        this.state = constants_1.ConnectorState.Connected;\n        this.events.emit(\"open\");\n    }\n    // ------------------------------------------------------\n    emitError(errorEvent) {\n        this.events.emit(\"fail\", errorEvent);\n    }\n    // ------------------------------------------------------\n    heartbeat() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.heartbeatTimer) {\n                clearTimeout(this.heartbeatTimer);\n            }\n            if (this.state != constants_1.ConnectorState.Connected && this.state != constants_1.ConnectorState.OnError) {\n                log.logDebug('heart beat close');\n                return;\n            }\n            if (!this.socket) {\n                log.logDebug('socket not exist');\n                if (this.state == constants_1.ConnectorState.Connected || this.state == constants_1.ConnectorState.OnError) {\n                    log.logDebug('socket reconnect by heartbeat');\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                        this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n                    }\n                }\n                return;\n            }\n            if (this.socket.readyState !== WebSocket.OPEN) {\n                log.logDebug('socket not ready');\n                if (this.state == constants_1.ConnectorState.Connected || this.state == constants_1.ConnectorState.OnError) {\n                    log.logDebug('socket reconnect by heartbeat with state', this.state, this.socket.readyState);\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                        this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n                    }\n                }\n                return;\n            }\n            log.logDebug(`send ping heart beat: ${Date.now().toString()}, ${this.socket}`);\n            this.socket.send(\"ping\");\n            this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n        });\n    }\n    registOpen(url = this.url, inRetry = false) {\n        if (!(0, utils_2.checkWSUrl)(url)) {\n            throw new Error(`CONNECTOR: invalid url ${url}`);\n        }\n        this.url = url;\n        if (!inRetry) {\n            log.logDebug('Connection connect:', this.url, new Date().toUTCString());\n        }\n        this.state = constants_1.ConnectorState.Connecting;\n        const origin = new URLSearchParams(url).get(\"origin\");\n        return new Promise((resolve, reject) => {\n            const socket = new WS(url, []);\n            log.logDebug('Connection connect Begin:', this.url, new Date().toUTCString());\n            this.startTimeOutTimer(socket);\n            if ((0, utils_2.hasBuiltInWebSocket)()) {\n                log.logDebug('Add socket error handler');\n                socket.onerror = () => {\n                    reject(new Error('socket error'));\n                    socket.close();\n                };\n            }\n            else {\n                log.logDebug('Add socket error handler');\n                socket.on(\"error\", () => {\n                    reject(new Error('socket error'));\n                    socket.close();\n                });\n            }\n            socket.onopen = () => {\n                log.logDebug('socket opened');\n                this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.FINISHED);\n                this.onopen(socket);\n                this.heartbeat();\n                resolve(socket);\n            };\n        });\n    }\n    checkMaxRetry() {\n        log.logDebug('current retry count:', this.retryCount, 'of', constants_1.OKXCONNECTOR_WS_URL_LIST.length);\n        return this.retryCount > constants_1.OKXCONNECTOR_WS_URL_LIST.length;\n    }\n    connectionTryNext() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.checkMaxRetry()) {\n                //TODO: mark descent\n                this.retryCount += 1;\n                let nextUrl = this.getNextSelectUrl();\n                log.logDebug('Connection retry:', nextUrl, new Date().toUTCString());\n                return this.registOpen(nextUrl, true);\n            }\n            else {\n                log.logDebug('Max Connection retry ', this.retryCount, new Date().toUTCString());\n            }\n        });\n    }\n    startTimeOutTimer(socket) {\n        if (this.connectionTimeoutTimer) {\n            this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.CANCELED);\n        }\n        this.pendingSocket = socket;\n        this.connectionTimeoutTimer = setTimeout(() => {\n            if (this.pendingSocket) {\n                this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.TIME_OUT);\n            }\n        }, this.timeOutLimit);\n    }\n    resetTimeOutTimer(code) {\n        var _a;\n        // 1. cancel connecting pending sockets\n        if (code != constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.FINISHED) {\n            (_a = this.pendingSocket) === null || _a === void 0 ? void 0 : _a.close(code);\n        }\n        this.pendingSocket = undefined;\n        // 2. remove timer\n        clearTimeout(this.connectionTimeoutTimer);\n    }\n    cacheSuccessUrlSelect() {\n        this.connectURLStorage.saveContent(this.selectedUrlIndex.toString(), storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n    }\n    // private getSuccessUrlSelect(): string {\n    //     let selectIndex = this.connectURLStorage.getItem(OKXCONNECTOR_CACHE_KEY)?.content\n    //     let index = 0\n    //     if (selectIndex) {\n    //         index = Number(selectIndex)\n    //     }\n    //     this.selectedUrlIndex = index\n    //     return OKXCONNECTOR_WS_URL_LIST[index]\n    // }\n    getNextSelectUrl() {\n        this.selectedUrlIndex += 1;\n        this.selectedUrlIndex = this.selectedUrlIndex % constants_1.OKXCONNECTOR_WS_URL_LIST.length;\n        return constants_1.OKXCONNECTOR_WS_URL_LIST[this.selectedUrlIndex];\n    }\n    // ------------------------------------------------------\n    onVisibleChanged() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (document.visibilityState === 'visible') {\n                // check and restore\n                log.logDebug(`get changed ${this.state}, ${this.socket}`);\n                if (this.state == constants_1.ConnectorState.Connected && typeof this.socket === \"undefined\") {\n                    log.logDebug('CONNECTION need reopen');\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                    }\n                    return;\n                }\n            }\n        });\n    }\n    tryRegistOpen() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (this.connecting) {\n                log.logDebug('tryRegistOpen => connecting state');\n                return new Promise((resolve, reject) => {\n                    this.events.once('fail', (e) => {\n                        log.logDebug('tryRegistOpen => connecting fail listener', e);\n                        return reject(e);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.socket == \"undefined\") {\n                            return reject(new Error(\"Connect lost\"));\n                        }\n                        return resolve(this.socket);\n                    });\n                });\n            }\n            log.logDebug('tryRegistOpen => try registOpen until retry limit is hit');\n            let inRetry = false;\n            while (!this.checkMaxRetry() && !this.socket) {\n                try {\n                    log.logDebug('tryRegistOpen => call registOpen, try count:', this.retryCount, inRetry);\n                    yield this.registOpen(url, inRetry);\n                }\n                catch (err) {\n                    log.logDebug('tryRegistOpen => registOpen failed', err);\n                    this.retryCount += 1;\n                    url = this.getNextSelectUrl();\n                    inRetry = true;\n                }\n            }\n            log.logDebug('tryRegistOpen => exit while loop', this.retryCount, this.socket);\n            if (!this.socket && this.checkMaxRetry()) {\n                log.logDebug('tryRegistOpen => failed to open a socket', this.retryCount, this.socket);\n                this.retryCount = 0;\n                this.state = constants_1.ConnectorState.OnError;\n                this.emitError(new Error('tryRegistOpen failed'));\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CONNECTION_ERROR, \"Failed to connect\");\n            }\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.tryRegistOpen();\n                // listener for reconnect\n                document.removeEventListener('visibilitychange', this.onVisibleChanged.bind(this));\n                document.addEventListener('visibilitychange', this.onVisibleChanged.bind(this));\n            }\n            catch (e) {\n                log.logDebug('connect => failed to connect', e);\n                throw e;\n            }\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.state = constants_1.ConnectorState.Disconnected;\n            return new Promise((resolve, reject) => {\n                if (typeof this.socket === \"undefined\") {\n                    // reject(new Error(\"CONNECTION closed\"))\n                    resolve();\n                    return;\n                }\n                this.socket.onclose = (event) => {\n                    this.onClose(event);\n                    resolve();\n                };\n                this.socket.close();\n                if (this.heartbeatTimer) {\n                    clearTimeout(this.heartbeatTimer);\n                }\n            });\n        });\n    }\n    currentStatus() {\n        return {\n            state: this.state,\n            url: this.url\n        };\n    }\n    // event will be jsonstr\n    /// @params Promise\n    /// @params success/failed callback\n    addListener(event, decrypt, success, failed) {\n        if (this.listenPayloadHandler) {\n            this.events.removeListener(\"payload\", this.listenPayloadHandler);\n        }\n        this.listenPayloadHandler = (e) => {\n            var _a;\n            log.logDebug(`<<< get payload ${e}`);\n            let parsedEvent = (0, utils_1.safeJsonParse)(e);\n            // parse the data to chose success or failed\n            if (parsedEvent.params && parsedEvent.params.data) {\n                let rawMsg = (_a = parsedEvent.params.data) === null || _a === void 0 ? void 0 : _a.message;\n                if (rawMsg) {\n                    try {\n                        let msg = decrypt(rawMsg);\n                        if (msg === undefined) {\n                            log.logDebug(`CONNECT: decrypt undefined`);\n                            failed(event, 'Decrypt undefined');\n                        }\n                        else {\n                            success(event, msg);\n                        }\n                    }\n                    catch (e) {\n                        log.logDebug(`CONNECT: decrypt failed: ${e}`);\n                        failed(event, e.message);\n                    }\n                }\n            }\n        };\n        this.events.on(\"payload\", this.listenPayloadHandler);\n        if (this.failHandler) {\n            this.events.removeListener(\"fail\", this.failHandler);\n        }\n        this.failHandler = (e) => {\n            if (e) {\n                log.logDebug(`CONNECT failed: ${e}`);\n                failed(event, e.message);\n            }\n            else {\n                failed(event, \"Unkonow error\");\n            }\n        };\n        this.events.on(\"fail\", this.failHandler);\n    }\n    addPackageParse(callback) {\n        if (this.payloadHandler) {\n            this.events.removeListener(\"payload\", this.payloadHandler);\n        }\n        this.payloadHandler = (e) => __awaiter(this, void 0, void 0, function* () {\n            // parse the data to chose success or failed\n            log.logDebug(`CONNECTION @[${new Date().toUTCString()}] <<<< received e:${e}`);\n            let param = (0, utils_1.safeJsonParse)(e);\n            yield callback(param);\n        });\n        this.events.on(\"payload\", this.payloadHandler);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    send(doLogin, payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (typeof this.socket === \"undefined\") {\n                    log.logDebug(`>>> send payload undefined ${payload}`);\n                    // this.socket = await this.registOpen();\n                    yield doLogin();\n                }\n                log.logDebug(`CONNECTION @[${new Date().toUTCString()}]>>> send payload ${(0, utils_1.safeJsonStringify)(payload)}`);\n                if (this.socket) {\n                    this.socket.send((0, utils_1.safeJsonStringify)(payload));\n                }\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    getMsgPayloadFromHistory(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof msg === \"undefined\")\n                return;\n            let tmpMsg = {\n                params: {\n                    data: msg\n                }\n            };\n            let jsonstr = (0, utils_1.safeJsonStringify)(msg);\n            log.logDebug('get received data from history');\n            log.logDebug(jsonstr);\n            jsonstr = (0, utils_1.safeJsonStringify)(tmpMsg);\n            this.events.emit(\"payload\", jsonstr);\n        });\n    }\n    onOpen(callback) {\n        if (this.openHandler) {\n            this.events.removeListener(\"open\", this.openHandler);\n        }\n        this.openHandler = () => __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> ws opened: `);\n            yield callback();\n        });\n        this.events.on(\"open\", this.openHandler);\n        this.cacheSuccessUrlSelect();\n    }\n}\nexports.OKXWalletConnector = OKXWalletConnector;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionManager = void 0;\nconst connect_1 = require(\"./connect\");\nconst commands_1 = require(\"./commands\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst jwtconstants_1 = require(\"./jwtconstants\");\nconst constants_1 = require(\"./constants\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils/utils\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst jwt_1 = require(\"./jwt\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst report_1 = require(\"../utils/report\");\nconst url_1 = require(\"../utils/url\");\nclass ConnectionManager {\n    constructor(appname = undefined) {\n        this.events = new eventemitter3_1.EventEmitter();\n        // local storage\n        this.connectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY_DAPP + appname, storageconstants_1.OKXCONNECTOR_CACHE_KEY_DAPP);\n        this.crypto = new crypto_1.SessionCrypto();\n        let inTMA = (0, url_1.isInTMA)();\n        (0, log_1.logDebug)('do init:', inTMA);\n        log.reportLog('connection manager do init');\n        if (inTMA) {\n            // recovery from cache\n            const keyPairInfo = this.getCachedCryptoKeyPair();\n            (0, log_1.logDebug)('use same pk:', keyPairInfo);\n            this.crypto = new crypto_1.SessionCrypto(keyPairInfo);\n        }\n        this.jwtKeyPair = this.getCachedJWTKeyPair();\n        this.saveJWTKeyPair(this.jwtKeyPair);\n        // wss connection\n        this.connector = new connect_1.OKXWalletConnector(constants_1.OKXCONNECTOR_WS_URL_1);\n        this.packageId = Date.now();\n        // connection state\n        this.connectedWalletPK = '';\n        this.currentTopic = '';\n        log.logDebug(`this.connectedWalletPK  constructor   ${this.connectedWalletPK}`);\n    }\n    refreshPackageId() {\n        this.packageId = Date.now();\n    }\n    saveCryptoKeyPair(keyPair) {\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(keyPair);\n        // encrypt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_CRYPTO_KEY);\n    }\n    getCachedCryptoKeyPair() {\n        // decrypt kp\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_CRYPTO_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            log.logDebug('get cached crypto key:');\n            log.logDebug(content);\n            let keyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            return keyPairInfo;\n        }\n        else {\n            this.connectStorage.clearCache();\n        }\n        return null;\n    }\n    saveJWTKeyPair(keyPair) {\n        var strkeyPair = {\n            publicKey: (0, utils_1.toHexString)(keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(keyPair.secretKey)\n        };\n        log.logDebug('save jwt kp');\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(strkeyPair);\n        log.logDebug(cacheInfo);\n        // encrypt jwt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_JWT_KEY);\n    }\n    getCachedJWTKeyPair() {\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            // TODO: decrypt jwt kp\n            log.logDebug('get cached jwt kp:');\n            log.logDebug(content);\n            let strKeyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            log.logDebug('save jwt kp');\n            log.logDebug(strKeyPairInfo);\n            var keyPair = {\n                publicKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.publicKey),\n                secretKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.secretKey)\n            };\n            return keyPair;\n        }\n        else {\n            return (0, jwt_1.generateKeyPair)();\n        }\n    }\n    isWalletPKReady() {\n        log.logDebug(`isWalletPKReady  ===> ${this.connectedWalletPK}`);\n        return this.connectedWalletPK.length > 0;\n    }\n    makeJWT(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, jwt_1.signJWT)(topic, jwtconstants_1.OKXCONNECTOR_JWT_SIDE, jwtconstants_1.OKXCONNECTOR_JWT_TTL, // 24h\n            this.jwtKeyPair);\n        });\n    }\n    parsePackage(input_1) {\n        return __awaiter(this, arguments, void 0, function* (input, ignoreACK = false) {\n            var _a, _b, _c, _d, _e;\n            this.events.emit(input.id, input);\n            // send back ACK\n            if (!ignoreACK) {\n                yield this.sendACK(input.id, true);\n                let topic = (_a = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE)) === null || _a === void 0 ? void 0 : _a.content;\n                if (topic) {\n                    let inputObj = input;\n                    if ((_c = (_b = inputObj.params) === null || _b === void 0 ? void 0 : _b.data) === null || _c === void 0 ? void 0 : _c.messageId) {\n                        this.refreshPackageId();\n                        yield this.sendReceive(this.packageId.toString(), (_e = (_d = inputObj.params) === null || _d === void 0 ? void 0 : _d.data) === null || _e === void 0 ? void 0 : _e.messageId, topic);\n                    }\n                }\n            }\n        });\n    }\n    restoreConnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.reportLog('connection manager restore connection');\n            log.logDebug(`connectionManager  restoreConenct   ${topic}`);\n            if ((typeof topic !== 'string') || topic.length === 0) {\n                throw new Error('CONNECTION: invalid topic');\n            }\n            log.logDebug(`connectionManager  restoreConenct   disconnect`);\n            yield this.disconnect(true);\n            this.connectStorage.saveContent(topic, storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`connectionManager  restoreConenct   conect`);\n            yield this.connect(true);\n        });\n    }\n    getConnectInfo() {\n        var topic = (0, utils_1.generateTopic)();\n        log.logDebug(`generate topic token: ${topic}`);\n        log.reportLog('connection manager generate connection info');\n        this.currentTopic = topic;\n        const info = {\n            channelId: topic,\n            clientId: this.crypto.stringifyKeypair().publicKey,\n        };\n        return info;\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            this.timeLog = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---enter->\", this.timeLog);\n            log.reportLog('connection manager begin connect');\n            let lastConnectId = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            //1. generate topic & jwt\n            var topic = this.currentTopic;\n            log.logDebug(`generate topic token: ${topic}`);\n            // crypto keypair\n            if (fromRestore) {\n                if (typeof lastConnectId !== 'undefined' && lastConnectId !== null) {\n                    log.logDebug(`read last connect id: ${lastConnectId}`);\n                    topic = lastConnectId.content;\n                }\n                var cachedSenderPublicKey = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                if (cachedSenderPublicKey) {\n                    this.connectedWalletPK = cachedSenderPublicKey.content;\n                    (0, log_1.logDebug)(`connectionManager connect() this.connectedWalletPK : ${this.connectedWalletPK}`);\n                }\n                log.reportLog('connection manager do restore connection');\n            }\n            if (fromRestore) {\n                // recovery from cache\n                const keyPairInfo = this.getCachedCryptoKeyPair();\n                if (keyPairInfo) {\n                    this.crypto = new crypto_1.SessionCrypto(keyPairInfo);\n                }\n            }\n            log.logDebug(`use crypto client id: ${this.crypto.stringifyKeypair().publicKey}`);\n            // cache topic\n            this.connectStorage.saveContent(topic, storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            var jwtToken = yield this.makeJWT(topic);\n            log.logDebug(`generate jwt token: ${jwtToken}`);\n            this.connectStorage.saveContent(jwtToken, 'jwt');\n            return new Promise((resolve, reject) => {\n                // 1. when websocket opened\n                this.connector.onOpen(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug(`1. connector on open`);\n                    log.reportLog('1. connect ws open');\n                    const timeOne = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---open->\", timeOne - this.timeLog);\n                    //2. send jwt to login\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when login');\n                            log.reportLog('2. connect login failed');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // throw error\n                            reject(error);\n                        }\n                        //3. send subscribe\n                        this.refreshPackageId();\n                        this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                            // ack\n                            if (rsp && rsp.error) {\n                                log.logError('failed when subscribe');\n                                log.reportLog('3. connect subscribe failed');\n                                yield this.connector.disconnect();\n                                var error = new Error();\n                                error.message = rsp.error.message;\n                                error.name = rsp.error.code.toString();\n                                // throw error\n                                reject(error);\n                            }\n                            this.refreshPackageId();\n                            log.logDebug(`4. subscribe callback then send fetch: ${this.packageId}`);\n                            log.reportLog('4. subscribe callback then send fetch');\n                            const timeF = new Date().getTime();\n                            (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n                            // 4. fetch messages\n                            yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                            resolve();\n                        }));\n                        log.logDebug(`3. login callback then send subscribe: ${this.packageId}`);\n                        log.reportLog('3. connect subscribe failed');\n                        const timeTh = new Date().getTime();\n                        (0, log_1.logDebug)(\"ConnectTime---login callback->\", timeTh - this.timeLog);\n                        yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                            log.logDebug('CONNECT: reconnect before send');\n                            yield this.connector.connect()\n                                .catch((err) => {\n                                (0, log_1.logDebug)('ConnectionManager connect error', err);\n                                reject(err);\n                            });\n                        }), {\n                            id: this.packageId.toString(),\n                            jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                            method: commands_1.CONNECT_METHOD_SUB,\n                            params: {\n                                topic: topic\n                            }\n                        });\n                    }));\n                    log.logDebug(`2. login called`);\n                    log.reportLog('2. connection manager connect call login');\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        yield this.connector.connect()\n                            .catch((err) => {\n                            (0, log_1.logDebug)('ConnectionManager connect error', err);\n                            reject(err);\n                        });\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_LOGIN,\n                        params: {\n                            token: jwtToken\n                        }\n                    });\n                    // 4. listen when dapp back to front, receive wallet public key\n                    this.connector.addPackageParse((event) => {\n                        var _a;\n                        log.logDebug(`connect: parse package`);\n                        log.logDebug(event);\n                        if (!(\"params\" in event) || !(\"data\" in event[\"params\"])) {\n                            this.parsePackage(event, true);\n                            return;\n                        }\n                        let rawMsg = (_a = event.params.data) === null || _a === void 0 ? void 0 : _a.message;\n                        if (typeof rawMsg !== 'undefined') {\n                            rawMsg = rawMsg.replace(/'/g, '\"');\n                            let parsedMessage = (0, safejson_1.safeJsonParse)(rawMsg);\n                            if (typeof parsedMessage !== 'string' && \"clientId\" in parsedMessage && parsedMessage.clientId && parsedMessage.clientId.length > 0) {\n                                this.connectedWalletPK = parsedMessage.clientId;\n                                log.logDebug(`this.connectedWalletPK  addPackageParse   ${this.connectedWalletPK}`);\n                                // exchange sender public key\n                                // cache wallet public key\n                                this.connectStorage.saveContent(this.connectedWalletPK, storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                                // cache crypto keypair\n                                this.saveCryptoKeyPair(this.crypto.stringifyKeypair());\n                            }\n                        }\n                        // ignore receive echo\n                        this.parsePackage(event, event.method === commands_1.CONNECT_METHOD_RECEIVE);\n                    });\n                }));\n                this.connector.connect().catch((err) => {\n                    (0, log_1.logDebug)('ConnectionManager connect error', err);\n                    reject(err);\n                });\n            });\n        });\n    }\n    disconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            yield this.connector.disconnect();\n            log.reportLog('connect disconnect');\n            //clean cached topic\n            //如果是恢复连接，就不清理解密public key\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            if (!fromRestore) {\n                this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                this.connectedWalletPK = '';\n                (0, log_1.logDebug)(`connectionManager disconnect() this.connectedWalletPK : ${this.connectedWalletPK}`);\n            }\n        });\n    }\n    addListener(event, success, fail) {\n        this.connector.addListener((0, safejson_1.safeJsonStringify)(event), (rawMsg) => {\n            rawMsg = rawMsg.replace(/'/g, '\"');\n            log.logDebug(`addListener ===> ${rawMsg}`);\n            if (typeof rawMsg !== 'undefined') {\n                var msgObj = (0, safejson_1.safeJsonParse)(rawMsg);\n                var msg = msgObj.message;\n                let result;\n                if (msg.trimStart().startsWith('{')) {\n                    result = msg;\n                }\n                else {\n                    if (msgObj.clientId && msgObj.clientId.length > 0) {\n                        this.connectedWalletPK = msgObj.clientId;\n                        this.connectStorage.saveContent(this.connectedWalletPK, storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                        log.logDebug(`this.connectedWalletPK  addListener   ${this.connectedWalletPK}`);\n                        log.logDebug(`this.cryptoKey  addListener   ${(0, utils_1.toHexString)(this.crypto.keyPair.publicKey)}`);\n                        // cache crypto keypair\n                        this.saveCryptoKeyPair(this.crypto.stringifyKeypair());\n                    }\n                    result = this.crypto.decrypt(msg, this.connectedWalletPK);\n                }\n                log.logDebug(`addListener ===> ${result}`);\n                return result;\n            }\n            return undefined;\n        }, success, fail);\n    }\n    sendRaw(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`message send =====> ${msg}`);\n            log.reportLog('connect send raw msg');\n            let message = msg;\n            log.logDebug(`message send =====encrypt message.length>>>> ${message.length}`);\n            // only one topic\n            let topic = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`message send =====topic>>>> ${topic === null || topic === void 0 ? void 0 : topic.content}`);\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                method: commands_1.CONNECT_METHOD_PUBLISH,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                params: {\n                    message: {\n                        topic: topic === null || topic === void 0 ? void 0 : topic.content,\n                        message: message,\n                        ttl: constants_1.OKXCONNECTOR_MESSAGE_TTL\n                    }\n                } // crypted\n            };\n            this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                // ack\n                if (rsp && rsp.error) {\n                    log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                }\n                else if (rsp && !rsp.error) {\n                    log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                }\n            }));\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n            return this.packageId;\n        });\n    }\n    send(msg_1) {\n        return __awaiter(this, arguments, void 0, function* (msg, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL) {\n            // make send msg payload\n            log.logDebug(`message send =====> ${msg}`);\n            log.reportLog('connect send msg');\n            if (!this.isWalletPKReady()) {\n                // channel not ready\n                throw new Error('connection not finish');\n            }\n            let message = this.crypto.encrypt(msg, this.connectedWalletPK);\n            log.logDebug(`message send =====encrypt message.length>>>> ${message.length}`);\n            log.reportEvent(report_1.OKXReportType.LOG, 'msg_size', message.length.toString());\n            // only one topic\n            let topic = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`message send =====topic>>>> ${topic === null || topic === void 0 ? void 0 : topic.content}`);\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                method: commands_1.CONNECT_METHOD_PUBLISH,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                params: {\n                    message: {\n                        topic: topic === null || topic === void 0 ? void 0 : topic.content,\n                        message: message,\n                        ttl: ttl\n                    }\n                } // crypted\n            };\n            this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                // ack\n                if (rsp && rsp.error) {\n                    log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                }\n                else if (rsp && !rsp.error) {\n                    log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                }\n            }));\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n            return this.packageId;\n        });\n    }\n    sendACK(msgId_1, success_1) {\n        return __awaiter(this, arguments, void 0, function* (msgId, success, reason = undefined) {\n            if (success === true) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    result: true\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n            else if (reason) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    error: {\n                        code: reason.code, //int\n                        message: reason.message\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    // send receive\n    sendReceive(msgId, messageId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECEIVE,\n                params: {\n                    data: {\n                        messageId: messageId,\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendConnectSessionInfo(msgId, messageId, topic, params) {\n        return __awaiter(this, void 0, void 0, function* () {\n        });\n    }\n    // send receive\n    // 1. fetch all \n    // 2. send back receive\n    // 3. check has more, if so, repeat from 1st step\n    sendFetchAndConsumeMessages(msgId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(msgId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic == topic) {\n                                let messageId = msg.messageId;\n                                log.reportLog('5. get fetch result');\n                                yield this.connector.getMsgPayloadFromHistory(msg);\n                                // send receive command to relay server\n                                this.refreshPackageId();\n                                yield this.sendReceive(this.packageId.toString(), messageId, topic);\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            log.reportLog('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_FETCHMSG,\n                params: {\n                    data: {\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    cleanCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.reportLog('connection cache clean called');\n            this.connectStorage.clearCache();\n        });\n    }\n    saveSessionContent(key, data) {\n        if (!data) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(data);\n        this.connectStorage.encryptStoreMsg(jsonData, storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n    }\n    getSessionContent(key) {\n        let jsonStr = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        if (jsonStr) {\n            let object = (0, safejson_1.safeJsonParse)(jsonStr);\n            return object;\n        }\n        return undefined;\n    }\n    getCurrentConnectionReady() {\n        return this.isWalletPKReady();\n    }\n}\nexports.ConnectionManager = ConnectionManager;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectorState = exports.CONNECT_JSONRPC_VER = exports.OKXCONNECTOR_MESSAGE_TTL = exports.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE = exports.OKXCONNECTOR_WS_URL_LIST = exports.OKXCONNECTOR_WS_URL_IDX_KEY = exports.OKXCONNECTOR_WS_URL_3 = exports.OKXCONNECTOR_WS_URL_2 = exports.OKXCONNECTOR_WS_URL_1 = exports.EVENT_EMITTER_MAX_LISTENERS = void 0;\nexports.EVENT_EMITTER_MAX_LISTENERS = 10;\nexports.OKXCONNECTOR_WS_URL_1 = \"wss://wsdexpri.okx.com/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_2 = \"wss://wsdexpri.okx.ac/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_3 = \"wss://wsdexpri.coinall.ltd/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_IDX_KEY = \"wuik\";\nexports.OKXCONNECTOR_WS_URL_LIST = [\n    exports.OKXCONNECTOR_WS_URL_1,\n    exports.OKXCONNECTOR_WS_URL_2,\n    exports.OKXCONNECTOR_WS_URL_3,\n];\nexports.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE = {\n    TIME_OUT: 3990,\n    CANCELED: 3991,\n    FINISHED: 3992,\n};\nexports.OKXCONNECTOR_MESSAGE_TTL = 300000;\n// --------------- JSON RPC ---------------\nexports.CONNECT_JSONRPC_VER = \"2.0\";\nexports.ConnectorState = {\n    InitState: 0,\n    Connecting: 1,\n    Connected: 2,\n    Disconnected: 3,\n    OnError: 4,\n};\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Engine = void 0;\nconst safejson_1 = require(\"../utils/safejson\");\nconst log_1 = require(\"../utils/log\");\nconst protocol_1 = require(\"../protocol\");\n// import {standardDeeplink, tonConnectSdkVersion} from \"../../ton/tonsdk/constants/version\";\nconst utils_1 = require(\"../utils\");\nconst utils_2 = require(\"../utils\");\nconst sessionUtils_1 = require(\"./sessionUtils\");\nconst url_1 = require(\"../utils/url\");\nclass Engine {\n    constructor(connectionManager) {\n        this.pendingRequests = new Map();\n        this.disconnectListener = [];\n        this.connectionManager = connectionManager;\n        // report api begin\n        (0, log_1.getDefaultReporter)().beginReport();\n        this.connectionManager.addListener(\"sdk_response\", (event, msg) => {\n            var jsonResponse = (0, safejson_1.safeJsonParse)(msg);\n            (0, log_1.logDebug)(`Engine ==>> addListener ==> success ==> ${jsonResponse}`);\n            this.handleResponse(event, jsonResponse);\n        }, function () {\n        });\n    }\n    addDisconnectListener(disconnecter) {\n        this.disconnectListener.push(disconnecter);\n    }\n    setSessionConnectingListener(sessionConnectingListener) {\n        this.sessionConnectingListener = sessionConnectingListener;\n    }\n    disconnect() {\n        (0, log_1.logDebug)('Engine ==>> disconnect');\n        this.pendingRequests.clear();\n    }\n    getRequestId() {\n        const requestId = Date.now().toString();\n        (0, log_1.logDebug)('Engine ==>> getRequestId ==>', requestId);\n        return requestId;\n    }\n    bindRequestForPromise(requestId, resolve) {\n        this.pendingRequests.set(requestId, resolve);\n    }\n    send(request, requestAnswer, option, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('Engine ==>> send  request==>', JSON.stringify(request));\n            const requestId = this.getRequestId();\n            try {\n                let packageId = yield this.connectionManager.send(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId })), ttl);\n                this.connectionManager.events.once(packageId.toString(), (event) => {\n                    var _a;\n                    (0, log_1.logDebug)(`Engine ==> send => onAck => ${(0, safejson_1.safeJsonStringify)(event)}`);\n                    if (event && event.result) {\n                        (_a = requestAnswer.onAck) === null || _a === void 0 ? void 0 : _a.call(requestAnswer);\n                    }\n                });\n                if (requestAnswer.resolve) {\n                    this.bindRequestForPromise(requestId, requestAnswer.resolve);\n                }\n            }\n            catch (e) {\n                return Promise.reject(e);\n            }\n        });\n    }\n    sendSession(sessionInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('[Connect] sendSession called:', sessionInfo);\n            const requestId = this.getRequestId();\n            let request = {\n                method: 'session_info',\n                params: { sessionInfo: sessionInfo }\n            };\n            yield this.connectionManager.sendRaw(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId })));\n            // try {\n            //     let packageId = await callForSuccess(() =>\n            //         , option)\n            //     this.connectionManager.events.once(packageId.toString(),(event)=>{\n            //         logDebug(`Engine ==> send => onAck => ${safeJsonStringify(event)}`)\n            //         if (event && event.result){\n            //             requestAnswer.onAck?.()\n            //         }\n            //     })\n            //     if (requestAnswer.resolve){\n            //         this.bindRequestForPromise(requestId, requestAnswer.resolve)\n            //     }\n            // }catch (e) {\n            //     return Promise.reject(e)\n            // }\n        });\n    }\n    handleResponse(event, response) {\n        (0, log_1.logDebug)(`Engine ==>> handleResponse_1  ======>response: ${(0, safejson_1.safeJsonStringify)(response)}`, event);\n        if (\"requestId\" in response) {\n            (0, log_1.logDebug)(\"Engine ==>> handleResponse_2  ===> in response\");\n            let requestId = response.requestId;\n            const resolve = this.pendingRequests.get(requestId);\n            if (resolve) {\n                (0, log_1.logDebug)(\"Engine ==>> handleResponse_3  ===> find resolve:\", resolve);\n                resolve(response);\n                // 从pendingRequests中删除这个Promise\n                this.pendingRequests.delete(requestId);\n            }\n            else {\n                (0, log_1.logDebug)(\"Engine ==>> handleResponse_3  ===> not find resolve:\");\n                if (response.method === \"disconnect\") {\n                    this.disconnectListener.forEach(listener => listener());\n                    this.disconnectListener = [];\n                    this.disconnect();\n                }\n                else if (response.method === \"session_connecting\") {\n                    (0, log_1.logDebug)(\"Engine ==>> handleResponse_4  ===> sessionConnectingListener\");\n                    if (this.sessionConnectingListener) {\n                        (0, log_1.logDebug)(\"Engine ==>> handleResponse_4  ===> sessionConnectingListener not null\");\n                        this.sessionConnectingListener();\n                        this.sessionConnectingListener = undefined;\n                    }\n                }\n            }\n        }\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.restoreConnect(sessionInfo.topic));\n            onConnectResult(sessionInfo);\n        });\n    }\n    conect(request, sessionConfig, onConnectResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            const connectInfo = this.connectionManager.getConnectInfo();\n            const requestId = this.getRequestId();\n            let openUniversalLink = (_a = sessionConfig.openUniversalUrl) !== null && _a !== void 0 ? _a : false;\n            const connectRequest = {\n                protocolVer: Number(protocol_1.tonConnectSdkVersion),\n                topic: connectInfo.channelId,\n                clientId: connectInfo.clientId,\n                requestId: requestId,\n                dAppInfo: sessionConfig.dappInfo,\n                requests: request,\n            };\n            const connectRequestStr = JSON.stringify(connectRequest);\n            const utf8Array = new TextEncoder().encode(connectRequestStr);\n            const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n            const deeplinkUrl = `${protocol_1.standardDeeplink}?param=${base64Encoded}`;\n            (0, log_1.logDebug)('engine ==>> connect ==>>deeplinkUrl:', deeplinkUrl);\n            const isIOS = (0, utils_2.isIos)();\n            (0, log_1.logDebug)(`engine ==>> connect ==>>isIOS: ${isIOS}   openUniversalLink: ${openUniversalLink}`);\n            if (isIOS && openUniversalLink) {\n                (0, log_1.logDebug)('bridge-provider ==>> connect_3');\n                (0, utils_1.openOKXDeeplinkWithFallback)(deeplinkUrl);\n            }\n            yield ((_b = this.connectionManager) === null || _b === void 0 ? void 0 : _b.disconnect(false));\n            this.bindRequestForPromise(requestId, (response) => {\n                let session = this.onConnect(response, sessionConfig, connectInfo.channelId);\n                onConnectResult(session, response);\n            });\n            try {\n                yield this.connectionManager.connect();\n            }\n            catch (e) {\n                (0, log_1.logDebug)('Engine conect error', e);\n                throw e;\n            }\n            if (!isIOS && openUniversalLink) {\n                (0, log_1.logDebug)('bridge-provider ==>> connect_4');\n                (0, utils_1.openOKXDeeplinkWithFallback)(deeplinkUrl);\n            }\n            return {\n                connectInfo: connectInfo,\n                deeplinkUrl: (0, utils_1.getUniversalLink)(deeplinkUrl)\n            };\n        });\n    }\n    onConnect(connectResponse, sessionConfig, topic) {\n        if (connectResponse.method == \"connect\") {\n            let namespaces = (0, sessionUtils_1.buildNameSpacesByConnectResponse)(connectResponse);\n            if (namespaces) {\n                let session = {\n                    topic: topic,\n                    sessionConfig: sessionConfig,\n                    namespaces: namespaces\n                };\n                return session;\n            }\n        }\n        return null;\n    }\n    universalConnect(request, sessionConfig, connectInfoAndUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b, _c, _d, _e;\n                try {\n                    (0, log_1.logDebug)(\"engine universalConnect request :\", JSON.stringify(request));\n                    (0, log_1.logDebug)(\"engine universalConnect sessionConfig :\", JSON.stringify(sessionConfig));\n                    let tonRequest = [];\n                    let universalRequest = [];\n                    request.forEach((item) => {\n                        let name = item.name;\n                        if (name.startsWith(\"requestAccounts\")) {\n                            universalRequest.push(item);\n                        }\n                        else if (name.startsWith(\"ton\")) {\n                            tonRequest.push(item);\n                        }\n                    });\n                    (0, log_1.logDebug)(\"engine universalConnect tonRequest :\", JSON.stringify(tonRequest));\n                    (0, log_1.logDebug)(\"engine universalConnect universalRequest :\", JSON.stringify(universalRequest));\n                    const connectInfo = this.connectionManager.getConnectInfo();\n                    const requestId = this.getRequestId();\n                    let openUniversalLink = (_a = sessionConfig.openUniversalUrl) !== null && _a !== void 0 ? _a : false;\n                    const universalConnectRequest = {\n                        protocolVer: Number(protocol_1.tonConnectSdkVersion),\n                        topic: connectInfo.channelId,\n                        clientId: connectInfo.clientId,\n                        requestId: requestId,\n                        dAppInfo: sessionConfig.dappInfo,\n                        requests: universalRequest,\n                        redirect: (_b = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _b !== void 0 ? _b : \"none\"\n                    };\n                    const base64Encoded = (0, url_1.encodeConnectParams)(universalConnectRequest);\n                    universalConnectRequest.redirect = (_c = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _c !== void 0 ? _c : \"none\";\n                    const tonConnectRequest = {\n                        protocolVer: Number(protocol_1.tonConnectSdkVersion),\n                        topic: connectInfo.channelId,\n                        clientId: connectInfo.clientId,\n                        requestId: requestId,\n                        dAppInfo: sessionConfig.dappInfo,\n                        requests: tonRequest,\n                        redirect: (_d = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _d !== void 0 ? _d : \"none\"\n                    };\n                    let isFromTonSDK = false;\n                    if (tonRequest.length > 0) { //from tonsdk\n                        isFromTonSDK = true;\n                    }\n                    let defaultConnectRequest = isFromTonSDK ? tonConnectRequest : universalConnectRequest;\n                    (0, log_1.logDebug)('engine universalConnect ==>>defaultConnectRequest:', isFromTonSDK, JSON.stringify(defaultConnectRequest));\n                    var openOKXLink = \"\";\n                    // open app wallet\n                    if (openUniversalLink) {\n                        openOKXLink = (0, url_1.getOKXLink)(defaultConnectRequest, sessionConfig.useMini, sessionConfig.tmaReturnUrl);\n                        (0, log_1.logDebug)('engine universalConnect ==>>openOKXLink:', openOKXLink);\n                    }\n                    const openMethod = () => sessionConfig.useMini ? (0, url_1.openOKXTMAWalletlinkWithFallback)(openOKXLink) :\n                        (0, utils_1.useShortLink)() ? (0, utils_1.openOKXUniversalLink)(openOKXLink) : (0, utils_1.openOKXDeeplinkWithFallback)(openOKXLink);\n                    (0, log_1.logDebug)('engine universalConnect ==>>openOKXLink:', openOKXLink);\n                    const isIOS = (0, utils_2.isIos)();\n                    if (isIOS && openUniversalLink) {\n                        (0, log_1.logDebug)(`engine universalConnect ==>>isIOS: ${isIOS}   openUniversalLink: ${openUniversalLink}`);\n                        openMethod();\n                    }\n                    yield ((_e = this.connectionManager) === null || _e === void 0 ? void 0 : _e.disconnect(false));\n                    this.bindRequestForPromise(requestId, (response) => {\n                        var _a, _b, _c, _d;\n                        try {\n                            let connectResponse = response;\n                            if (connectResponse.method == \"connect\") {\n                                (0, log_1.logDebug)(\"engin  universalConnect success connectResponse:>>>\", JSON.stringify(connectResponse));\n                                let namespaces = (0, sessionUtils_1.buildNameSpacesByConnectResponse)(connectResponse);\n                                if (namespaces) {\n                                    let walletName = undefined;\n                                    if (((_b = (_a = connectResponse.payload) === null || _a === void 0 ? void 0 : _a.responses) === null || _b === void 0 ? void 0 : _b[0]) && \"walletName\" in connectResponse.payload.responses[0]) {\n                                        walletName = connectResponse.payload.responses[0]['walletName'];\n                                    }\n                                    let session = {\n                                        topic: connectInfo.channelId,\n                                        sessionConfig: sessionConfig,\n                                        namespaces: namespaces,\n                                        wallet: Object.assign(Object.assign({}, (_c = connectResponse.payload) === null || _c === void 0 ? void 0 : _c.wallet), { walletName: walletName }),\n                                    };\n                                    let methodsResponse = connectResponse.payload.responses.find(item => item.name === 'requestAccounts');\n                                    if (methodsResponse && methodsResponse.connectRequestMethods) {\n                                        session.signResponse = methodsResponse.connectRequestMethods;\n                                    }\n                                    (0, log_1.logDebug)(\"engin  universalConnect success session:>>>\", JSON.stringify(session));\n                                    resolve(session);\n                                }\n                                else {\n                                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n                                }\n                            }\n                            else if (connectResponse.method == \"connect_error\" && ((_d = connectResponse.payload) === null || _d === void 0 ? void 0 : _d.code)) {\n                                throw new protocol_1.OKXConnectError(connectResponse.payload.code);\n                            }\n                        }\n                        catch (e) {\n                            reject(e);\n                        }\n                    });\n                    try {\n                        yield this.connectionManager.connect();\n                    }\n                    catch (e) {\n                        (0, log_1.logDebug)('Engine universalConnect error', e);\n                        throw e;\n                    }\n                    if (!isIOS && openUniversalLink) {\n                        openMethod();\n                    }\n                    (0, log_1.logDebug)('engin  universalConnect ==>> connectInfoAndUrl:', connectInfoAndUrl);\n                    this.sendSession(base64Encoded);\n                    if (connectInfoAndUrl) {\n                        const info = {\n                            connectRequest: universalConnectRequest,\n                            redirect: sessionConfig.redirect,\n                            tmaReturnUrl: sessionConfig.tmaReturnUrl,\n                        };\n                        if (isFromTonSDK) {\n                            info.tonConnectRequest = tonConnectRequest;\n                        }\n                        (0, log_1.logDebug)(\"universalConnect connectInfoAndUrl info :\", JSON.stringify(info));\n                        connectInfoAndUrl(info);\n                    }\n                }\n                catch (error) {\n                    (0, log_1.logDebug)(\"Engine universalConnect catch error\", error);\n                    reject(error);\n                }\n            }));\n        });\n    }\n}\nexports.Engine = Engine;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = exports.Engine = exports.WalletConnectionManager = exports.ConnectionManager = exports.OKXWalletConnector = void 0;\nvar connect_1 = require(\"./connect\");\nObject.defineProperty(exports, \"OKXWalletConnector\", { enumerable: true, get: function () { return connect_1.OKXWalletConnector; } });\nvar connectionManager_1 = require(\"./connectionManager\");\nObject.defineProperty(exports, \"ConnectionManager\", { enumerable: true, get: function () { return connectionManager_1.ConnectionManager; } });\nvar walletConnectionManager_1 = require(\"./walletConnectionManager\");\nObject.defineProperty(exports, \"WalletConnectionManager\", { enumerable: true, get: function () { return walletConnectionManager_1.WalletConnectionManager; } });\nvar engine_1 = require(\"./engine\");\nObject.defineProperty(exports, \"Engine\", { enumerable: true, get: function () { return engine_1.Engine; } });\nvar storage_1 = require(\"./storage\");\nObject.defineProperty(exports, \"Storage\", { enumerable: true, get: function () { return storage_1.Storage; } });\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MULTICODEC_ED25519_LENGTH = exports.MULTICODEC_ED25519_HEADER = exports.MULTICODEC_ED25519_BASE = exports.MULTICODEC_ED25519_ENCODING = exports.DID_METHOD = exports.DID_PREFIX = exports.DID_DELIMITER = exports.KEY_PAIR_SEED_LENGTH = exports.DATA_ENCODING = exports.JSON_ENCODING = exports.JWT_ENCODING = exports.JWT_DELIMITER = exports.JWT_IRIDIUM_TYP = exports.JWT_IRIDIUM_ALG = exports.JWTHeaderType = void 0;\nexports.generateKeyPair = generateKeyPair;\nexports.decodeJSON = decodeJSON;\nexports.encodeJSON = encodeJSON;\nexports.encodeIss = encodeIss;\nexports.decodeIss = decodeIss;\nexports.encodeSig = encodeSig;\nexports.decodeSig = decodeSig;\nexports.encodeData = encodeData;\nexports.decodeData = decodeData;\nexports.encodeJWT = encodeJWT;\nexports.decodeJWT = decodeJWT;\nexports.signJWT = signJWT;\nexports.verifyJWT = verifyJWT;\nconst ed25519 = __importStar(require(\"@stablelib/ed25519\"));\nconst safejson_1 = require(\"../utils/safejson\");\nconst utils_1 = require(\"../utils/utils\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst log = __importStar(require(\"../utils/log\"));\nconst stringUtils_1 = require(\"../utils/stringUtils\");\nexports.JWTHeaderType = \"dapp\";\nexports.JWT_IRIDIUM_ALG = \"EdDSA\";\nexports.JWT_IRIDIUM_TYP = \"JWT\";\nexports.JWT_DELIMITER = \".\";\nexports.JWT_ENCODING = \"base64url\";\nexports.JSON_ENCODING = \"utf8\";\nexports.DATA_ENCODING = \"utf8\";\nexports.KEY_PAIR_SEED_LENGTH = 32;\nexports.DID_DELIMITER = \":\";\nexports.DID_PREFIX = \"did\";\nexports.DID_METHOD = \"key\";\nexports.MULTICODEC_ED25519_ENCODING = \"base58btc\";\nexports.MULTICODEC_ED25519_BASE = \"z\";\nexports.MULTICODEC_ED25519_HEADER = \"K36\";\nexports.MULTICODEC_ED25519_LENGTH = 32;\nfunction generateKeyPair() {\n    // let local_seed = randomBytes(KEY_PAIR_SEED_LENGTH)\n    // return ed25519.generateKeyPairFromSeed(local_seed);\n    return tweetnacl_1.default.sign.keyPair();\n}\nfunction decodeJSON(str) {\n    return (0, safejson_1.safeJsonParse)((0, stringUtils_1.okxtoString)((0, stringUtils_1.okxfromString)(str, exports.JWT_ENCODING), exports.JSON_ENCODING));\n}\nfunction encodeJSON(val) {\n    return (0, stringUtils_1.okxtoString)((0, stringUtils_1.okxfromString)((0, safejson_1.safeJsonStringify)(val), exports.JSON_ENCODING), exports.JWT_ENCODING);\n}\nfunction encodeIss(publicKey) {\n    log.logDebug(`publicKey: ${(0, utils_1.toHexString)(publicKey)}`);\n    var publicKeyStr = (0, stringUtils_1.okxtoString)(publicKey, exports.MULTICODEC_ED25519_ENCODING);\n    return [exports.DID_PREFIX, exports.DID_METHOD, publicKeyStr].join(exports.DID_DELIMITER);\n}\nfunction decodeIss(issuer) {\n    const [prefix, method, multicodec] = issuer.split(exports.DID_DELIMITER);\n    if (prefix !== exports.DID_PREFIX || method !== exports.DID_METHOD) {\n        throw new Error(`Issuer must be a DID with method \"key\"`);\n    }\n    if (multicodec === undefined) {\n        throw new Error('multicodec is undefined');\n    }\n    const publicKey = (0, stringUtils_1.okxfromString)(multicodec, exports.MULTICODEC_ED25519_ENCODING);\n    if (publicKey === undefined || publicKey.length !== exports.MULTICODEC_ED25519_LENGTH) {\n        throw new Error(`Issuer must be a public key with length 32 bytes`);\n    }\n    return publicKey;\n}\n// ---------- Signature ----------------------------------------------- //\nfunction encodeSig(bytes) {\n    return (0, stringUtils_1.okxtoString)(bytes, exports.JWT_ENCODING);\n}\nfunction decodeSig(encoded) {\n    return (0, stringUtils_1.okxfromString)(encoded, exports.JWT_ENCODING);\n}\n// ---------- Data ----------------------------------------------- //\nfunction encodeData(params) {\n    return (0, stringUtils_1.okxfromString)([encodeJSON(params.header), encodeJSON(params.payload)].join(exports.JWT_DELIMITER), exports.DATA_ENCODING);\n}\nfunction decodeData(data) {\n    var _a, _b;\n    const params = (0, stringUtils_1.okxtoString)(data, exports.DATA_ENCODING).split(exports.JWT_DELIMITER);\n    const header = decodeJSON((_a = params[0]) !== null && _a !== void 0 ? _a : '{}');\n    const payload = decodeJSON((_b = params[1]) !== null && _b !== void 0 ? _b : '{}');\n    return { header, payload };\n}\n// ---------- JWT ----------------------------------------------- //\nfunction encodeJWT(params) {\n    return [encodeJSON(params.header), encodeJSON(params.payload), encodeSig(params.signature)].join(exports.JWT_DELIMITER);\n}\nfunction decodeJWT(jwt) {\n    var _a, _b, _c;\n    const params = jwt.split(exports.JWT_DELIMITER);\n    const header = decodeJSON((_a = params[0]) !== null && _a !== void 0 ? _a : '{}');\n    const payload = decodeJSON((_b = params[1]) !== null && _b !== void 0 ? _b : '{}');\n    const signature = decodeSig((_c = params[2]) !== null && _c !== void 0 ? _c : '{}');\n    const data = (0, stringUtils_1.okxfromString)(params.slice(0, 2).join(exports.JWT_DELIMITER), exports.DATA_ENCODING);\n    return { header, payload, signature, data };\n}\nfunction signJWT(sub_1, aud_1, ttl_1, keyPair_1) {\n    return __awaiter(this, arguments, void 0, function* (sub, aud, ttl, keyPair, iat = Math.floor(Date.now())) {\n        const header = { alg: exports.JWT_IRIDIUM_ALG, typ: exports.JWT_IRIDIUM_TYP };\n        const iss = encodeIss(keyPair.publicKey);\n        const exp = iat + ttl;\n        const act = \"authenticate user\";\n        const payload = { iss, sub, aud, act, iat, exp };\n        const data = encodeData({ header, payload });\n        // const signature = ed25519.sign(keyPair.secretKey, data);\n        log.logDebug(`get sec kp: ${keyPair.secretKey} {${keyPair.secretKey.length}}`);\n        const signature = tweetnacl_1.default.sign.detached(data, keyPair.secretKey);\n        return encodeJWT({ header, payload, signature });\n    });\n}\nfunction verifyJWT(jwt) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { header, payload, data, signature } = decodeJWT(jwt);\n        if (header.alg !== exports.JWT_IRIDIUM_ALG || header.typ !== exports.JWT_IRIDIUM_TYP) {\n            throw new Error(\"JWT must use EdDSA algorithm\");\n        }\n        const publicKey = decodeIss(payload.iss);\n        return ed25519.verify(publicKey, data, signature);\n    });\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCONNECTOR_JWT_TTL = exports.OKXCONNECTOR_JWT_WALLET_SIDE = exports.OKXCONNECTOR_JWT_SIDE = void 0;\nexports.OKXCONNECTOR_JWT_SIDE = \"wallet\";\nexports.OKXCONNECTOR_JWT_WALLET_SIDE = \"dapp\";\nexports.OKXCONNECTOR_JWT_TTL = 86400000;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildNameSpacesByConnectResponse = buildNameSpacesByConnectResponse;\nexports.buildRequestAccountNameSpacesByConnectResponse = buildRequestAccountNameSpacesByConnectResponse;\nconst log_1 = require(\"../utils/log\");\nfunction buildNameSpacesByConnectResponse(connectResponse) {\n    let requestAccountNameSpaces = buildRequestAccountNameSpacesByConnectResponse(connectResponse);\n    return requestAccountNameSpaces;\n}\nfunction buildRequestAccountNameSpacesByConnectResponse(connectResponse) {\n    let result = {};\n    (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start connectResponse>>', JSON.stringify(connectResponse));\n    let universalResponse = connectResponse.payload.responses.find(item => item.name === 'requestAccounts');\n    const tonAddress = connectResponse.payload.responses.find(item => item.name === 'ton_addr');\n    const tonProof = connectResponse.payload.responses.find(item => item.name === 'ton_proof');\n    if (tonAddress && !universalResponse) { //adapt tonsdk\n        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse adapt ton data >>');\n        let address = tonAddress.address;\n        address = 'ton:' + tonAddress.network + \":\" + address;\n        let data = {\n            ton_addr: tonAddress\n        };\n        if (tonProof) {\n            data.ton_proof = tonProof;\n        }\n        universalResponse = {\n            name: \"requestAccounts\",\n            accounts: [{\n                    namespace: 'ton',\n                    addresses: [address],\n                    methods: ['ton_sendTransaction'],\n                    extra: {},\n                    data: data,\n                }]\n        };\n    }\n    (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse end universalResponse>>>', JSON.stringify(universalResponse));\n    universalResponse.accounts.forEach(item => {\n        var chains = [];\n        var accounts = [];\n        item.addresses.forEach(addressItem => {\n            var addressArr = addressItem.split(\":\");\n            (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse addressArr>>', addressArr.length);\n            if (addressArr.length >= 3) {\n                let chain = addressArr.slice(0, 2).join(\":\");\n                chains.push(chain);\n                accounts.push(addressItem);\n                (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse chain:>>', chain, \"addressItem:\", addressItem);\n            }\n        });\n        if (item.data && item.data.ton_addr) {\n            item.data.ton_addr.name = 'ton_addr';\n        }\n        if (item.data && item.data.ton_proof) {\n            item.data.ton_proof.name = 'ton_proof';\n        }\n        result[item.namespace] = {\n            chains: chains,\n            accounts: accounts,\n            methods: item.methods,\n            extra: item.extra,\n            payload: item.data\n        };\n        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse result>>', JSON.stringify(result));\n    });\n    return result;\n}\n/*export function buildTonNameSpaceByConnectResponse(connectResponse: ConnectResponseSuccess): Namespaces | undefined {\n    const tonAddrItem: TonAddressItemReply = connectResponse.payload.responses.find(\n        item => item.name === 'ton_addr'\n    ) as TonAddressItemReply;\n\n    const tonProfItem: TonProofItemReply = connectResponse.payload.responses.find(\n        item => item.name === 'ton_proof'\n    ) as TonProofItemReply;\n\n    if (!tonAddrItem) {\n        return undefined\n    }\n\n    return {\n        NameSpaceKeyTON: {\n            chains: [tonAddrItem.network],\n            accounts: [],\n            methods: connectResponse.payload.wallet.features?.ton,\n            payload: {\n                tonAccount: {\n                    address: tonAddrItem.address,\n                    chain: tonAddrItem.network,\n                    walletStateInit: tonAddrItem.walletStateInit,\n                    publicKey: tonAddrItem.publicKey\n                },\n                tonProof: tonProfItem\n            }\n        }\n    }\n}*/\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = void 0;\nconst storageconstants_1 = require(\"./storageconstants\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst utils_1 = require(\"../utils/utils\");\nconst utils_2 = require(\"../utils\");\nconst log = __importStar(require(\"../utils/log\"));\nconst utils_3 = require(\"../utils\");\nconst crypto_js_1 = require(\"crypto-js\");\nclass Storage {\n    constructor(subKey, beforeKey = undefined) {\n        const localStorage = (0, utils_1.resolveLocalStorage)();\n        // 0. check and upgrade beforeKey\n        log.logDebug('------ update before cache ------');\n        if (beforeKey) {\n            this.checkAndUpgradeCache(beforeKey, subKey);\n        }\n        // 1. load data from local storage\n        this.storeKey = '';\n        this.cipherIV = '';\n        this.subKey = subKey;\n        log.logDebug('--------get current local storage --------');\n        log.logDebug(localStorage);\n        const cacheStr = localStorage.getItem(Storage.cacheKey + subKey);\n        if (typeof cacheStr === \"undefined\" || cacheStr === null) {\n            log.logDebug(\"with no cache\");\n            this.cache = {};\n            return;\n        }\n        log.logDebug(cacheStr);\n        if ((cacheStr === null || cacheStr === void 0 ? void 0 : cacheStr.length) > 0) {\n            var cacheObj = (0, utils_2.safeJsonParse)(cacheStr);\n            this.cache = cacheObj;\n        }\n        log.logDebug(`get cache obj: ${this.cache}`);\n        if (typeof this.cache === 'undefined' || this.cache == null) {\n            this.cache = {};\n        }\n    }\n    checkAndUpgradeCache(fromCacheKey, toCacheKey) {\n        if (fromCacheKey && fromCacheKey.length > 0 && toCacheKey && toCacheKey.length > 0) {\n            // 1. get all infos from from-cache-key\n            log.logDebug('--------get current local storage --------');\n            log.logDebug(localStorage);\n            const cacheStr = localStorage.getItem(Storage.cacheKey + fromCacheKey);\n            if (typeof cacheStr === \"undefined\" || cacheStr === null) {\n                log.logDebug(\"no pre cache content\");\n                return;\n            }\n            log.logDebug(cacheStr);\n            if ((cacheStr === null || cacheStr === void 0 ? void 0 : cacheStr.length) > 0) {\n                // 2. save to to-cache-key\n                log.logDebug(\"write in cache content: \", fromCacheKey, '->', toCacheKey);\n                localStorage.setItem(Storage.cacheKey + toCacheKey, cacheStr);\n                // 3. clean from item\n                log.logDebug(\"clean in cache content: \", fromCacheKey);\n                localStorage.removeItem(Storage.cacheKey + fromCacheKey);\n            }\n        }\n        else {\n            log.logDebug('no pre cache key:', fromCacheKey);\n        }\n    }\n    saveContent(content, key, id = '-') {\n        let item = {\n            id: id,\n            timestamp: Date.now().toString(),\n            content: content\n        };\n        this.saveItem(item, key);\n    }\n    saveItem(item, key) {\n        let localKey = Storage.cacheKey + this.subKey;\n        const localStorage = (0, utils_1.resolveLocalStorage)();\n        log.logDebug(this.cache);\n        log.logDebug(`get cache obj: ${this.cache}, ${key}, ${item}`);\n        this.cache[key] = item;\n        let totalCacheStr = (0, utils_2.safeJsonStringify)(this.cache);\n        log.logDebug(`STORAGE: ${key} @ ${this.cache}`);\n        localStorage.setItem(localKey, totalCacheStr);\n    }\n    getItem(key) {\n        log.logDebug(`STORAGE >> getItem: ${key} @ ${this.cache}`);\n        return this.cache[key];\n    }\n    getCachedPBKDF2InfoKey() {\n        var _a, _b, _c, _d;\n        const pwLen = 32;\n        const saltLen = 24;\n        if (this.storeKey.length > 0 && ((_a = this.cipherIV) === null || _a === void 0 ? void 0 : _a.length) > 0) {\n            return {\n                pw: this.storeKey,\n                iv: this.cipherIV\n            };\n        }\n        let salt = (_b = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGER_CRYPTO_SALT)) === null || _b === void 0 ? void 0 : _b.content;\n        if (!salt) {\n            salt = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(saltLen));\n            this.saveContent(salt, storageconstants_1.OKXCONNECTOR_STORAGER_CRYPTO_SALT);\n        }\n        let pw = (_c = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD)) === null || _c === void 0 ? void 0 : _c.content;\n        if (!pw) {\n            pw = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(pwLen));\n            this.saveContent(pw, storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD);\n        }\n        let cipherIV = (_d = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV)) === null || _d === void 0 ? void 0 : _d.content;\n        if (!cipherIV) {\n            // let ivBuffer = Buffer.from(nacl.randomBytes(16))\n            let ivBuffer = tweetnacl_1.default.randomBytes(16);\n            cipherIV = (0, utils_1.toHexString)(ivBuffer);\n            this.saveContent(cipherIV, storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV);\n        }\n        this.cipherIV = cipherIV;\n        this.storeKey = (0, crypto_js_1.PBKDF2)(pw, salt, { iterations: 10 }).toString();\n        return {\n            pw: this.storeKey,\n            iv: this.cipherIV\n        };\n    }\n    encryptStoreMsg(msg, key) {\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg start ${Date.now()}`);\n        let storeInfo = this.getCachedPBKDF2InfoKey();\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg mid ${Date.now()}`);\n        var result = crypto_js_1.AES.encrypt(msg, storeInfo.pw).toString();\n        this.saveContent(result, key);\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg end ${Date.now()}`);\n    }\n    getAndDecrypt(key) {\n        (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt start ${Date.now()}`);\n        let item = this.getItem(key);\n        if (item && item.content) {\n            let storeInfo = this.getCachedPBKDF2InfoKey();\n            (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt mid ${Date.now()}`);\n            let result = crypto_js_1.AES.decrypt(item.content, storeInfo.pw).toString(crypto_js_1.enc.Utf8);\n            (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt end ${Date.now()}`);\n            return result;\n        }\n        return null;\n    }\n    clearCache(key = undefined) {\n        if (key === undefined) {\n            // clean all\n            this.cache = {};\n            let localKey = Storage.cacheKey + this.subKey;\n            localStorage.setItem(localKey, '');\n        }\n        else {\n            let localKey = Storage.cacheKey + this.subKey;\n            const localStorage = (0, utils_1.resolveLocalStorage)();\n            log.logDebug(this.cache);\n            this.cache[key] = null;\n            let totalCacheStr = (0, utils_2.safeJsonStringify)(this.cache);\n            log.logDebug(`STORAGE: clean key ${key} @ ${this.cache}`);\n            localStorage.setItem(localKey, totalCacheStr);\n        }\n    }\n}\nexports.Storage = Storage;\nStorage.cacheKey = 'OKXStorageKey';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCONNECTOR_STORAGE_CIPHER_METHOD = exports.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV = exports.OKXCONNECTOR_STORAGER_CRYPTO_SALT = exports.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD = exports.OKXCONNECTOR_TON_KEY = exports.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE = exports.OKXCONNECTOR_TOKEN_CACHE = exports.OKXCONNECTOR_JWT_KEY = exports.OKXCONNECTOR_SESSION_PREFIX_KEY = exports.OKXCONNECTOR_CRYPTO_KEY = exports.OKXCONNECTOR_CACHE_KEY_DAPP = exports.OKXCONNECTOR_CACHE_KEY = void 0;\nexports.OKXCONNECTOR_CACHE_KEY = \"ck\";\nexports.OKXCONNECTOR_CACHE_KEY_DAPP = \"ck_dapp\";\nexports.OKXCONNECTOR_CRYPTO_KEY = \"cck_k\";\nexports.OKXCONNECTOR_SESSION_PREFIX_KEY = \"cspk_\";\nexports.OKXCONNECTOR_JWT_KEY = \"cjk_k\";\nexports.OKXCONNECTOR_TOKEN_CACHE = \"ct\";\nexports.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE = \"csp\";\nexports.OKXCONNECTOR_TON_KEY = \"OKXStorage_ctc\";\nexports.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD = \"scp\";\nexports.OKXCONNECTOR_STORAGER_CRYPTO_SALT = \"scs\";\nexports.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV = \"scpc\";\nexports.OKXCONNECTOR_STORAGE_CIPHER_METHOD = \"aes-256-cbc\";\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnectionManagerEvent = exports.WalletConnectionManagerTopicInfoCacheKey = void 0;\nexports.WalletConnectionManagerTopicInfoCacheKey = \"wcmtic\";\nexports.WalletConnectionManagerEvent = {\n    RECEIVE_REQUEST: \"payload\"\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnectionManager = void 0;\nconst connect_1 = require(\"./connect\");\nconst commands_1 = require(\"./commands\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst jwtconstants_1 = require(\"./jwtconstants\");\nconst constants_1 = require(\"./constants\");\nconst walletConnectionConstants_1 = require(\"./walletConnectionConstants\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils/utils\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst jwt_1 = require(\"./jwt\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst utils_2 = require(\"../utils\");\nclass WalletConnectionManager {\n    constructor() {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.communicateEvents = new eventemitter3_1.EventEmitter();\n        log.logDebug('connect manager construct');\n        // local storage\n        this.connectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n        // this.crypto = new SessionCrypto()\n        this.jwtKeyPair = this.getCachedJWTKeyPair();\n        this.saveJWTKeyPair(this.jwtKeyPair);\n        // wss connection\n        this.connector = new connect_1.OKXWalletConnector(constants_1.OKXCONNECTOR_WS_URL_1);\n        this.packageId = Date.now();\n        // connection state\n        this.sessionCryptoInfoMap = new Map();\n        // log.logDebug(`this.connectedWalletPK  constructor   ${this.connectedWalletPK}`)\n        this.inLogin = false;\n        this.isLogined = false;\n    }\n    refreshPackageId(offset = 0) {\n        this.packageId = Date.now() + offset;\n    }\n    saveCryptoKeyPair(topicId, keyPair) {\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(keyPair);\n        // encrypt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_CRYPTO_KEY + topicId);\n    }\n    getCachedCryptoKeyPair(topicId) {\n        // decrypt kp\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_CRYPTO_KEY + topicId);\n        const content = kp;\n        if (typeof content == 'string') {\n            log.logDebug('get cached crypto key:');\n            log.logDebug(content);\n            let keyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            return keyPairInfo;\n        }\n        else {\n            this.connectStorage.clearCache();\n        }\n        return null;\n    }\n    saveJWTKeyPair(keyPair) {\n        var strkeyPair = {\n            publicKey: (0, utils_1.toHexString)(keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(keyPair.secretKey)\n        };\n        log.logDebug('save jwt kp');\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(strkeyPair);\n        log.logDebug(cacheInfo);\n        // encrypt jwt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        log.logDebug('after save jwt kp');\n    }\n    getCachedJWTKeyPair() {\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            // TODO: decrypt jwt kp\n            log.logDebug('get cached jwt kp:');\n            log.logDebug(content);\n            let strKeyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            log.logDebug('save jwt kp');\n            log.logDebug(strKeyPairInfo);\n            var keyPair = {\n                publicKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.publicKey),\n                secretKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.secretKey)\n            };\n            return keyPair;\n        }\n        else {\n            return (0, jwt_1.generateKeyPair)();\n        }\n    }\n    isTopicPublicKeyExist(topicId) {\n        log.logDebug(`isTopicPublicKeyExist  ===> ${topicId}`);\n        return this.sessionCryptoInfoMap.get(topicId);\n    }\n    makeJWT(timestampStr) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, jwt_1.signJWT)(timestampStr, jwtconstants_1.OKXCONNECTOR_JWT_WALLET_SIDE, jwtconstants_1.OKXCONNECTOR_JWT_TTL, // 24h\n            this.jwtKeyPair);\n        });\n    }\n    parseInternalMsg(internalMsg) {\n        try {\n            let internalObj = (0, safejson_1.safeJsonParse)(internalMsg);\n            let origin = internalObj['ivur-igbfft-ptjip'];\n            if (origin && origin.length > 0) {\n                let originContent = (0, utils_2.base64decode)(origin, true);\n                return originContent.toString();\n            }\n        }\n        catch (error) {\n            log.logError('parse internal msg', error);\n        }\n    }\n    updateClientId(topic, clientId) {\n        let sessionInfo = this.sessionCryptoInfoMap.get(topic);\n        (0, log_1.logDebug)('updateClientId', sessionInfo, topic, clientId);\n        if (sessionInfo && clientId && clientId.length > 0) {\n            if (sessionInfo.cid) {\n                // check\n                let lastCheck = (0, utils_1.getLastSixMd5Hash)(clientId);\n                if (sessionInfo.cid == lastCheck) {\n                    sessionInfo.dappPublicKey = clientId;\n                }\n                else {\n                    log.logError('cid check failed', sessionInfo, topic, clientId);\n                }\n            }\n            else {\n                sessionInfo.dappPublicKey = clientId;\n            }\n            // \n            this.syncCacheSessionInfo();\n        }\n        return false;\n    }\n    parsePackage(topic_1, input_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, input, ignoreACK = false) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;\n            this.events.emit(input.id, input);\n            // emit event\n            let sessionInfo = this.sessionCryptoInfoMap.get(topic);\n            log.logDebug('get sessionInfo for decrypt topic:', topic);\n            log.logDebug('get sessionInfo for decrypt:', input.id, topic, sessionInfo, this.sessionCryptoInfoMap);\n            if (sessionInfo && input.params.data) {\n                if ((_a = input.params.data) === null || _a === void 0 ? void 0 : _a.message) {\n                    // try parse internal message\n                    if ((_b = input.params.data) === null || _b === void 0 ? void 0 : _b.isInternalData) {\n                        let inner_message = (_c = input.params.data) === null || _c === void 0 ? void 0 : _c.message;\n                        let inner_topic = (_d = input.params.data) === null || _d === void 0 ? void 0 : _d.topic;\n                        let originContent = this.parseInternalMsg(inner_message);\n                        (0, log_1.logDebug)('parse internal origin: ', originContent);\n                        if (originContent && originContent.length > 0) {\n                            this.communicateEvents.emit(\"origin\", originContent, inner_topic);\n                        }\n                    }\n                    else {\n                        // try parse message base64\n                        try {\n                            let message = (_e = input.params.data) === null || _e === void 0 ? void 0 : _e.message;\n                            if (message.trimStart().startsWith('{')) {\n                                let messageObj = (0, safejson_1.safeJsonParse)(message);\n                                if (messageObj.method) {\n                                    if (messageObj.method == 'session_info') {\n                                        let sessionInfoString = messageObj.params.sessionInfo;\n                                        let base64Content = (0, utils_2.base64decode)(sessionInfoString, false);\n                                        (0, log_1.logDebug)(\"wallet connection manager requset base64Content:\", base64Content);\n                                        (0, log_1.logDebug)(\"base64Content:\" + base64Content);\n                                        let inner_connection = base64Content.toObject();\n                                        this.updateClientId(topic, inner_connection.clientId);\n                                    }\n                                    (0, log_1.logDebug)('<<< parse raw msg:', topic, messageObj);\n                                    this.communicateEvents.emit(topic, message);\n                                }\n                            }\n                            else {\n                                let message = sessionInfo.crypto.decryptWallet((_f = input.params.data) === null || _f === void 0 ? void 0 : _f.message, sessionInfo.dappPublicKey);\n                                (0, log_1.logDebug)('<<< receive msg:', topic, message);\n                                this.communicateEvents.emit(topic, message);\n                            }\n                        }\n                        catch (error) {\n                            let message = sessionInfo.crypto.decryptWallet((_g = input.params.data) === null || _g === void 0 ? void 0 : _g.message, sessionInfo.dappPublicKey);\n                            (0, log_1.logDebug)('<<< receive msg:', topic, message);\n                            this.communicateEvents.emit(topic, message);\n                        }\n                    }\n                }\n                else {\n                }\n            }\n            // send back ACK\n            if (!ignoreACK) {\n                yield this.sendACK(input.id, true);\n                if (topic) {\n                    let inputObj = input;\n                    if ((_j = (_h = inputObj.params) === null || _h === void 0 ? void 0 : _h.data) === null || _j === void 0 ? void 0 : _j.messageId) {\n                        this.refreshPackageId();\n                        yield this.sendReceive(this.packageId.toString(), (_l = (_k = inputObj.params) === null || _k === void 0 ? void 0 : _k.data) === null || _l === void 0 ? void 0 : _l.messageId, topic);\n                    }\n                }\n            }\n        });\n    }\n    recovrySessionInfoFromCache() {\n        // get topic ids and keys from session\n        // WalletConnectionCryptoCacheMap\n        // {[topicId]: {cryptoKeypair: {publicKey:string, secretKey:string}, dappPublicKey:clientId}}\n        let jsonStr = this.connectStorage.getAndDecrypt(walletConnectionConstants_1.WalletConnectionManagerTopicInfoCacheKey);\n        log.logDebug('get cached sessionInfos:', jsonStr);\n        if (jsonStr) {\n            let cacheMap = (0, safejson_1.safeJsonParse)(jsonStr);\n            for (let topicId in cacheMap) {\n                let topicItem = cacheMap[topicId];\n                log.logDebug('make topicItem:', topicItem);\n                let cryptoItem = {\n                    topic: topicId,\n                    crypto: new crypto_1.SessionCrypto({\n                        publicKey: topicItem.cryptoKeyPair.publicKey,\n                        secretKey: topicItem.cryptoKeyPair.secretKey\n                    }),\n                    dappPublicKey: topicItem.dappPublicKey,\n                    cid: topicItem.cid\n                };\n                this.sessionCryptoInfoMap.set(topicId, cryptoItem);\n            }\n        }\n        log.logDebug('get cached sessionInfos map:', this.sessionCryptoInfoMap);\n    }\n    syncCacheSessionInfo() {\n        let cacheMap = {};\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            log.logDebug('for each Keys', topicId);\n            if (cryptoItem) {\n                cacheMap[topicId] = {\n                    cryptoKeyPair: cryptoItem.crypto.stringifyKeypair(),\n                    dappPublicKey: cryptoItem.dappPublicKey,\n                    cid: cryptoItem.cid\n                };\n            }\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(cacheMap);\n        log.logDebug('sync cache sessionInfos:', jsonData);\n        this.connectStorage.encryptStoreMsg(jsonData, walletConnectionConstants_1.WalletConnectionManagerTopicInfoCacheKey);\n    }\n    cacheSessionInfo(topic, sessionInfo, sync = true) {\n        let dappPublicKey = sessionInfo.dappPublicKey;\n        // 1. search dapp public related topic ids\n        let duplicatedTopics = [];\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            log.logDebug('for each Keys', topicId);\n            if (cryptoItem.dappPublicKey == dappPublicKey) {\n                log.logDebug('duplicated dapp public key:', topicId, dappPublicKey);\n                duplicatedTopics.push(topicId);\n            }\n        }\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            if (duplicatedTopics.includes(topicId)) {\n                this.sessionCryptoInfoMap.delete(topicId);\n            }\n        }\n        // discard useless topics\n        log.logDebug('cleaned connect session cache:', this.sessionCryptoInfoMap);\n        // 2. remove previous connected topic ids\n        // 3. write in current topic\n        this.sessionCryptoInfoMap.set(topic, sessionInfo);\n        // TODO: search domain info and then delete \n        log.logDebug('cache sessionInfo:', topic, sessionInfo, this.sessionCryptoInfoMap);\n        if (sync) {\n            this.syncCacheSessionInfo();\n        }\n        return duplicatedTopics;\n    }\n    // add and subscribe topic\n    appendTopic(topic, sessionPublicKey, cid) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('4.1. get append Topic:', topic);\n            // 1. check if connected\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.isLogined) {\n                    var error = new Error();\n                    error.message = \"connection is not logined\";\n                    error.name = \"append error\";\n                    // throw error\n                    reject(error);\n                    return;\n                }\n                // 2. subscribe topic and session public key\n                let cryptoItem = {\n                    topic: topic,\n                    crypto: new crypto_1.SessionCrypto(),\n                    dappPublicKey: sessionPublicKey ? sessionPublicKey : \"\",\n                    cid: cid\n                };\n                let duplicatedTopics = this.cacheSessionInfo(topic, cryptoItem, false);\n                // make sure cache session info before subscribe\n                yield this.subscribeTopics(Array.from([topic]));\n                this.refreshPackageId();\n                log.logDebug(`5. subscribe callback then fetch append message: ${this.packageId}, ${topic}`);\n                log.reportLog(`5. subscribe callback then fetch append message`);\n                const timeF = new Date().getTime();\n                (0, log_1.logDebug)(\"Append --subscribe callback->\", timeF - this.timeLog);\n                resolve(duplicatedTopics);\n            }));\n        });\n    }\n    confirmAppendingTopics() {\n        this.syncCacheSessionInfo();\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.timeLog = new Date().getTime();\n            (0, log_1.logDebug)(\"[Wallet] ConnectTime---enter->\", this.timeLog);\n            log.reportLog('wallet connect connect called');\n            // 0. get cached topics and infos\n            let timestampStr = Date.now().toString();\n            var jwtToken = yield this.makeJWT(timestampStr);\n            log.logDebug(`generate jwt token: ${jwtToken}`);\n            this.connectStorage.saveContent(jwtToken, 'jwt');\n            this.recovrySessionInfoFromCache();\n            // 1.\n            return new Promise((resolve, reject) => {\n                // 1. when websocket opened\n                this.inLogin = true;\n                this.connector.onOpen(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug(`1. connector on open`);\n                    log.reportLog('1. wallet connect connect on open');\n                    const timeOne = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---open->\", timeOne - this.timeLog);\n                    //2. send jwt to login\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when login');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // throw error\n                            reject(error);\n                        }\n                        else {\n                            this.isLogined = true;\n                            resolve();\n                            // 3. subscribe cached topics\n                            log.logDebug('3. subscribe cached topics', this.sessionCryptoInfoMap);\n                            log.reportLog('3. wallet connect connect subscribe cached topics');\n                            if (this.sessionCryptoInfoMap.size > 0) {\n                                yield this.subscribeTopics(Array.from(this.sessionCryptoInfoMap.keys()));\n                            }\n                        }\n                    }));\n                    log.logDebug(`2. login called`);\n                    log.reportLog('2. wallet connect login called');\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        return yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_LOGIN,\n                        params: {\n                            token: jwtToken\n                        }\n                    });\n                }));\n                this.connector.connect().catch((err) => {\n                    (0, log_1.logDebug)('WalletConnectionManager connect error', err);\n                    reject(err);\n                });\n                // add callback\n                this.connector.addPackageParse((event) => {\n                    var _a, _b;\n                    log.logDebug(`connect: parse package`);\n                    log.logDebug(event);\n                    if (!(\"params\" in event) || !(\"data\" in event[\"params\"])) {\n                        this.parsePackage(\"\", event, true);\n                        return;\n                    }\n                    // ignore receive echo\n                    if ((_a = event.params.data) === null || _a === void 0 ? void 0 : _a.topic) {\n                        this.parsePackage((_b = event.params.data) === null || _b === void 0 ? void 0 : _b.topic, event, event.method === commands_1.CONNECT_METHOD_RECEIVE);\n                    }\n                });\n                // this.connector.addListener(safeJsonStringify(event), (rawMsg: string)=> {\n                //    rawMsg = rawMsg.replace(/'/g, '\"')\n                //    log.logDebug(`addListener ===> ${rawMsg}`)\n                //    if (typeof rawMsg !== 'undefined') {\n                //       var msgObj = safeJsonParse(rawMsg)\n                //       var msg = msgObj.message\n                //       let crypto = \n                //       var result = this.crypto.decrypt(msg, this.connectedWalletPK)\n                //       log.logDebug(`addListener ===> ${result}`)\n                //       return result\n                //    }\n                //    return undefined\n                // }, ()=>{\n                //    // emit success\n                // }, ()=>{\n                //    // emit fail\n                // })\n            });\n        });\n    }\n    // 获取对应topic session下的钱包公钥\n    // 在返回approve时需要填充到clientId字段中\n    getSessionPublicKey(topicId) {\n        if (this.isTopicPublicKeyExist(topicId)) {\n            let item = this.sessionCryptoInfoMap.get(topicId);\n            if (item) {\n                return (0, utils_1.toHexString)(item.crypto.keyPair.publicKey);\n            }\n        }\n        return undefined;\n    }\n    getCurrentCachedTopicIdList() {\n        return Array.from(this.sessionCryptoInfoMap.keys());\n    }\n    disconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            yield this.connector.disconnect();\n            //clean cached topic\n            //如果是恢复连接，就不清理解密public key\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            if (!fromRestore) {\n                this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n            }\n        });\n    }\n    send(topic_1, msg_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, msg, needPublicKey = false, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL, useRaw = false) {\n            var _a, _b;\n            // make send msg payload\n            log.logDebug(`message send =====> ${msg}`);\n            if (!this.isTopicPublicKeyExist(topic)) {\n                // channel not ready\n                throw new Error('connection not finish');\n            }\n            let connectedDappPK = (_a = this.sessionCryptoInfoMap.get(topic)) === null || _a === void 0 ? void 0 : _a.dappPublicKey;\n            let cryptoObject = (_b = this.sessionCryptoInfoMap.get(topic)) === null || _b === void 0 ? void 0 : _b.crypto;\n            let messageObj = undefined;\n            if (useRaw) {\n                messageObj = {\n                    message: msg,\n                };\n            }\n            if (cryptoObject && connectedDappPK && !useRaw) {\n                let message = cryptoObject.encryptWallet(msg, connectedDappPK);\n                messageObj = {\n                    message: message,\n                };\n            }\n            if (messageObj) {\n                if (needPublicKey && cryptoObject) {\n                    messageObj.clientId = (0, utils_1.toHexString)(cryptoObject.keyPair.publicKey);\n                    // let privateKey = toHexString(cryptoObject.keyPair.secretKey)\n                    // log.logDebug(`message send use dapp publicKey =====> ${connectedDappPK}`)\n                    // log.logDebug(`message send use publicKey =====> ${messageObj.clientId}`)\n                    // log.logDebug(`message send use secretKey =====> ${privateKey}`)\n                }\n                this.refreshPackageId();\n                const payload = {\n                    id: this.packageId.toString(),\n                    method: commands_1.CONNECT_METHOD_PUBLISH,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    params: {\n                        message: {\n                            topic: topic,\n                            message: (0, safejson_1.safeJsonStringify)(messageObj),\n                            ttl: ttl\n                        }\n                    } // crypted\n                };\n                this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                    // ack\n                    if (rsp && rsp.error) {\n                        log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                    }\n                    else if (rsp && !rsp.error) {\n                        log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                    }\n                }));\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n                return this.packageId;\n            }\n        });\n    }\n    sendACK(msgId_1, success_1) {\n        return __awaiter(this, arguments, void 0, function* (msgId, success, reason = undefined) {\n            if (success === true) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    result: true\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n            else if (reason) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    error: {\n                        code: reason.code, //int\n                        message: reason.message\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    // send receive\n    sendReceive(msgId, messageId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECEIVE,\n                params: {\n                    data: {\n                        messageId: messageId,\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendUnsubscribe(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: make disconnect payload\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), {\n                id: this.packageId.toString(),\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_UNSUB,\n                params: {\n                    topic: topic\n                }\n            });\n            // remove topicId\n            this.sessionCryptoInfoMap.delete(topic);\n            this.syncCacheSessionInfo();\n        });\n    }\n    // send receive\n    // 1. fetch all \n    // 2. send back receive\n    // 3. check has more, if so, repeat from 1st step\n    sendFetchAndConsumeMessages(msgId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(msgId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic == topic) {\n                                let messageId = msg.messageId;\n                                yield this.connector.getMsgPayloadFromHistory(msg);\n                                // send receive command to relay server\n                                this.refreshPackageId();\n                                yield this.sendReceive(this.packageId.toString(), messageId, topic);\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_FETCHMSG,\n                params: {\n                    data: {\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendBatchFetchAndConsumeMessages(packageId, topicIdList) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(packageId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic) {\n                                let messageId = msg.messageId;\n                                yield this.connector.getMsgPayloadFromHistory(msg);\n                                // send receive command to relay server\n                                this.refreshPackageId(i);\n                                yield this.sendReceive(this.packageId.toString(), messageId, msg.topic);\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendBatchFetchAndConsumeMessages(this.packageId.toString(), topicIdList);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            log.reportLog('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: packageId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_BATCH_FETCHMSG,\n                params: {\n                    topics: topicIdList,\n                    withInternalData: true\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                yield this.connector.connect();\n            }), payload);\n        });\n    }\n    cleanCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.connectStorage.clearCache();\n        });\n    }\n    saveSessionContent(key, data) {\n        if (!data) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(data);\n        this.connectStorage.encryptStoreMsg(jsonData, storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n    }\n    getSessionContent(key) {\n        let jsonStr = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        if (jsonStr) {\n            let object = (0, safejson_1.safeJsonParse)(jsonStr);\n            return object;\n        }\n        return undefined;\n    }\n    // subscribe then fetch messages for each topics\n    subscribeTopics(topicIdList) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)(\"4. topicid list\", topicIdList);\n            log.reportLog(\"4. topicid list\");\n            this.refreshPackageId();\n            const timeF = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let finishCount = 0;\n                //3. send subscribe\n                for (let idx = 0; idx < topicIdList.length; ++idx) {\n                    let topicId = topicIdList[idx];\n                    this.refreshPackageId(idx);\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when subscribe');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // reject(error)\n                            finishCount += 1;\n                            if (finishCount == topicIdList.length) {\n                                resolve();\n                            }\n                        }\n                        this.refreshPackageId(idx);\n                        const timeF = new Date().getTime();\n                        (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n                        finishCount += 1;\n                        if (finishCount == topicIdList.length) {\n                            // 4. fetch messages\n                            log.logDebug(`5. send fetch msg: ${this.packageId}, ${topicId}`);\n                            yield this.sendBatchFetchAndConsumeMessages(this.packageId.toString(), topicIdList);\n                            resolve();\n                        }\n                    }));\n                    log.logDebug(`3. login callback then send subscribe: ${this.packageId}, ${topicId}`);\n                    log.reportLog('3. login callback then send subscribe');\n                    const timeTh = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---login callback->\", timeTh - this.timeLog);\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        return yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_SUB,\n                        params: {\n                            topic: topicId\n                        }\n                    });\n                }\n            }));\n        });\n    }\n}\nexports.WalletConnectionManager = WalletConnectionManager;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SessionCrypto = void 0;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst utils_1 = require(\"../utils/utils\");\nclass SessionCrypto {\n    constructor(keyPair = undefined) {\n        this.nonceLength = 24;\n        this.sessionKeyPair = keyPair ? this.createKeypairFromString(keyPair) : this.createKeypair();\n    }\n    createKeypair() {\n        return tweetnacl_1.default.box.keyPair();\n    }\n    createKeypairFromString(keyPair) {\n        return {\n            publicKey: (0, utils_1.hexToByteArray)(keyPair.publicKey),\n            secretKey: (0, utils_1.hexToByteArray)(keyPair.secretKey),\n        };\n    }\n    createNonce() {\n        return tweetnacl_1.default.randomBytes(this.nonceLength);\n    }\n    get keyPair() {\n        return this.sessionKeyPair;\n    }\n    // dapp 加密:\n    // base64(hex（nonce+加密内容）)\n    encrypt(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl_1.default.box(encodedMessage, nonce, (0, utils_1.hexToByteArray)(receiverPublicKey), this.keyPair.secretKey);\n        let concatInfo = (0, utils_1.concatUint8Arrays)(nonce, encrypted);\n        var hexResult = (0, utils_1.toHexString)(concatInfo);\n        var encodedResult = new TextEncoder().encode(hexResult);\n        return (0, utils_1.base64encode)(encodedResult, false);\n    }\n    // 钱包加密内容\n    // 注意：没有中间hex的环节\n    // base64（nonce+加密内容)\n    encryptWallet(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl_1.default.box(encodedMessage, nonce, (0, utils_1.hexToByteArray)(receiverPublicKey), this.keyPair.secretKey);\n        let concatInfo = (0, utils_1.concatUint8Arrays)(nonce, encrypted);\n        return (0, utils_1.base64encode)(concatInfo, false);\n    }\n    // dapp 解密\n    // base64(split(nonce+加密内容))\n    decrypt(message, senderPublicKey) {\n        let base64Content = (0, utils_1.base64decode)(message, true);\n        let messageByteArray = base64Content.toUint8Array();\n        const [nonce, internalMessage] = (0, utils_1.splitToUint8Arrays)(messageByteArray, this.nonceLength);\n        const decrypted = tweetnacl_1.default.box.open(internalMessage, nonce, (0, utils_1.hexToByteArray)(senderPublicKey), this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${(0, utils_1.toHexString)(this.keyPair.publicKey)} \\n keypair secretkey: ${(0, utils_1.toHexString)(this.keyPair.secretKey)}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    // dapp 解密\n    // base64(hextoByte(split(nonce+加密内容)))\n    decryptWallet(message, senderPublicKey) {\n        let base64Content = (0, utils_1.base64decode)(message, true);\n        let messageByteArray = (0, utils_1.hexToByteArray)(base64Content.toString());\n        const [nonce, internalMessage] = (0, utils_1.splitToUint8Arrays)(messageByteArray, this.nonceLength);\n        const decrypted = tweetnacl_1.default.box.open(internalMessage, nonce, (0, utils_1.hexToByteArray)(senderPublicKey), this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${(0, utils_1.toHexString)(this.keyPair.publicKey)} \\n keypair secretkey: ${(0, utils_1.toHexString)(this.keyPair.secretKey)}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    stringifyKeypair() {\n        return {\n            publicKey: (0, utils_1.toHexString)(this.keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(this.keyPair.secretKey)\n        };\n    }\n}\nexports.SessionCrypto = SessionCrypto;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./connect\"), exports);\n__exportStar(require(\"./protocol\"), exports);\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IEngine = exports.ISignClient = exports.ISignClientEvents = exports.IEngineEvents = void 0;\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nclass IEngineEvents extends eventemitter3_1.default {\n    constructor() {\n        super();\n    }\n}\nexports.IEngineEvents = IEngineEvents;\nclass ISignClientEvents extends eventemitter3_1.default {\n    constructor() {\n        super();\n    }\n}\nexports.ISignClientEvents = ISignClientEvents;\nclass ISignClient {\n    constructor(data) {\n        this.data = data;\n    }\n}\nexports.ISignClient = ISignClient;\nclass IEngine {\n    constructor(client) {\n        this.client = client;\n    }\n}\nexports.IEngine = IEngine;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.creatOKXMiniAppWalletInfo = exports.creatOKXWalletInfo = exports.ISignClientEvents = exports.IEngine = exports.IEngineEvents = exports.ISignClient = exports.getBigIntRpcId = exports.formatJsonRpcRequest = exports.isJsonRpcError = exports.isJsonRpcResponse = exports.parseConnectionError = exports.isHttpUrl = exports.formatJsonRpcError = void 0;\nvar json_rpc_1 = require(\"./json-rpc\");\nObject.defineProperty(exports, \"formatJsonRpcError\", { enumerable: true, get: function () { return json_rpc_1.formatJsonRpcError; } });\nObject.defineProperty(exports, \"isHttpUrl\", { enumerable: true, get: function () { return json_rpc_1.isHttpUrl; } });\nObject.defineProperty(exports, \"parseConnectionError\", { enumerable: true, get: function () { return json_rpc_1.parseConnectionError; } });\nObject.defineProperty(exports, \"isJsonRpcResponse\", { enumerable: true, get: function () { return json_rpc_1.isJsonRpcResponse; } });\nObject.defineProperty(exports, \"isJsonRpcError\", { enumerable: true, get: function () { return json_rpc_1.isJsonRpcError; } });\nObject.defineProperty(exports, \"formatJsonRpcRequest\", { enumerable: true, get: function () { return json_rpc_1.formatJsonRpcRequest; } });\nObject.defineProperty(exports, \"getBigIntRpcId\", { enumerable: true, get: function () { return json_rpc_1.getBigIntRpcId; } });\nvar engine_1 = require(\"./engine\");\nObject.defineProperty(exports, \"ISignClient\", { enumerable: true, get: function () { return engine_1.ISignClient; } });\nObject.defineProperty(exports, \"IEngineEvents\", { enumerable: true, get: function () { return engine_1.IEngineEvents; } });\nObject.defineProperty(exports, \"IEngine\", { enumerable: true, get: function () { return engine_1.IEngine; } });\nObject.defineProperty(exports, \"ISignClientEvents\", { enumerable: true, get: function () { return engine_1.ISignClientEvents; } });\n__exportStar(require(\"./ton\"), exports);\nvar wallet_info_1 = require(\"./wallet-info\");\nObject.defineProperty(exports, \"creatOKXWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXWalletInfo; } });\nObject.defineProperty(exports, \"creatOKXMiniAppWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXMiniAppWalletInfo; } });\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isJsonRpcPayload = isJsonRpcPayload;\nexports.isJsonRpcRequest = isJsonRpcRequest;\nexports.isJsonRpcResponse = isJsonRpcResponse;\nexports.isJsonRpcResult = isJsonRpcResult;\nexports.isJsonRpcError = isJsonRpcError;\nexports.payloadId = payloadId;\nexports.getBigIntRpcId = getBigIntRpcId;\nexports.formatJsonRpcRequest = formatJsonRpcRequest;\nexports.formatJsonRpcResult = formatJsonRpcResult;\nexports.formatJsonRpcError = formatJsonRpcError;\nexports.isReservedErrorCode = isReservedErrorCode;\nexports.getError = getError;\nexports.getErrorByCode = getErrorByCode;\nexports.formatErrorMessage = formatErrorMessage;\nexports.isHttpUrl = isHttpUrl;\nexports.isWsUrl = isWsUrl;\nexports.parseConnectionError = parseConnectionError;\nfunction isJsonRpcPayload(payload) {\n    return (typeof payload === \"object\" &&\n        \"id\" in payload &&\n        \"jsonrpc\" in payload &&\n        payload.jsonrpc === \"2.0\");\n}\nfunction isJsonRpcRequest(payload) {\n    return isJsonRpcPayload(payload) && \"method\" in payload;\n}\nfunction isJsonRpcResponse(payload) {\n    return isJsonRpcPayload(payload) && (isJsonRpcResult(payload) || isJsonRpcError(payload));\n}\nfunction isJsonRpcResult(payload) {\n    return \"result\" in payload;\n}\nfunction isJsonRpcError(payload) {\n    return \"error\" in payload;\n}\nconst okx_connect_error_1 = require(\"../error/okx-connect.error\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nclass IncrementalRandomGenerator {\n    constructor(bits) {\n        this.i = 1;\n        const typedArray = bits === 8 ? new Uint8Array(1) : bits === 16 ? new Uint16Array(1) : new Uint32Array(1);\n        if (bits) {\n            this.initialValue = tweetnacl_1.default.randomBytes(bits / 8)[0];\n        }\n        else {\n            this.initialValue = 0;\n        }\n    }\n    getNextValue() {\n        return this.initialValue + this.i++;\n    }\n}\nconst uint8Generator = new IncrementalRandomGenerator(8);\nconst uint16Generator = new IncrementalRandomGenerator(16);\nfunction payloadId() {\n    const date = Date.now() * 1000;\n    const extra = uint8Generator.getNextValue();\n    return date + extra;\n}\nfunction getBigIntRpcId() {\n    const date = BigInt(Date.now()) * BigInt(1000000);\n    const extra = BigInt(uint16Generator.getNextValue());\n    return date + extra;\n}\nfunction formatJsonRpcRequest(method, params, id) {\n    return {\n        id: id || payloadId(),\n        jsonrpc: \"2.0\",\n        method,\n        params,\n    };\n}\nfunction formatJsonRpcResult(id, result) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        result,\n    };\n}\nfunction formatJsonRpcError(id, error, data) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        error: formatErrorMessage(error, data),\n    };\n}\nfunction isReservedErrorCode(code) {\n    return okx_connect_error_1.RESERVED_ERROR_CODES.includes(code);\n}\nfunction getError(type) {\n    if (!Object.keys(okx_connect_error_1.STANDARD_ERROR_MAP).includes(type)) {\n        return okx_connect_error_1.STANDARD_ERROR_MAP[okx_connect_error_1.DEFAULT_ERROR];\n    }\n    return okx_connect_error_1.STANDARD_ERROR_MAP[type];\n}\nfunction getErrorByCode(code) {\n    const match = Object.values(okx_connect_error_1.STANDARD_ERROR_MAP).find((e) => e.code === code);\n    if (!match) {\n        return okx_connect_error_1.STANDARD_ERROR_MAP[okx_connect_error_1.DEFAULT_ERROR];\n    }\n    return match;\n}\nfunction formatErrorMessage(error, data) {\n    if (typeof error === \"undefined\") {\n        return getError(okx_connect_error_1.INTERNAL_ERROR);\n    }\n    if (typeof error === \"string\") {\n        error = Object.assign(Object.assign({}, getError(okx_connect_error_1.SERVER_ERROR)), { message: error });\n    }\n    if (typeof data !== \"undefined\") {\n        error.data = data;\n    }\n    if (isReservedErrorCode(error.code)) {\n        error = getErrorByCode(error.code);\n    }\n    return error;\n}\nfunction getUrlProtocol(url) {\n    const matches = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!matches || !matches.length)\n        return;\n    return matches[0];\n}\nfunction matchRegexProtocol(url, regex) {\n    const protocol = getUrlProtocol(url);\n    if (typeof protocol === \"undefined\")\n        return false;\n    return new RegExp(regex).test(protocol);\n}\nfunction isHttpUrl(url) {\n    return matchRegexProtocol(url, \"^https?:\");\n}\nfunction isWsUrl(url) {\n    return matchRegexProtocol(url, \"^wss?:\");\n}\nfunction parseConnectionError(e, url, type) {\n    return e.message.includes(\"getaddrinfo ENOTFOUND\") || e.message.includes(\"connect ECONNREFUSED\")\n        ? new Error(`Unavailable ${type} RPC url at ${url}`)\n        : e;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_ITEM_ERROR_CODES = void 0;\nvar CONNECT_ITEM_ERROR_CODES;\n(function (CONNECT_ITEM_ERROR_CODES) {\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(CONNECT_ITEM_ERROR_CODES || (exports.CONNECT_ITEM_ERROR_CODES = CONNECT_ITEM_ERROR_CODES = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TONCHAIN = void 0;\nvar TONCHAIN;\n(function (TONCHAIN) {\n    TONCHAIN[\"MAINNET\"] = \"-239\";\n})(TONCHAIN || (exports.TONCHAIN = TONCHAIN = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_ITEM_ERROR_CODES = exports.TONCHAIN = void 0;\nvar connect_wallet_1 = require(\"./connect-wallet\");\nObject.defineProperty(exports, \"TONCHAIN\", { enumerable: true, get: function () { return connect_wallet_1.TONCHAIN; } });\nvar connect_event_1 = require(\"./connect-event\");\nObject.defineProperty(exports, \"CONNECT_ITEM_ERROR_CODES\", { enumerable: true, get: function () { return connect_event_1.CONNECT_ITEM_ERROR_CODES; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.creatOKXWalletInfo = creatOKXWalletInfo;\nexports.creatOKXMiniAppWalletInfo = creatOKXMiniAppWalletInfo;\nconst constants_1 = require(\"../constants\");\nfunction creatOKXWalletInfo() {\n    return {\n        \"appName\": \"okxAppWallet\",\n        \"name\": \"OKX Wallet\",\n        \"imageUrl\": \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\",\n        \"aboutUrl\": constants_1.downloadUrl,\n        \"universalLink\": constants_1.standardUniversalLink,\n        \"deepLink\": constants_1.standardDeeplink,\n        \"platforms\": [\"ios\", \"android\"]\n    };\n}\nfunction creatOKXMiniAppWalletInfo() {\n    return {\n        \"appName\": \"okxMiniApp\",\n        \"name\": \"OKX Mini Wallet\",\n        \"imageUrl\": \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\",\n        \"aboutUrl\": constants_1.downloadUrl,\n        \"universalLink\": `https://t.me/${constants_1.tgwalletName}/start`,\n        \"deepLink\": \"\",\n        \"platforms\": [\"ios\", \"android\", 'macos', 'windows']\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.tgwalletAppName = exports.tgwalletName = exports.tonConnectSdkVersion = exports.shortUniversalLink = exports.standardDeeplink = exports.downloadUrl = exports.standardUniversalLink = exports.okxDeeplink = void 0;\nexports.getTestTwaUrl = getTestTwaUrl;\nexports.getTestTgTwaUrl = getTestTgTwaUrl;\nexports.okxDeeplink = 'okx://web3';\nexports.standardUniversalLink = typeof window !== \"undefined\" && window.location.hostname.includes(\"okx.com\")\n    ? \"https://link.okx.com/download\"\n    : \"https://www.okx.com/download\";\nexports.downloadUrl = \"https://www.okx.com/download\";\n// export const standardUniversalLink = 'http://localhost:5173';\nexports.standardDeeplink = `${exports.okxDeeplink}/wallet/connect`;\nexports.shortUniversalLink = `https://www.okx.com/ul/connect`;\n// export const standardDeeplink = 'http://localhost:5173';\nexports.tonConnectSdkVersion = '1';\n// export const tgwalletName: string = \"TCTestqdqwdqwdqBot\"\nexports.tgwalletName = \"OKX_WALLET_BOT\";\nexports.tgwalletAppName = \"start\";\n// https://t.me/OKX_WALLET_BOT/start\nfunction getTestTwaUrl() {\n    return window.okxTesttwaUrl;\n}\nfunction getTestTgTwaUrl() {\n    return window.okxTestTgtwaUrl;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_CONNECT_ERROR_CODES = exports.OKXConnectError = void 0;\nvar okx_connect_error_1 = require(\"./okx-connect.error\");\nObject.defineProperty(exports, \"OKXConnectError\", { enumerable: true, get: function () { return okx_connect_error_1.OKXConnectError; } });\nObject.defineProperty(exports, \"OKX_CONNECT_ERROR_CODES\", { enumerable: true, get: function () { return okx_connect_error_1.OKX_CONNECT_ERROR_CODES; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_ERROR = exports.STANDARD_ERROR_MAP = exports.SERVER_ERROR_CODE_RANGE = exports.RESERVED_ERROR_CODES = exports.SERVER_ERROR = exports.INTERNAL_ERROR = exports.INVALID_PARAMS = exports.METHOD_NOT_FOUND = exports.INVALID_REQUEST = exports.PARSE_ERROR = exports.OKX_CONNECT_ERROR_CODES = exports.OKXConnectError = void 0;\nclass OKXConnectError extends Error {\n    constructor(code, message) {\n        if (message == undefined) {\n            message = getDefaultMessageByCode(code);\n        }\n        super(message);\n        this.code = code;\n        this.message = `${OKXConnectError.prefix} ${message ? '\\n' + message : ''}`;\n        Object.setPrototypeOf(this, OKXConnectError.prototype);\n    }\n    toJSON() {\n        return {\n            message: this.message,\n            code: this.code\n        };\n    }\n}\nexports.OKXConnectError = OKXConnectError;\nOKXConnectError.prefix = '[OKX_CONNECT_SDK_ERROR]';\nfunction getDefaultMessageByCode(code) {\n    if (code == OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR) {\n        return \"unknown error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR) {\n        return \"bad request error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.ALREADY_CONNECTED_ERROR) {\n        return \"already connected error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR) {\n        return \"not connected error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.UNKNOWN_APP_ERROR) {\n        return \"unknown app error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n        return \"user rejects error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR_CAUSE_REGISTER) {\n        return \"wallet address are registering\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED) {\n        return \"method not supported\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.CONNECTION_ERROR) {\n        return \"connect error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED) {\n        return \"chain not supported\";\n    }\n    return \"unknown error\";\n}\nvar OKX_CONNECT_ERROR_CODES;\n(function (OKX_CONNECT_ERROR_CODES) {\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"BAD_REQUEST_ERROR\"] = 1] = \"BAD_REQUEST_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"ALREADY_CONNECTED_ERROR\"] = 11] = \"ALREADY_CONNECTED_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"NOT_CONNECTED_ERROR\"] = 12] = \"NOT_CONNECTED_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"UNKNOWN_APP_ERROR\"] = 100] = \"UNKNOWN_APP_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"USER_REJECTS_ERROR\"] = 300] = \"USER_REJECTS_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"USER_REJECTS_ERROR_CAUSE_REGISTER\"] = 301] = \"USER_REJECTS_ERROR_CAUSE_REGISTER\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"CHAIN_NOT_SUPPORTED\"] = 500] = \"CHAIN_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"WALLET_NOT_SUPPORTED\"] = 600] = \"WALLET_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"CONNECTION_ERROR\"] = 700] = \"CONNECTION_ERROR\";\n})(OKX_CONNECT_ERROR_CODES || (exports.OKX_CONNECT_ERROR_CODES = OKX_CONNECT_ERROR_CODES = {}));\nexports.PARSE_ERROR = \"PARSE_ERROR\";\nexports.INVALID_REQUEST = \"INVALID_REQUEST\";\nexports.METHOD_NOT_FOUND = \"METHOD_NOT_FOUND\";\nexports.INVALID_PARAMS = \"INVALID_PARAMS\";\nexports.INTERNAL_ERROR = \"INTERNAL_ERROR\";\nexports.SERVER_ERROR = \"SERVER_ERROR\";\nexports.RESERVED_ERROR_CODES = [-32700, -32600, -32601, -32602, -32603];\nexports.SERVER_ERROR_CODE_RANGE = [-32000, -32099];\nexports.STANDARD_ERROR_MAP = {\n    [exports.PARSE_ERROR]: { code: -32700, message: \"Parse error\" },\n    [exports.INVALID_REQUEST]: { code: -32600, message: \"Invalid Request\" },\n    [exports.METHOD_NOT_FOUND]: { code: -32601, message: \"Method not found\" },\n    [exports.INVALID_PARAMS]: { code: -32602, message: \"Invalid params\" },\n    [exports.INTERNAL_ERROR]: { code: -32603, message: \"Internal error\" },\n    [exports.SERVER_ERROR]: { code: -32000, message: \"Server error\" },\n};\nexports.DEFAULT_ERROR = exports.SERVER_ERROR;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.downloadUrl = exports.okxDeeplink = exports.tonConnectSdkVersion = exports.standardDeeplink = exports.standardUniversalLink = exports.NameSpaceKeyStarknet = exports.NameSpaceKeyTron = exports.NameSpaceKeyCosmos = exports.NameSpaceKeyAptos = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.NameSpaceKeyTON = exports.NameSpaceKeySOL = exports.NameSpaceKeyEip155 = void 0;\n__exportStar(require(\"./error\"), exports);\nvar misc_1 = require(\"./misc\");\nObject.defineProperty(exports, \"NameSpaceKeyEip155\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyEip155; } });\nObject.defineProperty(exports, \"NameSpaceKeySOL\", { enumerable: true, get: function () { return misc_1.NameSpaceKeySOL; } });\nObject.defineProperty(exports, \"NameSpaceKeyTON\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyTON; } });\nObject.defineProperty(exports, \"NameSpaceKeySui\", { enumerable: true, get: function () { return misc_1.NameSpaceKeySui; } });\nObject.defineProperty(exports, \"NameSpaceKeyBtc\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyBtc; } });\nObject.defineProperty(exports, \"NameSpaceKeyAptos\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyAptos; } });\nObject.defineProperty(exports, \"NameSpaceKeyCosmos\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyCosmos; } });\nObject.defineProperty(exports, \"NameSpaceKeyTron\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyTron; } });\nObject.defineProperty(exports, \"NameSpaceKeyStarknet\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyStarknet; } });\nvar constants_1 = require(\"./constants\");\nObject.defineProperty(exports, \"standardUniversalLink\", { enumerable: true, get: function () { return constants_1.standardUniversalLink; } });\nObject.defineProperty(exports, \"standardDeeplink\", { enumerable: true, get: function () { return constants_1.standardDeeplink; } });\nObject.defineProperty(exports, \"tonConnectSdkVersion\", { enumerable: true, get: function () { return constants_1.tonConnectSdkVersion; } });\nObject.defineProperty(exports, \"okxDeeplink\", { enumerable: true, get: function () { return constants_1.okxDeeplink; } });\nObject.defineProperty(exports, \"downloadUrl\", { enumerable: true, get: function () { return constants_1.downloadUrl; } });\n__exportStar(require(\"./connect\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NameSpaceKeyStarknet = exports.NameSpaceKeyTron = exports.NameSpaceKeyCosmos = exports.NameSpaceKeyAptos = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.NameSpaceKeyTON = exports.NameSpaceKeySOL = exports.NameSpaceKeyEip155 = void 0;\nexports.NameSpaceKeyEip155 = \"eip155\";\nexports.NameSpaceKeySOL = \"solana\";\nexports.NameSpaceKeyTON = \"ton\";\nexports.NameSpaceKeySui = \"sui\";\nexports.NameSpaceKeyBtc = \"btc\";\nexports.NameSpaceKeyAptos = \"aptos\";\nexports.NameSpaceKeyCosmos = \"cosmos\";\nexports.NameSpaceKeyTron = \"tron\";\nexports.NameSpaceKeyStarknet = \"starknet\";\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.callForSuccess = callForSuccess;\nexports.delay = delay;\n/**\n * Function to call ton api until we get response.\n * Because ton network is pretty unstable we need to make sure response is final.\n * @param {T} fn - function to call\n * @param {CallForSuccessOptions} [options] - optional configuration options\n */\nfunction callForSuccess(fn, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b;\n        const attempts = (_a = options === null || options === void 0 ? void 0 : options.attempts) !== null && _a !== void 0 ? _a : 3;\n        const delayMs = (_b = options === null || options === void 0 ? void 0 : options.delayMs) !== null && _b !== void 0 ? _b : 800;\n        if (typeof fn !== 'function') {\n            throw new Error(`Expected a function, got ${typeof fn}`);\n        }\n        let i = 0;\n        let lastError;\n        while (i < attempts) {\n            try {\n                return yield fn();\n            }\n            catch (err) {\n                lastError = err;\n                i++;\n                if (i < attempts) {\n                    yield delay(delayMs);\n                }\n            }\n        }\n        throw lastError;\n    });\n}\n/**\n * Delays the execution of code for a specified number of milliseconds.\n * @param {number} timeout - The number of milliseconds to delay the execution.\n * @param {DelayOptions} [options] - Optional configuration options for the delay.\n * @return {Promise<void>} - A promise that resolves after the specified delay, or rejects if the delay is aborted.\n */\nfunction delay(timeout, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            var _a, _b;\n            if ((_a = options === null || options === void 0 ? void 0 : options.signal) === null || _a === void 0 ? void 0 : _a.aborted) {\n                reject(new Error('Delay aborted'));\n                return;\n            }\n            const timeoutId = setTimeout(() => resolve(), timeout);\n            (_b = options === null || options === void 0 ? void 0 : options.signal) === null || _b === void 0 ? void 0 : _b.addEventListener('abort', () => {\n                clearTimeout(timeoutId);\n                reject(new Error('Delay aborted'));\n            });\n        });\n    });\n}\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkMetaData = exports.versionCompare = exports.isBrowser = exports.isOS = exports.isMobileUserAgent = exports.openDeeplinkWithFallback = exports.openLinkBlank = exports.openLink = exports.useShortLink = exports.toSafeBase64FromBase64 = exports.isValidObject = exports.isIos = exports.base64decode = exports.base64encode = exports.splitToUint8Arrays = exports.concatUint8Arrays = exports.toHexString = exports.hexToByteArray = exports.getOKXLink = exports.openOKXUniversalLink = exports.getAppWalletShortDeepLink = exports.encodeTWAConnectURLParams = exports.encodeConnectParams = exports.openOKXTMAWalletlinkWithFallback = exports.getTelegramWalletTWAUrl = exports.getAppWalletDeepLink = exports.encodeTelegramUrlParameters = exports.isTelegramUrl = exports.openOKXDeeplinkWithFallback = exports.openOKXDeeplink = exports.getUniversalLink = exports.safeJsonStringify = exports.safeJsonParse = exports.getDefaultReporter = exports.reportEvent = exports.reportLog = exports.logWarning = exports.logError = exports.logDebug = exports.callForSuccess = void 0;\nvar call_for_success_1 = require(\"./call-for-success\");\nObject.defineProperty(exports, \"callForSuccess\", { enumerable: true, get: function () { return call_for_success_1.callForSuccess; } });\nvar log_1 = require(\"./log\");\nObject.defineProperty(exports, \"logDebug\", { enumerable: true, get: function () { return log_1.logDebug; } });\nObject.defineProperty(exports, \"logError\", { enumerable: true, get: function () { return log_1.logError; } });\nObject.defineProperty(exports, \"logWarning\", { enumerable: true, get: function () { return log_1.logWarning; } });\nObject.defineProperty(exports, \"reportLog\", { enumerable: true, get: function () { return log_1.reportLog; } });\nObject.defineProperty(exports, \"reportEvent\", { enumerable: true, get: function () { return log_1.reportEvent; } });\nObject.defineProperty(exports, \"getDefaultReporter\", { enumerable: true, get: function () { return log_1.getDefaultReporter; } });\n__exportStar(require(\"./reportconstants\"), exports);\n__exportStar(require(\"./report\"), exports);\nvar safejson_1 = require(\"./safejson\");\nObject.defineProperty(exports, \"safeJsonParse\", { enumerable: true, get: function () { return safejson_1.safeJsonParse; } });\nObject.defineProperty(exports, \"safeJsonStringify\", { enumerable: true, get: function () { return safejson_1.safeJsonStringify; } });\nvar url_1 = require(\"./url\");\nObject.defineProperty(exports, \"getUniversalLink\", { enumerable: true, get: function () { return url_1.getUniversalLink; } });\nObject.defineProperty(exports, \"openOKXDeeplink\", { enumerable: true, get: function () { return url_1.openOKXDeeplink; } });\nObject.defineProperty(exports, \"openOKXDeeplinkWithFallback\", { enumerable: true, get: function () { return url_1.openOKXDeeplinkWithFallback; } });\nObject.defineProperty(exports, \"isTelegramUrl\", { enumerable: true, get: function () { return url_1.isTelegramUrl; } });\nObject.defineProperty(exports, \"encodeTelegramUrlParameters\", { enumerable: true, get: function () { return url_1.encodeTelegramUrlParameters; } });\nObject.defineProperty(exports, \"getAppWalletDeepLink\", { enumerable: true, get: function () { return url_1.getAppWalletDeepLink; } });\nObject.defineProperty(exports, \"getTelegramWalletTWAUrl\", { enumerable: true, get: function () { return url_1.getTelegramWalletTWAUrl; } });\nObject.defineProperty(exports, \"openOKXTMAWalletlinkWithFallback\", { enumerable: true, get: function () { return url_1.openOKXTMAWalletlinkWithFallback; } });\nObject.defineProperty(exports, \"encodeConnectParams\", { enumerable: true, get: function () { return url_1.encodeConnectParams; } });\nObject.defineProperty(exports, \"encodeTWAConnectURLParams\", { enumerable: true, get: function () { return url_1.encodeTWAConnectURLParams; } });\nObject.defineProperty(exports, \"getAppWalletShortDeepLink\", { enumerable: true, get: function () { return url_1.getAppWalletShortDeepLink; } });\nObject.defineProperty(exports, \"openOKXUniversalLink\", { enumerable: true, get: function () { return url_1.openOKXUniversalLink; } });\nObject.defineProperty(exports, \"getOKXLink\", { enumerable: true, get: function () { return url_1.getOKXLink; } });\nvar utils_1 = require(\"./utils\");\nObject.defineProperty(exports, \"hexToByteArray\", { enumerable: true, get: function () { return utils_1.hexToByteArray; } });\nObject.defineProperty(exports, \"toHexString\", { enumerable: true, get: function () { return utils_1.toHexString; } });\nObject.defineProperty(exports, \"concatUint8Arrays\", { enumerable: true, get: function () { return utils_1.concatUint8Arrays; } });\nObject.defineProperty(exports, \"splitToUint8Arrays\", { enumerable: true, get: function () { return utils_1.splitToUint8Arrays; } });\nObject.defineProperty(exports, \"base64encode\", { enumerable: true, get: function () { return utils_1.base64encode; } });\nObject.defineProperty(exports, \"base64decode\", { enumerable: true, get: function () { return utils_1.base64decode; } });\nObject.defineProperty(exports, \"isIos\", { enumerable: true, get: function () { return utils_1.isIos; } });\nObject.defineProperty(exports, \"isValidObject\", { enumerable: true, get: function () { return utils_1.isValidObject; } });\nObject.defineProperty(exports, \"toSafeBase64FromBase64\", { enumerable: true, get: function () { return utils_1.toSafeBase64FromBase64; } });\nObject.defineProperty(exports, \"useShortLink\", { enumerable: true, get: function () { return utils_1.useShortLink; } });\nvar web_api_1 = require(\"./web-api\");\nObject.defineProperty(exports, \"openLink\", { enumerable: true, get: function () { return web_api_1.openLink; } });\nObject.defineProperty(exports, \"openLinkBlank\", { enumerable: true, get: function () { return web_api_1.openLinkBlank; } });\nObject.defineProperty(exports, \"openDeeplinkWithFallback\", { enumerable: true, get: function () { return web_api_1.openDeeplinkWithFallback; } });\nObject.defineProperty(exports, \"isMobileUserAgent\", { enumerable: true, get: function () { return web_api_1.isMobileUserAgent; } });\nObject.defineProperty(exports, \"isOS\", { enumerable: true, get: function () { return web_api_1.isOS; } });\nObject.defineProperty(exports, \"isBrowser\", { enumerable: true, get: function () { return web_api_1.isBrowser; } });\nvar tma_api_1 = require(\"./tma-api\");\nObject.defineProperty(exports, \"versionCompare\", { enumerable: true, get: function () { return tma_api_1.versionCompare; } });\nvar request_1 = require(\"./request\");\nObject.defineProperty(exports, \"checkMetaData\", { enumerable: true, get: function () { return request_1.checkMetaData; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getDefaultReporter = getDefaultReporter;\nexports.logDebug = logDebug;\nexports.logError = logError;\nexports.logWarning = logWarning;\nexports.reportEvent = reportEvent;\nexports.reportLog = reportLog;\nconst debug = false;\nconst forceReport = false;\nconst report_1 = require(\"./report\");\nconst defaultReporter = new report_1.OKXReporter();\nfunction getDefaultReporter() {\n    return defaultReporter;\n}\nconst packageJson = require('../../package.json');\nconst version = packageJson.version;\nfunction logDebug(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.log(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction logError(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.error(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n            if (forceReport || !debug) {\n                let content = '';\n                content += [...args].reduce((result, item) => {\n                    if (typeof item == 'string') {\n                        result += ',' + item;\n                    }\n                    else if (typeof item == 'object') {\n                        result += JSON.stringify(item);\n                    }\n                });\n                defaultReporter.sendRecordContent(content, report_1.OKXReportType.LOG, '');\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction logWarning(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.warn(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction reportEvent(type, action, content) {\n    return __awaiter(this, void 0, void 0, function* () {\n        yield defaultReporter.sendRecordContent(content, type, action);\n    });\n}\nfunction reportLog(content_1) {\n    return __awaiter(this, arguments, void 0, function* (content, action = 'default') {\n        // await defaultReporter.sendRecordContent(content, OKXReportType.LOG, action)\n    });\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXReporter = exports.OKXReportSide = exports.OKXReportType = exports.versionStr = void 0;\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst log_1 = require(\"./log\");\nconst url_1 = require(\"./url\");\nconst utils_1 = require(\"../utils\");\nconst localforage_1 = __importDefault(require(\"localforage\"));\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nexports.versionStr = '1.5.6';\nconst reportApiList = [\n    'https://www.okx.com/dappstat/wallet-connect',\n    'https://www.okx.ac/dappstat/wallet-connect'\n];\nconst reportCacheKey = 'OKX_RP_CK';\nconst reportUUIDKey = 'OKX_RP_UUID_CK';\nconst MAX_LIMIT_REPORTCOUNT = 100;\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"*/*\",\n    \"Content-Type\": \"text/plain\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\nexports.OKXReportType = {\n    PAGE_IN: 'page_in',\n    PAGE_OUT: 'page_out',\n    CLICK: 'click',\n    LOG: 'log',\n};\nexports.OKXReportSide = {\n    DAPP: 'dapp',\n    WALLET: 'wallet',\n};\nclass IReporter {\n}\nconst fetchWithTimeout = (url, options, timeout = 5000) => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n    const fetchPromise = (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, options), { signal }));\n    const timeoutPromise = new Promise((_, reject) => setTimeout(() => {\n        controller.abort();\n        reject(new Error('Request timed out'));\n    }, timeout));\n    return Promise.race([fetchPromise, timeoutPromise]);\n};\nconst fetchListWithTimeout = (urls_1, ...args_1) => __awaiter(void 0, [urls_1, ...args_1], void 0, function* (urls, options = {}, timeout = 5000) {\n    for (const url of urls) {\n        try {\n            const controller = new AbortController();\n            const signal = controller.signal;\n            const fetchPromise = (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, options), { signal }));\n            const timeoutPromise = new Promise((_, reject) => setTimeout(() => {\n                controller.abort();\n                reject(new Error('Request timed out'));\n            }, timeout));\n            const response = yield Promise.race([fetchPromise, timeoutPromise]);\n            if (response.ok) {\n                return response;\n            }\n            if (response.status == 502) {\n                console.error(`Fetch error status 502`, url);\n                return response;\n            }\n        }\n        catch (error) {\n            console.error(`Fetch error for ${url}:`, error);\n        }\n    }\n    console.error(`'All fetch attempts failed.'`);\n    throw new Error('All fetch attempts failed.');\n});\nclass OKXReporter {\n    constructor() {\n        this.currentSide = exports.OKXReportSide.DAPP;\n        this.currentVersion = exports.versionStr;\n        this.storage = localforage_1.default.createInstance({\n            name: \"OKXReporter\"\n        });\n        this.recordList = new Array();\n        this.currentUUID = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(16));\n    }\n    configVersionAndSide(version, side, appname) {\n        this.currentVersion = version;\n        this.currentSide = side;\n        this.appName = appname;\n    }\n    get recordCacheKey() {\n        return reportCacheKey + \"@\" + this.appName;\n    }\n    get reportPlatform() {\n        if ((0, utils_1.isMobileUserAgent)()) {\n            if ((0, utils_1.isIos)()) {\n                return 'iOS';\n            }\n            else {\n                return 'android';\n            }\n        }\n        else {\n            return 'pc';\n        }\n    }\n    beginReport() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.startErrorCatching();\n            let records = yield this.storage.getItem(this.recordCacheKey);\n            let uuid = yield this.storage.getItem(reportUUIDKey);\n            if (uuid) {\n                this.currentUUID = uuid;\n            }\n            else {\n                this.storage.setItem(reportUUIDKey, this.currentUUID);\n            }\n            if (records) {\n                this.recordList = records;\n                (0, log_1.logDebug)('resume records from cache length: ', this.recordList.length);\n                yield this.sendCachedRecords();\n            }\n        });\n    }\n    startErrorCatching() {\n        let window = (0, url_1.getWindow)();\n        if (window) {\n            (0, log_1.logDebug)('begin capture console error');\n            // window.onerror = (event: Event | string, source?: string, lineno?: number, colno?: number, error?: Error) => {\n            //     logDebug('capture error info:', error, source)\n            //     this.markRecord(error?.message+'/'+error?.name+'/'+error?.stack, OKXReportType.LOG, '', this.currentSide)\n            // }\n        }\n    }\n    cachedErrors() {\n        return this.recordList;\n    }\n    sendRecord(record) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    const body = JSON.stringify(record);\n                    (0, log_1.logDebug)('[REPORT] record: ', body);\n                    const res = yield fetchListWithTimeout(reportApiList, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body: body }));\n                    (0, log_1.logDebug)('[REPORT] get rsp:', res);\n                    if (res && res.status && res.status == 200) {\n                        this.recordList = this.recordList.filter((item) => {\n                            return item.timestamp != record.timestamp || item.content != record.content;\n                        });\n                        yield this.storage.setItem(this.recordCacheKey, this.recordList);\n                        resolve(true);\n                    }\n                    else {\n                        reject(false);\n                    }\n                }\n                catch (e) {\n                    (0, log_1.logDebug)('send record error:', e);\n                    resolve(true);\n                    // reject(e)\n                }\n            }));\n        });\n    }\n    sendRecordContent(content, type, action) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            let path = (_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.location.pathname;\n            let location = (_b = (0, url_1.getWindow)()) === null || _b === void 0 ? void 0 : _b.location.origin;\n            if (path && location) {\n                location = location + path;\n            }\n            let language = (_c = (0, url_1.getWindow)()) === null || _c === void 0 ? void 0 : _c.navigator.language;\n            let ua = (_d = (0, url_1.getWindow)()) === null || _d === void 0 ? void 0 : _d.navigator.userAgent;\n            let platform = this.reportPlatform;\n            let reportItem = {\n                uuid: this.currentUUID,\n                version: this.currentVersion,\n                content: content,\n                action: action,\n                side: this.currentSide,\n                timestamp: new Date().getTime(),\n                url: location,\n                lang: language,\n                type: type,\n                platform: platform,\n                \"user-agent\": ua\n            };\n            yield this.markRecordItem(reportItem);\n            yield this.sendRecord(reportItem);\n        });\n    }\n    sendCachedRecords() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let sendList = this.recordList.map(record => this.sendRecord(record));\n                (0, log_1.logDebug)('[REPORT] submit & clean recorded caches begin @', new Date().toUTCString());\n                Promise.allSettled(sendList).then((results) => {\n                    (0, log_1.logDebug)('[REPORT] submit & clean recorded caches ends @', new Date().toUTCString());\n                    let keepIndex = [];\n                    results.forEach((result, index) => {\n                        if (result.status == \"rejected\") {\n                            keepIndex.push(index);\n                        }\n                    });\n                    this.recordList = this.recordList.filter((_, index) => !keepIndex.includes(index));\n                    this.storage.setItem(this.recordCacheKey, this.recordList).then(function (value) {\n                        resolve();\n                    }).catch(function (err) {\n                        reject(err);\n                    });\n                });\n            }));\n        });\n    }\n    markRecordItem(item) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.recordList.push(item);\n            if (this.recordList.length > MAX_LIMIT_REPORTCOUNT) {\n                let offset = this.recordList.length - MAX_LIMIT_REPORTCOUNT;\n                this.recordList.splice(0, offset);\n            }\n            return new Promise((resolve, reject) => {\n                this.storage.setItem(this.recordCacheKey, this.recordList).then(function (value) {\n                    resolve(item);\n                }).catch(function (err) {\n                    reject(err);\n                });\n            });\n        });\n    }\n    markRecord(content, type, action, side) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            let path = (_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.location.pathname;\n            let location = (_b = (0, url_1.getWindow)()) === null || _b === void 0 ? void 0 : _b.location.origin;\n            if (path && location) {\n                location = location + path;\n            }\n            let language = (_c = (0, url_1.getWindow)()) === null || _c === void 0 ? void 0 : _c.navigator.language;\n            let platform = this.reportPlatform;\n            let ua = (_d = (0, url_1.getWindow)()) === null || _d === void 0 ? void 0 : _d.navigator.userAgent;\n            let reportItem = {\n                uuid: this.currentUUID,\n                version: this.currentVersion,\n                content: content,\n                action: action,\n                side: side,\n                timestamp: new Date().getTime(),\n                url: location,\n                lang: language,\n                type: type,\n                platform: platform,\n                \"user-agent\": ua\n            };\n            return yield this.markRecordItem(reportItem);\n        });\n    }\n}\nexports.OKXReporter = OKXReporter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Report_WalletType_Key = exports.Report_Proceed_QRCode_Click = exports.Report_ChooseType_Download_Click = exports.Report_ChooseType_ConnectWallet_Click = exports.Report_Proceed_Retry_Click = exports.Report_ChooseType_ConnectWallet_View = exports.Report_Loading_ConnectWallet_View = exports.Report_Proceed_QRCode_View = exports.Report_Proceed_Proceed_View = void 0;\nexports.Report_Proceed_Proceed_View = \"OKXConnectSDK_Proceed_Proceed_View\";\nexports.Report_Proceed_QRCode_View = \"OKXConnectSDK_Proceed_QRCode_View\";\nexports.Report_Loading_ConnectWallet_View = \"OKXConnectSDK_Loading_ConnectWallet_View\";\nexports.Report_ChooseType_ConnectWallet_View = \"OKXConnectSDK_ChooseType_ConnectWallet_View\";\nexports.Report_Proceed_Retry_Click = \"OKXConnectSDK_Proceed_Retry_Click\";\nexports.Report_ChooseType_ConnectWallet_Click = \"OKXConnectSDK_ChooseType_ConnectWallet_Click\";\nexports.Report_ChooseType_Download_Click = \"OKXConnectSDK_ChooseType_Download_Click\";\nexports.Report_Proceed_QRCode_Click = \"OKXConnectSDK_Proceed_QRCode_Click\";\nexports.Report_WalletType_Key = 'wallet_type';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkMetaData = checkMetaData;\nconst protocol_1 = require(\"../protocol\");\nfunction checkMetaData(dappMetaData) {\n    if (!dappMetaData) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"You have to specify a `dappMetaData`in the options.\");\n    }\n    if (!dappMetaData.name) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"dappName is required\");\n    }\n    if (!dappMetaData.icon) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"icon is required\");\n    }\n    return true;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.safeJsonParse = safeJsonParse;\nexports.safeJsonStringify = safeJsonStringify;\nconst log_1 = require(\"./log\");\nconst JSONStringify = (data) => JSON.stringify(data, (_, value) => (typeof value === \"bigint\" ? value.toString() + \"n\" : value));\n/*\n  Function to parse JSON.\n  If JSON has values in our custom format BigInt (strings with \"n\" character at the end), we just parse them to BigInt values.\n  If JSON has big number values, but not in our custom format, we copy it, and in a copy we convert those values to our custom format,\n  then parse them to BigInt values.\n  Other values (not big numbers and not our custom format BigInt values) are not affected and parsed as native JSON.parse() would parse them.\n*/\nconst JSONParse = (json) => {\n    /*\n      Big numbers are found and marked using Regex with this condition:\n      Number's length is bigger than 16 || Number's length is 16 and any numerical digit of the number is greater than that of the Number.MAX_SAFE_INTEGER\n      Additionally, it skips values that are strings (between double quotes).\n      */\n    // prettier-ignore\n    // eslint-disable-next-line no-useless-escape\n    const numbersBiggerThanMaxInt = /:(\\b\\d{17,}|\\b(?:[9](?:[1-9]07199254740991|0[1-9]7199254740991|00[8-9]199254740991|007[2-9]99254740991|007199[3-9]54740991|0071992[6-9]4740991|00719925[5-9]740991|007199254[8-9]40991|0071992547[5-9]0991|00719925474[1-9]991|00719925474099[2-9])))(?=[,\\}\\]]|$)/g;\n    const serializedData = json.replace(numbersBiggerThanMaxInt, (match, group) => `:\"${group}n\"`);\n    try {\n        return JSON.parse(serializedData, (_, value) => {\n            const isCustomFormatBigInt = typeof value === \"string\" && value.match(/^\\d+n$/);\n            if (isCustomFormatBigInt)\n                return BigInt(value.substring(0, value.length - 1));\n            return value;\n        });\n    }\n    catch (e) {\n        return JSON.parse(json);\n    }\n};\nfunction safeJsonParse(value) {\n    if (typeof value !== \"string\") {\n        (0, log_1.logDebug)(value);\n        throw new Error(`Cannot safe json parse value of type ${typeof value}`);\n    }\n    try {\n        return JSONParse(value);\n    }\n    catch (e) {\n        // eslint-disable-next-line no-console\n        console.error(\"safeJsonParse error:\", e);\n        return value;\n    }\n}\nfunction safeJsonStringify(value) {\n    return typeof value === \"string\" ? value : JSONStringify(value) || \"\";\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.okxfromString = okxfromString;\nexports.okxtoString = okxtoString;\nexports.alloc = alloc;\nexports.allocUnsafe = allocUnsafe;\nconst basics_1 = require(\"multiformats/basics\");\nconst log_1 = require(\"../utils/log\");\nfunction okxfromString(string, encoding = 'utf8') {\n    const base = BASES[encoding];\n    (0, log_1.logDebug)(\"okxfromstring ====> \");\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    return base.decoder.decode(`${base.prefix}${string}`);\n}\nfunction okxtoString(array, encoding = 'utf8') {\n    const base = BASES[encoding];\n    (0, log_1.logDebug)(\"okxtoString ====> \");\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    return base.encoder.encode(array).substring(1);\n}\nfunction alloc(size = 0) {\n    return new Uint8Array(size);\n}\nfunction allocUnsafe(size = 0) {\n    return new Uint8Array(size);\n}\nfunction createCodec(name, prefix, encode, decode) {\n    return {\n        name,\n        prefix,\n        encoder: {\n            name,\n            prefix,\n            encode\n        },\n        decoder: { decode }\n    };\n}\nconst string = createCodec('utf8', 'u', buf => {\n    const decoder = new TextDecoder('utf8');\n    return 'u' + decoder.decode(buf);\n}, str => {\n    const encoder = new TextEncoder();\n    return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n    let result = 'a';\n    for (let i = 0; i < buf.length; i++) {\n        let bufNum = buf[i];\n        if (bufNum && String.fromCharCode(bufNum)) {\n            result += String.fromCharCode(bufNum);\n        }\n    }\n    return result;\n}, str => {\n    str = str.substring(1);\n    const buf = allocUnsafe(str.length);\n    for (let i = 0; i < str.length; i++) {\n        buf[i] = str.charCodeAt(i);\n    }\n    return buf;\n});\nconst BASES = Object.assign({ utf8: string, 'utf-8': string, hex: basics_1.bases.base16, latin1: ascii, ascii: ascii, binary: ascii }, basics_1.bases);\n","\"use strict\";\nvar _a, _b, _c, _d, _e, _f, _g;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isTmaPlatform = isTmaPlatform;\nexports.isInTMA = isInTMA;\nexports.isInTelegramBrowser = isInTelegramBrowser;\nexports.sendExpand = sendExpand;\nexports.sendOpenTelegramLink = sendOpenTelegramLink;\nexports.versionCompare = versionCompare;\nconst url_1 = require(\"./url\");\nconst log_1 = require(\"./log\");\nconst protocol_1 = require(\"../protocol\");\nconst web_api_1 = require(\"./web-api\");\nlet initParams = {};\ntry {\n    let locationHash = location.hash.toString();\n    initParams = urlParseHashParams(locationHash);\n}\ncatch (e) { }\nlet tmaPlatform = 'unknown';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppPlatform) {\n    tmaPlatform = (_a = initParams.tgWebAppPlatform) !== null && _a !== void 0 ? _a : 'unknown';\n}\nif (tmaPlatform === 'unknown') {\n    const window = (0, url_1.getWindow)();\n    tmaPlatform = (_d = (_c = (_b = window === null || window === void 0 ? void 0 : window.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : 'unknown';\n}\nlet webAppVersion = '6.0';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppVersion) {\n    webAppVersion = initParams.tgWebAppVersion;\n}\nif (!webAppVersion) {\n    const window = (0, url_1.getWindow)();\n    webAppVersion = (_g = (_f = (_e = window === null || window === void 0 ? void 0 : window.Telegram) === null || _e === void 0 ? void 0 : _e.WebApp) === null || _f === void 0 ? void 0 : _f.version) !== null && _g !== void 0 ? _g : '6.0';\n}\n/**\n * Returns true if the app is running in TMA on the specified platform.\n * @param platforms\n */\nfunction isTmaPlatform(...platforms) {\n    return platforms.includes(tmaPlatform);\n}\n/**\n * Returns true if the app is running in TMA.\n */\nfunction isInTMA() {\n    var _a;\n    return tmaPlatform !== 'unknown' || !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n}\n/**\n * Returns true if the app is running in the Telegram browser.\n */\nfunction isInTelegramBrowser() {\n    var _a;\n    const isTelegramWebview = !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebview);\n    return (isInTMA() || isTelegramWebview) && tmaPlatform === 'unknown';\n}\n/**\n * Expand the app window.\n */\nfunction sendExpand() {\n    postEvent('web_app_expand', {});\n}\n/**\n * Opens link in TMA or in new tab and returns a function that closes the tab.\n * @param link The link to open.\n * @param fallback The function to call if the link can't be opened in TMA.\n */\nfunction sendOpenTelegramLink(link, fallback) {\n    const url = new URL(link);\n    if (url.protocol !== 'http:' && url.protocol !== 'https:') {\n        if (fallback) {\n            return fallback();\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Url protocol is not supported: ${url}`);\n    }\n    if (url.hostname !== 't.me') {\n        if (fallback) {\n            return fallback();\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Url host is not supported: ${url}`);\n    }\n    const pathFull = url.pathname + url.search;\n    if (isIframe() || versionAtLeast('6.1')) {\n        postEvent('web_app_open_tg_link', { path_full: pathFull });\n    }\n    else {\n        (0, web_api_1.openLinkBlank)('https://t.me' + pathFull);\n    }\n}\nfunction isIframe() {\n    try {\n        const window = (0, url_1.getWindow)();\n        if (!window) {\n            return false;\n        }\n        return window.parent != null && window !== window.parent;\n    }\n    catch (e) {\n        return false;\n    }\n}\nfunction postEvent(eventType, eventData) {\n    try {\n        const window = (0, url_1.getWindow)();\n        if (!window) {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Can't post event to parent window: window is not defined`);\n        }\n        if (window.TelegramWebviewProxy !== undefined) {\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.TelegramWebviewProxy.postEvent(eventType, JSON.stringify(eventData));\n        }\n        else if (window.external && 'notify' in window.external) {\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.external.notify(JSON.stringify({ eventType: eventType, eventData: eventData }));\n        }\n        else if (isIframe()) {\n            const trustedTarget = '*';\n            const message = JSON.stringify({ eventType: eventType, eventData: eventData });\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.parent.postMessage(message, trustedTarget);\n        }\n        else {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Can't post event to TMA`);\n        }\n    }\n    catch (e) {\n        (0, log_1.logError)(`Can't post event to parent window: ${e}`);\n    }\n}\nfunction urlParseHashParams(locationHash) {\n    locationHash = locationHash.replace(/^#/, '');\n    let params = {};\n    if (!locationHash.length) {\n        return params;\n    }\n    if (locationHash.indexOf('=') < 0 && locationHash.indexOf('?') < 0) {\n        params._path = urlSafeDecode(locationHash);\n        return params;\n    }\n    let qIndex = locationHash.indexOf('?');\n    if (qIndex >= 0) {\n        let pathParam = locationHash.substr(0, qIndex);\n        params._path = urlSafeDecode(pathParam);\n        locationHash = locationHash.substr(qIndex + 1);\n    }\n    let query_params = urlParseQueryString(locationHash);\n    for (let k in query_params) {\n        params[k] = query_params[k];\n    }\n    return params;\n}\nfunction urlSafeDecode(urlencoded) {\n    try {\n        urlencoded = urlencoded.replace(/\\+/g, '%20');\n        return decodeURIComponent(urlencoded);\n    }\n    catch (e) {\n        return urlencoded;\n    }\n}\nfunction urlParseQueryString(queryString) {\n    let params = {};\n    if (!queryString.length) {\n        return params;\n    }\n    let queryStringParams = queryString.split('&');\n    let i, param, paramName, paramValue;\n    for (i = 0; i < queryStringParams.length; i++) {\n        param = queryStringParams[i].split('=');\n        paramName = urlSafeDecode(param[0]);\n        paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n        params[paramName] = paramValue;\n    }\n    return params;\n}\nfunction versionCompare(v1, v2) {\n    if (typeof v1 !== 'string')\n        v1 = '';\n    if (typeof v2 !== 'string')\n        v2 = '';\n    let v1List = v1.replace(/^\\s+|\\s+$/g, '').split('.');\n    let v2List = v2.replace(/^\\s+|\\s+$/g, '').split('.');\n    let a, i, p1, p2;\n    a = Math.max(v1List.length, v2List.length);\n    for (i = 0; i < a; i++) {\n        p1 = parseInt(v1List[i]) || 0;\n        p2 = parseInt(v2List[i]) || 0;\n        if (p1 === p2)\n            continue;\n        if (p1 > p2)\n            return 1;\n        return -1;\n    }\n    return 0;\n}\nfunction versionAtLeast(ver) {\n    return versionCompare(webAppVersion, ver) >= 0;\n}\n","\"use strict\";\nvar _a, _b, _c, _d;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.removeUrlLastSlash = removeUrlLastSlash;\nexports.addPathToUrl = addPathToUrl;\nexports.getUniversalLink = getUniversalLink;\nexports.openOKXDeeplink = openOKXDeeplink;\nexports.openOKXUniversalLink = openOKXUniversalLink;\nexports.openOKXDeeplinkWithFallback = openOKXDeeplinkWithFallback;\nexports.getWindow = getWindow;\nexports.isTelegramUrl = isTelegramUrl;\nexports.encodeTelegramUrlParameters = encodeTelegramUrlParameters;\nexports.encodeConnectParams = encodeConnectParams;\nexports.encodeTWAConnectURLParams = encodeTWAConnectURLParams;\nexports.getAppWalletDeepLink = getAppWalletDeepLink;\nexports.getAppWalletShortDeepLink = getAppWalletShortDeepLink;\nexports.getTelegramWalletTWAUrl = getTelegramWalletTWAUrl;\nexports.openOKXTMAWalletlinkWithFallback = openOKXTMAWalletlinkWithFallback;\nexports.isInTMA = isInTMA;\nexports.isInTelegramBrowser = isInTelegramBrowser;\nexports.getOKXLink = getOKXLink;\nconst protocol_1 = require(\"../protocol\");\nconst log_1 = require(\"./log\");\nconst constants_1 = require(\"../protocol/constants\");\nconst utils_1 = require(\"./utils\");\nconst tma_api_1 = require(\"./tma-api\");\nfunction removeUrlLastSlash(url) {\n    if (url.slice(-1) === '/') {\n        return url.slice(0, -1);\n    }\n    return url;\n}\nfunction addPathToUrl(url, path) {\n    return removeUrlLastSlash(url) + '/' + path;\n}\nfunction getUniversalLink(deeplinkUrl, useStandardUniversalLink = false) {\n    console.log(\"getUniversalLink deeplinkUrl:\", deeplinkUrl, \", useStandardUniversalLink:\", useStandardUniversalLink);\n    const replaceStrWithParam = `${protocol_1.standardDeeplink}?param=`;\n    if (!useStandardUniversalLink && deeplinkUrl.startsWith(replaceStrWithParam)) {\n        const cleanUrl = deeplinkUrl.replace(replaceStrWithParam, '');\n        (0, log_1.logDebug)(\"getUniversalLink cleanUrl:\", cleanUrl);\n        const deeplinkEncodeUrl = encodeURIComponent(cleanUrl);\n        (0, log_1.logDebug)(\"getUniversalLink standardUniversalLink:\", protocol_1.standardUniversalLink);\n        (0, log_1.logDebug)(\"getUniversalLink `${shortUniversalLink}?param=${deeplinkEncodeUrl}`:\", `${constants_1.shortUniversalLink}?param=${deeplinkEncodeUrl}`);\n        return `${constants_1.shortUniversalLink}?param=${deeplinkEncodeUrl}`;\n    }\n    else if (!useStandardUniversalLink && deeplinkUrl == protocol_1.standardDeeplink) {\n        (0, log_1.logDebug)(\"getUniversalLink shortUniversalLink:\", constants_1.shortUniversalLink);\n        return constants_1.shortUniversalLink;\n    }\n    else {\n        const deeplinkEncodeUrl = encodeURIComponent(deeplinkUrl);\n        console.log(\"getUniversalLink standardUniversalLink:\", protocol_1.standardUniversalLink);\n        return `${protocol_1.standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`;\n    }\n}\nfunction openOKXDeeplink(deeplinkUrl) {\n    var _a;\n    const fullUrl = getUniversalLink(deeplinkUrl);\n    const isTelegram = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n    console.log(\"openOKXDeeplink fullUrl:\", fullUrl);\n    if (!(0, utils_1.isIos)()) {\n        let newWindow = null;\n        if (isTelegram) {\n            newWindow = window.open(deeplinkUrl, '_blank');\n        }\n        else {\n            window.location.href = deeplinkUrl;\n        }\n    }\n    else {\n        openOKXUniversalLink(fullUrl);\n    }\n}\nfunction openOKXUniversalLink(fullUrl) {\n    if (!(0, utils_1.isIos)()) {\n        // if (isTelegram) {\n        window.open(fullUrl, '_blank');\n        // } else {\n        //     window.location.href = fullUrl;\n        // }\n    }\n    else {\n        if (isInTMA()) {\n            window.open(fullUrl, '_blank');\n        }\n        else {\n            console.log(\"windowOpen[before]: \", Date.now());\n            if (window === null || window === void 0 ? void 0 : window.okxLogDebug) {\n                window.open(fullUrl, '_blank');\n            }\n            else {\n                window.open(fullUrl, '_self');\n            }\n            console.log(\"windowOpen[after]: \", Date.now());\n        }\n    }\n}\nfunction openOKXDeeplinkWithFallback(deeplinkUrl) {\n    var _a;\n    const fullUrl = getUniversalLink(deeplinkUrl);\n    const isTelegram = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n    console.log(\"openOKXDeeplinkWithFallback fullUrl:\", fullUrl);\n    let deepLinkOpened = false;\n    const timeoutDuration = 3000; // 1.5秒的等待时间\n    const downloadUrl = protocol_1.standardUniversalLink;\n    console.log(\"openOKXDeeplinkWithFallback standardUniversalLink:\", protocol_1.standardUniversalLink);\n    if (!(0, utils_1.isIos)()) {\n        let newWindow = null;\n        var fallbackToDownloadPage = () => {\n            if (!deepLinkOpened) {\n                if (newWindow) {\n                    newWindow.open(downloadUrl, '_self');\n                }\n                else {\n                    window.open(downloadUrl, '_blank');\n                }\n            }\n        };\n        if (isTelegram) {\n            newWindow = window.open(deeplinkUrl, '_blank');\n        }\n        else {\n            window.location.href = deeplinkUrl;\n        }\n        setTimeout(fallbackToDownloadPage, timeoutDuration);\n        window.addEventListener('blur', () => {\n            deepLinkOpened = true;\n        }, { once: true });\n        document.addEventListener('visibilitychange', () => {\n            if (document.visibilityState === 'hidden') {\n                deepLinkOpened = true;\n            }\n        });\n    }\n    else {\n        if (isTelegram) {\n            window.open(fullUrl, '_blank');\n        }\n        else {\n            console.log(\"windowOpen[before]: \", Date.now());\n            if (window === null || window === void 0 ? void 0 : window.okxLogDebug) {\n                window.open(fullUrl, '_blank');\n            }\n            else {\n                window.open(fullUrl, '_self');\n            }\n            console.log(\"windowOpen[after]: \", Date.now());\n        }\n    }\n}\nfunction getWindow() {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    return undefined;\n}\nfunction isTelegramUrl(link) {\n    if (!link) {\n        return false;\n    }\n    const url = new URL(link);\n    return url.protocol === 'tg:' || url.hostname === 't.me';\n}\nfunction encodeTelegramUrlParameters(parameters) {\n    let encodedParameters = parameters;\n    encodedParameters = encodedParameters.replace(/\\./g, '%2E');\n    encodedParameters = encodedParameters.replace(/-/g, '%2D');\n    encodedParameters = encodedParameters.replace(/_/g, '%5F');\n    encodedParameters = encodedParameters.replace(/&/g, '-');\n    encodedParameters = encodedParameters.replace(/=/g, '__');\n    encodedParameters = encodedParameters.replace(/%/g, '--');\n    return encodedParameters;\n}\nfunction encodeConnectParams(connectRequest) {\n    const connectRequestStr = JSON.stringify(connectRequest);\n    (0, log_1.logDebug)(\"url encodeConnectParams connectRequestStr \", connectRequestStr);\n    const utf8Array = new TextEncoder().encode(connectRequestStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    // .replace(/\\+/g, '-')\n    // .replace(/\\//g, '_')\n    // .replace(/=+$/, ''); //Compatible with older versions of iOS. Cannot be added directly  (Base64 URL Safe)\n    (0, log_1.logDebug)(\"url encodeConnectParams base64Encoded \", base64Encoded);\n    return base64Encoded;\n}\nfunction encodeTWAConnectURLParams(connectRequest) {\n    const connectRequestStr = JSON.stringify({ topic: connectRequest.topic, clientId: connectRequest.clientId });\n    (0, log_1.logDebug)(\"url encodeConnectParams connectRequestStr\", connectRequestStr);\n    const utf8Array = new TextEncoder().encode(connectRequestStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    return base64Encoded;\n}\nfunction getAppWalletDeepLink(connectParam) {\n    return `${protocol_1.standardDeeplink}?param=${connectParam}`;\n}\nfunction getAppWalletShortDeepLink(topic, clientId) {\n    return `${constants_1.shortUniversalLink}?topic=${topic}${(0, utils_1.getLastSixMd5Hash)(clientId)}`;\n}\n//  make telegram okx wallet TWA url\nfunction getTelegramWalletTWAUrl(connectParam, redirectStr) {\n    let base64Content = { okxconnect: \"\", redirect: \"\", extraparams: \"\" };\n    if (connectParam) {\n        base64Content.okxconnect = connectParam;\n    }\n    if (redirectStr) {\n        base64Content.redirect = redirectStr;\n    }\n    let base64ContentStr = JSON.stringify(base64Content);\n    const utf8Array = new TextEncoder().encode(base64ContentStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    const urlSafeBase64 = (0, utils_1.toSafeBase64FromBase64)(base64Encoded);\n    (0, log_1.logDebug)('[TWA] open link:', base64Content, base64Encoded);\n    if (connectParam || redirectStr) {\n        if (!isInTMA()) {\n            // return `http://localhost:5173?tgWebAppStartParam=${urlSafeBase64}`\n            if ((0, constants_1.getTestTwaUrl)()) {\n                return `${(0, constants_1.getTestTwaUrl)()}?tgWebAppStartParam=${urlSafeBase64}`;\n            }\n            else {\n                return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}&startapp=${urlSafeBase64}`;\n            }\n        }\n        else {\n            if ((0, constants_1.getTestTgTwaUrl)()) {\n                return `${(0, constants_1.getTestTgTwaUrl)()}?startapp=${urlSafeBase64}`;\n            }\n            else {\n                return `https://t.me/${constants_1.tgwalletName}/start?startapp=${urlSafeBase64}`;\n            }\n        }\n    }\n    if (!isInTMA()) {\n        // return \"http://localhost:5173\"\n        if ((0, constants_1.getTestTwaUrl)()) {\n            return `${(0, constants_1.getTestTwaUrl)()}`;\n        }\n        else {\n            return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}`;\n        }\n    }\n    else {\n        if ((0, constants_1.getTestTgTwaUrl)()) {\n            return `${(0, constants_1.getTestTgTwaUrl)()}`;\n        }\n        else {\n            return `https://t.me/${constants_1.tgwalletName}/start`;\n        }\n    }\n}\n//  open TWA url in telegram\nfunction openOKXTMAWalletlinkWithFallback(twaDeepLink) {\n    var _a, _b, _c, _d, _e;\n    (0, log_1.logDebug)('[TWA] open link:', twaDeepLink, \"isInTMA ==> \", isInTMA());\n    if (!isInTMA()) {\n        if ((0, constants_1.getTestTwaUrl)()) {\n            window.open(twaDeepLink, '_blank');\n        }\n        else {\n            window.open(twaDeepLink, '_self');\n        }\n    }\n    else {\n        if ((_b = (_a = getWindow()) === null || _a === void 0 ? void 0 : _a.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) {\n            (_e = (_d = (_c = getWindow()) === null || _c === void 0 ? void 0 : _c.Telegram) === null || _d === void 0 ? void 0 : _d.WebApp) === null || _e === void 0 ? void 0 : _e.openTelegramLink(twaDeepLink);\n        }\n        else {\n            (0, tma_api_1.sendOpenTelegramLink)(twaDeepLink);\n        }\n    }\n}\n/**\n * Returns true if the app is running in TMA.\n */\nfunction urlSafeDecode(urlencoded) {\n    try {\n        urlencoded = urlencoded.replace(/\\+/g, '%20');\n        return decodeURIComponent(urlencoded);\n    }\n    catch (e) {\n        return urlencoded;\n    }\n}\nfunction urlParseQueryString(queryString) {\n    let params = {};\n    if (!queryString.length) {\n        return params;\n    }\n    let queryStringParams = queryString.split('&');\n    let i, param, paramName, paramValue;\n    for (i = 0; i < queryStringParams.length; i++) {\n        param = queryStringParams[i].split('=');\n        paramName = urlSafeDecode(param[0]);\n        paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n        params[paramName] = paramValue;\n    }\n    return params;\n}\nfunction urlParseHashParams(locationHash) {\n    locationHash = locationHash.replace(/^#/, '');\n    let params = {};\n    if (!locationHash.length) {\n        return params;\n    }\n    if (locationHash.indexOf('=') < 0 && locationHash.indexOf('?') < 0) {\n        params._path = urlSafeDecode(locationHash);\n        return params;\n    }\n    let qIndex = locationHash.indexOf('?');\n    if (qIndex >= 0) {\n        let pathParam = locationHash.substr(0, qIndex);\n        params._path = urlSafeDecode(pathParam);\n        locationHash = locationHash.substr(qIndex + 1);\n    }\n    let query_params = urlParseQueryString(locationHash);\n    for (let k in query_params) {\n        params[k] = query_params[k];\n    }\n    return params;\n}\nlet initParams = {};\ntry {\n    let locationHash = location.hash.toString();\n    initParams = urlParseHashParams(locationHash);\n}\ncatch (e) { }\nlet tmaPlatform = 'unknown';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppPlatform) {\n    tmaPlatform = (_a = initParams.tgWebAppPlatform) !== null && _a !== void 0 ? _a : 'unknown';\n}\nif (tmaPlatform === 'unknown') {\n    const window = getWindow();\n    tmaPlatform = (_d = (_c = (_b = window === null || window === void 0 ? void 0 : window.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : 'unknown';\n}\nfunction isInTMA() {\n    var _a;\n    return tmaPlatform !== 'unknown' || !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n}\n/**\n * Returns true if the app is running in the Telegram browser.\n */\nfunction isInTelegramBrowser() {\n    var _a;\n    const isTelegramWebview = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebview);\n    return (isInTMA() || isTelegramWebview) && tmaPlatform === 'unknown';\n}\nfunction getOKXLink(connectRequest, useMini = false, tmaReturnUrl) {\n    (0, log_1.logDebug)(`url  getOKXLink() called connectRequest==> ${JSON.stringify(connectRequest)}  useMini=> ${useMini}  tmaReturnUrl==> ${tmaReturnUrl}`);\n    if (useMini) {\n        var encodeTGParams = encodeTWAConnectURLParams(connectRequest);\n        return getTelegramWalletTWAUrl(encodeTGParams, tmaReturnUrl !== null && tmaReturnUrl !== void 0 ? tmaReturnUrl : \"back\");\n    }\n    else {\n        if ((0, utils_1.useShortLink)()) {\n            return getAppWalletShortDeepLink(connectRequest.topic, connectRequest.clientId);\n        }\n        else {\n            const base64Encoded = encodeConnectParams(connectRequest);\n            return `${protocol_1.standardDeeplink}?param=${base64Encoded}`;\n        }\n    }\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isValidObject = exports.RANDOM_LENGTH = exports.isBrowser = exports.resolveLocalStorage = exports.hasLocalStorage = exports.hasBuiltInWebSocket = exports.resolveWebSocketImplementation = void 0;\nexports.hexToByteArray = hexToByteArray;\nexports.toHexString = toHexString;\nexports.concatUint8Arrays = concatUint8Arrays;\nexports.splitToUint8Arrays = splitToUint8Arrays;\nexports.base64encode = base64encode;\nexports.base64decode = base64decode;\nexports.checkWSUrl = checkWSUrl;\nexports.hashKey = hashKey;\nexports.generateRandomBytes32 = generateRandomBytes32;\nexports.generateTopic = generateTopic;\nexports.isIos = isIos;\nexports.getLastSixMd5Hash = getLastSixMd5Hash;\nexports.toSafeBase64FromBase64 = toSafeBase64FromBase64;\nexports.useShortLink = useShortLink;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst tweetnacl_util_1 = __importDefault(require(\"tweetnacl-util\"));\nconst to_string_1 = require(\"uint8arrays/to-string\");\nconst sha256_1 = require(\"@stablelib/sha256\");\nconst safejson_1 = require(\"./safejson\");\nconst log_1 = require(\"./log\");\nconst stringUtils_1 = require(\"../utils/stringUtils\");\nconst crypto_js_1 = __importDefault(require(\"crypto-js\"));\nconst BASE16 = \"base16\";\nfunction hexToByteArray(hexString) {\n    if (hexString.length % 2 !== 0) {\n        throw new Error(`Cannot convert ${hexString} to bytesArray`);\n    }\n    const result = new Uint8Array(hexString.length / 2);\n    for (let i = 0; i < hexString.length; i += 2) {\n        result[i / 2] = parseInt(hexString.slice(i, i + 2), 16);\n    }\n    return result;\n}\nfunction toHexString(byteArray) {\n    let hexString = '';\n    byteArray.forEach(byte => {\n        hexString += ('0' + (byte & 0xff).toString(16)).slice(-2);\n    });\n    return hexString;\n}\nfunction concatUint8Arrays(buffer1, buffer2) {\n    const mergedArray = new Uint8Array(buffer1.length + buffer2.length);\n    mergedArray.set(buffer1);\n    mergedArray.set(buffer2, buffer1.length);\n    return mergedArray;\n}\nfunction splitToUint8Arrays(array, index) {\n    if (index >= array.length) {\n        throw new Error('Index is out of buffer');\n    }\n    const subArray1 = array.slice(0, index);\n    const subArray2 = array.slice(index);\n    return [subArray1, subArray2];\n}\nfunction encodeUint8Array(value, urlSafe) {\n    const encoded = tweetnacl_util_1.default.encodeBase64(value);\n    if (!urlSafe) {\n        return encoded;\n    }\n    return encodeURIComponent(encoded);\n}\nfunction decodeToUint8Array(value, urlSafe) {\n    if (urlSafe) {\n        value = decodeURIComponent(value);\n    }\n    return tweetnacl_util_1.default.decodeBase64(value);\n}\nfunction base64encode(value, urlSafe) {\n    let uint8Array;\n    if (value instanceof Uint8Array) {\n        uint8Array = value;\n    }\n    else {\n        if (typeof value !== 'string') {\n            value = (0, safejson_1.safeJsonStringify)(value);\n        }\n        uint8Array = tweetnacl_util_1.default.decodeUTF8(value);\n    }\n    return encodeUint8Array(uint8Array, urlSafe);\n}\nfunction base64decode(value, urlSafe) {\n    const decodedUint8Array = decodeToUint8Array(value, urlSafe);\n    return {\n        toString() {\n            return tweetnacl_util_1.default.encodeUTF8(decodedUint8Array);\n        },\n        toObject() {\n            try {\n                return (0, safejson_1.safeJsonParse)(tweetnacl_util_1.default.encodeUTF8(decodedUint8Array));\n            }\n            catch (e) {\n                return null;\n            }\n        },\n        toUint8Array() {\n            return decodedUint8Array;\n        }\n    };\n}\nfunction checkWSUrl(url) {\n    const match = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!match || !match.length) {\n        return false;\n    }\n    let scheme = match[0];\n    if (scheme === undefined) {\n        return false;\n    }\n    return new RegExp(\"^wss?:\").test(scheme);\n}\nconst resolveWebSocketImplementation = () => {\n    if (typeof WebSocket !== \"undefined\") {\n        return WebSocket;\n    }\n    else if (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") {\n        return global.WebSocket;\n    }\n    else if (typeof window !== \"undefined\" && typeof window.WebSocket !== \"undefined\") {\n        return window.WebSocket;\n    }\n    else if (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\") {\n        return self.WebSocket;\n    }\n    return WebSocket;\n    //\n    // return require(\"ws\");\n};\nexports.resolveWebSocketImplementation = resolveWebSocketImplementation;\nconst hasBuiltInWebSocket = () => typeof WebSocket !== \"undefined\" ||\n    (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") ||\n    (typeof window !== \"undefined\" && typeof window.WebSocket !== \"undefined\") ||\n    (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\");\nexports.hasBuiltInWebSocket = hasBuiltInWebSocket;\nconst hasLocalStorage = () => (typeof global !== \"undefined\" && (typeof global.localStorage !== \"undefined\")) ||\n    (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\");\nexports.hasLocalStorage = hasLocalStorage;\nconst resolveLocalStorage = () => {\n    if (typeof global !== \"undefined\" && typeof global.localStorage !== \"undefined\") {\n        return global.localStorage;\n    }\n    else if (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\") {\n        return window.localStorage;\n    }\n    return localStorage;\n};\nexports.resolveLocalStorage = resolveLocalStorage;\nconst isBrowser = () => typeof window !== \"undefined\";\nexports.isBrowser = isBrowser;\nexports.RANDOM_LENGTH = 32;\nfunction hashKey(key, encode = BASE16) {\n    (0, log_1.logDebug)(`hash key called ${key}`);\n    const result = (0, sha256_1.hash)((0, stringUtils_1.okxfromString)(key, encode));\n    return (0, to_string_1.toString)(result, encode);\n}\nfunction generateRandomBytes32() {\n    return tweetnacl_1.default.randomBytes(exports.RANDOM_LENGTH);\n}\nfunction generateTopic() {\n    let randomBytes32 = generateRandomBytes32();\n    (0, log_1.logDebug)(`generate topic called ${randomBytes32}`);\n    return hashKey((0, to_string_1.toString)(randomBytes32, BASE16));\n}\nconst isValidObject = (obj) => Object.getPrototypeOf(obj) === Object.prototype && Object.keys(obj).length;\nexports.isValidObject = isValidObject;\nfunction isIos() {\n    const userAgent = navigator.userAgent;\n    const maxTouchPoints = navigator.maxTouchPoints || 0;\n    // 检测 iPhone、iPod 和传统的 iPad\n    const isIOSDevice = /iPad|iPhone|iPod/.test(userAgent) && !window.MSStream;\n    // 针对 iPadOS 13 及以上的设备进行额外判断\n    const isIPadOS = (userAgent.includes('Mac') && maxTouchPoints > 1);\n    (0, log_1.logDebug)(`utils isIos >>>isIOSDevice: ${isIOSDevice}    >> isIPadOS: ${isIPadOS}`);\n    // 如果是 iOS 设备或者是 iPadOS 设备，返回 true\n    return isIOSDevice || isIPadOS;\n}\nfunction getLastSixMd5Hash(input) {\n    // 生成 MD5 哈希\n    const hash = crypto_js_1.default.MD5(input).toString();\n    // 获取最后六位\n    return hash.slice(-6);\n}\nfunction toSafeBase64FromBase64(base64) {\n    return base64\n        .replace(/=/g, \"\")\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\");\n}\nfunction useShortLink() {\n    return !!window.useShortLink;\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.openLink = openLink;\nexports.openLinkBlank = openLinkBlank;\nexports.openDeeplinkWithFallback = openDeeplinkWithFallback;\nexports.isMobileUserAgent = isMobileUserAgent;\nexports.getUserAgent = getUserAgent;\nexports.isOS = isOS;\nexports.isBrowser = isBrowser;\nconst ua_parser_js_1 = __importDefault(require(\"ua-parser-js\"));\nconst log_1 = require(\"./log\");\nfunction openLink(href, target = '_self') {\n    (0, log_1.logDebug)('openLink', href, target);\n    window.open(href, target, 'noopener noreferrer');\n}\nfunction openLinkBlank(href) {\n    openLink(href, '_blank');\n}\nfunction openDeeplinkWithFallback(href, fallback) {\n    const doFallback = () => {\n        if (isBrowser('safari') || (isOS('android') && isBrowser('firefox'))) {\n            // Safari does not support fallback to direct link.\n            return;\n        }\n        fallback();\n    };\n    const fallbackTimeout = setTimeout(() => doFallback(), 500);\n    window.addEventListener('blur', () => clearTimeout(fallbackTimeout), { once: true });\n    openLink(href, '_self');\n}\nfunction isMobileUserAgent() {\n    let check = false;\n    (function (a) {\n        if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) ||\n            /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.slice(0, 4)))\n            check = true;\n    })(navigator.userAgent ||\n        navigator.vendor ||\n        window.opera);\n    return check;\n}\nfunction getUserAgent() {\n    var _a, _b, _c;\n    const results = new ua_parser_js_1.default().getResult();\n    const osName = (_a = results.os.name) === null || _a === void 0 ? void 0 : _a.toLowerCase();\n    const deviceModel = (_b = results.device.model) === null || _b === void 0 ? void 0 : _b.toLowerCase();\n    let os;\n    switch (true) {\n        case deviceModel === 'ipad':\n            os = 'ipad';\n            break;\n        case osName === 'ios':\n            os = 'ios';\n            break;\n        case osName === 'android':\n            os = 'android';\n            break;\n        case osName === 'mac os':\n            os = 'macos';\n            break;\n        case osName === 'linux':\n            os = 'linux';\n            break;\n        case osName === null || osName === void 0 ? void 0 : osName.includes('windows'):\n            os = 'windows';\n            break;\n    }\n    const browserName = (_c = results.browser.name) === null || _c === void 0 ? void 0 : _c.toLowerCase();\n    let browser;\n    switch (true) {\n        case browserName === 'chrome':\n            browser = 'chrome';\n            break;\n        case browserName === 'firefox':\n            browser = 'firefox';\n            break;\n        case browserName === null || browserName === void 0 ? void 0 : browserName.includes('safari'):\n            browser = 'safari';\n            break;\n        case browserName === null || browserName === void 0 ? void 0 : browserName.includes('opera'):\n            browser = 'opera';\n            break;\n    }\n    return {\n        os,\n        browser\n    };\n}\nfunction isOS(...os) {\n    return os.includes(getUserAgent().os);\n}\nfunction isBrowser(...browser) {\n    return browser.includes(getUserAgent().browser);\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXBtcProvider = void 0;\nconst _1 = require(\"./\");\nclass OKXBtcProvider {\n    constructor(provider) {\n        this.caip = [\n            \"btc:mainnet\",\n            \"fractal:mainnet\"\n        ];\n        this.provider = provider;\n    }\n    getAddressForChainId(chainId) {\n        var _a, _b;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let accounts = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        });\n        if (accounts == undefined || accounts.length < 0) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `no connected account`);\n        }\n        let account = accounts[0];\n        const address = account.split(':')[2];\n        return address;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let extra = (_c = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[ns]) === null || _b === void 0 ? void 0 : _b.extra) === null || _c === void 0 ? void 0 : _c[chainId];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        return {\n            address: this.getAddressForChainId(chainId),\n            publicKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param signStr\n     * @param chainId\n     * @param type\n     * @returns\n     */\n    signMessage(chainId, signStr, type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (signStr === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signMessage parmas error`);\n            }\n            let params = {\n                signStr: signStr,\n                from: this.getAddressForChainId(chainId)\n            };\n            if (type) {\n                params.type = type;\n            }\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signMessage\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param toAddress\n     * @param satoshis\n     * @param options { feeRate: 0 }\n     * @returns\n     */\n    sendBitcoin(chainId, toAddress, satoshis, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            let params = {\n                from: this.getAddressForChainId(chainId),\n                to: toAddress,\n                value: (satoshis / 100000000).toString(),\n            };\n            if (options === null || options === void 0 ? void 0 : options.feeRate) {\n                params[\"satBytes\"] = options.feeRate.toString();\n            }\n            let result = yield this.send(chainId, params);\n            if (result !== undefined && ('txhash' in result)) {\n                // return txhash directly\n                return result.txhash;\n            }\n            // or return unexpected result\n            return result;\n        });\n    }\n    //  from - string：当前连接的钱包的 BTC 地址\n    //  to - string：接受 BTC 的地址\n    //  value - string：发送 BTC 的数量\n    //  satBytes - string： (可选) 自定义费率\n    //  memo - string： (可选) 指定 outputs OP_RETURN 内容 示例\n    //  memoPos - number： (可选) 指定 outputs OP_RETURN 输出位置，如果传了 memo 则必须传入 memoPos 指定位置，否则 memo 不生效\n    send(chainId, input) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (!this.checkParameters(input, 'to', 'value')) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send parmas  error`);\n            }\n            input[\"from\"] = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: 'btc_send',\n                    params: input\n                }, chainId);\n                if ('result' in ret) {\n                    return {\n                        txhash: ret.result\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param psbtHex string 要签名的 psbt 的十六进制字符串\n     * @param options object { autoFinalized: 0 }\n     */\n    signPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.signPsbts(chainId, [psbtHex], [options]).then(psbtResults => {\n                    let results = JSON.parse(psbtResults);\n                    resolve(results[0]);\n                }).catch(error => {\n                    reject(error);\n                });\n            });\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHexs Array\n     * @param options Array [{ autoFinalized: 0 }]\n     * @returns\n     */\n    signPsbts(chainId, psbtHexs, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHexs === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHexs: psbtHexs,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signPsbts\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHex string\n     * @param options object\n     * @returns\n     */\n    signAndPushPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHex === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHex: psbtHex,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signAndPushPsbt\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return JSON.parse(ret.result);\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param address string, receiver address\n     * @param inscriptionId string, 铭文 ID + 协议，没有传协议则默认是 Ordinals NFT ，目前仅支持 Ordinals 及 Atomicals 协议\n     * @param options object, { feeRate: number } custom rates\n     */\n    sendInscription(chainId, address, inscriptionId, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let extension = {\n                address: address,\n                inscriptionId: inscriptionId,\n                options: options\n            };\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (address === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method sendInscription params error`);\n            }\n            var feeRate = 0;\n            if (options && ('feeRate' in options)) {\n                feeRate = options.feeRate;\n            }\n            let coinId = '';\n            let from = this.getAddressForChainId(chainId);\n            var protocolId = 7; //ProtocolIdBRCNFT\n            if (inscriptionId !== 'undefined') {\n                let atomicSuffix = \"-Atomicals\";\n                let ordinalsSuffix = \"-Ordinals\";\n                if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(atomicSuffix.toLowerCase())) {\n                    protocolId = 8; //WXRCProtocolIdARCNFT\n                    inscriptionId = this.removeSuffix(inscriptionId, atomicSuffix);\n                }\n                else if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(ordinalsSuffix.toLowerCase())) {\n                    inscriptionId = this.removeSuffix(inscriptionId, ordinalsSuffix);\n                }\n            }\n            let params = {\n                scenario: 5,\n                feeRate: feeRate,\n                txType: \"20\",\n                to: address,\n                batchBean: [\n                    {\n                        coinAmount: \"1\",\n                        nftId: inscriptionId,\n                        protocolId: protocolId,\n                        coinId: coinId,\n                        inscriptionId: \"\",\n                        from: from\n                    }\n                ],\n                extension: extension\n            };\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_sendInscription\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    removeSuffix(str, suffix) {\n        if (str.endsWith(suffix)) {\n            return str.slice(0, str.length - suffix.length);\n        }\n        return str;\n    }\n    checkParameters(params, ...keys) {\n        var unexistKeys = [];\n        keys.forEach(key => {\n            if (!(`${key}` in params)) {\n                unexistKeys.push(key);\n            }\n        });\n        if (unexistKeys.length > 0) {\n            console.log('not find key: ', unexistKeys.join(\",\"));\n            return false;\n        }\n        return true;\n    }\n    /**\n     *\n     * @param chainId eg. btc:mainnet\n     * @returns eg. btc\n     */\n    checkChainId(chainId) {\n        if (this.caip.includes(chainId)) {\n            let [namespaceKey, _] = chainId.split(\":\");\n            return namespaceKey;\n        }\n        return undefined;\n    }\n}\nexports.OKXBtcProvider = OKXBtcProvider;\nexports.default = OKXBtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCosmosProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXCosmosProvider {\n    constructor(provider) {\n        this.provider = provider;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e, _f;\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount chainId:\", chainId);\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount namespaces:\", JSON.stringify((_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces));\n        let account = (_c = (_b = this.provider.session) === null || _b === void 0 ? void 0 : _b.namespaces[core_1.NameSpaceKeyCosmos]) === null || _c === void 0 ? void 0 : _c.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount account:\", JSON.stringify(account));\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount address:\", address);\n        let extra = (_f = (_e = (_d = this.provider.session) === null || _d === void 0 ? void 0 : _d.namespaces[core_1.NameSpaceKeyCosmos]) === null || _e === void 0 ? void 0 : _e.extra) === null || _f === void 0 ? void 0 : _f[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n            console.log(\"aptos_publicKey\", publicKey);\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            algo: \"secp256k1\",\n            address: address,\n            bech32Address: address,\n            pubKey: this.hexToUint8Array(publicKey),\n        };\n    }\n    signArbitrary(chainId, signerAddress, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const base64Encoded = window.btoa(data);\n            const signDoc = {\n                chain_id: \"\",\n                account_number: \"0\",\n                sequence: \"0\",\n                fee: {\n                    gas: \"0\",\n                    amount: []\n                },\n                msgs: [{\n                        \"type\": \"sign/MsgSignData\",\n                        \"value\": {\n                            \"signer\": signerAddress,\n                            \"data\": base64Encoded\n                        }\n                    }],\n                memo: \"\"\n            };\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signArbitrary\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chain_id\": chainId.split(\":\")[1],\n                    \"data\": signDoc\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    if (typeof ret.result == \"string\") {\n                        return JSON.parse(ret.result);\n                    }\n                    else {\n                        return ret.result;\n                    }\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAmino(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (signDoc.msgs[0].type == \"sign/MsgSignData\") {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signArbitrary\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chain_id\": chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        return ret.result;\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    return error;\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                }\n            }\n            else {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signAmino\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chainId\": chainId.split(\":\")[1],\n                        \"sign_doc\": signDoc,\n                        \"signOptions\": signOptions\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        const resData = JSON.parse(ret.result);\n                        console.log(\"signdoc\", signDoc, resData.signDoc);\n                        signDoc.fee = resData.signDoc.fee;\n                        return { signed: signDoc, signature: resData.signature };\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                    return error;\n                }\n            }\n        });\n    }\n    signDirect(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const object = {\n                bodyBytes: this.bufferToHex(signDoc.bodyBytes),\n                authInfoBytes: this.bufferToHex(signDoc.authInfoBytes),\n                chainId: signDoc.chainId,\n                accountNumber: signDoc.accountNumber ? signDoc.accountNumber.toString() : null,\n                signOptions: signOptions ? signOptions : null\n            };\n            let data = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signDirect\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chainId\": chainId.split(\":\")[1],\n                    \"sign_doc\": object,\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    const res = JSON.parse(ret.result);\n                    console.log(\"signdirect result\", res);\n                    signDoc.authInfoBytes = this.messageToBuffer(res.signDoc.authInfoBytes);\n                    return { signed: signDoc, signature: res.signature };\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    messageToBuffer(message) {\n        var buffer = Uint8Array.from([]);\n        try {\n            if (typeof message === \"string\") {\n                buffer = this.hexToUint8Array(message.replace(\"0x\", \"\"));\n            }\n            else {\n                buffer = Uint8Array.from(message);\n            }\n        }\n        catch (err) {\n            console.log(`messageToBuffer error: ${err}`);\n        }\n        return buffer;\n    }\n    bufferToHex(arr) {\n        let output = [...new Uint8Array(arr)]\n            .map(x => x.toString(16).padStart(2, '0'))\n            .join('');\n        return '0x' + output;\n    }\n    hexToUint8Array(hexString) {\n        if (hexString.length % 2 !== 0) {\n            throw \"Invalid hexString\";\n        }\n        var arrayBuffer = new Uint8Array(hexString.length / 2);\n        for (var i = 0; i < hexString.length; i += 2) {\n            var byteValue = parseInt(hexString.substr(i, 2), 16);\n            if (isNaN(byteValue)) {\n                throw \"Invalid hexString\";\n            }\n            arrayBuffer[i / 2] = byteValue;\n        }\n        return arrayBuffer;\n    }\n}\nexports.OKXCosmosProvider = OKXCosmosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXStarknetProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXStarknetProvider {\n    constructor(provider) {\n        this.STARKNET_CHAIN_ID = \"starknet:mainnet\";\n        this.provider = provider;\n    }\n    getChain(chainId) {\n        if (chainId == null) {\n            chainId = this.STARKNET_CHAIN_ID;\n        }\n        if (chainId != this.STARKNET_CHAIN_ID) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, \"The chainId:\" + chainId + \"is wrong for OKXStarknetProvider\");\n        }\n        return chainId;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyStarknet]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyStarknet]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address,\n            pubKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param chainId\n     * @param signerAddress\n     * @param data: { types, primaryType, domain, message } as TypedData\n     * @returns [signedDataR, signedDataS]\n     */\n    signMessage(signerAddress, typedData, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            if (signerAddress.length == 0) {\n                signerAddress = this.getAccount(chainId)[\"address\"];\n            }\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"starknet_signMessage\",\n                \"params\": {\n                    \"accountAddress\": signerAddress,\n                    \"typedData\": typedData\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    console.log(\"=====> 签名结果result的类型：\", typeof ret.result);\n                    console.log(ret);\n                    let results = ret.result;\n                    if (typeof results == 'string') {\n                        results = JSON.parse(results);\n                    }\n                    console.log(ret);\n                    return [results[\"signedDataR\"], results[\"signedDataS\"]];\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     * sendTransaction\n     * @param chainId\n     * @param signerAddress\n     * @param transaction\n     * @returns { transaction_hash }\n     */\n    sendTransaction(signerAddress, transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let transactionData = {\n                \"accountAddress\": signerAddress,\n                \"executionRequest\": transaction\n            };\n            let data = {\n                \"method\": \"starknet_sendTransaction\",\n                \"params\": {\n                    \"data\": JSON.stringify(transactionData),\n                    \"from\": signerAddress\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return { transaction_hash: ret.result };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * signMessage old API（rarely used, no need provide to external）\n     * @param chainId\n     * @param payload\n     * @returns {transaction_hash, class_hash}\n     */\n    signMessageDeclareContractPayload(payload, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            try {\n                let data = {\n                    \"method\": \"starknet_signMessage\",\n                    \"params\": payload\n                };\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    console.log(\"=====> (旧API)签名结果result的类型：\", typeof ret.result);\n                    console.log(ret);\n                    return {\n                        \"transaction_hash\": ret.result[\"txHash\"],\n                        \"class_hash\": ret.result[\"classHash\"]\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     * sendTransaction old API（rarely used, no need provide to external）\n     * @param chainId\n     * @param signerAddress\n     * @param calls\n     * @param abis\n     * @param transactionsDetail\n     * @returns { transaction_hash }\n     */\n    /// todo： \n    /// 修改方法名\n    /// chainId 放后面\n    sendMessageExecuteTransactionDetail(signerAddress, calls, abis, transactionsDetail, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            const transactions = Array.isArray(calls) ? calls : [calls];\n            const executionRequest = {\n                \"calls\": transactions,\n                \"abis\": abis,\n                \"transactionsDetail\": {\n                    \"nonce\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.nonce,\n                    \"maxFee\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.nonce,\n                    \"version\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.version,\n                }\n            };\n            return this.sendTransaction(signerAddress, executionRequest, chainId);\n        });\n    }\n}\nexports.OKXStarknetProvider = OKXStarknetProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTonProvider = void 0;\nconst _1 = require(\"./\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTonProvider {\n    constructor(generator) {\n        this.statusChangeSubscriptions = [];\n        this.statusChangeErrorSubscriptions = [];\n        this.provider = generator;\n        this.provider.on(\"connect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event connect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"reconnect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event reconnect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"disconnect\", () => {\n            (0, core_1.logDebug)(\"OKXTONProvider event disconnect:\");\n            this.statusChangeSubscriptions.forEach(callback => callback(null));\n        });\n        this.provider.on(\"connect_error\", (error) => {\n            (0, core_1.logDebug)(\"OKXTONProvider event connect_error:\", JSON.stringify(error));\n            this.statusChangeErrorSubscriptions.forEach(errorsHandler => errorsHandler(error));\n        });\n    }\n    connected() {\n        if (this.provider.connected()) {\n            return !!this.provider.session.namespaces[\"ton\"];\n        }\n        return false;\n    }\n    account() {\n        try {\n            if (!this.provider.session) {\n                return null;\n            }\n            let tonNameSpace = this.provider.session.namespaces['ton'];\n            if (!tonNameSpace || !tonNameSpace.payload || !tonNameSpace.payload.ton_addr) {\n                return null;\n            }\n            let ton_addr = tonNameSpace.payload.ton_addr;\n            return {\n                address: ton_addr.address,\n                chain: ton_addr.network,\n                walletStateInit: ton_addr.walletStateInit,\n                publicKey: ton_addr.publicKey,\n            };\n        }\n        catch (e) {\n            (0, core_1.logDebug)(\"OKXTONProvider account  error:\", JSON.stringify(e));\n            return null;\n        }\n    }\n    wallet() {\n        if (this.connected()) {\n            try {\n                let sessionWallet = this.provider.session.wallet;\n                let tonDeviceInfo = {\n                    platform: sessionWallet.platform,\n                    appName: sessionWallet.appName,\n                    appVersion: sessionWallet.appVersion,\n                    maxProtocolVersion: sessionWallet.maxProtocolVersion,\n                    features: ['ton_sendTransaction'],\n                };\n                const wallet = {\n                    device: tonDeviceInfo,\n                    provider: \"http\",\n                    account: this.account()\n                };\n                let tonNameSpace = this.provider.session.namespaces['ton'];\n                if (tonNameSpace && tonNameSpace.payload && tonNameSpace.payload.ton_proof) {\n                    wallet.connectItems = {\n                        tonProof: tonNameSpace.payload.ton_proof\n                    };\n                }\n                (0, core_1.logDebug)(\"OKXTONProvider wallet :\", JSON.stringify(wallet));\n                return wallet;\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"OKXTONProvider wallet  error:\", JSON.stringify(e));\n                return null;\n            }\n        }\n        return null;\n    }\n    onStatusChange(callback, errorsHandler) {\n        this.statusChangeSubscriptions.push(callback);\n        if (errorsHandler) {\n            this.statusChangeErrorSubscriptions.push(errorsHandler);\n        }\n        return () => {\n            this.statusChangeSubscriptions = this.statusChangeSubscriptions.filter(item => item !== callback);\n            if (errorsHandler) {\n                this.statusChangeErrorSubscriptions = this.statusChangeErrorSubscriptions.filter(item => item !== errorsHandler);\n            }\n        };\n    }\n    sendTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (transaction.network && transaction.network !== core_1.TONCHAIN.MAINNET) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, 'OKXTONProvider sendTransaction network error');\n            }\n            if (!transaction.network) {\n                transaction.network = core_1.TONCHAIN.MAINNET;\n            }\n            if (this.provider.session) {\n                if (!transaction.from) {\n                    const accounts = this.provider.requestAccountsWithNamespace('ton');\n                    transaction.from = accounts[0];\n                }\n            }\n            const requestParams = {\n                method: \"ton_sendTransaction\",\n                params: transaction,\n            };\n            let chain = 'ton:' + core_1.TONCHAIN.MAINNET;\n            (0, core_1.logDebug)(\"OKXTONProvider sendTransaction transaction----:\", chain, JSON.stringify(requestParams));\n            return this.provider.request(requestParams, chain);\n        });\n    }\n}\nexports.OKXTonProvider = OKXTonProvider;\nexports.default = OKXTonProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTronProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTronProvider {\n    constructor(provider) {\n        this.TRON_CHAIN_ID = \"tron:mainnet\";\n        this.provider = provider;\n    }\n    getChain(chainId) {\n        if (chainId == null) {\n            chainId = this.TRON_CHAIN_ID;\n        }\n        if (chainId != this.TRON_CHAIN_ID) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, \"The chainId:\" + chainId + \"is wrong for OKXTronProvider\");\n        }\n        return chainId;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        chainId = this.getChain(chainId);\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyTron]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyTron]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address\n        };\n    }\n    stringToHex(str) {\n        let hex = '';\n        for (let i = 0; i < str.length; i++) {\n            hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n        }\n        return hex;\n    }\n    signMessage(data, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessage\",\n                \"params\": {\n                    \"message\": this.stringToHex(data)\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signMessageV2(data, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessageV2\",\n                \"params\": {\n                    \"message\": data\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let data = {\n                \"method\": \"tron_signTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    let signedTx;\n                    if (typeof ret.result == \"string\") {\n                        signedTx = JSON.parse(ret.result);\n                    }\n                    else {\n                        signedTx = ret.result;\n                    }\n                    let realSignTx = {};\n                    realSignTx.visible = signedTx.visible;\n                    realSignTx.txID = signedTx.txID;\n                    let rawData = {};\n                    rawData.contract = signedTx.raw_data.contract;\n                    rawData.expiration = signedTx.raw_data.expiration;\n                    rawData.ref_block_bytes = signedTx.raw_data.ref_block_bytes;\n                    rawData.fee_limit = signedTx.raw_data.fee_limit;\n                    rawData.ref_block_hash = signedTx.raw_data.ref_block_hash;\n                    rawData.timestamp = signedTx.raw_data.timestamp;\n                    realSignTx.raw_data = rawData;\n                    realSignTx.raw_data_hex = signedTx.raw_data_hex;\n                    realSignTx.signature = signedTx.signature;\n                    return realSignTx;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAndSendTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let data = {\n                \"method\": \"tron_signAndSendTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n}\nexports.OKXTronProvider = OKXTronProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXUniversalProvider = void 0;\nconst eip155_1 = require(\"./provider/providers/eip155\");\nconst sui_1 = require(\"./provider/providers/sui\");\nconst constants_1 = require(\"./provider/constants\");\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nconst client_1 = require(\"./packages/sign-client/client\");\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"./packages/utils/namespaces\");\nconst solana_1 = __importDefault(require(\"./provider/providers/solana\"));\nconst btc_1 = __importDefault(require(\"./provider/providers/btc\"));\nconst aptos_1 = __importDefault(require(\"./provider/providers/aptos\"));\nconst ton_1 = __importDefault(require(\"./provider/providers/ton\"));\nconst cosmos_1 = __importDefault(require(\"./provider/providers/cosmos\"));\nconst tron_1 = __importDefault(require(\"./provider/providers/tron\"));\nconst utils_1 = require(\"./provider/utils\");\nconst packages_1 = require(\"./packages\");\nconst provider_1 = require(\"./provider\");\nconst starknet_1 = __importDefault(require(\"./provider/providers/starknet\"));\nclass OKXUniversalProvider {\n    static init(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider init() called');\n            (0, core_1.checkMetaData)(opts.dappMetaData);\n            // ignore rpc provider check by default\n            (0, utils_1.setGlobal)('disableProviderPing', true);\n            let provider;\n            if (window && window.okxConnectUniversalinwindow && window.okxConnectUniversalinwindow instanceof OKXUniversalProvider) {\n                (0, core_1.logDebug)('OKXUniversalConnect init() old called');\n                provider = window.okxConnectUniversalinwindow;\n            }\n            else {\n                (0, core_1.logDebug)('OKXUniversalConnect init() new called');\n                provider = new OKXUniversalProvider(opts);\n                yield provider.initialize();\n                if (window) {\n                    window.okxConnectUniversalinwindow = provider;\n                }\n            }\n            (0, core_1.getDefaultReporter)().configVersionAndSide('universalprovider-1.5.2', 'dapp', provider.providerOpts.dappMetaData.name);\n            return provider;\n        });\n    }\n    constructor(opts) {\n        this.rpcProviders = {};\n        this.events = new eventemitter3_1.default();\n        this.providerOpts = opts;\n    }\n    request(args, chain) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider request() called');\n            (0, core_1.reportLog)('OKXUniversalProvider request() called');\n            if (!this.connected()) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return yield this.getProvider(namespace).request(requestParam);\n        });\n    }\n    buildRequestParamFromRequest(args, chain) {\n        var _a;\n        (0, core_1.logDebug)(\"UniversalProvider request args >>>>>>>: \", chain, JSON.stringify(args));\n        let [namespace, chainId] = this.validateChain(chain);\n        if (!this.session) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Please call connect() before request()\");\n        }\n        let keyArr = Object.keys(this.session.namespaces);\n        if (!chain && keyArr && keyArr.length > 1) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Multiple chains have been linked, the request method requires chain`);\n        }\n        if (namespace == \"aptos\" && chainId == \"mainnet\") {\n            namespace = \"aptos\";\n            chainId = \"637\";\n        }\n        if (namespace == \"movement\" && chainId == \"testnet\") {\n            namespace = \"aptos\";\n            chainId = \"70000060\";\n        }\n        const requestParam = Object.assign(Object.assign({}, args), { chainId: `${namespace}:${chainId}`, redirect: (_a = args.redirect) !== null && _a !== void 0 ? _a : this.sessionConfig.redirect });\n        return { namespace, requestParam };\n    }\n    enable() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.client) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (!this.session) {\n                if (this.connectOpts) {\n                    yield this.connect(this.connectOpts);\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n                }\n            }\n            const accounts = yield this.requestAccounts();\n            return accounts;\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider disconnect() called');\n            (0, core_1.reportLog)('provider disconnect called');\n            if (!this.session) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                let called = false;\n                const onRequestSent = () => __awaiter(this, void 0, void 0, function* () {\n                    if (!called) {\n                        called = true;\n                        yield this.disconnectAndEmit();\n                        yield this.cleanup();\n                        resolve();\n                        (0, core_1.logDebug)(\"UniversalProvider disconnect Disconnected\");\n                        (0, core_1.reportLog)('provider disconnect disconnected');\n                    }\n                });\n                try {\n                    yield this.client.disconnect();\n                    yield onRequestSent();\n                }\n                catch (e) {\n                    yield onRequestSent();\n                }\n            }));\n        });\n    }\n    disconnectAndEmit() {\n        var _a, _b;\n        this.client.engine.connectionManager.disconnect();\n        this.events.emit(\"disconnect\", { topic: (_a = this.session) === null || _a === void 0 ? void 0 : _a.topic });\n        this.events.emit(\"session_delete\", { topic: (_b = this.session) === null || _b === void 0 ? void 0 : _b.topic });\n    }\n    aptosChainNameToGeneralId(chainId) {\n        if (chainId == \"aptos:mainnet\") {\n            return \"aptos:637\";\n        }\n        else if (chainId == \"movement:testnet\") {\n            return \"aptos:70000060\";\n        }\n        else {\n            return chainId;\n        }\n    }\n    replaceAptos(opts) {\n        var _a, _b;\n        let aptosNameSpace = (_a = opts.namespaces) === null || _a === void 0 ? void 0 : _a[\"aptos\"];\n        if (aptosNameSpace != undefined) {\n            let realNS = this.replaceAptosInner(aptosNameSpace);\n            if (opts.namespaces != undefined && \"aptos\" in opts.namespaces && realNS != undefined) {\n                opts.namespaces.aptos = realNS;\n            }\n        }\n        let optionAptosNameSpace = (_b = opts.optionalNamespaces) === null || _b === void 0 ? void 0 : _b[\"aptos\"];\n        if (optionAptosNameSpace != undefined) {\n            let realOptionNS = this.replaceAptosInner(optionAptosNameSpace);\n            if (opts.optionalNamespaces != undefined && \"aptos\" in opts.optionalNamespaces && realOptionNS != undefined) {\n                opts.optionalNamespaces.aptos = realOptionNS;\n            }\n        }\n        return opts;\n    }\n    replaceAptosInner(aptosNameSpace) {\n        var _a;\n        if (aptosNameSpace != undefined) {\n            aptosNameSpace.chains = (_a = aptosNameSpace.chains) === null || _a === void 0 ? void 0 : _a.map(chainId => {\n                return this.aptosChainNameToGeneralId(chainId);\n            });\n            if (aptosNameSpace.defaultChain != undefined) {\n                aptosNameSpace.defaultChain = this.aptosChainNameToGeneralId(aptosNameSpace.defaultChain);\n            }\n        }\n        return aptosNameSpace;\n    }\n    replaceAptosGeneralIdWithNetName(chainId) {\n        if (chainId.includes(\"aptos:637\")) {\n            chainId = chainId.replace(\"aptos:637\", \"aptos:mainnet\");\n        }\n        else if (chainId.includes(\"aptos:70000060\")) {\n            chainId = chainId.replace(\"aptos:70000060\", \"movement:testnet\");\n        }\n        return chainId;\n    }\n    replaceSessionAptos(session) {\n        var _a;\n        let namespaces = (_a = session === null || session === void 0 ? void 0 : session.namespaces) === null || _a === void 0 ? void 0 : _a[\"aptos\"];\n        if (namespaces != undefined && namespaces.chains != undefined) {\n            namespaces.chains = namespaces.chains.map(chain => {\n                return this.replaceAptosGeneralIdWithNetName(chain);\n            });\n            namespaces.accounts = namespaces.accounts.map((account) => {\n                return this.replaceAptosGeneralIdWithNetName(account);\n            });\n            let extra = {};\n            Object.keys(namespaces.extra || {}).forEach((key, index) => {\n                let newKey = this.replaceAptosGeneralIdWithNetName(key);\n                extra[this.replaceAptosGeneralIdWithNetName(key)] = Object.values((session === null || session === void 0 ? void 0 : session.namespaces[\"aptos\"].extra) || {})[index];\n            });\n            namespaces.extra = extra;\n        }\n        (0, core_1.logDebug)(\"replaceSessionAptos\", session);\n    }\n    connected() {\n        (0, core_1.logDebug)('OKXUniversalProvider connected() called');\n        (0, core_1.reportLog)('provider connected called');\n        let disconnectInner = () => {\n            try {\n                this.cleanup();\n                this.client.engine.connectionManager.disconnect();\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"Error during disconnect:\", e);\n            }\n        };\n        try {\n            if (!this.session)\n                return false;\n            if (!this.client.engine.connectionManager.getCurrentConnectionReady()) {\n                disconnectInner();\n                return false;\n            }\n            return true;\n        }\n        catch (e) {\n            disconnectInner();\n            return false;\n        }\n    }\n    connectAndSign(opts, signRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() called');\n            const updatedOpts = Object.assign(Object.assign({}, opts), { signRequest });\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() opts:', JSON.stringify(opts));\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() signRequest:', JSON.stringify(signRequest));\n            return yield this.connect(updatedOpts);\n        });\n    }\n    connect(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider connect() called');\n            (0, core_1.reportLog)('provider connect called');\n            if (!this.client) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (this.connected()) {\n                return this.session;\n            }\n            opts = this.replaceAptos(opts);\n            (0, core_1.logDebug)(`OKXUniversalProvider connect >>>>`, JSON.stringify(opts));\n            if (opts.sessionConfig === undefined) {\n                opts.sessionConfig = {};\n            }\n            if (opts.sessionConfig.openUniversalUrl === undefined) {\n                opts.sessionConfig.openUniversalUrl = (0, core_1.isMobileUserAgent)();\n            }\n            this.setNamespaces(opts);\n            try {\n                (0, core_1.logDebug)(`UniversalProvider connect opts.stringify ====> ${JSON.stringify(opts)}`);\n                let session = yield this.client.connect(opts);\n                this.replaceSessionAptos(session);\n                (0, core_1.logDebug)(`UniversalProvider connect success ====> ${JSON.stringify(session)}`);\n                if (session) {\n                    this.session = session;\n                    this.client.session = session;\n                    (0, core_1.logDebug)(`OKXUniversalProvider connect success opts>>>>`, JSON.stringify(opts));\n                    this.onConnect();\n                    if (opts.signRequest && opts.signRequest.length > 0) {\n                        let requestItem = opts.signRequest[0];\n                        let signResponseList = [];\n                        if (typeof window !== \"undefined\" && window && window.okxConnectUniversalUIinwindow) { //from UI\n                            (0, core_1.logDebug)(`OKXUniversalProvider connect success, us UI SDK>>>>`);\n                            if (this.session.signResponse && this.session.signResponse.length > 0) { // >=6.96\n                                signResponseList = this.session.signResponse;\n                            }\n                        }\n                        else {\n                            (0, core_1.logDebug)(`OKXUniversalProvider connect success, us Universal SDK>>>>`);\n                            if (this.session.signResponse && this.session.signResponse.length > 0) { // >=6.96\n                                signResponseList = this.session.signResponse;\n                            }\n                            else {\n                                signResponseList.push((0, packages_1.creatNotSupportMethodItemReplay)(requestItem));\n                            }\n                        }\n                        (0, core_1.logDebug)(`UniversalProvider connect success connectRequestReply ====> ${JSON.stringify(signResponseList)}`);\n                        setTimeout(() => {\n                            this.events.emit(\"connect_signResponse\", signResponseList);\n                        }, 100);\n                    }\n                    return session;\n                }\n                return undefined;\n            }\n            catch (error) {\n                (0, core_1.logDebug)(`UniversalProvider connect error ====> `, JSON.stringify(error));\n                throw error;\n            }\n        });\n    }\n    syncAllAddresses() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if ((0, provider_1.syncAddressAvailable)(this.session.wallet)) {\n                return this.client.syncAllAddress();\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n            }\n        });\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    setDefaultChain(chain, rpcUrl) {\n        (0, core_1.logDebug)('OKXUniversalProvider setDefaultChain() called');\n        // chain = this.aptosChainNameToGeneralId(chain)\n        try {\n            // ignore without active session\n            if (!this.connected())\n                return;\n            const [namespace, chainId] = this.validateChain(chain);\n            const provider = this.getProvider(namespace);\n            provider.setDefaultChain(chainId, rpcUrl);\n        }\n        catch (error) {\n            // ignore the error if the fx is used prematurely before namespaces are set\n            if (!/Please call connect/.test(error.message))\n                throw error;\n        }\n    }\n    checkStorage() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let sessionInfoStr = yield this.getFromStore(\"connectSession\");\n            (0, core_1.logDebug)(sessionInfoStr);\n            if (sessionInfoStr) {\n                let sessionInfo = sessionInfoStr;\n                this.session = sessionInfo;\n                this.client.session = this.session;\n                this.sessionConfig = sessionInfo.sessionConfig;\n                this.client.sessionConfig = this.sessionConfig;\n                (0, core_1.logDebug)('[evm u-provider] do reconnection', this.session);\n                yield this.client.restoreconnect(sessionInfo);\n                this.createProviders();\n                this.registerEventListeners();\n                setTimeout(() => {\n                    this.events.emit(\"reconnect\", { session: this.session });\n                }, 100);\n                this.registerEventListeners();\n            }\n        });\n    }\n    initialize() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider initialize() called');\n            (0, core_1.reportLog)('provider initialize called');\n            const data = Object.assign({ url: window.location.hostname, origin: window.location.origin }, this.providerOpts.dappMetaData);\n            this.client = new client_1.SignClient(data, this.events);\n            yield this.checkStorage();\n        });\n    }\n    createProviders() {\n        if (!this.client) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n        }\n        if (!this.connected()) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Session not initialized. Please call connect() before enable()\");\n        }\n        const providersToCreate = [\n            ...new Set(Object.keys(this.session.namespaces).map((namespace) => (0, namespaces_1.parseNamespaceKey)(namespace))),\n        ];\n        providersToCreate.forEach((namespace) => {\n            if (!this.session)\n                return;\n            const namespacesValue = this.session.namespaces;\n            const currentNameSpace = namespacesValue[namespace];\n            (0, core_1.logDebug)(\"init eip155 >> \", currentNameSpace);\n            switch (namespace) {\n                case \"eip155\":\n                    const opts = {\n                        namespace: currentNameSpace\n                    };\n                    this.rpcProviders[namespace] = new eip155_1.Eip155Provider(opts, this.client, this.events);\n                    break;\n                case \"solana\":\n                    const opts1 = {\n                        namespace: currentNameSpace\n                    };\n                    let solanaProvider = new solana_1.default(opts1, \"solana\", this.client, this.events);\n                    this.rpcProviders[namespace] = solanaProvider;\n                    let sonicProvider = new solana_1.default(opts1, \"sonic\", this.client, this.events);\n                    this.rpcProviders['sonic'] = sonicProvider;\n                    let svmProvider = new solana_1.default(opts1, \"svm\", this.client, this.events);\n                    this.rpcProviders['svm'] = svmProvider;\n                    // this.rpcProviders[namespace] = new SolanaProvider(opts1, () => { return this.session; });\n                    break;\n                case \"ton\":\n                    const optsTon = {\n                        namespace: currentNameSpace\n                    };\n                    let tonProvider = new ton_1.default(optsTon, this.client, this.events);\n                    this.rpcProviders[namespace] = tonProvider;\n                    break;\n                case \"sui\":\n                    const optsSui = {\n                        namespace: currentNameSpace\n                    };\n                    let suiProvider = new sui_1.SuiProvider(optsSui, this.client, this.events);\n                    suiProvider.name = \"sui\";\n                    this.rpcProviders[namespace] = suiProvider;\n                    break;\n                case \"btc\":\n                    const optsBtc = {\n                        namespace: currentNameSpace\n                    };\n                    let btcProvider = new btc_1.default(optsBtc, \"btc\", this.client, this.events);\n                    this.rpcProviders[\"btc\"] = btcProvider;\n                    let fbProvider = new btc_1.default(optsBtc, \"fractal\", this.client, this.events);\n                    this.rpcProviders[\"fractal\"] = fbProvider;\n                    break;\n                case \"aptos\":\n                    let aptosProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"aptos\", this.client, this.events);\n                    this.rpcProviders[namespace] = aptosProvider;\n                    let moveProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"movement\", this.client, this.events);\n                    this.rpcProviders[\"movement\"] = moveProvider;\n                    break;\n                case \"cosmos\":\n                    let cosmosProvider = new cosmos_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = cosmosProvider;\n                    break;\n                case \"tron\":\n                    let tronProvider = new tron_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = tronProvider;\n                    break;\n                case \"starknet\":\n                    let starknetProvider = new starknet_1.default({\n                        namespace: currentNameSpace\n                    }, \"starknet\", this.client, this.events);\n                    this.rpcProviders[namespace] = starknetProvider;\n                    break;\n            }\n        });\n    }\n    registerEventListeners() {\n        if (typeof this.client === \"undefined\") {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client is not initialized\");\n        }\n        this.client.engine.addDisconnectListener(() => {\n            this.disconnectAndEmit();\n            this.cleanup();\n        });\n        this.on(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, (caip2ChainId) => {\n            this.onChainChanged(caip2ChainId);\n        });\n        this.on(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, (nameSpaces) => {\n            if (nameSpaces) {\n                const nameSpacekey = Object.keys(nameSpaces)[0];\n                if (this.session) {\n                    this.session.namespaces[nameSpacekey] = nameSpaces[nameSpacekey];\n                    if (this.session) {\n                        this.persist(\"connectSession\", this.session);\n                        this.events.emit(\"session_update\", this.session);\n                    }\n                    (0, core_1.logDebug)(\"PROVIDER_EVENTS.UPDATE_NAMESPACES this.session... ->>>\", JSON.stringify(this.session));\n                }\n            }\n        });\n    }\n    getProvider(namespace) {\n        (0, core_1.logDebug)('current get providers', this.rpcProviders);\n        (0, core_1.logDebug)('query namespace: ', namespace);\n        return this.rpcProviders[namespace];\n    }\n    setNamespaces(params) {\n        this.connectOpts = params;\n        const { namespaces, sessionConfig } = params;\n        const data = {\n            origin: window.location.origin,\n            url: window.location.hostname,\n            name: this.providerOpts.dappMetaData.name,\n            icon: this.providerOpts.dappMetaData.icon,\n        };\n        this.sessionConfig = Object.assign({ dappInfo: data }, sessionConfig);\n        (0, core_1.logDebug)(\"setNamespaces sessionConfig>>>\", this.sessionConfig);\n        this.client.sessionConfig = this.sessionConfig;\n        this.persist(\"sessionConfig\", sessionConfig);\n    }\n    validateChain(chain) {\n        var _a;\n        let [namespace, chainId] = (chain === null || chain === void 0 ? void 0 : chain.split(\":\")) || [\"\", \"\"];\n        if (!this.session || !this.session.namespaces || !Object.keys(this.session.namespaces).length) {\n            (0, core_1.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        if (namespace) {\n            if (!this.isChainNamespaceInSession(namespace)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace '${namespace}' is not configured. Please call connect() first with namespace config.`);\n            }\n            if (chainId && chain) {\n                (0, core_1.logDebug)('this.session.namespaces -->> ', namespace, JSON.stringify(this.session.namespaces));\n                const chainsArr = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.chains;\n                (0, core_1.logDebug)('get chainsArr & chain', JSON.stringify(chainsArr), chain);\n                if (chainsArr && !chainsArr.includes(chain)) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace not include the chain '${chain}'`);\n                }\n            }\n        }\n        if (namespace && chainId) {\n            (0, core_1.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        let defaultNamespace = (0, namespaces_1.parseNamespaceKey)(Object.keys(this.session.namespaces)[0]);\n        const defaultChain = this.rpcProviders[defaultNamespace].getDefaultChain();\n        (0, core_1.logDebug)('get default chain:', defaultChain);\n        return [defaultNamespace, defaultChain];\n    }\n    isChainNamespaceInSession(namespaceStr) {\n        var _a, _b;\n        if (Object.keys(((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces) || {})\n            .map((key) => (0, namespaces_1.parseNamespaceKey)(key))\n            .includes(namespaceStr)) {\n            return true;\n        }\n        let isChainNamespaceInSession = false;\n        Object.values(((_b = this.session) === null || _b === void 0 ? void 0 : _b.namespaces) || {})\n            .forEach(namespace => {\n            namespace.chains.forEach(chain => {\n                if (chain.split(\":\")[0] == namespaceStr) {\n                    isChainNamespaceInSession = true;\n                }\n            });\n        });\n        return isChainNamespaceInSession;\n    }\n    requestAccountsWithNamespace(namespace) {\n        return this.getProvider(namespace).requestAccounts();\n    }\n    requestDefaultChainWithNamespace(namespace) {\n        return this.getProvider(namespace).getDefaultChain();\n    }\n    requestAccounts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const [namespace] = this.validateChain();\n            return yield this.getProvider(namespace).requestAccounts();\n        });\n    }\n    onChainChanged(caip2Chain) {\n        var _a;\n        if (!((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces))\n            return;\n        const [namespace, chainId] = this.validateChain(caip2Chain);\n        if (!chainId)\n            return;\n        if (this.session.namespaces[namespace]) {\n            this.session.namespaces[namespace].defaultChain = chainId;\n            this.persist(\"connectSession\", this.session);\n        }\n        this.events.emit(\"chainChanged\", chainId);\n    }\n    onConnect() {\n        this.createProviders();\n        if (this.session) {\n            this.persist(\"connectSession\", this.session);\n        }\n        this.events.emit(\"connect\", { session: this.session });\n        this.registerEventListeners();\n    }\n    cleanup() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.session = undefined;\n            this.client.session = undefined;\n            this.sessionProperties = undefined;\n            this.persist(\"optionalNamespaces\", undefined);\n            this.persist(\"sessionProperties\", undefined);\n            this.persist(\"connectSession\", undefined);\n        });\n    }\n    persist(key, data) {\n        (0, core_1.logDebug)('[evm u-provider] persisit data', key, data);\n        return this.client.engine.connectionManager.saveSessionContent(key, data);\n    }\n    getFromStore(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.client.engine.connectionManager.getSessionContent(key);\n        });\n    }\n    showRequestModal(args, chain) {\n        try {\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return this.getProvider(namespace).showRequestModal(requestParam);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n}\nexports.OKXUniversalProvider = OKXUniversalProvider;\nexports.default = OKXUniversalProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXStarknetProvider = exports.OKXTronProvider = exports.OKXTonProvider = exports.OKXCosmosProvider = exports.OKXBtcProvider = exports.OKXUniversalProvider = void 0;\n__exportStar(require(\"./provider/types\"), exports);\n__exportStar(require(\"./packages\"), exports);\nvar OKXUniversalProvider_1 = require(\"./OKXUniversalProvider\");\nObject.defineProperty(exports, \"OKXUniversalProvider\", { enumerable: true, get: function () { return OKXUniversalProvider_1.OKXUniversalProvider; } });\nvar OKXBtcProvider_1 = require(\"./OKXBtcProvider\");\nObject.defineProperty(exports, \"OKXBtcProvider\", { enumerable: true, get: function () { return OKXBtcProvider_1.OKXBtcProvider; } });\nvar OKXCosmosProvider_1 = require(\"./OKXCosmosProvider\");\nObject.defineProperty(exports, \"OKXCosmosProvider\", { enumerable: true, get: function () { return OKXCosmosProvider_1.OKXCosmosProvider; } });\nvar OKXTonProvider_1 = require(\"./OKXTonProvider\");\nObject.defineProperty(exports, \"OKXTonProvider\", { enumerable: true, get: function () { return OKXTonProvider_1.OKXTonProvider; } });\nvar OKXTronProvider_1 = require(\"./OKXTronProvider\");\nObject.defineProperty(exports, \"OKXTronProvider\", { enumerable: true, get: function () { return OKXTronProvider_1.OKXTronProvider; } });\nvar OKXStarknetProvider_1 = require(\"./OKXStarknetProvider\");\nObject.defineProperty(exports, \"OKXStarknetProvider\", { enumerable: true, get: function () { return OKXStarknetProvider_1.OKXStarknetProvider; } });\n__exportStar(require(\"@okxconnect/core\"), exports);\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignClient = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"../utils/namespaces\");\nconst ConnectMethodUtils_1 = require(\"../utils/ConnectMethodUtils\");\nconst constants_1 = require(\"../../provider/constants\");\nclass SignClient extends core_1.ISignClient {\n    constructor(metaData, events) {\n        super(metaData);\n        // ---------- Engine ----------------------------------------------- //\n        this.connect = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    var connectRequest = [];\n                    (0, core_1.logDebug)(`client connect params >>>`, JSON.stringify(params));\n                    var requestAccountItem = {\n                        name: \"requestAccounts\",\n                        requiredNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.namespaces),\n                        optionalNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.optionalNamespaces),\n                    };\n                    this.engine.setSessionConnectingListener(() => {\n                        (0, core_1.logDebug)(`sessionConnectingListener >>>`);\n                        this.events.emit(constants_1.PROVIDER_EVENTS.SESSION_CONNECTING);\n                    });\n                    if (params.signRequest) {\n                        requestAccountItem.connectRequestMethods = yield (0, ConnectMethodUtils_1.connectMethodsToConnectWalletMethods)(params.signRequest, requestAccountItem.requiredNamespaces);\n                    }\n                    connectRequest.push(requestAccountItem);\n                    (0, core_1.logDebug)(`client connect connectRequest >>>`, JSON.stringify(connectRequest));\n                    this.engine.universalConnect(connectRequest, Object.assign({ dappInfo: this.metadata }, params.sessionConfig), (info) => {\n                        if (info && info.connectRequest) {\n                            (0, core_1.logDebug)(`universalConect info.connectRequest :`, info.connectRequest);\n                            (0, core_1.logDebug)(`universalConect url:`, (0, core_1.getOKXLink)(info.connectRequest, this.sessionConfig.useMini));\n                            this.events.emit(\"display_uri\", (0, core_1.getOKXLink)(info.connectRequest, this.sessionConfig.useMini));\n                            this.events.emit(\"short_display_uri\", (0, core_1.getAppWalletShortDeepLink)(info.connectRequest.topic, info.connectRequest.clientId));\n                            (0, core_1.logDebug)(`universalConect EngineConnectInfo  ${JSON.stringify(info)}`);\n                            this.events.emit(\"okx_engine_connect_params\", info);\n                        }\n                    }).then((session) => __awaiter(this, void 0, void 0, function* () {\n                        (0, namespaces_1.fillParamsToSession)(session, params.namespaces, params.optionalNamespaces, this.sessionConfig);\n                        (0, core_1.logDebug)(`signClient: connect: session ${JSON.stringify(session)}`);\n                        if (params.signRequest) {\n                            yield (0, ConnectMethodUtils_1.connectMethodsResponseUpdate)(session, params.signRequest);\n                        }\n                        resolve(session);\n                    })).catch((e) => {\n                        (0, core_1.logDebug)(`signClient: connect: catch ${JSON.stringify(e)}`);\n                        this.events.emit(\"connect_error\", e);\n                        reject(e);\n                    });\n                }\n                catch (error) {\n                    (0, core_1.logDebug)(`signClient: connect:  ${JSON.stringify(error)}`);\n                    reject(error);\n                }\n            }));\n        });\n        this.restoreconnect = (sessionConfig) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.restoreconnect(sessionConfig, (session) => {\n                    resolve(session);\n                });\n            });\n        });\n        this.reject = (params) => __awaiter(this, void 0, void 0, function* () {\n            //   try {\n            //     return await this.engine.reject(params);\n            //   } catch (error: any) {\n            //     this.logger.error(error.message);\n            //     throw error;\n            //   }\n        });\n        //\n        // public update: ISignClient[\"update\"] = async (params) => {\n        //   return\n        // //   try {\n        // //     return await this.engine.update(params);\n        // //   } catch (error: any) {\n        // //     this.logger.error(error.message);\n        // //     throw error;\n        // //   }\n        // };\n        this.request = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                (0, core_1.logDebug)(\"clint request --params>>>> >\", this.engine.connectionManager.getCurrentConnectionReady(), (_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl, JSON.stringify(params));\n                try {\n                    // this.sessionConfig\n                    if (((_b = this.sessionConfig) === null || _b === void 0 ? void 0 : _b.openUniversalUrl) && (0, core_1.isIos)()) {\n                        this.openOKXWallet();\n                    }\n                    yield this.engine.send(params, {\n                        resolve: (response) => {\n                            delete response.requestId;\n                            (0, core_1.logDebug)(\"clint request --response >\", JSON.stringify(response));\n                            if (('error' in response) && response.error) {\n                                let error = response.error;\n                                reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                            }\n                            else {\n                                resolve(response);\n                            }\n                        },\n                        onAck: () => {\n                            var _a;\n                            if (!(0, core_1.isIos)() && ((_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl)) {\n                                this.openOKXWallet();\n                            }\n                        }\n                    });\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }));\n        });\n        // public emit: ISignClient[\"emit\"] = async (params) => {\n        //     try {\n        //         // return await this.engine.emit(params);\n        //     } catch (error: any) {\n        //         throw error;\n        //     }\n        // };\n        this.disconnect = () => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"disconnect\"\n                }, {\n                    onAck: () => {\n                        resolve();\n                    }\n                }, undefined, 86400000).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n        this.engine = new core_1.Engine(new core_1.ConnectionManager(metaData.name));\n        this.events = events;\n        this.metadata = metaData;\n    }\n    openOKXWallet() {\n        var _a;\n        // if (this.openUniversalUrl){\n        (0, core_1.logDebug)('bridge-provider ==>> connect_5');\n        if ((_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.useMini) {\n            let url = (0, core_1.getTelegramWalletTWAUrl)(undefined, this.sessionConfig.tmaReturnUrl);\n            (0, core_1.openOKXTMAWalletlinkWithFallback)(url);\n        }\n        else {\n            (0, core_1.openOKXDeeplink)(core_1.standardDeeplink);\n        }\n        // }\n    }\n    syncAllAddress() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"sync_all_addresses\"\n                }, {\n                    resolve: (response) => {\n                        delete response.requestId;\n                        (0, core_1.logDebug)(\"clint syncAllAddress --response >\", JSON.stringify(response));\n                        if (('error' in response) && response.error) {\n                            let error = response.error;\n                            reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                        }\n                        else {\n                            let allAddressStr = response.result;\n                            resolve((0, ConnectMethodUtils_1.syncResoonseToRequire)(allAddressStr));\n                        }\n                    }\n                }).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n    }\n}\nexports.SignClient = SignClient;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.connectSupportMethods = void 0;\nexports.creatNotSupportMethodItemReplay = creatNotSupportMethodItemReplay;\nexports.connectMethodsAdaptOldVersion = connectMethodsAdaptOldVersion;\nexports.connectMethodsResponseUpdate = connectMethodsResponseUpdate;\nexports.connectMethodsToConnectWalletMethods = connectMethodsToConnectWalletMethods;\nexports.syncResoonseToRequire = syncResoonseToRequire;\nconst core_1 = require(\"@okxconnect/core\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst uint8array_extras_1 = require(\"uint8array-extras\");\nconst provider_1 = require(\"../../provider\");\nfunction isArray(value) {\n    return typeof value === \"object\" && value !== null && Array.isArray(value);\n}\nfunction isRecord(value) {\n    return typeof value === \"object\" && value !== null && !Array.isArray(value);\n}\n// \"wallet_addEthereumChain\",\nexports.connectSupportMethods = Object.freeze([\n    \"personal_sign\",\n    \"solana_signMessage\",\n    \"sui_signMessage\",\n    \"sui_signPersonalMessage\",\n    \"btc_signMessage\",\n    \"aptos_signMessage\",\n    \"cosmos_signArbitrary\",\n    \"tron_signMessage\",\n    \"tron_signMessageV2\",\n    \"starknet_signMessage\",\n    \"sync_all_addresses\"\n]);\nfunction creatNotSupportMethodItemReplay(requestParams) {\n    let notSupportError = new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n    var errorItem = {\n        method: requestParams.method,\n        chainId: requestParams.chainId,\n        error: {\n            code: notSupportError.code,\n            message: notSupportError.message\n        },\n    };\n    return errorItem;\n}\nfunction connectMethodsAdaptOldVersion(requestParams, session) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b, _c, _d, _e;\n        try {\n            (0, core_1.logDebug)(\"connectMethodsAdaptOldVersion start params :\", JSON.stringify(requestParams));\n            let callBackParams = {};\n            if (requestParams.method === \"solana_signMessage\") {\n                let solAccount = (_a = session.namespaces[core_1.NameSpaceKeySOL]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account1) {\n                    return account1.startsWith(requestParams.chainId);\n                })[0];\n                const solAddress = (0, provider_1.fromAccountToAddress)(solAccount);\n                if (requestParams.params && solAddress && \"message\" in requestParams.params) {\n                    let realMessage = requestParams.params.message;\n                    if (((_b = session.wallet) === null || _b === void 0 ? void 0 : _b.appName) == \"OKX Wallet\") {\n                        realMessage = bs58_1.default.encode((0, uint8array_extras_1.stringToUint8Array)(realMessage));\n                    }\n                    requestParams.params = {\n                        message: realMessage,\n                        \"pubkey\": solAddress\n                    };\n                    callBackParams = {\n                        publicKey: solAddress\n                    };\n                    (0, core_1.logDebug)(\"solana_signMessage account and address:\", JSON.stringify(solAccount), solAddress);\n                    (0, core_1.logDebug)(\"solana_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"sui_signMessage\" || requestParams.method === \"sui_signPersonalMessage\") {\n                if (\"message\" in requestParams.params && requestParams.params.message) {\n                    let suiMessage = JSON.parse(JSON.stringify(requestParams.params.message));\n                    let convertedArray = Object.values(suiMessage);\n                    let uint8Array = new Uint8Array(convertedArray);\n                    let decoder = new TextDecoder(\"utf8\");\n                    let b64encoded = btoa(decoder.decode(uint8Array));\n                    requestParams.params = {\n                        message: atob(b64encoded),\n                    };\n                    console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", JSON.stringify(requestParams.params), b64encoded);\n                    if (requestParams.method === \"sui_signMessage\") {\n                        callBackParams = {\n                            \"messageBytes\": b64encoded,\n                            \"signature\": \"\"\n                        };\n                    }\n                    else if (requestParams.method === \"sui_signPersonalMessage\") {\n                        callBackParams = {\n                            \"bytes\": b64encoded,\n                            \"signature\": \"\"\n                        };\n                    }\n                    (0, core_1.logDebug)(\"sui_signMessage/sui_signPersonalMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"btc_signMessage\") {\n                let btcAccounts = (_c = session.namespaces[core_1.NameSpaceKeyBtc]) === null || _c === void 0 ? void 0 : _c.accounts.filter(function (account2) {\n                    return account2.startsWith(requestParams.chainId);\n                });\n                let btcAccount = btcAccounts[0];\n                const btcAddress = (0, provider_1.fromAccountToAddress)(btcAccount);\n                (0, core_1.logDebug)(\"btc_signMessage account and address:\", JSON.stringify(btcAccount), btcAddress);\n                if (btcAddress) {\n                    if (\"message\" in requestParams.params && requestParams.params.message && typeof requestParams.params.message === 'string') {\n                        requestParams.params = {\n                            from: btcAddress,\n                            signStr: requestParams.params.message\n                        };\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                    }\n                    requestParams.params[\"from\"] = btcAddress;\n                    (0, core_1.logDebug)(\"btc_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"aptos_signMessage\") {\n                let paramData = requestParams.params;\n                let aptosAccount = (_d = session.namespaces[core_1.NameSpaceKeyAptos]) === null || _d === void 0 ? void 0 : _d.accounts.filter(function (account3) {\n                    return account3.startsWith(requestParams.chainId);\n                })[0];\n                let aptosAddress = (0, provider_1.fromAccountToAddress)(aptosAccount);\n                if (paramData && aptosAddress) {\n                    let prefix = \"APTOS\";\n                    let message = \"\", nonce = \"\";\n                    var fullMessage = prefix;\n                    let application = window.location.protocol + \"//\" + window.location.hostname;\n                    if (\"address\" in paramData && paramData.address) {\n                        fullMessage += \"\\naddress: \" + aptosAddress;\n                    }\n                    if (\"application\" in paramData && paramData.application) {\n                        fullMessage += \"\\napplication: \" + application;\n                    }\n                    let aptosChainId = 1;\n                    if (\"chainId\" in paramData && paramData.chainId) {\n                        if (paramData.chainId == \"aptos:mainnet\") {\n                            aptosChainId = 1;\n                        }\n                        else if (paramData.chainId == \"movement:testnet\") {\n                            aptosChainId = 2;\n                        }\n                        fullMessage += \"\\nchainId: \" + aptosChainId;\n                    }\n                    if (\"message\" in paramData) {\n                        fullMessage += \"\\nmessage: \" + paramData.message;\n                        message = paramData.message;\n                    }\n                    if (\"nonce\" in paramData) {\n                        fullMessage += \"\\nnonce: \" + paramData.nonce;\n                        nonce = paramData.nonce;\n                    }\n                    const utf8Array = new TextEncoder().encode(fullMessage);\n                    const hex = Array.from(utf8Array)\n                        .map(byte => byte.toString(16).padStart(2, \"0\"))\n                        .join(\"\");\n                    requestParams.params = {\n                        \"message\": hex,\n                    };\n                    (0, core_1.logDebug)(\"aptos_signMessage requestParams:\", JSON.stringify(requestParams));\n                    callBackParams = {\n                        address: aptosAddress,\n                        application: application,\n                        chainId: aptosChainId,\n                        fullMessage: fullMessage,\n                        message: message,\n                        nonce: nonce,\n                        prefix: prefix,\n                        signature: \"\",\n                    };\n                    (0, core_1.logDebug)(\"aptos_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"cosmos_signArbitrary\") {\n                let cosmosAccount = (_e = session === null || session === void 0 ? void 0 : session.namespaces[core_1.NameSpaceKeyCosmos]) === null || _e === void 0 ? void 0 : _e.accounts.filter(function (account_cosmos) {\n                    return account_cosmos.startsWith(requestParams.chainId);\n                })[0];\n                const cosmosAddress = (0, provider_1.fromAccountToAddress)(cosmosAccount);\n                let cosmosData = requestParams.params[\"message\"];\n                const cosmosBase64Encoded = (0, uint8array_extras_1.stringToBase64)(cosmosData);\n                (0, core_1.logDebug)(\"cosmos_signArbitrary account and address:\", JSON.stringify(cosmosAccount), cosmosAddress);\n                (0, core_1.logDebug)(\"cosmos_signArbitrary cosmosBase64Encoded:\", cosmosBase64Encoded);\n                if (cosmosData && cosmosAddress) {\n                    const signDoc = {\n                        chain_id: \"\",\n                        account_number: \"0\",\n                        sequence: \"0\",\n                        fee: {\n                            gas: \"0\",\n                            amount: []\n                        },\n                        msgs: [{\n                                \"type\": \"sign/MsgSignData\",\n                                \"value\": {\n                                    \"signer\": cosmosAddress,\n                                    \"data\": cosmosBase64Encoded\n                                }\n                            }],\n                        memo: \"\"\n                    };\n                    requestParams.params = {\n                        \"signer\": cosmosAddress,\n                        \"chain_id\": requestParams.chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    };\n                    (0, core_1.logDebug)(\"cosmos_signArbitrary callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            (0, core_1.logDebug)(\"sol_handleSignatureData end params:\", JSON.stringify(requestParams));\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\nfunction connectMethodsResponseUpdate(session, requestParams) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a;\n        try {\n            if (session.signResponse) {\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate signResponse:\", JSON.stringify(session.signResponse));\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate session.namespaces:\", JSON.stringify(session.namespaces));\n                for (const methodItem of session.signResponse) {\n                    (0, core_1.logDebug)(\"connectMethodsResponseUpdate methodItem:\", JSON.stringify(methodItem));\n                    if (\"result\" in methodItem) {\n                        if (methodItem.method === \"solana_signMessage\") {\n                            let solanaSuccessData = methodItem.result;\n                            (0, core_1.logDebug)(\"solana_signMessage methodItem.chainId:\", methodItem.chainId);\n                            let account = (_a = session.namespaces[core_1.NameSpaceKeySOL]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account) {\n                                (0, core_1.logDebug)(\"solana_signMessage account:\", account);\n                                return account.startsWith(methodItem.chainId);\n                            })[0];\n                            (0, core_1.logDebug)(\"solana_signMessage result account:\", solanaSuccessData, account);\n                            if (solanaSuccessData && account) {\n                                methodItem.result = {\n                                    \"signature\": bs58_1.default.decode(solanaSuccessData),\n                                    \"publicKey\": (0, provider_1.fromAccountToAddress)(account)\n                                };\n                            }\n                        }\n                        else if (methodItem.method === \"sui_signMessage\" || methodItem.method === \"sui_signPersonalMessage\") {\n                            let suiMethod = requestParams.filter(function (requestMethod) {\n                                return requestMethod.method === methodItem.method;\n                            })[0];\n                            if (suiMethod && suiMethod.params && \"message\" in suiMethod.params) {\n                                let suiMessage = suiMethod.params.message;\n                                let suiMessageb64 = btoa(suiMessage);\n                                console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", suiMessage, suiMessageb64);\n                                if (methodItem.method === \"sui_signMessage\") {\n                                    methodItem.result = {\n                                        \"messageBytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                                else if (methodItem.method === \"sui_signPersonalMessage\") {\n                                    methodItem.result = {\n                                        \"bytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                            }\n                        }\n                        else if (methodItem.method === \"aptos_signMessage\") {\n                            if (methodItem.chainId === \"aptos:637\") {\n                                methodItem.chainId = \"aptos:mainnet\";\n                            }\n                            else if (methodItem.chainId === \"aptos:70000060\") {\n                                methodItem.chainId = \"movement:testnet\";\n                            }\n                            methodItem.result = JSON.parse(methodItem.result);\n                            console.log(\"aptos_signMessage result methodItem.result before:>>>>\", JSON.stringify(methodItem.result));\n                            if (methodItem.result && \"signature\" in methodItem.result) {\n                                let aptosSignature = methodItem.result.signature;\n                                if (aptosSignature && aptosSignature.startsWith(\"0x\")) {\n                                    aptosSignature = aptosSignature.slice(2, aptosSignature.length);\n                                    methodItem.result.signature = aptosSignature;\n                                }\n                            }\n                            console.log(\"aptos_signMessage result methodItem.result after:>>>>\", JSON.stringify(methodItem.result));\n                        }\n                        else if (methodItem.method === \"cosmos_signArbitrary\") {\n                            methodItem.result = JSON.parse(methodItem.result);\n                        }\n                        else if (methodItem.method == 'starknet_signMessage') {\n                            let results = methodItem.result;\n                            if (typeof results == 'string') {\n                                results = JSON.parse(results);\n                            }\n                            methodItem.result = [results[\"signedDataR\"], results[\"signedDataS\"]];\n                        }\n                        else if (methodItem.method == 'sync_all_addresses') {\n                            methodItem.result = syncResoonseToRequire(methodItem.result);\n                        }\n                    }\n                }\n            }\n        }\n        catch (error) {\n            (0, core_1.logDebug)(\"connectMethodsResponseUpdate signResponse Error:\", JSON.stringify(error));\n            throw error;\n        }\n    });\n}\nfunction connectMethodsToConnectWalletMethods(params, requireNameSpace) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods requestMethods:\", JSON.stringify(params));\n            const result = [];\n            //TODO  后面需要打开限制\n            if (params && params.length > 1) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connectAndSign/openModalAndSign signRequest only support one data`);\n            }\n            if (!requireNameSpace && params && params.length > 0) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error , RequestMethods cannot be added when the NameSpace is empty`);\n            }\n            // check chianId\n            for (const methodItem of params) {\n                if (methodItem.method === \"aptos_signMessage\") { //update chainId\n                    if (methodItem.chainId === \"aptos:mainnet\") {\n                        methodItem.chainId = \"aptos:637\";\n                    }\n                    else if (methodItem.chainId === \"movement:testnet\") {\n                        methodItem.chainId = \"aptos:70000060\";\n                    }\n                }\n                // check chianId\n                if (methodItem.method === \"wallet_addEthereumChain\") {\n                    var includeEip155 = requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.namespace.includes(\"eip155\"));\n                    if (!includeEip155) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', the EVM chain needs to be included in the NameSpace`);\n                    }\n                }\n                else if (methodItem.method === \"sync_all_addresses\") {\n                    if ((0, provider_1.syncAddressHostAvailable)()) {\n                        methodItem.chainId = \"\";\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                    }\n                }\n                else {\n                    const includeChain = !!(requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.chains.some(chain => chain.includes(`${methodItem.chainId}`))));\n                    if (!includeChain) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', NameSpace must contain '${methodItem.chainId}'`);\n                    }\n                }\n            }\n            for (const item of params) {\n                if (!exports.connectSupportMethods.includes(item.method)) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect requestMethods not support method, method: '${item.method}'`);\n                }\n                if (item.method === \"wallet_addEthereumChain\") {\n                    if (Array.isArray(item.params)) {\n                        const paramsArr = item.params;\n                        if (paramsArr && paramsArr.length === 1) {\n                            const firstParam = paramsArr[0];\n                            if (isRecord(firstParam)) {\n                                item.params = firstParam;\n                            }\n                        }\n                        else if (paramsArr && paramsArr.length > 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params only support one data, method: '${item.method}'`);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is nil, method: '${item.method}'`);\n                        }\n                    }\n                }\n                else if (item.method === \"personal_sign\") {\n                    if (isArray(item.params)) {\n                        if (item.params && item.params.length !== 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params error,  method: '${item.method}' `);\n                        }\n                        let firstObj = item.params[0];\n                        if (firstObj && typeof firstObj === 'string') {\n                            item.params = {\n                                message: firstObj\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                }\n                else if (item.method === \"sui_signMessage\" || item.method === \"sui_signPersonalMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message) {\n                            (0, core_1.logDebug)(\"sui_signMessage item.params.message :\", item.params.message);\n                            let message = JSON.parse(JSON.stringify(item.params.message));\n                            let convertedArray = Object.values(message);\n                            let uint8Array = new Uint8Array(convertedArray);\n                            let decoder = new TextDecoder(\"utf8\");\n                            let b64encoded = btoa(decoder.decode(uint8Array));\n                            item.params.message = atob(b64encoded);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"solana_signMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            item.params[\"bs58Message\"] = bs58_1.default.encode((0, uint8array_extras_1.stringToUint8Array)(item.params.message));\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"aptos_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (item.chainId && (item.chainId === \"aptos:637\" || item.chainId === \"aptos:70000060\")) {\n                            var aptosParams = item.params;\n                            var currentURL = window.location.protocol + \"//\" + window.location.hostname;\n                            let signChainId = 1;\n                            if (item.chainId === \"aptos:637\") {\n                            }\n                            else if (item.chainId === \"aptos:70000060\") {\n                                signChainId = 2;\n                            }\n                            item.params = {\n                                data: aptosParams,\n                                applicationUrl: currentURL,\n                                prefix: \"APTOS\",\n                                aptosChainId: signChainId\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"cosmos_signArbitrary\") {\n                    if (isRecord(item.params)) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            const base64Encoded = (0, uint8array_extras_1.stringToBase64)(item.params.message);\n                            let cosmosChain = item.chainId.split(\":\")[1];\n                            if (cosmosChain) {\n                                item.params = {\n                                    chain_id: cosmosChain,\n                                    data: {\n                                        chain_id: \"\",\n                                        account_number: \"0\",\n                                        sequence: \"0\",\n                                        fee: {\n                                            gas: \"0\",\n                                            amount: []\n                                        },\n                                        msgs: [{\n                                                \"type\": \"sign/MsgSignData\",\n                                                \"value\": {\n                                                    \"signer\": \"\", //address\n                                                    \"data\": base64Encoded\n                                                }\n                                            }],\n                                        memo: \"\"\n                                    }\n                                };\n                            }\n                            else {\n                                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                            }\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params message is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method == \"tron_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (\"message\" in item.params && item.params.message && typeof item.params.message === 'string') {\n                            item.params.message = stringToHex(item.params.message);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method == \"btc_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (\"message\" in item.params && item.params.message && typeof item.params.message === 'string') {\n                            item.params = {\n                                signStr: item.params.message\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods item:\", JSON.stringify(item));\n                result.push(item);\n            }\n            return result;\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\nfunction stringToHex(str) {\n    let hex = '';\n    for (let i = 0; i < str.length; i++) {\n        hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n    }\n    return hex;\n}\nfunction syncResoonseToRequire(responseAddressStr) {\n    const allAddress = JSON.parse(responseAddressStr);\n    const result = {\n        type: allAddress.type,\n        isEvm: allAddress.isEvm,\n        walletName: allAddress.walletName,\n        deriveName: allAddress.deriveName,\n        addresses: allAddress.addresses.map((addr) => ({\n            coinId: addr.ci,\n            address: addr.a && addr.a !== 'null' ? addr.a : allAddress.evmAddress,\n        })),\n    };\n    return result;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.creatNotSupportMethodItemReplay = exports.connectMethodsAdaptOldVersion = void 0;\nvar ConnectMethodUtils_1 = require(\"./ConnectMethodUtils\");\nObject.defineProperty(exports, \"connectMethodsAdaptOldVersion\", { enumerable: true, get: function () { return ConnectMethodUtils_1.connectMethodsAdaptOldVersion; } });\nObject.defineProperty(exports, \"creatNotSupportMethodItemReplay\", { enumerable: true, get: function () { return ConnectMethodUtils_1.creatNotSupportMethodItemReplay; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAccountsChains = getAccountsChains;\nexports.nameSpaceToConnectWalletNameSpace = nameSpaceToConnectWalletNameSpace;\nexports.fillParamsToSession = fillParamsToSession;\nexports.isCaipNamespace = isCaipNamespace;\nexports.parseNamespaceKey = parseNamespaceKey;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getAccountsChains(accounts) {\n    const chains = [];\n    accounts.forEach((account) => {\n        const [chain, chainId] = account.split(\":\");\n        chains.push(`${chain}:${chainId}`);\n    });\n    return chains;\n}\nfunction nameSpaceToConnectWalletNameSpace(namespaces) {\n    var result = [];\n    if (!namespaces) {\n        return result;\n    }\n    Object.keys(namespaces).forEach((key) => {\n        if (key === core_1.NameSpaceKeyEip155 || key === core_1.NameSpaceKeySOL || key === core_1.NameSpaceKeySui || key === core_1.NameSpaceKeyAptos\n            || key == core_1.NameSpaceKeyBtc || key === core_1.NameSpaceKeyTON || key === core_1.NameSpaceKeyCosmos || key === core_1.NameSpaceKeyTron || key === core_1.NameSpaceKeyStarknet) {\n            if (namespaces[key].chains) {\n                result.push({\n                    namespace: key,\n                    chains: namespaces[key].chains,\n                    params: namespaces[key].params\n                });\n            }\n        }\n    });\n    return result;\n}\nfunction fillParamsToSession(session, namespaces, optionalNamespaces, sessionConfig) {\n    // Helper function to merge rpcMaps\n    const mergeRpcMap = (targetRpcMap, sourceRpcMap) => {\n        Object.assign(targetRpcMap, sourceRpcMap);\n    };\n    // Merge function for namespaces\n    const mergeNamespaces = (target, source) => {\n        for (const key in source) {\n            if (source.hasOwnProperty(key) && source[key].rpcMap) {\n                if (source[key].rpcMap) {\n                    if (!target[key].rpcMap) {\n                        target[key].rpcMap = {};\n                    }\n                    // 合并 rpcMap\n                    mergeRpcMap(target[key].rpcMap, source[key].rpcMap);\n                }\n                if (source[key].defaultChain && target[key].defaultChain === undefined) {\n                    //defaultChain need in session nameSpace\n                    if (target[key].chains.some(chain => chain.split(\":\")[1] === source[key].defaultChain)) {\n                        target[key].defaultChain = source[key].defaultChain;\n                    }\n                }\n            }\n        }\n    };\n    // 合并 namespaces\n    if (namespaces) {\n        mergeNamespaces(session.namespaces, namespaces);\n    }\n    // 合并 optionalNamespaces\n    if (optionalNamespaces) {\n        mergeNamespaces(session.namespaces, optionalNamespaces);\n    }\n    session.sessionConfig = sessionConfig;\n}\n/**\n * util designed for Wallets that builds namespaces structure by provided supported chains, methods, events & accounts.\n * It takes required & optional namespaces provided in the session proposal\n * along with the supported chains/methods/events/accounts by the wallet and returns a structured namespaces object\n * @param {BuildApprovedNamespacesParams} params\n * @returns {SessionTypes.Namespaces}\n */\n// export function buildApprovedNamespaces(\n//   params: BuildApprovedNamespacesParams,\n// ): SessionTypes.Namespaces {\n//   const {\n//     proposal: { requiredNamespaces, optionalNamespaces = {} },\n//     supportedNamespaces,\n//   } = params;\n//   const normalizedRequired = normalizeNamespaces(requiredNamespaces);\n//   const normalizedOptional = normalizeNamespaces(optionalNamespaces);\n//\n//   // build approved namespaces\n//   const namespaces = {};\n//   Object.keys(supportedNamespaces).forEach((namespace) => {\n//     const supportedChains = supportedNamespaces[namespace].chains;\n//     const supportedMethods = supportedNamespaces[namespace].methods;\n//     const supportedEvents = supportedNamespaces[namespace].events;\n//     const supportedAccounts = supportedNamespaces[namespace].accounts;\n//\n//     supportedChains.forEach((chain) => {\n//       if (!supportedAccounts.some((account) => account.includes(chain))) {\n//         throw new Error(`No accounts provided for chain ${chain} in namespace ${namespace}`);\n//       }\n//     });\n//\n//     namespaces[namespace] = {\n//       chains: supportedChains,\n//       methods: supportedMethods,\n//       events: supportedEvents,\n//       accounts: supportedAccounts,\n//     };\n//   });\n//\n//   // verify all required namespaces are supported\n//   const err = isConformingNamespaces(requiredNamespaces, namespaces, \"approve()\");\n//   if (err) throw new Error(err.message);\n//\n//   const approvedNamespaces = {};\n//\n//   // if both required & optional namespaces are empty, return all supported namespaces by the wallet\n//   if (!Object.keys(requiredNamespaces).length && !Object.keys(optionalNamespaces).length)\n//     return namespaces;\n//\n//   // assign accounts for the required namespaces\n//   Object.keys(normalizedRequired).forEach((requiredNamespace) => {\n//     const chains = supportedNamespaces[requiredNamespace].chains.filter((chain) =>\n//       normalizedRequired[requiredNamespace]?.chains?.includes(chain),\n//     );\n//     const methods = supportedNamespaces[requiredNamespace].methods.filter((method) =>\n//       normalizedRequired[requiredNamespace]?.methods?.includes(method),\n//     );\n//     const events = supportedNamespaces[requiredNamespace].events.filter((event) =>\n//       normalizedRequired[requiredNamespace]?.events?.includes(event),\n//     );\n//\n//     const accounts = chains\n//       .map((chain: string) =>\n//         supportedNamespaces[requiredNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[requiredNamespace] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   });\n//\n//   // add optional namespaces\n//   Object.keys(normalizedOptional).forEach((optionalNamespace) => {\n//     if (!supportedNamespaces[optionalNamespace]) return;\n//\n//     const chainsToAdd = normalizedOptional[optionalNamespace]?.chains?.filter((chain) =>\n//       supportedNamespaces[optionalNamespace].chains.includes(chain),\n//     );\n//     const methodsToAdd = supportedNamespaces[optionalNamespace].methods.filter((method) =>\n//       normalizedOptional[optionalNamespace]?.methods?.includes(method),\n//     );\n//     const eventsToAdd = supportedNamespaces[optionalNamespace].events.filter((event) =>\n//       normalizedOptional[optionalNamespace]?.events?.includes(event),\n//     );\n//\n//     const accountsToAdd = chainsToAdd\n//       ?.map((chain: string) =>\n//         supportedNamespaces[optionalNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[optionalNamespace] = {\n//       chains: mergeArrays(approvedNamespaces[optionalNamespace]?.chains, chainsToAdd),\n//       methods: mergeArrays(approvedNamespaces[optionalNamespace]?.methods, methodsToAdd),\n//       events: mergeArrays(approvedNamespaces[optionalNamespace]?.events, eventsToAdd),\n//       accounts: mergeArrays(approvedNamespaces[optionalNamespace]?.accounts, accountsToAdd),\n//     };\n//   });\n//\n//   return approvedNamespaces;\n// }\nfunction isCaipNamespace(namespace) {\n    return namespace.includes(\":\");\n}\nfunction parseNamespaceKey(namespace) {\n    return isCaipNamespace(namespace) ? namespace.split(\":\")[0] : namespace;\n}\n/**\n * Converts\n * ```\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * ```\n * into\n * ```\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *```\n */\n// export function normalizeNamespaces(\n//   namespaces: ProposalTypes.RequiredNamespaces,\n// ): ProposalTypes.RequiredNamespaces {\n//   const normalizedNamespaces = {} as ProposalTypes.RequiredNamespaces;\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       methods: mergeArrays(methods, normalizedNamespaces[normalizedKey]?.methods),\n//       events: mergeArrays(events, normalizedNamespaces[normalizedKey]?.events),\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n// export function getNamespacesFromAccounts(accounts: string[]) {\n//   const namespaces = {};\n//   accounts?.forEach((account) => {\n//     const [namespace, chainId] = account.split(\":\");\n//     if (!namespaces[namespace]) {\n//       namespaces[namespace] = {\n//         accounts: [],\n//         chains: [],\n//         events: [],\n//       };\n//     }\n//     namespaces[namespace].accounts.push(account);\n//     namespaces[namespace].chains.push(`${namespace}:${chainId}`);\n//   });\n//\n//   return namespaces;\n// }\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PROVIDER_EVENTS = void 0;\nexports.PROVIDER_EVENTS = {\n    DEFAULT_CHAIN_CHANGED: \"default_chain_changed\",\n    UPDATE_NAMESPACES: \"update_name_spaces\",\n    SESSION_CONNECTING: \"session_connecting\"\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./values\"), exports);\n__exportStar(require(\"./events\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GENERIC_SUBPROVIDER_NAME = exports.RPC_URL = exports.STORAGE = exports.CONTEXT = exports.WC_VERSION = exports.PROTOCOL = exports.RELAY_URL = exports.LOGGER = void 0;\nexports.LOGGER = \"error\";\nexports.RELAY_URL = \"wss://relay.walletconnect.com\";\nexports.PROTOCOL = \"wc\";\nexports.WC_VERSION = 2;\nexports.CONTEXT = \"universal_provider\";\nexports.STORAGE = `${exports.PROTOCOL}@${exports.WC_VERSION}:${exports.CONTEXT}:`;\nexports.RPC_URL = \"https://rpc.walletconnect.com/v1/\";\nexports.GENERIC_SUBPROVIDER_NAME = \"generic\";\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./types\"), exports);\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass AptosProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"aptos\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"solana request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"solana provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = AptosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass BtcProvider {\n    constructor(opts, name, client, events) {\n        this.name = core_1.NameSpaceKeyBtc;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"btc request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"btc provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = BtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass CosmosProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyCosmos;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"cosmos request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"cosmos provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = CosmosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Eip155Provider = void 0;\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nclass Eip155Provider {\n    constructor(opts, client, events) {\n        this.name = \"eip155\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = parseInt(this.getDefaultChain());\n        // rpc\n        this.httpProviders = this.createHttpProviders();\n        (0, core_1.logDebug)(\"eip155 constructor --opts.namespace-->\", opts.namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    isArray(value) {\n        return typeof value === \"object\" && value !== null && Array.isArray(value);\n    }\n    updateRequestParams(args) {\n        let isDic = args.params && typeof args.params === 'object' && !Array.isArray(args.params);\n        if (args.method === 'wallet_switchEthereumChain') {\n            const switchChainId = args.chainId.split(\":\")[1];\n            // const hexChainId = parseInt(switchChainId, 16);\n            const decimalNumber = parseInt(switchChainId, 10);\n            if (isNaN(decimalNumber)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid decimal number,  chainId: '${switchChainId}' `);\n            }\n            if (!args.params) {\n                args.params = { chainId: '0x' + decimalNumber.toString(16) };\n            }\n            else if (isDic) { //为 Record<string, unknown>\n                let params = args.params;\n                if (!('chainId' in params)) {\n                    params['chainId'] = '0x' + decimalNumber.toString(16);\n                    args.params = params;\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params error ,  method: '${args.method}' `);\n            }\n        }\n        else if (args.method === 'personal_sign'\n            || args.method === 'eth_signTypedData_v4'\n            || args.method === 'eth_sendTransaction'\n            || args.method === 'wallet_watchAsset') {\n            if (!args.params) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params is nil, method: '${args.method}'`);\n            }\n            if (this.isRecord(args.params)) {\n                let params = args.params;\n                (0, core_1.logDebug)(\"eip155 updateRequestParams params>\", JSON.stringify(params));\n                if ('chainId' in params) {\n                    const selectedChainId = args.chainId.split(\":\")[1];\n                    const chainNum = parseInt(selectedChainId, 10);\n                    let paramsChainString = String(params.chainId);\n                    let paramsChainId;\n                    if (paramsChainString.startsWith(this.name) && args.chainId === paramsChainString) { //为\n                        paramsChainId = chainNum;\n                    }\n                    else if (paramsChainString.startsWith(\"0x\")) {\n                        paramsChainId = parseInt(paramsChainString, 16);\n                    }\n                    else if (!isNaN(Number(paramsChainString))) { //数字\n                        paramsChainId = parseInt(paramsChainString, 10);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid params.chainId format, method: '${args.method}'`);\n                    }\n                    if (chainNum !== paramsChainId) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params.chainId not equal chain,  method: '${args.method}' `);\n                    }\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid request params type, method: '${args.method}'`);\n            }\n        }\n    }\n    //adapt array\n    adaptArray(args) {\n        if (args.method === 'wallet_switchEthereumChain'\n            || args.method === 'wallet_addEthereumChain'\n            || args.method === 'wallet_watchAsset'\n            || args.method === 'eth_sendTransaction') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr) {\n                    if (paramsArr.length === 1) {\n                        let firstParam = args.params[0];\n                        if (this.isRecord(firstParam)) {\n                            args.params = firstParam;\n                        }\n                    }\n                    else if (paramsArr.length > 1) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                    }\n                }\n            }\n        }\n        else if (args.method === 'eth_signTypedData_v4') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr && paramsArr.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                }\n                else if (paramsArr && paramsArr.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let messageObj = {};\n                if (paramsArr && paramsArr.length === 2) {\n                    let addressObj = args.params[0]; //address\n                    if (addressObj && typeof addressObj === 'string') { //check address\n                        let isEqual = false;\n                        this.namespace.accounts.forEach((account) => {\n                            let chainAddress = (0, utils_1.fromAccountToAddress)(account);\n                            if (chainAddress.toLowerCase() === addressObj.toLowerCase()) {\n                                isEqual = true;\n                            }\n                        });\n                        (0, core_1.logDebug)(\"eip155 adaptArray eth_signTypedData_v4 >>>isEqual: \", isEqual);\n                        if (!isEqual) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error, not equal,  method: '${args.method}' `);\n                        }\n                        if (this.isRecord(args.params[1])) {\n                            messageObj = args.params[1];\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error , not string,  method: '${args.method}' `);\n                    }\n                }\n                else if (paramsArr && paramsArr.length === 1) {\n                    if (this.isRecord(args.params[0])) {\n                        messageObj = args.params[0];\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                    }\n                }\n                try {\n                    let messages = JSON.stringify(messageObj);\n                    args.params = {\n                        typedDataJson: messages\n                    };\n                }\n                catch (err) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params call JSON.stringify() failed,  method: '${args.method}' `);\n                }\n            }\n        }\n        else if (args.method === 'personal_sign') {\n            if (this.isArray(args.params)) {\n                if (args.params && args.params.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params error,  method: '${args.method}' `);\n                }\n                else if (args.params && args.params.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let firstObj = args.params[0];\n                let secondObj = args.params[1];\n                if (secondObj && typeof secondObj === 'string') { //check address\n                    let isEqual = false;\n                    this.namespace.accounts.forEach((account) => {\n                        let chainAddress = (0, utils_1.fromAccountToAddress)(account);\n                        if (chainAddress.toLowerCase() === secondObj.toLowerCase()) {\n                            isEqual = true;\n                        }\n                    });\n                    (0, core_1.logDebug)(\"eip155 adaptArray personal_sign >>>isEqual: \", isEqual);\n                    if (!isEqual) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error,  method: '${args.method}' `);\n                    }\n                }\n                if (firstObj && typeof firstObj === 'string') {\n                    args.params = {\n                        message: firstObj\n                    };\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is error,  method: '${args.method}' `);\n                }\n            }\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"eth_requestAccounts\":\n            case \"eth_accounts\":\n            case \"eth_chainId\":\n                return false;\n            case \"eth_sendTransaction\":\n            case \"eth_signTransaction\":\n            case \"eth_sign\":\n            case \"personal_sign\":\n            case \"eth_signTypedData\":\n            case \"wallet_addEthereumChain\":\n            case \"wallet_watchAsset\":\n            case \"eth_signTypedData_v4\":\n                return true;\n            case \"wallet_switchEthereumChain\": {\n                this.adaptArray(args);\n                this.updateRequestParams(args);\n                const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n                return !this.isChainApproved(parsedChainId);\n            }\n            default:\n                return false;\n        }\n        return false;\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.adaptArray(args);\n            (0, core_1.logDebug)(\"eip155 request --args--string>\", JSON.stringify(args));\n            this.updateRequestParams(args);\n            (0, core_1.logDebug)(\"eip155 request --params--string>\", JSON.stringify(args));\n            switch (args.method) {\n                case \"eth_requestAccounts\":\n                    return this.getAccounts();\n                case \"eth_accounts\":\n                    return this.getAccounts();\n                case \"eth_chainId\":\n                    return parseInt(this.getDefaultChain());\n                case \"wallet_switchEthereumChain\": {\n                    return (yield this.handleSwitchChain(args));\n                }\n                case \"wallet_addEthereumChain\":\n                    return this.addEthereumChain(args);\n                default:\n                    break;\n            }\n            if (this.namespace.methods.includes(args.method)) {\n                // personal_sign\n                // eth_signTypedData_v4\n                // eth_sendTransaction\n                // wallet_watchAsset\n                try {\n                    const response = yield this.client.request(args);\n                    (0, core_1.logDebug)(\"eip155 request --response----string>\", JSON.stringify(response));\n                    if (this.isRecord(response)) {\n                        if ('result' in response) {\n                            let result = response.result;\n                            if (result && typeof result === 'string' && (result === \"true\" || result === \"false\")) {\n                                (0, core_1.logDebug)(\"eip155 request --wallet_watchAsset>>>>\", result === \"true\");\n                                return (result === \"true\");\n                            }\n                            return response.result;\n                        }\n                    }\n                    return response;\n                }\n                catch (e) {\n                    (0, core_1.logDebug)(`eip155 request --response --error--string> e instanceof OKXConnectError ${e instanceof core_1.OKXConnectError}`, JSON.stringify(e));\n                    throw e;\n                }\n            }\n            else {\n                (0, core_1.logDebug)('[RPC] request begin');\n                return yield this.getHttpProvider().request(args);\n            }\n        });\n    }\n    addEthereumChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let resultData = (yield this.client.request(args));\n            try {\n                if ('result' in resultData) {\n                    let successData = resultData;\n                    let account = resultData.result;\n                    if (account) {\n                        const nameSpace = account.split(\":\")[0];\n                        const chainId = account.split(\":\")[1];\n                        const chain = nameSpace + ':' + chainId;\n                        let newNameSpace = this.namespace;\n                        this.namespace.accounts.push(account);\n                        this.namespace.chains.push(chain);\n                        if (this.isRecord(args.params)) {\n                            if (\"rpcUrls\" in args.params) {\n                                let rpcUrls = args.params.rpcUrls;\n                                let rpcUrl = rpcUrls ? rpcUrls[0] : undefined;\n                                if (rpcUrl) {\n                                    if (this.namespace.rpcMap) {\n                                        this.namespace.rpcMap[chainId] = rpcUrl;\n                                    }\n                                    else {\n                                        this.namespace.rpcMap = {\n                                            [chainId]: rpcUrl\n                                        };\n                                    }\n                                    this.setHttpProvider(chainId, rpcUrl);\n                                }\n                            }\n                        }\n                        this.events.emit(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, {\n                            eip155: this.namespace\n                        });\n                    }\n                }\n                else {\n                    new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request error`);\n                }\n            }\n            catch (error) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request  error`);\n            }\n            return null;\n        });\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        this.chainId = parseInt(chainId);\n        // set rpc\n        if (!this.httpProviders[chainId]) {\n            const rpc = rpcUrl || (0, utils_1.getRpcUrl)(`${this.name}:${chainId}`, this.namespace);\n            if (!rpc) {\n                // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n                (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            }\n            else {\n                this.setHttpProvider(chainId, rpc);\n            }\n        }\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId.toString();\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // ---------- Private ----------------------------------------------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"eip155 getAccounts \", accounts, this.chainId);\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => {\n                return (0, utils_1.fromAccountToAddress)(account);\n            })),\n        ];\n    }\n    getHexChainIdFromRequest(args) {\n        let params = args.params;\n        let hexChainId = \"0x0\";\n        if (params && \"chainId\" in params) {\n            hexChainId = params.chainId;\n        }\n        hexChainId = hexChainId.startsWith(\"0x\") ? hexChainId : `0x${hexChainId}`;\n        (0, core_1.logDebug)(\"handleSwitchChain -->args \", args);\n        (0, core_1.logDebug)(\"handleSwitchChain -->hexChainId \", hexChainId);\n        const parsedChainId = parseInt(hexChainId, 16);\n        (0, core_1.logDebug)(\"handleSwitchChain -->parsedChainId \", parsedChainId);\n        return { parsedChainId, hexChainId };\n    }\n    handleSwitchChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n            if (this.isChainApproved(parsedChainId)) {\n                this.setDefaultChain(`${parsedChainId}`);\n            }\n            else {\n                const resultData = (yield this.client.request({\n                    method: \"wallet_switchEthereumChain\",\n                    chainId: args.chainId,\n                    params: {\n                        chainId: hexChainId,\n                    },\n                }));\n                try {\n                    if ('result' in resultData) {\n                        let successData = resultData;\n                        let account = resultData.result;\n                        if (account) {\n                            const nameSpace = account.split(\":\")[0];\n                            const chainId = account.split(\":\")[1];\n                            const chain = nameSpace + ':' + chainId;\n                            let newNameSpace = this.namespace;\n                            this.namespace.accounts.push(account);\n                            this.namespace.chains.push(chain);\n                            (0, core_1.logDebug)(\"handleSwitchChain -->wallet_switchEthereumChain \", resultData);\n                            this.setDefaultChain(`${parsedChainId}`);\n                            this.events.emit(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, {\n                                eip155: this.namespace\n                            });\n                        }\n                    }\n                    else {\n                        new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request error`);\n                    }\n                }\n                catch (error) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request  error`);\n                }\n            }\n            return null;\n        });\n    }\n    isChainApproved(chainId) {\n        return this.namespace.chains.includes(`${this.name}:${chainId}`);\n    }\n    // rpc\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            //   throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            (0, core_1.logDebug)('get parsed chain and rpc:', parsedChainId, parsedRpc);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        (0, core_1.logDebug)('get http providermap:', http);\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n}\nexports.Eip155Provider = Eip155Provider;\nexports.default = Eip155Provider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcConnection = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\n// Source: https://nodejs.org/api/events.html#emittersetmaxlistenersn\nconst EVENT_EMITTER_MAX_LISTENERS_DEFAULT = 10;\nclass JsonRpcConnection {\n    constructor(url, disableProviderPing = false) {\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n        this.events = new eventemitter3_1.EventEmitter();\n        this.isAvailable = false;\n        this.registering = false;\n        if (!(0, core_2.isHttpUrl)(url)) {\n            throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n        }\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n    }\n    get connected() {\n        return this.isAvailable;\n    }\n    get connecting() {\n        return this.registering;\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            yield this.register(url);\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                throw new Error(\"Connection already closed\");\n            }\n            this.onClose();\n        });\n    }\n    send(payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                yield this.register();\n            }\n            try {\n                const body = (0, core_1.safeJsonStringify)(payload);\n                const res = yield (0, cross_fetch_1.default)(this.url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                const data = yield res.json();\n                this.onPayload({ data });\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    register() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (!(0, core_2.isHttpUrl)(url)) {\n                throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n            }\n            if (this.registering) {\n                return new Promise((resolve, reject) => {\n                    this.events.once(\"register_error\", (error) => {\n                        reject(error);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.isAvailable === \"undefined\") {\n                            return reject(new Error(\"HTTP connection is missing or invalid\"));\n                        }\n                        resolve();\n                    });\n                });\n            }\n            this.url = url;\n            this.registering = true;\n            try {\n                if (!this.disableProviderPing) {\n                    const body = (0, core_1.safeJsonStringify)({ id: 1, jsonrpc: \"2.0\", method: \"test\", params: [] });\n                    yield (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                }\n                this.onOpen();\n            }\n            catch (e) {\n                const error = this.parseError(e);\n                this.events.emit(\"register_error\", error);\n                this.onClose();\n                throw error;\n            }\n        });\n    }\n    onOpen() {\n        this.isAvailable = true;\n        this.registering = false;\n        this.events.emit(\"open\");\n    }\n    onClose() {\n        this.isAvailable = false;\n        this.registering = false;\n        this.events.emit(\"close\");\n    }\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        const payload = typeof e.data === \"string\" ? (0, core_1.safeJsonParse)(e.data) : e.data;\n        this.events.emit(\"payload\", payload);\n    }\n    onError(id, e) {\n        const error = this.parseError(e);\n        const message = error.message || error.toString();\n        const payload = (0, core_2.formatJsonRpcError)(id, message);\n        this.events.emit(\"payload\", payload);\n    }\n    parseError(e, url = this.url) {\n        return (0, core_2.parseConnectionError)(e, url, \"HTTP\");\n    }\n}\nexports.JsonRpcConnection = JsonRpcConnection;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcProvider = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst types_1 = require(\"../../types\");\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nclass JsonRpcProvider extends types_1.IJSONRpcProvider {\n    constructor(connection) {\n        super(connection);\n        this.events = new eventemitter3_1.EventEmitter();\n        this.connected = false;\n        this.connecting = false;\n        this.hasRegisteredEventListeners = false;\n        this.connection = this.setConnection(connection);\n        if (this.connection.connected) {\n            this.registerEventListeners();\n        }\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            yield this.open(connection);\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.close();\n        });\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    request(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.requestStrict((0, core_1.formatJsonRpcRequest)(request.method, request.params || [], (0, core_1.getBigIntRpcId)().toString()), // casting to any is required in order to use BigInt as rpcId\n            context);\n        });\n    }\n    // ---------- Protected ----------------------------------------------- //\n    requestStrict(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.connection.connected) {\n                    try {\n                        yield this.open();\n                    }\n                    catch (e) {\n                        reject(e);\n                    }\n                }\n                this.events.on(`${request.id}`, (response) => {\n                    if ((0, core_1.isJsonRpcError)(response)) {\n                        reject(response.error);\n                    }\n                    else {\n                        resolve(response.result);\n                    }\n                });\n                try {\n                    (0, core_2.logDebug)('[RPC] >>> send request', request, context);\n                    yield this.connection.send(request, context);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }));\n        });\n    }\n    setConnection(connection = this.connection) {\n        return connection;\n    }\n    onPayload(payload) {\n        this.events.emit(\"payload\", payload);\n        if ((0, core_1.isJsonRpcResponse)(payload)) {\n            this.events.emit(`${payload.id}`, payload);\n        }\n        else {\n            this.events.emit(\"message\", {\n                type: payload.method,\n                data: payload.params,\n            });\n        }\n    }\n    onClose(event) {\n        // Code 3000 indicates an abnormal closure signalled by the relay -> emit an error in this case.\n        if (event && event.code === 3000) {\n            this.events.emit(\"error\", new Error(`WebSocket connection closed abnormally with code: ${event.code} ${event.reason ? `(${event.reason})` : \"\"}`));\n        }\n        this.events.emit(\"disconnect\");\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            if (this.connection === connection && this.connection.connected)\n                return;\n            if (this.connection.connected)\n                this.close();\n            if (typeof connection === \"string\") {\n                yield this.connection.open(connection);\n                connection = this.connection;\n            }\n            this.connection = this.setConnection(connection);\n            yield this.connection.open();\n            this.registerEventListeners();\n            this.events.emit(\"connect\");\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.connection.close();\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    registerEventListeners() {\n        if (this.hasRegisteredEventListeners)\n            return;\n        this.connection.on(\"payload\", (payload) => this.onPayload(payload));\n        this.connection.on(\"close\", (event) => this.onClose(event));\n        this.connection.on(\"error\", (error) => this.events.emit(\"error\", error));\n        this.connection.on(\"register_error\", (_error) => this.onClose());\n        this.hasRegisteredEventListeners = true;\n    }\n}\nexports.JsonRpcProvider = JsonRpcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolanaProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SolanaProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"solana\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"solana request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"solana provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    //   {\n    //     \"chains\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\" ],\n    //     \"accounts\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp:F7wnJc5wiBGy1k87jv6gyNwE3jMEWd18oTQiYsF1xVG7\"],\n    //     \"methods\": [\n    //         \"solana_signTransaction\",\n    //         \"solana_signMessage\"\n    //     ],\n    //     \"defaultChain\": \"5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\"\n    // }\n    // TODO:确认上面的defaultChain是否正确（没有solana前缀）\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"solana\"))) {\n                chainId = `solana:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.SolanaProvider = SolanaProvider;\nexports.default = SolanaProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass StarknetProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"starknet\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"solana request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"solana provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = StarknetProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuiProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SuiProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeySui;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"sui request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"sui provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"sui\"))) {\n                chainId = `sui:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"sui_signMessage\":\n            case \"sui_signPersonalMessage\":\n            case \"sui_signTransactionBlock\":\n            case \"sui_signAndExecuteTransactionBlock\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.SuiProvider = SuiProvider;\nexports.default = SuiProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TONProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTON;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            (0, core_1.logDebug)(\"TONProvider request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"TONProvider request provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                if (!args.params) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params is nil\");\n                }\n                if (this.isRecord(args.params)) {\n                    const _e = args.params, { validUntil } = _e, newParams = __rest(_e, [\"validUntil\"]);\n                    let fromAddress = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n                    if ('from' in newParams) {\n                        fromAddress = newParams.from || ((_d = (_c = this.namespace.payload) === null || _c === void 0 ? void 0 : _c.ton_addr) === null || _d === void 0 ? void 0 : _d.address);\n                    }\n                    args.params['from'] = fromAddress;\n                    args.params['network'] = this.getDefaultChain();\n                    args.params['valid_until'] = validUntil;\n                    let response = yield this.client.request(args);\n                    if (this.isRecord(response) && 'result' in response) {\n                        const result = {\n                            boc: response.result.toString()\n                        };\n                        (0, core_1.logDebug)(\"TONProvider request provider response: \", JSON.stringify(response));\n                        (0, core_1.logDebug)(\"TONProvider request provider result: \", JSON.stringify(result));\n                        return result;\n                    }\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton_send request response is nil\");\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params type add nil\");\n                }\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        var _a, _b;\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"ton getAccounts accounts :\", accounts);\n        (0, core_1.logDebug)(\"ton getAccounts .namespace :\", JSON.stringify(this.namespace));\n        if (!accounts) {\n            return [];\n        }\n        let address = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n        (0, core_1.logDebug)(\"ton getAccounts address :\", address);\n        if (address) {\n            return [\n                address\n            ];\n        }\n        return [];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"ton_sendTransaction\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.default = TONProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TronProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTron;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"tron request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"tron provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = TronProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./providers\"), exports);\n__exportStar(require(\"./misc\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IJSONRpcProvider = exports.IJSONRpcConnection = void 0;\nclass IJSONRpcConnection {\n}\nexports.IJSONRpcConnection = IJSONRpcConnection;\nclass IJSONRpcProvider {\n    constructor(opt) {\n    }\n}\nexports.IJSONRpcProvider = IJSONRpcProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setGlobal = exports.getGlobal = void 0;\nconst globals = {};\nconst getGlobal = (key) => {\n    return globals[key];\n};\nexports.getGlobal = getGlobal;\nconst setGlobal = (key, value) => {\n    globals[key] = value;\n};\nexports.setGlobal = setGlobal;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./misc\"), exports);\n__exportStar(require(\"./globals\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRpcUrl = getRpcUrl;\nexports.getChainId = getChainId;\nexports.fromAccountToAddress = fromAccountToAddress;\nexports.convertChainIdToNumber = convertChainIdToNumber;\nexports.parseChainId = parseChainId;\nexports.mergeArrays = mergeArrays;\nexports.syncAddressAvailable = syncAddressAvailable;\nexports.syncAddressHostAvailable = syncAddressHostAvailable;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getRpcUrl(chainId, rpc, projectId) {\n    var _a;\n    const chain = parseChainId(chainId);\n    // no default\n    return (((_a = rpc.rpcMap) === null || _a === void 0 ? void 0 : _a[chain.reference]) ||\n        ``);\n}\nfunction getChainId(chain) {\n    return chain.includes(\":\") ? chain.split(\":\")[1] : chain;\n}\nfunction fromAccountToAddress(account) {\n    if (!account) {\n        return \"\";\n    }\n    try {\n        let addressArr = account.split(\":\").slice(2);\n        let address = addressArr.length > 0 ? addressArr.join(\":\") : \"\";\n        (0, core_1.logDebug)(\"fromAccountToAddress address and account:\", address, account);\n        return address;\n    }\n    catch (e) {\n        (0, core_1.logError)(\"fromAccountToAddress error:\", account);\n        return \"\";\n    }\n}\n// export function validateChainApproval(chain: string, chains: string[]): void {\n//   if (!chains.includes(chain)) {\n//     throw new Error(\n//       `Chain '${chain}' not approved. Please use one of the following: ${chains.toString()}`,\n//     );\n//   }\n// }\n// export function getChainsFromApprovedSession(accounts: string[]): string[] {\n//   return accounts.map((address) => `${address.split(\":\")[0]}:${address.split(\":\")[1]}`);\n// }\n// export function getAccountsFromSession(namespace: string, session: SessionTypes.Struct): string[] {\n//   // match namespaces e.g. eip155 with eip155:1\n//   const matchedNamespaceKeys = Object.keys(session.namespaces).filter((key) =>\n//     key.includes(namespace),\n//   );\n//   if (!matchedNamespaceKeys.length) return [];\n//   const accounts: string[] = [];\n//   matchedNamespaceKeys.forEach((key) => {\n//     const accountsForNamespace = session.namespaces[key].accounts;\n//     accounts.push(...accountsForNamespace);\n//   });\n//   return accounts;\n// }\n// export function mergeRequiredOptionalNamespaces(\n//   required: NamespaceConfig = {},\n//   optional: NamespaceConfig = {},\n// ){\n//   const requiredNamespaces = normalizeNamespaces(required);\n//   const optionalNamespaces = normalizeNamespaces(optional);\n//    return merge.merge(requiredNamespaces,optionalNamespaces)\n// }\n/**\n * Converts\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * into\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *\n */\n// export function normalizeNamespaces(namespaces: NamespaceConfig): NamespaceConfig {\n//   const normalizedNamespaces: NamespaceConfig = {};\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const rpcMap = values.rpcMap || {};\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       ...values,\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       rpcMap: { ...rpcMap, ...normalizedNamespaces[normalizedKey]?.rpcMap },\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n//\n// export function parseCaip10Account(caip10Account: string): string {\n//   return caip10Account.includes(\":\") ? caip10Account.split(\":\")[2] : caip10Account;\n// }\n/**\n * Populates the chains array for each namespace with the chains extracted from the accounts if are otherwise missing\n */\n// export function populateNamespacesChains(\n//   namespaces: SessionTypes.Namespaces,\n// ): Record<string, SessionTypes.Namespace> {\n//   const parsedNamespaces: Record<string, SessionTypes.Namespace> = {};\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const accounts = values.accounts || [];\n//     // If the key includes a CAIP separator `:` we know it's a namespace + chainId (e.g. `eip155:1`)\n//     const chains = isCaipNamespace(key)\n//       ? [key]\n//       : values.chains\n//       ? values.chains\n//       : getChainsFromApprovedSession(values.accounts);\n//     parsedNamespaces[key] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   }\n//   return parsedNamespaces;\n// }\nfunction convertChainIdToNumber(chainId) {\n    if (typeof chainId === \"number\")\n        return chainId;\n    if (chainId.includes(\"0x\")) {\n        return parseInt(chainId, 16);\n    }\n    chainId = chainId.includes(\":\") ? chainId.split(\":\")[1] : chainId;\n    return isNaN(Number(chainId)) ? chainId : Number(chainId);\n}\nconst CAIP_DELIMITER = \":\";\nfunction parseChainId(chain) {\n    const [namespace, reference] = chain.split(CAIP_DELIMITER);\n    return { namespace, reference };\n}\nfunction mergeArrays(a = [], b = []) {\n    return [...new Set([...a, ...b])];\n}\nfunction syncAddressAvailable(wallet) {\n    if (!wallet) {\n        return false;\n    }\n    if (wallet.appName !== 'OKX Wallet') {\n        return false;\n    }\n    if ((0, core_1.versionCompare)('6.97.0', wallet.appVersion) > 0) {\n        return false;\n    }\n    return syncAddressHostAvailable();\n}\nfunction syncAddressHostAvailable() {\n    try {\n        return !!(window.okxGlobal);\n    }\n    catch (e) {\n        return false;\n    }\n}\n","<template>\n  <div id=\"app\">\n    <el-container>\n      <el-header>OKX Connect</el-header>\n      <el-main>\n        <el-card class=\"wallet-info\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Wallet Info</div>\n          </template>\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Wallet Address:</strong> {{ getWalletAddress }}\n            </el-col>\n          </el-row>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Status :</strong> {{ currentStatus }}\n            </el-col>\n          </el-row>\n\n        </el-card>\n\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Connect Params</div>\n          </template>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"withUI\" @change=\"handleWithUI\">\n                Show UI</el-checkbox>\n            </el-col>\n\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"universalToTG\" @change=\"handleUniversalToTG\">\n                Use mini wallet</el-checkbox>\n            </el-col>\n          </el-row>\n\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Modals</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"modals\" placeholder=\"Modals\" @change=\"handleModalsSelect\" multiple>\n                <el-option label=\"Before\" value=\"before\" />\n                <el-option label=\"Success\" value=\"success\" />\n                <el-option label=\"Error\" value=\"error\" />\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center; justify-content: space-between;\">\n            <el-col :span=\"6\" style=\"gap: 2px\">\n              <p style=\"font-size: 11pt; margin: 0px\">Return Strategy</p>\n              <p style=\"font-size: 9pt; margin: 0px\">(Mobile only)</p>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-select\n                v-model=\"returnStrategy\"\n                @change=\"handleReturnStrategySelect\"\n                placeholder=\"Return Strategy\"\n              >\n                <el-option\n                  v-for=\"strategy in returnStrategies\"\n                  :key=\"`return-strategy-select-option-${strategy}`\"\n                  :label=\"strategy\"\n                  :value=\"strategy\"\n                />\n              </el-select>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-input\n                v-if=\"returnStrategy === 'deeplink'\"\n                v-model=\"deeplink\"\n                @change=\"handleReturnStrategyDeeplink\"\n                placeholder=\"Deeplink\"\n                :disabled=\"returnStrategy !== 'deeplink'\"\n                style=\"margin: 0px\"\n              />\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Lang</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"language\" @change=\"handleLanguageSelect\" placeholder=\"Language\">\n                <el-option v-for=\"locale in locales\" :key=\"`language-select-option-${locale}`\" :label=\"locale\"\n                  :value=\"locale\" />\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Theme</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"theme\" @change=\"handleThemeSelect\" placeholder=\"Theme\">\n                <el-option label=\"LIGHT\" :value=\"THEME.LIGHT\" />\n                <el-option label=\"DARK\" :value=\"THEME.DARK\" />\n              </el-select>\n            </el-col>\n          </el-row>\n\n<!--          <el-row>-->\n<!--          <el-row style=\"align-items: center\">-->\n<!--            <el-col :span=\"4\">-->\n<!--              <p style=\"font-size: 11pt\">Connect</p>-->\n<!--              <p style=\"font-size: 11pt\">Methods</p>-->\n<!--            </el-col>-->\n<!--            <el-col :span=\"20\">-->\n<!--              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" placeholder=\"Methods\">-->\n<!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n<!--                           :value=\"methods\" />-->\n\n<!--              </el-select>-->\n<!--            </el-col>-->\n<!--          </el-row>-->\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Connect</p>\n              <p style=\"font-size: 11pt\">Methods</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" multiple placeholder=\"methods\">\n                <el-option\n                    v-for=\"item in connectMethods\"\n                    :key=\"item\"\n                    :label=\"item\"\n                    :value=\"item\">\n                </el-option>\n              </el-select>\n\n\n<!--              <el-select v-model=\"selectedMethod\" placeholder=\"Methods\" @change=\"handleConnectMethodsSelect\" multiple>-->\n<!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n<!--                           :value=\"methods\" />-->\n<!--              </el-select>-->\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">ton_proof</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-input v-model=\"tonProofValue\"  placeholder=\"input ton_proof\"></el-input>\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" align=\"middle\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Required Chains</div>\n            </el-col>\n            <el-col\n              :span=\"6\"\n              v-for=\"item in Object.keys(availableChains)\"\n              :key=\"item\"\n            >\n              <el-checkbox\n                v-model=\"availableChains[item].checked\"\n                :disabled=\"!areChainsInit\"\n                >{{ availableChains[item].name }}</el-checkbox\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" align=\"middle\" style=\"margin-top: 20px\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Optional Chains</div>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(43114)\" @change=\"() => handleOptionChange(43114)\">\n                AVAX</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(10)\" @change=\"() => handleOptionChange(10)\">OP</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(8453)\" @change=\"() => handleOptionChange(8453)\">\n                BASE</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(99781165)\"\n                @change=\"() => handleOptionChange(99781165)\">Nonexist</el-checkbox>\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"initBtnClicked\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectInitStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                type=\"primary\"\n                @click=\"connectBtnClicked\"\n                icon=\"el-icon-connection\"\n                :disabled=\"!areChainsInit\"\n                >{{ connectStatusStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"syncAllAddressClick\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ syncAllAddressStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                type=\"danger\"\n                @click=\"disconnectAction\"\n                icon=\"el-icon-switch-button\"\n                :disabled=\"!areChainsInit || walletAddress.length == 0\"\n                >{{ disconnectStatusStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n          <teleport to=\"body\">\n            <div v-if=\"showModal\" class=\"modal-overlay\" @click=\"closeModal\">\n              <div class=\"modal-content\" @click.stop>\n                <button class=\"close-button\" @click=\"closeModal\">\n                  &times;\n                </button>\n                <h2>Scan to connect</h2>\n                <qrcode-vue :value=\"qrValue\" :size=\"350\" level=\"L\" />\n              </div>\n            </div>\n          </teleport>\n        </el-card>\n\n        <!-- 发送交易 -->\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Transactions</div>\n          </template>\n\n          <el-tabs v-model=\"activeTab\" type=\"border-card\" @tab-click=\"clickActiveTab\">\n            <!-- ETH -->\n            <el-tab-pane label=\"ETH\" name=\"eip155:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to ETH)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve TONCoin)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(eth mint\n                    nft)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add SPX6900)\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TON\" name=\"ton:-239\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_getAccount\">ton_getAccount</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_sendTransaction\">ton_sendTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- solana -->\n            <el-tab-pane label=\"Sol\" name=\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- Sui-->\n            <el-tab-pane label=\"Sui\" name=\"sui:mainnet\">\n              <SuiPanel @generateTransactionParams=\"sui_generateTransactionParams\" />\n            </el-tab-pane>\n            <!-- BTC -->\n            <el-tab-pane label=\"BTC\" name=\"btc:mainnet\">\n              <BTCPanel @generateTransactionParams=\"btc_generateTransactionParams\" />\n            </el-tab-pane>\n\n            <!-- Fractal BTC -->\n            <el-tab-pane label=\"Fractal\" name=\"fractal:mainnet\">\n              <FractalPanel @generateTransactionParams=\"fractal_generateTransactionParams\" />\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Tron\" name=\"tron:mainnet\">\n              <TronTransactionPanel\n                  @generateTransactionParams=\"tron_generateTransactionParams\"\n                  @generateTransactionResult=\"tron_getTransactionResult\" />\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Aptos\" name=\"aptos:mainnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signTransaction\">aptos_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"aptos_signAndSubmitTransaction\">aptos_signAndSubmitTransaction</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Cosmos\" name=\"cosmos:cosmoshub-4\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <!-- Polygon-->\n            <el-tab-pane label=\"Polygon\" name=\"eip155:137\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send POL)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve sushi)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(polygon mint\n                    nft)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add LGNS)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_testRpc()\">wallet_testRpc(Polygon)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\"\n                  >eth_sendTransaction(转账FUSE)</el-button\n                  >\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\"\n                  >eth_sendTransaction(授权USDC)</el-button\n                  >\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- BSC-->\n            <el-tab-pane label=\"BNB\" name=\"eip155:56\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to BNB)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve POSI)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add FET)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_testRpc()\">wallet_testRpc(check balance on eth)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Fuse\" name=\"eip155:122\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_swap\">eth_sendTransaction(Swap)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Sonic testnet\" name=\"svm:70000062\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Movement\" name=\"movement:testnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"move_signTransaction\">move_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"move_signAndSubmitTransaction\">move_signAndSubmitTransaction</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n\n            <el-tab-pane label=\"osmos\" name=\"cosmos:osmosis-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"SEI\" name=\"cosmos:pacific-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Starknet\" name=\"starknet:mainnet\">\n              <StarknetPanel ref=\"starknetPanelRef\" @generateTransactionParams=\"starknet_generateTransactionParams\" @generateTransactionResult=\"starknet_getTransactionResult\" />\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TEST \" name=\"test:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"testBase64UrlSafe\">testBase64UrlSafe</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n          </el-tabs>\n\n          <el-col :xs=\"24\" :sm=\"24\" style=\"margin: 16px 0px;\">\n            <el-row style=\"align-items: center; justify-content: space-between; margin-bottom: 8px;\">\n              <el-col :span=\"4\">\n                <p style=\"font-size: 11pt; margin: 0px; text-align: start\">Redirect param (only for ETH, Polygon, BNB, Fuse)</p>\n              </el-col>\n              <el-col :span=\"9\">\n                <el-select\n                  v-model=\"redirect\"\n                  @change=\"handleRedirectSelect\"\n                  placeholder=\"Return Strategy\"\n                  :disabled=\"!canChainAddRedirectParam()\"\n                  >\n                  <el-option\n                    v-for=\"strategy in returnStrategies\"\n                    :key=\"`return-strategy-select-option-${strategy}`\"\n                    :label=\"strategy\"\n                    :value=\"strategy\"\n                  />\n                </el-select>\n              </el-col>\n              <el-col :span=\"10\">\n                <el-input\n                  v-if=\"redirect === 'deeplink'\"\n                  v-model=\"redirectDeeplink\"\n                  @change=\"handleRedirectDeeplink\"\n                  placeholder=\"Deeplink\"\n                  :disabled=\"!canChainAddRedirectParam() || redirect !== 'deeplink'\"\n                  style=\"margin: 0px\"\n                />\n              </el-col>\n            </el-row>\n            <el-button\n              type=\"primary\" @click=\"addRedirectParam()\"\n              :disabled=\"!canChainAddRedirectParam() || !testTransaction\"\n            >\n              Add redirect param to data\n            </el-button>\n          </el-col>\n\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Data:</div>\n            <el-input v-model=\"testTransaction\" type=\"textarea\" :rows=\"5\" placeholder=\"sendTransactions\"></el-input>\n          </el-col>\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Result :</div>\n            <el-input v-model=\"testboc\" type=\"textarea\" :rows=\"5\" placeholder=\"boc\"></el-input>\n          </el-col>\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button type=\"primary\" :disabled=\"sendBtnDisabled\" @click=\"sendTransaction()\">{{\n                testTransactionStr\n                }}</el-button>\n            </el-col>\n          </el-row>\n        </el-card>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<style scoped>\n/* 重置全局边距和内边距 */\nbody,\nhtml {\n  margin: 0;\n  padding: 0;\n  height: 100%;\n}\n\n/* 确保 app 容器占满整个视口 */\n#app {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin: 0 auto;\n  /* 居中 */\n  max-width: 600px;\n  /* 设置最大宽度 */\n  padding: 0 20px;\n  /* 添加一些左右内边距 */\n}\n\n/* 调整 el-container 样式 */\n.el-container {\n  min-height: 100vh;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n}\n\n/* 调整 el-header 样式 */\n.el-header {\n  background-color: #333333;\n  color: white;\n  height: 50px;\n  line-height: 50px;\n  font-size: 18px;\n  font-weight: bold;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n}\n\n/* 调整 el-main 样式 */\n.el-main {\n  padding: 70px 0 20px;\n  /* 增加顶部内边距以避免被固定header遮挡 */\n  flex-grow: 1;\n}\n\n.el-card {\n  margin-bottom: 20px;\n}\n\n.info-row {\n  margin-bottom: 10px;\n}\n\n.input-label {\n  margin-bottom: 5px;\n  text-align: left;\n}\n\n.el-input {\n  margin-bottom: 10px;\n}\n\n/* 通用按钮样式 */\n.wallet-actions .el-button,\n.transaction .el-button,\n.clear-cache .el-button {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 40px;\n}\n\n.wallet-actions .el-button span,\n.transaction .el-button span,\n.clear-cache .el-button span {\n  margin: 0 auto;\n}\n\n/* 按钮行间距 */\n.wallet-actions .button-row,\n.transaction .button-row {\n  margin-bottom: 8px;\n}\n\n.wallet-actions .button-row:last-child,\n.transaction .button-row:last-child {\n  margin-bottom: 0;\n}\n\n/* 调整图标和文字的对齐 */\n.wallet-actions .el-button [class^=\"el-icon-\"],\n.transaction .el-button [class^=\"el-icon-\"],\n.clear-cache .el-button [class^=\"el-icon-\"] {\n  margin-right: 5px;\n  vertical-align: middle;\n}\n\n/* 新增：调整发送交易按钮与输入框的间距 */\n.transaction .el-row:not(:last-child) {\n  margin-bottom: 10px;\n}\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  text-align: center;\n  position: relative;\n  max-width: 90%;\n  width: 400px;\n}\n\n.close-button {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  font-size: 24px;\n  border: none;\n  background: none;\n  cursor: pointer;\n}\n\n/* 响应式调整 */\n@media (max-width: 600px) {\n  #app {\n    padding: 0 10px;\n  }\n\n  .el-main {\n    padding: 60px 0 10px;\n  }\n}\n</style>\n<script>\nimport {OKX_CONNECT_ERROR_CODES, safeJsonStringify,getAppWalletDeepLink,getUniversalLink} from \"@okxconnect/core\"\nimport {\n  OKXBtcProvider,\n  OKXUniversalProvider,\n  OKXCosmosProvider,\n  OKXTonProvider,\n  OKXTronProvider,\n  OKXStarknetProvider\n} from \"@okxconnect/universal-provider\"\nimport {OKXSolanaProvider} from \"@okxconnect/solana-provider\";\nimport {\n  Connection,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n  TransactionMessage,\n  VersionedTransaction\n} from '@solana/web3.js';\nimport {OKXSuiProvider as SuiAdapter} from \"@okxconnect/sui-provider\"\nimport QrcodeVue from 'qrcode.vue'\n\nimport {OKXAptosProvider} from \"@okxconnect/aptos-provider\";\nimport {Aptos, AptosConfig, Network} from \"@aptos-labs/ts-sdk\";\n\nimport BTCPanel from \"./components/BtcTransactionPanel.vue\";\nimport FractalPanel from \"./components/FractalTransactionPanel.vue\"\nimport SuiPanel from \"./components/SuiTransactionPanel.vue\";\nimport StarknetPanel from \"./components/StarknetTransactionPanel.vue\";\n\nimport {OKXUniversalConnectUI, THEME} from \"@okxconnect/ui\";\nimport {ethers} from 'ethers';\nimport VConsole from 'vconsole';\nimport nacl from \"tweetnacl\";\nconst { verifyADR36Amino } = require('@keplr-wallet/cosmos')\nconst { fromBech32 } = require('@cosmjs/encoding')\nimport { verifyPersonalMessageSignature } from '@mysten/sui/verify';\nimport {useShortLink} from \"@okxconnect/core\";\nimport TronTransactionPanel from \"@/components/TronTransactionPanel.vue\";\nimport {TronWeb} from \"tronweb\";\nimport { RpcProvider as StarknetRpcProvider, Account as StarknetAccount } from \"starknet\";\nimport { ref, toRaw } from \"vue\";\nnew VConsole();\n\nconst allChains = {\n  1: { name: \"Eth\", checked: false },\n  56: { name: \"BNB\", checked: false },\n  137: { name: \"Polygon\", checked: false },\n  122: { name: \"Fuse\", checked: false },\n  \"ton:-239\":{name: \"TON\",checked: false},\n  \"btc:mainnet\": { name: \"BTC\", checked: false },\n  \"sui:mainnet\": { name: \"Sui\", checked: false },\n  \"aptos:mainnet\": { name: \"Aptos\", checked: false },\n  \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\": {\n    name: \"Solana\",\n    checked: false,\n  },\n  \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\": {\n    name: \"Sol testnet\",\n    checked: false,\n  },\n  \"svm:70000062\": {\n    name: \"Sonic testnet\",\n    checked: false,\n  },\n  \"movement:testnet\": { name: \"Movement\", checked: false },\n  \"fractal:mainnet\": { name: \"Fractal\", checked: false },\n  \"cosmos:osmosis-1\": {name: \"Osmos\", checked: false},\n  \"cosmos:cosmoshub-4\": {name: \"Cosmos\", checked: false},\n  \"cosmos:pacific-1\": {name: \"SEI\", checked: false},\n  \"cosmos:abvdefg\": {name: \"cosmos:abvdefg\", checked: false},\n  \"tron:mainnet\": {name: \"tron\", checked: false},\n  997865: { name: \"Non Exist chain\", checked: false },\n  2020: { name: \"Ronin\", checked: false },\n  1666600000: { name: \"Harmony\", checked: false },\n  \"starknet:mainnet\": { name: \"starknet\", checked: false }\n};\n\nconst chainsThatCanAddRedirectParam = [\n  \"eip\"\n]\n\nvar optionChains = new Set([]);\nvar selectedModals = [\"before\", \"success\", \"error\"];\nvar selectedReturnStrategy = \"none\";\nvar selectedDeepLink = \"tg://resolve\";\nvar selectedLanguage = \"en_US\";\nvar selectedTheme = THEME.LIGHT;\n\n// import QrcodeVue from 'qrcode.vue'\nexport default {\n  name: \"App\",\n  components: {\n    TronTransactionPanel,\n    QrcodeVue,\n    BTCPanel,\n    FractalPanel,\n    SuiPanel,\n    StarknetPanel\n  },\n\n  setup() {\n    const sendBtnDisabled = ref(false)\n\n    return {\n      sendBtnDisabled\n    }\n  },\n  data: () => {\n    return {\n      activeTab: \"eip155:1\",\n      testTopic: \"\",\n      testPublicKey: \"\",\n      testProofPayload: \"\",\n      tonProofValue:\"\",\n      pendingDeepLink: \"-\",\n      logList: [],\n      connectReady: false,\n      connectStatusStr: \"Connect\",\n      syncAllAddressStr: \"syncAllAddress\",\n      connectInitStr: \"init test\",\n      disconnectStatusStr: \"Disconnect\",\n      localPubKey: \"\",\n      localSecKey: \"\",\n      testTransaction: \"\",\n      selectedChain: \"eip155:1\",\n      testTransactionStr: \"Send\",\n      walletAddress: \"\",\n      testboc: \"\",\n      ProofPayloadVerify: \"\",\n      showModal: false,\n      showVerifyRow: false,\n      qrValue: \"https://www.okx.com/download\",\n      currentStatus: \"\",\n      areChainsInit: false,\n      availableChains: allChains,\n      isOptionalChecked: (chainId) => {\n        return optionChains.has(chainId);\n      },\n      withUI: localStorage.getItem(\"autoRefresh\") != \"false\",\n      universalToTG: localStorage.getItem(\"universalToTG\") != \"false\",\n      modals: selectedModals,\n      returnStrategies: [\"none\", \"back\", \"deeplink\"],\n      returnStrategy: selectedReturnStrategy,\n      deeplink: selectedDeepLink,\n      locales: [\n        \"en_US\",\n        \"ru_RU\",\n        \"zh_CN\",\n        \"zh\",\n        \"ar_AE\",\n        \"cs_CZ\",\n        \"de_DE\",\n        \"es_ES\",\n        \"es_LAT\",\n        \"fr_FR\",\n        \"id_ID\",\n        \"it_IT\",\n        \"nl_NL\",\n        \"pl_PL\",\n        \"pt_BR\",\n        \"pt_PT\",\n        \"ro_RO\",\n        \"tr_TR\",\n        \"uk_UA\",\n        \"vi_VN\",\n        \"zh_TW\"\n      ],\n      selectedMethod:[],\n      selectedMethodData:[],\n      connectMethods:[\n        \"wallet_addEthereumChain(ETH)\",\n        \"personal_sign(ETH)\",\n        \"solana_signMessage(Sol mainnet)\",\n        \"sui_signMessage(Sui mainnet)\",\n        \"sui_signPersonalMessage(Sui mainnet)\",\n        \"btc_signMessage(BTC)\",\n        \"aptos_signMessage(aptos mainnet)\",\n        \"cosmos_signArbitrary(cosmoshub)\",\n        \"test_noSupport_eth(ETH)\",\n        \"tron_signMessage\",\n        \"tron_signMessageV2\",\n        \"starknet_signMessage\",\n        \"sync_all_addresses\"\n      ],\n\n      language: selectedLanguage,\n      theme: selectedTheme,\n      THEME: THEME,\n      redirect: selectedReturnStrategy,\n      redirectDeeplink: selectedDeepLink,\n      handleWithUI: (isChecked) => {\n        localStorage.setItem(\"autoRefresh\", `${isChecked}`);\n        location.reload();\n      },\n      handleUniversalToTG: (isChecked) => {\n        localStorage.setItem(\"universalToTG\", `${isChecked}`);\n      },\n      handleOptionChange: (chainId) => {\n        if (optionChains.has(chainId)) {\n          optionChains.delete(chainId);\n        } else {\n          optionChains.add(chainId);\n        }\n      },\n      starknetPanelTypedData: ''\n    };\n  },\n  computed: {\n    getWalletAddress: function () {\n      return this.walletAddress;\n    },\n  },\n  methods: {\n    isChecked(chainId) {\n      return this.selectedChains.has(chainId);\n    },\n\n    initChains(newChains) {\n      if (newChains.length > 0) {\n        const updatedChains = Object.assign({}, this.availableChains);\n        for (const chainId of newChains) {\n          if (updatedChains[chainId]){\n            updatedChains[chainId].checked = !updatedChains[chainId].checked;\n          }\n        }\n        this.availableChains = updatedChains;\n      }\n\n      this.areChainsInit = true;\n    },\n\n    async clickActiveTab(tab) {\n      const tabName = tab.props ? tab.props.name : tab.name;\n      this.selectedChain = tabName;\n      console.log(`已切换到链 :`, tabName);\n\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (tabName == \"starknet:mainnet\") {\n        this.sendBtnDisabled = true\n      }else {\n        this.sendBtnDisabled = false\n      }\n\n      window.provider.setDefaultChain(this.selectedChain);\n    },\n\n    async initBtnClicked() {\n      var initCall;\n      if (!this.withUI) {\n        initCall = OKXUniversalProvider.init({\n          dappMetaData: {\n            name: \"univer test dapp\",\n            icon: \"https://avatars.githubusercontent.com/u/37784886\",\n          },\n        });\n      } else {\n        initCall = OKXUniversalConnectUI.init({\n          dappMetaData: {\n            icon: \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\",\n            name: \"OKX WalletConnect UI Demo\",\n          },\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: \"all\",\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme\n          },\n        });\n      }\n\n      initCall.then((provider) => {\n        window.provider = provider;\n        window.tonProvider = new OKXTonProvider(window.provider);\n        window.tonProvider.onStatusChange((walletInfo) => {\n              console.log('TONConnection onStatusChange:', JSON.stringify(walletInfo));\n            }, (err) => {\n              console.log('TONConnection onStatusChange error:', err);\n            }\n        )\n\n        if (window.provider instanceof OKXUniversalConnectUI) {\n          window.provider.onModalStateChange((state)=>{\n            console.log(`onModalStateChange   ${JSON.stringify(state)}`)\n          })\n        }\n\n        console.log(\"init finished:\", provider);\n        console.log(\"init finished session:\", JSON.stringify(provider.session));\n\n        if (provider.session?.namespaces) {\n          const newChains = [];\n          console.log(\"namespaces\", provider.session.namespaces);\n          Object.entries(provider.session.namespaces).forEach(([key, value]) => {\n            if (key === \"eip155\") {\n              value.chains.forEach((chain) => {\n                newChains.push(parseInt(chain.substring(7)));\n              });\n            }\n            else {\n              value.chains.forEach((chain) => {\n                newChains.push(chain);\n              });\n            }\n          });\n\n          console.log(\"existing chains:\", newChains);\n          this.initChains(newChains);\n        } else {\n          this.initChains([]);\n        }\n\n        provider.on(\"display_uri\", (uri) => {\n          if (!useShortLink()){\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>display_uri  ==> \", uri);\n        });\n\n        provider.on(\"connect_signResponse\", (items) => {\n          console.log(\"通知>>>connect_signResponse  ==> \", JSON.stringify(items));\n          this.verifyMessage(items)\n        })\n\n        provider.on(\"short_display_uri\", (uri) => {\n          if (useShortLink()){\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>short_display_uri  ==> \", uri);\n        });\n\n\n        provider.on(\"session_connecting\", () => {\n          if (useShortLink()){\n            alert(\"session_connecting\")\n          }\n          console.log(\"通知>>>session_connecting  ==> \");\n        });\n\n        provider.on(\"connect\", (session) => {\n          console.log(\"通知>>>get connect session\", session);\n        });\n        provider.on(\"reconnect\", (session) => {\n          console.log(\"通知>>>get reconnect session\", session);\n          this.walletAddress = \"connected\";\n        });\n        provider.on(\"disconnect\", ({ topic }) => {\n          console.log(`通知>>>get disconnect  ${topic}`);\n          this.walletAddress = \"disconnecteddddd\";\n        });\n        provider.on(\"session_delete\", ({ topic }) => {\n          console.log(`通知>>>get session_delete  ${topic}`);\n        });\n        provider.on(\"session_update\", (session) => {\n          console.log(`通知>>>get session_update `, JSON.stringify(session));\n        });\n      });\n    },\n\n    async connectBtnClicked() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        this.testTonSdk();\n      } else {\n        console.log(`connectBtnClicked provider not finish init`);\n      }\n    },\n\n    async syncAllAddressClick() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        if (window.provider instanceof OKXUniversalProvider){\n          if (window.provider.connected()){\n            try {\n              let message = await window.provider.syncAllAddresses()\n              if (typeof message == \"string\") {\n                this.testboc = message\n              } else {\n                this.testboc = JSON.stringify(message)\n              }\n            }catch (e) {\n              this.testboc = JSON.stringify(e)\n            }\n          }else{\n            this.testboc = \"not connected\"\n          }\n        }\n\n      } else {\n        console.log(`syncAllAddress provider not finish init`);\n      }\n    },\n\n    async disconnectAction() {\n      try {\n        console.log(\"get disconnect wallet btn clicked\");\n        // await TON.disconnect();\n        var provider = window.provider;\n        await provider.disconnect();\n        this.walletAddress = \"disconnected\";\n      } catch (error) {\n        console.log(\"Disconnect  error ==>> \", error.message);\n        this.currentStatus = error.message;\n      }\n    },\n\n    async eth_requestAccounts() {\n      var data = { method: \"eth_requestAccounts\" };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_chainId() {\n      var data = { method: \"eth_chainId\" };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_switchEthereumChain() {\n      var data = { method: \"wallet_switchEthereumChain\" };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_addEthereumChain() {\n      var data = {\n        method: \"wallet_addEthereumChain\",\n        params: {\n          blockExplorerUrls: [\"https://explorer.fuse.io\"],\n          chainId: \"0x7a\",\n          chainName: \"Fuse\",\n          nativeCurrency: { name: \"Fuse\", symbol: \"FUSE\", decimals: 18 },\n          rpcUrls: [\"https://rpc.fuse.io\"],\n        },\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n    async personal_sign() {\n      if (this.selectedChain === \"eip155:1\") {\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0x1ca023f10e157d148deed210f8bee193657a1eaa7f187909e20a9dc3b071dbc364c41fde37960c05093359f410a061ec8a7dca8c0c39fc7c1e24de8a3329775d1b\n\n        var accounts = await window.provider.request(\n          { method: \"eth_requestAccounts\" },\n          \"eip155:1\"\n        );\n        var address = accounts[0];\n        console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n        var dataETH = {\n          method: \"personal_sign\",\n          params: [\n            \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n            address,\n          ],\n        };\n\n        this.testTransaction = JSON.stringify(dataETH);\n      } else if (\n        this.selectedChain === \"eip155:137\" ||\n        this.selectedChain === \"eip155:122\"\n      ) {\n        // method\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0xebda9cfa2af43999058dffa0107031d1ef7fc0252dca85dcbd22ea097af922ca39b64d509ef61ce42b7641c5840b8a80337ffd1411b13e87e2260a3f1b6c151c1b\n\n        var dataPolygon = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n        this.testTransaction = JSON.stringify(dataPolygon);\n      } else if (this.selectedChain === \"eip155:56\") {\n        var data = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n\n        this.testTransaction = JSON.stringify(data);\n      }\n    },\n\n    async eth_sendTransaction_swap() {\n      var data = {\n        method: \"eth_sendTransaction\",\n        chainId: \"eip155:122\",\n        params: {\n          value: \"0x38d7ea4c68000\",\n          gas: \"0x2665f\",\n          to: \"0xf2614A233c7C3e7f08b1F887Ba133a13f1eb2c55\",\n          from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n          data: \"0x2646478b000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00000000000000000000000000000000000000000000000000038d7ea4c68000000000000000000000000000620fd5fa44be6af63715ef4e65ddfa0387ad13f5000000000000000000000000000000000000000000000000000000000000001b000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000700301ffff0201602352A9Eb5234466Eac23E59e7B99bCaE79C39c0BE9e53fd7EDaC9F859882AfdDa116645287C629040BE9e53fd7EDaC9F859882AfdDa116645287C62900602352A9Eb5234466Eac23E59e7B99bCaE79C39c01f2F3e73be57031114dd1f4E75c1DD87658be7F0E000bb800000000000000000000000000000000\",\n        },\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_signTypedData_v4() {\n      // method\n      // eth_signTypedData\n      // address\n      // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n      // valid\n      // true\n      // result\n      // 0xa8bb3c6b33a119d2d567c7632195c21988df778006082742125a591f5c633f716107883a37f7de6531a6312a5f69022135bf46fe5ab77905b62c82b3395f985e1b\n      //\n\n      // var data = {\n      //   \"method\": \"eth_signTypedData_v4\",\n      //   \"params\": {\n      //     \"typedDataJson\":\"{\\\"types\\\":{\\\"EIP712Domain\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"version\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"chainId\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"name\\\":\\\"verifyingContract\\\",\\\"type\\\":\\\"address\\\"}],\\\"Person\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"wallet\\\",\\\"type\\\":\\\"address\\\"}],\\\"Mail\\\":[{\\\"name\\\":\\\"from\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"to\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"contents\\\",\\\"type\\\":\\\"string\\\"}]},\\\"primaryType\\\":\\\"Mail\\\",\\\"domain\\\":{\\\"name\\\":\\\"Ether Mail\\\",\\\"version\\\":\\\"1\\\",\\\"chainId\\\":1,\\\"verifyingContract\\\":\\\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\\\"},\\\"message\\\":{\\\"from\\\":{\\\"name\\\":\\\"Cow\\\",\\\"wallet\\\":\\\"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\\\"},\\\"to\\\":{\\\"name\\\":\\\"Bob\\\",\\\"wallet\\\":\\\"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\\\"},\\\"contents\\\":\\\"Hello, Bob!\\\"}}\"\n      // }}\n\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        this.selectedChain\n      );\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n      var data = {\n        method: \"eth_signTypedData_v4\",\n        params: [\n          address,\n          {\n            types: {\n              EIP712Domain: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"version\",\n                  type: \"string\",\n                },\n                {\n                  name: \"chainId\",\n                  type: \"uint256\",\n                },\n                {\n                  name: \"verifyingContract\",\n                  type: \"address\",\n                },\n              ],\n              Person: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"wallet\",\n                  type: \"address\",\n                },\n              ],\n              Mail: [\n                {\n                  name: \"from\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"to\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"contents\",\n                  type: \"string\",\n                },\n              ],\n            },\n            primaryType: \"Mail\",\n            domain: {\n              name: \"Ether Mail\",\n              version: \"1\",\n              chainId: 1,\n              verifyingContract: \"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\",\n            },\n            message: {\n              from: {\n                name: \"Cow\",\n                wallet: \"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\",\n              },\n              to: {\n                name: \"Bob\",\n                wallet: \"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\",\n              },\n              contents: \"Hello, Bob!\",\n            },\n          },\n        ],\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_sendTransaction_transfer() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            chainId: \"0x1\",\n            to: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            value: \"0x5af3107a4000\",\n            maxPriorityFeePerGas: \"0x3b9aca00\",\n            gas: \"0x5e56\",\n            maxFeePerGas: \"0x2643b9db8\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gasPrice: \"0x17003f6530\",\n            nonce: \"0x0d30\",\n            data: \"0x\",\n            value: \"0x00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasLimit: \"0x5208\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x5e56\",\n            value: \"0x5af3107a4000\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasPrice: \"0x3b9aca00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            chainId: \"0x38\",\n          },\n        };\n      }else if(this.selectedChain === \"eip155:122\"){\n         data =   {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            value: \"0x0\",\n            chainId: \"0x7a\",\n          }\n        }\n      }\n\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        this.selectedChain\n      );\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"to\"] = address;\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_approve() {\n      var data = {};\n\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000000000000022d473030f116ddee9f6b43ac78ba3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x582d872a1b094fc48f5de31d3b73f2d9be47def1\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000f6f8096ac575b0\",\n            to: \"0x0b3F868E0BE5597D5DB7fEB59E1CADBb0fdDa50a\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            value: \"0x0\",\n            gas: \"0xe117\",\n            gasPrice: \"0xb2d05e00\",\n            data: \"0x095ea7b300000000000000000000000031c2f6fcff4f8759b3bd5bf0e1084a055615c768ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x5CA42204cDaa70d5c773946e69dE942b85CA6706\",\n          },\n        };\n      }else if (this.selectedChain === 'eip155:122'){\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000000000000013b3\",\n            to: \"0x620fd5fa44BE6af63715Ef4E65DDFA0387aD13F5\",\n          },\n        };\n      }\n\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        this.selectedChain\n      );\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_mint() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x4cacb\",\n            data: \"0xa64dfa75000000000000000000000000ed688002f3797599db8b4feacfe8b1dda0df1c8d000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cecb15396825a895ff8da8fc2d2c77a234dccee00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f6261667962656968643737366b6177706e71336f6f6a6635693274787a76617737737164656b34616a776472637472703261366f626b70723773792f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x30795\",\n            data: \"0xa64dfa75000000000000000000000000341b3687f0309778f08f29336b2c4b9c38b9f110000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f62616679626569686a6279676b68747a71376b68377434336266686e676e793236337668766f6578716a6d6e377161716166366e717a64743777712f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      }\n\n      let str = JSON.stringify(data);\n      console.log(\"-----长度--->\", str.length);\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n          this.selectedChain\n      );\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_testRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n        `eip155:56`,\n        `https://eth-mainnet.g.alchemy.com/v2/NxUfYJUr-TQtEpLmSXhhD5pXn70GwsyV`\n      );\n      var data = {\n        method: \"eth_getBalance\",\n        params: [\"0x8D97689C9818892B700e27F316cc3E41e17fBeb9\", \"latest\"],\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_watchAsset() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xe0f63a424a4439cbe457d80e4f4b51ad25b2c56c\",\n              symbol: \"SPX6900\",\n              image:\n                \"https://assets.coingecko.com/coins/images/31401/standard/sticker_%281%29.jpg?1702371083\",\n              decimals: 8,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xeB51D9A39AD5EEF215dC0Bf39a8821ff804A0F01\",\n              symbol: \"LGNS\",\n              image: \"https://polygonscan.com/token/images/originlgns_32.png\",\n              decimals: 9,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0x031b41e504677879370e9dbcf937283a8691fa7f\",\n              symbol: \"FET\",\n              image: \"https://bscscan.com/token/images/fetch_32.png\",\n              decimals: 18,\n            },\n          },\n        };\n      }\n\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async ton_sendTransaction() {\n      var data  = {\n        \"messages\":[{\"address\":\"EQARULUYsmJq1RiZ-YiH-IJLcAZUVkVff-KBPwEmmaQGH6aC\",\"amount\":\"205000000\",\"payload\":\"te6cckEBAgEAhwABbQ+KfqUAAADNgG7tIEATEtAIAO87mQKicbKgHIk4pSPP4k5xhHqutqYgAB7USnesDnCcECwbgQMBAJUlk4VhgBD3JEg1TUr75iTijBghOKm/sxNDXUBl7CD6WMut0Q85x4RafwA/Es89DBXoTxuqxVFxyBbzt9Rav2HBUKl7hmkvLuKHLBCW57aK\"}],\n        \"validUntil\":1792481054,\n        \"network\":'-239'}\n      this.testTransaction = JSON.stringify(data)\n    },\n    ton_getAccount() {\n      this.testTransaction = \"这里是同步获取 不再需要点击 <<发送交易>>\"\n      let result =   window.tonProvider.account()\n      if (result) {\n        this.testboc = JSON.stringify(result);\n      } else {\n        this.testboc = 'null'\n      }\n    },\n\n    async tonUniversalLog() {\n      console.log(\"ton 信息: tonProvider  connected:\",window.tonProvider.connected())\n      console.log(\"ton 信息: tonProvider  account:\",JSON.stringify(window.tonProvider.account()))\n      console.log(\"ton 信息: tonProvider  wallet:\",JSON.stringify(window.tonProvider.wallet()))\n    },\n\n    async sendTransactionAlert() {\n      //\n      const response = await fetch(`https://apitest.fireverse.ai/oauth/okx/getNonce?publicAddress=0x0cecb15396825a895ff8da8fc2d2c77a234dccee`);\n      const data = await response.json();\n      console.log(\"请求数据----\",JSON.stringify(data))\n      await this.personal_sign()\n      if (confirm(\"Are you want to sign message?\")) {\n        this.sendTransaction();\n      }\n\n      // window.open(\"https://www.okx.com/download?deeplink=okx%3A%2F%2Fweb3%2Fwallet%2Fconnect\",'_self')\n    },\n\n    async sendTransaction() {\n      if (this.selectedChain.startsWith(\"aptos\")\n          || this.selectedChain.startsWith(\"movement\")\n          || this.selectedChain.startsWith(\"solana\")\n          || this.selectedChain.startsWith(\"sonic\")\n          || this.selectedChain.startsWith(\"cosmos\")) {\n        return\n      }\n      console.log(\"sendTransaction\", window.provider);\n      console.log(\"sendTransaction内容11------\", this.testTransaction);\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (this.testTransaction && window.provider) {\n        // eslint-disable-next-line no-undef\n        const sendData = JSON.parse(this.testTransaction);\n        try {\n          console.log(\"sendTransaction-----22method>>\", sendData.method);\n\n          let chainId = \"eip155:1\";\n          if (this.selectedChain) {\n            chainId = this.selectedChain;\n            console.log(\n              \"sendTransaction-----this.selectedChain>>\",\n              this.selectedChain\n            );\n          }\n          console.log(\"windowOpen[click_1]: \", Date.now());\n          if (chainId == \"sui:mainnet\") {\n            const adapter = new SuiAdapter(window.provider);\n            var suiResult = \"invalid result\";\n            if (this.currentSuiMethod == 'sui_getAccount') {\n              let result = adapter.getAccount()\n              if (typeof result == \"string\") {\n                this.testboc = result\n              } else {\n                this.testboc = JSON.stringify(result)\n              }\n            }\n            if (this.currentSuiMethod == \"sui_signTransaction\") {\n              suiResult = await adapter.signTransaction(\n                this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signAndExecuteTransaction\") {\n              suiResult = await adapter.signAndExecuteTransaction(\n                this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signMessage\") {\n              console.log(\"signMessage----\", this.currentSuiTransaction);\n              suiResult = await adapter.signMessage(this.currentSuiTransaction);\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_signPersonalMessage\") {\n              console.log(\n                \"signPersonalMessage----\",\n                this.currentSuiTransaction\n              );\n              suiResult = await adapter.signPersonalMessage(\n                this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_testRpc\") {\n              console.log(\"test rpc----\", this.currentSuiTransaction);\n              console.log(\n                `请求数据发送 rpc ----->> ${JSON.stringify(sendData)}`\n              );\n              const res = await window.provider.request(sendData, chainId);\n              console.log(`请求数据回调 rpc ----->> ${JSON.stringify(result)}`);\n              if (typeof res == \"string\") {\n                this.testboc = res;\n              } else {\n                this.testboc = JSON.stringify(res);\n              }\n            }\n            console.log(\"windowOpen[click_2]: \", Date.now());\n            return;\n          }else if(chainId === \"ton:-239\"){\n            console.log(\n                `请求数据发送 sendTransaction ---ton-->> ${JSON.stringify(sendData)}`\n            );\n            let result =  await window.tonProvider.sendTransaction(sendData)\n            console.log(\n                `请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`\n            );\n            if (typeof result == \"string\") {\n              this.testboc = result;\n            } else {\n              this.testboc = JSON.stringify(result);\n            }\n            return\n          }\n\n          if (chainId == 'btc:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var btcResult = 'invalid result'\n\n            if (this.currentBtcMethod == 'btc_signMessage') {\n              btcResult = await btcAdapter.signMessage(chainId, this.currentBtcTransaction[\"signStr\"])\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_send') {\n              btcResult = await btcAdapter.send(chainId, this.currentBtcTransaction)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signPsbt') {\n              btcResult = await btcAdapter.signPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n\n              this.hexToBase64(btcResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentBtcMethod == 'btc_signPsbts') {\n              btcResult = await btcAdapter.signPsbts(chainId, this.currentBtcTransaction.psbtHexs, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_sendInscription') {\n              btcResult = await btcAdapter.sendInscription(chainId, this.currentBtcTransaction.address, this.currentBtcTransaction.inscriptionId, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signAndPushPsbt') {\n              btcResult = await btcAdapter.signAndPushPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            }else if (this.currentBtcMethod == 'btc_sendBitcoin') {\n              btcResult = await btcAdapter.sendBitcoin(chainId, this.currentBtcTransaction.toAddress, this.currentBtcTransaction.satoshis, this.currentBtcTransaction.options)\n\n              this.testboc = JSON.stringify(btcResult)\n            }\n            return\n          }\n\n          if (chainId == 'fractal:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var fractalResult = 'invalid result'\n\n            if (this.currentFractalMethod == 'fractal_signMessage') {\n              fractalResult = await btcAdapter.signMessage(chainId, this.currentFractalTransaction['signStr'])\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_send') {\n              fractalResult = await btcAdapter.send(chainId, this.currentFractalTransaction)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signPsbt') {\n              fractalResult = await btcAdapter.signPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.hexToBase64(fractalResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentFractalMethod == 'fractal_signPsbts') {\n              fractalResult = await btcAdapter.signPsbts(chainId, this.currentFractalTransaction.psbtHexs, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_sendInscription') {\n              fractalResult = await btcAdapter.sendInscription(chainId, this.currentFractalTransaction.address, this.currentFractalTransaction.inscriptionId, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signAndPushPsbt') {\n              fractalResult = await btcAdapter.signAndPushPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            }else if (this.currentFractalMethod == 'fractal_sendBitcoin') {\n              fractalResult = await btcAdapter.sendBitcoin(chainId, this.currentFractalTransaction.toAddress, this.currentFractalTransaction.satoshis, this.currentFractalTransaction.options)\n\n              this.testboc = JSON.stringify(fractalResult)\n            }\n\n            return\n          }\n\n          console.log(`请求数据发送 sendTransaction ----->> ${JSON.stringify(sendData)}`)\n          var result = await window.provider.request(sendData, chainId)\n          console.log(`请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`)\n\n          console.log(\"windowOpen[click_3]: \", Date.now());\n          if (typeof result == \"string\") {\n            this.testboc = result;\n          } else {\n            this.testboc = JSON.stringify(result);\n          }\n          console.log(\"方法数据回调 --this.testboc--\", this.testboc);\n        } catch (error) {\n          console.error(\"方法数据回调失败 --Error--\", error.message);\n\n          if (error.code === OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n            this.testboc = error.message;\n          } else {\n            this.testboc = \"wrong signature！\" + error.message;\n          }\n        }\n      } else {\n        alert(\"Please input transaction data\");\n      }\n    },\n\n    hexToBase64(hexStr) {\n      var bytes = [];\n      for (var i = 0; i < hexStr.length; i += 2) {\n        bytes.push(parseInt(hexStr.substr(i, 2), 16));\n      }\n      const buffer = new Uint8Array(bytes)\n      const blob = new Blob([buffer]);\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = function (e) {\n          var base64Data = e.target.result.split(\",\")[1]\n          resolve(base64Data);\n        };\n        reader.onerror = function (e) {\n          reject(e);\n        };\n        reader.readAsDataURL(blob);\n      });\n    },\n    testBase64UrlSafe(){\n      let datatest = {\"protocolVer\":1,\"topic\":\"8a7a4c3be73802d0ae2587123ade7bb79f27433b9aa3ca589a2208a2089eecfd\",\"clientId\":\"5f1bbf9eac92160affa7ef04d0a710817ddb6d8c22ebbd6263e86f059930b404\",\"requestId\":\"1731383250054\",\"dAppInfo\":{\"url\":\"connect.oker.vip\",\"origin\":\"https://connect.oker.vip\",\"name\":\"univer test dapp\",\"icon\":\"https://avatars.githubusercontent.com/u/37784886\"},\"requests\":[{\"name\":\"requestAccounts\",\"requiredNamespaces\":[{\"namespace\":\"aptos\",\"chains\":[\"aptos:637\"]}],\"optionalNamespaces\":[],\"connectRequestMethods\":[{\"chainId\":\"aptos:637\",\"method\":\"aptos_signMessage\",\"params\":{\"data\":{\"address\":true,\"application\":true,\"chainId\":true,\"message\":\"123 中文测试!\",\"nonce\":\"1234\"},\"applicationUrl\":\"https://connect.oker.vip\",\"prefix\":\"APTOS\",\"aptosChainId\":\"1\"}}]}],\"redirect\":\"none\"}\n      let json = JSON.stringify(datatest)\n      const utf8Array = new TextEncoder().encode(json);\n      let binary = '';\n      utf8Array.forEach(byte => {\n        binary += String.fromCharCode(byte);\n      });\n\n      let firstStr =  btoa(binary)\n      console.log(\"字符串编码1>>>>\",firstStr)\n      firstStr = firstStr.replace(/\\+/g, '-')  // 替换 '+'\n      console.log(\"字符串编码2>>>>\",firstStr)\n      firstStr = firstStr.replace(/\\//g, '_')  // 替换 '/'\n      console.log(\"字符串编码3>>>>\",firstStr)\n      firstStr = firstStr.replace(/=+$/, '');  // 移除 '=';\n      console.log(\"字符串编码4>>>>\",firstStr)\n\n      let showUrl =  getUniversalLink(getAppWalletDeepLink(firstStr))\n      console.log(\"字符串编码5>>>>\",showUrl)\n      this.qrValue = showUrl;\n      this.showModal = true;\n    },\n\n\n    async testTonSdk() {\n      // 1. connect\n      //  create sub providers for each namespace/chain\n      let nameSpacesChains = [];\n      let optSpaceChains = [];\n\n      let solanaChains = [\n        \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n        \"svm:70000062\",\n      ];\n      let hasEip155, hasSolana, hasSui, hasBtc, hasAptos, hasTon, hasCosmos, hasTron, hasStarknet = false\n\n      let suiChains = [\n        \"sui:mainnet\",\n      ];\n\n      let btcChains = [\n        \"btc:mainnet\",\n        \"fractal:mainnet\"\n      ];\n\n      const chains = Object.entries(this.availableChains)\n          .filter((chain) => chain[1].checked)\n          .map((chain) => chain[0]);\n      console.log(`chains  ===> ${chains.values()}`)\n      chains.forEach(function (chainId) {\n        console.log(`chains.forEach chainId  ===> ${chainId}`)\n\n        if (solanaChains.includes(chainId)) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"ton\")) {\n          nameSpacesChains.push(chainId)\n          hasTon = true\n          return\n        }\n        if (typeof chainId == 'string' && (chainId.startsWith(\"aptos\") || chainId.startsWith(\"movement\"))) {\n          nameSpacesChains.push(chainId)\n          hasAptos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId)\n          hasSolana = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"cosmos\")) {\n          nameSpacesChains.push(chainId)\n          hasCosmos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"tron\")) {\n          nameSpacesChains.push(chainId)\n          hasTron = true\n          return\n        }\n\n        if (typeof chainId == 'string' && chainId.startsWith(\"starknet\")) {\n          nameSpacesChains.push(chainId)\n          hasStarknet = true\n          return\n        }\n\n        if (suiChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`);\n          nameSpacesChains.push(chainId);\n          hasSui = true;\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`)\n          nameSpacesChains.push(chainId)\n          hasBtc = true\n          return\n        }\n\n        hasEip155 = true\n        nameSpacesChains.push(`eip155:${chainId}`)\n      })\n\n\n      optionChains.forEach(function (chainId) {\n        if (solanaChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n        if (typeof chainId == \"string\" && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (suiChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          optSpaceChains.push(chainId)\n          return\n        }\n\n        optSpaceChains.push(`eip155:${chainId}`)\n      })\n\n      console.log(`namespaceChains  ===> ${JSON.stringify(nameSpacesChains)}`);\n      var connectData = {};\n      if (nameSpacesChains && nameSpacesChains.length > 0) {\n        var requireData = {};\n\n        if (hasEip155) {\n          requireData.eip155 = {\n            chains: nameSpacesChains.filter((item) =>\n              item.startsWith(\"eip155\")\n            ),\n            defaultChain: nameSpacesChains.filter((item) =>\n              item.startsWith(\"eip155\")\n            )[0],\n          };\n        }\n        if (hasSolana) {\n          requireData.solana = {\n            chains: nameSpacesChains.filter(\n              (item) =>\n                item.startsWith(\"solana\") ||\n                item.startsWith(\"sonic\") ||\n                item.startsWith(\"svm\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n              (item) =>\n                item.startsWith(\"solana\") ||\n                item.startsWith(\"sonic\") ||\n                item.startsWith(\"svm\")\n            )[0],\n          };\n        }\n\n        if (hasCosmos) {\n          requireData.cosmos = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            )[0],\n          }\n        }\n        if (hasTron) {\n          requireData.tron = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            )[0],\n          }\n        }\n        if (hasStarknet) {\n          requireData.starknet = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"starknet\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"starknet\")\n            )[0],\n          }\n        }\n        if (hasTon) {\n\n          //\n          let tonParams = {\n            ton_addr:{\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue){\n            tonParams = {\n              ton_addr:{\n                name: 'ton_addr',\n              },\n              ton_proof:{\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          requireData.ton = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"ton\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"ton\"))[0],\n            params:tonParams\n          };\n        }\n\n        if (hasSui) {\n          requireData.sui = {\n            chains: nameSpacesChains.filter((item) => item.startsWith(\"sui\")),\n            defaultChain: nameSpacesChains.filter((item) =>\n              item.startsWith(\"sui\")\n            )[0],\n            rpcMap: {\n              \"sui:mainnet\": \"https://www.okx.com/fullnode/sui/discover/rpc\"\n            }\n          };\n        }\n        if (hasAptos) {\n          requireData.aptos = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\"))[0]\n          }\n        }\n\n        if (hasBtc) {\n          let btcChains = nameSpacesChains.filter(item => item.startsWith(\"btc\") || item.startsWith(\"fractal\"))\n          requireData.btc = {\n            chains: btcChains,\n            defaultChain: btcChains[0]\n          }\n        }\n        console.log(`requireData  ===> ${JSON.stringify(requireData)}`)\n        connectData['namespaces'] = requireData;\n        console.log(JSON.stringify(connectData))\n      }\n\n      if (optSpaceChains && optSpaceChains.length > 0) {\n        var optData = {\n          eip155: {\n            chains: optSpaceChains.filter((item) => item.startsWith(\"eip155\")),\n            defaultChain: optSpaceChains.filter((item) =>\n              item.startsWith(\"eip155\")\n            )[0],\n          },\n        };\n        connectData[\"optionalNamespaces\"] = optData;\n      }\n\n      if (nameSpacesChains.length === 0 && optSpaceChains.length === 0) {\n        //未选择链\n        alert(\"Please select a chain from above to continue\");\n        return;\n      }\n      console.log(\"=====>connectData \");\n      console.log(connectData);\n\n      var connectMethod;\n      let signMethods = this.getCurrentSelectedMethodData();\n      if (window.provider instanceof OKXUniversalConnectUI) {\n        if (signMethods && signMethods.length>0){\n          connectMethod = window.provider.openModalAndSign(connectData,JSON.parse(JSON.stringify(signMethods)));\n        }else {\n          connectMethod = window.provider.openModal(connectData);\n        }\n      } else {\n        if (this.universalToTG){\n          connectData.sessionConfig = {\n            useMini:true,\n            openUniversalUrl:true,\n            tmaReturnUrl:'back'\n          }\n        }else{\n          connectData.sessionConfig = {\n            redirect: selectedReturnStrategy\n          }\n        }\n        if (signMethods && signMethods.length>0){\n          connectMethod = window.provider.connectAndSign(connectData,JSON.parse(JSON.stringify(signMethods)));\n        }else {\n          connectMethod = window.provider.connect(connectData);\n        }\n      }\n\n      await connectMethod\n        .then((result) => {\n          // 2. set defaul chain\n          this.walletAddress = \"connected\";\n          if (this.isPC()) {\n            this.showModal = false;\n          }\n          if (result){\n            this.testboc = JSON.stringify(result)\n          }\n\n          if (window.provider.session && window.provider.session.namespaces){\n            let ton = window.provider.session.namespaces[\"ton\"];\n          console.log(\"是否包含ton\",ton)\n            if (ton){\n              this.tonUniversalLog()\n            }\n          }\n        })\n        .catch((error) => {\n          if (error.code == 301) {\n            setTimeout(() => {\n              alert(error.message)\n            }, 0.5);\n          } else if (error.message){\n            alert(error.message)\n          }\n          console.error(\"发生了错误：\", error);\n        });\n    },\n\n    getCurrentSelectedMethodData(){// 连接签名\n      var methodList = [];\n      this.selectedMethod.forEach(method =>{\n        switch (method) {\n          case \"wallet_addEthereumChain(ETH)\":\n            methodList.push({\n              method: \"wallet_addEthereumChain\",\n              chainId:\"eip155:1\",\n              params: {\n                blockExplorerUrls: [\"https://explorer.fuse.io\"],\n                chainId: \"0x7a\",\n                chainName: \"Fuse\",\n                nativeCurrency: { name: \"Fuse\", symbol: \"FUSE\", decimals: 18 },\n                rpcUrls: [\"https://rpc.fuse.io\"],\n              },\n            })\n            break;\n          case \"personal_sign(ETH)\":\n            methodList.push(\n              {\n                method: \"personal_sign\",\n                chainId: \"eip155:1\",\n                params: [\n                  \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n                ],\n              });\n            break;\n          case \"solana_signMessage(Sol mainnet)\":\n            methodList.push(\n              {\n                \"chainId\": \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n                \"method\": \"solana_signMessage\",\n                \"params\": {\n                  \"message\": \"Hello Solana\",\n                }\n              }\n            );\n            break;\n          case \"sui_signMessage(Sui mainnet)\":\n          case \"sui_signPersonalMessage(Sui mainnet)\": {\n            let suiData = [\n              76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n              109, 111, 118, 101,\n            ];\n            let uint8Array = new Uint8Array(suiData);\n            let currentMethod = \"sui_signMessage\";\n            this.currentSuiTransaction = {\n              message:uint8Array\n            }\n\n            if(method.startsWith(\"sui_signPersonalMessage\")){\n              currentMethod = \"sui_signPersonalMessage\";\n            }\n            methodList.push(\n                {\n                  method: currentMethod,\n                  chainId: \"sui:mainnet\",\n                  params: {\n                    message: uint8Array,\n                  }\n                }\n            );\n            break;\n          }\n          case \"btc_signMessage(BTC)\":\n            methodList.push(\n              {\n                method: \"btc_signMessage\",\n                chainId: \"btc:mainnet\",\n                params: {\n                  message: \"Welcome to BTC\"\n                }\n              }\n            )\n            break;\n          case \"aptos_signMessage(aptos mainnet)\":\n            methodList.push(\n              {\n                \"chainId\": \"aptos:mainnet\",\n                \"method\": \"aptos_signMessage\",\n                \"params\": {\n                  address: true,\n                  application: true,\n                  chainId: true,\n                  message: \"Hello Aptos\",\n                  nonce: \"1234\"\n                }\n              }\n            )\n            break;\n          case \"cosmos_signArbitrary(cosmoshub)\":\n            methodList.push(\n                {\n                  \"chainId\": \"cosmos:cosmoshub-4\",\n                  \"method\": \"cosmos_signArbitrary\",\n                  \"params\": {\n                    message: \"test cosmos\"\n                  }\n                }\n            )\n\n            break;\n          case \"test_noSupport_eth(ETH)\":\n            methodList.push(\n                {\n                  chainId: \"eip155:1\",\n                  method: \"test_noSupport_eth\",\n                  params: {\n                    message: \"test hello\",\n                  }\n                }\n            )\n            break;\n          case \"sync_all_addresses\":\n            methodList.push(\n                {\n                  method: \"sync_all_addresses\",\n                });\n            break;\n          case \"tron_signMessage\":\n            methodList.push(\n                {\n                  chainId:\"tron:mainnet\",\n                  method: \"tron_signMessage\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n          case \"tron_signMessageV2\":\n            methodList.push(\n                {\n                  chainId:\"tron:mainnet\",\n                  method: \"tron_signMessageV2\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n\n            //\n          case \"starknet_signMessage\": {\n            const signData = {\n              \"domain\": {\n                \"chainId\": \"0x534e5f4d41494e\",\n                \"name\": \"STRKFarm\",\n                \"version\": \"1\"\n              },\n              \"message\": {\n                \"document\": \"app.strkfarm.xyz/tnc/v1\",\n                \"message\": \"Read and Agree T&C\"\n              },\n              \"primaryType\": \"Tnc\",\n              \"types\": {\n                \"StarkNetDomain\": [\n                  {\n                    \"name\": \"name\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"version\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"chainId\",\n                    \"type\": \"felt\"\n                  }\n                ],\n                \"Tnc\": [\n                  {\n                    \"name\": \"message\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"document\",\n                    \"type\": \"felt\"\n                  }\n                ]\n              }\n            }\n            methodList.push({\n              chainId:\"starknet:mainnet\",\n              method: \"starknet_signMessage\",\n              params: {\n                accountAddress: \"\",\n                typedData: signData\n              }\n            })\n          }\n            break\n          default:\n\n            break;\n        }\n      })\n      this.selectedMethodData = methodList\n      return methodList\n\n    },\n\n    closeModal() {\n      this.showModal = false;\n    },\n\n    isPC() {\n      const userAgentInfo = navigator.userAgent;\n      console.log(\"current device ua is ===>\", userAgentInfo);\n\n      const Agents = [\n        \"Android\",\n        \"iPhone\",\n        \"SymbianOS\",\n        \"Windows Phone\",\n        \"iPad\",\n        \"iPod\",\n      ];\n      let flag = true;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = false;\n          break;\n        }\n      }\n      return flag;\n    },\n    isSafariOrChrome() {\n      const userAgentInfo = navigator.userAgent;\n      const Agents = [\"Safari\", \"Chrome\"];\n      let flag = false;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = true;\n          break;\n        }\n      }\n      return flag;\n    },\n\n    /// solana\n    async sol_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      let data = {\n        method: \"solana_signMessage\",\n        params: {\n          message: \"Hello Solana\",\n          pubkey: \"\",\n        },\n      };\n      this.testTransaction = JSON.stringify(data);\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let message = await provider.signMessage(\n          \"Hello Solana\",\n          this.selectedChain\n      );\n      console.log(\"solana_signMessage Result:\",JSON.stringify(message))\n      const result1 = nacl.sign.detached.verify(\n          new TextEncoder().encode(\"Hello Solana\"),\n          message.signature,\n          new PublicKey(message.publicKey).toBytes()\n      );\n      console.log(result1)\n\n      if (typeof message == \"string\") {\n        this.testboc = result1;\n      } else {\n        this.testboc = result1;\n      }\n    },\n\n    async aptos_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      let data = {\n        address: true,\n        application: true,\n        chainId: true,\n        message: \"Hello Aptos\",\n        nonce: \"1234\"\n      }\n\n      let provider = new OKXAptosProvider(window.provider)\n      let message = await provider.signMessage(data, this.selectedChain)\n      this.testTransaction = JSON.stringify(data)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n          functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n          functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        },\n      });\n\n      // let data = {\n      //   \"arguments\": [\"100000\",[\"0\",\"0\",\"10533\"],[\"10\",\"5\",\"5\"],[\"false\",\"false\",\"true\"]],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x3\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\",\"0x73eb84966be67e4697fc5ae75173ca6c35089e802650f75422ab49a8729704ec::coin::DooDoo\",\"0x53a30a6e5936c0a4c5140daed34de39d17ca7fcae08f947c02e979cef98a3719::coin::LSD\",\"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::CurveV1\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x54cb0bb2c18564b86e34539b9f89cfe1186e39d89fce54e1cd007b8e61673a85::bin_steps::X80\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async sol_signVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(\n        provider.getAccount(\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\").address\n      );\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n         recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signTransaction(\n        transaction,\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAndSendVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n        transaction,\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllVersionedTransactions() {\n      let provider = new OKXSolanaProvider(window.provider);\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n        [transaction],\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signTransaction() {\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n         recentBlockhash: blockhash,\n      }).add(\n        SystemProgram.transfer({\n          fromPubkey: new PublicKey(provider.getAccount().address),\n          toPubkey: new PublicKey(provider.getAccount().address),\n          lamports: 1000,\n        })\n      );\n\n      this.testTransaction = safeJsonStringify(transaction)\n      let result = await provider.signTransaction(\n        transaction,\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllTransactions() {\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n        SystemProgram.transfer({\n          fromPubkey: new PublicKey(provider.getAccount().address),\n          toPubkey: new PublicKey(provider.getAccount().address),\n          lamports: \"100\",\n        })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n        [transaction],\n        this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    getSolConnect() {\n      let rpc = \"https://www.okx.com/fullnode/sol/discover/rpc\"\n      if (this.selectedChain === \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\") {\n        rpc = \"https://www.okx.com//fullnode/sol/discover/rpc\"\n      } else if (this.selectedChain === \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\"){\n        rpc = \"https://www.okx.com/fullnode/soltestnet/discover/rpc\"\n      } else if (this.selectedChain === \"svm:70000062\") {\n        rpc = \"https://www.okx.com/fullnode/sonic/testnet/discover/rpc\"\n      }\n      return rpc\n    },\n\n    async sol_signAndSendTransaction() {\n\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n        SystemProgram.transfer({\n          fromPubkey: new PublicKey(provider.getAccount().address),\n          toPubkey: new PublicKey(provider.getAccount().address),\n          lamports: \"100\",\n        })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n        transaction,\n        this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async cosmos_signArbitrary() {\n      let provider = new OKXCosmosProvider(window.provider)\n      let message = await provider.signArbitrary(this.selectedChain, provider.getAccount(this.selectedChain).address, \"test cosmos\")\n      if (typeof message == \"string\") {\n        this.testboc = message;\n      } else {\n        let isValid =  await this.cosmos_verifySignArbitrary(provider.getAccount(this.selectedChain).address,\"test cosmos\",message.signature, message.pub_key.value)\n        console.log(\"verify\",isValid)\n        this.testboc = \"verify:\" + isValid + JSON.stringify(message);\n      }\n    },\n\n    async cosmos_verifySignArbitrary(signer, data, signature, pubkey) {\n      try {\n        console.log(\"cosmos_verifySignArbitrary signer:\",signer)\n        console.log(\"cosmos_verifySignArbitrary data:\",JSON.stringify(data))\n        console.log(\"cosmos_verifySignArbitrary signature:\",signature)\n        console.log(\"cosmos_verifySignArbitrary pubkey:\",pubkey)\n\n        // 将bech32地址转换为公钥\n        const {prefix: prefixStr} = fromBech32(signer)\n\n        const signatureBuffer = Buffer.from(signature, 'base64');\n\n        const uint8Signature = new Uint8Array(signatureBuffer); // Convert the buffer to an Uint8Array\n\n        const pubKeyValueBuffer = Buffer.from(pubkey, 'base64'); // Decode the base64 encoded value\n\n        const pubKeyUint8Array = new Uint8Array(pubKeyValueBuffer); // Convert the buffer to an Uint8Array\n\n        // 验证签名\n        return await verifyADR36Amino(\n            prefixStr,\n            signer,\n            data,\n            pubKeyUint8Array,\n            uint8Signature\n        )\n      } catch (err) {\n        console.error('Verification failed:', err)\n        return false\n      }\n    },\n\n    async cosmos_signAmino(){\n      let provider = new OKXCosmosProvider(window.provider)\n      // const rpcUrl = 'https://osmosis-rpc.publicnode.com:443';\n      // const client = await StargateClient.connect(rpcUrl);\n      // const height = await client.getHeight();\n      // let address = provider.getAccount(this.selectedChain).address\n      // const sequence = await client.getSequence(address)\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      // let signDoc = makeSignDoc(\n      //     transaction.msgs,\n      //     transaction.fee,\n      //     this.selectedChain.split(\":\")[1],\n      //     transaction.memo,\n      //     transaction.accountNumber,\n      //     transaction.sequence,\n      // )\n      let signDoc = {\n        \"chain_id\": \"osmosis-1\",\n        \"account_number\": \"630104\",\n        \"sequence\": \"480\",\n        \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]},\n        \"msgs\": [{\n          \"type\": \"osmosis/poolmanager/swap-exact-amount-in\",\n          \"value\": {\n            \"sender\": \"osmo1u6lts9ng4etxj0zdaxsada6zgl8dudpgelmuyu\",\n            \"routes\": [{\n              \"pool_id\": \"1096\",\n              \"token_out_denom\": \"ibc/987C17B11ABC2B20019178ACE62929FE9840202CE79498E29FE8E5CB02B7C0A4\"\n            }, {\n              \"pool_id\": \"611\",\n              \"token_out_denom\": \"ibc/27394FB092D2ECCD56123C74F36E4C1F926001CEADA9CA97EA622B25F41E5EB2\"\n            }],\n            \"token_in\": {\"denom\": \"uosmo\", \"amount\": \"100\"},\n            \"token_out_min_amount\": \"8\"\n          }\n        }],\n        \"memo\": \"FE\",\n        \"timeout_height\": \"23603788\",\n        \"signOptions\": {\n          \"useOneClickTrading\": false,\n          \"preferNoSetFee\": true,\n          \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]}\n        }\n      }\n\n\n\n\n\n\n\n      // let signOption = {\n      //   memo: true, // optional\n      //   fee: true, // optional\n      //   gasRate: {\n      //     // optional\n      //     average: \"0.2\",\n      //     low: \"0.02\",\n      //     tiny: \"0.002\",\n      //   },\n      // }\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signAmino(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, signDoc)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    messageToBuffer(message) {\n      var buffer = Buffer.from([]);\n      try {\n        if (typeof message === \"string\") {\n          buffer = Buffer.from(message.replace(\"0x\", \"\"), \"hex\");\n        } else {\n          buffer = Buffer.from(message);\n        }\n      } catch (err) {\n        console.log(`messageToBuffer error: ${err}`);\n      }\n      return buffer;\n    },\n\n\n\n    async cosmos_signDirect() {\n      let provider = new OKXCosmosProvider(window.provider)\n\n      let signDoc = {\n        \"bodyBytes\": this.messageToBuffer(\"0x0ac1010a292f6962632e6170706c69636174696f6e732e7472616e736665722e76312e4d73675472616e736665721293010a087472616e7366657212096368616e6e656c2d301a0d0a05756f736d6f120431303030222b6f736d6f3175366c7473396e67346574786a307a64617873616461367a676c386475647067656c6d7579752a2d636f736d6f733175366c7473396e67346574786a307a64617873616461367a676c386475647067337967766a773207080410ebe3f90a3880b0bcafd18cec8218\"),\n        \"authInfoBytes\": this.messageToBuffer(\"0x0a510a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a2102446e19e94ac0e83ea896d2712507577eb39fbdd2d6ae9f0fc0b9759f1fbaba9012040a02080118e00312140a0e0a05756f736d6f1205323530303010859a11\"),\n        \"chainId\": \"osmosis-1\",\n        \"accountNumber\": \"630104\",\n      }\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signDirect(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, transaction)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    sui_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentSuiTransaction = params\n      this.currentSuiMethod = flag\n    },\n\n    btc_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentBtcTransaction = params\n      this.currentBtcMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n\n    fractal_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentFractalTransaction = params\n      this.currentFractalMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n    tron_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n    tron_generateTransactionParams(params){\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n\n    starknet_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n\n    starknet_generateTransactionParams(params) {\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n\n    handleModalsSelect(modals) {\n      selectedModals = modals;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: modals.length === 3 ? \"all\" : modals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n\n    handleReturnStrategySelect(returnStrategy) {\n      selectedReturnStrategy = returnStrategy === \"deeplink\" ? this.deeplink : returnStrategy;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = selectedReturnStrategy;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: selectedReturnStrategy\n          };\n        }\n      }\n    },\n\n    handleReturnStrategyDeeplink(deeplink) {\n      console.log('handleReturnStrategyDeeplink', deeplink)\n      selectedReturnStrategy = deeplink;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: deeplink,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = deeplink;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: deeplink\n          };\n        }\n      }\n    },\n\n    handleLanguageSelect(language) {\n      selectedLanguage = language;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: language,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n    handleConnectMethodsSelect() {\n      console.log(\"当前的方法 this.selectedMethod>>>>\",this.selectedMethod);\n    },\n\n    eth_verifyMessage(message, signature,ethAddress) {\n      console.log(\"eth_verifyMessage   message>>>\",message)\n      console.log(\"eth_verifyMessage   signature>>>\",signature)\n      console.log(\"eth_verifyMessage   ethAddress>>>\",ethAddress)\n      if (!message || !signature){\n        return \"\"\n      }\n      let originalMessage = message\n      if (message.startsWith(\"0x\")){\n        originalMessage = originalMessage.replace(/^0x/, '');\n        let str = '';\n        for (let i = 0; i < originalMessage.length; i += 2) {\n          const byte = originalMessage.slice(i, i + 2);\n          str += String.fromCharCode(parseInt(byte, 16));\n        }\n        originalMessage = str\n      }\n      console.log(\"eth_verifyMessage   originalMessage>>>\",originalMessage)\n\n      // const messageHash = ethers.utils.hashMessage(originalMessage);\n      const recoveredAddress = ethers.utils.verifyMessage(originalMessage, signature);\n      console.log(\"eth_verifyMessage recoveredAddress:\", recoveredAddress);\n      return recoveredAddress.toLowerCase() === ethAddress.toLowerCase();\n    },\n\n    async verifyMessage(list){ //连接验签\n\n        if (window.provider && window.provider.session && list && list.length>0){\n          let verifyList = {}\n          for (let methodItem of list){\n            if (\"result\" in methodItem && \"method\" in methodItem){\n              let requestItme = this.selectedMethodData.filter(item => item.method === methodItem.method)[0];\n              console.log(\"验证签名 请求>>>:\", JSON.stringify(requestItme));\n              console.log(\"验证签名 结果>>>:\", JSON.stringify(methodItem));\n              if (methodItem.method === \"personal_sign\"){\n                let ethAddress = await window.provider.request({ method: \"eth_requestAccounts\" },methodItem.chainId)\n                ethAddress = ethAddress[0];\n                console.log(\"验证eth 钱包地址>>>:\", ethAddress);\n                let ethMessage = requestItme.params[0]\n                console.log(\"验证eth 签名消息体>>:\", JSON.stringify(ethMessage));\n                verifyList[methodItem.method] = this.eth_verifyMessage(ethMessage,methodItem.result,ethAddress)\n              }else if(methodItem.method === \"solana_signMessage\"){\n                let solanaMessage = methodItem.result\n                if (\"signature\" in solanaMessage && \"publicKey\" in solanaMessage){\n                  const verifySol = nacl.sign.detached.verify(\n                      new TextEncoder().encode(\"Hello Solana\"),\n                      solanaMessage.signature,\n                      new PublicKey(solanaMessage.publicKey).toBytes()\n                  );\n                  verifyList[methodItem.method] = verifySol\n                }else {\n                  verifyList[methodItem.method] = false\n                }\n              }else if(methodItem.method === \"sui_signPersonalMessage\" || methodItem.method === \"sui_signMessage\"){\n                let suiResult =  this.sui_verifySignature(methodItem.result);\n                  verifyList[methodItem.method] = (await suiResult).result\n              }else if(methodItem.method === \"btc_signMessage\"){\n\n                verifyList[methodItem.method] = \"Not verified yet\"\n\n              }else if(methodItem.method === \"aptos_signMessage\"){\n                let aptosMessage = methodItem.result\n                let aptosProvider = new OKXAptosProvider(window.provider)\n                let  aptosPublicKey  = aptosProvider.getAccount(methodItem.chainId)?.publicKey\n\n                let signStr = aptosMessage.signature\n                if (signStr.startsWith(\"0x\")) {\n                  signStr = signStr.slice(2, signStr.length)\n                }\n\n                console.log(\"aptos_signMessage aptosPublicKey And signStr\",aptosPublicKey,signStr)\n                verifyList[methodItem.method] = nacl.sign.detached.verify(\n                    Buffer.from(aptosMessage.fullMessage),\n                    Buffer.from(signStr, 'hex'),\n                    Buffer.from(aptosPublicKey, 'hex'),\n                );\n              }else if(methodItem.method === \"cosmos_signArbitrary\"){\n                let cosmosProvider = new OKXCosmosProvider(window.provider)\n                let cosmosAddress = cosmosProvider.getAccount(methodItem.chainId)?.address\n                let cosmosMessage = methodItem.result\n                let isValid =  await this.cosmos_verifySignArbitrary(cosmosAddress,\"test cosmos\",cosmosMessage.signature, cosmosMessage.pub_key.value)\n                verifyList[methodItem.method] = isValid\n\n              }else if (methodItem.method === \"tron_signMessage\") {\n                let tronMessage = methodItem.result\n                let tronWeb = new TronWeb({\n                  \"fullHost\": 'https://api.trongrid.io',\n                  \"headers\": {},\n                  \"privateKey\": ''\n                })\n                let provider = new OKXTronProvider(window.provider)\n                verifyList[methodItem.method] = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), tronMessage, provider.getAccount(\"tron:mainnet\").address)\n              } else if (methodItem.method === \"tron_signMessageV2\") {\n                let tronMessage = methodItem.result\n                let tronWeb = new TronWeb({\n                  \"fullHost\": 'https://api.trongrid.io',\n                  \"headers\": {},\n                  \"privateKey\": ''\n                })\n                const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", tronMessage);\n                let provider = new OKXTronProvider(window.provider)\n\n                verifyList[methodItem.method] = base58Address === provider.getAccount(\"tron:mainnet\").address\n              }else if (methodItem.method === \"starknet_signMessage\") {\n                let res = methodItem.result\n                let signData = this.starknetPanelTypedData\n\n                const rpcProvider = new StarknetRpcProvider({ nodeUrl: \"https://free-rpc.nethermind.io/mainnet-juno/v0_7\" });\n\n                let provider = new OKXStarknetProvider(window.provider)\n                let address = provider.getAccount(\"starknet:mainnet\").address\n                let pk = \"0x123\"; /// random pk\n                const account = new StarknetAccount(rpcProvider, address, pk)\n\n                let that = this\n                account.verifyMessage(signData, res).then(function (isValid) {\n                  that.testTransaction = `Verifyed result: \\n${isValid}`\n                }).catch(function (error) {\n                  that.testTransaction = `Verifyed failed: \\n${error}`\n                })\n                verifyList[methodItem.method] = \"starknet is verifying signature...\"\n              }\n              else {\n                verifyList[methodItem.method] = \"Not verified yet\"\n\n              }\n            }else if(\"method\" in methodItem && \"error\" in methodItem) {\n              verifyList[methodItem.method] = methodItem.error\n            }\n\n          }\n\n          console.log(\"验证签名 最后的结果>>>:\", JSON.stringify(verifyList));\n          this.testTransaction = \"签名验证结果如下: \\n\" + JSON.stringify(verifyList)\n        }else {\n          console.log(\"验证签名 window.provider.session.connectMethodsReply 为空:\");\n\n        }\n\n    },\n\n    handleThemeSelect(theme) {\n      selectedTheme = theme;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: theme,\n          },\n        };\n      }\n    },\n\n    async sui_verifySignature(signatureResult) {\n      let resultObj = signatureResult\n      let result = false\n      let msg = ''\n      try {\n        /// 获取当前account\n        const adapter = new SuiAdapter(window.provider);\n        let account = adapter.getAccount()\n        console.log(`Account中获取的address：${account.address}`)\n\n        /// 验证签名\n        let pubKey = await verifyPersonalMessageSignature(this.currentSuiTransaction.message, resultObj.signature)\n        let address = pubKey.toSuiAddress()\n        console.log(`验签结果计算得到address：${address}`)\n\n        /// 对比pubKey\n        console.log(`account pubkey: ${account.publicKey}`,)\n        console.log(`result pubkey: ${pubKey.toBase64()}`)\n        result = (account.address === address) && (account.publicKey === pubKey.toBase64())\n\n        msg = `address verify: ${account.address === address}\\npublicKey verify: ${account.publicKey === pubKey.toBase64()}`\n        console.log(\"signature verify success: \", pubKey)\n      } catch (e) {\n        console.log(\"signature verify failed: \", e)\n      }\n      return {\n        result,\n        msg\n      }\n    },\n\n\n    handleRedirectSelect(input) {\n      this.redirect = input;\n    },\n\n    handleRedirectDeeplink(input) {\n      this.redirectDeeplink = input;\n    },\n\n    addRedirectParam() {\n      if (this.testTransaction) {\n        const newTransaction = JSON.parse(this.testTransaction);\n        newTransaction.redirect = this.redirect === 'deeplink' ? this.redirectDeeplink : this.redirect;\n        this.testTransaction = JSON.stringify(newTransaction);\n      }\n    },\n\n    canChainAddRedirectParam() {\n      return chainsThatCanAddRedirectParam.some((c) => this.selectedChain.startsWith(c));\n    }\n  },\n  created() {\n    // for (const eventName of Object.values(OKX_TON_CONNECTION_AND_TRANSACTION_EVENT)) {\n    //   console.log(eventName);\n    //   window.addEventListener(eventName, (event) => {\n    //     console.log(eventName,event.detail)\n    //     this.currentStatus = eventName\n    //   });\n    // }\n  },\n\n  mounted() {\n\n    var scriptTag = document.createElement(\"script\");\n    scriptTag.src = \"https://telegram.org/js/telegram-web-app.js\";\n    scriptTag.id = \"tgsdk\";\n    document.getElementsByTagName('head')[0].appendChild(scriptTag);\n\n    this.connectReady = true;\n    document.title = \"OKX Connect\";\n    this.initBtnClicked()\n\n    console.log(\"挂载成功:\")\n    if (this.$refs.starknetPanelRef) {\n      this.starknetPanelTypedData = toRaw(this.$refs.starknetPanelRef.signData)\n      console.log(\"111: \", this.starknetPanelTypedData)\n    }else {\n      console.log(\"222\")\n    }\n  },\n};\n</script>\n","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signMessage()\">signMessage(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_send()\">send(BTC)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendBitcoin()\">sendBitcoin(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signPsbt_up()\">signPsbt(上架NFT)</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"btc_signAndPushPsbt_up()\">signAndPushPsbt(上架NFT)</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在OKX App选择要上架的Btc NFT，点击【上架】\n        </li>\n        <li>\n          2. 弹出签名面板，点开高级选项，查看\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出上架流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendInscription()\">sendInscription(BTC)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Btc NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount\n    }\n  },\n  methods: {\n    btc_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to BTC\"\n      };\n      this.$emit('generateTransactionParams', params, \"btc_signMessage\")\n    },\n\n    btc_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"btc_send\")\n    },\n\n    btc_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"btc_sendBitcoin\")\n    },\n\n    btc_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"btc_signPsbt\")\n    },\n\n    btc_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"btc_signAndPushPsbt\")\n    },\n\n    btc_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"btc_sendInscription\")\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./BtcTransactionPanel.vue?vue&type=template&id=b2c51436&scoped=true\"\nimport script from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./BtcTransactionPanel.vue?vue&type=style&index=0&id=b2c51436&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-b2c51436\"]])\n\nexport default __exports__","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signMessage()\">signMessage(Fractal)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_send()\">send(Fractal)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_sendBitcoin()\">sendBitcoin(Fractal)</el-button>\n\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signPsbt_up()\">signPsbt(上架NFT)</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_signAndPushPsbt_up()\">signAndPushPsbt(上架NFT)</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在OKX App选择要上架的Fractal NFT，点击【上架】\n        </li>\n        <li>\n          2. 弹出签名面板，点开高级选项，查看\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出上架流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_sendInscription()\">sendInscription(Fractal)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Fractal NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount\n    }\n  },\n  methods: {\n    fractal_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to UniSat!\\n\\nClick to sign in and accept the UniSat Terms of Service (https://unisat.io/terms-of-service.html) and Privacy Policy (https://unisat.io/privacy-policy.html).\\n    \\nThis request will not trigger a blockchain transaction.\\n    \\nYour authentication status will reset after 24 hours.\\n    \\nWallet address:\\nbc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\\n    \\nNonce:\\n162d70e3-8c21-4cfd-9a22-9bf0a4b7be51\\n\"\n      };\n      this.$emit('generateTransactionParams', params, \"fractal_signMessage\")\n    },\n\n    fractal_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_send\")\n    },\n\n    fractal_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_sendBitcoin\")\n    },\n\n    fractal_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"fractal_signPsbt\")\n    },\n\n    fractal_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"fractal_signAndPushPsbt\")\n    },\n\n    fractal_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"fractal_sendInscription\")\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./FractalTransactionPanel.vue?vue&type=template&id=02b5b8a5&scoped=true\"\nimport script from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./FractalTransactionPanel.vue?vue&type=style&index=0&id=02b5b8a5&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-02b5b8a5\"]])\n\nexport default __exports__","<script>\n\nimport {getFullnodeUrl, SuiClient} from \"@mysten/sui/client\";\nimport {Transaction as SuiTransaction} from '@mysten/sui/transactions';\n\nexport default {\n  name: \"SuiTransactionPanel\",\n  methods: {\n    sui_getAccount() {\n      this.$emit('generateTransactionParams', '', \"sui_getAccount\")\n    },\n\n    //对单个交易签名（不发送)\n    async sui_signMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signMessage\")\n    },\n\n    async sui_signPersonalMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signPersonalMessage\")\n    },\n\n    sui_signTransaction2() {\n      // 定义要转移的金额和目标地址\n      const amount = 109; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    async sui_requestRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n          `sui:mainnet`,\n          `https://fullnode.mainnet.sui.io:443`\n      );\n      var data = {\n        method: \"suix_getBalance\",\n        params: [\n          \"0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae\",\n          \"0x168da5bf1f48dafc111b0a488fa454aca95e0b5e::usdc::USDC\",\n        ],\n      };\n\n      this.$emit(\"generateTransactionParams\", data, \"sui_testRpc\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 102; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signAndExecuteTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n      this.$emit(\"generateTransactionParams\", input, \"sui_signAndExecuteTransaction\")\n    },\n\n    /// generate txBytes and txSerialize\n    async generateTsBytesAndSerizlize(input) {\n      /// txBytes and txSerialize may be constructed in advance by the dapp side\n      let resultTuple = [\"\", \"\"];\n      if (\n          \"txBytes\" in input &&\n          input.txBytes.length > 0 &&\n          \"txSerialize\" in input &&\n          input.txSerialize.length > 0\n      ) {\n        resultTuple = [input.txBytes, input.txSerialize];\n      }\n\n      /// Otherwise, a transactionBlock parameter is required.\n      if (!(\"transactionBlock\" in input)) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      // if (this.walletAddress != \"connected\") {\n      //   alert(\"请先连接钱包\");\n      //   return new Promise((resolve) => {\n      //     resolve(resultTuple);\n      //   });\n      // }\n\n      let senderAccounts = window.provider.requestAccountsWithNamespace(\"sui\");\n      if (senderAccounts.length == 0) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      try {\n        let rpcUrl = getFullnodeUrl(\"mainnet\");\n        rpcUrl = \"https://www.okx.com/fullnode/sui/discover/rpc\"\n        const suiClient = new SuiClient({ url: rpcUrl });\n\n        /// sender is required\n        input.transactionBlock.setSender(senderAccounts[0]);\n        const result = await input.transactionBlock.build({\n          client: suiClient,\n        });\n        const txBytes = Buffer(result).toString(\"base64\");\n        const txSerialize = await SuiTransaction.from(txBytes).toJSON();\n        resultTuple = [txBytes, txSerialize];\n      } catch (error) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      return new Promise((resolve) => {\n        resolve(resultTuple)\n      })\n    },\n\n    //签名并发送交易\n    sui_signAndExecuteTransaction() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n        \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.testTransaction = JSON.stringify(input);\n      this.currentSuiTransaction = input;\n      this.currentSuiMethod = \"sui_signAndExecuteTransaction\";\n    },\n  },\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_getAccount()\">getAccount(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signMessage()\">signMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signPersonalMessage()\">signPersonalMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signTransaction2()\">signTransaction(Sui)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signAndExecuteTransaction()\">sendTransaction(Sui)</el-button>\n      <div style=\"font-size: 12px; color: gray;\">(send to Rally Tiger account)</div>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_requestRpc()\">RPC_getBalance</el-button>\n      <div style=\"font-size: 12px; color: gray;\">get USDC balance of address:</div>\n      <div style=\"font-size: 12px; color: gray\">0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae</div>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signTransaction_pre_execution()\">signTransaction(prepared data)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signAndExecuteTransaction_pre_execution()\">sendTransaction(prepared data)</el-button>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./SuiTransactionPanel.vue?vue&type=template&id=56a8eddf&scoped=true\"\nimport script from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./SuiTransactionPanel.vue?vue&type=style&index=0&id=56a8eddf&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-56a8eddf\"]])\n\nexport default __exports__","<script>\nimport { OKXStarknetProvider } from \"@okxconnect/universal-provider\";\nimport { CallData, uint256, RpcProvider, Account } from \"starknet\";\n\nexport default {\n  name: \"StarknetTransactionPanel\",\n  methods: {\n    async starknet_signMessage() {\n      this.address = this.getCurrentAddress()\n      if (this.address === \"\") {\n        alert(\"address can't be ''\");\n        return\n      }\n\n      let signData = this.signData\n      this.$emit(\"generateTransactionParams\", JSON.stringify(signData))\n      let provider = new OKXStarknetProvider(window.provider)\n      let res = await provider.signMessage(this.address, signData, \"starknet:mainnet\")\n      if (res.code) {\n        if (res.code == 301) {\n          let msg = \"Wallet address is registering, please try again later!\"\n          alert(msg)\n          this.$emit(\"generateTransactionResult\", msg, \"starknet_signMessage\")\n        }\n        this.$emit(\"generateTransactionResult\", res, \"starknet_signMessage\")\n        return\n      }\n      console.log(res)\n\n      const rpcProvider = new RpcProvider({ nodeUrl: \"https://free-rpc.nethermind.io/mainnet-juno/v0_7\" });\n      let pk = \"0x123\"; /// random pk\n      const account = new Account(rpcProvider, this.address, pk)\n      let that = this\n      account.verifyMessage(signData, res).then(function (isValid) {\n        that.$emit(\"generateTransactionResult\", \"verify:\" + isValid + \"\\n\" + res, \"starknet_signMessage\")\n      }).catch(function (error) {\n        that.$emit(\"generateTransactionResult\", \"failed:\" + error + \"\\n\" + res, \"starknet_signMessage\")\n      })\n    },\n\n    async starknet_sendTransaction() {\n      this.address = this.getCurrentAddress()\n      if (this.address === \"\") {\n        alert(\"address can't be ''\");\n        return\n      }\n\n      let val = uint256.bnToUint256(120000000000000000)\n      const transferCalldata = CallData.compile({\n        to: \"0x00b909cefa36ab6bc26f5887a867e46ef162238f0a171b1c2974b665afd4237f\",\n        value: val\n      })\n\n      // const ETHTokenAddress = \"0x049d36570d4e46f48e99674bd3fcc84644ddd6b96f7c741b1562b82f9e004dc7\"\n      // const STARKTokenAddress = \"0x04718f5a0fc34cc1af16a1cdee98ffb20c31f5cd61d6ab07201858f4287c938d\"\n      const DAITokenAddress = \"0x00da114221cb83fa859dbdb4c44beeaa0bb37c7537ad5ae66fe5e0efd20e6eb3\"\n\n      const invokeParams = {\n        calls: [\n          {\n            contract_address: DAITokenAddress,\n            entry_point: \"transfer\",\n            calldata: transferCalldata\n          }\n        ],\n      }\n\n      this.$emit(\"generateTransactionParams\", JSON.stringify(invokeParams))\n      let provider = new OKXStarknetProvider(window.provider)\n\n      let that = this\n      provider.sendTransaction(this.address, invokeParams, \"starknet:mainnet\").then(function(res){\n        console.log(\"starknet_sendTransaction result \", res)\n        that.$emit(\"generateTransactionResult\", res, \"starknet_sendTransaction\")\n      }).catch(function(error) {\n        if (error.code == 301) {\n          let msg = \"Wallet address is registering, please try again later!\"\n          alert(msg)\n          that.$emit(\"generateTransactionResult\", msg, \"starknet_sendTransaction\")\n        }else {\n          that.$emit(\"generateTransactionResult\", error, \"starknet_sendTransaction\")\n        }\n      });\n    },\n\n    getCurrentAddress() {\n      let provider = new OKXStarknetProvider(window.provider)\n      const address = provider.getAccount(\"starknet:mainnet\")?.address\n      return address\n    },\n\n    getPublicKey() {\n      let provider = new OKXStarknetProvider(window.provider)\n      const account = provider.getAccount(\"starknet:mainnet\")\n      console.log(\"获取到的account是：\")\n      console.log(account)\n      return \"05d8e5e9c1dd686246716c888159271d2f13986cb4acee46164e2c4e034629c0\"\n    }\n  },\n\n  data() {\n    const signData = {\n        \"domain\": {\n          \"chainId\": \"0x534e5f4d41494e\",\n          \"name\": \"STRKFarm\",\n          \"version\": \"1\"\n        },\n        \"message\": {\n          \"document\": \"app.strkfarm.xyz/tnc/v1\",\n          \"message\": \"Read and Agree T&C\"\n        },\n        \"primaryType\": \"Tnc\",\n        \"types\": {\n          \"StarkNetDomain\": [\n            {\n              \"name\": \"name\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"version\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"chainId\",\n              \"type\": \"felt\"\n            }\n          ],\n          \"Tnc\": [\n            {\n              \"name\": \"message\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"document\",\n              \"type\": \"felt\"\n            }\n          ]\n        }\n    }\n\n    return {\n      signData\n    }\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"starknet_signMessage()\">signMessage</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 验签不成功的话，请尝试连接VPN\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"starknet_sendTransaction(true)\">\n        sendTransaction\n      </el-button>\n\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 发送0.12个DAI到0x00b9...4237f的地址\n        </li>\n        <li>\n          2. 请保证你的钱包有足够的DAI\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./StarknetTransactionPanel.vue?vue&type=template&id=082fda2b&scoped=true\"\nimport script from \"./StarknetTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./StarknetTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./StarknetTransactionPanel.vue?vue&type=style&index=0&id=082fda2b&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-082fda2b\"]])\n\nexport default __exports__","<script>\n\n\nimport {OKXTronProvider} from \"@okxconnect/universal-provider\";\nimport {TronWeb} from \"tronweb\";\n\nexport default {\n  name: \"TronTransactionPanel\",\n  methods: {\n\n    async tron_signMessage() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessage(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n\n      const verify = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), res, provider.getAccount(\"tron:mainnet\").address)\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" + res, \"tron_signMessage\")\n    },\n\n    async tron_signMessageV2() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessageV2(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", res);\n      console.log(\"tron_signMessageV2_base58Address\", base58Address)\n      console.log(\"tron_signMessageV2_address\", provider.getAccount(\"tron:mainnet\").address)\n      const verify = base58Address === provider.getAccount(\"tron:mainnet\").address\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" +  res, \"tron_signMessage\")\n    },\n\n    async tron_signTransaction(isOnlySign) {\n      let provider = new OKXTronProvider(window.provider)\n        let tronWeb = new TronWeb({\n          \"fullHost\": 'https://api.trongrid.io',\n          \"headers\": {},\n          \"privateKey\": ''\n        })\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const transaction = await tronWeb.transactionBuilder.sendTrx(\"TGBcVLMnVtvJzjPWZpPiYBgwwb7th1w3BF\", 1000, address);\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let res = await provider.signTransaction( transaction, \"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", res, \"tron_signTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async getContract() {\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n      \n      try {\n        const contract = await tronWeb.trx.getContract(contractAddress)\n        const abi = contract.abi.entrys;\n        console.log(\"获取到的合约：\")\n        console.log(abi)\n      } catch (error) {\n        console.log(\"Error getting contract ABI:\", error);\n      }\n    },\n    \n    async tron_signAndSendTransactionContract(isOnlySign) {\n      // this.getContract()\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n      ]\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"quote(uint256,uint256,uint256)\", {}, parameter, address);\n      console.log(\"=====>transaction: \")\n      console.log(ret);\n      this.$emit(\"generateTransactionParams\", ret.transaction)\n      if (isOnlySign) {\n        let tx = await provider.signTransaction( ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async tron_signAndSendTransactionApprove(isOnlySign) {\n      let contractAddress = \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'address', value: contractAddress},\n        {type: 'uint256', value: 1000},\n      ]\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"approve(address,uint256)\", {}, parameter, address);\n\n      let transaction = ret.transaction\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let tx = await provider.signTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n\n    }\n\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessage()\">tron_signMessage</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessageV2()\">tron_signMessageV2</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(true)\">\n        tron_signTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(true)\">\n        tron_signTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(true)\">\n        tron_signTransaction(Approve)\n      </el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(false)\">\n        tron_signAndSendTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(false)\">\n        tron_signAndSendTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(false)\">\n        tron_signAndSendTransaction(approve)\n      </el-button>\n    </el-col>\n\n\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./TronTransactionPanel.vue?vue&type=template&id=55a13ab0&scoped=true\"\nimport script from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./TronTransactionPanel.vue?vue&type=style&index=0&id=55a13ab0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-55a13ab0\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=343dd652&scoped=true\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=343dd652&scoped=true&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-343dd652\"]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\nimport App from './App.vue'\n\nconst app = createApp(App)\n\napp.use(ElementPlus)\napp.mount('#app')","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkokxconnectdemo\"] = self[\"webpackChunkokxconnectdemo\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(91700); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["Object","defineProperty","exports","value","CONNECT_METHOD_BATCH_FETCHMSG","CONNECT_METHOD_FETCHMSG","CONNECT_METHOD_RECEIVE","CONNECT_METHOD_UNSUB","CONNECT_METHOD_SUB","CONNECT_METHOD_PUBLISH","CONNECT_METHOD_LOGIN","CONNECT_METHOD_PUSH","require","__createBinding","this","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","__setModuleDefault","v","__importStar","ownKeys","getOwnPropertyNames","ar","prototype","hasOwnProperty","call","length","mod","result","i","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","e","rejected","done","then","apply","OKXWalletConnector","constants_1","storageconstants_1","storage_1","utils_1","utils_2","eventemitter3_1","log","protocol_1","WS","resolveWebSocketImplementation","constructor","url","events","EventEmitter","state","ConnectorState","InitState","selectedUrlIndex","retryCount","timeOutLimit","checkWSUrl","Error","heartbeatTimer","connectionTimeoutTimer","connectURLStorage","Storage","OKXCONNECTOR_CACHE_KEY","connecting","Connecting","onPayload","data","logDebug","rsp","Date","now","toString","emit","onClose","event","_a","socket","code","onError","id","payload","msg","onopen","onmessage","onclose","Connected","emitError","errorEvent","heartbeat","clearTimeout","OnError","readyState","WebSocket","OPEN","send","setTimeout","bind","tryRegistOpen","logError","registOpen","inRetry","toUTCString","URLSearchParams","startTimeOutTimer","hasBuiltInWebSocket","onerror","close","on","resetTimeOutTimer","OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE","FINISHED","checkMaxRetry","OKXCONNECTOR_WS_URL_LIST","connectionTryNext","nextUrl","getNextSelectUrl","CANCELED","pendingSocket","TIME_OUT","cacheSuccessUrlSelect","saveContent","onVisibleChanged","document","visibilityState","arguments","once","err","OKXConnectError","OKX_CONNECT_ERROR_CODES","CONNECTION_ERROR","connect","removeEventListener","addEventListener","disconnect","Disconnected","currentStatus","addListener","decrypt","success","failed","listenPayloadHandler","removeListener","parsedEvent","safeJsonParse","params","rawMsg","message","failHandler","addPackageParse","callback","payloadHandler","param","listener","off","doLogin","safeJsonStringify","getMsgPayloadFromHistory","tmpMsg","jsonstr","onOpen","openHandler","ConnectionManager","connect_1","commands_1","jwtconstants_1","crypto_1","jwt_1","safejson_1","log_1","report_1","url_1","appname","connectStorage","OKXCONNECTOR_CACHE_KEY_DAPP","crypto","SessionCrypto","inTMA","isInTMA","reportLog","keyPairInfo","getCachedCryptoKeyPair","jwtKeyPair","getCachedJWTKeyPair","saveJWTKeyPair","connector","OKXCONNECTOR_WS_URL_1","packageId","connectedWalletPK","currentTopic","refreshPackageId","saveCryptoKeyPair","keyPair","cacheInfo","encryptStoreMsg","OKXCONNECTOR_CRYPTO_KEY","kp","getAndDecrypt","content","clearCache","strkeyPair","publicKey","toHexString","secretKey","OKXCONNECTOR_JWT_KEY","strKeyPairInfo","hexToByteArray","generateKeyPair","isWalletPKReady","makeJWT","topic","signJWT","OKXCONNECTOR_JWT_SIDE","OKXCONNECTOR_JWT_TTL","parsePackage","input_1","input","ignoreACK","_b","_c","_d","_e","sendACK","getItem","OKXCONNECTOR_TOKEN_CACHE","inputObj","messageId","sendReceive","restoreConnect","getConnectInfo","generateTopic","info","channelId","clientId","stringifyKeypair","fromRestore","timeLog","getTime","lastConnectId","cachedSenderPublicKey","OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE","jwtToken","timeOne","error","name","timeF","sendFetchAndConsumeMessages","timeTh","catch","jsonrpc","CONNECT_JSONRPC_VER","method","token","replace","parsedMessage","fail","msgObj","trimStart","startsWith","sendRaw","ttl","OKXCONNECTOR_MESSAGE_TTL","msg_1","encrypt","reportEvent","OKXReportType","LOG","msgId_1","success_1","msgId","reason","sendConnectSessionInfo","fetchedMessages","hasMore","receivedMsgs","timeFive","cleanCache","saveSessionContent","key","OKXCONNECTOR_SESSION_PREFIX_KEY","jsonData","getSessionContent","jsonStr","object","getCurrentConnectionReady","OKXCONNECTOR_WS_URL_IDX_KEY","OKXCONNECTOR_WS_URL_3","OKXCONNECTOR_WS_URL_2","EVENT_EMITTER_MAX_LISTENERS","Engine","sessionUtils_1","connectionManager","pendingRequests","Map","disconnectListener","getDefaultReporter","beginReport","jsonResponse","handleResponse","addDisconnectListener","disconnecter","push","setSessionConnectingListener","sessionConnectingListener","clear","getRequestId","requestId","bindRequestForPromise","set","request","requestAnswer","option","JSON","stringify","assign","onAck","sendSession","sessionInfo","response","delete","forEach","restoreconnect","onConnectResult","conect","sessionConfig","connectInfo","openUniversalLink","openUniversalUrl","connectRequest","protocolVer","Number","tonConnectSdkVersion","dAppInfo","dappInfo","requests","connectRequestStr","utf8Array","TextEncoder","encode","base64Encoded","btoa","String","fromCharCode","deeplinkUrl","standardDeeplink","isIOS","isIos","openOKXDeeplinkWithFallback","session","onConnect","getUniversalLink","connectResponse","namespaces","buildNameSpacesByConnectResponse","universalConnect","connectInfoAndUrl","tonRequest","universalRequest","item","universalConnectRequest","redirect","encodeConnectParams","tonConnectRequest","isFromTonSDK","defaultConnectRequest","openOKXLink","getOKXLink","useMini","tmaReturnUrl","openMethod","openOKXTMAWalletlinkWithFallback","useShortLink","openOKXUniversalLink","UNKNOWN_ERROR","walletName","responses","wallet","methodsResponse","find","connectRequestMethods","signResponse","WalletConnectionManager","connectionManager_1","walletConnectionManager_1","engine_1","__importDefault","MULTICODEC_ED25519_LENGTH","MULTICODEC_ED25519_HEADER","MULTICODEC_ED25519_BASE","MULTICODEC_ED25519_ENCODING","DID_METHOD","DID_PREFIX","DID_DELIMITER","KEY_PAIR_SEED_LENGTH","DATA_ENCODING","JSON_ENCODING","JWT_ENCODING","JWT_DELIMITER","JWT_IRIDIUM_TYP","JWT_IRIDIUM_ALG","JWTHeaderType","decodeJSON","encodeJSON","encodeIss","decodeIss","encodeSig","decodeSig","encodeData","decodeData","encodeJWT","decodeJWT","verifyJWT","ed25519","tweetnacl_1","stringUtils_1","default","sign","str","okxtoString","okxfromString","val","publicKeyStr","join","issuer","prefix","multicodec","split","bytes","encoded","header","signature","jwt","slice","sub_1","aud_1","ttl_1","keyPair_1","sub","aud","iat","Math","floor","alg","typ","iss","exp","act","detached","verify","OKXCONNECTOR_JWT_WALLET_SIDE","buildRequestAccountNameSpacesByConnectResponse","requestAccountNameSpaces","universalResponse","tonAddress","tonProof","address","network","ton_addr","ton_proof","accounts","namespace","addresses","methods","extra","chains","addressItem","addressArr","chain","utils_3","crypto_js_1","subKey","beforeKey","localStorage","resolveLocalStorage","checkAndUpgradeCache","storeKey","cipherIV","cacheStr","cacheKey","cache","cacheObj","fromCacheKey","toCacheKey","setItem","removeItem","timestamp","saveItem","localKey","totalCacheStr","getCachedPBKDF2InfoKey","pwLen","saltLen","pw","iv","salt","OKXCONNECTOR_STORAGER_CRYPTO_SALT","randomBytes","OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD","OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV","ivBuffer","PBKDF2","iterations","storeInfo","AES","enc","Utf8","OKXCONNECTOR_STORAGE_CIPHER_METHOD","OKXCONNECTOR_TON_KEY","WalletConnectionManagerEvent","WalletConnectionManagerTopicInfoCacheKey","RECEIVE_REQUEST","walletConnectionConstants_1","communicateEvents","sessionCryptoInfoMap","inLogin","isLogined","offset","topicId","isTopicPublicKeyExist","timestampStr","parseInternalMsg","internalMsg","internalObj","origin","originContent","base64decode","updateClientId","cid","lastCheck","getLastSixMd5Hash","dappPublicKey","syncCacheSessionInfo","topic_1","_f","_g","_h","_j","_k","_l","isInternalData","inner_message","inner_topic","messageObj","sessionInfoString","base64Content","inner_connection","toObject","decryptWallet","recovrySessionInfoFromCache","cacheMap","topicItem","cryptoItem","cryptoKeyPair","cacheSessionInfo","sync","duplicatedTopics","includes","appendTopic","sessionPublicKey","subscribeTopics","Array","from","confirmAppendingTopics","size","keys","getSessionPublicKey","getCurrentCachedTopicIdList","needPublicKey","useRaw","connectedDappPK","cryptoObject","encryptWallet","sendUnsubscribe","sendBatchFetchAndConsumeMessages","topicIdList","topics","withInternalData","finishCount","idx","nonceLength","sessionKeyPair","createKeypairFromString","createKeypair","box","createNonce","receiverPublicKey","encodedMessage","nonce","encrypted","concatInfo","concatUint8Arrays","hexResult","encodedResult","base64encode","senderPublicKey","messageByteArray","toUint8Array","internalMessage","splitToUint8Arrays","decrypted","open","TextDecoder","decode","__exportStar","p","IEngine","ISignClient","ISignClientEvents","IEngineEvents","super","client","creatOKXMiniAppWalletInfo","creatOKXWalletInfo","getBigIntRpcId","formatJsonRpcRequest","isJsonRpcError","isJsonRpcResponse","parseConnectionError","isHttpUrl","formatJsonRpcError","json_rpc_1","wallet_info_1","isJsonRpcPayload","isJsonRpcRequest","isJsonRpcResult","payloadId","formatJsonRpcResult","isReservedErrorCode","getError","getErrorByCode","formatErrorMessage","isWsUrl","okx_connect_error_1","IncrementalRandomGenerator","bits","Uint8Array","Uint16Array","Uint32Array","initialValue","getNextValue","uint8Generator","uint16Generator","date","BigInt","RESERVED_ERROR_CODES","type","STANDARD_ERROR_MAP","DEFAULT_ERROR","match","values","INTERNAL_ERROR","SERVER_ERROR","getUrlProtocol","matches","RegExp","matchRegexProtocol","regex","protocol","test","CONNECT_ITEM_ERROR_CODES","TONCHAIN","connect_wallet_1","connect_event_1","downloadUrl","standardUniversalLink","tgwalletName","getTestTwaUrl","window","okxTesttwaUrl","getTestTgTwaUrl","okxTestTgtwaUrl","tgwalletAppName","shortUniversalLink","okxDeeplink","location","hostname","SERVER_ERROR_CODE_RANGE","INVALID_PARAMS","METHOD_NOT_FOUND","INVALID_REQUEST","PARSE_ERROR","getDefaultMessageByCode","setPrototypeOf","toJSON","BAD_REQUEST_ERROR","ALREADY_CONNECTED_ERROR","NOT_CONNECTED_ERROR","UNKNOWN_APP_ERROR","USER_REJECTS_ERROR","USER_REJECTS_ERROR_CAUSE_REGISTER","METHOD_NOT_SUPPORTED","CHAIN_NOT_SUPPORTED","NameSpaceKeyStarknet","NameSpaceKeyTron","NameSpaceKeyCosmos","NameSpaceKeyAptos","NameSpaceKeyBtc","NameSpaceKeySui","NameSpaceKeyTON","NameSpaceKeySOL","NameSpaceKeyEip155","misc_1","callForSuccess","fn","options","attempts","delayMs","lastError","delay","timeout","signal","aborted","timeoutId","checkMetaData","versionCompare","isBrowser","isOS","isMobileUserAgent","openDeeplinkWithFallback","openLinkBlank","openLink","toSafeBase64FromBase64","isValidObject","getAppWalletShortDeepLink","encodeTWAConnectURLParams","getTelegramWalletTWAUrl","getAppWalletDeepLink","encodeTelegramUrlParameters","isTelegramUrl","openOKXDeeplink","logWarning","call_for_success_1","web_api_1","tma_api_1","request_1","debug","forceReport","defaultReporter","OKXReporter","packageJson","version","args","console","okxLogDebug","reduce","sendRecordContent","warn","action","content_1","OKXReportSide","versionStr","cross_fetch_1","localforage_1","reportApiList","reportCacheKey","reportUUIDKey","MAX_LIMIT_REPORTCOUNT","DEFAULT_HTTP_HEADERS","Accept","DEFAULT_HTTP_METHOD","DEFAULT_FETCH_OPTS","headers","PAGE_IN","PAGE_OUT","CLICK","DAPP","WALLET","fetchListWithTimeout","urls_1","args_1","urls","controller","AbortController","fetchPromise","timeoutPromise","_","abort","race","ok","status","currentSide","currentVersion","storage","createInstance","recordList","currentUUID","configVersionAndSide","side","appName","recordCacheKey","reportPlatform","startErrorCatching","records","uuid","sendCachedRecords","getWindow","cachedErrors","sendRecord","record","body","res","filter","path","pathname","language","navigator","ua","userAgent","platform","reportItem","lang","markRecordItem","sendList","map","allSettled","results","keepIndex","index","splice","markRecord","Report_WalletType_Key","Report_Proceed_QRCode_Click","Report_ChooseType_Download_Click","Report_ChooseType_ConnectWallet_Click","Report_Proceed_Retry_Click","Report_ChooseType_ConnectWallet_View","Report_Loading_ConnectWallet_View","Report_Proceed_QRCode_View","Report_Proceed_Proceed_View","dappMetaData","icon","JSONStringify","JSONParse","json","numbersBiggerThanMaxInt","serializedData","group","parse","isCustomFormatBigInt","substring","alloc","allocUnsafe","basics_1","string","encoding","base","BASES","decoder","array","encoder","createCodec","buf","ascii","bufNum","charCodeAt","utf8","hex","bases","base16","latin1","binary","isTmaPlatform","isInTelegramBrowser","sendExpand","sendOpenTelegramLink","initParams","locationHash","hash","urlParseHashParams","tmaPlatform","tgWebAppPlatform","Telegram","WebApp","webAppVersion","tgWebAppVersion","platforms","TelegramWebviewProxy","isTelegramWebview","TelegramWebview","postEvent","link","fallback","URL","pathFull","search","isIframe","versionAtLeast","path_full","parent","eventType","eventData","external","notify","trustedTarget","postMessage","indexOf","_path","urlSafeDecode","qIndex","pathParam","substr","query_params","urlParseQueryString","urlencoded","decodeURIComponent","queryString","paramName","paramValue","queryStringParams","v1","v2","a","p1","p2","v1List","v2List","max","parseInt","ver","removeUrlLastSlash","addPathToUrl","useStandardUniversalLink","replaceStrWithParam","cleanUrl","deeplinkEncodeUrl","encodeURIComponent","fullUrl","isTelegram","newWindow","href","deepLinkOpened","timeoutDuration","fallbackToDownloadPage","parameters","encodedParameters","connectParam","redirectStr","okxconnect","extraparams","base64ContentStr","urlSafeBase64","twaDeepLink","openTelegramLink","encodeTGParams","RANDOM_LENGTH","hasLocalStorage","hashKey","generateRandomBytes32","tweetnacl_util_1","to_string_1","sha256_1","BASE16","hexString","byteArray","byte","buffer1","buffer2","mergedArray","subArray1","subArray2","encodeUint8Array","urlSafe","encodeBase64","decodeToUint8Array","decodeBase64","uint8Array","decodeUTF8","decodedUint8Array","encodeUTF8","scheme","global","self","randomBytes32","obj","getPrototypeOf","maxTouchPoints","isIOSDevice","MSStream","isIPadOS","MD5","base64","getUserAgent","ua_parser_js_1","target","doFallback","fallbackTimeout","check","vendor","opera","getResult","osName","os","toLowerCase","deviceModel","device","model","browserName","browser","OKXBtcProvider","_1","provider","caip","getAddressForChainId","chainId","ns","checkChainId","account","getAccount","signMessage","signStr","ret","errorData","sendBitcoin","toAddress","satoshis","to","feeRate","txhash","checkParameters","signPsbt","psbtHex","signPsbts","psbtResults","psbtHexs","signAndPushPsbt","sendInscription","inscriptionId","extension","coinId","protocolId","atomicSuffix","ordinalsSuffix","endsWith","removeSuffix","scenario","txType","batchBean","coinAmount","nftId","suffix","unexistKeys","namespaceKey","OKXCosmosProvider","core_1","accountArray","algo","bech32Address","pubKey","hexToUint8Array","signArbitrary","signerAddress","signDoc","chain_id","account_number","sequence","fee","gas","amount","msgs","memo","signData","signAmino","signOptions","resData","signed","signDirect","bodyBytes","bufferToHex","authInfoBytes","accountNumber","messageToBuffer","buffer","arr","output","x","padStart","arrayBuffer","byteValue","isNaN","OKXStarknetProvider","STARKNET_CHAIN_ID","getChain","typedData","sendTransaction","transaction","transactionData","transaction_hash","signMessageDeclareContractPayload","sendMessageExecuteTransactionDetail","calls","abis","transactionsDetail","transactions","isArray","executionRequest","OKXTonProvider","statusChangeSubscriptions","statusChangeErrorSubscriptions","tonWallet","errorsHandler","connected","tonNameSpace","walletStateInit","sessionWallet","tonDeviceInfo","appVersion","maxProtocolVersion","features","connectItems","onStatusChange","MAINNET","requestAccountsWithNamespace","requestParams","OKXTronProvider","TRON_CHAIN_ID","stringToHex","signMessageV2","signTransaction","signedTx","realSignTx","visible","txID","rawData","contract","raw_data","expiration","ref_block_bytes","fee_limit","ref_block_hash","raw_data_hex","signAndSendTransaction","OKXUniversalProvider","eip155_1","sui_1","client_1","namespaces_1","solana_1","btc_1","aptos_1","ton_1","cosmos_1","tron_1","packages_1","provider_1","starknet_1","init","opts","setGlobal","okxConnectUniversalinwindow","initialize","providerOpts","rpcProviders","requestParam","buildRequestParamFromRequest","getProvider","validateChain","keyArr","enable","connectOpts","requestAccounts","called","onRequestSent","disconnectAndEmit","cleanup","engine","aptosChainNameToGeneralId","replaceAptos","aptosNameSpace","realNS","replaceAptosInner","aptos","optionAptosNameSpace","optionalNamespaces","realOptionNS","defaultChain","replaceAptosGeneralIdWithNetName","replaceSessionAptos","disconnectInner","connectAndSign","signRequest","updatedOpts","setNamespaces","requestItem","signResponseList","okxConnectUniversalUIinwindow","creatNotSupportMethodItemReplay","syncAllAddresses","syncAddressAvailable","syncAllAddress","setDefaultChain","rpcUrl","checkStorage","sessionInfoStr","getFromStore","createProviders","registerEventListeners","SignClient","providersToCreate","Set","parseNamespaceKey","namespacesValue","currentNameSpace","Eip155Provider","opts1","solanaProvider","sonicProvider","svmProvider","optsTon","tonProvider","optsSui","suiProvider","SuiProvider","optsBtc","btcProvider","fbProvider","aptosProvider","moveProvider","cosmosProvider","tronProvider","starknetProvider","PROVIDER_EVENTS","DEFAULT_CHAIN_CHANGED","caip2ChainId","onChainChanged","UPDATE_NAMESPACES","nameSpaces","nameSpacekey","persist","isChainNamespaceInSession","chainsArr","defaultNamespace","getDefaultChain","namespaceStr","requestDefaultChainWithNamespace","caip2Chain","sessionProperties","showRequestModal","OKXUniversalProvider_1","OKXBtcProvider_1","OKXCosmosProvider_1","OKXTonProvider_1","OKXTronProvider_1","OKXStarknetProvider_1","ConnectMethodUtils_1","metaData","requestAccountItem","requiredNamespaces","nameSpaceToConnectWalletNameSpace","SESSION_CONNECTING","connectMethodsToConnectWalletMethods","metadata","fillParamsToSession","connectMethodsResponseUpdate","openOKXWallet","allAddressStr","syncResoonseToRequire","connectSupportMethods","connectMethodsAdaptOldVersion","bs58_1","uint8array_extras_1","isRecord","notSupportError","errorItem","callBackParams","solAccount","account1","solAddress","fromAccountToAddress","realMessage","stringToUint8Array","suiMessage","convertedArray","b64encoded","atob","btcAccounts","account2","btcAccount","btcAddress","paramData","aptosAccount","account3","aptosAddress","fullMessage","application","aptosChainId","cosmosAccount","account_cosmos","cosmosAddress","cosmosData","cosmosBase64Encoded","stringToBase64","methodItem","solanaSuccessData","suiMethod","requestMethod","suiMessageb64","aptosSignature","requireNameSpace","includeEip155","some","space","syncAddressHostAvailable","includeChain","paramsArr","firstParam","firstObj","aptosParams","currentURL","signChainId","applicationUrl","cosmosChain","responseAddressStr","allAddress","isEvm","deriveName","addr","ci","evmAddress","freeze","getAccountsChains","isCaipNamespace","mergeRpcMap","targetRpcMap","sourceRpcMap","mergeNamespaces","source","rpcMap","GENERIC_SUBPROVIDER_NAME","RPC_URL","STORAGE","CONTEXT","WC_VERSION","PROTOCOL","RELAY_URL","LOGGER","JsonRpcConnection_1","JsonRpcProvider_1","AptosProvider","httpProviders","createHttpProviders","updateNamespace","getAccounts","setHttpProvider","http","parsedChainId","getChainId","parsedRpc","getRpcUrl","httpProvider","createHttpProvider","getHttpProvider","rpc","JsonRpcProvider","JsonRpcConnection","getGlobal","BtcProvider","CosmosProvider","updateRequestParams","isDic","switchChainId","decimalNumber","selectedChainId","chainNum","paramsChainId","paramsChainString","adaptArray","addressObj","isEqual","chainAddress","messages","typedDataJson","secondObj","hexChainId","getHexChainIdFromRequest","isChainApproved","handleSwitchChain","addEthereumChain","resultData","nameSpace","rpcUrls","eip155","core_2","disableProviderPing","isAvailable","registering","register","parseError","types_1","IJSONRpcProvider","connection","hasRegisteredEventListeners","setConnection","context","requestStrict","_error","SolanaProvider","getPubkey","getWalletAddress","components","StarknetProvider","__rest","s","t","getOwnPropertySymbols","propertyIsEnumerable","TONProvider","validUntil","newParams","fromAddress","boc","TronProvider","IJSONRpcConnection","opt","globals","convertChainIdToNumber","parseChainId","mergeArrays","projectId","reference","CAIP_DELIMITER","b","okxGlobal","_createElementBlock","_hoisted_1","_createVNode","_component_el_container","_withCtx","_component_el_header","_cache","_createTextVNode","_component_el_main","_component_el_card","class","_createElementVNode","style","_component_el_row","_component_el_col","span","_toDisplayString","$options","_ctx","_component_el_checkbox","modelValue","withUI","$event","onChange","handleWithUI","universalToTG","handleUniversalToTG","_component_el_select","modals","placeholder","handleModalsSelect","multiple","_component_el_option","label","returnStrategy","handleReturnStrategySelect","_Fragment","_renderList","returnStrategies","strategy","_createBlock","_component_el_input","deeplink","handleReturnStrategyDeeplink","disabled","_createCommentVNode","handleLanguageSelect","locales","locale","theme","handleThemeSelect","THEME","LIGHT","DARK","selectedMethod","handleConnectMethodsSelect","connectMethods","tonProofValue","gutter","align","availableChains","checked","areChainsInit","isOptionalChecked","handleOptionChange","_component_el_button","onClick","initBtnClicked","connectInitStr","connectBtnClicked","connectStatusStr","syncAllAddressClick","syncAllAddressStr","disconnectAction","walletAddress","disconnectStatusStr","_Teleport","showModal","closeModal","_withModifiers","_component_qrcode_vue","qrValue","level","_component_el_tabs","activeTab","onTabClick","clickActiveTab","_component_el_tab_pane","eth_requestAccounts","eth_chainId","wallet_switchEthereumChain","wallet_addEthereumChain","personal_sign","eth_signTypedData_v4","eth_sendTransaction_transfer","eth_sendTransaction_approve","eth_sendTransaction_mint","wallet_watchAsset","ton_getAccount","ton_sendTransaction","sol_signMessage","sol_signTransaction","sol_signVersionedTransaction","sol_signAllTransactions","sol_signAllVersionedTransactions","sol_signAndSendTransaction","sol_signAndSendVersionedTransaction","_component_SuiPanel","onGenerateTransactionParams","sui_generateTransactionParams","_component_BTCPanel","btc_generateTransactionParams","_component_FractalPanel","fractal_generateTransactionParams","_component_TronTransactionPanel","tron_generateTransactionParams","onGenerateTransactionResult","tron_getTransactionResult","aptos_signMessage","aptos_signTransaction","aptos_signAndSubmitTransaction","cosmos_signArbitrary","cosmos_signAmino","cosmos_signDirect","wallet_testRpc","eth_sendTransaction_swap","move_signTransaction","move_signAndSubmitTransaction","_component_StarknetPanel","ref","starknet_generateTransactionParams","starknet_getTransactionResult","testBase64UrlSafe","xs","sm","handleRedirectSelect","canChainAddRedirectParam","redirectDeeplink","handleRedirectDeeplink","addRedirectParam","testTransaction","rows","testboc","$setup","sendBtnDisabled","testTransactionStr","btc_signMessage","sendAmount","clearable","btc_send","sendSatoshisAmount","btc_sendBitcoin","btc_signPsbt_up","btc_signAndPushPsbt_up","receiver","btc_sendInscription","props","setup","$emit","alert","autoFinalized","__exports__","fractal_signMessage","fractal_send","fractal_sendBitcoin","fractal_signPsbt_up","fractal_signAndPushPsbt_up","fractal_sendInscription","sui_getAccount","sui_signMessage","sui_signPersonalMessage","sui_signTransaction2","sui_signAndExecuteTransaction","sui_requestRpc","sui_signTransaction_pre_execution","sui_signAndExecuteTransaction_pre_execution","recipientAddress","tx","SuiTransaction","coin","splitCoins","transferObjects","transactionBlock","showEffects","txBytes","txSerialize","generateTsBytesAndSerizlize","resultTuple","senderAccounts","getFullnodeUrl","suiClient","SuiClient","setSender","build","Buffer","currentSuiTransaction","currentSuiMethod","starknet_signMessage","starknet_sendTransaction","getCurrentAddress","rpcProvider","RpcProvider","nodeUrl","pk","Account","that","verifyMessage","isValid","uint256","bnToUint256","transferCalldata","CallData","compile","DAITokenAddress","invokeParams","contract_address","entry_point","calldata","getPublicKey","tron_signMessage","tron_signMessageV2","tron_signTransaction","tron_signAndSendTransactionContract","tron_signAndSendTransactionApprove","tronWeb","TronWeb","trx","base58Address","verifyMessageV2","isOnlySign","transactionBuilder","sendTrx","getContract","contractAddress","abi","entrys","parameter","triggerSmartContract","verifyADR36Amino","fromBech32","VConsole","allChains","chainsThatCanAddRedirectParam","optionChains","selectedModals","selectedReturnStrategy","selectedDeepLink","selectedLanguage","selectedTheme","TronTransactionPanel","QrcodeVue","BTCPanel","FractalPanel","SuiPanel","StarknetPanel","testTopic","testPublicKey","testProofPayload","pendingDeepLink","logList","connectReady","localPubKey","localSecKey","selectedChain","ProofPayloadVerify","showVerifyRow","has","selectedMethodData","isChecked","reload","add","starknetPanelTypedData","computed","selectedChains","initChains","newChains","updatedChains","tab","tabName","initCall","OKXUniversalConnectUI","actionsConfiguration","uiPreferences","walletInfo","onModalStateChange","entries","uri","isPC","items","testTonSdk","blockExplorerUrls","chainName","nativeCurrency","symbol","decimals","dataETH","dataPolygon","types","EIP712Domain","Person","Mail","primaryType","domain","verifyingContract","contents","maxPriorityFeePerGas","maxFeePerGas","gasPrice","gasLimit","image","tonUniversalLog","sendTransactionAlert","fetch","confirm","sendData","adapter","SuiAdapter","suiResult","signAndExecuteTransaction","sui_verifySignature","signPersonalMessage","btcAdapter","btcResult","currentBtcMethod","currentBtcTransaction","hexToBase64","bs64Str","fractalResult","currentFractalMethod","currentFractalTransaction","hexStr","blob","Blob","reader","FileReader","onload","base64Data","readAsDataURL","datatest","firstStr","showUrl","hasEip155","hasSolana","hasSui","hasBtc","hasAptos","hasTon","hasCosmos","hasTron","nameSpacesChains","optSpaceChains","solanaChains","hasStarknet","suiChains","btcChains","connectMethod","connectData","requireData","solana","cosmos","tron","starknet","tonParams","ton","sui","btc","optData","signMethods","getCurrentSelectedMethodData","openModalAndSign","openModal","methodList","suiData","currentMethod","accountAddress","userAgentInfo","Agents","flag","isSafariOrChrome","pubkey","OKXSolanaProvider","result1","nacl","PublicKey","toBytes","OKXAptosProvider","config","AptosConfig","Network","Aptos","simple","sender","function","typeArguments","functionArguments","signAndSubmitTransaction","Connection","getSolConnect","blockhash","getLatestBlockhash","versionedTransactionMessage","TransactionMessage","payerKey","recentBlockhash","instructions","SystemProgram","transfer","fromPubkey","toPubkey","lamports","compileToV0Message","VersionedTransaction","signAllTransactions","Transaction","feePayer","cosmos_verifySignArbitrary","pub_key","signer","prefixStr","signatureBuffer","uint8Signature","pubKeyValueBuffer","pubKeyUint8Array","uiOptions","eth_verifyMessage","ethAddress","originalMessage","recoveredAddress","ethers","list","verifyList","requestItme","ethMessage","solanaMessage","verifySol","aptosMessage","aptosPublicKey","cosmosMessage","tronMessage","StarknetRpcProvider","StarknetAccount","signatureResult","resultObj","verifyPersonalMessageSignature","toSuiAddress","toBase64","newTransaction","c","created","mounted","scriptTag","createElement","src","getElementsByTagName","appendChild","title","$refs","starknetPanelRef","toRaw","render","app","createApp","App","use","ElementPlus","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","loaded","__webpack_modules__","amdO","deferred","O","chunkIds","priority","notFulfilled","Infinity","j","every","r","n","getter","d","leafPrototypes","getProto","__proto__","mode","def","current","definition","g","globalThis","Function","prop","Symbol","toStringTag","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}