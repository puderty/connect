{"version":3,"file":"js/app.50b1b6df.js","mappings":"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","sources":["webpack://okxconnectdemo/../packages/universal-provider/src/OKXBtcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXCosmosProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXStarknetProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTonProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTronProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXUniversalProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/sign-client/client.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/ConnectMethodUtils.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/namespaces.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/events.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/values.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/aptos.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/btc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/cosmos.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/eip155.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcConnection.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/solana.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/starknet.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/sui.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/ton.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/tron.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/misc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/providers.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/globals.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/misc.js","webpack://okxconnectdemo/./src/App.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue?1b44","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue?e4fb","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue?aa83","webpack://okxconnectdemo/./src/components/StarknetTransactionPanel.vue","webpack://okxconnectdemo/./src/components/StarknetTransactionPanel.vue?1a06","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue?089a","webpack://okxconnectdemo/./src/App.vue?7ccd","webpack://okxconnectdemo/./src/main.js","webpack://okxconnectdemo/webpack/bootstrap","webpack://okxconnectdemo/webpack/runtime/amd options","webpack://okxconnectdemo/webpack/runtime/chunk loaded","webpack://okxconnectdemo/webpack/runtime/compat get default export","webpack://okxconnectdemo/webpack/runtime/create fake namespace object","webpack://okxconnectdemo/webpack/runtime/define property getters","webpack://okxconnectdemo/webpack/runtime/global","webpack://okxconnectdemo/webpack/runtime/hasOwnProperty shorthand","webpack://okxconnectdemo/webpack/runtime/make namespace object","webpack://okxconnectdemo/webpack/runtime/node module decorator","webpack://okxconnectdemo/webpack/runtime/jsonp chunk loading","webpack://okxconnectdemo/webpack/startup"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXBtcProvider = void 0;\nconst _1 = require(\"./\");\nclass OKXBtcProvider {\n    constructor(generator) {\n        this.caip = [\n            \"btc:mainnet\",\n            \"fractal:mainnet\"\n        ];\n        this.provider = generator.getUniversalProvider();\n    }\n    getAddressForChainId(chainId) {\n        var _a, _b;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let accounts = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        });\n        if (accounts == undefined || accounts.length < 0) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `no connected account`);\n        }\n        let account = accounts[0];\n        const address = account.split(':')[2];\n        return address;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let extra = (_c = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[ns]) === null || _b === void 0 ? void 0 : _b.extra) === null || _c === void 0 ? void 0 : _c[chainId];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        return {\n            address: this.getAddressForChainId(chainId),\n            publicKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param signStr\n     * @param chainId\n     * @param type\n     * @returns\n     */\n    signMessage(chainId, signStr, type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (signStr === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signMessage parmas error`);\n            }\n            let params = {\n                signStr: signStr,\n                from: this.getAddressForChainId(chainId)\n            };\n            if (type) {\n                params.type = type;\n            }\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signMessage\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param toAddress\n     * @param satoshis\n     * @param options { feeRate: 0 }\n     * @returns\n     */\n    sendBitcoin(chainId, toAddress, satoshis, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            let params = {\n                from: this.getAddressForChainId(chainId),\n                to: toAddress,\n                value: (satoshis / 100000000).toString(),\n            };\n            if (options === null || options === void 0 ? void 0 : options.feeRate) {\n                params[\"satBytes\"] = options.feeRate.toString();\n            }\n            let result = yield this.send(chainId, params);\n            if (result !== undefined && ('txhash' in result)) {\n                // return txhash directly\n                return result.txhash;\n            }\n            // or return unexpected result\n            return result;\n        });\n    }\n    //  from - string：当前连接的钱包的 BTC 地址\n    //  to - string：接受 BTC 的地址\n    //  value - string：发送 BTC 的数量\n    //  satBytes - string： (可选) 自定义费率\n    //  memo - string： (可选) 指定 outputs OP_RETURN 内容 示例\n    //  memoPos - number： (可选) 指定 outputs OP_RETURN 输出位置，如果传了 memo 则必须传入 memoPos 指定位置，否则 memo 不生效\n    send(chainId, input) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (!this.checkParameters(input, 'to', 'value')) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send parmas  error`);\n            }\n            input[\"from\"] = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: 'btc_send',\n                    params: input\n                }, chainId);\n                if ('result' in ret) {\n                    return {\n                        txhash: ret.result\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param psbtHex string 要签名的 psbt 的十六进制字符串\n     * @param options object { autoFinalized: 0 }\n     */\n    signPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.signPsbts(chainId, [psbtHex], [options]).then(psbtResults => {\n                    let results = JSON.parse(psbtResults);\n                    resolve(results[0]);\n                }).catch(error => {\n                    reject(error);\n                });\n            });\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHexs Array\n     * @param options Array [{ autoFinalized: 0 }]\n     * @returns\n     */\n    signPsbts(chainId, psbtHexs, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHexs === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHexs: psbtHexs,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signPsbts\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHex string\n     * @param options object\n     * @returns\n     */\n    signAndPushPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHex === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHex: psbtHex,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signAndPushPsbt\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return JSON.parse(ret.result);\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param address string, receiver address\n     * @param inscriptionId string, 铭文 ID + 协议，没有传协议则默认是 Ordinals NFT ，目前仅支持 Ordinals 及 Atomicals 协议\n     * @param options object, { feeRate: number } custom rates\n     */\n    sendInscription(chainId, address, inscriptionId, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let extension = {\n                address: address,\n                inscriptionId: inscriptionId,\n                options: options\n            };\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (address === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method sendInscription params error`);\n            }\n            var feeRate = 0;\n            if (options && ('feeRate' in options)) {\n                feeRate = options.feeRate;\n            }\n            let coinId = '';\n            let from = this.getAddressForChainId(chainId);\n            var protocolId = 7; //ProtocolIdBRCNFT\n            if (inscriptionId !== 'undefined') {\n                let atomicSuffix = \"-Atomicals\";\n                let ordinalsSuffix = \"-Ordinals\";\n                if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(atomicSuffix.toLowerCase())) {\n                    protocolId = 8; //WXRCProtocolIdARCNFT\n                    inscriptionId = this.removeSuffix(inscriptionId, atomicSuffix);\n                }\n                else if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(ordinalsSuffix.toLowerCase())) {\n                    inscriptionId = this.removeSuffix(inscriptionId, ordinalsSuffix);\n                }\n            }\n            let params = {\n                scenario: 5,\n                feeRate: feeRate,\n                txType: \"20\",\n                to: address,\n                batchBean: [\n                    {\n                        coinAmount: \"1\",\n                        nftId: inscriptionId,\n                        protocolId: protocolId,\n                        coinId: coinId,\n                        inscriptionId: \"\",\n                        from: from\n                    }\n                ],\n                extension: extension\n            };\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_sendInscription\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    removeSuffix(str, suffix) {\n        if (str.endsWith(suffix)) {\n            return str.slice(0, str.length - suffix.length);\n        }\n        return str;\n    }\n    checkParameters(params, ...keys) {\n        var unexistKeys = [];\n        keys.forEach(key => {\n            if (!(`${key}` in params)) {\n                unexistKeys.push(key);\n            }\n        });\n        if (unexistKeys.length > 0) {\n            console.log('not find key: ', unexistKeys.join(\",\"));\n            return false;\n        }\n        return true;\n    }\n    /**\n     *\n     * @param chainId eg. btc:mainnet\n     * @returns eg. btc\n     */\n    checkChainId(chainId) {\n        if (this.caip.includes(chainId)) {\n            let [namespaceKey, _] = chainId.split(\":\");\n            return namespaceKey;\n        }\n        return undefined;\n    }\n}\nexports.OKXBtcProvider = OKXBtcProvider;\nexports.default = OKXBtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCosmosProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXCosmosProvider {\n    constructor(provider) {\n        this.provider = provider.getUniversalProvider();\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyCosmos]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyCosmos]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n            console.log(\"aptos_publicKey\", publicKey);\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            algo: \"secp256k1\",\n            address: address,\n            bech32Address: address,\n            pubKey: this.hexToUint8Array(publicKey),\n        };\n    }\n    signArbitrary(chainId, signerAddress, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const base64Encoded = window.btoa(data);\n            const signDoc = {\n                chain_id: \"\",\n                account_number: \"0\",\n                sequence: \"0\",\n                fee: {\n                    gas: \"0\",\n                    amount: []\n                },\n                msgs: [{\n                        \"type\": \"sign/MsgSignData\",\n                        \"value\": {\n                            \"signer\": signerAddress,\n                            \"data\": base64Encoded\n                        }\n                    }],\n                memo: \"\"\n            };\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signArbitrary\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chain_id\": chainId.split(\":\")[1],\n                    \"data\": signDoc\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    if (typeof ret.result == \"string\") {\n                        return JSON.parse(ret.result);\n                    }\n                    else {\n                        return ret.result;\n                    }\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAmino(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (signDoc.msgs[0].type == \"sign/MsgSignData\") {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signArbitrary\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chain_id\": chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        return ret.result;\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    return error;\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                }\n            }\n            else {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signAmino\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chainId\": chainId.split(\":\")[1],\n                        \"sign_doc\": signDoc,\n                        \"signOptions\": signOptions\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        const resData = JSON.parse(ret.result);\n                        console.log(\"signdoc\", signDoc, resData.signDoc);\n                        signDoc.fee = resData.signDoc.fee;\n                        return { signed: signDoc, signature: resData.signature };\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                    return error;\n                }\n            }\n        });\n    }\n    signDirect(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const object = {\n                bodyBytes: this.bufferToHex(signDoc.bodyBytes),\n                authInfoBytes: this.bufferToHex(signDoc.authInfoBytes),\n                chainId: signDoc.chainId,\n                accountNumber: signDoc.accountNumber ? signDoc.accountNumber.toString() : null,\n                signOptions: signOptions ? signOptions : null\n            };\n            let data = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signDirect\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chainId\": chainId.split(\":\")[1],\n                    \"sign_doc\": object,\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    const res = JSON.parse(ret.result);\n                    console.log(\"signdirect result\", res);\n                    signDoc.authInfoBytes = this.messageToBuffer(res.signDoc.authInfoBytes);\n                    return { signed: signDoc, signature: res.signature };\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    messageToBuffer(message) {\n        var buffer = Uint8Array.from([]);\n        try {\n            if (typeof message === \"string\") {\n                buffer = this.hexToUint8Array(message.replace(\"0x\", \"\"));\n            }\n            else {\n                buffer = Uint8Array.from(message);\n            }\n        }\n        catch (err) {\n            console.log(`messageToBuffer error: ${err}`);\n        }\n        return buffer;\n    }\n    bufferToHex(arr) {\n        let output = [...new Uint8Array(arr)]\n            .map(x => x.toString(16).padStart(2, '0'))\n            .join('');\n        return '0x' + output;\n    }\n    hexToUint8Array(hexString) {\n        if (hexString.length % 2 !== 0) {\n            throw \"Invalid hexString\";\n        }\n        var arrayBuffer = new Uint8Array(hexString.length / 2);\n        for (var i = 0; i < hexString.length; i += 2) {\n            var byteValue = parseInt(hexString.substr(i, 2), 16);\n            if (isNaN(byteValue)) {\n                throw \"Invalid hexString\";\n            }\n            arrayBuffer[i / 2] = byteValue;\n        }\n        return arrayBuffer;\n    }\n}\nexports.OKXCosmosProvider = OKXCosmosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXStarknetProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXStarknetProvider {\n    constructor(provider) {\n        this.STARKNET_CHAIN_ID = \"starknet:mainnet\";\n        this.provider = provider.getUniversalProvider();\n    }\n    getChain(chainId) {\n        if (chainId == null) {\n            chainId = this.STARKNET_CHAIN_ID;\n        }\n        if (chainId != this.STARKNET_CHAIN_ID) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, \"The chainId:\" + chainId + \"is wrong for OKXStarknetProvider\");\n        }\n        return chainId;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyStarknet]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyStarknet]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address,\n            pubKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param chainId\n     * @param signerAddress\n     * @param data: { types, primaryType, domain, message } as TypedData\n     * @returns [signedDataR, signedDataS]\n     */\n    signMessage(signerAddress, typedData, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            if (signerAddress.length == 0) {\n                signerAddress = this.getAccount(chainId)[\"address\"];\n            }\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"starknet_signMessage\",\n                \"params\": {\n                    \"accountAddress\": signerAddress,\n                    \"typedData\": typedData\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    console.log(\"=====> 签名结果result的类型：\", typeof ret.result);\n                    console.log(ret);\n                    let results = ret.result;\n                    if (typeof results == 'string') {\n                        results = JSON.parse(results);\n                    }\n                    console.log(ret);\n                    return [results[\"signedDataR\"], results[\"signedDataS\"]];\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     * sendTransaction\n     * @param chainId\n     * @param signerAddress\n     * @param transaction\n     * @returns { transaction_hash }\n     */\n    sendTransaction(signerAddress, transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let transactionData = {\n                \"accountAddress\": signerAddress,\n                \"executionRequest\": transaction\n            };\n            let data = {\n                \"method\": \"starknet_sendTransaction\",\n                \"params\": {\n                    \"data\": JSON.stringify(transactionData),\n                    \"from\": signerAddress\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return { transaction_hash: ret.result };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * signMessage old API（rarely used, no need provide to external）\n     * @param chainId\n     * @param payload\n     * @returns {transaction_hash, class_hash}\n     */\n    signMessageDeclareContractPayload(payload, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            try {\n                let data = {\n                    \"method\": \"starknet_signMessage\",\n                    \"params\": payload\n                };\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    console.log(\"=====> (旧API)签名结果result的类型：\", typeof ret.result);\n                    console.log(ret);\n                    return {\n                        \"transaction_hash\": ret.result[\"txHash\"],\n                        \"class_hash\": ret.result[\"classHash\"]\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     * sendTransaction old API（rarely used, no need provide to external）\n     * @param chainId\n     * @param signerAddress\n     * @param calls\n     * @param abis\n     * @param transactionsDetail\n     * @returns { transaction_hash }\n     */\n    /// todo： \n    /// 修改方法名\n    /// chainId 放后面\n    sendMessageExecuteTransactionDetail(signerAddress, calls, abis, transactionsDetail, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            const transactions = Array.isArray(calls) ? calls : [calls];\n            const executionRequest = {\n                \"calls\": transactions,\n                \"abis\": abis,\n                \"transactionsDetail\": {\n                    \"nonce\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.nonce,\n                    \"maxFee\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.nonce,\n                    \"version\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.version,\n                }\n            };\n            return this.sendTransaction(signerAddress, executionRequest, chainId);\n        });\n    }\n}\nexports.OKXStarknetProvider = OKXStarknetProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTonProvider = void 0;\nconst _1 = require(\"./\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTonProvider {\n    constructor(generator) {\n        this.statusChangeSubscriptions = [];\n        this.statusChangeErrorSubscriptions = [];\n        this.provider = generator.getUniversalProvider();\n        this.provider.on(\"connect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event connect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"reconnect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event reconnect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"disconnect\", () => {\n            (0, core_1.logDebug)(\"OKXTONProvider event disconnect:\");\n            this.statusChangeSubscriptions.forEach(callback => callback(null));\n        });\n        this.provider.on(\"connect_error\", (error) => {\n            (0, core_1.logDebug)(\"OKXTONProvider event connect_error:\", JSON.stringify(error));\n            this.statusChangeErrorSubscriptions.forEach(errorsHandler => errorsHandler(error));\n        });\n    }\n    connected() {\n        if (this.provider.connected()) {\n            return !!this.provider.session.namespaces[\"ton\"];\n        }\n        return false;\n    }\n    account() {\n        try {\n            if (!this.provider.session) {\n                return null;\n            }\n            let tonNameSpace = this.provider.session.namespaces['ton'];\n            if (!tonNameSpace || !tonNameSpace.payload || !tonNameSpace.payload.ton_addr) {\n                return null;\n            }\n            let ton_addr = tonNameSpace.payload.ton_addr;\n            return {\n                address: ton_addr.address,\n                chain: ton_addr.network,\n                walletStateInit: ton_addr.walletStateInit,\n                publicKey: ton_addr.publicKey,\n            };\n        }\n        catch (e) {\n            (0, core_1.logDebug)(\"OKXTONProvider account  error:\", JSON.stringify(e));\n            return null;\n        }\n    }\n    wallet() {\n        if (this.connected()) {\n            try {\n                let sessionWallet = this.provider.session.wallet;\n                let tonDeviceInfo = {\n                    platform: sessionWallet.platform,\n                    appName: sessionWallet.appName,\n                    appVersion: sessionWallet.appVersion,\n                    maxProtocolVersion: sessionWallet.maxProtocolVersion,\n                    features: ['ton_sendTransaction'],\n                };\n                const wallet = {\n                    device: tonDeviceInfo,\n                    provider: \"http\",\n                    account: this.account()\n                };\n                let tonNameSpace = this.provider.session.namespaces['ton'];\n                if (tonNameSpace && tonNameSpace.payload && tonNameSpace.payload.ton_proof) {\n                    wallet.connectItems = {\n                        tonProof: tonNameSpace.payload.ton_proof\n                    };\n                }\n                (0, core_1.logDebug)(\"OKXTONProvider wallet :\", JSON.stringify(wallet));\n                return wallet;\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"OKXTONProvider wallet  error:\", JSON.stringify(e));\n                return null;\n            }\n        }\n        return null;\n    }\n    onStatusChange(callback, errorsHandler) {\n        this.statusChangeSubscriptions.push(callback);\n        if (errorsHandler) {\n            this.statusChangeErrorSubscriptions.push(errorsHandler);\n        }\n        return () => {\n            this.statusChangeSubscriptions = this.statusChangeSubscriptions.filter(item => item !== callback);\n            if (errorsHandler) {\n                this.statusChangeErrorSubscriptions = this.statusChangeErrorSubscriptions.filter(item => item !== errorsHandler);\n            }\n        };\n    }\n    sendTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (transaction.network && transaction.network !== core_1.TONCHAIN.MAINNET) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, 'OKXTONProvider sendTransaction network error');\n            }\n            if (!transaction.network) {\n                transaction.network = core_1.TONCHAIN.MAINNET;\n            }\n            if (this.provider.session) {\n                if (!transaction.from) {\n                    const accounts = this.provider.requestAccountsWithNamespace('ton');\n                    transaction.from = accounts[0];\n                }\n            }\n            const requestParams = {\n                method: \"ton_sendTransaction\",\n                params: transaction,\n            };\n            let chain = 'ton:' + core_1.TONCHAIN.MAINNET;\n            (0, core_1.logDebug)(\"OKXTONProvider sendTransaction transaction----:\", chain, JSON.stringify(requestParams));\n            return this.provider.request(requestParams, chain);\n        });\n    }\n}\nexports.OKXTonProvider = OKXTonProvider;\nexports.default = OKXTonProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTronProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTronProvider {\n    constructor(provider) {\n        this.provider = provider.getUniversalProvider();\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyTron]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyTron]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address\n        };\n    }\n    stringToHex(str) {\n        let hex = '';\n        for (let i = 0; i < str.length; i++) {\n            hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n        }\n        return hex;\n    }\n    signMessage(chainId, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessage\",\n                \"params\": {\n                    \"message\": this.stringToHex(data)\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signMessageV2(chainId, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessageV2\",\n                \"params\": {\n                    \"message\": data\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signTransaction(chainId, transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let data = {\n                \"method\": \"tron_signTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    let signedTx;\n                    if (typeof ret.result == \"string\") {\n                        signedTx = JSON.parse(ret.result);\n                    }\n                    else {\n                        signedTx = ret.result;\n                    }\n                    let realSignTx = {};\n                    realSignTx.visible = signedTx.visible;\n                    realSignTx.txID = signedTx.txID;\n                    let rawData = {};\n                    rawData.contract = signedTx.raw_data.contract;\n                    rawData.expiration = signedTx.raw_data.expiration;\n                    rawData.ref_block_bytes = signedTx.raw_data.ref_block_bytes;\n                    rawData.ref_block_hash = signedTx.raw_data.ref_block_hash;\n                    rawData.timestamp = signedTx.raw_data.timestamp;\n                    realSignTx.raw_data = rawData;\n                    realSignTx.raw_data_hex = signedTx.raw_data_hex;\n                    realSignTx.signature = signedTx.signature;\n                    return realSignTx;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAndSendTransaction(chainId, transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let data = {\n                \"method\": \"tron_signAndSendTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n}\nexports.OKXTronProvider = OKXTronProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXUniversalProvider = void 0;\nconst eip155_1 = require(\"./provider/providers/eip155\");\nconst sui_1 = require(\"./provider/providers/sui\");\nconst constants_1 = require(\"./provider/constants\");\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nconst client_1 = require(\"./packages/sign-client/client\");\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"./packages/utils/namespaces\");\nconst solana_1 = __importDefault(require(\"./provider/providers/solana\"));\nconst btc_1 = __importDefault(require(\"./provider/providers/btc\"));\nconst aptos_1 = __importDefault(require(\"./provider/providers/aptos\"));\nconst ton_1 = __importDefault(require(\"./provider/providers/ton\"));\nconst cosmos_1 = __importDefault(require(\"./provider/providers/cosmos\"));\nconst tron_1 = __importDefault(require(\"./provider/providers/tron\"));\nconst starknet_1 = __importDefault(require(\"./provider/providers/starknet\"));\nclass OKXUniversalProvider {\n    static init(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider init() called');\n            let provider;\n            if (window && window.okxConnectUniversalinwindow && window.okxConnectUniversalinwindow instanceof OKXUniversalProvider) {\n                (0, core_1.logDebug)('OKXUniversalConnect init() old called');\n                provider = window.okxConnectUniversalinwindow;\n            }\n            else {\n                (0, core_1.logDebug)('OKXUniversalConnect init() new called');\n                provider = new OKXUniversalProvider(opts);\n                yield provider.initialize();\n                if (window) {\n                    window.okxConnectUniversalinwindow = provider;\n                }\n            }\n            return provider;\n        });\n    }\n    getUniversalProvider() {\n        return this;\n    }\n    constructor(opts) {\n        this.rpcProviders = {};\n        this.events = new eventemitter3_1.default();\n        this.providerOpts = opts;\n    }\n    request(args, chain) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider request() called');\n            if (!this.connected()) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return yield this.getProvider(namespace).request(requestParam);\n        });\n    }\n    buildRequestParamFromRequest(args, chain) {\n        (0, core_1.logDebug)(\"UniversalProvider request args >>>: \", chain, JSON.stringify(args));\n        let [namespace, chainId] = this.validateChain(chain);\n        if (!this.session) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Please call connect() before request()\");\n        }\n        let keyArr = Object.keys(this.session.namespaces);\n        if (!chain && keyArr && keyArr.length > 1) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Multiple chains have been linked, the request method requires chain`);\n        }\n        (0, core_1.logDebug)(\"UniversalProvider request >>args>>>: \", args);\n        if (namespace == \"aptos\" && chainId == \"mainnet\") {\n            namespace = \"aptos\";\n            chainId = \"637\";\n        }\n        if (namespace == \"movement\" && chainId == \"testnet\") {\n            namespace = \"aptos\";\n            chainId = \"70000060\";\n        }\n        const requestParam = Object.assign(Object.assign({}, args), { chainId: `${namespace}:${chainId}` });\n        return { namespace, requestParam };\n    }\n    enable() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.client) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (!this.session) {\n                if (this.connectOpts) {\n                    yield this.connect(this.connectOpts);\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n                }\n            }\n            const accounts = yield this.requestAccounts();\n            return accounts;\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider disconnect() called');\n            if (!this.session) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                let called = false;\n                const onRequestSent = () => __awaiter(this, void 0, void 0, function* () {\n                    if (!called) {\n                        called = true;\n                        yield this.disconnectAndEmit();\n                        yield this.cleanup();\n                        resolve();\n                        (0, core_1.logDebug)(\"UniversalProvider disconnect Disconnected\");\n                    }\n                });\n                try {\n                    yield this.client.disconnect();\n                    yield onRequestSent();\n                }\n                catch (e) {\n                    yield onRequestSent();\n                }\n            }));\n        });\n    }\n    disconnectAndEmit() {\n        var _a, _b;\n        this.client.engine.connectionManager.disconnect();\n        this.events.emit(\"disconnect\", { topic: (_a = this.session) === null || _a === void 0 ? void 0 : _a.topic });\n        this.events.emit(\"session_delete\", { topic: (_b = this.session) === null || _b === void 0 ? void 0 : _b.topic });\n    }\n    aptosChainNameToGeneralId(chainId) {\n        if (chainId == \"aptos:mainnet\") {\n            return \"aptos:637\";\n        }\n        else if (chainId == \"movement:testnet\") {\n            return \"aptos:70000060\";\n        }\n        else {\n            return chainId;\n        }\n    }\n    replaceAptos(opts) {\n        var _a, _b;\n        let aptosNameSpace = (_a = opts.namespaces) === null || _a === void 0 ? void 0 : _a[\"aptos\"];\n        if (aptosNameSpace != undefined) {\n            let realNS = this.replaceAptosInner(aptosNameSpace);\n            if (opts.namespaces != undefined && \"aptos\" in opts.namespaces && realNS != undefined) {\n                opts.namespaces.aptos = realNS;\n            }\n        }\n        let optionAptosNameSpace = (_b = opts.optionalNamespaces) === null || _b === void 0 ? void 0 : _b[\"aptos\"];\n        if (optionAptosNameSpace != undefined) {\n            let realOptionNS = this.replaceAptosInner(optionAptosNameSpace);\n            if (opts.optionalNamespaces != undefined && \"aptos\" in opts.optionalNamespaces && realOptionNS != undefined) {\n                opts.optionalNamespaces.aptos = realOptionNS;\n            }\n        }\n        return opts;\n    }\n    replaceAptosInner(aptosNameSpace) {\n        var _a;\n        if (aptosNameSpace != undefined) {\n            aptosNameSpace.chains = (_a = aptosNameSpace.chains) === null || _a === void 0 ? void 0 : _a.map(chainId => {\n                return this.aptosChainNameToGeneralId(chainId);\n            });\n            if (aptosNameSpace.defaultChain != undefined) {\n                aptosNameSpace.defaultChain = this.aptosChainNameToGeneralId(aptosNameSpace.defaultChain);\n            }\n        }\n        return aptosNameSpace;\n    }\n    replaceAptosGeneralIdWithNetName(chainId) {\n        if (chainId.includes(\"aptos:637\")) {\n            chainId = chainId.replace(\"aptos:637\", \"aptos:mainnet\");\n        }\n        else if (chainId.includes(\"aptos:70000060\")) {\n            chainId = chainId.replace(\"aptos:70000060\", \"movement:testnet\");\n        }\n        return chainId;\n    }\n    replaceSessionAptos(session) {\n        var _a;\n        let namespaces = (_a = session === null || session === void 0 ? void 0 : session.namespaces) === null || _a === void 0 ? void 0 : _a[\"aptos\"];\n        if (namespaces != undefined && namespaces.chains != undefined) {\n            namespaces.chains = namespaces.chains.map(chain => {\n                return this.replaceAptosGeneralIdWithNetName(chain);\n            });\n            namespaces.accounts = namespaces.accounts.map((account) => {\n                return this.replaceAptosGeneralIdWithNetName(account);\n            });\n            let extra = {};\n            Object.keys(namespaces.extra || {}).forEach((key, index) => {\n                let newKey = this.replaceAptosGeneralIdWithNetName(key);\n                extra[this.replaceAptosGeneralIdWithNetName(key)] = Object.values((session === null || session === void 0 ? void 0 : session.namespaces[\"aptos\"].extra) || {})[index];\n            });\n            namespaces.extra = extra;\n        }\n        (0, core_1.logDebug)(\"replaceSessionAptos\", session);\n    }\n    connected() {\n        (0, core_1.logDebug)('OKXUniversalProvider connected() called');\n        let disconnectInner = () => {\n            try {\n                this.cleanup();\n                this.client.engine.connectionManager.disconnect();\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"Error during disconnect:\", e);\n            }\n        };\n        try {\n            if (!this.session)\n                return false;\n            if (!this.client.engine.connectionManager.getCurrentConnectionReady()) {\n                disconnectInner();\n                return false;\n            }\n            return true;\n        }\n        catch (e) {\n            disconnectInner();\n            return false;\n        }\n    }\n    connect(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider connect() called');\n            if (!this.client) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (this.connected()) {\n                return this.session;\n            }\n            opts = this.replaceAptos(opts);\n            (0, core_1.logDebug)(`OKXUniversalProvider connect >>>>`, JSON.stringify(opts));\n            if (opts.sessionConfig === undefined) {\n                opts.sessionConfig = {};\n            }\n            if (opts.sessionConfig.openUniversalUrl === undefined) {\n                opts.sessionConfig.openUniversalUrl = (0, core_1.isMobileUserAgent)();\n            }\n            this.setNamespaces(opts);\n            try {\n                (0, core_1.logDebug)(`UniversalProvider connect opts.stringify ====> ${JSON.stringify(opts)}`);\n                let session = yield this.client.connect(opts);\n                this.replaceSessionAptos(session);\n                (0, core_1.logDebug)(`UniversalProvider connect success ====> ${JSON.stringify(session)}`);\n                if (session) {\n                    this.session = session;\n                    this.onConnect();\n                    return session;\n                }\n                return undefined;\n            }\n            catch (error) {\n                (0, core_1.logDebug)(`UniversalProvider connect error ====> `, JSON.stringify(error));\n                throw error;\n            }\n        });\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    setDefaultChain(chain, rpcUrl) {\n        (0, core_1.logDebug)('OKXUniversalProvider setDefaultChain() called');\n        // chain = this.aptosChainNameToGeneralId(chain)\n        try {\n            // ignore without active session\n            if (!this.connected())\n                return;\n            const [namespace, chainId] = this.validateChain(chain);\n            const provider = this.getProvider(namespace);\n            provider.setDefaultChain(chainId, rpcUrl);\n        }\n        catch (error) {\n            // ignore the error if the fx is used prematurely before namespaces are set\n            if (!/Please call connect/.test(error.message))\n                throw error;\n        }\n    }\n    checkStorage() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let sessionInfoStr = yield this.getFromStore(\"connectSession\");\n            (0, core_1.logDebug)(sessionInfoStr);\n            if (sessionInfoStr) {\n                let sessionInfo = sessionInfoStr;\n                this.session = sessionInfo;\n                this.client.session = this.session;\n                this.sessionConfig = sessionInfo.sessionConfig;\n                this.client.sessionConfig = this.sessionConfig;\n                (0, core_1.logDebug)('[evm u-provider] do reconnection', this.session);\n                yield this.client.restoreconnect(sessionInfo);\n                this.createProviders();\n                this.registerEventListeners();\n                setTimeout(() => {\n                    this.events.emit(\"reconnect\", { session: this.session });\n                }, 100);\n                this.registerEventListeners();\n            }\n        });\n    }\n    initialize() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider initialize() called');\n            const data = Object.assign({ url: window.location.hostname, origin: window.location.origin }, this.providerOpts.dappMetaData);\n            this.client = new client_1.SignClient(data, this.events);\n            yield this.checkStorage();\n        });\n    }\n    createProviders() {\n        if (!this.client) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n        }\n        if (!this.connected()) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Session not initialized. Please call connect() before enable()\");\n        }\n        const providersToCreate = [\n            ...new Set(Object.keys(this.session.namespaces).map((namespace) => (0, namespaces_1.parseNamespaceKey)(namespace))),\n        ];\n        providersToCreate.forEach((namespace) => {\n            if (!this.session)\n                return;\n            const namespacesValue = this.session.namespaces;\n            const currentNameSpace = namespacesValue[namespace];\n            (0, core_1.logDebug)(\"init eip155 >> \", currentNameSpace);\n            switch (namespace) {\n                case \"eip155\":\n                    const opts = {\n                        namespace: currentNameSpace\n                    };\n                    this.rpcProviders[namespace] = new eip155_1.Eip155Provider(opts, this.client, this.events);\n                    break;\n                case \"solana\":\n                    const opts1 = {\n                        namespace: currentNameSpace\n                    };\n                    let solanaProvider = new solana_1.default(opts1, \"solana\", this.client, this.events);\n                    this.rpcProviders[namespace] = solanaProvider;\n                    let sonicProvider = new solana_1.default(opts1, \"sonic\", this.client, this.events);\n                    this.rpcProviders['sonic'] = sonicProvider;\n                    let svmProvider = new solana_1.default(opts1, \"svm\", this.client, this.events);\n                    this.rpcProviders['svm'] = svmProvider;\n                    // this.rpcProviders[namespace] = new SolanaProvider(opts1, () => { return this.session; });\n                    break;\n                case \"ton\":\n                    const optsTon = {\n                        namespace: currentNameSpace\n                    };\n                    let tonProvider = new ton_1.default(optsTon, this.client, this.events);\n                    this.rpcProviders[namespace] = tonProvider;\n                    break;\n                case \"sui\":\n                    const optsSui = {\n                        namespace: currentNameSpace\n                    };\n                    let suiProvider = new sui_1.SuiProvider(optsSui, this.client, this.events);\n                    suiProvider.name = \"sui\";\n                    this.rpcProviders[namespace] = suiProvider;\n                    break;\n                case \"btc\":\n                    const optsBtc = {\n                        namespace: currentNameSpace\n                    };\n                    let btcProvider = new btc_1.default(optsBtc, \"btc\", this.client, this.events);\n                    this.rpcProviders[\"btc\"] = btcProvider;\n                    let fbProvider = new btc_1.default(optsBtc, \"fractal\", this.client, this.events);\n                    this.rpcProviders[\"fractal\"] = fbProvider;\n                    break;\n                case \"aptos\":\n                    let aptosProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"aptos\", this.client, this.events);\n                    this.rpcProviders[namespace] = aptosProvider;\n                    let moveProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"movement\", this.client, this.events);\n                    this.rpcProviders[\"movement\"] = moveProvider;\n                    break;\n                case \"cosmos\":\n                    let cosmosProvider = new cosmos_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = cosmosProvider;\n                    break;\n                case \"tron\":\n                    let tronProvider = new tron_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = tronProvider;\n                    break;\n                case \"starknet\":\n                    let starknetProvider = new starknet_1.default({\n                        namespace: currentNameSpace\n                    }, \"starknet\", this.client, this.events);\n                    this.rpcProviders[namespace] = starknetProvider;\n                    break;\n            }\n        });\n    }\n    registerEventListeners() {\n        if (typeof this.client === \"undefined\") {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client is not initialized\");\n        }\n        this.client.engine.addDisconnectListener(() => {\n            this.disconnectAndEmit();\n            this.cleanup();\n        });\n        this.on(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, (caip2ChainId) => {\n            this.onChainChanged(caip2ChainId);\n        });\n        this.on(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, (nameSpaces) => {\n            if (nameSpaces) {\n                const nameSpacekey = Object.keys(nameSpaces)[0];\n                if (this.session) {\n                    this.session.namespaces[nameSpacekey] = nameSpaces[nameSpacekey];\n                    if (this.session) {\n                        this.persist(\"connectSession\", this.session);\n                        this.events.emit(\"session_update\", this.session);\n                    }\n                    (0, core_1.logDebug)(\"PROVIDER_EVENTS.UPDATE_NAMESPACES this.session... ->>>\", JSON.stringify(this.session));\n                }\n            }\n        });\n    }\n    getProvider(namespace) {\n        (0, core_1.logDebug)('current get providers', this.rpcProviders);\n        (0, core_1.logDebug)('query namespace: ', namespace);\n        return this.rpcProviders[namespace];\n    }\n    setNamespaces(params) {\n        this.connectOpts = params;\n        const { namespaces, sessionConfig } = params;\n        const data = {\n            origin: window.location.origin,\n            url: window.location.hostname,\n            name: this.providerOpts.dappMetaData.name,\n            icon: this.providerOpts.dappMetaData.icon,\n        };\n        this.sessionConfig = {\n            dappInfo: data,\n            openUniversalUrl: sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.openUniversalUrl,\n            redirect: sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect,\n        };\n        (0, core_1.logDebug)(\"setNamespaces sessionConfig>>>\", this.sessionConfig);\n        this.client.sessionConfig = this.sessionConfig;\n        this.persist(\"sessionConfig\", sessionConfig);\n    }\n    validateChain(chain) {\n        var _a;\n        let [namespace, chainId] = (chain === null || chain === void 0 ? void 0 : chain.split(\":\")) || [\"\", \"\"];\n        if (!this.session || !this.session.namespaces || !Object.keys(this.session.namespaces).length) {\n            (0, core_1.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        if (namespace) {\n            if (!this.isChainNamespaceInSession(namespace)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace '${namespace}' is not configured. Please call connect() first with namespace config.`);\n            }\n            if (chainId && chain) {\n                (0, core_1.logDebug)('this.session.namespaces -->> ', namespace, JSON.stringify(this.session.namespaces));\n                const chainsArr = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.chains;\n                (0, core_1.logDebug)('get chainsArr & chain', JSON.stringify(chainsArr), chain);\n                if (chainsArr && !chainsArr.includes(chain)) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace not include the chain '${chain}'`);\n                }\n            }\n        }\n        if (namespace && chainId) {\n            (0, core_1.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        let defaultNamespace = (0, namespaces_1.parseNamespaceKey)(Object.keys(this.session.namespaces)[0]);\n        const defaultChain = this.rpcProviders[defaultNamespace].getDefaultChain();\n        (0, core_1.logDebug)('get default chain:', defaultChain);\n        return [defaultNamespace, defaultChain];\n    }\n    isChainNamespaceInSession(namespaceStr) {\n        var _a, _b;\n        if (Object.keys(((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces) || {})\n            .map((key) => (0, namespaces_1.parseNamespaceKey)(key))\n            .includes(namespaceStr)) {\n            return true;\n        }\n        let isChainNamespaceInSession = false;\n        Object.values(((_b = this.session) === null || _b === void 0 ? void 0 : _b.namespaces) || {})\n            .forEach(namespace => {\n            namespace.chains.forEach(chain => {\n                if (chain.split(\":\")[0] == namespaceStr) {\n                    isChainNamespaceInSession = true;\n                }\n            });\n        });\n        return isChainNamespaceInSession;\n    }\n    requestAccountsWithNamespace(namespace) {\n        return this.getProvider(namespace).requestAccounts();\n    }\n    requestDefaultChainWithNamespace(namespace) {\n        return this.getProvider(namespace).getDefaultChain();\n    }\n    requestAccounts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const [namespace] = this.validateChain();\n            return yield this.getProvider(namespace).requestAccounts();\n        });\n    }\n    onChainChanged(caip2Chain) {\n        var _a;\n        if (!((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces))\n            return;\n        const [namespace, chainId] = this.validateChain(caip2Chain);\n        if (!chainId)\n            return;\n        if (this.session.namespaces[namespace]) {\n            this.session.namespaces[namespace].defaultChain = chainId;\n            this.persist(\"connectSession\", this.session);\n        }\n        this.events.emit(\"chainChanged\", chainId);\n    }\n    onConnect() {\n        this.createProviders();\n        if (this.session) {\n            this.persist(\"connectSession\", this.session);\n        }\n        this.events.emit(\"connect\", { session: this.session });\n        this.registerEventListeners();\n    }\n    cleanup() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.session = undefined;\n            this.sessionProperties = undefined;\n            this.persist(\"optionalNamespaces\", undefined);\n            this.persist(\"sessionProperties\", undefined);\n            this.persist(\"connectSession\", undefined);\n        });\n    }\n    persist(key, data) {\n        (0, core_1.logDebug)('[evm u-provider] persisit data', key, data);\n        return this.client.engine.connectionManager.saveSessionContent(key, data);\n    }\n    getFromStore(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.client.engine.connectionManager.getSessionContent(key);\n        });\n    }\n    showRequestModal(args, chain) {\n        try {\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return this.getProvider(namespace).showRequestModal(requestParam);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n}\nexports.OKXUniversalProvider = OKXUniversalProvider;\nexports.default = OKXUniversalProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXStarknetProvider = exports.OKXTronProvider = exports.OKXTonProvider = exports.OKXCosmosProvider = exports.OKXBtcProvider = exports.OKXUniversalProvider = void 0;\n__exportStar(require(\"./provider/types\"), exports);\nvar OKXUniversalProvider_1 = require(\"./OKXUniversalProvider\");\nObject.defineProperty(exports, \"OKXUniversalProvider\", { enumerable: true, get: function () { return OKXUniversalProvider_1.OKXUniversalProvider; } });\nvar OKXBtcProvider_1 = require(\"./OKXBtcProvider\");\nObject.defineProperty(exports, \"OKXBtcProvider\", { enumerable: true, get: function () { return OKXBtcProvider_1.OKXBtcProvider; } });\nvar OKXCosmosProvider_1 = require(\"./OKXCosmosProvider\");\nObject.defineProperty(exports, \"OKXCosmosProvider\", { enumerable: true, get: function () { return OKXCosmosProvider_1.OKXCosmosProvider; } });\nvar OKXTonProvider_1 = require(\"./OKXTonProvider\");\nObject.defineProperty(exports, \"OKXTonProvider\", { enumerable: true, get: function () { return OKXTonProvider_1.OKXTonProvider; } });\nvar OKXTronProvider_1 = require(\"./OKXTronProvider\");\nObject.defineProperty(exports, \"OKXTronProvider\", { enumerable: true, get: function () { return OKXTronProvider_1.OKXTronProvider; } });\nvar OKXStarknetProvider_1 = require(\"./OKXStarknetProvider\");\nObject.defineProperty(exports, \"OKXStarknetProvider\", { enumerable: true, get: function () { return OKXStarknetProvider_1.OKXStarknetProvider; } });\n__exportStar(require(\"@okxconnect/core\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignClient = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"../utils/namespaces\");\nconst ConnectMethodUtils_1 = require(\"../utils/ConnectMethodUtils\");\nclass SignClient extends core_1.ISignClient {\n    constructor(metaData, events) {\n        super(metaData);\n        this.engine = new core_1.Engine(new core_1.ConnectionManager());\n        // ---------- Engine ----------------------------------------------- //\n        this.connect = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    var connectRequest = [];\n                    (0, core_1.logDebug)(`client connect params >>>`, JSON.stringify(params));\n                    var requestAccountItem = {\n                        name: \"requestAccounts\",\n                        requiredNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.namespaces),\n                        optionalNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.optionalNamespaces),\n                    };\n                    if (params.connectMethods) {\n                        requestAccountItem.connectRequestMethods = yield (0, ConnectMethodUtils_1.connectMethodsToConnectWalletMethods)(params.connectMethods, requestAccountItem.requiredNamespaces);\n                    }\n                    connectRequest.push(requestAccountItem);\n                    (0, core_1.logDebug)(`client connect connectRequest >>>`, JSON.stringify(connectRequest));\n                    this.engine.universalConnect(connectRequest, Object.assign({ dappInfo: this.metadata }, params.sessionConfig), (info) => {\n                        if (info && info.connectRequest) {\n                            var encodeParams = (0, core_1.encodeConnectParams)(info.connectRequest);\n                            (0, core_1.logDebug)(`universalConect encodeParams:`, encodeParams);\n                            (0, core_1.logDebug)(`universalConect url:`, (0, core_1.getUniversalLink)((0, core_1.getAppWalletDeepLink)(encodeParams)));\n                            this.events.emit(\"display_uri\", (0, core_1.getUniversalLink)((0, core_1.getAppWalletDeepLink)(encodeParams)));\n                            (0, core_1.logDebug)(`universalConect EngineConnectInfo  ${JSON.stringify(info)}`);\n                            this.events.emit(\"okx_engine_connect_params\", info);\n                        }\n                    }).then((session) => __awaiter(this, void 0, void 0, function* () {\n                        (0, namespaces_1.fillParamsToSession)(session, params.namespaces, params.optionalNamespaces, this.sessionConfig);\n                        (0, core_1.logDebug)(`signClient: connect: session ${JSON.stringify(session)}`);\n                        if (params.connectMethods) {\n                            yield (0, ConnectMethodUtils_1.connectMethodsResponseUpdate)(session, params.connectMethods);\n                        }\n                        resolve(session);\n                    })).catch((e) => {\n                        (0, core_1.logDebug)(`signClient: connect: catch ${JSON.stringify(e)}`);\n                        this.events.emit(\"connect_error\", e);\n                        reject(e);\n                    });\n                }\n                catch (error) {\n                    (0, core_1.logDebug)(`signClient: connect:  ${JSON.stringify(error)}`);\n                    reject(error);\n                }\n            }));\n        });\n        this.restoreconnect = (sessionConfig) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.restoreconnect(sessionConfig, (session) => {\n                    resolve(session);\n                });\n            });\n        });\n        this.reject = (params) => __awaiter(this, void 0, void 0, function* () {\n            //   try {\n            //     return await this.engine.reject(params);\n            //   } catch (error: any) {\n            //     this.logger.error(error.message);\n            //     throw error;\n            //   }\n        });\n        //\n        // public update: ISignClient[\"update\"] = async (params) => {\n        //   return\n        // //   try {\n        // //     return await this.engine.update(params);\n        // //   } catch (error: any) {\n        // //     this.logger.error(error.message);\n        // //     throw error;\n        // //   }\n        // };\n        this.request = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                (0, core_1.logDebug)(\"clint request --params>>>> >\", this.engine.connectionManager.getCurrentConnectionReady(), (_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl, JSON.stringify(params));\n                try {\n                    // this.sessionConfig\n                    if (((_b = this.sessionConfig) === null || _b === void 0 ? void 0 : _b.openUniversalUrl) && (0, core_1.isIos)()) {\n                        this.openOKXWallet();\n                    }\n                    yield this.engine.send(params, {\n                        resolve: (response) => {\n                            delete response.requestId;\n                            (0, core_1.logDebug)(\"clint request --response >\", JSON.stringify(response));\n                            if (('error' in response) && response.error) {\n                                let error = response.error;\n                                reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                            }\n                            else {\n                                resolve(response);\n                            }\n                        },\n                        onAck: () => {\n                            var _a;\n                            if (!(0, core_1.isIos)() && ((_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl)) {\n                                this.openOKXWallet();\n                            }\n                        }\n                    });\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }));\n        });\n        // public emit: ISignClient[\"emit\"] = async (params) => {\n        //     try {\n        //         // return await this.engine.emit(params);\n        //     } catch (error: any) {\n        //         throw error;\n        //     }\n        // };\n        this.disconnect = () => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"disconnect\"\n                }, {\n                    onAck: () => {\n                        resolve();\n                    }\n                }).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n        this.events = events;\n        this.metadata = metaData;\n    }\n    openOKXWallet() {\n        // if (this.openUniversalUrl){\n        (0, core_1.logDebug)('bridge-provider ==>> connect_5');\n        (0, core_1.openOKXDeeplink)(core_1.standardDeeplink);\n        // }\n    }\n}\nexports.SignClient = SignClient;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.connectSupportMethods = void 0;\nexports.connectMethodsResponseUpdate = connectMethodsResponseUpdate;\nexports.connectMethodsToConnectWalletMethods = connectMethodsToConnectWalletMethods;\nconst core_1 = require(\"@okxconnect/core\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst uint8array_extras_1 = require(\"uint8array-extras\");\nfunction isArray(value) {\n    return typeof value === \"object\" && value !== null && Array.isArray(value);\n}\nfunction isRecord(value) {\n    return typeof value === \"object\" && value !== null && !Array.isArray(value);\n}\nexports.connectSupportMethods = Object.freeze([\n    \"wallet_addEthereumChain\",\n    \"personal_sign\",\n    \"solana_signMessage\",\n    \"sui_signMessage\",\n    \"sui_signPersonalMessage\",\n    \"btc_signMessage\",\n    \"aptos_signMessage\",\n    \"cosmos_signArbitrary\",\n    \"tron_signMessage\",\n    \"tron_signMessageV2\",\n    \"starknet_signMessage\",\n]);\nfunction connectMethodsResponseUpdate(session, requestParams) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a;\n        try {\n            if (session.connectMethodsReply) {\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate connectMethodsReply:\", JSON.stringify(session.connectMethodsReply));\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate session.namespaces:\", JSON.stringify(session.namespaces));\n                for (const methodItem of session.connectMethodsReply) {\n                    (0, core_1.logDebug)(\"connectMethodsResponseUpdate methodItem:\", JSON.stringify(methodItem));\n                    if (\"result\" in methodItem) {\n                        if (methodItem.method === \"solana_signMessage\") {\n                            let solanaSuccessData = methodItem.result;\n                            (0, core_1.logDebug)(\"solana_signMessage methodItem.chainId:\", methodItem.chainId);\n                            let account = (_a = session.namespaces[\"solana\"]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account) {\n                                (0, core_1.logDebug)(\"solana_signMessage account:\", account);\n                                return account.startsWith(methodItem.chainId);\n                            })[0];\n                            (0, core_1.logDebug)(\"solana_signMessage result account:\", solanaSuccessData, account);\n                            if (solanaSuccessData && account) {\n                                methodItem.result = {\n                                    \"signature\": bs58_1.default.decode(solanaSuccessData),\n                                    \"publicKey\": account === null || account === void 0 ? void 0 : account.split(':')[2]\n                                };\n                            }\n                        }\n                        else if (methodItem.method === \"sui_signMessage\" || methodItem.method === \"sui_signPersonalMessage\") {\n                            let suiMethod = requestParams.filter(function (requestMethod) {\n                                return requestMethod.method === methodItem.method;\n                            })[0];\n                            if (suiMethod && suiMethod.params && \"message\" in suiMethod.params) {\n                                let suiMessage = suiMethod.params.message;\n                                let suiMessageb64 = btoa(suiMessage);\n                                console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", suiMessage, suiMessageb64);\n                                if (methodItem.method === \"sui_signMessage\") {\n                                    methodItem.result = {\n                                        \"messageBytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                                else if (methodItem.method === \"sui_signPersonalMessage\") {\n                                    methodItem.result = {\n                                        \"bytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                            }\n                        }\n                        else if (methodItem.method === \"aptos_signMessage\") {\n                            if (methodItem.chainId === \"aptos:637\") {\n                                methodItem.chainId = \"aptos:mainnet\";\n                            }\n                            else if (methodItem.chainId === \"aptos:70000060\") {\n                                methodItem.chainId = \"movement:testnet\";\n                            }\n                            methodItem.result = JSON.parse(methodItem.result);\n                            console.log(\"aptos_signMessage result methodItem.result before:>>>>\", JSON.stringify(methodItem.result));\n                            if (methodItem.result && \"signature\" in methodItem.result) {\n                                let aptosSignature = methodItem.result.signature;\n                                if (aptosSignature && aptosSignature.startsWith(\"0x\")) {\n                                    aptosSignature = aptosSignature.slice(2, aptosSignature.length);\n                                    methodItem.result.signature = aptosSignature;\n                                }\n                            }\n                            console.log(\"aptos_signMessage result methodItem.result after:>>>>\", JSON.stringify(methodItem.result));\n                        }\n                        else if (methodItem.method === \"cosmos_signArbitrary\") {\n                            methodItem.result = JSON.parse(methodItem.result);\n                        }\n                        else if (methodItem.method == 'starknet_signMessage') {\n                            let results = methodItem.result;\n                            if (typeof results == 'string') {\n                                results = JSON.parse(results);\n                            }\n                            methodItem.result = [results[\"signedDataR\"], results[\"signedDataS\"]];\n                        }\n                    }\n                }\n            }\n            else if (requestParams && requestParams.length > 0) { //adapt old version\n                session.connectMethodsReply = [];\n                let notSupportError = new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                for (const requestItem of requestParams) {\n                    var errorItem = {\n                        method: requestItem.method,\n                        chainId: requestItem.chainId,\n                        error: {\n                            code: notSupportError.code,\n                            message: notSupportError.message\n                        },\n                    };\n                    session.connectMethodsReply.push(errorItem);\n                }\n            }\n        }\n        catch (error) {\n            (0, core_1.logDebug)(\"connectMethodsResponseUpdate connectMethodsReply Error:\", JSON.stringify(error));\n            throw error;\n        }\n    });\n}\nfunction connectMethodsToConnectWalletMethods(params, requireNameSpace) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods requestMethods:\", JSON.stringify(params));\n            const result = [];\n            //TODO  后面需要打开限制\n            // if (params && params.length>1){\n            //     throw new OKXConnectError(\n            //         OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR,\n            //         `connect requestMethods only support one data`\n            //     );\n            // }\n            if (!requireNameSpace && params && params.length > 0) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error , RequestMethods cannot be added when the NameSpace is empty`);\n            }\n            // check chianId\n            for (const methodItem of params) {\n                if (methodItem.method === \"aptos_signMessage\") { //update chainId\n                    if (methodItem.chainId === \"aptos:mainnet\") {\n                        methodItem.chainId = \"aptos:637\";\n                    }\n                    else if (methodItem.chainId === \"movement:testnet\") {\n                        methodItem.chainId = \"aptos:70000060\";\n                    }\n                }\n                // check chianId\n                if (methodItem.method === \"wallet_addEthereumChain\") {\n                    var includeEip155 = requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.namespace.includes(\"eip155\"));\n                    if (!includeEip155) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', the EVM chain needs to be included in the NameSpace`);\n                    }\n                }\n                else {\n                    const includeChain = !!(requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.chains.some(chain => chain.includes(`${methodItem.chainId}`))));\n                    if (!includeChain) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', NameSpace must contain '${methodItem.chainId}'`);\n                    }\n                }\n            }\n            for (const item of params) {\n                //TODO  后面需要打开限制\n                // if (!connectSupportMethods.includes(item.method)){\n                //     throw new OKXConnectError(\n                //         OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR,\n                //             `connect requestMethods not support method, method: '${item.method}'`\n                //     );\n                // }\n                if (item.method === \"wallet_addEthereumChain\") {\n                    if (Array.isArray(item.params)) {\n                        const paramsArr = item.params;\n                        if (paramsArr && paramsArr.length === 1) {\n                            const firstParam = paramsArr[0];\n                            if (isRecord(firstParam)) {\n                                item.params = firstParam;\n                            }\n                        }\n                        else if (paramsArr && paramsArr.length > 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params only support one data, method: '${item.method}'`);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is nil, method: '${item.method}'`);\n                        }\n                    }\n                }\n                else if (item.method === \"personal_sign\") {\n                    if (isArray(item.params)) {\n                        if (item.params && item.params.length !== 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params error,  method: '${item.method}' `);\n                        }\n                        let firstObj = item.params[0];\n                        if (firstObj && typeof firstObj === 'string') {\n                            item.params = {\n                                message: firstObj\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                }\n                else if (item.method === \"sui_signMessage\" || item.method === \"sui_signPersonalMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message) {\n                            (0, core_1.logDebug)(\"sui_signMessage item.params.message :\", item.params.message);\n                            let message = JSON.parse(JSON.stringify(item.params.message));\n                            let convertedArray = Object.values(message);\n                            let uint8Array = new Uint8Array(convertedArray);\n                            let decoder = new TextDecoder(\"utf8\");\n                            let b64encoded = btoa(decoder.decode(uint8Array));\n                            item.params.message = atob(b64encoded);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"solana_signMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            item.params[\"bs58Message\"] = bs58_1.default.encode((0, uint8array_extras_1.stringToUint8Array)(item.params.message));\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"aptos_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (item.chainId && (item.chainId === \"aptos:637\" || item.chainId === \"aptos:70000060\")) {\n                            var aptosParams = item.params;\n                            var currentURL = window.location.protocol + \"//\" + window.location.hostname;\n                            let signChainId = 1;\n                            if (item.chainId === \"aptos:637\") {\n                            }\n                            else if (item.chainId === \"aptos:70000060\") {\n                                signChainId = 2;\n                            }\n                            item.params = {\n                                data: aptosParams,\n                                applicationUrl: currentURL,\n                                prefix: \"APTOS\",\n                                aptosChainId: signChainId\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"cosmos_signArbitrary\") {\n                    if (isRecord(item.params)) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            const base64Encoded = (0, uint8array_extras_1.stringToBase64)(item.params.message);\n                            let cosmosChain = item.chainId.split(\":\")[1];\n                            if (cosmosChain) {\n                                item.params = {\n                                    chain_id: cosmosChain,\n                                    data: {\n                                        chain_id: \"\",\n                                        account_number: \"0\",\n                                        sequence: \"0\",\n                                        fee: {\n                                            gas: \"0\",\n                                            amount: []\n                                        },\n                                        msgs: [{\n                                                \"type\": \"sign/MsgSignData\",\n                                                \"value\": {\n                                                    \"signer\": \"\", //address\n                                                    \"data\": base64Encoded\n                                                }\n                                            }],\n                                        memo: \"\"\n                                    }\n                                };\n                            }\n                            else {\n                                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                            }\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params message is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method == \"tron_signMessage\" && 'message' in item.params) {\n                    if (item.params.message && typeof item.params.message === 'string') {\n                        item.params.message = stringToHex(item.params.message);\n                    }\n                }\n                else if (item.method == \"starknet_signMessage\") {\n                    /// do nothing\n                }\n                (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods item:\", JSON.stringify(item));\n                result.push(item);\n            }\n            return result;\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\nfunction stringToHex(str) {\n    let hex = '';\n    for (let i = 0; i < str.length; i++) {\n        hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n    }\n    return hex;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAccountsChains = getAccountsChains;\nexports.nameSpaceToConnectWalletNameSpace = nameSpaceToConnectWalletNameSpace;\nexports.fillParamsToSession = fillParamsToSession;\nexports.isCaipNamespace = isCaipNamespace;\nexports.parseNamespaceKey = parseNamespaceKey;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getAccountsChains(accounts) {\n    const chains = [];\n    accounts.forEach((account) => {\n        const [chain, chainId] = account.split(\":\");\n        chains.push(`${chain}:${chainId}`);\n    });\n    return chains;\n}\nfunction nameSpaceToConnectWalletNameSpace(namespaces) {\n    var result = [];\n    if (!namespaces) {\n        return result;\n    }\n    Object.keys(namespaces).forEach((key) => {\n        if (key === core_1.NameSpaceKeyEip155 || key === core_1.NameSpaceKeySOL || key === core_1.NameSpaceKeySui || key === core_1.NameSpaceKeyAptos\n            || key == core_1.NameSpaceKeyBtc || key === core_1.NameSpaceKeyTON || key === core_1.NameSpaceKeyCosmos || key === core_1.NameSpaceKeyTron || key === core_1.NameSpaceKeyStarknet) {\n            if (namespaces[key].chains) {\n                result.push({\n                    namespace: key,\n                    chains: namespaces[key].chains,\n                    params: namespaces[key].params\n                });\n            }\n        }\n    });\n    return result;\n}\nfunction fillParamsToSession(session, namespaces, optionalNamespaces, sessionConfig) {\n    // Helper function to merge rpcMaps\n    const mergeRpcMap = (targetRpcMap, sourceRpcMap) => {\n        Object.assign(targetRpcMap, sourceRpcMap);\n    };\n    // Merge function for namespaces\n    const mergeNamespaces = (target, source) => {\n        for (const key in source) {\n            if (source.hasOwnProperty(key) && source[key].rpcMap) {\n                if (source[key].rpcMap) {\n                    if (!target[key].rpcMap) {\n                        target[key].rpcMap = {};\n                    }\n                    // 合并 rpcMap\n                    mergeRpcMap(target[key].rpcMap, source[key].rpcMap);\n                }\n                if (source[key].defaultChain && target[key].defaultChain === undefined) {\n                    //defaultChain need in session nameSpace\n                    if (target[key].chains.some(chain => chain.split(\":\")[1] === source[key].defaultChain)) {\n                        target[key].defaultChain = source[key].defaultChain;\n                    }\n                }\n            }\n        }\n    };\n    // 合并 namespaces\n    if (namespaces) {\n        mergeNamespaces(session.namespaces, namespaces);\n    }\n    // 合并 optionalNamespaces\n    if (optionalNamespaces) {\n        mergeNamespaces(session.namespaces, optionalNamespaces);\n    }\n    session.sessionConfig = sessionConfig;\n}\n/**\n * util designed for Wallets that builds namespaces structure by provided supported chains, methods, events & accounts.\n * It takes required & optional namespaces provided in the session proposal\n * along with the supported chains/methods/events/accounts by the wallet and returns a structured namespaces object\n * @param {BuildApprovedNamespacesParams} params\n * @returns {SessionTypes.Namespaces}\n */\n// export function buildApprovedNamespaces(\n//   params: BuildApprovedNamespacesParams,\n// ): SessionTypes.Namespaces {\n//   const {\n//     proposal: { requiredNamespaces, optionalNamespaces = {} },\n//     supportedNamespaces,\n//   } = params;\n//   const normalizedRequired = normalizeNamespaces(requiredNamespaces);\n//   const normalizedOptional = normalizeNamespaces(optionalNamespaces);\n//\n//   // build approved namespaces\n//   const namespaces = {};\n//   Object.keys(supportedNamespaces).forEach((namespace) => {\n//     const supportedChains = supportedNamespaces[namespace].chains;\n//     const supportedMethods = supportedNamespaces[namespace].methods;\n//     const supportedEvents = supportedNamespaces[namespace].events;\n//     const supportedAccounts = supportedNamespaces[namespace].accounts;\n//\n//     supportedChains.forEach((chain) => {\n//       if (!supportedAccounts.some((account) => account.includes(chain))) {\n//         throw new Error(`No accounts provided for chain ${chain} in namespace ${namespace}`);\n//       }\n//     });\n//\n//     namespaces[namespace] = {\n//       chains: supportedChains,\n//       methods: supportedMethods,\n//       events: supportedEvents,\n//       accounts: supportedAccounts,\n//     };\n//   });\n//\n//   // verify all required namespaces are supported\n//   const err = isConformingNamespaces(requiredNamespaces, namespaces, \"approve()\");\n//   if (err) throw new Error(err.message);\n//\n//   const approvedNamespaces = {};\n//\n//   // if both required & optional namespaces are empty, return all supported namespaces by the wallet\n//   if (!Object.keys(requiredNamespaces).length && !Object.keys(optionalNamespaces).length)\n//     return namespaces;\n//\n//   // assign accounts for the required namespaces\n//   Object.keys(normalizedRequired).forEach((requiredNamespace) => {\n//     const chains = supportedNamespaces[requiredNamespace].chains.filter((chain) =>\n//       normalizedRequired[requiredNamespace]?.chains?.includes(chain),\n//     );\n//     const methods = supportedNamespaces[requiredNamespace].methods.filter((method) =>\n//       normalizedRequired[requiredNamespace]?.methods?.includes(method),\n//     );\n//     const events = supportedNamespaces[requiredNamespace].events.filter((event) =>\n//       normalizedRequired[requiredNamespace]?.events?.includes(event),\n//     );\n//\n//     const accounts = chains\n//       .map((chain: string) =>\n//         supportedNamespaces[requiredNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[requiredNamespace] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   });\n//\n//   // add optional namespaces\n//   Object.keys(normalizedOptional).forEach((optionalNamespace) => {\n//     if (!supportedNamespaces[optionalNamespace]) return;\n//\n//     const chainsToAdd = normalizedOptional[optionalNamespace]?.chains?.filter((chain) =>\n//       supportedNamespaces[optionalNamespace].chains.includes(chain),\n//     );\n//     const methodsToAdd = supportedNamespaces[optionalNamespace].methods.filter((method) =>\n//       normalizedOptional[optionalNamespace]?.methods?.includes(method),\n//     );\n//     const eventsToAdd = supportedNamespaces[optionalNamespace].events.filter((event) =>\n//       normalizedOptional[optionalNamespace]?.events?.includes(event),\n//     );\n//\n//     const accountsToAdd = chainsToAdd\n//       ?.map((chain: string) =>\n//         supportedNamespaces[optionalNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[optionalNamespace] = {\n//       chains: mergeArrays(approvedNamespaces[optionalNamespace]?.chains, chainsToAdd),\n//       methods: mergeArrays(approvedNamespaces[optionalNamespace]?.methods, methodsToAdd),\n//       events: mergeArrays(approvedNamespaces[optionalNamespace]?.events, eventsToAdd),\n//       accounts: mergeArrays(approvedNamespaces[optionalNamespace]?.accounts, accountsToAdd),\n//     };\n//   });\n//\n//   return approvedNamespaces;\n// }\nfunction isCaipNamespace(namespace) {\n    return namespace.includes(\":\");\n}\nfunction parseNamespaceKey(namespace) {\n    return isCaipNamespace(namespace) ? namespace.split(\":\")[0] : namespace;\n}\n/**\n * Converts\n * ```\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * ```\n * into\n * ```\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *```\n */\n// export function normalizeNamespaces(\n//   namespaces: ProposalTypes.RequiredNamespaces,\n// ): ProposalTypes.RequiredNamespaces {\n//   const normalizedNamespaces = {} as ProposalTypes.RequiredNamespaces;\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       methods: mergeArrays(methods, normalizedNamespaces[normalizedKey]?.methods),\n//       events: mergeArrays(events, normalizedNamespaces[normalizedKey]?.events),\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n// export function getNamespacesFromAccounts(accounts: string[]) {\n//   const namespaces = {};\n//   accounts?.forEach((account) => {\n//     const [namespace, chainId] = account.split(\":\");\n//     if (!namespaces[namespace]) {\n//       namespaces[namespace] = {\n//         accounts: [],\n//         chains: [],\n//         events: [],\n//       };\n//     }\n//     namespaces[namespace].accounts.push(account);\n//     namespaces[namespace].chains.push(`${namespace}:${chainId}`);\n//   });\n//\n//   return namespaces;\n// }\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PROVIDER_EVENTS = void 0;\nexports.PROVIDER_EVENTS = {\n    DEFAULT_CHAIN_CHANGED: \"default_chain_changed\",\n    UPDATE_NAMESPACES: \"update_name_spaces\",\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./values\"), exports);\n__exportStar(require(\"./events\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GENERIC_SUBPROVIDER_NAME = exports.RPC_URL = exports.STORAGE = exports.CONTEXT = exports.WC_VERSION = exports.PROTOCOL = exports.RELAY_URL = exports.LOGGER = void 0;\nexports.LOGGER = \"error\";\nexports.RELAY_URL = \"wss://relay.walletconnect.com\";\nexports.PROTOCOL = \"wc\";\nexports.WC_VERSION = 2;\nexports.CONTEXT = \"universal_provider\";\nexports.STORAGE = `${exports.PROTOCOL}@${exports.WC_VERSION}:${exports.CONTEXT}:`;\nexports.RPC_URL = \"https://rpc.walletconnect.com/v1/\";\nexports.GENERIC_SUBPROVIDER_NAME = \"generic\";\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass AptosProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"aptos\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"solana request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"solana provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = AptosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass BtcProvider {\n    constructor(opts, name, client, events) {\n        this.name = core_1.NameSpaceKeyBtc;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"btc request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"btc provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = BtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass CosmosProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyCosmos;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"cosmos request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"cosmos provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = CosmosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Eip155Provider = void 0;\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nclass Eip155Provider {\n    constructor(opts, client, events) {\n        this.name = \"eip155\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = parseInt(this.getDefaultChain());\n        // rpc\n        this.httpProviders = this.createHttpProviders();\n        (0, core_1.logDebug)(\"eip155 constructor --opts.namespace-->\", opts.namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    isArray(value) {\n        return typeof value === \"object\" && value !== null && Array.isArray(value);\n    }\n    updateRequestParams(args) {\n        let isDic = args.params && typeof args.params === 'object' && !Array.isArray(args.params);\n        if (args.method === 'wallet_switchEthereumChain') {\n            const switchChainId = args.chainId.split(\":\")[1];\n            // const hexChainId = parseInt(switchChainId, 16);\n            const decimalNumber = parseInt(switchChainId, 10);\n            if (isNaN(decimalNumber)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid decimal number,  chainId: '${switchChainId}' `);\n            }\n            if (!args.params) {\n                args.params = { chainId: '0x' + decimalNumber.toString(16) };\n            }\n            else if (isDic) { //为 Record<string, unknown>\n                let params = args.params;\n                if (!('chainId' in params)) {\n                    params['chainId'] = '0x' + decimalNumber.toString(16);\n                    args.params = params;\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params error ,  method: '${args.method}' `);\n            }\n        }\n        else if (args.method === 'personal_sign'\n            || args.method === 'eth_signTypedData_v4'\n            || args.method === 'eth_sendTransaction'\n            || args.method === 'wallet_watchAsset') {\n            if (!args.params) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params is nil, method: '${args.method}'`);\n            }\n            if (this.isRecord(args.params)) {\n                let params = args.params;\n                (0, core_1.logDebug)(\"eip155 updateRequestParams params>\", JSON.stringify(params));\n                if ('chainId' in params) {\n                    const selectedChainId = args.chainId.split(\":\")[1];\n                    const chainNum = parseInt(selectedChainId, 10);\n                    let paramsChainString = String(params.chainId);\n                    let paramsChainId;\n                    if (paramsChainString.startsWith(this.name) && args.chainId === paramsChainString) { //为\n                        paramsChainId = chainNum;\n                    }\n                    else if (paramsChainString.startsWith(\"0x\")) {\n                        paramsChainId = parseInt(paramsChainString, 16);\n                    }\n                    else if (!isNaN(Number(paramsChainString))) { //数字\n                        paramsChainId = parseInt(paramsChainString, 10);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid params.chainId format, method: '${args.method}'`);\n                    }\n                    if (chainNum !== paramsChainId) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params.chainId not equal chain,  method: '${args.method}' `);\n                    }\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid request params type, method: '${args.method}'`);\n            }\n        }\n    }\n    //adapt array\n    adaptArray(args) {\n        if (args.method === 'wallet_switchEthereumChain'\n            || args.method === 'wallet_addEthereumChain'\n            || args.method === 'wallet_watchAsset'\n            || args.method === 'eth_sendTransaction') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr) {\n                    if (paramsArr.length === 1) {\n                        let firstParam = args.params[0];\n                        if (this.isRecord(firstParam)) {\n                            args.params = firstParam;\n                        }\n                    }\n                    else if (paramsArr.length > 1) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                    }\n                }\n            }\n        }\n        else if (args.method === 'eth_signTypedData_v4') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr && paramsArr.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                }\n                else if (paramsArr && paramsArr.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let messageObj = {};\n                if (paramsArr && paramsArr.length === 2) {\n                    let addressObj = args.params[0]; //address\n                    if (addressObj && typeof addressObj === 'string') { //check address\n                        let isEqual = false;\n                        this.namespace.accounts.forEach((chain) => {\n                            let chainAddress = chain.split(':')[2];\n                            if (chainAddress.toLowerCase() === addressObj.toLowerCase()) {\n                                isEqual = true;\n                            }\n                        });\n                        (0, core_1.logDebug)(\"eip155 adaptArray eth_signTypedData_v4 >>>isEqual: \", isEqual);\n                        if (!isEqual) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error, not equal,  method: '${args.method}' `);\n                        }\n                        if (this.isRecord(args.params[1])) {\n                            messageObj = args.params[1];\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error , not string,  method: '${args.method}' `);\n                    }\n                }\n                else if (paramsArr && paramsArr.length === 1) {\n                    if (this.isRecord(args.params[0])) {\n                        messageObj = args.params[0];\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                    }\n                }\n                try {\n                    let messages = JSON.stringify(messageObj);\n                    args.params = {\n                        typedDataJson: messages\n                    };\n                }\n                catch (err) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params call JSON.stringify() failed,  method: '${args.method}' `);\n                }\n            }\n        }\n        else if (args.method === 'personal_sign') {\n            if (this.isArray(args.params)) {\n                if (args.params && args.params.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params error,  method: '${args.method}' `);\n                }\n                else if (args.params && args.params.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let firstObj = args.params[0];\n                let secondObj = args.params[1];\n                if (secondObj && typeof secondObj === 'string') { //check address\n                    let isEqual = false;\n                    this.namespace.accounts.forEach((chain) => {\n                        let chainAddress = chain.split(':')[2];\n                        if (chainAddress.toLowerCase() === secondObj.toLowerCase()) {\n                            isEqual = true;\n                        }\n                    });\n                    (0, core_1.logDebug)(\"eip155 adaptArray personal_sign >>>isEqual: \", isEqual);\n                    if (!isEqual) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error,  method: '${args.method}' `);\n                    }\n                }\n                if (firstObj && typeof firstObj === 'string') {\n                    args.params = {\n                        message: firstObj\n                    };\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is error,  method: '${args.method}' `);\n                }\n            }\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"eth_requestAccounts\":\n            case \"eth_accounts\":\n            case \"eth_chainId\":\n                return false;\n            case \"eth_sendTransaction\":\n            case \"eth_signTransaction\":\n            case \"eth_sign\":\n            case \"personal_sign\":\n            case \"eth_signTypedData\":\n            case \"wallet_addEthereumChain\":\n            case \"wallet_watchAsset\":\n            case \"eth_signTypedData_v4\":\n                return true;\n            case \"wallet_switchEthereumChain\": {\n                this.adaptArray(args);\n                this.updateRequestParams(args);\n                const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n                return !this.isChainApproved(parsedChainId);\n            }\n            default:\n                return false;\n        }\n        return false;\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.adaptArray(args);\n            (0, core_1.logDebug)(\"eip155 request --args--string>\", JSON.stringify(args));\n            this.updateRequestParams(args);\n            (0, core_1.logDebug)(\"eip155 request --params--string>\", JSON.stringify(args));\n            switch (args.method) {\n                case \"eth_requestAccounts\":\n                    return this.getAccounts();\n                case \"eth_accounts\":\n                    return this.getAccounts();\n                case \"eth_chainId\":\n                    return parseInt(this.getDefaultChain());\n                case \"wallet_switchEthereumChain\": {\n                    return (yield this.handleSwitchChain(args));\n                }\n                case \"wallet_addEthereumChain\":\n                    return this.addEthereumChain(args);\n                default:\n                    break;\n            }\n            if (this.namespace.methods.includes(args.method)) {\n                // personal_sign\n                // eth_signTypedData_v4\n                // eth_sendTransaction\n                // wallet_watchAsset\n                try {\n                    const response = yield this.client.request(args);\n                    (0, core_1.logDebug)(\"eip155 request --response----string>\", JSON.stringify(response));\n                    if (this.isRecord(response)) {\n                        if ('result' in response) {\n                            let result = response.result;\n                            if (result && typeof result === 'string' && (result === \"true\" || result === \"false\")) {\n                                (0, core_1.logDebug)(\"eip155 request --wallet_watchAsset>>>>\", result === \"true\");\n                                return (result === \"true\");\n                            }\n                            return response.result;\n                        }\n                    }\n                    return response;\n                }\n                catch (e) {\n                    (0, core_1.logDebug)(`eip155 request --response --error--string> e instanceof OKXConnectError ${e instanceof core_1.OKXConnectError}`, JSON.stringify(e));\n                    throw e;\n                }\n            }\n            else {\n                (0, core_1.logDebug)('[RPC] request begin');\n                return yield this.getHttpProvider().request(args);\n            }\n        });\n    }\n    addEthereumChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let resultData = (yield this.client.request(args));\n            try {\n                if ('result' in resultData) {\n                    let successData = resultData;\n                    let account = resultData.result;\n                    if (account) {\n                        const nameSpace = account.split(\":\")[0];\n                        const chainId = account.split(\":\")[1];\n                        const chain = nameSpace + ':' + chainId;\n                        let newNameSpace = this.namespace;\n                        this.namespace.accounts.push(account);\n                        this.namespace.chains.push(chain);\n                        if (this.isRecord(args.params)) {\n                            if (\"rpcUrls\" in args.params) {\n                                let rpcUrls = args.params.rpcUrls;\n                                let rpcUrl = rpcUrls ? rpcUrls[0] : undefined;\n                                if (rpcUrl) {\n                                    if (this.namespace.rpcMap) {\n                                        this.namespace.rpcMap[chainId] = rpcUrl;\n                                    }\n                                    else {\n                                        this.namespace.rpcMap = {\n                                            [chainId]: rpcUrl\n                                        };\n                                    }\n                                    this.setHttpProvider(chainId, rpcUrl);\n                                }\n                            }\n                        }\n                        this.events.emit(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, {\n                            eip155: this.namespace\n                        });\n                    }\n                }\n                else {\n                    new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request error`);\n                }\n            }\n            catch (error) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request  error`);\n            }\n            return null;\n        });\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        this.chainId = parseInt(chainId);\n        // set rpc\n        if (!this.httpProviders[chainId]) {\n            const rpc = rpcUrl || (0, utils_1.getRpcUrl)(`${this.name}:${chainId}`, this.namespace);\n            if (!rpc) {\n                // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n                (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            }\n            else {\n                this.setHttpProvider(chainId, rpc);\n            }\n        }\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId.toString();\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // ---------- Private ----------------------------------------------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"eip155 getAccounts \", accounts, this.chainId);\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    getHexChainIdFromRequest(args) {\n        let params = args.params;\n        let hexChainId = \"0x0\";\n        if (params && \"chainId\" in params) {\n            hexChainId = params.chainId;\n        }\n        hexChainId = hexChainId.startsWith(\"0x\") ? hexChainId : `0x${hexChainId}`;\n        (0, core_1.logDebug)(\"handleSwitchChain -->args \", args);\n        (0, core_1.logDebug)(\"handleSwitchChain -->hexChainId \", hexChainId);\n        const parsedChainId = parseInt(hexChainId, 16);\n        (0, core_1.logDebug)(\"handleSwitchChain -->parsedChainId \", parsedChainId);\n        return { parsedChainId, hexChainId };\n    }\n    handleSwitchChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n            if (this.isChainApproved(parsedChainId)) {\n                this.setDefaultChain(`${parsedChainId}`);\n            }\n            else {\n                const resultData = (yield this.client.request({\n                    method: \"wallet_switchEthereumChain\",\n                    chainId: args.chainId,\n                    params: {\n                        chainId: hexChainId,\n                    },\n                }));\n                try {\n                    if ('result' in resultData) {\n                        let successData = resultData;\n                        let account = resultData.result;\n                        if (account) {\n                            const nameSpace = account.split(\":\")[0];\n                            const chainId = account.split(\":\")[1];\n                            const chain = nameSpace + ':' + chainId;\n                            let newNameSpace = this.namespace;\n                            this.namespace.accounts.push(account);\n                            this.namespace.chains.push(chain);\n                            (0, core_1.logDebug)(\"handleSwitchChain -->wallet_switchEthereumChain \", resultData);\n                            this.setDefaultChain(`${parsedChainId}`);\n                            this.events.emit(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, {\n                                eip155: this.namespace\n                            });\n                        }\n                    }\n                    else {\n                        new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request error`);\n                    }\n                }\n                catch (error) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request  error`);\n                }\n            }\n            return null;\n        });\n    }\n    isChainApproved(chainId) {\n        return this.namespace.chains.includes(`${this.name}:${chainId}`);\n    }\n    // rpc\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            //   throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            (0, core_1.logDebug)('get parsed chain and rpc:', parsedChainId, parsedRpc);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        (0, core_1.logDebug)('get http providermap:', http);\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n}\nexports.Eip155Provider = Eip155Provider;\nexports.default = Eip155Provider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcConnection = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\n// Source: https://nodejs.org/api/events.html#emittersetmaxlistenersn\nconst EVENT_EMITTER_MAX_LISTENERS_DEFAULT = 10;\nclass JsonRpcConnection {\n    constructor(url, disableProviderPing = false) {\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n        this.events = new eventemitter3_1.EventEmitter();\n        this.isAvailable = false;\n        this.registering = false;\n        if (!(0, core_2.isHttpUrl)(url)) {\n            throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n        }\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n    }\n    get connected() {\n        return this.isAvailable;\n    }\n    get connecting() {\n        return this.registering;\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            yield this.register(url);\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                throw new Error(\"Connection already closed\");\n            }\n            this.onClose();\n        });\n    }\n    send(payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                yield this.register();\n            }\n            try {\n                const body = (0, core_1.safeJsonStringify)(payload);\n                const res = yield (0, cross_fetch_1.default)(this.url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                const data = yield res.json();\n                this.onPayload({ data });\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    register() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (!(0, core_2.isHttpUrl)(url)) {\n                throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n            }\n            if (this.registering) {\n                return new Promise((resolve, reject) => {\n                    this.events.once(\"register_error\", (error) => {\n                        reject(error);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.isAvailable === \"undefined\") {\n                            return reject(new Error(\"HTTP connection is missing or invalid\"));\n                        }\n                        resolve();\n                    });\n                });\n            }\n            this.url = url;\n            this.registering = true;\n            try {\n                if (!this.disableProviderPing) {\n                    const body = (0, core_1.safeJsonStringify)({ id: 1, jsonrpc: \"2.0\", method: \"test\", params: [] });\n                    yield (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                }\n                this.onOpen();\n            }\n            catch (e) {\n                const error = this.parseError(e);\n                this.events.emit(\"register_error\", error);\n                this.onClose();\n                throw error;\n            }\n        });\n    }\n    onOpen() {\n        this.isAvailable = true;\n        this.registering = false;\n        this.events.emit(\"open\");\n    }\n    onClose() {\n        this.isAvailable = false;\n        this.registering = false;\n        this.events.emit(\"close\");\n    }\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        const payload = typeof e.data === \"string\" ? (0, core_1.safeJsonParse)(e.data) : e.data;\n        this.events.emit(\"payload\", payload);\n    }\n    onError(id, e) {\n        const error = this.parseError(e);\n        const message = error.message || error.toString();\n        const payload = (0, core_2.formatJsonRpcError)(id, message);\n        this.events.emit(\"payload\", payload);\n    }\n    parseError(e, url = this.url) {\n        return (0, core_2.parseConnectionError)(e, url, \"HTTP\");\n    }\n}\nexports.JsonRpcConnection = JsonRpcConnection;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcProvider = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst types_1 = require(\"../../types\");\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nclass JsonRpcProvider extends types_1.IJSONRpcProvider {\n    constructor(connection) {\n        super(connection);\n        this.events = new eventemitter3_1.EventEmitter();\n        this.connected = false;\n        this.connecting = false;\n        this.hasRegisteredEventListeners = false;\n        this.connection = this.setConnection(connection);\n        if (this.connection.connected) {\n            this.registerEventListeners();\n        }\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            yield this.open(connection);\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.close();\n        });\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    request(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.requestStrict((0, core_1.formatJsonRpcRequest)(request.method, request.params || [], (0, core_1.getBigIntRpcId)().toString()), // casting to any is required in order to use BigInt as rpcId\n            context);\n        });\n    }\n    // ---------- Protected ----------------------------------------------- //\n    requestStrict(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.connection.connected) {\n                    try {\n                        yield this.open();\n                    }\n                    catch (e) {\n                        reject(e);\n                    }\n                }\n                this.events.on(`${request.id}`, (response) => {\n                    if ((0, core_1.isJsonRpcError)(response)) {\n                        reject(response.error);\n                    }\n                    else {\n                        resolve(response.result);\n                    }\n                });\n                try {\n                    (0, core_2.logDebug)('[RPC] >>> send request', request, context);\n                    yield this.connection.send(request, context);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }));\n        });\n    }\n    setConnection(connection = this.connection) {\n        return connection;\n    }\n    onPayload(payload) {\n        this.events.emit(\"payload\", payload);\n        if ((0, core_1.isJsonRpcResponse)(payload)) {\n            this.events.emit(`${payload.id}`, payload);\n        }\n        else {\n            this.events.emit(\"message\", {\n                type: payload.method,\n                data: payload.params,\n            });\n        }\n    }\n    onClose(event) {\n        // Code 3000 indicates an abnormal closure signalled by the relay -> emit an error in this case.\n        if (event && event.code === 3000) {\n            this.events.emit(\"error\", new Error(`WebSocket connection closed abnormally with code: ${event.code} ${event.reason ? `(${event.reason})` : \"\"}`));\n        }\n        this.events.emit(\"disconnect\");\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            if (this.connection === connection && this.connection.connected)\n                return;\n            if (this.connection.connected)\n                this.close();\n            if (typeof connection === \"string\") {\n                yield this.connection.open(connection);\n                connection = this.connection;\n            }\n            this.connection = this.setConnection(connection);\n            yield this.connection.open();\n            this.registerEventListeners();\n            this.events.emit(\"connect\");\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.connection.close();\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    registerEventListeners() {\n        if (this.hasRegisteredEventListeners)\n            return;\n        this.connection.on(\"payload\", (payload) => this.onPayload(payload));\n        this.connection.on(\"close\", (event) => this.onClose(event));\n        this.connection.on(\"error\", (error) => this.events.emit(\"error\", error));\n        this.connection.on(\"register_error\", (_error) => this.onClose());\n        this.hasRegisteredEventListeners = true;\n    }\n}\nexports.JsonRpcProvider = JsonRpcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolanaProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SolanaProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"solana\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"solana request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"solana provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    //   {\n    //     \"chains\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\" ],\n    //     \"accounts\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp:F7wnJc5wiBGy1k87jv6gyNwE3jMEWd18oTQiYsF1xVG7\"],\n    //     \"methods\": [\n    //         \"solana_signTransaction\",\n    //         \"solana_signMessage\"\n    //     ],\n    //     \"defaultChain\": \"5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\"\n    // }\n    // TODO:确认上面的defaultChain是否正确（没有solana前缀）\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"solana\"))) {\n                chainId = `solana:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.SolanaProvider = SolanaProvider;\nexports.default = SolanaProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass StarknetProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"starknet\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"solana request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"solana provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = StarknetProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuiProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SuiProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeySui;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"sui request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"sui provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"sui\"))) {\n                chainId = `sui:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"sui_signMessage\":\n            case \"sui_signPersonalMessage\":\n            case \"sui_signTransactionBlock\":\n            case \"sui_signAndExecuteTransactionBlock\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.SuiProvider = SuiProvider;\nexports.default = SuiProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TONProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTON;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            (0, core_1.logDebug)(\"TONProvider request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"TONProvider request provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                if (!args.params) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params is nil\");\n                }\n                if (this.isRecord(args.params)) {\n                    const _e = args.params, { validUntil } = _e, newParams = __rest(_e, [\"validUntil\"]);\n                    let fromAddress = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n                    if ('from' in newParams) {\n                        fromAddress = newParams.from || ((_d = (_c = this.namespace.payload) === null || _c === void 0 ? void 0 : _c.ton_addr) === null || _d === void 0 ? void 0 : _d.address);\n                    }\n                    args.params['from'] = fromAddress;\n                    args.params['network'] = this.getDefaultChain();\n                    args.params['valid_until'] = validUntil;\n                    let response = yield this.client.request(args);\n                    if (this.isRecord(response) && 'result' in response) {\n                        const result = {\n                            boc: response.result.toString()\n                        };\n                        (0, core_1.logDebug)(\"TONProvider request provider response: \", JSON.stringify(response));\n                        (0, core_1.logDebug)(\"TONProvider request provider result: \", JSON.stringify(result));\n                        return result;\n                    }\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton_send request response is nil\");\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params type add nil\");\n                }\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        var _a, _b;\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"ton getAccounts accounts :\", accounts);\n        (0, core_1.logDebug)(\"ton getAccounts .namespace :\", JSON.stringify(this.namespace));\n        if (!accounts) {\n            return [];\n        }\n        let address = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n        (0, core_1.logDebug)(\"ton getAccounts address :\", address);\n        if (address) {\n            return [\n                address\n            ];\n        }\n        return [];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"ton_sendTransaction\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.default = TONProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TronProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTron;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"tron request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"tron provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = TronProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./providers\"), exports);\n__exportStar(require(\"./misc\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IJSONRpcProvider = exports.IJSONRpcConnection = void 0;\nclass IJSONRpcConnection {\n}\nexports.IJSONRpcConnection = IJSONRpcConnection;\nclass IJSONRpcProvider {\n    constructor(opt) {\n    }\n}\nexports.IJSONRpcProvider = IJSONRpcProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setGlobal = exports.getGlobal = void 0;\nconst globals = {};\nconst getGlobal = (key) => {\n    return globals[key];\n};\nexports.getGlobal = getGlobal;\nconst setGlobal = (key, value) => {\n    globals[key] = value;\n};\nexports.setGlobal = setGlobal;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./misc\"), exports);\n__exportStar(require(\"./globals\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRpcUrl = getRpcUrl;\nexports.getChainId = getChainId;\nexports.convertChainIdToNumber = convertChainIdToNumber;\nexports.parseChainId = parseChainId;\nexports.mergeArrays = mergeArrays;\nfunction getRpcUrl(chainId, rpc, projectId) {\n    var _a;\n    const chain = parseChainId(chainId);\n    // no default\n    return (((_a = rpc.rpcMap) === null || _a === void 0 ? void 0 : _a[chain.reference]) ||\n        ``);\n}\nfunction getChainId(chain) {\n    return chain.includes(\":\") ? chain.split(\":\")[1] : chain;\n}\n// export function validateChainApproval(chain: string, chains: string[]): void {\n//   if (!chains.includes(chain)) {\n//     throw new Error(\n//       `Chain '${chain}' not approved. Please use one of the following: ${chains.toString()}`,\n//     );\n//   }\n// }\n// export function getChainsFromApprovedSession(accounts: string[]): string[] {\n//   return accounts.map((address) => `${address.split(\":\")[0]}:${address.split(\":\")[1]}`);\n// }\n// export function getAccountsFromSession(namespace: string, session: SessionTypes.Struct): string[] {\n//   // match namespaces e.g. eip155 with eip155:1\n//   const matchedNamespaceKeys = Object.keys(session.namespaces).filter((key) =>\n//     key.includes(namespace),\n//   );\n//   if (!matchedNamespaceKeys.length) return [];\n//   const accounts: string[] = [];\n//   matchedNamespaceKeys.forEach((key) => {\n//     const accountsForNamespace = session.namespaces[key].accounts;\n//     accounts.push(...accountsForNamespace);\n//   });\n//   return accounts;\n// }\n// export function mergeRequiredOptionalNamespaces(\n//   required: NamespaceConfig = {},\n//   optional: NamespaceConfig = {},\n// ){\n//   const requiredNamespaces = normalizeNamespaces(required);\n//   const optionalNamespaces = normalizeNamespaces(optional);\n//    return merge.merge(requiredNamespaces,optionalNamespaces)\n// }\n/**\n * Converts\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * into\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *\n */\n// export function normalizeNamespaces(namespaces: NamespaceConfig): NamespaceConfig {\n//   const normalizedNamespaces: NamespaceConfig = {};\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const rpcMap = values.rpcMap || {};\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       ...values,\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       rpcMap: { ...rpcMap, ...normalizedNamespaces[normalizedKey]?.rpcMap },\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n//\n// export function parseCaip10Account(caip10Account: string): string {\n//   return caip10Account.includes(\":\") ? caip10Account.split(\":\")[2] : caip10Account;\n// }\n/**\n * Populates the chains array for each namespace with the chains extracted from the accounts if are otherwise missing\n */\n// export function populateNamespacesChains(\n//   namespaces: SessionTypes.Namespaces,\n// ): Record<string, SessionTypes.Namespace> {\n//   const parsedNamespaces: Record<string, SessionTypes.Namespace> = {};\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const accounts = values.accounts || [];\n//     // If the key includes a CAIP separator `:` we know it's a namespace + chainId (e.g. `eip155:1`)\n//     const chains = isCaipNamespace(key)\n//       ? [key]\n//       : values.chains\n//       ? values.chains\n//       : getChainsFromApprovedSession(values.accounts);\n//     parsedNamespaces[key] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   }\n//   return parsedNamespaces;\n// }\nfunction convertChainIdToNumber(chainId) {\n    if (typeof chainId === \"number\")\n        return chainId;\n    if (chainId.includes(\"0x\")) {\n        return parseInt(chainId, 16);\n    }\n    chainId = chainId.includes(\":\") ? chainId.split(\":\")[1] : chainId;\n    return isNaN(Number(chainId)) ? chainId : Number(chainId);\n}\nconst CAIP_DELIMITER = \":\";\nfunction parseChainId(chain) {\n    const [namespace, reference] = chain.split(CAIP_DELIMITER);\n    return { namespace, reference };\n}\nfunction mergeArrays(a = [], b = []) {\n    return [...new Set([...a, ...b])];\n}\n","<template>\n  <div id=\"app\">\n    <el-container>\n      <el-header>OKX Connect</el-header>\n      <el-main>\n        <!-- 钱包信息 -->\n        <el-card class=\"wallet-info\">\n          <template #header>\n            <div>Wallet Info</div>\n          </template>\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Wallet Address:</strong> {{ getWalletAddress }}\n            </el-col>\n          </el-row>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Status :</strong> {{ currentStatus }}\n            </el-col>\n          </el-row>\n\n          <!--          <el-row class=\"info-row\">-->\n          <!--            <el-col :span=\"24\">-->\n          <!--              <strong>Universal Link:</strong> {{ updateUniLink }}-->\n          <!--            </el-col>-->\n          <!--          </el-row>-->\n        </el-card>\n\n        <!-- 连接钱包 -->\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div>Actions</div>\n          </template>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <el-checkbox v-model=\"withUI\" @change=\"handleWithUI\">\n                show UI</el-checkbox>\n            </el-col>\n          </el-row>\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Modals</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"modals\" placeholder=\"Modals\" @change=\"handleModalsSelect\" multiple>\n                <el-option label=\"Before\" value=\"before\" />\n                <el-option label=\"Success\" value=\"success\" />\n                <el-option label=\"Error\" value=\"error\" />\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center; justify-content: space-between;\">\n            <el-col :span=\"4\" style=\"gap: 2px\">\n              <p style=\"font-size: 11pt; margin: 0px\">Return Strategy</p>\n              <p style=\"font-size: 9pt; margin: 0px\">(Mobile only)</p>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-select\n                v-model=\"returnStrategy\"\n                @change=\"handleReturnStrategySelect\"\n                placeholder=\"Return Strategy\"\n              >\n                <el-option\n                  v-for=\"strategy in returnStrategies\"\n                  :key=\"`return-strategy-select-option-${strategy}`\"\n                  :label=\"strategy\"\n                  :value=\"strategy\"\n                />\n              </el-select>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-input\n                v-if=\"returnStrategy === 'deeplink'\"\n                v-model=\"deeplink\"\n                @change=\"handleReturnStrategyDeeplink\"\n                placeholder=\"Deeplink\"\n                :disabled=\"returnStrategy !== 'deeplink'\"\n                style=\"margin: 0px\"\n              />\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Language</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"language\" @change=\"handleLanguageSelect\" placeholder=\"Language\">\n                <el-option v-for=\"locale in locales\" :key=\"`language-select-option-${locale}`\" :label=\"locale\"\n                  :value=\"locale\" />\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Theme</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"theme\" @change=\"handleThemeSelect\" placeholder=\"Theme\">\n                <el-option label=\"LIGHT\" :value=\"THEME.LIGHT\" />\n                <el-option label=\"DARK\" :value=\"THEME.DARK\" />\n              </el-select>\n            </el-col>\n          </el-row>\n\n<!--          <el-row style=\"align-items: center\">-->\n<!--            <el-col :span=\"4\">-->\n<!--              <p style=\"font-size: 11pt\">Connect</p>-->\n<!--              <p style=\"font-size: 11pt\">Methods</p>-->\n<!--            </el-col>-->\n<!--            <el-col :span=\"20\">-->\n<!--              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" placeholder=\"Methods\">-->\n<!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n<!--                           :value=\"methods\" />-->\n\n<!--              </el-select>-->\n<!--            </el-col>-->\n<!--          </el-row>-->\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Connect</p>\n              <p style=\"font-size: 11pt\">Methods</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" multiple placeholder=\"methods\">\n                <el-option\n                    v-for=\"item in connectMethods\"\n                    :key=\"item\"\n                    :label=\"item\"\n                    :value=\"item\">\n                </el-option>\n              </el-select>\n\n\n<!--              <el-select v-model=\"selectedMethod\" placeholder=\"Methods\" @change=\"handleConnectMethodsSelect\" multiple>-->\n<!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n<!--                           :value=\"methods\" />-->\n<!--              </el-select>-->\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">ton_proof</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-input v-model=\"tonProofValue\"  placeholder=\"input ton_proof\"></el-input>\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" align=\"middle\">\n            <el-col :span=\"4\">\n              <div>req</div>\n            </el-col>\n            <el-col\n              :span=\"6\"\n              v-for=\"item in Object.keys(availableChains)\"\n              :key=\"item\"\n            >\n              <el-checkbox\n                v-model=\"availableChains[item].checked\"\n                :disabled=\"!areChainsInit\"\n                >{{ availableChains[item].name }}</el-checkbox\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" align=\"middle\" style=\"margin-top: 20px\">\n            <el-col :span=\"4\">\n              <div>opt</div>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(43114)\" @change=\"() => handleOptionChange(43114)\">\n                avax</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(10)\" @change=\"() => handleOptionChange(10)\">op</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(8453)\" @change=\"() => handleOptionChange(8453)\">\n                BASE</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(99781165)\"\n                @change=\"() => handleOptionChange(99781165)\">Non-exist chain</el-checkbox>\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"initBtnClicked\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectInitStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                type=\"primary\"\n                @click=\"connectBtnClicked\"\n                icon=\"el-icon-connection\"\n                :disabled=\"!areChainsInit\"\n                >{{ connectStatusStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"connectBtnAndSignClicked\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectAndSignStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                type=\"danger\"\n                @click=\"disconnectAction\"\n                icon=\"el-icon-switch-button\"\n                :disabled=\"!areChainsInit || walletAddress.length == 0\"\n                >{{ disconnectStatusStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n          <teleport to=\"body\">\n            <div v-if=\"showModal\" class=\"modal-overlay\" @click=\"closeModal\">\n              <div class=\"modal-content\" @click.stop>\n                <button class=\"close-button\" @click=\"closeModal\">\n                  &times;\n                </button>\n                <h2>Scan to connect</h2>\n                <qrcode-vue :value=\"qrValue\" :size=\"350\" level=\"L\" />\n              </div>\n            </div>\n          </teleport>\n        </el-card>\n\n        <!-- 发送交易 -->\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div>Transactions</div>\n          </template>\n\n          <el-tabs v-model=\"activeTab\" type=\"border-card\" @tab-click=\"clickActiveTab\">\n            <!-- ETH -->\n            <el-tab-pane label=\"ETH\" name=\"eip155:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to ETH)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve TONCoin)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(eth mint\n                    nft)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add SPX6900)\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n            <!-- Polygon-->\n            <el-tab-pane label=\"Polygon\" name=\"eip155:137\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send POL)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve sushi)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(polygon mint\n                    nft)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add LGNS)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_testRpc()\">wallet_testRpc(Polygon)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- BSC-->\n            <el-tab-pane label=\"BNB\" name=\"eip155:56\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to BNB)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve POSI)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add FET)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_testRpc()\">wallet_testRpc(check balance on eth)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Fuse\" name=\"eip155:122\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_swap\">eth_sendTransaction(Swap)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\"\n                  >eth_sendTransaction(转账FUSE)</el-button\n                  >\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\"\n                  >eth_sendTransaction(授权USDC)</el-button\n                  >\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TON\" name=\"ton:-239\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_getAccount\">ton_getAccount</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_sendTransaction\">ton_sendTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- solana -->\n            <el-tab-pane label=\"Sol\" name=\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Sonic testnet\" name=\"svm:70000062\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n\n            <!-- Sui-->\n            <el-tab-pane label=\"Sui\" name=\"sui:mainnet\">\n              <SuiPanel @generateTransactionParams=\"sui_generateTransactionParams\" />\n            </el-tab-pane>\n            <!-- BTC -->\n            <el-tab-pane label=\"BTC\" name=\"btc:mainnet\">\n              <BTCPanel @generateTransactionParams=\"btc_generateTransactionParams\" />\n            </el-tab-pane>\n\n            <!-- Fractal BTC -->\n            <el-tab-pane label=\"Fractal\" name=\"fractal:mainnet\">\n              <FractalPanel @generateTransactionParams=\"fractal_generateTransactionParams\" />\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Tron\" name=\"tron:mainnet\">\n              <TronTransactionPanel\n                  @generateTransactionParams=\"tron_generateTransactionParams\"\n                  @generateTransactionResult=\"tron_getTransactionResult\" />\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Aptos\" name=\"aptos:mainnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signTransaction\">aptos_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"aptos_signAndSubmitTransaction\">aptos_signAndSubmitTransaction</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Movement\" name=\"movement:testnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"move_signTransaction\">move_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"move_signAndSubmitTransaction\">move_signAndSubmitTransaction</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"cosmos\" name=\"cosmos:cosmoshub-4\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"osmos\" name=\"cosmos:osmosis-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"sei交易\" name=\"cosmos:pacific-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Starknet\" name=\"starknet:mainnet\">\n              <StarknetPanel ref=\"starknetPanelRef\" @generateTransactionParams=\"starknet_generateTransactionParams\" @generateTransactionResult=\"starknet_getTransactionResult\" />\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TEST \" name=\"test:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"testBase64UrlSafe\">testBase64UrlSafe</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n          </el-tabs>\n\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Data:</div>\n            <el-input v-model=\"testTransaction\" type=\"textarea\" :rows=\"5\" placeholder=\"sendTransactions\"></el-input>\n          </el-col>\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Result :</div>\n            <el-input v-model=\"testboc\" type=\"textarea\" :rows=\"5\" placeholder=\"boc\"></el-input>\n          </el-col>\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button type=\"primary\" :disabled=\"sendBtnDisabled\" @click=\"sendTransaction()\">{{\n                testTransactionStr\n                }}</el-button>\n            </el-col>\n          </el-row>\n        </el-card>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<style scoped>\n/* 重置全局边距和内边距 */\nbody,\nhtml {\n  margin: 0;\n  padding: 0;\n  height: 100%;\n}\n\n/* 确保 app 容器占满整个视口 */\n#app {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin: 0 auto;\n  /* 居中 */\n  max-width: 600px;\n  /* 设置最大宽度 */\n  padding: 0 20px;\n  /* 添加一些左右内边距 */\n}\n\n/* 调整 el-container 样式 */\n.el-container {\n  min-height: 100vh;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n}\n\n/* 调整 el-header 样式 */\n.el-header {\n  background-color: #333333;\n  color: white;\n  height: 50px;\n  line-height: 50px;\n  font-size: 18px;\n  font-weight: bold;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n}\n\n/* 调整 el-main 样式 */\n.el-main {\n  padding: 70px 0 20px;\n  /* 增加顶部内边距以避免被固定header遮挡 */\n  flex-grow: 1;\n}\n\n.el-card {\n  margin-bottom: 20px;\n}\n\n.info-row {\n  margin-bottom: 10px;\n}\n\n.input-label {\n  margin-bottom: 5px;\n  text-align: left;\n}\n\n.el-input {\n  margin-bottom: 10px;\n}\n\n/* 通用按钮样式 */\n.wallet-actions .el-button,\n.transaction .el-button,\n.clear-cache .el-button {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 40px;\n}\n\n.wallet-actions .el-button span,\n.transaction .el-button span,\n.clear-cache .el-button span {\n  margin: 0 auto;\n}\n\n/* 按钮行间距 */\n.wallet-actions .button-row,\n.transaction .button-row {\n  margin-bottom: 8px;\n}\n\n.wallet-actions .button-row:last-child,\n.transaction .button-row:last-child {\n  margin-bottom: 0;\n}\n\n/* 调整图标和文字的对齐 */\n.wallet-actions .el-button [class^=\"el-icon-\"],\n.transaction .el-button [class^=\"el-icon-\"],\n.clear-cache .el-button [class^=\"el-icon-\"] {\n  margin-right: 5px;\n  vertical-align: middle;\n}\n\n/* 新增：调整发送交易按钮与输入框的间距 */\n.transaction .el-row:not(:last-child) {\n  margin-bottom: 10px;\n}\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  text-align: center;\n  position: relative;\n  max-width: 90%;\n  width: 400px;\n}\n\n.close-button {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  font-size: 24px;\n  border: none;\n  background: none;\n  cursor: pointer;\n}\n\n/* 响应式调整 */\n@media (max-width: 600px) {\n  #app {\n    padding: 0 10px;\n  }\n\n  .el-main {\n    padding: 60px 0 10px;\n  }\n}\n</style>\n<script>\nimport {getAppWalletDeepLink, getUniversalLink, OKX_CONNECT_ERROR_CODES, safeJsonStringify} from \"@okxconnect/core\"\nimport {\n  OKXBtcProvider,\n  OKXCosmosProvider,\n  OKXStarknetProvider,\n  OKXTonProvider,\n  OKXTronProvider,\n  OKXUniversalProvider\n} from \"@okxconnect/universal-provider\"\nimport {OKXSolanaProvider} from \"@okxconnect/solana-provider\";\nimport {\n  Connection,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n  TransactionMessage,\n  VersionedTransaction\n} from '@solana/web3.js';\nimport {OKXSuiProvider as SuiAdapter} from \"@okxconnect/sui-provider\"\nimport QrcodeVue from 'qrcode.vue'\n\nimport {OKXAptosProvider} from \"@okxconnect/aptos-provider\";\nimport {Aptos, AptosConfig, Network} from \"@aptos-labs/ts-sdk\";\n\nimport BTCPanel from \"./components/BtcTransactionPanel.vue\";\nimport FractalPanel from \"./components/FractalTransactionPanel.vue\"\nimport SuiPanel from \"./components/SuiTransactionPanel.vue\";\nimport StarknetPanel from \"./components/StarknetTransactionPanel.vue\";\n\nimport {OKXUniversalConnectUI, THEME} from \"@okxconnect/ui\";\nimport {ethers} from 'ethers';\nimport VConsole from 'vconsole';\nimport nacl from \"tweetnacl\";\nimport {verifyPersonalMessageSignature} from '@mysten/sui/verify';\nimport TronTransactionPanel from \"@/components/TronTransactionPanel.vue\";\nimport {TronWeb} from \"tronweb\";\nimport { RpcProvider as StarknetRpcProvider, Account as StarknetAccount } from \"starknet\";\nimport { ref, toRaw } from \"vue\";\n\nconst { verifyADR36Amino } = require('@keplr-wallet/cosmos')\nconst { fromBech32 } = require('@cosmjs/encoding')\n\nnew VConsole();\n\nconst allChains = {\n  1: { name: \"eth\", checked: false },\n  56: { name: \"BNB\", checked: false },\n  137: { name: \"Polygon\", checked: false },\n  122: { name: \"Fuse\", checked: false },\n  \"ton:-239\":{name: \"TON\",checked: false},\n  \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\": {\n    name: \"Sol mainnet\",\n    checked: false,\n  },\n  \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\": {\n    name: \"Sol testnet\",\n    checked: false,\n  },\n  \"svm:70000062\": {\n    name: \"Sonic testnet\",\n    checked: false,\n  },\n  \"sui:mainnet\": { name: \"Sui mainnet\", checked: false },\n  \"aptos:mainnet\": { name: \"Aptos mainnet\", checked: false },\n  \"movement:testnet\": { name: \"Movement\", checked: false },\n  \"btc:mainnet\": { name: \"BTC\", checked: false },\n  \"fractal:mainnet\": { name: \"Fractal\", checked: false },\n  \"cosmos:osmosis-1\": {name: \"osmos\", checked: false},\n  \"cosmos:cosmoshub-4\": {name: \"cosmoshub\", checked: false},\n  \"cosmos:pacific-1\": {name: \"sei\", checked: false},\n  \"cosmos:abvdefg\": {name: \"cosmos:abvdefg\", checked: false},\n  \"tron:mainnet\": {name: \"tron\", checked: false},\n  997865: { name: \"Non Exist chain\", checked: false },\n  \"starknet:mainnet\": { name: \"starknet\", checked: false }\n};\n\nvar optionChains = new Set([]);\nvar selectedModals = [\"before\", \"success\", \"error\"];\nvar selectedReturnStrategy = \"none\";\nvar selectedDeepLink = \"tg://resolve\";\nvar selectedLanguage = \"en_US\";\nvar selectedTheme = THEME.LIGHT;\n\n// import QrcodeVue from 'qrcode.vue'\nexport default {\n  name: \"App\",\n  components: {\n    TronTransactionPanel,\n    QrcodeVue,\n    BTCPanel,\n    FractalPanel,\n    SuiPanel,\n    StarknetPanel\n  },\n\n  setup() {\n    const sendBtnDisabled = ref(false)\n\n    return {\n      sendBtnDisabled\n    }\n  },\n  data: () => {\n    return {\n      activeTab: \"eip155:1\",\n      testTopic: \"\",\n      testPublicKey: \"\",\n      testProofPayload: \"\",\n      tonProofValue:\"\",\n      pendingDeepLink: \"-\",\n      logList: [],\n      connectReady: false,\n      connectStatusStr: \"Connect\",\n      connectAndSignStr: \"ConnectAndsign(two steps only ETH)\",\n      connectInitStr: \"init test\",\n      disconnectStatusStr: \"Disconnect\",\n      localPubKey: \"\",\n      localSecKey: \"\",\n      testTransaction: \"\",\n      selectedChain: \"eip155:1\",\n      testTransactionStr: \"Send\",\n      walletAddress: \"\",\n      testboc: \"\",\n      ProofPayloadVerify: \"\",\n      showModal: false,\n      showVerifyRow: false,\n      qrValue: \"https://www.okx.com/download\",\n      currentStatus: \"\",\n      areChainsInit: false,\n      availableChains: allChains,\n      isOptionalChecked: (chainId) => {\n        return optionChains.has(chainId);\n      },\n      withUI: localStorage.getItem(\"autoRefresh\") != \"false\",\n      modals: selectedModals,\n      returnStrategies: [\"none\", \"back\", \"deeplink\"],\n      returnStrategy: selectedReturnStrategy,\n      deeplink: selectedDeepLink,\n      locales: [\n        \"en_US\",\n        \"ru_RU\",\n        \"zh_CN\",\n        \"zh\",\n        \"ar_AE\",\n        \"cs_CZ\",\n        \"de_DE\",\n        \"es_ES\",\n        \"es_LAT\",\n        \"fr_FR\",\n        \"id_ID\",\n        \"it_IT\",\n        \"nl_NL\",\n        \"pl_PL\",\n        \"pt_BR\",\n        \"pt_PT\",\n        \"ro_RO\",\n        \"tr_TR\",\n        \"uk_UA\",\n        \"vi_VN\",\n      ],\n      selectedMethod:[],\n      selectedMethodData:[],\n      connectMethods:[\n        \"wallet_addEthereumChain(ETH)\",\n        \"personal_sign(ETH)\",\n        \"solana_signMessage(Sol mainnet)\",\n        \"sui_signMessage(Sui mainnet)\",\n        \"sui_signPersonalMessage(Sui mainnet)\",\n        \"btc_signMessage(BTC)\",\n        \"aptos_signMessage(aptos mainnet)\",\n        \"cosmos_signArbitrary(cosmoshub)\",\n        \"test_noSupport_eth(ETH)\",\n        \"tron_signMessage\",\n        \"tron_signMessageV2\",\n        \"starknet_signMessage\"\n      ],\n\n      language: selectedLanguage,\n      theme: selectedTheme,\n      THEME: THEME,\n      handleWithUI: (isChecked) => {\n        localStorage.setItem(\"autoRefresh\", `${isChecked}`);\n        location.reload();\n      },\n      handleOptionChange: (chainId) => {\n        if (optionChains.has(chainId)) {\n          optionChains.delete(chainId);\n        } else {\n          optionChains.add(chainId);\n        }\n      },\n      starknetPanelTypedData: ''\n    };\n  },\n  computed: {\n    getWalletAddress: function () {\n      return this.walletAddress;\n    },\n  },\n  methods: {\n    isChecked(chainId) {\n      return this.selectedChains.has(chainId);\n    },\n\n    initChains(newChains) {\n      if (newChains.length > 0) {\n        const updatedChains = Object.assign({}, this.availableChains);\n        for (const chainId of newChains) {\n          if (updatedChains[chainId]){\n            updatedChains[chainId].checked = !updatedChains[chainId].checked;\n          }\n        }\n        this.availableChains = updatedChains;\n      }\n\n      this.areChainsInit = true;\n    },\n\n    async clickActiveTab(tab) {\n      const tabName = tab.props ? tab.props.name : tab.name;\n      this.selectedChain = tabName;\n      console.log(`已切换到链 :`, tabName);\n\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (tabName == \"starknet:mainnet\") {\n        this.sendBtnDisabled = true\n      }else {\n        this.sendBtnDisabled = false\n      }\n\n      window.provider.setDefaultChain(this.selectedChain);\n    },\n\n    async initBtnClicked() {\n      var initCall;\n      if (!this.withUI) {\n        initCall = OKXUniversalProvider.init({\n          dappMetaData: {\n            name: \"univer test dapp\",\n            icon: \"https://avatars.githubusercontent.com/u/37784886\",\n          },\n        });\n      } else {\n        initCall = OKXUniversalConnectUI.init({\n          dappMetaData: {\n            icon: \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\",\n            name: \"OKX WalletConnect UI Demo\",\n          },\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: \"all\",\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme\n          },\n        });\n      }\n\n      initCall.then((provider) => {\n        window.provider = provider;\n        window.tonProvider = new OKXTonProvider(window.provider);\n        window.tonProvider.onStatusChange((walletInfo) => {\n              console.log('TONConnection onStatusChange:', JSON.stringify(walletInfo));\n            }, (err) => {\n              console.log('TONConnection onStatusChange error:', err);\n            }\n        )\n\n        console.log(\"init finished:\", provider);\n        console.log(\"init finished session:\", JSON.stringify(provider.session));\n\n        if (provider.session?.namespaces) {\n          const newChains = [];\n          console.log(\"namespaces\", provider.session.namespaces);\n          Object.entries(provider.session.namespaces).forEach(([key, value]) => {\n            if (key === \"eip155\") {\n              value.chains.forEach((chain) => {\n                newChains.push(parseInt(chain.substring(7)));\n              });\n            }\n            else {\n              value.chains.forEach((chain) => {\n                newChains.push(chain);\n              });\n            }\n          });\n\n          console.log(\"existing chains:\", newChains);\n          this.initChains(newChains);\n        } else {\n          this.initChains([]);\n        }\n\n        provider.on(\"display_uri\", (uri) => {\n          if (this.isPC()) {\n            if (uri && !this.withUI) {\n              this.qrValue = uri;\n              this.showModal = true;\n            }\n          }\n          console.log(\"通知>>>display_uri  ==> \", uri);\n        });\n\n        provider.on(\"connect\", (session) => {\n          console.log(\"通知>>>get connect session\", session);\n          this.verifyMessage();\n        });\n        provider.on(\"reconnect\", (session) => {\n          console.log(\"通知>>>get reconnect session\", session);\n          this.walletAddress = \"connected\";\n        });\n        provider.on(\"disconnect\", ({ topic }) => {\n          console.log(`通知>>>get disconnect  ${topic}`);\n          this.walletAddress = \"disconnecteddddd\";\n        });\n        provider.on(\"session_delete\", ({ topic }) => {\n          console.log(`通知>>>get session_delete  ${topic}`);\n        });\n        provider.on(\"session_update\", (session) => {\n          console.log(`通知>>>get session_update `, JSON.stringify(session));\n        });\n      });\n    },\n\n    async connectBtnClicked() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        this.testTonSdk(false);\n      } else {\n        console.log(`connectBtnClicked provider not finish init`);\n      }\n    },\n    async connectBtnAndSignClicked() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        this.testTonSdk(true);\n      } else {\n        console.log(`connectBtnClicked provider not finish init`);\n      }\n    },\n\n    async disconnectAction() {\n      try {\n        console.log(\"get disconnect wallet btn clicked\");\n        // await TON.disconnect();\n        var provider = window.provider;\n        await provider.disconnect();\n        this.walletAddress = \"disconnected\";\n      } catch (error) {\n        console.log(\"Disconnect  error ==>> \", error.message);\n        this.currentStatus = error.message;\n      }\n    },\n\n    async eth_requestAccounts() {\n      var data = { method: \"eth_requestAccounts\" };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_chainId() {\n      var data = { method: \"eth_chainId\" };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_switchEthereumChain() {\n      var data = { method: \"wallet_switchEthereumChain\" };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_addEthereumChain() {\n      var data = {\n        method: \"wallet_addEthereumChain\",\n        params: {\n          blockExplorerUrls: [\"https://explorer.fuse.io\"],\n          chainId: \"0x7a\",\n          chainName: \"Fuse\",\n          nativeCurrency: { name: \"Fuse\", symbol: \"FUSE\", decimals: 18 },\n          rpcUrls: [\"https://rpc.fuse.io\"],\n        },\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n    async personal_sign() {\n      if (this.selectedChain === \"eip155:1\") {\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0x1ca023f10e157d148deed210f8bee193657a1eaa7f187909e20a9dc3b071dbc364c41fde37960c05093359f410a061ec8a7dca8c0c39fc7c1e24de8a3329775d1b\n\n        var accounts = await window.provider.request(\n          { method: \"eth_requestAccounts\" },\n          \"eip155:1\"\n        );\n        var address = accounts[0];\n        console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n        var dataETH = {\n          method: \"personal_sign\",\n          params: [\n            \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n            address,\n          ],\n        };\n\n        this.testTransaction = JSON.stringify(dataETH);\n      } else if (\n        this.selectedChain === \"eip155:137\" ||\n        this.selectedChain === \"eip155:122\"\n      ) {\n        // method\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0xebda9cfa2af43999058dffa0107031d1ef7fc0252dca85dcbd22ea097af922ca39b64d509ef61ce42b7641c5840b8a80337ffd1411b13e87e2260a3f1b6c151c1b\n\n        var dataPolygon = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n        this.testTransaction = JSON.stringify(dataPolygon);\n      } else if (this.selectedChain === \"eip155:56\") {\n        var data = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n\n        this.testTransaction = JSON.stringify(data);\n      }\n    },\n\n    async eth_sendTransaction_swap() {\n      var data = {\n        method: \"eth_sendTransaction\",\n        chainId: \"eip155:122\",\n        params: {\n          value: \"0x38d7ea4c68000\",\n          gas: \"0x2665f\",\n          to: \"0xf2614A233c7C3e7f08b1F887Ba133a13f1eb2c55\",\n          from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n          data: \"0x2646478b000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00000000000000000000000000000000000000000000000000038d7ea4c68000000000000000000000000000620fd5fa44be6af63715ef4e65ddfa0387ad13f5000000000000000000000000000000000000000000000000000000000000001b000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000700301ffff0201602352A9Eb5234466Eac23E59e7B99bCaE79C39c0BE9e53fd7EDaC9F859882AfdDa116645287C629040BE9e53fd7EDaC9F859882AfdDa116645287C62900602352A9Eb5234466Eac23E59e7B99bCaE79C39c01f2F3e73be57031114dd1f4E75c1DD87658be7F0E000bb800000000000000000000000000000000\",\n        },\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_signTypedData_v4() {\n      // method\n      // eth_signTypedData\n      // address\n      // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n      // valid\n      // true\n      // result\n      // 0xa8bb3c6b33a119d2d567c7632195c21988df778006082742125a591f5c633f716107883a37f7de6531a6312a5f69022135bf46fe5ab77905b62c82b3395f985e1b\n      //\n\n      // var data = {\n      //   \"method\": \"eth_signTypedData_v4\",\n      //   \"params\": {\n      //     \"typedDataJson\":\"{\\\"types\\\":{\\\"EIP712Domain\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"version\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"chainId\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"name\\\":\\\"verifyingContract\\\",\\\"type\\\":\\\"address\\\"}],\\\"Person\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"wallet\\\",\\\"type\\\":\\\"address\\\"}],\\\"Mail\\\":[{\\\"name\\\":\\\"from\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"to\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"contents\\\",\\\"type\\\":\\\"string\\\"}]},\\\"primaryType\\\":\\\"Mail\\\",\\\"domain\\\":{\\\"name\\\":\\\"Ether Mail\\\",\\\"version\\\":\\\"1\\\",\\\"chainId\\\":1,\\\"verifyingContract\\\":\\\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\\\"},\\\"message\\\":{\\\"from\\\":{\\\"name\\\":\\\"Cow\\\",\\\"wallet\\\":\\\"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\\\"},\\\"to\\\":{\\\"name\\\":\\\"Bob\\\",\\\"wallet\\\":\\\"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\\\"},\\\"contents\\\":\\\"Hello, Bob!\\\"}}\"\n      // }}\n\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        \"eip155\"\n      );\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n      var data = {\n        method: \"eth_signTypedData_v4\",\n        params: [\n          address,\n          {\n            types: {\n              EIP712Domain: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"version\",\n                  type: \"string\",\n                },\n                {\n                  name: \"chainId\",\n                  type: \"uint256\",\n                },\n                {\n                  name: \"verifyingContract\",\n                  type: \"address\",\n                },\n              ],\n              Person: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"wallet\",\n                  type: \"address\",\n                },\n              ],\n              Mail: [\n                {\n                  name: \"from\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"to\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"contents\",\n                  type: \"string\",\n                },\n              ],\n            },\n            primaryType: \"Mail\",\n            domain: {\n              name: \"Ether Mail\",\n              version: \"1\",\n              chainId: 1,\n              verifyingContract: \"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\",\n            },\n            message: {\n              from: {\n                name: \"Cow\",\n                wallet: \"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\",\n              },\n              to: {\n                name: \"Bob\",\n                wallet: \"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\",\n              },\n              contents: \"Hello, Bob!\",\n            },\n          },\n        ],\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_sendTransaction_transfer() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            chainId: \"0x1\",\n            to: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            value: \"0x5af3107a4000\",\n            maxPriorityFeePerGas: \"0x3b9aca00\",\n            gas: \"0x5e56\",\n            maxFeePerGas: \"0x2643b9db8\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gasPrice: \"0x17003f6530\",\n            nonce: \"0x0d30\",\n            data: \"0x\",\n            value: \"0x00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasLimit: \"0x5208\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x5e56\",\n            value: \"0x5af3107a4000\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasPrice: \"0x3b9aca00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            chainId: \"0x38\",\n          },\n        };\n      }else if(this.selectedChain === \"eip155:122\"){\n         data =   {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            value: \"0x0\",\n            chainId: \"0x7a\",\n          }\n        }\n      }\n\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        \"eip155\"\n      );\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"to\"] = address;\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_approve() {\n      var data = {};\n\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000000000000022d473030f116ddee9f6b43ac78ba3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x582d872a1b094fc48f5de31d3b73f2d9be47def1\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000f6f8096ac575b0\",\n            to: \"0x0b3F868E0BE5597D5DB7fEB59E1CADBb0fdDa50a\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            value: \"0x0\",\n            gas: \"0xe117\",\n            gasPrice: \"0xb2d05e00\",\n            data: \"0x095ea7b300000000000000000000000031c2f6fcff4f8759b3bd5bf0e1084a055615c768ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x5CA42204cDaa70d5c773946e69dE942b85CA6706\",\n          },\n        };\n      }else if (this.selectedChain === 'eip155:122'){\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000000000000013b3\",\n            to: \"0x620fd5fa44BE6af63715Ef4E65DDFA0387aD13F5\",\n          },\n        };\n      }\n\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        \"eip155\"\n      );\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_mint() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x4cacb\",\n            data: \"0xa64dfa75000000000000000000000000ed688002f3797599db8b4feacfe8b1dda0df1c8d000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cecb15396825a895ff8da8fc2d2c77a234dccee00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f6261667962656968643737366b6177706e71336f6f6a6635693274787a76617737737164656b34616a776472637472703261366f626b70723773792f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x30795\",\n            data: \"0xa64dfa75000000000000000000000000341b3687f0309778f08f29336b2c4b9c38b9f110000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f62616679626569686a6279676b68747a71376b68377434336266686e676e793236337668766f6578716a6d6e377161716166366e717a64743777712f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      }\n\n      let str = JSON.stringify(data);\n      console.log(\"-----长度--->\", str.length);\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        \"eip155\"\n      );\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_testRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n        `eip155:56`,\n        `https://eth-mainnet.g.alchemy.com/v2/NxUfYJUr-TQtEpLmSXhhD5pXn70GwsyV`\n      );\n      var data = {\n        method: \"eth_getBalance\",\n        params: [\"0x8D97689C9818892B700e27F316cc3E41e17fBeb9\", \"latest\"],\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_watchAsset() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xe0f63a424a4439cbe457d80e4f4b51ad25b2c56c\",\n              symbol: \"SPX6900\",\n              image:\n                \"https://assets.coingecko.com/coins/images/31401/standard/sticker_%281%29.jpg?1702371083\",\n              decimals: 8,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xeB51D9A39AD5EEF215dC0Bf39a8821ff804A0F01\",\n              symbol: \"LGNS\",\n              image: \"https://polygonscan.com/token/images/originlgns_32.png\",\n              decimals: 9,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0x031b41e504677879370e9dbcf937283a8691fa7f\",\n              symbol: \"FET\",\n              image: \"https://bscscan.com/token/images/fetch_32.png\",\n              decimals: 18,\n            },\n          },\n        };\n      }\n\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async ton_sendTransaction() {\n      var data  = {\n        \"messages\":[{\"address\":\"EQARULUYsmJq1RiZ-YiH-IJLcAZUVkVff-KBPwEmmaQGH6aC\",\"amount\":\"205000000\",\"payload\":\"te6cckEBAgEAhwABbQ+KfqUAAADNgG7tIEATEtAIAO87mQKicbKgHIk4pSPP4k5xhHqutqYgAB7USnesDnCcECwbgQMBAJUlk4VhgBD3JEg1TUr75iTijBghOKm/sxNDXUBl7CD6WMut0Q85x4RafwA/Es89DBXoTxuqxVFxyBbzt9Rav2HBUKl7hmkvLuKHLBCW57aK\"}],\n        \"validUntil\":1792481054,\n        \"network\":'-239'}\n      this.testTransaction = JSON.stringify(data)\n    },\n    ton_getAccount() {\n      this.testTransaction = \"这里是同步获取 不再需要点击 <<发送交易>>\"\n      let result =   window.tonProvider.account()\n      if (result) {\n        this.testboc = JSON.stringify(result);\n      } else {\n        this.testboc = 'null'\n      }\n    },\n\n    async tonUniversalLog() {\n      console.log(\"ton 信息: tonProvider  connected:\",window.tonProvider.connected())\n      console.log(\"ton 信息: tonProvider  account:\",JSON.stringify(window.tonProvider.account()))\n      console.log(\"ton 信息: tonProvider  wallet:\",JSON.stringify(window.tonProvider.wallet()))\n    },\n\n    async sendTransactionAlert() {\n      //\n      const response = await fetch(`https://apitest.fireverse.ai/oauth/okx/getNonce?publicAddress=0x0cecb15396825a895ff8da8fc2d2c77a234dccee`);\n      const data = await response.json();\n      console.log(\"请求数据----\",JSON.stringify(data))\n      await this.personal_sign()\n      if (confirm(\"Are you want to sign message?\")) {\n        this.sendTransaction();\n      }\n\n      // window.open(\"https://www.okx.com/download?deeplink=okx%3A%2F%2Fweb3%2Fwallet%2Fconnect\",'_self')\n    },\n\n    async sendTransaction() {\n      if (this.selectedChain.startsWith(\"aptos\")\n          || this.selectedChain.startsWith(\"movement\")\n          || this.selectedChain.startsWith(\"solana\")\n          || this.selectedChain.startsWith(\"sonic\")\n          || this.selectedChain.startsWith(\"cosmos\")) {\n        return\n      }\n      console.log(\"sendTransaction\", window.provider);\n      console.log(\"sendTransaction内容11------\", this.testTransaction);\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (this.testTransaction && window.provider) {\n        // eslint-disable-next-line no-undef\n        const sendData = JSON.parse(this.testTransaction);\n        try {\n          console.log(\"sendTransaction-----22method>>\", sendData.method);\n\n          let chainId = \"eip155:1\";\n          if (this.selectedChain) {\n            chainId = this.selectedChain;\n            console.log(\n              \"sendTransaction-----this.selectedChain>>\",\n              this.selectedChain\n            );\n          }\n          console.log(\"windowOpen[click_1]: \", Date.now());\n          if (chainId == \"sui:mainnet\") {\n            const adapter = new SuiAdapter(window.provider);\n            var suiResult = \"invalid result\";\n            if (this.currentSuiMethod == 'sui_getAccount') {\n              let result = adapter.getAccount()\n              if (typeof result == \"string\") {\n                this.testboc = result\n              } else {\n                this.testboc = JSON.stringify(result)\n              }\n            }\n            if (this.currentSuiMethod == \"sui_signTransaction\") {\n              suiResult = await adapter.signTransaction(\n                this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signAndExecuteTransaction\") {\n              suiResult = await adapter.signAndExecuteTransaction(\n                this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signMessage\") {\n              console.log(\"signMessage----\", this.currentSuiTransaction);\n              suiResult = await adapter.signMessage(this.currentSuiTransaction);\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_signPersonalMessage\") {\n              console.log(\n                \"signPersonalMessage----\",\n                this.currentSuiTransaction\n              );\n              suiResult = await adapter.signPersonalMessage(\n                this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_testRpc\") {\n              console.log(\"test rpc----\", this.currentSuiTransaction);\n              console.log(\n                `请求数据发送 rpc ----->> ${JSON.stringify(sendData)}`\n              );\n              const res = await window.provider.request(sendData, chainId);\n              console.log(`请求数据回调 rpc ----->> ${JSON.stringify(result)}`);\n              if (typeof res == \"string\") {\n                this.testboc = res;\n              } else {\n                this.testboc = JSON.stringify(res);\n              }\n            }\n            console.log(\"windowOpen[click_2]: \", Date.now());\n            return;\n          }else if(chainId === \"ton:-239\"){\n            console.log(\n                `请求数据发送 sendTransaction ---ton-->> ${JSON.stringify(sendData)}`\n            );\n            let result =  await window.tonProvider.sendTransaction(sendData)\n            console.log(\n                `请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`\n            );\n            if (typeof result == \"string\") {\n              this.testboc = result;\n            } else {\n              this.testboc = JSON.stringify(result);\n            }\n            return\n          }\n\n          if (chainId == 'btc:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var btcResult = 'invalid result'\n\n            if (this.currentBtcMethod == 'btc_signMessage') {\n              btcResult = await btcAdapter.signMessage(chainId, this.currentBtcTransaction[\"signStr\"])\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_send') {\n              btcResult = await btcAdapter.send(chainId, this.currentBtcTransaction)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signPsbt') {\n              btcResult = await btcAdapter.signPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n\n              this.hexToBase64(btcResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentBtcMethod == 'btc_signPsbts') {\n              btcResult = await btcAdapter.signPsbts(chainId, this.currentBtcTransaction.psbtHexs, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_sendInscription') {\n              btcResult = await btcAdapter.sendInscription(chainId, this.currentBtcTransaction.address, this.currentBtcTransaction.inscriptionId, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signAndPushPsbt') {\n              btcResult = await btcAdapter.signAndPushPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            }else if (this.currentBtcMethod == 'btc_sendBitcoin') {\n              btcResult = await btcAdapter.sendBitcoin(chainId, this.currentBtcTransaction.toAddress, this.currentBtcTransaction.satoshis, this.currentBtcTransaction.options)\n\n              this.testboc = JSON.stringify(btcResult)\n            }\n            return\n          }\n\n          if (chainId == 'fractal:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var fractalResult = 'invalid result'\n\n            if (this.currentFractalMethod == 'fractal_signMessage') {\n              fractalResult = await btcAdapter.signMessage(chainId, this.currentFractalTransaction['signStr'])\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_send') {\n              fractalResult = await btcAdapter.send(chainId, this.currentFractalTransaction)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signPsbt') {\n              fractalResult = await btcAdapter.signPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.hexToBase64(fractalResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentFractalMethod == 'fractal_signPsbts') {\n              fractalResult = await btcAdapter.signPsbts(chainId, this.currentFractalTransaction.psbtHexs, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_sendInscription') {\n              fractalResult = await btcAdapter.sendInscription(chainId, this.currentFractalTransaction.address, this.currentFractalTransaction.inscriptionId, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signAndPushPsbt') {\n              fractalResult = await btcAdapter.signAndPushPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            }else if (this.currentFractalMethod == 'fractal_sendBitcoin') {\n              fractalResult = await btcAdapter.sendBitcoin(chainId, this.currentFractalTransaction.toAddress, this.currentFractalTransaction.satoshis, this.currentFractalTransaction.options)\n\n              this.testboc = JSON.stringify(fractalResult)\n            }\n\n            return\n          }\n\n          console.log(`请求数据发送 sendTransaction ----->> ${JSON.stringify(sendData)}`)\n          var result = await window.provider.request(sendData, chainId)\n          console.log(`请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`)\n\n          console.log(\"windowOpen[click_3]: \", Date.now());\n          if (typeof result == \"string\") {\n            this.testboc = result;\n          } else {\n            this.testboc = JSON.stringify(result);\n          }\n          console.log(\"方法数据回调 --this.testboc--\", this.testboc);\n        } catch (error) {\n          console.error(\"方法数据回调失败 --Error--\", error.message);\n\n          if (error.code === OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n            this.testboc = error.message;\n          } else {\n            this.testboc = \"签名错误！\" + error.message;\n          }\n        }\n      } else {\n        alert(\"交易数据为空，请选则或输入交易数据。\");\n      }\n    },\n\n    hexToBase64(hexStr) {\n      var bytes = [];\n      for (var i = 0; i < hexStr.length; i += 2) {\n        bytes.push(parseInt(hexStr.substr(i, 2), 16));\n      }\n      const buffer = new Uint8Array(bytes)\n      const blob = new Blob([buffer]);\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = function (e) {\n          var base64Data = e.target.result.split(\",\")[1]\n          resolve(base64Data);\n        };\n        reader.onerror = function (e) {\n          reject(e);\n        };\n        reader.readAsDataURL(blob);\n      });\n    },\n    testBase64UrlSafe(){\n      let datatest = {\"protocolVer\":1,\"topic\":\"8a7a4c3be73802d0ae2587123ade7bb79f27433b9aa3ca589a2208a2089eecfd\",\"clientId\":\"5f1bbf9eac92160affa7ef04d0a710817ddb6d8c22ebbd6263e86f059930b404\",\"requestId\":\"1731383250054\",\"dAppInfo\":{\"url\":\"connect.oker.vip\",\"origin\":\"https://connect.oker.vip\",\"name\":\"univer test dapp\",\"icon\":\"https://avatars.githubusercontent.com/u/37784886\"},\"requests\":[{\"name\":\"requestAccounts\",\"requiredNamespaces\":[{\"namespace\":\"aptos\",\"chains\":[\"aptos:637\"]}],\"optionalNamespaces\":[],\"connectRequestMethods\":[{\"chainId\":\"aptos:637\",\"method\":\"aptos_signMessage\",\"params\":{\"data\":{\"address\":true,\"application\":true,\"chainId\":true,\"message\":\"123 中文测试!\",\"nonce\":\"1234\"},\"applicationUrl\":\"https://connect.oker.vip\",\"prefix\":\"APTOS\",\"aptosChainId\":\"1\"}}]}],\"redirect\":\"none\"}\n      let json = JSON.stringify(datatest)\n      const utf8Array = new TextEncoder().encode(json);\n      let binary = '';\n      utf8Array.forEach(byte => {\n        binary += String.fromCharCode(byte);\n      });\n\n      let firstStr =  btoa(binary)\n      console.log(\"字符串编码1>>>>\",firstStr)\n      firstStr = firstStr.replace(/\\+/g, '-')  // 替换 '+'\n      console.log(\"字符串编码2>>>>\",firstStr)\n      firstStr = firstStr.replace(/\\//g, '_')  // 替换 '/'\n      console.log(\"字符串编码3>>>>\",firstStr)\n      firstStr = firstStr.replace(/=+$/, '');  // 移除 '=';\n      console.log(\"字符串编码4>>>>\",firstStr)\n\n      let showUrl =  getUniversalLink(getAppWalletDeepLink(firstStr))\n      console.log(\"字符串编码5>>>>\",showUrl)\n      this.qrValue = showUrl;\n      this.showModal = true;\n    },\n\n\n    async testTonSdk(isTwoSteps) {\n      // 1. connect\n      //  create sub providers for each namespace/chain\n      let nameSpacesChains = [];\n      let optSpaceChains = [];\n\n      let solanaChains = [\n        \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n        \"svm:70000062\",\n      ];\n      let hasEip155, hasSolana, hasSui, hasBtc, hasAptos, hasTon, hasCosmos, hasTron, hasStarknet = false\n\n      let suiChains = [\n        \"sui:mainnet\",\n      ];\n\n      let btcChains = [\n        \"btc:mainnet\",\n        \"fractal:mainnet\"\n      ];\n\n      const chains = Object.entries(this.availableChains)\n          .filter((chain) => chain[1].checked)\n          .map((chain) => chain[0]);\n      console.log(`chains  ===> ${chains.values()}`)\n      chains.forEach(function (chainId) {\n        console.log(`chains.forEach chainId  ===> ${chainId}`)\n\n        if (solanaChains.includes(chainId)) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"ton\")) {\n          nameSpacesChains.push(chainId)\n          hasTon = true\n          return\n        }\n        if (typeof chainId == 'string' && (chainId.startsWith(\"aptos\") || chainId.startsWith(\"movement\"))) {\n          nameSpacesChains.push(chainId)\n          hasAptos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId)\n          hasSolana = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"cosmos\")) {\n          nameSpacesChains.push(chainId)\n          hasCosmos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"tron\")) {\n          nameSpacesChains.push(chainId)\n          hasTron = true\n          return\n        }\n\n        if (typeof chainId == 'string' && chainId.startsWith(\"starknet\")) {\n          nameSpacesChains.push(chainId)\n          hasStarknet = true\n          return\n        }\n\n        if (suiChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`);\n          nameSpacesChains.push(chainId);\n          hasSui = true;\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`)\n          nameSpacesChains.push(chainId)\n          hasBtc = true\n          return\n        }\n\n        hasEip155 = true\n        nameSpacesChains.push(`eip155:${chainId}`)\n      })\n\n\n      optionChains.forEach(function (chainId) {\n        if (solanaChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n        if (typeof chainId == \"string\" && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (suiChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          optSpaceChains.push(chainId)\n          return\n        }\n\n        optSpaceChains.push(`eip155:${chainId}`)\n      })\n\n      console.log(`namespaceChains  ===> ${JSON.stringify(nameSpacesChains)}`);\n      var connectData = {};\n      if (nameSpacesChains && nameSpacesChains.length > 0) {\n        var requireData = {};\n        if (isTwoSteps){\n          let includeEth = nameSpacesChains.includes(\"eip155:1\")\n          if (!includeEth){\n            alert(\"请选择ETH \");\n            return;\n          }\n        }\n\n        if (hasEip155) {\n          requireData.eip155 = {\n            chains: nameSpacesChains.filter((item) =>\n              item.startsWith(\"eip155\")\n            ),\n            defaultChain: nameSpacesChains.filter((item) =>\n              item.startsWith(\"eip155\")\n            )[0],\n          };\n        }\n        if (hasSolana) {\n          requireData.solana = {\n            chains: nameSpacesChains.filter(\n              (item) =>\n                item.startsWith(\"solana\") ||\n                item.startsWith(\"sonic\") ||\n                item.startsWith(\"svm\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n              (item) =>\n                item.startsWith(\"solana\") ||\n                item.startsWith(\"sonic\") ||\n                item.startsWith(\"svm\")\n            )[0],\n          };\n        }\n\n        if (hasCosmos) {\n          requireData.cosmos = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            )[0],\n          }\n        }\n        if (hasTron) {\n          requireData.tron = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            )[0],\n          }\n        }\n        if (hasStarknet) {\n          requireData.starknet = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"starknet\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"starknet\")\n            )[0],\n          }\n        }\n        if (hasTon) {\n\n          //\n          let tonParams = {\n            ton_addr:{\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue){\n            tonParams = {\n              ton_addr:{\n                name: 'ton_addr',\n              },\n              ton_proof:{\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          requireData.ton = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"ton\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"ton\"))[0],\n            params:tonParams\n          };\n        }\n\n        if (hasSui) {\n          requireData.sui = {\n            chains: nameSpacesChains.filter((item) => item.startsWith(\"sui\")),\n            defaultChain: nameSpacesChains.filter((item) =>\n              item.startsWith(\"sui\")\n            )[0],\n            rpcMap: {\n              \"sui:mainnet\": \"https://www.okx.com/fullnode/sui/discover/rpc\"\n            }\n          };\n        }\n        if (hasAptos) {\n          requireData.aptos = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\"))[0]\n          }\n        }\n\n        if (hasBtc) {\n          let btcChains = nameSpacesChains.filter(item => item.startsWith(\"btc\") || item.startsWith(\"fractal\"))\n          requireData.btc = {\n            chains: btcChains,\n            defaultChain: btcChains[0]\n          }\n        }\n        console.log(`requireData  ===> ${JSON.stringify(requireData)}`)\n        connectData['namespaces'] = requireData;\n        console.log(JSON.stringify(connectData))\n      }\n\n      if (optSpaceChains && optSpaceChains.length > 0) {\n        var optData = {\n          eip155: {\n            chains: optSpaceChains.filter((item) => item.startsWith(\"eip155\")),\n            defaultChain: optSpaceChains.filter((item) =>\n              item.startsWith(\"eip155\")\n            )[0],\n          },\n        };\n        connectData[\"optionalNamespaces\"] = optData;\n      }\n\n      if (nameSpacesChains.length === 0 && optSpaceChains.length === 0) {\n        //未选择链\n        alert(\"请选择一条链\");\n        return;\n      }\n      console.log(\"=====>connectData \");\n      console.log(connectData);\n\n      var connectMethod;\n\n      if (!isTwoSteps){\n        connectData.connectMethods = this.getCurrentSelectedMethodData();\n      }\n\n      if (window.provider instanceof OKXUniversalConnectUI) {\n        connectMethod = window.provider.openModal(connectData);\n      } else {\n        connectMethod = window.provider.connect(connectData);\n      }\n\n      await connectMethod\n        .then((result) => {\n          // 2. set defaul chain\n          this.walletAddress = \"connected\";\n          if (this.isPC()) {\n            this.showModal = false;\n          }\n          if (result){\n            this.testboc = JSON.stringify(result)\n          }\n          if (isTwoSteps){\n            this.sendTransactionAlert()\n          }\n\n          if (window.provider.session && window.provider.session.namespaces){\n            let ton = window.provider.session.namespaces[\"ton\"];\n          console.log(\"是否包含ton\",ton)\n            if (ton){\n              this.tonUniversalLog()\n            }\n          }\n        })\n        .catch((error) => {\n          if (error.code == OKX_CONNECT_ERROR_CODES.OKX_CONNECT_SDK_ERROR) {\n            setTimeout(() => {\n              alert(error.message)\n            }, 0.5);\n          }\n          console.error(\"发生了错误：\", error);\n        });\n    },\n\n    getCurrentSelectedMethodData(){// 连接签名\n      var methodList = [];\n      this.selectedMethod.forEach(method =>{\n        switch (method) {\n          case \"wallet_addEthereumChain(ETH)\":\n            methodList.push({\n              method: \"wallet_addEthereumChain\",\n              chainId:\"eip155:1\",\n              params: {\n                blockExplorerUrls: [\"https://explorer.fuse.io\"],\n                chainId: \"0x7a\",\n                chainName: \"Fuse\",\n                nativeCurrency: { name: \"Fuse\", symbol: \"FUSE\", decimals: 18 },\n                rpcUrls: [\"https://rpc.fuse.io\"],\n              },\n            })\n            break;\n          case \"personal_sign(ETH)\":\n            methodList.push(\n              {\n                method: \"personal_sign\",\n                chainId: \"eip155:1\",\n                params: [\n                  \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n                ],\n              });\n            break;\n          case \"solana_signMessage(Sol mainnet)\":\n            methodList.push(\n              {\n                \"chainId\": \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n                \"method\": \"solana_signMessage\",\n                \"params\": {\n                  \"message\": \"Hello Solana\",\n                }\n              }\n            );\n            break;\n          case \"sui_signMessage(Sui mainnet)\":\n          case \"sui_signPersonalMessage(Sui mainnet)\": {\n            let suiData = [\n              76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n              109, 111, 118, 101,\n            ];\n            let uint8Array = new Uint8Array(suiData);\n            let currentMethod = \"sui_signMessage\";\n            this.currentSuiTransaction = {\n              message:uint8Array\n            }\n\n            if(method.startsWith(\"sui_signPersonalMessage\")){\n              currentMethod = \"sui_signPersonalMessage\";\n            }\n            methodList.push(\n                {\n                  method: currentMethod,\n                  chainId: \"sui:mainnet\",\n                  params: {\n                    message: uint8Array,\n                  }\n                }\n            );\n            break;\n          }\n          case \"btc_signMessage(BTC)\":\n            methodList.push(\n              {\n                method: \"btc_signMessage\",\n                chainId: \"btc:mainnet\",\n                params: {\n                  signStr: \"Welcome to UniSat!\\n\\nClick to sign in and accept the UniSat Terms of Service (https://unisat.io/terms-of-service.html) and Privacy Policy (https://unisat.io/privacy-policy.html).\\n    \\nThis request will not trigger a blockchain transaction.\\n    \\nYour authentication status will reset after 24 hours.\\n    \\nWallet address:\\nbc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\\n    \\nNonce:\\n162d70e3-8c21-4cfd-9a22-9bf0a4b7be51\\n\"\n                }\n              }\n            )\n            break;\n          case \"aptos_signMessage(aptos mainnet)\":\n            methodList.push(\n              {\n                \"chainId\": \"aptos:mainnet\",\n                \"method\": \"aptos_signMessage\",\n                \"params\": {\n                  address: true,\n                  application: true,\n                  chainId: true,\n                  message: \"Hello Aptos\",\n                  nonce: \"1234\"\n                }\n              }\n            )\n            break;\n          case \"cosmos_signArbitrary(cosmoshub)\":\n            methodList.push(\n                {\n                  \"chainId\": \"cosmos:cosmoshub-4\",\n                  \"method\": \"cosmos_signArbitrary\",\n                  \"params\": {\n                    message: \"test cosmos\"\n                  }\n                }\n            )\n\n            break;\n          case \"test_noSupport_eth(ETH)\":\n            methodList.push(\n                {\n                  chainId: \"eip155:1\",\n                  method: \"test_noSupport_eth\",\n                  params: {\n                    message: \"测试不支持的方法\",\n                  }\n                }\n            )\n            break;\n          case \"tron_signMessage\":\n            methodList.push(\n                {\n                  chainId:\"tron:mainnet\",\n                  method: \"tron_signMessage\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n          case \"tron_signMessageV2\":\n            methodList.push(\n                {\n                  chainId:\"tron:mainnet\",\n                  method: \"tron_signMessageV2\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n          \n          case \"starknet_signMessage\": {\n            const signData = {\n                \"domain\": {\n                  \"chainId\": \"0x534e5f4d41494e\",\n                  \"name\": \"STRKFarm\",\n                  \"version\": \"1\"\n                },\n                \"message\": {\n                  \"document\": \"app.strkfarm.xyz/tnc/v1\",\n                  \"message\": \"Read and Agree T&C\"\n                },\n                \"primaryType\": \"Tnc\",\n                \"types\": {\n                  \"StarkNetDomain\": [\n                    {\n                      \"name\": \"name\",\n                      \"type\": \"felt\"\n                    },\n                    {\n                      \"name\": \"version\",\n                      \"type\": \"felt\"\n                    },\n                    {\n                      \"name\": \"chainId\",\n                      \"type\": \"felt\"\n                    }\n                  ],\n                  \"Tnc\": [\n                    {\n                      \"name\": \"message\",\n                      \"type\": \"felt\"\n                    },\n                    {\n                      \"name\": \"document\",\n                      \"type\": \"felt\"\n                    }\n                  ]\n                }\n            }\n            methodList.push({\n                  chainId:\"starknet:mainnet\",\n                  method: \"starknet_signMessage\",\n                  params: {\n                    accountAddress: \"\",\n                    typedData: signData\n                  }\n                })\n          }\n            break\n          default:\n\n            break;\n        }\n      })\n      this.selectedMethodData = methodList\n      return methodList\n\n    },\n\n    closeModal() {\n      this.showModal = false;\n    },\n\n    isPC() {\n      const userAgentInfo = navigator.userAgent;\n      console.log(\"current device ua is ===>\", userAgentInfo);\n\n      const Agents = [\n        \"Android\",\n        \"iPhone\",\n        \"SymbianOS\",\n        \"Windows Phone\",\n        \"iPad\",\n        \"iPod\",\n      ];\n      let flag = true;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = false;\n          break;\n        }\n      }\n      return flag;\n    },\n    isSafariOrChrome() {\n      const userAgentInfo = navigator.userAgent;\n      const Agents = [\"Safari\", \"Chrome\"];\n      let flag = false;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = true;\n          break;\n        }\n      }\n      return flag;\n    },\n\n    /// solana\n    async sol_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      let data = {\n        method: \"solana_signMessage\",\n        params: {\n          message: \"Hello Solana\",\n          pubkey: \"\",\n        },\n      };\n      this.testTransaction = JSON.stringify(data);\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let message = await provider.signMessage(\n          \"Hello Solana\",\n          this.selectedChain\n      );\n      console.log(\"solana_signMessage Result:\",JSON.stringify(message))\n      const result1 = nacl.sign.detached.verify(\n          new TextEncoder().encode(\"Hello Solana\"),\n          message.signature,\n          new PublicKey(message.publicKey).toBytes()\n      );\n      console.log(result1)\n\n      if (typeof message == \"string\") {\n        this.testboc = result1;\n      } else {\n        this.testboc = result1;\n      }\n    },\n\n    async aptos_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      let data = {\n        address: true,\n        application: true,\n        chainId: true,\n        message: \"Hello Aptos\",\n        nonce: \"1234\"\n      }\n\n      let provider = new OKXAptosProvider(window.provider)\n      let message = await provider.signMessage(data, this.selectedChain)\n      this.testTransaction = JSON.stringify(data)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n          functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n          functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        },\n      });\n\n      // let data = {\n      //   \"arguments\": [\"100000\",[\"0\",\"0\",\"10533\"],[\"10\",\"5\",\"5\"],[\"false\",\"false\",\"true\"]],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x3\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\",\"0x73eb84966be67e4697fc5ae75173ca6c35089e802650f75422ab49a8729704ec::coin::DooDoo\",\"0x53a30a6e5936c0a4c5140daed34de39d17ca7fcae08f947c02e979cef98a3719::coin::LSD\",\"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::CurveV1\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x54cb0bb2c18564b86e34539b9f89cfe1186e39d89fce54e1cd007b8e61673a85::bin_steps::X80\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async sol_signVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(\n        provider.getAccount(\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\").address\n      );\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n         recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signTransaction(\n        transaction,\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAndSendVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n        transaction,\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllVersionedTransactions() {\n      let provider = new OKXSolanaProvider(window.provider);\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n        [transaction],\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signTransaction() {\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n         recentBlockhash: blockhash,\n      }).add(\n        SystemProgram.transfer({\n          fromPubkey: new PublicKey(provider.getAccount().address),\n          toPubkey: new PublicKey(provider.getAccount().address),\n          lamports: 1000,\n        })\n      );\n\n      this.testTransaction = safeJsonStringify(transaction)\n      let result = await provider.signTransaction(\n        transaction,\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllTransactions() {\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n        SystemProgram.transfer({\n          fromPubkey: new PublicKey(provider.getAccount().address),\n          toPubkey: new PublicKey(provider.getAccount().address),\n          lamports: \"100\",\n        })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n        [transaction],\n        this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    getSolConnect() {\n      let rpc = \"https://www.okx.com/fullnode/sol/discover/rpc\"\n      if (this.selectedChain === \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\") {\n        rpc = \"https://www.okx.com//fullnode/sol/discover/rpc\"\n      } else if (this.selectedChain === \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\"){\n        rpc = \"https://www.okx.com/fullnode/soltestnet/discover/rpc\"\n      } else if (this.selectedChain === \"svm:70000062\") {\n        rpc = \"https://www.okx.com/fullnode/sonic/testnet/discover/rpc\"\n      }\n      return rpc\n    },\n\n    async sol_signAndSendTransaction() {\n\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n        SystemProgram.transfer({\n          fromPubkey: new PublicKey(provider.getAccount().address),\n          toPubkey: new PublicKey(provider.getAccount().address),\n          lamports: \"100\",\n        })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n        transaction,\n        this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async cosmos_signArbitrary() {\n      let provider = new OKXCosmosProvider(window.provider)\n      let message = await provider.signArbitrary(this.selectedChain, provider.getAccount(this.selectedChain).address, \"test cosmos\")\n      if (typeof message == \"string\") {\n        this.testboc = message;\n      } else {\n        let isValid =  await this.cosmos_verifySignArbitrary(provider.getAccount(this.selectedChain).address,\"test cosmos\",message.signature, message.pub_key.value)\n        console.log(\"verify\",isValid)\n        this.testboc = \"verify:\" + isValid + JSON.stringify(message);\n      }\n    },\n\n    async cosmos_verifySignArbitrary(signer, data, signature, pubkey) {\n      try {\n        // 将bech32地址转换为公钥\n        const {prefix: prefixStr} = fromBech32(signer)\n\n        const signatureBuffer = Buffer.from(signature, 'base64');\n\n        const uint8Signature = new Uint8Array(signatureBuffer); // Convert the buffer to an Uint8Array\n\n        const pubKeyValueBuffer = Buffer.from(pubkey, 'base64'); // Decode the base64 encoded value\n\n        const pubKeyUint8Array = new Uint8Array(pubKeyValueBuffer); // Convert the buffer to an Uint8Array\n\n        // 验证签名\n        return await verifyADR36Amino(\n            prefixStr,\n            signer,\n            data,\n            pubKeyUint8Array,\n            uint8Signature\n        )\n      } catch (err) {\n        console.error('Verification failed:', err)\n        return false\n      }\n    },\n\n    async cosmos_signAmino(){\n      let provider = new OKXCosmosProvider(window.provider)\n      // const rpcUrl = 'https://osmosis-rpc.publicnode.com:443';\n      // const client = await StargateClient.connect(rpcUrl);\n      // const height = await client.getHeight();\n      // let address = provider.getAccount(this.selectedChain).address\n      // const sequence = await client.getSequence(address)\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      // let signDoc = makeSignDoc(\n      //     transaction.msgs,\n      //     transaction.fee,\n      //     this.selectedChain.split(\":\")[1],\n      //     transaction.memo,\n      //     transaction.accountNumber,\n      //     transaction.sequence,\n      // )\n      let signDoc = {\n        \"chain_id\": \"osmosis-1\",\n        \"account_number\": \"630104\",\n        \"sequence\": \"480\",\n        \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]},\n        \"msgs\": [{\n          \"type\": \"osmosis/poolmanager/swap-exact-amount-in\",\n          \"value\": {\n            \"sender\": \"osmo1u6lts9ng4etxj0zdaxsada6zgl8dudpgelmuyu\",\n            \"routes\": [{\n              \"pool_id\": \"1096\",\n              \"token_out_denom\": \"ibc/987C17B11ABC2B20019178ACE62929FE9840202CE79498E29FE8E5CB02B7C0A4\"\n            }, {\n              \"pool_id\": \"611\",\n              \"token_out_denom\": \"ibc/27394FB092D2ECCD56123C74F36E4C1F926001CEADA9CA97EA622B25F41E5EB2\"\n            }],\n            \"token_in\": {\"denom\": \"uosmo\", \"amount\": \"100\"},\n            \"token_out_min_amount\": \"8\"\n          }\n        }],\n        \"memo\": \"FE\",\n        \"timeout_height\": \"23603788\",\n        \"signOptions\": {\n          \"useOneClickTrading\": false,\n          \"preferNoSetFee\": true,\n          \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]}\n        }\n      }\n\n\n\n\n\n\n\n      // let signOption = {\n      //   memo: true, // optional\n      //   fee: true, // optional\n      //   gasRate: {\n      //     // optional\n      //     average: \"0.2\",\n      //     low: \"0.02\",\n      //     tiny: \"0.002\",\n      //   },\n      // }\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signAmino(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, signDoc)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    messageToBuffer(message) {\n      var buffer = Buffer.from([]);\n      try {\n        if (typeof message === \"string\") {\n          buffer = Buffer.from(message.replace(\"0x\", \"\"), \"hex\");\n        } else {\n          buffer = Buffer.from(message);\n        }\n      } catch (err) {\n        console.log(`messageToBuffer error: ${err}`);\n      }\n      return buffer;\n    },\n\n\n\n    async cosmos_signDirect() {\n      let provider = new OKXCosmosProvider(window.provider)\n\n      let signDoc = {\n        \"bodyBytes\": this.messageToBuffer(\"0x0ac1010a292f6962632e6170706c69636174696f6e732e7472616e736665722e76312e4d73675472616e736665721293010a087472616e7366657212096368616e6e656c2d301a0d0a05756f736d6f120431303030222b6f736d6f3175366c7473396e67346574786a307a64617873616461367a676c386475647067656c6d7579752a2d636f736d6f733175366c7473396e67346574786a307a64617873616461367a676c386475647067337967766a773207080410ebe3f90a3880b0bcafd18cec8218\"),\n        \"authInfoBytes\": this.messageToBuffer(\"0x0a510a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a2102446e19e94ac0e83ea896d2712507577eb39fbdd2d6ae9f0fc0b9759f1fbaba9012040a02080118e00312140a0e0a05756f736d6f1205323530303010859a11\"),\n        \"chainId\": \"osmosis-1\",\n        \"accountNumber\": \"630104\",\n      }\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signDirect(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, transaction)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    sui_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentSuiTransaction = params\n      this.currentSuiMethod = flag\n    },\n\n    btc_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentBtcTransaction = params\n      this.currentBtcMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n\n    fractal_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentFractalTransaction = params\n      this.currentFractalMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n    tron_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n    tron_generateTransactionParams(params){\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n\n    starknet_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n\n    starknet_generateTransactionParams(params) {\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n\n    handleModalsSelect(modals) {\n      selectedModals = modals;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedDeepLink,\n            modals: modals.length === 3 ? \"all\" : modals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n\n    handleReturnStrategySelect(returnStrategy) {\n      selectedReturnStrategy = returnStrategy === \"deeplink\" ? this.deeplink : returnStrategy;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n\n    handleReturnStrategyDeeplink(deeplink) {\n      selectedReturnStrategy = deeplink;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: deeplink,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n\n    handleLanguageSelect(language) {\n      selectedLanguage = language;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: language,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n    handleConnectMethodsSelect() {\n      console.log(\"当前的方法 this.selectedMethod>>>>\",this.selectedMethod);\n    },\n\n    eth_verifyMessage(message, signature,ethAddress) {\n      console.log(\"eth_verifyMessage   message>>>\",message)\n      console.log(\"eth_verifyMessage   signature>>>\",signature)\n      console.log(\"eth_verifyMessage   ethAddress>>>\",ethAddress)\n      if (!message || !signature){\n        return \"\"\n      }\n      let originalMessage = message\n      if (message.startsWith(\"0x\")){\n        originalMessage = originalMessage.replace(/^0x/, '');\n        let str = '';\n        for (let i = 0; i < originalMessage.length; i += 2) {\n          const byte = originalMessage.slice(i, i + 2);\n          str += String.fromCharCode(parseInt(byte, 16));\n        }\n        originalMessage = str\n      }\n      console.log(\"eth_verifyMessage   originalMessage>>>\",originalMessage)\n\n      // const messageHash = ethers.utils.hashMessage(originalMessage);\n      const recoveredAddress = ethers.utils.verifyMessage(originalMessage, signature);\n      console.log(\"eth_verifyMessage recoveredAddress:\", recoveredAddress);\n      return recoveredAddress.toLowerCase() === ethAddress.toLowerCase();\n    },\n\n    async verifyMessage(){ //连接验签\n\n        if (window.provider && window.provider.session && window.provider.session.connectMethodsReply && window.provider.session.connectMethodsReply.length>0){\n          let verifyList = {}\n          for (let methodItem of window.provider.session.connectMethodsReply){\n            if (\"result\" in methodItem && \"method\" in methodItem){\n              let requestItme = this.selectedMethodData.filter(item => item.method === methodItem.method)[0];\n              console.log(\"验证签名 请求>>>:\", JSON.stringify(requestItme));\n              console.log(\"验证签名 结果>>>:\", JSON.stringify(methodItem));\n              if (methodItem.method === \"personal_sign\"){\n                let ethAddress = await window.provider.request({ method: \"eth_requestAccounts\" },methodItem.chainId)\n                ethAddress = ethAddress[0];\n                console.log(\"验证eth 钱包地址>>>:\", ethAddress);\n                let ethMessage = requestItme.params[0]\n                console.log(\"验证eth 签名消息体>>:\", JSON.stringify(ethMessage));\n                verifyList[methodItem.method] = this.eth_verifyMessage(ethMessage,methodItem.result,ethAddress)\n              }else if(methodItem.method === \"solana_signMessage\"){\n                let solanaMessage = methodItem.result\n                if (\"signature\" in solanaMessage && \"publicKey\" in solanaMessage){\n                  const verifySol = nacl.sign.detached.verify(\n                      new TextEncoder().encode(\"Hello Solana\"),\n                      solanaMessage.signature,\n                      new PublicKey(solanaMessage.publicKey).toBytes()\n                  );\n                  verifyList[methodItem.method] = verifySol\n                }else {\n                  verifyList[methodItem.method] = false\n                }\n              }else if(methodItem.method === \"sui_signPersonalMessage\" || methodItem.method === \"sui_signMessage\"){\n                let suiResult =  this.sui_verifySignature(methodItem.result);\n                  verifyList[methodItem.method] = (await suiResult).result\n              }else if(methodItem.method === \"btc_signMessage\"){\n\n                verifyList[methodItem.method] = \"Not verified yet\"\n\n              }else if(methodItem.method === \"aptos_signMessage\"){\n                let aptosMessage = methodItem.result\n                let aptosProvider = new OKXAptosProvider(window.provider)\n                let  aptosPublicKey  = aptosProvider.getAccount(methodItem.chainId)?.publicKey\n\n                let signStr = aptosMessage.signature\n                if (signStr.startsWith(\"0x\")) {\n                  signStr = signStr.slice(2, signStr.length)\n                }\n\n                console.log(\"aptos_signMessage aptosPublicKey And signStr\",aptosPublicKey,signStr)\n                verifyList[methodItem.method] = nacl.sign.detached.verify(\n                    Buffer.from(aptosMessage.fullMessage),\n                    Buffer.from(signStr, 'hex'),\n                    Buffer.from(aptosPublicKey, 'hex'),\n                );\n              }else if(methodItem.method === \"cosmos_signArbitrary\"){\n                let cosmosProvider = new OKXCosmosProvider(window.provider)\n                let cosmosAddress = cosmosProvider.getAccount(methodItem.chainId)?.address\n                let cosmosMessage = methodItem.result\n                let isValid =  await this.cosmos_verifySignArbitrary(cosmosAddress,\"test cosmos\",cosmosMessage.signature, cosmosMessage.pub_key.value)\n                verifyList[methodItem.method] = isValid\n\n              }else if (methodItem.method === \"tron_signMessage\") {\n                let tronMessage = methodItem.result\n                let tronWeb = new TronWeb({\n                  \"fullHost\": 'https://api.trongrid.io',\n                  \"headers\": {},\n                  \"privateKey\": ''\n                })\n                let provider = new OKXTronProvider(window.provider)\n                verifyList[methodItem.method] = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), tronMessage, provider.getAccount(\"tron:mainnet\").address)\n              } else if (methodItem.method === \"tron_signMessageV2\") {\n                let tronMessage = methodItem.result\n                let tronWeb = new TronWeb({\n                  \"fullHost\": 'https://api.trongrid.io',\n                  \"headers\": {},\n                  \"privateKey\": ''\n                })\n                const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", tronMessage);\n                let provider = new OKXTronProvider(window.provider)\n\n                verifyList[methodItem.method] = base58Address === provider.getAccount(\"tron:mainnet\").address\n              }else if (methodItem.method === \"starknet_signMessage\") {\n                let res = methodItem.result\n                let signData = this.starknetPanelTypedData\n\n                const rpcProvider = new StarknetRpcProvider({ nodeUrl: \"https://free-rpc.nethermind.io/mainnet-juno/v0_7\" });\n\n                let provider = new OKXStarknetProvider(window.provider)\n                let address = provider.getAccount(\"starknet:mainnet\").address\n                let pk = \"0x123\"; /// random pk\n                const account = new StarknetAccount(rpcProvider, address, pk)\n\n                let that = this\n                account.verifyMessage(signData, res).then(function (isValid) {\n                  that.testTransaction = `Verifyed result: \\n${isValid}`\n                }).catch(function (error) {\n                  that.testTransaction = `Verifyed failed: \\n${error}`\n                })\n                verifyList[methodItem.method] = \"starknet is verifying signature...\"\n              }\n              else {\n                verifyList[methodItem.method] = \"Not verified yet\"\n\n              }\n            }else if(\"method\" in methodItem && \"error\" in methodItem) {\n              verifyList[methodItem.method] = methodItem.error\n            }\n\n          }\n\n          console.log(\"验证签名 最后的结果>>>:\", JSON.stringify(verifyList));\n          this.testTransaction = \"签名验证结果如下: \\n\" + JSON.stringify(verifyList)\n        }else {\n          console.log(\"验证签名 window.provider.session.connectMethodsReply 为空:\");\n\n        }\n\n    },\n\n    handleThemeSelect(theme) {\n      selectedTheme = theme;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: theme,\n          },\n        };\n      }\n    },\n\n    async sui_verifySignature(signatureResult) {\n      let resultObj = signatureResult\n      let result = false\n      let msg = ''\n      try {\n        /// 获取当前account\n        const adapter = new SuiAdapter(window.provider);\n        let account = adapter.getAccount()\n        console.log(`Account中获取的address：${account.address}`)\n\n        /// 验证签名\n        let pubKey = await verifyPersonalMessageSignature(this.currentSuiTransaction.message, resultObj.signature)\n        let address = pubKey.toSuiAddress()\n        console.log(`验签结果计算得到address：${address}`)\n\n        /// 对比pubKey\n        console.log(`account pubkey: ${account.publicKey}`,)\n        console.log(`result pubkey: ${pubKey.toBase64()}`)\n        result = (account.address === address) && (account.publicKey === pubKey.toBase64())\n\n        msg = `address verify: ${account.address === address}\\npublicKey verify: ${account.publicKey === pubKey.toBase64()}`\n        console.log(\"signature verify success: \", pubKey)\n      } catch (e) {\n        console.log(\"signature verify failed: \", e)\n      }\n      return {\n        result,\n        msg\n      }\n    },\n\n  },\n  created() {\n    // for (const eventName of Object.values(OKX_TON_CONNECTION_AND_TRANSACTION_EVENT)) {\n    //   console.log(eventName);\n    //   window.addEventListener(eventName, (event) => {\n    //     console.log(eventName,event.detail)\n    //     this.currentStatus = eventName\n    //   });\n    // }\n  },\n\n  mounted() {\n\n    var scriptTag = document.createElement(\"script\");\n    scriptTag.src = \"https://telegram.org/js/telegram-web-app.js\";\n    scriptTag.id = \"tgsdk\";\n    document.getElementsByTagName('head')[0].appendChild(scriptTag);\n\n    this.connectReady = true;\n    document.title = \"OKX Connect\";\n    this.initBtnClicked()\n\n    console.log(\"挂载成功:\")\n    if (this.$refs.starknetPanelRef) {\n      this.starknetPanelTypedData = toRaw(this.$refs.starknetPanelRef.signData)\n      console.log(\"111: \", this.starknetPanelTypedData)\n    }else {\n      console.log(\"222\")\n    }\n  },\n};\n</script>\n","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signMessage()\">signMessage(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_send()\">send(BTC)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendBitcoin()\">sendBitcoin(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signPsbt_up()\">signPsbt(上架NFT)</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"btc_signAndPushPsbt_up()\">signAndPushPsbt(上架NFT)</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在OKX App选择要上架的Btc NFT，点击【上架】\n        </li>\n        <li>\n          2. 弹出签名面板，点开高级选项，查看\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出上架流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendInscription()\">sendInscription(BTC)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Btc NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount\n    }\n  },\n  methods: {\n    btc_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to UniSat!\\n\\nClick to sign in and accept the UniSat Terms of Service (https://unisat.io/terms-of-service.html) and Privacy Policy (https://unisat.io/privacy-policy.html).\\n    \\nThis request will not trigger a blockchain transaction.\\n    \\nYour authentication status will reset after 24 hours.\\n    \\nWallet address:\\nbc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\\n    \\nNonce:\\n162d70e3-8c21-4cfd-9a22-9bf0a4b7be51\\n\"\n      };\n      this.$emit('generateTransactionParams', params, \"btc_signMessage\")\n    },\n\n    btc_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"btc_send\")\n    },\n\n    btc_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"btc_sendBitcoin\")\n    },\n\n    btc_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"btc_signPsbt\")\n    },\n\n    btc_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"btc_signAndPushPsbt\")\n    },\n\n    btc_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"btc_sendInscription\")\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./BtcTransactionPanel.vue?vue&type=template&id=17e9106e&scoped=true\"\nimport script from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./BtcTransactionPanel.vue?vue&type=style&index=0&id=17e9106e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-17e9106e\"]])\n\nexport default __exports__","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signMessage()\">signMessage(Fractal)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_send()\">send(Fractal)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_sendBitcoin()\">sendBitcoin(Fractal)</el-button>\n\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signPsbt_up()\">signPsbt(上架NFT)</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_signAndPushPsbt_up()\">signAndPushPsbt(上架NFT)</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在OKX App选择要上架的Fractal NFT，点击【上架】\n        </li>\n        <li>\n          2. 弹出签名面板，点开高级选项，查看\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出上架流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_sendInscription()\">sendInscription(Fractal)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Fractal NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount\n    }\n  },\n  methods: {\n    fractal_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to UniSat!\\n\\nClick to sign in and accept the UniSat Terms of Service (https://unisat.io/terms-of-service.html) and Privacy Policy (https://unisat.io/privacy-policy.html).\\n    \\nThis request will not trigger a blockchain transaction.\\n    \\nYour authentication status will reset after 24 hours.\\n    \\nWallet address:\\nbc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\\n    \\nNonce:\\n162d70e3-8c21-4cfd-9a22-9bf0a4b7be51\\n\"\n      };\n      this.$emit('generateTransactionParams', params, \"fractal_signMessage\")\n    },\n\n    fractal_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_send\")\n    },\n\n    fractal_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_sendBitcoin\")\n    },\n\n    fractal_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"fractal_signPsbt\")\n    },\n\n    fractal_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"fractal_signAndPushPsbt\")\n    },\n\n    fractal_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"fractal_sendInscription\")\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./FractalTransactionPanel.vue?vue&type=template&id=02b5b8a5&scoped=true\"\nimport script from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./FractalTransactionPanel.vue?vue&type=style&index=0&id=02b5b8a5&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-02b5b8a5\"]])\n\nexport default __exports__","<script>\n\nimport {getFullnodeUrl, SuiClient} from \"@mysten/sui/client\";\nimport {Transaction as SuiTransaction} from '@mysten/sui/transactions';\n\nexport default {\n  name: \"SuiTransactionPanel\",\n  methods: {\n    sui_getAccount() {\n      this.$emit('generateTransactionParams', '', \"sui_getAccount\")\n    },\n\n    //对单个交易签名（不发送)\n    async sui_signMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signMessage\")\n    },\n\n    async sui_signPersonalMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signPersonalMessage\")\n    },\n\n    sui_signTransaction2() {\n      // 定义要转移的金额和目标地址\n      const amount = 109; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    async sui_requestRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n          `sui:mainnet`,\n          `https://fullnode.mainnet.sui.io:443`\n      );\n      var data = {\n        method: \"suix_getBalance\",\n        params: [\n          \"0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae\",\n          \"0x168da5bf1f48dafc111b0a488fa454aca95e0b5e::usdc::USDC\",\n        ],\n      };\n\n      this.$emit(\"generateTransactionParams\", data, \"sui_testRpc\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 102; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signAndExecuteTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n      this.$emit(\"generateTransactionParams\", input, \"sui_signAndExecuteTransaction\")\n    },\n\n    /// generate txBytes and txSerialize\n    async generateTsBytesAndSerizlize(input) {\n      /// txBytes and txSerialize may be constructed in advance by the dapp side\n      let resultTuple = [\"\", \"\"];\n      if (\n          \"txBytes\" in input &&\n          input.txBytes.length > 0 &&\n          \"txSerialize\" in input &&\n          input.txSerialize.length > 0\n      ) {\n        resultTuple = [input.txBytes, input.txSerialize];\n      }\n\n      /// Otherwise, a transactionBlock parameter is required.\n      if (!(\"transactionBlock\" in input)) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      if (this.walletAddress != \"connected\") {\n        alert(\"请先连接钱包\");\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      let senderAccounts = window.provider.requestAccountsWithNamespace(\"sui\");\n      if (senderAccounts.length == 0) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      try {\n        let rpcUrl = getFullnodeUrl(\"mainnet\");\n        rpcUrl = \"https://www.okx.com/fullnode/sui/discover/rpc\"\n        const suiClient = new SuiClient({ url: rpcUrl });\n\n        /// sender is required\n        input.transactionBlock.setSender(senderAccounts[0]);\n        const result = await input.transactionBlock.build({\n          client: suiClient,\n        });\n        const txBytes = Buffer(result).toString(\"base64\");\n        const txSerialize = await SuiTransaction.from(txBytes).toJSON();\n        resultTuple = [txBytes, txSerialize];\n      } catch (error) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      return new Promise((resolve) => {\n        resolve(resultTuple)\n      })\n    },\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_getAccount()\">getAccount(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signMessage()\">signMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signPersonalMessage()\">signPersonalMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signTransaction2()\">signTransaction(Sui)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signAndExecuteTransaction()\">sendTransaction(Sui)</el-button>\n      <div style=\"font-size: 12px; color: gray;\">(send to Rally Tiger account)</div>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_requestRpc()\">RPC_getBalance</el-button>\n      <div style=\"font-size: 12px; color: gray;\">get USDC balance of address:</div>\n      <div style=\"font-size: 12px; color: gray\">0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae</div>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signTransaction_pre_execution()\">signTransaction(prepared data)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signAndExecuteTransaction_pre_execution()\">sendTransaction(prepared data)</el-button>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./SuiTransactionPanel.vue?vue&type=template&id=30ae15b2&scoped=true\"\nimport script from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./SuiTransactionPanel.vue?vue&type=style&index=0&id=30ae15b2&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-30ae15b2\"]])\n\nexport default __exports__","<script>\nimport { OKXStarknetProvider } from \"@okxconnect/universal-provider\";\nimport { CallData, uint256, RpcProvider, Account } from \"starknet\";\n\nexport default {\n  name: \"StarknetTransactionPanel\",\n  methods: {\n    async starknet_signMessage() {\n      this.address = this.getCurrentAddress()\n      if (this.address === \"\") {\n        alert(\"address can't be ''\");\n        return\n      }\n\n      let signData = this.signData\n      this.$emit(\"generateTransactionParams\", JSON.stringify(signData))\n      let provider = new OKXStarknetProvider(window.provider)\n      let res = await provider.signMessage(this.address, signData, \"starknet:mainnet\")\n      if (res.code) {\n        if (res.code == 301) {\n          let msg = \"Wallet address is registering, please try again later!\"\n          alert(msg)\n          this.$emit(\"generateTransactionResult\", msg, \"starknet_signMessage\")\n        }\n        this.$emit(\"generateTransactionResult\", res, \"starknet_signMessage\")\n        return\n      }\n      console.log(res)\n\n      const rpcProvider = new RpcProvider({ nodeUrl: \"https://free-rpc.nethermind.io/mainnet-juno/v0_7\" });\n      let pk = \"0x123\"; /// random pk\n      const account = new Account(rpcProvider, this.address, pk)\n      let that = this\n      account.verifyMessage(signData, res).then(function (isValid) {\n        that.$emit(\"generateTransactionResult\", \"verify:\" + isValid + \"\\n\" + res, \"starknet_signMessage\")\n      }).catch(function (error) {\n        that.$emit(\"generateTransactionResult\", \"failed:\" + error + \"\\n\" + res, \"starknet_signMessage\")\n      })\n    },\n\n    async starknet_sendTransaction() {\n      this.address = this.getCurrentAddress()\n      if (this.address === \"\") {\n        alert(\"address can't be ''\");\n        return\n      }\n\n      let val = uint256.bnToUint256(120000000000000000)\n      const transferCalldata = CallData.compile({\n        to: \"0x00b909cefa36ab6bc26f5887a867e46ef162238f0a171b1c2974b665afd4237f\",\n        value: val\n      })\n\n      // const ETHTokenAddress = \"0x049d36570d4e46f48e99674bd3fcc84644ddd6b96f7c741b1562b82f9e004dc7\"\n      // const STARKTokenAddress = \"0x04718f5a0fc34cc1af16a1cdee98ffb20c31f5cd61d6ab07201858f4287c938d\"\n      const DAITokenAddress = \"0x00da114221cb83fa859dbdb4c44beeaa0bb37c7537ad5ae66fe5e0efd20e6eb3\"\n\n      const invokeParams = {\n        calls: [\n          {\n            contract_address: DAITokenAddress,\n            entry_point: \"transfer\",\n            calldata: transferCalldata\n          }\n        ],\n      }\n\n      this.$emit(\"generateTransactionParams\", JSON.stringify(invokeParams))\n      let provider = new OKXStarknetProvider(window.provider)\n\n      let that = this\n      provider.sendTransaction(this.address, invokeParams, \"starknet:mainnet\").then(function(){\n        let res = provider.sendTransaction(\"starknet:mainnet\", this.address, invokeParams)\n        this.$emit(\"generateTransactionResult\", res, \"starknet_sendTransaction\")\n      }).catch(function(error) {\n        if (error.code == 301) {\n          let msg = \"Wallet address is registering, please try again later!\"\n          alert(msg)\n          that.$emit(\"generateTransactionResult\", msg, \"starknet_sendTransaction\")\n        }else {\n          that.$emit(\"generateTransactionResult\", error, \"starknet_sendTransaction\")\n        }\n      });\n    },\n\n    getCurrentAddress() {\n      let provider = new OKXStarknetProvider(window.provider)\n      const address = provider.getAccount(\"starknet:mainnet\")?.address\n      return address\n    },\n\n    getPublicKey() {\n      let provider = new OKXStarknetProvider(window.provider)\n      const account = provider.getAccount(\"starknet:mainnet\")\n      console.log(\"获取到的account是：\")\n      console.log(account)\n      return \"05d8e5e9c1dd686246716c888159271d2f13986cb4acee46164e2c4e034629c0\"\n    }\n  },\n\n  data() {\n    const signData = {\n        \"domain\": {\n          \"chainId\": \"0x534e5f4d41494e\",\n          \"name\": \"STRKFarm\",\n          \"version\": \"1\"\n        },\n        \"message\": {\n          \"document\": \"app.strkfarm.xyz/tnc/v1\",\n          \"message\": \"Read and Agree T&C\"\n        },\n        \"primaryType\": \"Tnc\",\n        \"types\": {\n          \"StarkNetDomain\": [\n            {\n              \"name\": \"name\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"version\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"chainId\",\n              \"type\": \"felt\"\n            }\n          ],\n          \"Tnc\": [\n            {\n              \"name\": \"message\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"document\",\n              \"type\": \"felt\"\n            }\n          ]\n        }\n    }\n\n    return {\n      signData\n    }\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"starknet_signMessage()\">signMessage</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 验签不成功的话，请尝试连接VPN\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"starknet_sendTransaction(true)\">\n        sendTransaction\n      </el-button>\n\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 发送0.12个DAI到0x00b9...4237f的地址\n        </li>\n        <li>\n          2. 请保证你的钱包有足够的DAI\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./StarknetTransactionPanel.vue?vue&type=template&id=f7430f58&scoped=true\"\nimport script from \"./StarknetTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./StarknetTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./StarknetTransactionPanel.vue?vue&type=style&index=0&id=f7430f58&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-f7430f58\"]])\n\nexport default __exports__","<script>\n\n\nimport {OKXTronProvider} from \"@okxconnect/universal-provider\";\nimport {TronWeb} from \"tronweb\";\n\nexport default {\n  name: \"TronTransactionPanel\",\n  methods: {\n\n    async tron_signMessage() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessage(\"tron:mainnet\", \"Hello Tron\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n\n      const verify = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), res, provider.getAccount(\"tron:mainnet\").address)\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" + res, \"tron_signMessage\")\n    },\n\n    async tron_signMessageV2() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessageV2(\"tron:mainnet\", \"Hello Tron\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", res);\n      console.log(\"tron_signMessageV2_base58Address\", base58Address)\n      console.log(\"tron_signMessageV2_address\", provider.getAccount(\"tron:mainnet\").address)\n      const verify = base58Address === provider.getAccount(\"tron:mainnet\").address\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" +  res, \"tron_signMessage\")\n    },\n\n    async tron_signTransaction(isOnlySign) {\n      let provider = new OKXTronProvider(window.provider)\n        let tronWeb = new TronWeb({\n          \"fullHost\": 'https://api.trongrid.io',\n          \"headers\": {},\n          \"privateKey\": ''\n        })\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const transaction = await tronWeb.transactionBuilder.sendTrx(\"TGBcVLMnVtvJzjPWZpPiYBgwwb7th1w3BF\", 1000, address);\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let res = await provider.signTransaction(\"tron:mainnet\", transaction)\n        this.$emit(\"generateTransactionResult\", res, \"tron_signTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(\"tron:mainnet\", transaction)\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async getContract() {\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n      \n      try {\n        const contract = await tronWeb.trx.getContract(contractAddress)\n        const abi = contract.abi.entrys;\n        console.log(\"获取到的合约：\")\n        console.log(abi)\n      } catch (error) {\n        console.log(\"Error getting contract ABI:\", error);\n      }\n    },\n    \n    async tron_signAndSendTransactionContract(isOnlySign) {\n      // this.getContract()\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n      ]\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"quote(uint256,uint256,uint256)\", {}, parameter, address);\n      console.log(\"=====>transaction: \")\n      console.log(ret);\n      this.$emit(\"generateTransactionParams\", ret.transaction)\n      if (isOnlySign) {\n        let tx = await provider.signTransaction(\"tron:mainnet\", ret.transaction)\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(\"tron:mainnet\", ret.transaction)\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async tron_signAndSendTransactionApprove(isOnlySign) {\n      let contractAddress = \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'address', value: contractAddress},\n        {type: 'uint256', value: 1000},\n      ]\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"approve(address,uint256)\", {}, parameter, address);\n\n      let transaction = ret.transaction\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let tx = await provider.signTransaction(\"tron:mainnet\", transaction)\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(\"tron:mainnet\", transaction)\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n\n    }\n\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessage()\">tron_signMessage</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessageV2()\">tron_signMessageV2</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(true)\">\n        tron_signTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(true)\">\n        tron_signTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(true)\">\n        tron_signTransaction(Approve)\n      </el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(false)\">\n        tron_signAndSendTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(false)\">\n        tron_signAndSendTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(false)\">\n        tron_signAndSendTransaction(approve)\n      </el-button>\n    </el-col>\n\n\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./TronTransactionPanel.vue?vue&type=template&id=7fdd8e4e&scoped=true\"\nimport script from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./TronTransactionPanel.vue?vue&type=style&index=0&id=7fdd8e4e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7fdd8e4e\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=769e18ee&scoped=true\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=769e18ee&scoped=true&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-769e18ee\"]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\nimport App from './App.vue'\n\nconst app = createApp(App)\n\napp.use(ElementPlus)\napp.mount('#app')","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkokxconnectdemo\"] = self[\"webpackChunkokxconnectdemo\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(56323); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["require","__awaiter","this","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","OKXBtcProvider","_1","constructor","caip","provider","getUniversalProvider","getAddressForChainId","chainId","_a","_b","ns","checkChainId","undefined","OKXConnectError","OKX_CONNECT_ERROR_CODES","UNKNOWN_ERROR","accounts","session","namespaces","filter","account","startsWith","length","address","split","getAccount","_c","extra","publicKey","signMessage","signStr","type","params","from","ret","request","method","errorData","error","sendBitcoin","toAddress","satoshis","options","to","toString","feeRate","send","txhash","input","checkParameters","signPsbt","psbtHex","signPsbts","psbtResults","results","JSON","parse","catch","psbtHexs","signAndPushPsbt","sendInscription","inscriptionId","extension","coinId","protocolId","atomicSuffix","ordinalsSuffix","toLowerCase","endsWith","removeSuffix","scenario","txType","batchBean","coinAmount","nftId","str","suffix","slice","keys","unexistKeys","forEach","key","push","console","log","join","includes","namespaceKey","_","OKXCosmosProvider","core_1","_d","_e","NameSpaceKeyCosmos","accountArray","algo","bech32Address","pubKey","hexToUint8Array","signArbitrary","signerAddress","data","base64Encoded","window","btoa","signDoc","chain_id","account_number","sequence","fee","gas","amount","msgs","memo","signData","signAmino","signOptions","resData","signed","signature","signDirect","object","bodyBytes","bufferToHex","authInfoBytes","accountNumber","res","messageToBuffer","message","buffer","Uint8Array","replace","err","arr","output","map","x","padStart","hexString","arrayBuffer","i","byteValue","parseInt","substr","isNaN","OKXStarknetProvider","STARKNET_CHAIN_ID","getChain","CHAIN_NOT_SUPPORTED","NameSpaceKeyStarknet","typedData","sendTransaction","transaction","transactionData","stringify","transaction_hash","signMessageDeclareContractPayload","payload","sendMessageExecuteTransactionDetail","calls","abis","transactionsDetail","transactions","Array","isArray","executionRequest","nonce","version","OKXTonProvider","statusChangeSubscriptions","statusChangeErrorSubscriptions","on","tonWallet","wallet","logDebug","callback","errorsHandler","connected","tonNameSpace","ton_addr","chain","network","walletStateInit","sessionWallet","tonDeviceInfo","platform","appName","appVersion","maxProtocolVersion","features","device","ton_proof","connectItems","tonProof","onStatusChange","item","TONCHAIN","MAINNET","requestAccountsWithNamespace","requestParams","OKXTronProvider","NameSpaceKeyTron","stringToHex","hex","charCodeAt","signMessageV2","signTransaction","signedTx","realSignTx","visible","txID","rawData","contract","raw_data","expiration","ref_block_bytes","ref_block_hash","timestamp","raw_data_hex","signAndSendTransaction","__importDefault","mod","__esModule","OKXUniversalProvider","eip155_1","sui_1","constants_1","eventemitter3_1","client_1","namespaces_1","solana_1","btc_1","aptos_1","ton_1","cosmos_1","tron_1","starknet_1","init","opts","okxConnectUniversalinwindow","initialize","rpcProviders","events","default","providerOpts","args","NOT_CONNECTED_ERROR","namespace","requestParam","buildRequestParamFromRequest","getProvider","validateChain","keyArr","assign","enable","client","connectOpts","connect","requestAccounts","disconnect","called","onRequestSent","disconnectAndEmit","cleanup","engine","connectionManager","emit","topic","aptosChainNameToGeneralId","replaceAptos","aptosNameSpace","realNS","replaceAptosInner","aptos","optionAptosNameSpace","optionalNamespaces","realOptionNS","chains","defaultChain","replaceAptosGeneralIdWithNetName","replaceSessionAptos","index","values","disconnectInner","getCurrentConnectionReady","sessionConfig","openUniversalUrl","isMobileUserAgent","setNamespaces","onConnect","event","listener","once","removeListener","off","setDefaultChain","rpcUrl","test","checkStorage","sessionInfoStr","getFromStore","sessionInfo","restoreconnect","createProviders","registerEventListeners","setTimeout","url","location","hostname","origin","dappMetaData","SignClient","providersToCreate","Set","parseNamespaceKey","namespacesValue","currentNameSpace","Eip155Provider","opts1","solanaProvider","sonicProvider","svmProvider","optsTon","tonProvider","optsSui","suiProvider","SuiProvider","name","optsBtc","btcProvider","fbProvider","aptosProvider","moveProvider","cosmosProvider","tronProvider","starknetProvider","addDisconnectListener","PROVIDER_EVENTS","DEFAULT_CHAIN_CHANGED","caip2ChainId","onChainChanged","UPDATE_NAMESPACES","nameSpaces","nameSpacekey","persist","icon","dappInfo","redirect","isChainNamespaceInSession","chainsArr","defaultNamespace","getDefaultChain","namespaceStr","requestDefaultChainWithNamespace","caip2Chain","sessionProperties","saveSessionContent","getSessionContent","showRequestModal","__createBinding","create","o","m","k","k2","desc","getOwnPropertyDescriptor","writable","configurable","enumerable","get","__exportStar","p","prototype","hasOwnProperty","call","OKXUniversalProvider_1","OKXBtcProvider_1","OKXCosmosProvider_1","OKXTonProvider_1","OKXTronProvider_1","OKXStarknetProvider_1","ConnectMethodUtils_1","ISignClient","metaData","super","Engine","ConnectionManager","connectRequest","requestAccountItem","requiredNamespaces","nameSpaceToConnectWalletNameSpace","connectMethods","connectRequestMethods","connectMethodsToConnectWalletMethods","universalConnect","metadata","info","encodeParams","encodeConnectParams","getUniversalLink","getAppWalletDeepLink","fillParamsToSession","connectMethodsResponseUpdate","isIos","openOKXWallet","response","requestId","code","onAck","openOKXDeeplink","standardDeeplink","connectSupportMethods","bs58_1","uint8array_extras_1","isRecord","connectMethodsReply","methodItem","solanaSuccessData","decode","suiMethod","requestMethod","suiMessage","suiMessageb64","aptosSignature","notSupportError","METHOD_NOT_SUPPORTED","requestItem","errorItem","requireNameSpace","includeEip155","some","space","includeChain","paramsArr","firstParam","firstObj","convertedArray","uint8Array","decoder","TextDecoder","b64encoded","atob","encode","stringToUint8Array","aptosParams","currentURL","protocol","signChainId","applicationUrl","prefix","aptosChainId","stringToBase64","cosmosChain","freeze","getAccountsChains","isCaipNamespace","NameSpaceKeyEip155","NameSpaceKeySOL","NameSpaceKeySui","NameSpaceKeyAptos","NameSpaceKeyBtc","NameSpaceKeyTON","mergeRpcMap","targetRpcMap","sourceRpcMap","mergeNamespaces","target","source","rpcMap","GENERIC_SUBPROVIDER_NAME","RPC_URL","STORAGE","CONTEXT","WC_VERSION","PROTOCOL","RELAY_URL","LOGGER","utils_1","JsonRpcConnection_1","JsonRpcProvider_1","AptosProvider","httpProviders","createHttpProviders","updateNamespace","getAccounts","methods","setHttpProvider","Error","http","parsedChainId","getChainId","parsedRpc","getRpcUrl","httpProvider","createHttpProvider","getHttpProvider","rpc","JsonRpcProvider","JsonRpcConnection","getGlobal","BtcProvider","logError","CosmosProvider","updateRequestParams","isDic","switchChainId","decimalNumber","selectedChainId","chainNum","paramsChainId","paramsChainString","String","Number","adaptArray","messageObj","addressObj","isEqual","chainAddress","messages","typedDataJson","secondObj","hexChainId","getHexChainIdFromRequest","isChainApproved","handleSwitchChain","addEthereumChain","resultData","nameSpace","rpcUrls","eip155","cross_fetch_1","core_2","DEFAULT_HTTP_HEADERS","Accept","DEFAULT_HTTP_METHOD","DEFAULT_FETCH_OPTS","headers","disableProviderPing","EventEmitter","isAvailable","registering","isHttpUrl","connecting","open","arguments","register","close","onClose","body","safeJsonStringify","json","onPayload","onError","id","jsonrpc","onOpen","parseError","safeJsonParse","formatJsonRpcError","parseConnectionError","types_1","IJSONRpcProvider","connection","hasRegisteredEventListeners","setConnection","context","requestStrict","formatJsonRpcRequest","getBigIntRpcId","isJsonRpcError","isJsonRpcResponse","reason","_error","SolanaProvider","getPubkey","getWalletAddress","components","StarknetProvider","__rest","s","t","indexOf","getOwnPropertySymbols","propertyIsEnumerable","TONProvider","validUntil","newParams","fromAddress","boc","TronProvider","IJSONRpcConnection","opt","setGlobal","globals","projectId","parseChainId","reference","convertChainIdToNumber","mergeArrays","CAIP_DELIMITER","a","b","_createElementBlock","_hoisted_1","_createVNode","_component_el_container","_withCtx","_component_el_header","_cache","_createTextVNode","_component_el_main","_component_el_card","class","header","_createElementVNode","_component_el_row","_component_el_col","span","_toDisplayString","$options","_ctx","currentStatus","_component_el_checkbox","modelValue","withUI","$event","onChange","handleWithUI","style","_component_el_select","modals","placeholder","handleModalsSelect","multiple","_component_el_option","label","returnStrategy","handleReturnStrategySelect","_Fragment","_renderList","returnStrategies","strategy","_createBlock","_component_el_input","deeplink","handleReturnStrategyDeeplink","disabled","_createCommentVNode","language","handleLanguageSelect","locales","locale","theme","handleThemeSelect","THEME","LIGHT","DARK","selectedMethod","handleConnectMethodsSelect","tonProofValue","gutter","align","availableChains","checked","areChainsInit","isOptionalChecked","handleOptionChange","_component_el_button","onClick","initBtnClicked","connectInitStr","connectBtnClicked","connectStatusStr","connectBtnAndSignClicked","connectAndSignStr","disconnectAction","walletAddress","disconnectStatusStr","_Teleport","showModal","closeModal","_withModifiers","_component_qrcode_vue","qrValue","size","level","_component_el_tabs","activeTab","onTabClick","clickActiveTab","_component_el_tab_pane","eth_requestAccounts","eth_chainId","wallet_switchEthereumChain","wallet_addEthereumChain","personal_sign","eth_signTypedData_v4","eth_sendTransaction_transfer","eth_sendTransaction_approve","eth_sendTransaction_mint","wallet_watchAsset","wallet_testRpc","eth_sendTransaction_swap","ton_getAccount","ton_sendTransaction","sol_signMessage","sol_signTransaction","sol_signVersionedTransaction","sol_signAllTransactions","sol_signAllVersionedTransactions","sol_signAndSendTransaction","sol_signAndSendVersionedTransaction","_component_SuiPanel","onGenerateTransactionParams","sui_generateTransactionParams","_component_BTCPanel","btc_generateTransactionParams","_component_FractalPanel","fractal_generateTransactionParams","_component_TronTransactionPanel","tron_generateTransactionParams","onGenerateTransactionResult","tron_getTransactionResult","aptos_signMessage","aptos_signTransaction","aptos_signAndSubmitTransaction","move_signTransaction","move_signAndSubmitTransaction","cosmos_signArbitrary","cosmos_signAmino","cosmos_signDirect","_component_StarknetPanel","ref","starknet_generateTransactionParams","starknet_getTransactionResult","testBase64UrlSafe","xs","sm","testTransaction","rows","testboc","$setup","sendBtnDisabled","testTransactionStr","btc_signMessage","sendAmount","clearable","btc_send","sendSatoshisAmount","btc_sendBitcoin","btc_signPsbt_up","btc_signAndPushPsbt_up","receiver","btc_sendInscription","props","msg","setup","$emit","alert","autoFinalized","__exports__","fractal_signMessage","fractal_send","fractal_sendBitcoin","fractal_signPsbt_up","fractal_signAndPushPsbt_up","fractal_sendInscription","sui_getAccount","sui_signMessage","sui_signPersonalMessage","sui_signTransaction2","sui_signAndExecuteTransaction","sui_requestRpc","sui_signTransaction_pre_execution","sui_signAndExecuteTransaction_pre_execution","recipientAddress","tx","SuiTransaction","coin","splitCoins","transferObjects","transactionBlock","showEffects","txBytes","txSerialize","generateTsBytesAndSerizlize","resultTuple","senderAccounts","getFullnodeUrl","suiClient","SuiClient","setSender","build","Buffer","toJSON","starknet_signMessage","starknet_sendTransaction","getCurrentAddress","rpcProvider","RpcProvider","nodeUrl","pk","Account","that","verifyMessage","isValid","val","uint256","bnToUint256","transferCalldata","CallData","compile","DAITokenAddress","invokeParams","contract_address","entry_point","calldata","getPublicKey","tron_signMessage","tron_signMessageV2","tron_signTransaction","tron_signAndSendTransactionContract","tron_signAndSendTransactionApprove","tronWeb","TronWeb","verify","trx","base58Address","verifyMessageV2","isOnlySign","transactionBuilder","sendTrx","getContract","contractAddress","abi","entrys","parameter","triggerSmartContract","verifyADR36Amino","fromBech32","VConsole","allChains","optionChains","selectedModals","selectedReturnStrategy","selectedDeepLink","selectedLanguage","selectedTheme","TronTransactionPanel","QrcodeVue","BTCPanel","FractalPanel","SuiPanel","StarknetPanel","testTopic","testPublicKey","testProofPayload","pendingDeepLink","logList","connectReady","localPubKey","localSecKey","selectedChain","ProofPayloadVerify","showVerifyRow","has","localStorage","getItem","selectedMethodData","isChecked","setItem","reload","delete","add","starknetPanelTypedData","computed","selectedChains","initChains","newChains","updatedChains","tab","tabName","initCall","OKXUniversalConnectUI","actionsConfiguration","uiPreferences","walletInfo","entries","substring","uri","isPC","Date","now","testTonSdk","blockExplorerUrls","chainName","nativeCurrency","symbol","decimals","dataETH","dataPolygon","types","EIP712Domain","Person","Mail","primaryType","domain","verifyingContract","contents","maxPriorityFeePerGas","maxFeePerGas","gasPrice","gasLimit","image","tonUniversalLog","sendTransactionAlert","fetch","confirm","sendData","adapter","SuiAdapter","suiResult","currentSuiMethod","currentSuiTransaction","signAndExecuteTransaction","sui_verifySignature","signPersonalMessage","btcAdapter","btcResult","currentBtcMethod","currentBtcTransaction","hexToBase64","bs64Str","fractalResult","currentFractalMethod","currentFractalTransaction","USER_REJECTS_ERROR","hexStr","bytes","blob","Blob","reader","FileReader","onload","base64Data","onerror","readAsDataURL","datatest","utf8Array","TextEncoder","binary","byte","fromCharCode","firstStr","showUrl","isTwoSteps","hasEip155","hasSolana","hasSui","hasBtc","hasAptos","hasTon","hasCosmos","hasTron","nameSpacesChains","optSpaceChains","solanaChains","hasStarknet","suiChains","btcChains","connectMethod","connectData","requireData","includeEth","solana","cosmos","tron","starknet","tonParams","ton","sui","btc","optData","getCurrentSelectedMethodData","openModal","OKX_CONNECT_SDK_ERROR","methodList","suiData","currentMethod","application","accountAddress","userAgentInfo","navigator","userAgent","Agents","flag","v","isSafariOrChrome","pubkey","OKXSolanaProvider","result1","nacl","detached","PublicKey","toBytes","OKXAptosProvider","config","AptosConfig","Network","Aptos","simple","sender","function","typeArguments","functionArguments","signAndSubmitTransaction","Connection","getSolConnect","blockhash","getLatestBlockhash","versionedTransactionMessage","TransactionMessage","payerKey","recentBlockhash","instructions","SystemProgram","transfer","fromPubkey","toPubkey","lamports","compileToV0Message","VersionedTransaction","signAllTransactions","Transaction","feePayer","cosmos_verifySignArbitrary","pub_key","signer","prefixStr","signatureBuffer","uint8Signature","pubKeyValueBuffer","pubKeyUint8Array","uiOptions","eth_verifyMessage","ethAddress","originalMessage","recoveredAddress","ethers","verifyList","requestItme","ethMessage","solanaMessage","verifySol","aptosMessage","aptosPublicKey","fullMessage","cosmosAddress","cosmosMessage","tronMessage","StarknetRpcProvider","StarknetAccount","signatureResult","resultObj","verifyPersonalMessageSignature","toSuiAddress","toBase64","created","mounted","scriptTag","document","createElement","src","getElementsByTagName","appendChild","title","$refs","starknetPanelRef","toRaw","render","app","createApp","App","use","ElementPlus","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","loaded","__webpack_modules__","amdO","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","j","every","splice","r","n","getter","d","leafPrototypes","getProto","getPrototypeOf","obj","__proto__","mode","def","current","getOwnPropertyNames","definition","g","globalThis","Function","prop","Symbol","toStringTag","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}