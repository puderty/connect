{"version":3,"file":"js/app.04e77e1e.js","mappings":"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","sources":["webpack://okxconnectdemo/../packages/aptos-provider/src/AptosUtils.js","webpack://okxconnectdemo/../packages/aptos-provider/src/OKXAptosProvider.js","webpack://okxconnectdemo/../packages/aptos-provider/src/index.js","webpack://okxconnectdemo/../packages/core/src/connect/commands.js","webpack://okxconnectdemo/../packages/core/src/connect/connect.js","webpack://okxconnectdemo/../packages/core/src/connect/connectionManager.js","webpack://okxconnectdemo/../packages/core/src/connect/connectionSplitPackages.js","webpack://okxconnectdemo/../packages/core/src/connect/constants.js","webpack://okxconnectdemo/../packages/core/src/connect/engine.js","webpack://okxconnectdemo/../packages/core/src/connect/index.js","webpack://okxconnectdemo/../packages/core/src/connect/jwt.js","webpack://okxconnectdemo/../packages/core/src/connect/jwtconstants.js","webpack://okxconnectdemo/../packages/core/src/connect/sessionUtils.js","webpack://okxconnectdemo/../packages/core/src/connect/storage.js","webpack://okxconnectdemo/../packages/core/src/connect/storageconstants.js","webpack://okxconnectdemo/../packages/core/src/connect/walletConnectionConstants.js","webpack://okxconnectdemo/../packages/core/src/connect/walletConnectionManager.js","webpack://okxconnectdemo/../packages/core/src/connector/appwallet-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/iconnector.js","webpack://okxconnectdemo/../packages/core/src/connector/index.js","webpack://okxconnectdemo/../packages/core/src/connector/inject-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/okxwallet-inject-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/tgwallet-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/ws-connector.js","webpack://okxconnectdemo/../packages/core/src/crypto/crypto.js","webpack://okxconnectdemo/../packages/core/src/index.js","webpack://okxconnectdemo/../packages/core/src/inject/InjectUtils.js","webpack://okxconnectdemo/../packages/core/src/inject/index.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/AptosProvider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/SolProvider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/TONProvider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/eip155Provider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/index.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/sui-provider.js","webpack://okxconnectdemo/../packages/core/src/protocol/chains.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/engine.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/json-rpc.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/connect-event.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/connect-wallet.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/wallet-info.js","webpack://okxconnectdemo/../packages/core/src/protocol/constants.js","webpack://okxconnectdemo/../packages/core/src/protocol/error/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/error/okx-connect.error.js","webpack://okxconnectdemo/../packages/core/src/protocol/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/misc.js","webpack://okxconnectdemo/../packages/core/src/utils/call-for-success.js","webpack://okxconnectdemo/../packages/core/src/utils/index.js","webpack://okxconnectdemo/../packages/core/src/utils/log.js","webpack://okxconnectdemo/../packages/core/src/utils/media.js","webpack://okxconnectdemo/../packages/core/src/utils/report.js","webpack://okxconnectdemo/../packages/core/src/utils/reportconstants.js","webpack://okxconnectdemo/../packages/core/src/utils/request.js","webpack://okxconnectdemo/../packages/core/src/utils/safejson.js","webpack://okxconnectdemo/../packages/core/src/utils/stringUtils.js","webpack://okxconnectdemo/../packages/core/src/utils/tma-api.js","webpack://okxconnectdemo/../packages/core/src/utils/url.js","webpack://okxconnectdemo/../packages/core/src/utils/utils.js","webpack://okxconnectdemo/../packages/core/src/utils/web-api.js","webpack://okxconnectdemo/../packages/solana-provider/src/OKXSolanaProvider.js","webpack://okxconnectdemo/../packages/solana-provider/src/index.js","webpack://okxconnectdemo/../packages/sui-provider/src/OKXSuiProvider.js","webpack://okxconnectdemo/../packages/sui-provider/src/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXBtcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXCosmosProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXStarknetProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTonProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTronProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXUniversalProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/sign-client/client.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/ConnectMethodUtils.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/namespaces.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/events.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/values.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/aptos.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/btc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/cosmos.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/eip155.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcConnection.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/solana.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/starknet.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/sui.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/ton.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/tron.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/misc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/providers.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/globals.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/misc.js","webpack://okxconnectdemo/./src/App.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue?1b44","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue?e4fb","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue?aa83","webpack://okxconnectdemo/./src/components/StarknetTransactionPanel.vue","webpack://okxconnectdemo/./src/components/StarknetTransactionPanel.vue?1a06","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue?089a","webpack://okxconnectdemo/./src/App.vue?7ccd","webpack://okxconnectdemo/./src/main.js","webpack://okxconnectdemo/webpack/bootstrap","webpack://okxconnectdemo/webpack/runtime/amd options","webpack://okxconnectdemo/webpack/runtime/chunk loaded","webpack://okxconnectdemo/webpack/runtime/compat get default export","webpack://okxconnectdemo/webpack/runtime/create fake namespace object","webpack://okxconnectdemo/webpack/runtime/define property getters","webpack://okxconnectdemo/webpack/runtime/global","webpack://okxconnectdemo/webpack/runtime/hasOwnProperty shorthand","webpack://okxconnectdemo/webpack/runtime/make namespace object","webpack://okxconnectdemo/webpack/runtime/node module decorator","webpack://okxconnectdemo/webpack/runtime/jsonp chunk loading","webpack://okxconnectdemo/webpack/startup"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AptosUtils = void 0;\nclass AptosUtils {\n    static getTransaction(o) {\n        if (\"rawTransaction\" in o) {\n            let transaction = o;\n            if (\"entryFunction\" in transaction.rawTransaction.payload) {\n                let entryFunction = transaction.rawTransaction.payload.entryFunction;\n                let typeArgs = entryFunction.type_args;\n                let typeArguments = new Array();\n                typeArgs.forEach(typeTag => {\n                    typeArguments.push(typeTag.toString());\n                });\n                let realArguments = new Array();\n                this.getTypeArguments(entryFunction.args, realArguments);\n                let i = {\n                    arguments: realArguments,\n                    function: `${entryFunction.module_name.address.data ? entryFunction.module_name.address.toString() : entryFunction.module_name.address}::${entryFunction.module_name.name.identifier ? entryFunction.module_name.name.identifier : entryFunction.module_name.name}::${entryFunction.function_name.identifier ? entryFunction.function_name.identifier : entryFunction.function_name}`,\n                    type: \"entry_function_payload\",\n                    type_arguments: typeArguments\n                };\n                return this.getArguments(i);\n            }\n        }\n        return o;\n    }\n    static getTypeArguments(args, array) {\n        for (let j = 0; j < args.length; j++) {\n            let y = args[j];\n            if (\"values\" in y && y.values != null && y.values instanceof Array) {\n                let subArray = new Array();\n                array.push(subArray);\n                this.getTypeArguments(y.values, subArray);\n            }\n            else {\n                this.dealArrayElements(y, array);\n            }\n        }\n    }\n    static dealArrayElements(e, array) {\n        if (\"value\" in e && e.value != null) {\n            array.push(e.value.toString());\n        }\n        else if (\"data\" in e && e.data != null && e.data instanceof Uint8Array) {\n            return array.push(e.toString());\n        }\n        else {\n            return array.push(e.toString());\n        }\n    }\n    static getArguments(e) {\n        if (\"arguments\" in e) {\n            let t = e.arguments;\n            if (Array.isArray(t)) {\n                let r = new Array();\n                t.forEach(n => {\n                    if (n instanceof Uint8Array) {\n                        let o = new Array();\n                        n.forEach(i => {\n                            o.push(i);\n                        });\n                        r.push(o);\n                    }\n                    else\n                        r.push(n);\n                });\n                e = Object.assign(Object.assign({}, e), { arguments: r });\n            }\n        }\n        return e;\n    }\n}\nexports.AptosUtils = AptosUtils;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXAptosProvider = void 0;\nconst buffer_1 = require(\"buffer\");\nconst AptosUtils_1 = require(\"./AptosUtils\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXAptosProvider {\n    constructor(provider) {\n        this.chainsSet = new Set();\n        this.provider = provider;\n        this.getConnectedNamespace();\n    }\n    get defaultNetwork() {\n        let network = this.provider.requestDefaultChainWithNamespace(core_1.NameSpaceKeyAptos);\n        return network;\n    }\n    get currentChainId() {\n        return `aptos:${this.defaultNetwork}`;\n    }\n    getRealChainId(chainId) {\n        // if (chainId == \"aptos:mainnet\") {\n        //     return \"aptos:637\"\n        // } else if (chainId == \"movement:testnet\") {\n        //     return \"aptos:70000060\"\n        // }\n        if (chainId == null) {\n            if (this.chainsSet.size == 1) {\n                return this.currentChainId;\n            }\n            else {\n                throw new Error(\"connected to multiple aptos chains,chainId can not be null\");\n            }\n        }\n        else {\n            return chainId;\n        }\n    }\n    getConnectedNamespace() {\n        var _a, _b, _c;\n        (_c = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces) === null || _b === void 0 ? void 0 : _b['aptos']) === null || _c === void 0 ? void 0 : _c.chains.forEach(chain => {\n            this.chainsSet.add(chain);\n        });\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n        chainId = this.getRealChainId(chainId);\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['aptos']) === null || _b === void 0 ? void 0 : _b.accounts[0];\n        if (chainId != null) {\n            account = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces['aptos']) === null || _d === void 0 ? void 0 : _d.accounts.filter(function (account) {\n                return account.startsWith(chainId);\n            })[0];\n        }\n        (0, core_1.logDebug)(\"getAccount\", account);\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        console.log(\"aptos_publicKey\", (_f = (_e = this.provider.session) === null || _e === void 0 ? void 0 : _e.namespaces['aptos']) === null || _f === void 0 ? void 0 : _f.extra);\n        let extra = (_j = (_h = (_g = this.provider.session) === null || _g === void 0 ? void 0 : _g.namespaces['aptos']) === null || _h === void 0 ? void 0 : _h.extra) === null || _j === void 0 ? void 0 : _j[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n            if (publicKey != undefined && publicKey.startsWith(\"0x\")) {\n                publicKey = publicKey.substring(2);\n            }\n            console.log(\"aptos_publicKey\", publicKey);\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address,\n            publicKey: publicKey\n        };\n    }\n    signMessage(payload, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            let realChain = this.getRealChainId(chainId);\n            try {\n                let prefix = \"APTOS\";\n                let address = (_a = this.getAccount(realChain)) === null || _a === void 0 ? void 0 : _a.address;\n                let message = \"\", nonce = \"\";\n                var fullMessage = prefix;\n                let application = window.location.protocol + \"//\" + window.location.hostname;\n                if (\"address\" in payload && payload.address) {\n                    fullMessage += \"\\naddress: \" + address;\n                }\n                if (\"application\" in payload && payload.application) {\n                    fullMessage += \"\\napplication: \" + application;\n                }\n                if (\"chainId\" in payload && payload.chainId) {\n                    let chainId = 1;\n                    if (realChain == \"aptos:mainnet\") {\n                        chainId = 1;\n                    }\n                    else if (realChain == \"movement:testnet\") {\n                        chainId = 2;\n                    }\n                    fullMessage += \"\\nchainId: \" + chainId;\n                }\n                if (\"message\" in payload) {\n                    fullMessage += \"\\nmessage: \" + payload.message;\n                    message = payload.message;\n                }\n                if (\"nonce\" in payload) {\n                    fullMessage += \"\\nnonce: \" + payload.nonce;\n                    nonce = payload.nonce;\n                }\n                console.log(\"signMessage\", fullMessage);\n                const buffer = buffer_1.Buffer.from(fullMessage);\n                const hex = this.bufferToHex(buffer);\n                let data = {\n                    \"chainId\": realChain,\n                    \"method\": \"aptos_signMessage\",\n                    \"params\": {\n                        \"message\": hex,\n                    },\n                    injectParams: payload,\n                };\n                let signedMessage = yield this.provider.request(data, realChain);\n                if ('injectResult' in signedMessage) {\n                    let injectResult = signedMessage.injectResult;\n                    console.error('aptos_signMessage --injectResult--', JSON.stringify(injectResult));\n                    return new Promise((resolve, reject) => {\n                        resolve(injectResult);\n                    });\n                }\n                else if ('result' in signedMessage) {\n                    let successData = signedMessage.result;\n                    let signStr = successData;\n                    if (successData.startsWith(\"0x\")) {\n                        signStr = successData.slice(2, successData.length);\n                    }\n                    // try {\n                    //     let publicKey = this.getAccount(realChain)?.publicKey\n                    //     if (publicKey != undefined) {\n                    //         console.log(\"apt_signMessage\", Buffer.from(successData, 'hex'))\n                    //         console.log(\"apt_signMessage\", successData)\n                    //\n                    //         const verified = nacl.sign.detached.verify(\n                    //             Buffer.from(fullMessage),\n                    //             Buffer.from(signStr, 'hex'),\n                    //             Buffer.from(publicKey, 'hex'),\n                    //         );\n                    //         console.log(\"signMessage\", verified);\n                    //     }\n                    // } catch (_) {\n                    // }\n                    return new Promise((resolve, reject) => {\n                        resolve({\n                            address: address,\n                            application: application,\n                            chainId: realChain,\n                            fullMessage: fullMessage,\n                            message: message,\n                            nonce: nonce,\n                            prefix: prefix,\n                            signature: signStr,\n                            // verified:verified\n                        });\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        if (\"error\" in signedMessage) {\n                            resolve(signedMessage.error);\n                        }\n                    });\n                }\n            }\n            catch (error) {\n                console.error('方法数据回调失败 --Error--', error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    signTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let tx = AptosUtils_1.AptosUtils.getTransaction(transaction);\n            console.log(\"signTransaction\", tx);\n            let realChain = this.getRealChainId(chainId);\n            try {\n                let signature = yield this.provider.request({\n                    \"method\": \"aptos_signTransaction\",\n                    \"params\": tx\n                }, realChain);\n                if ('result' in signature) {\n                    let successData = signature.result;\n                    return new Promise((resolve, reject) => {\n                        resolve(buffer_1.Buffer.from(successData));\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        reject(signature);\n                    });\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"getSignedTransaction\", error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    signAndSubmitTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let tx = AptosUtils_1.AptosUtils.getTransaction(transaction);\n            console.log(\"signAndSubmitTransaction\", tx);\n            let realChain = this.getRealChainId(chainId);\n            try {\n                let signature = yield this.provider.request({\n                    \"method\": \"aptos_signAndSubmitTransaction\",\n                    \"params\": tx\n                }, realChain);\n                if ('result' in signature) {\n                    let successData = signature.result;\n                    return new Promise((resolve, reject) => {\n                        resolve(successData);\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        reject(signature);\n                    });\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"getSignedTransaction\", error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    bufferToHex(buf) {\n        return \"0x\" + buffer_1.Buffer.from(buf).toString(\"hex\");\n    }\n}\nexports.OKXAptosProvider = OKXAptosProvider;\nexports.default = OKXAptosProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXAptosProvider = void 0;\nvar OKXAptosProvider_1 = require(\"./OKXAptosProvider\");\nObject.defineProperty(exports, \"OKXAptosProvider\", { enumerable: true, get: function () { return OKXAptosProvider_1.OKXAptosProvider; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_METHOD_BATCH_FETCHMSG = exports.CONNECT_METHOD_FETCHMSG = exports.CONNECT_METHOD_RECEIVE = exports.CONNECT_METHOD_UNSUB = exports.CONNECT_METHOD_SUB = exports.CONNECT_METHOD_PUBLISH = exports.CONNECT_METHOD_LOGIN = exports.CONNECT_METHOD_PUSH = void 0;\n// --------------- ws methods -------------\nexports.CONNECT_METHOD_PUSH = \"push\";\nexports.CONNECT_METHOD_LOGIN = \"login\";\nexports.CONNECT_METHOD_PUBLISH = \"publish\";\nexports.CONNECT_METHOD_SUB = \"subscribe\";\nexports.CONNECT_METHOD_UNSUB = \"unsubscribe\";\nexports.CONNECT_METHOD_RECEIVE = \"receive\";\nexports.CONNECT_METHOD_FETCHMSG = \"fetchMessages\";\nexports.CONNECT_METHOD_BATCH_FETCHMSG = \"batchFetchMessages\";\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXWalletConnector = void 0;\nconst constants_1 = require(\"./constants\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils\");\nconst utils_2 = require(\"../utils/utils\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst log = __importStar(require(\"../utils/log\"));\nconst protocol_1 = require(\"../protocol\");\nconst report_1 = require(\"../utils/report\");\nconst WS = (0, utils_2.resolveWebSocketImplementation)();\nclass OKXWalletConnector {\n    constructor(url) {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.state = constants_1.ConnectorState.InitState;\n        this.selectedUrlIndex = 0;\n        // reconnect\n        this.retryCount = 0;\n        // default timeout limit: 8 sec\n        this.timeOutLimit = 8000;\n        if (!(0, utils_2.checkWSUrl)(url)) {\n            throw new Error(`CONNECTOR: invalid url ${url}`);\n        }\n        this.url = url;\n        this.heartbeatTimer = null;\n        this.connectionTimeoutTimer = null;\n        this.connectURLStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY + storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n    }\n    get connecting() {\n        return this.state == constants_1.ConnectorState.Connecting;\n    }\n    // ------------------------------------------------------\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        log.logDebug('get received data');\n        log.logDebug(e);\n        if (typeof e.data === \"string\") {\n            let rsp = e.data;\n            if (rsp === \"pong\") {\n                log.logDebug(`CONNECT: receive pong ${Date.now().toString()}`);\n                return;\n            }\n        }\n        this.events.emit(\"payload\", e.data);\n    }\n    onClose(event) {\n        var _a;\n        log.logDebug('socket get closed: ', (_a = this.socket) === null || _a === void 0 ? void 0 : _a.url, event.code);\n        this.socket = undefined;\n        this.events.emit(\"close\", event);\n    }\n    onError(id, e) {\n        const payload = { id: id, msg: e.toString() };\n        this.events.emit(\"payload\", payload);\n    }\n    onopen(socket) {\n        socket.onmessage = (event) => this.onPayload(event);\n        socket.onclose = (event) => this.onClose(event);\n        this.socket = socket;\n        this.state = constants_1.ConnectorState.Connected;\n        this.events.emit(\"open\");\n    }\n    // ------------------------------------------------------\n    emitError(errorEvent) {\n        this.events.emit(\"fail\", errorEvent);\n    }\n    // ------------------------------------------------------\n    heartbeat() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.heartbeatTimer) {\n                clearTimeout(this.heartbeatTimer);\n            }\n            if (this.state != constants_1.ConnectorState.Connected && this.state != constants_1.ConnectorState.OnError) {\n                log.logDebug('heart beat close');\n                return;\n            }\n            if (!this.socket) {\n                log.logDebug('socket not exist');\n                if (this.state == constants_1.ConnectorState.Connected || this.state == constants_1.ConnectorState.OnError) {\n                    log.logDebug('socket reconnect by heartbeat');\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                        this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n                    }\n                }\n                return;\n            }\n            if (this.socket.readyState !== WebSocket.OPEN) {\n                log.logDebug('socket not ready');\n                if (this.state == constants_1.ConnectorState.Connected || this.state == constants_1.ConnectorState.OnError) {\n                    log.logDebug('socket reconnect by heartbeat with state', this.state, this.socket.readyState);\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                        this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n                    }\n                }\n                return;\n            }\n            log.logDebug(`send ping heart beat: ${Date.now().toString()}, ${this.socket}`);\n            this.socket.send(\"ping\");\n            this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n        });\n    }\n    registOpen(url = this.url, inRetry = false) {\n        if (!(0, utils_2.checkWSUrl)(url)) {\n            throw new Error(`CONNECTOR: invalid url ${url}`);\n        }\n        this.url = url;\n        if (!inRetry) {\n            log.logDebug('Connection connect:', this.url, new Date().toUTCString());\n        }\n        this.state = constants_1.ConnectorState.Connecting;\n        const origin = new URLSearchParams(url).get(\"origin\");\n        return new Promise((resolve, reject) => {\n            const socket = new WS(url, []);\n            log.logDebug('Connection connect Begin:', this.url, new Date().toUTCString());\n            this.startTimeOutTimer(socket);\n            if ((0, utils_2.hasBuiltInWebSocket)()) {\n                log.logDebug('Add socket error handler');\n                socket.onerror = () => {\n                    reject(new Error('socket error'));\n                    socket.close();\n                };\n            }\n            else {\n                log.logDebug('Add socket error handler');\n                socket.on(\"error\", () => {\n                    reject(new Error('socket error'));\n                    socket.close();\n                });\n            }\n            socket.onopen = () => {\n                log.logDebug('socket opened');\n                this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.FINISHED);\n                this.onopen(socket);\n                this.heartbeat();\n                resolve(socket);\n            };\n        });\n    }\n    checkMaxRetry() {\n        log.logDebug('current retry count:', this.retryCount, 'of', constants_1.OKXCONNECTOR_WS_URL_LIST.length);\n        return this.retryCount > (constants_1.OKXCONNECTOR_WS_URL_LIST.length * 3);\n    }\n    connectionTryNext() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.checkMaxRetry()) {\n                //TODO: mark descent\n                this.retryCount += 1;\n                let nextUrl = this.getNextSelectUrl();\n                log.logDebug('Connection retry:', nextUrl, new Date().toUTCString());\n                return this.registOpen(nextUrl, true);\n            }\n            else {\n                log.logDebug('Max Connection retry ', this.retryCount, new Date().toUTCString());\n            }\n        });\n    }\n    startTimeOutTimer(socket) {\n        if (this.connectionTimeoutTimer) {\n            this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.CANCELED);\n        }\n        this.pendingSocket = socket;\n        this.connectionTimeoutTimer = setTimeout(() => {\n            if (this.pendingSocket) {\n                this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.TIME_OUT);\n            }\n        }, this.timeOutLimit);\n    }\n    resetTimeOutTimer(code) {\n        var _a;\n        // 1. cancel connecting pending sockets\n        if (code == constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.TIME_OUT) {\n            // 2. remove timer\n            clearTimeout(this.connectionTimeoutTimer);\n            (_a = this.pendingSocket) === null || _a === void 0 ? void 0 : _a.close();\n            this.pendingSocket = undefined;\n            log.reportEvent(report_1.OKXReportType.LOG, 'timeout', this.retryCount.toString());\n            throw new Error('socket timeout');\n        }\n        else {\n            this.pendingSocket = undefined;\n            // 2. remove timer\n            clearTimeout(this.connectionTimeoutTimer);\n        }\n    }\n    cacheSuccessUrlSelect() {\n        this.connectURLStorage.saveContent(this.selectedUrlIndex.toString(), storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n    }\n    // private getSuccessUrlSelect(): string {\n    //     let selectIndex = this.connectURLStorage.getItem(OKXCONNECTOR_CACHE_KEY)?.content\n    //     let index = 0\n    //     if (selectIndex) {\n    //         index = Number(selectIndex)\n    //     }\n    //     this.selectedUrlIndex = index\n    //     return OKXCONNECTOR_WS_URL_LIST[index]\n    // }\n    getNextSelectUrl() {\n        this.selectedUrlIndex += 1;\n        this.selectedUrlIndex = this.selectedUrlIndex % constants_1.OKXCONNECTOR_WS_URL_LIST.length;\n        return constants_1.OKXCONNECTOR_WS_URL_LIST[this.selectedUrlIndex];\n    }\n    // ------------------------------------------------------\n    onVisibleChanged() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (document.visibilityState === 'visible') {\n                // check and restore\n                log.logDebug(`get changed ${this.state}, ${this.socket}`);\n                if (this.state == constants_1.ConnectorState.Connected && typeof this.socket === \"undefined\") {\n                    log.logDebug('CONNECTION need reopen');\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                    }\n                    return;\n                }\n            }\n        });\n    }\n    tryRegistOpen() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (this.connecting) {\n                log.logDebug('tryRegistOpen => connecting state');\n                return new Promise((resolve, reject) => {\n                    this.events.once('fail', (e) => {\n                        log.logDebug('tryRegistOpen => connecting fail listener', e);\n                        return reject(e);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.socket == \"undefined\") {\n                            return reject(new Error(\"Connect lost\"));\n                        }\n                        return resolve(this.socket);\n                    });\n                });\n            }\n            log.logDebug('tryRegistOpen => try registOpen until retry limit is hit');\n            let inRetry = false;\n            while (!this.checkMaxRetry() && !this.socket) {\n                try {\n                    log.logDebug('tryRegistOpen => call registOpen, try count:', this.retryCount, inRetry);\n                    yield this.registOpen(url, inRetry);\n                }\n                catch (err) {\n                    log.logDebug('tryRegistOpen => registOpen failed', err);\n                    this.retryCount += 1;\n                    url = this.getNextSelectUrl();\n                    inRetry = true;\n                }\n            }\n            log.logDebug('tryRegistOpen => exit while loop', this.retryCount, this.socket);\n            if (!this.socket && this.checkMaxRetry()) {\n                log.logDebug('tryRegistOpen => failed to open a socket', this.retryCount, this.socket);\n                this.retryCount = 0;\n                this.state = constants_1.ConnectorState.OnError;\n                this.emitError(new Error('tryRegistOpen failed'));\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CONNECTION_ERROR, \"Failed to connect\");\n            }\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.tryRegistOpen();\n                // listener for reconnect\n                document.removeEventListener('visibilitychange', this.onVisibleChanged.bind(this));\n                document.addEventListener('visibilitychange', this.onVisibleChanged.bind(this));\n            }\n            catch (e) {\n                log.logDebug('connect => failed to connect', e);\n                throw e;\n            }\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.state = constants_1.ConnectorState.Disconnected;\n            return new Promise((resolve, reject) => {\n                if (typeof this.socket === \"undefined\") {\n                    // reject(new Error(\"CONNECTION closed\"))\n                    resolve();\n                    return;\n                }\n                this.socket.onclose = (event) => {\n                    this.onClose(event);\n                    resolve();\n                };\n                this.socket.close();\n                if (this.heartbeatTimer) {\n                    clearTimeout(this.heartbeatTimer);\n                }\n            });\n        });\n    }\n    currentStatus() {\n        return {\n            state: this.state,\n            url: this.url\n        };\n    }\n    // event will be jsonstr\n    /// @params Promise\n    /// @params success/failed callback\n    addListener(event, decrypt, success, failed, splitCheckComplete) {\n        if (this.listenPayloadHandler) {\n            this.events.removeListener(\"payload\", this.listenPayloadHandler);\n        }\n        this.listenPayloadHandler = (e) => __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            log.logDebug(`<<< get payload ${e}`);\n            let parsedEvent = (0, utils_1.safeJsonParse)(e);\n            // parse the data to chose success or failed\n            if (parsedEvent.params && parsedEvent.params.data) {\n                let rawMsg = (_a = parsedEvent.params.data) === null || _a === void 0 ? void 0 : _a.message;\n                let skipMsg = false;\n                if (rawMsg) {\n                    // 在这里增加检测流程，如果当前包是“分包”，而且没有finalMessage则不继续触发failed/success结果\n                    if (splitCheckComplete) {\n                        let checkResult = yield splitCheckComplete(parsedEvent.params.data);\n                        skipMsg = checkResult.isSplitPackage && (!checkResult.finalMessage);\n                        if (checkResult.isSplitPackage) {\n                            if (checkResult.finalMessage && checkResult.finalMessage.length > 0) {\n                                log.logDebug('CONNECT: update raw msg content');\n                                rawMsg = checkResult.finalMessage;\n                            }\n                            else {\n                                log.logDebug('CONNECT: skip raw msg content');\n                                skipMsg = true;\n                            }\n                        }\n                    }\n                }\n                if (!skipMsg) {\n                    try {\n                        let msg = decrypt(rawMsg);\n                        if (msg === undefined) {\n                            log.logDebug(`CONNECT: decrypt undefined`);\n                            failed(event, 'Decrypt undefined');\n                        }\n                        else {\n                            success(event, msg);\n                        }\n                    }\n                    catch (e) {\n                        log.logDebug(`CONNECT: decrypt failed: ${e}`);\n                        failed(event, e.message);\n                    }\n                }\n            }\n        });\n        this.events.on(\"payload\", this.listenPayloadHandler);\n        if (this.failHandler) {\n            this.events.removeListener(\"fail\", this.failHandler);\n        }\n        this.failHandler = (e) => {\n            if (e) {\n                log.logDebug(`CONNECT failed: ${e}`);\n                failed(event, e.message);\n            }\n            else {\n                failed(event, \"Unkonow error\");\n            }\n        };\n        this.events.on(\"fail\", this.failHandler);\n    }\n    addPackageParse(callback) {\n        if (this.payloadHandler) {\n            this.events.removeListener(\"payload\", this.payloadHandler);\n        }\n        this.payloadHandler = (e) => __awaiter(this, void 0, void 0, function* () {\n            // parse the data to chose success or failed\n            log.logDebug(`CONNECTION @[${new Date().toUTCString()}] <<<< received e:${e}`);\n            let param = (0, utils_1.safeJsonParse)(e);\n            yield callback(param);\n        });\n        this.events.on(\"payload\", this.payloadHandler);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    send(doLogin, payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (typeof this.socket === \"undefined\") {\n                    log.logDebug(`>>> send payload undefined ${payload}`);\n                    // this.socket = await this.registOpen();\n                    yield doLogin();\n                }\n                log.logDebug(`CONNECTION @[${new Date().toUTCString()}]>>> send payload ${(0, utils_1.safeJsonStringify)(payload)}`);\n                if (this.socket) {\n                    this.socket.send((0, utils_1.safeJsonStringify)(payload));\n                }\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    getMsgPayloadFromHistory(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof msg === \"undefined\")\n                return;\n            let tmpMsg = {\n                params: {\n                    data: msg\n                }\n            };\n            let jsonstr = (0, utils_1.safeJsonStringify)(msg);\n            log.logDebug('get received data from history');\n            log.logDebug(jsonstr);\n            jsonstr = (0, utils_1.safeJsonStringify)(tmpMsg);\n            this.events.emit(\"payload\", jsonstr);\n        });\n    }\n    onOpen(callback) {\n        if (this.openHandler) {\n            this.events.removeListener(\"open\", this.openHandler);\n        }\n        this.openHandler = () => __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> ws opened: `);\n            yield callback();\n        });\n        this.events.on(\"open\", this.openHandler);\n        this.cacheSuccessUrlSelect();\n    }\n}\nexports.OKXWalletConnector = OKXWalletConnector;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionManager = void 0;\nconst connect_1 = require(\"./connect\");\nconst commands_1 = require(\"./commands\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst jwtconstants_1 = require(\"./jwtconstants\");\nconst constants_1 = require(\"./constants\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils/utils\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst jwt_1 = require(\"./jwt\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst report_1 = require(\"../utils/report\");\nconst url_1 = require(\"../utils/url\");\nconst connectionSplitPackages_1 = require(\"./connectionSplitPackages\");\nclass ConnectionManager {\n    constructor(appname = undefined) {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.splitManager = new connectionSplitPackages_1.ConnectionSplitPackages('dapp');\n        // local storage\n        this.connectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY_DAPP + appname, storageconstants_1.OKXCONNECTOR_CACHE_KEY_DAPP);\n        this.crypto = new crypto_1.SessionCrypto();\n        let inTMA = (0, url_1.isInTMA)();\n        (0, log_1.logDebug)('do init:', inTMA);\n        log.reportLog('connection manager do init');\n        if (inTMA) {\n            // recovery from cache\n            try {\n                const keyPairInfo = this.getCachedCryptoKeyPair();\n                (0, log_1.logDebug)('use same pk:', keyPairInfo);\n                this.crypto = new crypto_1.SessionCrypto(keyPairInfo);\n            }\n            catch (error) {\n                this.connectStorage.clearCache();\n                log.reportEvent(report_1.OKXReportType.LOG, 'cache_fail', 'cache failed');\n            }\n        }\n        this.jwtKeyPair = this.getCachedJWTKeyPair();\n        this.saveJWTKeyPair(this.jwtKeyPair);\n        // wss connection\n        this.connector = new connect_1.OKXWalletConnector(constants_1.OKXCONNECTOR_WS_URL_1);\n        this.packageId = Date.now();\n        // connection state\n        this.connectedWalletPK = '';\n        this.currentTopic = '';\n        log.logDebug(`this.connectedWalletPK  constructor   ${this.connectedWalletPK}`);\n    }\n    refreshPackageId() {\n        let nowDate = Date.now();\n        if (nowDate == this.packageId) {\n            this.packageId = nowDate + 1;\n        }\n        this.packageId = nowDate;\n    }\n    saveCryptoKeyPair(keyPair) {\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(keyPair);\n        // encrypt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_CRYPTO_KEY);\n    }\n    getCachedCryptoKeyPair() {\n        // decrypt kp\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_CRYPTO_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            log.logDebug('get cached crypto key:');\n            log.logDebug(content);\n            let keyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            return keyPairInfo;\n        }\n        else {\n            this.connectStorage.clearCache();\n            return null;\n        }\n    }\n    saveJWTKeyPair(keyPair) {\n        var strkeyPair = {\n            publicKey: (0, utils_1.toHexString)(keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(keyPair.secretKey)\n        };\n        log.logDebug('save jwt kp');\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(strkeyPair);\n        log.logDebug(cacheInfo);\n        // encrypt jwt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_JWT_KEY);\n    }\n    getCachedJWTKeyPair() {\n        try {\n            const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_JWT_KEY);\n            const content = kp;\n            if (typeof content == 'string') {\n                // TODO: decrypt jwt kp\n                log.logDebug('get cached jwt kp:');\n                log.logDebug(content);\n                let strKeyPairInfo = (0, safejson_1.safeJsonParse)(content);\n                log.logDebug('save jwt kp');\n                log.logDebug(strKeyPairInfo);\n                var keyPair = {\n                    publicKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.publicKey),\n                    secretKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.secretKey)\n                };\n                return keyPair;\n            }\n            else {\n                return (0, jwt_1.generateKeyPair)();\n            }\n        }\n        catch (error) {\n            log.reportEvent(report_1.OKXReportType.LOG, 'cache_fail', 'cache failed');\n            return (0, jwt_1.generateKeyPair)();\n        }\n    }\n    isWalletPKReady() {\n        log.logDebug(`isWalletPKReady  ===> ${this.connectedWalletPK}`);\n        return this.connectedWalletPK.length > 0;\n    }\n    makeJWT(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, jwt_1.signJWT)(topic, jwtconstants_1.OKXCONNECTOR_JWT_SIDE, jwtconstants_1.OKXCONNECTOR_JWT_TTL, // 24h\n            this.jwtKeyPair);\n        });\n    }\n    parsePackage(input_1) {\n        return __awaiter(this, arguments, void 0, function* (input, ignoreACK = false) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o;\n            this.events.emit(input.id, input);\n            // send back ACK\n            if (!ignoreACK) {\n                yield this.sendACK(input.id, true);\n                let topic = (_a = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE)) === null || _a === void 0 ? void 0 : _a.content;\n                if (topic) {\n                    let inputObj = input;\n                    if ((_c = (_b = inputObj.params) === null || _b === void 0 ? void 0 : _b.data) === null || _c === void 0 ? void 0 : _c.messageId) {\n                        // change into split check receive\n                        let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload((_e = (_d = inputObj.params) === null || _d === void 0 ? void 0 : _d.data) === null || _e === void 0 ? void 0 : _e.message);\n                        if (msgPlayloadObject) {\n                            let msgObject = {\n                                topicId: (_g = (_f = inputObj.params) === null || _f === void 0 ? void 0 : _f.data) === null || _g === void 0 ? void 0 : _g.topic,\n                                messageId: (_j = (_h = inputObj.params) === null || _h === void 0 ? void 0 : _h.data) === null || _j === void 0 ? void 0 : _j.messageId,\n                                messageObject: msgPlayloadObject,\n                                publishedAt: (_l = (_k = inputObj.params) === null || _k === void 0 ? void 0 : _k.data) === null || _l === void 0 ? void 0 : _l.publishedAt,\n                            };\n                            let checkResult = yield this.splitManager.onReceivedPackageCheck(msgObject);\n                            if (checkResult.completeMessageIdList) {\n                                checkResult.completeMessageIdList.forEach((msgId) => __awaiter(this, void 0, void 0, function* () {\n                                    // 发送receive\n                                    this.refreshPackageId();\n                                    yield this.sendReceive(this.packageId.toString(), msgId, topic);\n                                }));\n                            }\n                        }\n                        else {\n                            this.refreshPackageId();\n                            yield this.sendReceive(this.packageId.toString(), (_o = (_m = inputObj.params) === null || _m === void 0 ? void 0 : _m.data) === null || _o === void 0 ? void 0 : _o.messageId, topic);\n                        }\n                    }\n                }\n            }\n        });\n    }\n    restoreConnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.reportLog('connection manager restore connection');\n            log.logDebug(`connectionManager  restoreConenct   ${topic}`);\n            if ((typeof topic !== 'string') || topic.length === 0) {\n                throw new Error('CONNECTION: invalid topic');\n            }\n            log.logDebug(`connectionManager  restoreConenct   disconnect`);\n            yield this.disconnect(true);\n            this.connectStorage.saveContent(topic, storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`connectionManager  restoreConenct   conect`);\n            yield this.connect(true);\n        });\n    }\n    getConnectInfo() {\n        var topic = (0, utils_1.generateTopic)();\n        log.logDebug(`generate topic token: ${topic}`);\n        log.reportLog('connection manager generate connection info');\n        this.currentTopic = topic;\n        const info = {\n            channelId: topic,\n            clientId: this.crypto.stringifyKeypair().publicKey,\n        };\n        return info;\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            this.timeLog = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---enter->\", this.timeLog);\n            log.reportLog('connection manager begin connect');\n            let lastConnectId = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            //1. generate topic & jwt\n            var topic = this.currentTopic;\n            log.logDebug(`generate topic token: ${topic}`);\n            // crypto keypair\n            if (fromRestore) {\n                if (typeof lastConnectId !== 'undefined' && lastConnectId !== null) {\n                    log.logDebug(`read last connect id: ${lastConnectId}`);\n                    topic = lastConnectId.content;\n                }\n                var cachedSenderPublicKey = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                if (cachedSenderPublicKey) {\n                    this.connectedWalletPK = cachedSenderPublicKey.content;\n                    (0, log_1.logDebug)(`connectionManager connect() this.connectedWalletPK : ${this.connectedWalletPK}`);\n                }\n                log.reportLog('connection manager do restore connection');\n            }\n            if (fromRestore) {\n                // recovery from cache\n                try {\n                    const keyPairInfo = this.getCachedCryptoKeyPair();\n                    if (keyPairInfo) {\n                        this.crypto = new crypto_1.SessionCrypto(keyPairInfo);\n                    }\n                }\n                catch (error) {\n                    log.logError('get crypto key pair from cache failed');\n                    log.reportEvent(report_1.OKXReportType.LOG, 'cache_fail', 'cache failed');\n                    this.connectStorage.clearCache();\n                    throw new Error('crypto cache failed');\n                }\n            }\n            log.logDebug(`use crypto client id: ${this.crypto.stringifyKeypair().publicKey}`);\n            // cache topic\n            this.connectStorage.saveContent(topic, storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            var jwtToken = yield this.makeJWT(topic);\n            log.logDebug(`generate jwt token: ${jwtToken}`);\n            this.connectStorage.saveContent(jwtToken, 'jwt');\n            return new Promise((resolve, reject) => {\n                // 1. when websocket opened\n                this.connector.onOpen(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug(`1. connector on open`);\n                    log.reportLog('1. connect ws open');\n                    const timeOne = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---open->\", timeOne - this.timeLog);\n                    //2. send jwt to login\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when login');\n                            log.reportLog('2. connect login failed');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // throw error\n                            reject(error);\n                        }\n                        //3. send subscribe\n                        this.refreshPackageId();\n                        this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                            // ack\n                            if (rsp && rsp.error) {\n                                log.logError('failed when subscribe');\n                                log.reportLog('3. connect subscribe failed');\n                                yield this.connector.disconnect();\n                                var error = new Error();\n                                error.message = rsp.error.message;\n                                error.name = rsp.error.code.toString();\n                                // throw error\n                                reject(error);\n                            }\n                            this.refreshPackageId();\n                            log.logDebug(`4. subscribe callback then send fetch: ${this.packageId}`);\n                            log.reportLog('4. subscribe callback then send fetch');\n                            const timeF = new Date().getTime();\n                            (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n                            // 4. fetch messages\n                            yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                            // 5. split init\n                            log.logDebug(`5. splitmanager init: ${this.packageId}`);\n                            log.reportLog('5. splitmanager init');\n                            yield this.splitManager.init(this.sendRaw.bind(this));\n                            resolve();\n                        }));\n                        log.logDebug(`3. login callback then send subscribe: ${this.packageId}`);\n                        log.reportLog('3. connect subscribe failed');\n                        const timeTh = new Date().getTime();\n                        (0, log_1.logDebug)(\"ConnectTime---login callback->\", timeTh - this.timeLog);\n                        yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                            log.logDebug('CONNECT: reconnect before send');\n                            yield this.connector.connect()\n                                .catch((err) => {\n                                (0, log_1.logDebug)('ConnectionManager connect error', err);\n                                reject(err);\n                            });\n                        }), {\n                            id: this.packageId.toString(),\n                            jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                            method: commands_1.CONNECT_METHOD_SUB,\n                            params: {\n                                topic: topic\n                            }\n                        });\n                    }));\n                    log.logDebug(`2. login called`);\n                    log.reportLog('2. connection manager connect call login');\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        yield this.connector.connect()\n                            .catch((err) => {\n                            (0, log_1.logDebug)('ConnectionManager connect error', err);\n                            reject(err);\n                        });\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_LOGIN,\n                        params: {\n                            token: jwtToken\n                        }\n                    });\n                    // 4. listen when dapp back to front, receive wallet public key\n                    this.connector.addPackageParse((event) => {\n                        var _a;\n                        log.logDebug(`connect: parse package`);\n                        log.logDebug(event);\n                        if (!(\"params\" in event) || !(\"data\" in event[\"params\"])) {\n                            this.parsePackage(event, true);\n                            return;\n                        }\n                        let rawMsg = (_a = event.params.data) === null || _a === void 0 ? void 0 : _a.message;\n                        if (typeof rawMsg !== 'undefined') {\n                            rawMsg = rawMsg.replace(/'/g, '\"');\n                            let parsedMessage = (0, safejson_1.safeJsonParse)(rawMsg);\n                            if (typeof parsedMessage !== 'string' && \"clientId\" in parsedMessage && parsedMessage.clientId && parsedMessage.clientId.length > 0) {\n                                this.connectedWalletPK = parsedMessage.clientId;\n                                log.logDebug(`this.connectedWalletPK  addPackageParse   ${this.connectedWalletPK}`);\n                                // exchange sender public key\n                                // cache wallet public key\n                                this.connectStorage.saveContent(this.connectedWalletPK, storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                                // cache crypto keypair\n                                this.saveCryptoKeyPair(this.crypto.stringifyKeypair());\n                            }\n                        }\n                        // ignore receive echo\n                        this.parsePackage(event, event.method === commands_1.CONNECT_METHOD_RECEIVE);\n                    });\n                }));\n                this.connector.connect().catch((err) => {\n                    (0, log_1.logDebug)('ConnectionManager connect error', err);\n                    reject(err);\n                });\n            });\n        });\n    }\n    disconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            yield this.connector.disconnect();\n            log.reportLog('connect disconnect');\n            //clean cached topic\n            //如果是恢复连接，就不清理解密public key\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            if (!fromRestore) {\n                this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                this.connectedWalletPK = '';\n                (0, log_1.logDebug)(`connectionManager disconnect() this.connectedWalletPK : ${this.connectedWalletPK}`);\n            }\n        });\n    }\n    updateProtocolVersion(topic, protocolVersion) {\n        this.splitManager.updateTopicSenderVersion(topic, protocolVersion);\n    }\n    addListener(event, success, fail) {\n        this.connector.addListener((0, safejson_1.safeJsonStringify)(event), (rawMsg) => {\n            rawMsg = rawMsg.replace(/'/g, '\"');\n            log.logDebug(`addListener ===> ${rawMsg}`);\n            if (typeof rawMsg !== 'undefined') {\n                var msgObj = (0, safejson_1.safeJsonParse)(rawMsg);\n                var msg = msgObj.message;\n                let result;\n                if (msg.trimStart().startsWith('{')) {\n                    result = msg;\n                }\n                else {\n                    if (msgObj.clientId && msgObj.clientId.length > 0) {\n                        this.connectedWalletPK = msgObj.clientId;\n                        this.connectStorage.saveContent(this.connectedWalletPK, storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                        log.logDebug(`this.connectedWalletPK  addListener   ${this.connectedWalletPK}`);\n                        log.logDebug(`this.cryptoKey  addListener   ${(0, utils_1.toHexString)(this.crypto.keyPair.publicKey)}`);\n                        // cache crypto keypair\n                        this.saveCryptoKeyPair(this.crypto.stringifyKeypair());\n                    }\n                    result = this.crypto.decrypt(msg, this.connectedWalletPK);\n                }\n                log.logDebug(`addListener ===> ${result}`);\n                return result;\n            }\n            return undefined;\n        }, success, fail, (inputDataObj) => {\n            // 判断获取是否是分包，如果是则返回合包结果，如果不是则继续\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(inputDataObj.message);\n                if (msgPlayloadObject) {\n                    let msgObject = {\n                        topicId: inputDataObj.topic,\n                        messageId: inputDataObj === null || inputDataObj === void 0 ? void 0 : inputDataObj.messageId,\n                        messageObject: msgPlayloadObject,\n                        publishedAt: inputDataObj === null || inputDataObj === void 0 ? void 0 : inputDataObj.publishedAt,\n                    };\n                    let msgResult = yield this.splitManager.onReceivedPackageCheck(msgObject);\n                    resolve(msgResult);\n                }\n                else {\n                    resolve({\n                        isSplitPackage: false,\n                    });\n                }\n            }));\n        });\n    }\n    sendRaw(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`message send =====> ${msg}`);\n            log.reportLog('connect send raw msg');\n            let message = msg;\n            log.logDebug(`message send =====encrypt message.length>>>> ${message.length}`);\n            // only one topic\n            let topic = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`message send =====topic>>>> ${topic === null || topic === void 0 ? void 0 : topic.content}`);\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                method: commands_1.CONNECT_METHOD_PUBLISH,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                params: {\n                    message: {\n                        topic: topic === null || topic === void 0 ? void 0 : topic.content,\n                        message: message,\n                        ttl: constants_1.OKXCONNECTOR_MESSAGE_TTL\n                    }\n                } // crypted\n            };\n            this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                // ack\n                if (rsp && rsp.error) {\n                    log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                }\n                else if (rsp && !rsp.error) {\n                    log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                }\n            }));\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n            return this.packageId;\n        });\n    }\n    sendEncryptedMsg(topic_1, encryptedMsg_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, encryptedMsg, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL) {\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                method: commands_1.CONNECT_METHOD_PUBLISH,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                params: {\n                    message: {\n                        topic: topic,\n                        message: encryptedMsg,\n                        ttl: ttl\n                    }\n                } // crypted\n            };\n            this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                // ack\n                if (rsp && rsp.error) {\n                    log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                }\n                else if (rsp && !rsp.error) {\n                    log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                }\n            }));\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    send(msg_1) {\n        return __awaiter(this, arguments, void 0, function* (msg, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL) {\n            // make send msg payload\n            log.logDebug(`message send =====> ${msg}`);\n            log.reportLog('connect send msg');\n            if (!this.isWalletPKReady()) {\n                // channel not ready\n                throw new Error('connection not finish');\n            }\n            let message = this.crypto.encrypt(msg, this.connectedWalletPK);\n            log.logDebug(`message send =====encrypt message.length>>>> ${message.length}`);\n            log.reportEvent(report_1.OKXReportType.LOG, 'msg_size', message.length.toString());\n            // only one topic\n            let topic = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`message send =====topic>>>> ${topic === null || topic === void 0 ? void 0 : topic.content}`);\n            // before send message check split\n            yield this.splitManager.sendSplitPackages(topic === null || topic === void 0 ? void 0 : topic.content, message, this.sendEncryptedMsg.bind(this), this.sendRaw.bind(this));\n            // await this.sendEncryptedMsg(topic?.content, message, ttl)\n            // this.refreshPackageId()\n            // const payload : ConnectPayloadReq = {\n            //    id : this.packageId.toString(),\n            //    method: CONNECT_METHOD_PUBLISH,\n            //    jsonrpc: CONNECT_JSONRPC_VER,\n            //    params: {\n            //       message: {\n            //          topic: topic?.content,\n            //          message: message,\n            //          ttl: ttl\n            //       }\n            //    } // crypted\n            // }\n            // this.events.once(this.packageId.toString(), async (rsp:ConnectPayloadRsp)=>{\n            //    // ack\n            //    if (rsp && rsp.error) {\n            //       log.logError(`@${new Date().toUTCString()} >>> failed when send msg`)\n            //    } else if ( rsp && !rsp.error) {\n            //       log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`)\n            //    }\n            // })\n            // await this.connector.send(async ()=>{\n            //    log.logDebug('CONNECT: reconnect before send')\n            //    return await this.connector.connect();\n            // }, payload)\n            return this.packageId;\n        });\n    }\n    sendACK(msgId_1, success_1) {\n        return __awaiter(this, arguments, void 0, function* (msgId, success, reason = undefined) {\n            if (success === true) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    result: true\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n            else if (reason) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    error: {\n                        code: reason.code, //int\n                        message: reason.message\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    // send receive\n    sendReceive(msgId, messageId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECEIVE,\n                params: {\n                    data: {\n                        messageId: messageId,\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    // send receive\n    // 1. fetch all \n    // 2. send back receive\n    // 3. check has more, if so, repeat from 1st step\n    sendFetchAndConsumeMessages(msgId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(msgId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic == topic) {\n                                let messageId = msg.messageId;\n                                log.reportLog('5. get fetch result');\n                                // fetch result receive control\n                                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(msg.message);\n                                if (msgPlayloadObject) {\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                    log.logDebug('skip receive');\n                                }\n                                else {\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                    // send receive command to relay server\n                                    this.refreshPackageId();\n                                    yield this.sendReceive(this.packageId.toString(), messageId, topic);\n                                }\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            log.reportLog('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_FETCHMSG,\n                params: {\n                    data: {\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    cleanCache() {\n        log.reportLog('connection cache clean called');\n        this.connectStorage.clearCache();\n    }\n    saveSessionContent(key, data) {\n        if (!data) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(data);\n        this.connectStorage.encryptStoreMsg(jsonData, storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n    }\n    getSessionContent(key) {\n        try {\n            let jsonStr = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n            if (jsonStr) {\n                let object = (0, safejson_1.safeJsonParse)(jsonStr);\n                return object;\n            }\n        }\n        catch (error) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        return undefined;\n    }\n    getCurrentConnectionReady() {\n        let cryptoKeyReady = false;\n        try {\n            const cryptoKeyPair = this.getCachedCryptoKeyPair();\n            if (cryptoKeyPair) {\n                cryptoKeyReady = true;\n            }\n        }\n        catch (error) {\n            log.logError('check connection ready failed');\n        }\n        return this.isWalletPKReady() && cryptoKeyReady;\n    }\n    getCryptoKeyEnable() {\n        let cryptoKeyReady = false;\n        try {\n            const cryptoKeyPair = this.getCachedCryptoKeyPair();\n            if (cryptoKeyPair) {\n                cryptoKeyReady = true;\n            }\n        }\n        catch (error) {\n            log.logError('check connection ready failed');\n        }\n        return cryptoKeyReady;\n    }\n}\nexports.ConnectionManager = ConnectionManager;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionSplitPackages = void 0;\nconst storageconstants_1 = require(\"./storageconstants\");\nconst localforage_1 = __importDefault(require(\"localforage\"));\nconst utils_1 = require(\"../utils/utils\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst ConnectionSplitSupportedVersionLimit = 2;\nconst ConnectionSplitSupportedSizeLimit = 63000;\n// test\n//  const ConnectionSplitSupportedSizeLimit = 500\nconst ConnectionReceiveKey = 'ConnectionReceiveKey';\nconst ConnectionSendKey = 'ConnectionSendKey';\nconst ConnectionTopicVersionKey = 'ConnectionSenderVersionKey';\nclass ConnectionSplitPackages {\n    constructor(side) {\n        // 发送队列, 保存分片数据，需要断点续传发送，\n        this.splitMessageSendArray = new Map();\n        // 接收队列, 保存回包数据，需要冗余去重复\n        this.splitMessageReceivedArray = new Map();\n        // sender 版本校验缓存\n        this.splitMessageSenderVersionMap = new Map();\n        this.splitPackageCache = localforage_1.default.createInstance({\n            name: storageconstants_1.OKXCONNECTOR_STORAGE_PROTOCOL_CACHE + side\n        });\n    }\n    init(sendRawMsg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // 1. 恢复缓存\n            yield this.recoverFromCache();\n            //2. 缓存中发送队列重发\n            if (this.splitMessageSendArray.size > 0) {\n                for (const [topic, payloadList] of this.splitMessageSendArray.entries()) {\n                    for (let i = 0; i < payloadList.length;) {\n                        const payload = payloadList[i];\n                        try {\n                            // 尝试发送消息\n                            yield sendRawMsg((0, safejson_1.safeJsonStringify)(payload), topic);\n                            log.logDebug(`Successfully sent payload: ${(0, safejson_1.safeJsonStringify)(payload)} to topic: ${topic}`);\n                            // 成功后移除元素\n                            payloadList.splice(i, 1);\n                        }\n                        catch (error) {\n                            log.logError(`Failed to send payload: ${(0, safejson_1.safeJsonStringify)(payload)} to topic: ${topic}`, error);\n                            // 重试逻辑（最多重试 3 次）\n                            payload.retryCount = (payload.retryCount || 0) + 1;\n                            if (payload.retryCount > 3) {\n                                log.logError(`Payload failed after 3 retries: ${(0, safejson_1.safeJsonStringify)(payload)}`);\n                                payloadList.splice(i, 1); // 放弃重试，移除元素\n                            }\n                            else {\n                                i++; // 跳过当前元素，继续处理下一个\n                            }\n                        }\n                    }\n                }\n                yield this.syncCache();\n            }\n        });\n    }\n    tryParseMessageSplitPayload(message) {\n        var _a;\n        let result = undefined;\n        try {\n            if (message.trimStart().startsWith('{')) {\n                let messageObj = (0, safejson_1.safeJsonParse)(message);\n                if (messageObj\n                    && messageObj.protocol_version\n                    && messageObj.protocol_version >= 2) {\n                    let protocolMessageObject = messageObj;\n                    if (protocolMessageObject.package_group_id && ((_a = protocolMessageObject.package_group_id) === null || _a === void 0 ? void 0 : _a.length) > 0) {\n                        result = messageObj;\n                    }\n                }\n            }\n            else {\n                (0, log_1.logDebug)('not split packages');\n            }\n        }\n        catch (error) {\n            (0, log_1.logDebug)('not split packages');\n        }\n        return result;\n    }\n    updateTopicSenderVersion(topic, protocolVersion) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.splitMessageSenderVersionMap.set(topic, protocolVersion);\n            yield this.syncCache();\n            (0, log_1.logDebug)('get update topic sender version: ', topic, protocolVersion);\n        });\n    }\n    /**\n     * topic\n     * message 待发送的消息体\n     * sendMsg 正常发送消息的方法\n     * sendRawMsg 发送明文格式，即拆包消息的方法\n    */\n    sendSplitPackages(topic, message, sendMsg, sendRawMsg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // 1. 长度校验拆分子包\n            // 2. 确认连接协议最大支持版本\n            // 3. 分包缓存\n            // 4. 缓存包发送\n            // 5. ACK确认并清理缓存\n            if (!topic) {\n                log.logError('sendSplitPackages invalid topic');\n                return;\n            }\n            let senderVersion = this.splitMessageSenderVersionMap.get(topic);\n            let msgLength = message.length;\n            try {\n                if (msgLength < ConnectionSplitSupportedSizeLimit) {\n                    throw new Error(`no need to split (size:${msgLength})`);\n                }\n                if (!senderVersion || (senderVersion && senderVersion < ConnectionSplitSupportedVersionLimit)) {\n                    throw new Error(`version not support split (version: ${senderVersion})`);\n                }\n                const msg_parts = [];\n                let msg_part_length = ConnectionSplitSupportedSizeLimit;\n                for (let i = 0; i < message.length; i += msg_part_length) {\n                    if (i + msg_part_length < message.length) {\n                        msg_parts.push(message.slice(i, i + msg_part_length));\n                    }\n                    else {\n                        msg_parts.push(message.slice(i));\n                    }\n                }\n                let groupId = (0, utils_1.generateGroupId)();\n                let splitMessagePackages = msg_parts.map((msg, index) => {\n                    // make msg split parts\n                    let msgObj = {\n                        topicId: topic,\n                        protocol_version: ConnectionSplitSupportedVersionLimit,\n                        total_count: msg_parts.length,\n                        package_index: index,\n                        package_group_id: groupId,\n                        content: msg\n                    };\n                    return msgObj;\n                });\n                // save cache\n                this.mergePackageArray(true, splitMessagePackages);\n                // try send out\n                for (let i = 0; i < splitMessagePackages.length;) {\n                    const msgObj = splitMessagePackages[i];\n                    const payload = (0, safejson_1.safeJsonStringify)(msgObj);\n                    try {\n                        // 尝试发送消息\n                        yield sendRawMsg(payload, topic);\n                        log.logDebug(`Successfully sent payload: ${payload} to topic: ${topic}`);\n                        // 成功后移除元素\n                        splitMessagePackages.splice(i, 1);\n                    }\n                    catch (error) {\n                        log.logError(`Failed to send payload: ${payload} to topic: ${topic}`, error);\n                        // 重试逻辑（最多重试 3 次）\n                        msgObj.retryCount = (msgObj.retryCount || 0) + 1;\n                        if (msgObj.retryCount > 3) {\n                            log.logError(`Payload failed after 3 retries: ${payload}`);\n                            splitMessagePackages.splice(i, 1); // 放弃重试，移除元素\n                        }\n                        else {\n                            i++; // 跳过当前元素，继续处理下一个\n                        }\n                    }\n                }\n                // clean cache\n                this.splitMessageSendArray.set(topic, []);\n                yield this.syncCache();\n            }\n            catch (e) {\n                (0, log_1.logDebug)('send split packages no split');\n                (0, log_1.logDebug)(e);\n                yield sendMsg(topic, message);\n            }\n        });\n    }\n    onReceivedPackageCheck(payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // 1. merge 进入缓存\n            this.mergePackageArray(false, [payload]);\n            let completeMap = new Map();\n            let inputTopic = payload.topicId;\n            // 2. 返回检查结果,输出完整message结果\n            this.splitMessageReceivedArray.forEach((itemList, topic) => {\n                if (topic == payload.topicId) {\n                    itemList.forEach((item) => {\n                        if (item.messageObject.package_group_id) {\n                            let messageCache = completeMap.get(item.messageObject.package_group_id);\n                            if (!messageCache) {\n                                messageCache = new Array();\n                            }\n                            messageCache.push(item);\n                            completeMap.set(item.messageObject.package_group_id, messageCache);\n                        }\n                    });\n                }\n            });\n            (0, log_1.logDebug)('on received message, check message cache');\n            let checkResult = {\n                isSplitPackage: false,\n                // finalMessage: undefined,\n                // completeMessageIdList: undefined \n            };\n            if (payload.messageObject.package_group_id) {\n                checkResult.isSplitPackage = true;\n                let messageCache = completeMap.get(payload.messageObject.package_group_id);\n                // 判断是否收齐\n                if (messageCache === null || messageCache === void 0 ? void 0 : messageCache.length) {\n                    let index_check = new Set();\n                    messageCache.forEach((item) => {\n                        if (item.messageObject.package_index !== undefined) {\n                            index_check.add(item.messageObject.package_index);\n                        }\n                    });\n                    if (index_check.size == payload.messageObject.total_count) {\n                        // 满足条件，更新checkResult\n                        messageCache.sort((a, b) => {\n                            if ((a.messageObject.package_index || a.messageObject.package_index === 0)\n                                && (b.messageObject.package_index || b.messageObject.package_index === 0)) {\n                                return a.messageObject.package_index - b.messageObject.package_index;\n                            }\n                            else {\n                                return 0;\n                            }\n                        });\n                        let messageList = messageCache.reduce((msgList, item) => {\n                            msgList.push(item.messageObject.content);\n                            return msgList;\n                        }, []);\n                        let messageIdList = messageCache.reduce((msgIdList, item) => {\n                            msgIdList.push(item.messageId);\n                            return msgIdList;\n                        }, []);\n                        checkResult.isSplitPackage = true;\n                        checkResult.finalMessage = messageList.join('');\n                        checkResult.completeMessageIdList = messageIdList;\n                        // 清理缓存\n                        let receivedList = this.splitMessageReceivedArray.get(inputTopic);\n                        if (receivedList) {\n                            receivedList = receivedList.filter((item) => {\n                                return !messageIdList.includes(item.messageId);\n                            });\n                            this.splitMessageReceivedArray.set(inputTopic, receivedList);\n                        }\n                        yield this.syncCache();\n                    }\n                }\n            }\n            // 抛出，交给manager来发送receive\n            return checkResult;\n        });\n    }\n    /* -------------------------- */\n    /** private methods */\n    /* -------------------------- */\n    mergePackageArray(isSending, inputPayloadArray) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('append sending array');\n            if (isSending) {\n                let inputSendArray = inputPayloadArray;\n                let filtedArray = inputSendArray.filter((payload) => {\n                    let inputTopic = payload.topicId;\n                    let accept = true;\n                    let sendCacheArray = this.splitMessageSendArray.get(inputTopic);\n                    sendCacheArray === null || sendCacheArray === void 0 ? void 0 : sendCacheArray.forEach((cachedPayload) => {\n                        if (cachedPayload.package_group_id == payload.package_group_id\n                            && cachedPayload.total_count == payload.total_count\n                            && cachedPayload.package_index == payload.package_index) {\n                            accept = false;\n                        }\n                    });\n                    return accept;\n                });\n                if (filtedArray.length > 0) {\n                    let inputTopic = filtedArray[0].topicId;\n                    let sendArray = this.splitMessageSendArray.get(inputTopic);\n                    if (!sendArray) {\n                        sendArray = new Array();\n                    }\n                    sendArray = sendArray.concat(filtedArray);\n                    this.splitMessageSendArray.set(inputTopic, sendArray);\n                    (0, log_1.logDebug)('append sending array (after filted): ', sendArray);\n                }\n            }\n            else {\n                let inputReceiveArray = inputPayloadArray;\n                let filtedArray = inputReceiveArray.filter((payload) => {\n                    let inputTopic = payload.topicId;\n                    let accept = true;\n                    let receiveCacheArray = this.splitMessageReceivedArray.get(inputTopic);\n                    receiveCacheArray === null || receiveCacheArray === void 0 ? void 0 : receiveCacheArray.forEach((cachedPayload) => {\n                        if (cachedPayload.messageId == payload.messageId) {\n                            accept = false;\n                        }\n                    });\n                    return accept;\n                });\n                if (filtedArray.length > 0) {\n                    let inputTopic = filtedArray[0].topicId;\n                    let receiveArray = this.splitMessageReceivedArray.get(inputTopic);\n                    if (!receiveArray) {\n                        receiveArray = new Array();\n                    }\n                    receiveArray = receiveArray.concat(filtedArray);\n                    this.splitMessageReceivedArray.set(inputTopic, receiveArray);\n                    (0, log_1.logDebug)('append received array (after filted): ', receiveArray);\n                }\n            }\n        });\n    }\n    syncCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('sync split message cache');\n            yield this.splitPackageCache.setItem(ConnectionReceiveKey, this.splitMessageReceivedArray);\n            yield this.splitPackageCache.setItem(ConnectionSendKey, this.splitMessageSendArray);\n            yield this.splitPackageCache.setItem(ConnectionTopicVersionKey, this.splitMessageSenderVersionMap);\n        });\n    }\n    recoverFromCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // rec\n            let rec_array = yield this.splitPackageCache.getItem(ConnectionReceiveKey);\n            if (rec_array) {\n                this.splitMessageReceivedArray = rec_array;\n            }\n            else {\n                this.splitMessageReceivedArray = new Map();\n            }\n            //send\n            let send_array = yield this.splitPackageCache.getItem(ConnectionSendKey);\n            if (send_array) {\n                this.splitMessageSendArray = send_array;\n            }\n            else {\n                this.splitMessageSendArray = new Map();\n            }\n            // topic/version cach\n            let topic = yield this.splitPackageCache.getItem(ConnectionTopicVersionKey);\n            if (topic) {\n                this.splitMessageSenderVersionMap = topic;\n            }\n            else {\n                this.splitMessageSenderVersionMap = new Map();\n            }\n        });\n    }\n}\nexports.ConnectionSplitPackages = ConnectionSplitPackages;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectorState = exports.CONNECT_PROTOCOL_VER = exports.CONNECT_JSONRPC_VER = exports.OKXCONNECTOR_MESSAGE_TTL = exports.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE = exports.OKXCONNECTOR_WS_URL_LIST = exports.OKXCONNECTOR_WS_URL_IDX_KEY = exports.OKXCONNECTOR_WS_URL_3 = exports.OKXCONNECTOR_WS_URL_2 = exports.OKXCONNECTOR_WS_URL_1 = exports.EVENT_EMITTER_MAX_LISTENERS = exports.OKXCONNECTOR_PROTOCOL_VERSION = void 0;\nexports.OKXCONNECTOR_PROTOCOL_VERSION = 2;\nexports.EVENT_EMITTER_MAX_LISTENERS = 10;\nexports.OKXCONNECTOR_WS_URL_1 = \"wss://wsdexpri.okx.com/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_2 = \"wss://wsdexpri.okx.ac/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_3 = \"wss://wsdexpri.coinall.ltd/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_IDX_KEY = \"wuik\";\nexports.OKXCONNECTOR_WS_URL_LIST = [\n    exports.OKXCONNECTOR_WS_URL_1,\n    exports.OKXCONNECTOR_WS_URL_2,\n    exports.OKXCONNECTOR_WS_URL_3,\n];\nexports.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE = {\n    TIME_OUT: 3990,\n    CANCELED: 3991,\n    FINISHED: 3992,\n};\nexports.OKXCONNECTOR_MESSAGE_TTL = 300000;\n// --------------- JSON RPC ---------------\nexports.CONNECT_JSONRPC_VER = \"2.0\";\n// --------------- Protocol Version -------\nexports.CONNECT_PROTOCOL_VER = 2;\nexports.ConnectorState = {\n    InitState: 0,\n    Connecting: 1,\n    Connected: 2,\n    Disconnected: 3,\n    OnError: 4,\n};\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Engine = void 0;\nconst protocol_1 = require(\"../protocol\");\nconst constants_1 = require(\"./constants\");\nconst utils_1 = require(\"../utils\");\nconst iconnector_1 = require(\"../connector/iconnector\");\nconst connectionManager_1 = require(\"./connectionManager\");\nconst sessionUtils_1 = require(\"./sessionUtils\");\nconst wallet_info_1 = require(\"../protocol/connect/wallet-info\");\nclass Engine {\n    constructor(appName) {\n        this.connectors = [];\n        this.useConnector = undefined;\n        this.connectionManager = new connectionManager_1.ConnectionManager(appName);\n        this.addConnectionListener();\n    }\n    getConnector() {\n        if (this.useConnector) {\n            return this.useConnector;\n        }\n    }\n    setAccountChangeListener(accountChangeListener) {\n        this.accountChangeListener = accountChangeListener;\n        (0, utils_1.logDebug)(\"setAccountChangeListener: engine\", accountChangeListener);\n        for (const connector of this.connectors) {\n            connector.setAccountChangeListener(accountChangeListener);\n        }\n    }\n    registerConnector(connectors) {\n        this.connectors = connectors;\n        for (const connector of connectors) {\n            connector.setConnectionManager(this.connectionManager);\n        }\n    }\n    hasWsConnector() {\n        for (const connector of this.connectors) {\n            if (this.isWsConnector(connector)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    isWsConnector(connector) {\n        if (!connector)\n            return false;\n        return (connector.getTag() === iconnector_1.OKX_TG_WALLET\n            || connector.getTag() === iconnector_1.OKX_APP_WALLET);\n    }\n    isInjectedConnector(connector) {\n        if (!connector)\n            return false;\n        return connector.getTag() === iconnector_1.OKX_INJECT_WALLET;\n    }\n    universalConnect(request, sessionConfig, connectInfoAndUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.addConnectionListener();\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b, _c, _d;\n                try {\n                    (0, utils_1.logDebug)(\"engine universalConnect request :\", JSON.stringify(request));\n                    (0, utils_1.logDebug)(\"engine universalConnect sessionConfig :\", JSON.stringify(sessionConfig));\n                    let universalRequest = [];\n                    request.forEach((item) => {\n                        let name = item.name;\n                        if (name.startsWith(\"requestAccounts\") || name.startsWith(\"ton\")) {\n                            universalRequest.push(item);\n                        }\n                    });\n                    (0, utils_1.logDebug)(\"engine universalConnect universalRequest :\", JSON.stringify(universalRequest));\n                    const connectInfo = this.connectionManager.getConnectInfo();\n                    const requestId = Date.now().toString();\n                    let openUniversalLink = (_a = sessionConfig.openUniversalUrl) !== null && _a !== void 0 ? _a : false;\n                    const universalConnectRequest = {\n                        protocolVer: Number(protocol_1.tonConnectSdkVersion),\n                        topic: connectInfo.channelId,\n                        clientId: connectInfo.clientId,\n                        requestId: requestId,\n                        dAppInfo: sessionConfig.dappInfo,\n                        requests: universalRequest,\n                        redirect: (_b = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _b !== void 0 ? _b : \"none\"\n                    };\n                    const base64Encoded = (0, utils_1.encodeConnectParams)(universalConnectRequest);\n                    universalConnectRequest.redirect = (_c = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _c !== void 0 ? _c : \"none\";\n                    (0, utils_1.logDebug)('engine universalConnect ==>>universalConnectRequest:', JSON.stringify(universalConnectRequest));\n                    var openOKXLink = \"\";\n                    // open app wallet\n                    if (openUniversalLink) {\n                        openOKXLink = (0, utils_1.getOKXLink)(universalConnectRequest, sessionConfig.useMini, sessionConfig.tmaReturnUrl);\n                        (0, utils_1.logDebug)('engine universalConnect ==>>openOKXLink:', openOKXLink);\n                    }\n                    const openMethod = () => {\n                        if (this.connectors.length == 1 && this.connectors[0].getTag() === iconnector_1.OKX_INJECT_WALLET) {\n                            return this.connectors[0].openWallet({\n                                connectRequest: universalConnectRequest\n                            });\n                        }\n                        else {\n                            if (sessionConfig.useMini) {\n                                return (0, utils_1.openOKXTMAWalletlinkWithFallback)(openOKXLink);\n                            }\n                            if ((0, utils_1.useShortLink)()) {\n                                return (0, utils_1.openOKXUniversalLink)(openOKXLink);\n                            }\n                            return (0, utils_1.openOKXDeeplinkWithFallback)(openOKXLink);\n                        }\n                    };\n                    (0, utils_1.logDebug)('engine universalConnect ==>>openOKXLink:', openOKXLink);\n                    const isIOS = (0, utils_1.isIos)();\n                    if (isIOS && openUniversalLink) {\n                        (0, utils_1.logDebug)(`engine universalConnect ==>>isIOS: ${isIOS}   openUniversalLink: ${openUniversalLink}`);\n                        openMethod();\n                    }\n                    this.addOnConnectResultListener((response) => {\n                        var _a, _b, _c, _d;\n                        try {\n                            this.addOnConnectResultListener(undefined);\n                            let connectResponse = response;\n                            if (connectResponse.method == \"connect\") {\n                                (0, utils_1.logDebug)(\"engin  universalConnect success connectResponse:>>>\", JSON.stringify(connectResponse));\n                                let namespaces = (0, sessionUtils_1.buildNameSpacesByConnectResponse)(connectResponse);\n                                if (namespaces) {\n                                    let walletName = undefined;\n                                    if (((_b = (_a = connectResponse.payload) === null || _a === void 0 ? void 0 : _a.responses) === null || _b === void 0 ? void 0 : _b[0]) && \"walletName\" in connectResponse.payload.responses[0]) {\n                                        walletName = connectResponse.payload.responses[0]['walletName'];\n                                    }\n                                    let appName = (_c = connectResponse.payload) === null || _c === void 0 ? void 0 : _c.wallet.appName;\n                                    var tag;\n                                    switch (appName) {\n                                        case wallet_info_1.OKXWalletName:\n                                            tag = iconnector_1.OKX_APP_WALLET;\n                                            break;\n                                        case wallet_info_1.OKXMiniWalletName:\n                                            tag = iconnector_1.OKX_TG_WALLET;\n                                            break;\n                                        case wallet_info_1.OKXInjectWalletName:\n                                            tag = iconnector_1.OKX_INJECT_WALLET;\n                                            break;\n                                    }\n                                    var connector = this.connectors.find((connector) => connector.getTag() === tag);\n                                    if (!connector) {\n                                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n                                    }\n                                    let session = Object.assign({ topic: connectInfo.channelId, sessionConfig: sessionConfig, namespaces: namespaces }, (connectResponse.payload && {\n                                        wallet: Object.assign(Object.assign({}, connectResponse.payload.wallet), { walletName: walletName })\n                                    }));\n                                    let methodsResponse = connectResponse.payload.responses.find(item => item.name === 'requestAccounts');\n                                    if (methodsResponse && methodsResponse.connectRequestMethods) {\n                                        session.signResponse = methodsResponse.connectRequestMethods;\n                                    }\n                                    (0, utils_1.logDebug)(\"engin  universalConnect success session:>>>\", JSON.stringify(session));\n                                    if (this.isWsConnector(connector)) {\n                                        (0, utils_1.logDebug)(\"engine update protocol version\");\n                                        this.connectionManager.updateProtocolVersion(connectInfo.channelId, connectResponse.payload.wallet.maxProtocolVersion);\n                                    }\n                                    resolve(session);\n                                    this.setUseConnector(connector);\n                                }\n                                else {\n                                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n                                }\n                            }\n                            else if (connectResponse.method == \"connect_error\" && ((_d = connectResponse.payload) === null || _d === void 0 ? void 0 : _d.code) != undefined) {\n                                throw new protocol_1.OKXConnectError(connectResponse.payload.code);\n                            }\n                        }\n                        catch (e) {\n                            reject(e);\n                        }\n                    });\n                    if (this.hasWsConnector()) {\n                        yield ((_d = this.connectionManager) === null || _d === void 0 ? void 0 : _d.disconnect(false));\n                        try {\n                            yield this.connectionManager.connect();\n                        }\n                        catch (e) {\n                            (0, utils_1.logDebug)('Engine universalConnect error', e);\n                            throw e;\n                        }\n                        (0, utils_1.logDebug)('engin  universalConnect ==>> connectInfoAndUrl:', connectInfoAndUrl);\n                        this.sendSession(base64Encoded);\n                    }\n                    if (!isIOS && openUniversalLink) {\n                        openMethod();\n                    }\n                    (0, utils_1.logDebug)('engin  universalConnect ==>> connectInfoAndUrl:', connectInfoAndUrl);\n                    if (connectInfoAndUrl) {\n                        const info = {\n                            connectRequest: universalConnectRequest,\n                            redirect: sessionConfig.redirect,\n                            tmaReturnUrl: sessionConfig.tmaReturnUrl,\n                        };\n                        (0, utils_1.logDebug)(\"universalConnect connectInfoAndUrl info :\", JSON.stringify(info));\n                        connectInfoAndUrl(info);\n                    }\n                }\n                catch (error) {\n                    (0, utils_1.logDebug)(\"Engine universalConnect catch error\", error);\n                    reject(error);\n                }\n            }));\n        });\n    }\n    addOnConnectResultListener(connectResultListener) {\n        for (const connector of this.connectors) {\n            if (this.isInjectedConnector(connector)) {\n                connector.setOnConnectResultListener(connectResultListener);\n            }\n        }\n        this.connectResultListener = connectResultListener;\n    }\n    openWallet(engineConnectInfo, connector) {\n        var _a;\n        if (connector) {\n            connector.openWallet(engineConnectInfo);\n        }\n        else {\n            (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.openWallet(engineConnectInfo);\n        }\n    }\n    send(request, requestAnswer, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            return (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.send(request, requestAnswer, ttl);\n        });\n    }\n    clearData() {\n        var _a;\n        (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.clearData();\n    }\n    addDisconnectListener(disconnecter) {\n        var _a;\n        (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.addDisconnectListener(disconnecter);\n    }\n    saveSessionContent(key, data) {\n        this.connectionManager.saveSessionContent(key, data);\n    }\n    getSessionContent(key) {\n        var _a;\n        var session = this.connectionManager.getSessionContent(key);\n        if (session) {\n            var tag = \"\";\n            if (typeof session === \"object\") {\n                tag = this.getTagByappName((_a = session.wallet) === null || _a === void 0 ? void 0 : _a.appName);\n            }\n            if (this.connectors.find((connector) => {\n                return connector.getTag() === tag;\n            })) {\n                return session;\n            }\n        }\n        return undefined;\n    }\n    getTagByappName(appName) {\n        var tag = '';\n        if (appName) {\n            switch (appName) {\n                case wallet_info_1.OKXWalletName:\n                    tag = iconnector_1.OKX_APP_WALLET;\n                    break;\n                case wallet_info_1.OKXMiniWalletName:\n                    tag = iconnector_1.OKX_TG_WALLET;\n                    break;\n                case wallet_info_1.OKXInjectWalletName:\n                    tag = iconnector_1.OKX_INJECT_WALLET;\n            }\n        }\n        return tag;\n    }\n    setConnectConnector(wallet) {\n        var tag = this.getTagByappName(wallet === null || wallet === void 0 ? void 0 : wallet.appName);\n        if (!tag)\n            return;\n        this.setUseConnector(this.connectors.find((connector) => {\n            return connector.getTag() === tag;\n        }));\n    }\n    setUseConnector(connector) {\n        this.useConnector = connector;\n        if (this.isWsConnector(connector)) {\n            connector.addConnectionListener();\n        }\n    }\n    // for es connect\n    setSessionConnectingListener(sessionConnectingListener) {\n        this.sessionConnectingListener = sessionConnectingListener;\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.restoreconnect(sessionInfo, onConnectResult));\n        });\n    }\n    restoreconnectFromTopic(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.isWsConnector(this.getConnector())) {\n                yield this.getConnector().restoreconnectFromTopic(topic);\n            }\n        });\n    }\n    getCurrentConnectionReady(namespaceKeys) {\n        var _a;\n        return !!((_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.getCurrentConnectionReady(namespaceKeys));\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            var _a;\n            yield ((_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.connectManagerDisconnect(fromRestore));\n        });\n    }\n    sendSession(sessionInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, utils_1.logDebug)('[Connect] sendSession called:', sessionInfo);\n            const requestId = Date.now().toString();\n            let request = {\n                method: 'session_info',\n                params: { protocolVersion: constants_1.CONNECT_PROTOCOL_VER, sessionInfo: sessionInfo }\n            };\n            yield this.connectionManager.sendRaw(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId })));\n        });\n    }\n    addConnectionListener() {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.addListener(\"sdk_response\", (event, msg) => {\n            var jsonResponse = (0, utils_1.safeJsonParse)(msg);\n            (0, utils_1.logDebug)(`Engine ==>> addListener ==> success ==> ${jsonResponse}`);\n            if (jsonResponse.method === 'connect' || jsonResponse.method === 'connect_error') {\n                if (this.connectResultListener) {\n                    this.connectResultListener(jsonResponse);\n                }\n            }\n            else if (jsonResponse.method === \"session_connecting\") {\n                (0, utils_1.logDebug)(\"Engine ==>> handleResponse_4  ===> sessionConnectingListener\");\n                if (this.sessionConnectingListener) {\n                    (0, utils_1.logDebug)(\"Engine ==>> handleResponse_4  ===> sessionConnectingListener not null\");\n                    this.sessionConnectingListener();\n                    this.sessionConnectingListener = undefined;\n                }\n            }\n        }, function () {\n        });\n    }\n}\nexports.Engine = Engine;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = exports.Engine = exports.WalletConnectionManager = exports.ConnectionManager = exports.OKXWalletConnector = void 0;\nvar connect_1 = require(\"./connect\");\nObject.defineProperty(exports, \"OKXWalletConnector\", { enumerable: true, get: function () { return connect_1.OKXWalletConnector; } });\nvar connectionManager_1 = require(\"./connectionManager\");\nObject.defineProperty(exports, \"ConnectionManager\", { enumerable: true, get: function () { return connectionManager_1.ConnectionManager; } });\nvar walletConnectionManager_1 = require(\"./walletConnectionManager\");\nObject.defineProperty(exports, \"WalletConnectionManager\", { enumerable: true, get: function () { return walletConnectionManager_1.WalletConnectionManager; } });\nvar engine_1 = require(\"./engine\");\nObject.defineProperty(exports, \"Engine\", { enumerable: true, get: function () { return engine_1.Engine; } });\nvar storage_1 = require(\"./storage\");\nObject.defineProperty(exports, \"Storage\", { enumerable: true, get: function () { return storage_1.Storage; } });\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MULTICODEC_ED25519_LENGTH = exports.MULTICODEC_ED25519_HEADER = exports.MULTICODEC_ED25519_BASE = exports.MULTICODEC_ED25519_ENCODING = exports.DID_METHOD = exports.DID_PREFIX = exports.DID_DELIMITER = exports.KEY_PAIR_SEED_LENGTH = exports.DATA_ENCODING = exports.JSON_ENCODING = exports.JWT_ENCODING = exports.JWT_DELIMITER = exports.JWT_IRIDIUM_TYP = exports.JWT_IRIDIUM_ALG = exports.JWTHeaderType = void 0;\nexports.generateKeyPair = generateKeyPair;\nexports.decodeJSON = decodeJSON;\nexports.encodeJSON = encodeJSON;\nexports.encodeIss = encodeIss;\nexports.decodeIss = decodeIss;\nexports.encodeSig = encodeSig;\nexports.decodeSig = decodeSig;\nexports.encodeData = encodeData;\nexports.decodeData = decodeData;\nexports.encodeJWT = encodeJWT;\nexports.decodeJWT = decodeJWT;\nexports.signJWT = signJWT;\nexports.verifyJWT = verifyJWT;\nconst ed25519 = __importStar(require(\"@stablelib/ed25519\"));\nconst safejson_1 = require(\"../utils/safejson\");\nconst utils_1 = require(\"../utils/utils\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst log = __importStar(require(\"../utils/log\"));\nconst stringUtils_1 = require(\"../utils/stringUtils\");\nexports.JWTHeaderType = \"dapp\";\nexports.JWT_IRIDIUM_ALG = \"EdDSA\";\nexports.JWT_IRIDIUM_TYP = \"JWT\";\nexports.JWT_DELIMITER = \".\";\nexports.JWT_ENCODING = \"base64url\";\nexports.JSON_ENCODING = \"utf8\";\nexports.DATA_ENCODING = \"utf8\";\nexports.KEY_PAIR_SEED_LENGTH = 32;\nexports.DID_DELIMITER = \":\";\nexports.DID_PREFIX = \"did\";\nexports.DID_METHOD = \"key\";\nexports.MULTICODEC_ED25519_ENCODING = \"base58btc\";\nexports.MULTICODEC_ED25519_BASE = \"z\";\nexports.MULTICODEC_ED25519_HEADER = \"K36\";\nexports.MULTICODEC_ED25519_LENGTH = 32;\nfunction generateKeyPair() {\n    // let local_seed = randomBytes(KEY_PAIR_SEED_LENGTH)\n    // return ed25519.generateKeyPairFromSeed(local_seed);\n    return tweetnacl_1.default.sign.keyPair();\n}\nfunction decodeJSON(str) {\n    return (0, safejson_1.safeJsonParse)((0, stringUtils_1.okxtoString)((0, stringUtils_1.okxfromString)(str, exports.JWT_ENCODING), exports.JSON_ENCODING));\n}\nfunction encodeJSON(val) {\n    return (0, stringUtils_1.okxtoString)((0, stringUtils_1.okxfromString)((0, safejson_1.safeJsonStringify)(val), exports.JSON_ENCODING), exports.JWT_ENCODING);\n}\nfunction encodeIss(publicKey) {\n    log.logDebug(`publicKey: ${(0, utils_1.toHexString)(publicKey)}`);\n    var publicKeyStr = (0, stringUtils_1.okxtoString)(publicKey, exports.MULTICODEC_ED25519_ENCODING);\n    return [exports.DID_PREFIX, exports.DID_METHOD, publicKeyStr].join(exports.DID_DELIMITER);\n}\nfunction decodeIss(issuer) {\n    const [prefix, method, multicodec] = issuer.split(exports.DID_DELIMITER);\n    if (prefix !== exports.DID_PREFIX || method !== exports.DID_METHOD) {\n        throw new Error(`Issuer must be a DID with method \"key\"`);\n    }\n    if (multicodec === undefined) {\n        throw new Error('multicodec is undefined');\n    }\n    const publicKey = (0, stringUtils_1.okxfromString)(multicodec, exports.MULTICODEC_ED25519_ENCODING);\n    if (publicKey === undefined || publicKey.length !== exports.MULTICODEC_ED25519_LENGTH) {\n        throw new Error(`Issuer must be a public key with length 32 bytes`);\n    }\n    return publicKey;\n}\n// ---------- Signature ----------------------------------------------- //\nfunction encodeSig(bytes) {\n    return (0, stringUtils_1.okxtoString)(bytes, exports.JWT_ENCODING);\n}\nfunction decodeSig(encoded) {\n    return (0, stringUtils_1.okxfromString)(encoded, exports.JWT_ENCODING);\n}\n// ---------- Data ----------------------------------------------- //\nfunction encodeData(params) {\n    return (0, stringUtils_1.okxfromString)([encodeJSON(params.header), encodeJSON(params.payload)].join(exports.JWT_DELIMITER), exports.DATA_ENCODING);\n}\nfunction decodeData(data) {\n    var _a, _b;\n    const params = (0, stringUtils_1.okxtoString)(data, exports.DATA_ENCODING).split(exports.JWT_DELIMITER);\n    const header = decodeJSON((_a = params[0]) !== null && _a !== void 0 ? _a : '{}');\n    const payload = decodeJSON((_b = params[1]) !== null && _b !== void 0 ? _b : '{}');\n    return { header, payload };\n}\n// ---------- JWT ----------------------------------------------- //\nfunction encodeJWT(params) {\n    return [encodeJSON(params.header), encodeJSON(params.payload), encodeSig(params.signature)].join(exports.JWT_DELIMITER);\n}\nfunction decodeJWT(jwt) {\n    var _a, _b, _c;\n    const params = jwt.split(exports.JWT_DELIMITER);\n    const header = decodeJSON((_a = params[0]) !== null && _a !== void 0 ? _a : '{}');\n    const payload = decodeJSON((_b = params[1]) !== null && _b !== void 0 ? _b : '{}');\n    const signature = decodeSig((_c = params[2]) !== null && _c !== void 0 ? _c : '{}');\n    const data = (0, stringUtils_1.okxfromString)(params.slice(0, 2).join(exports.JWT_DELIMITER), exports.DATA_ENCODING);\n    return { header, payload, signature, data };\n}\nfunction signJWT(sub_1, aud_1, ttl_1, keyPair_1) {\n    return __awaiter(this, arguments, void 0, function* (sub, aud, ttl, keyPair, iat = Math.floor(Date.now())) {\n        const header = { alg: exports.JWT_IRIDIUM_ALG, typ: exports.JWT_IRIDIUM_TYP };\n        const iss = encodeIss(keyPair.publicKey);\n        const exp = iat + ttl;\n        const act = \"authenticate user\";\n        const payload = { iss, sub, aud, act, iat, exp };\n        const data = encodeData({ header, payload });\n        // const signature = ed25519.sign(keyPair.secretKey, data);\n        log.logDebug(`get sec kp: ${keyPair.secretKey} {${keyPair.secretKey.length}}`);\n        const signature = tweetnacl_1.default.sign.detached(data, keyPair.secretKey);\n        return encodeJWT({ header, payload, signature });\n    });\n}\nfunction verifyJWT(jwt) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { header, payload, data, signature } = decodeJWT(jwt);\n        if (header.alg !== exports.JWT_IRIDIUM_ALG || header.typ !== exports.JWT_IRIDIUM_TYP) {\n            throw new Error(\"JWT must use EdDSA algorithm\");\n        }\n        const publicKey = decodeIss(payload.iss);\n        return ed25519.verify(publicKey, data, signature);\n    });\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCONNECTOR_JWT_TTL = exports.OKXCONNECTOR_JWT_WALLET_SIDE = exports.OKXCONNECTOR_JWT_SIDE = void 0;\nexports.OKXCONNECTOR_JWT_SIDE = \"wallet\";\nexports.OKXCONNECTOR_JWT_WALLET_SIDE = \"dapp\";\nexports.OKXCONNECTOR_JWT_TTL = 86400000;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildNameSpacesByConnectResponse = buildNameSpacesByConnectResponse;\nexports.buildRequestAccountNameSpacesByConnectResponse = buildRequestAccountNameSpacesByConnectResponse;\nexports.buildAccountNameSpaces = buildAccountNameSpaces;\nconst log_1 = require(\"../utils/log\");\nfunction buildNameSpacesByConnectResponse(connectResponse) {\n    let requestAccountNameSpaces = buildRequestAccountNameSpacesByConnectResponse(connectResponse);\n    return requestAccountNameSpaces;\n}\nfunction buildRequestAccountNameSpacesByConnectResponse(connectResponse) {\n    let result = {};\n    (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start connectResponse111>>', JSON.stringify(connectResponse));\n    let universalResponse = connectResponse.payload.responses.find(item => item.name === 'requestAccounts');\n    if (universalResponse && universalResponse.accounts) {\n        let filterAccount = [];\n        for (const item of universalResponse.accounts) {\n            if (item.namespace === \"ton\") {\n                if (item.data && item.data.ton_addr) {\n                    if (item.data.ton_addr.address && item.data.ton_addr.address.length > 0) {\n                        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start TON>>', JSON.stringify(item));\n                        filterAccount.push(item);\n                    }\n                }\n            }\n            else {\n                (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start other>>', JSON.stringify(item));\n                filterAccount.push(item);\n            }\n        }\n        universalResponse.accounts = filterAccount;\n    }\n    const tonAddress = connectResponse.payload.responses.find(item => item.name === 'ton_addr');\n    const tonProof = connectResponse.payload.responses.find(item => item.name === 'ton_proof');\n    if (tonAddress && !universalResponse) { //adapt tonsdk\n        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse adapt ton data >>');\n        let address = tonAddress.address;\n        address = 'ton:' + tonAddress.network + \":\" + address;\n        let data = {\n            ton_addr: tonAddress\n        };\n        if (tonProof) {\n            data.ton_proof = tonProof;\n        }\n        universalResponse = {\n            name: \"requestAccounts\",\n            accounts: [{\n                    namespace: 'ton',\n                    addresses: [address],\n                    methods: ['ton_sendTransaction'],\n                    extra: {},\n                    data: data,\n                }]\n        };\n    }\n    (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse end universalResponse>>>', JSON.stringify(universalResponse));\n    buildAccountNameSpaces(universalResponse.accounts, result);\n    return result;\n}\nfunction buildAccountNameSpaces(accounts, result) {\n    accounts.forEach(item => {\n        var chains = [];\n        var accounts = [];\n        item.addresses.forEach(addressItem => {\n            var addressArr = addressItem.split(\":\");\n            (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse addressArr>>', addressArr.length);\n            if (addressArr.length >= 3) {\n                let chain = addressArr.slice(0, 2).join(\":\");\n                chains.push(chain);\n                accounts.push(addressItem);\n                (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse chain:>>', chain, \"addressItem:\", addressItem);\n            }\n        });\n        if (item.data && item.data.ton_addr) {\n            item.data.ton_addr.name = 'ton_addr';\n        }\n        if (item.data && item.data.ton_proof) {\n            item.data.ton_proof.name = 'ton_proof';\n        }\n        result[item.namespace] = {\n            chains: chains,\n            accounts: accounts,\n            methods: item.methods,\n            extra: item.extra,\n            payload: item.data\n        };\n        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse result>>', JSON.stringify(result));\n    });\n}\n/*export function buildTonNameSpaceByConnectResponse(connectResponse: ConnectResponseSuccess): Namespaces | undefined {\n    const tonAddrItem: TonAddressItemReply = connectResponse.payload.responses.find(\n        item => item.name === 'ton_addr'\n    ) as TonAddressItemReply;\n\n    const tonProfItem: TonProofItemReply = connectResponse.payload.responses.find(\n        item => item.name === 'ton_proof'\n    ) as TonProofItemReply;\n\n    if (!tonAddrItem) {\n        return undefined\n    }\n\n    return {\n        NameSpaceKeyTON: {\n            chains: [tonAddrItem.network],\n            accounts: [],\n            methods: connectResponse.payload.wallet.features?.ton,\n            payload: {\n                tonAccount: {\n                    address: tonAddrItem.address,\n                    chain: tonAddrItem.network,\n                    walletStateInit: tonAddrItem.walletStateInit,\n                    publicKey: tonAddrItem.publicKey\n                },\n                tonProof: tonProfItem\n            }\n        }\n    }\n}*/\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = void 0;\nconst storageconstants_1 = require(\"./storageconstants\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst utils_1 = require(\"../utils/utils\");\nconst utils_2 = require(\"../utils\");\nconst log = __importStar(require(\"../utils/log\"));\nconst utils_3 = require(\"../utils\");\nconst crypto_js_1 = require(\"crypto-js\");\nclass Storage {\n    constructor(subKey, beforeKey = undefined) {\n        const localStorage = (0, utils_1.resolveLocalStorage)();\n        // 0. check and upgrade beforeKey\n        // log.logDebug('------ update before cache ------')\n        // if (beforeKey) {\n        // this.checkAndUpgradeCache(beforeKey, subKey)\n        // }\n        // 1. load data from local storage\n        this.storeKey = '';\n        this.cipherIV = '';\n        this.subKey = subKey;\n        log.logDebug('--------get current local storage --------');\n        log.logDebug(localStorage);\n        const cacheStr = localStorage.getItem(Storage.cacheKey + subKey);\n        if (typeof cacheStr === \"undefined\" || cacheStr === null) {\n            log.logDebug(\"with no cache\");\n            this.cache = {};\n            return;\n        }\n        log.logDebug(cacheStr);\n        if ((cacheStr === null || cacheStr === void 0 ? void 0 : cacheStr.length) > 0) {\n            var cacheObj = (0, utils_2.safeJsonParse)(cacheStr);\n            this.cache = cacheObj;\n        }\n        log.logDebug(`get cache obj: ${this.cache}`);\n        if (typeof this.cache === 'undefined' || this.cache == null) {\n            this.cache = {};\n        }\n    }\n    checkAndUpgradeCache(fromCacheKey, toCacheKey) {\n        if (fromCacheKey && fromCacheKey.length > 0 && toCacheKey && toCacheKey.length > 0) {\n            // 1. get all infos from from-cache-key\n            log.logDebug('--------get current local storage --------');\n            log.logDebug(localStorage);\n            const cacheStr = localStorage.getItem(Storage.cacheKey + fromCacheKey);\n            if (typeof cacheStr === \"undefined\" || cacheStr === null) {\n                log.logDebug(\"no pre cache content\");\n                return;\n            }\n            log.logDebug(cacheStr);\n            if ((cacheStr === null || cacheStr === void 0 ? void 0 : cacheStr.length) > 0) {\n                // 2. save to to-cache-key\n                log.logDebug(\"write in cache content: \", fromCacheKey, '->', toCacheKey);\n                localStorage.setItem(Storage.cacheKey + toCacheKey, cacheStr);\n                // 3. clean from item\n                log.logDebug(\"clean in cache content: \", fromCacheKey);\n                localStorage.removeItem(Storage.cacheKey + fromCacheKey);\n            }\n        }\n        else {\n            log.logDebug('no pre cache key:', fromCacheKey);\n        }\n    }\n    saveContent(content, key, id = '-') {\n        let item = {\n            id: id,\n            timestamp: Date.now().toString(),\n            content: content\n        };\n        this.saveItem(item, key);\n    }\n    saveItem(item, key) {\n        let localKey = Storage.cacheKey + this.subKey;\n        const localStorage = (0, utils_1.resolveLocalStorage)();\n        log.logDebug(this.cache);\n        log.logDebug(`get cache obj: ${this.cache}, ${key}, ${item}`);\n        this.cache[key] = item;\n        let totalCacheStr = (0, utils_2.safeJsonStringify)(this.cache);\n        log.logDebug(`STORAGE: ${key} @ ${this.cache}`);\n        localStorage.setItem(localKey, totalCacheStr);\n    }\n    getItem(key) {\n        log.logDebug(`STORAGE >> getItem: ${key} @ ${this.cache}`);\n        return this.cache[key];\n    }\n    getCachedPBKDF2InfoKey() {\n        var _a, _b, _c, _d;\n        const pwLen = 32;\n        const saltLen = 24;\n        if (this.storeKey.length > 0 && ((_a = this.cipherIV) === null || _a === void 0 ? void 0 : _a.length) > 0) {\n            return {\n                pw: this.storeKey,\n                iv: this.cipherIV\n            };\n        }\n        let salt = (_b = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGER_CRYPTO_SALT)) === null || _b === void 0 ? void 0 : _b.content;\n        if (!salt) {\n            salt = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(saltLen));\n            this.saveContent(salt, storageconstants_1.OKXCONNECTOR_STORAGER_CRYPTO_SALT);\n        }\n        let pw = (_c = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD)) === null || _c === void 0 ? void 0 : _c.content;\n        if (!pw) {\n            pw = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(pwLen));\n            this.saveContent(pw, storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD);\n        }\n        let cipherIV = (_d = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV)) === null || _d === void 0 ? void 0 : _d.content;\n        if (!cipherIV) {\n            // let ivBuffer = Buffer.from(nacl.randomBytes(16))\n            let ivBuffer = tweetnacl_1.default.randomBytes(16);\n            cipherIV = (0, utils_1.toHexString)(ivBuffer);\n            this.saveContent(cipherIV, storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV);\n        }\n        this.cipherIV = cipherIV;\n        this.storeKey = (0, crypto_js_1.PBKDF2)(pw, salt, { iterations: 10 }).toString();\n        return {\n            pw: this.storeKey,\n            iv: this.cipherIV\n        };\n    }\n    encryptStoreMsg(msg, key) {\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg start ${Date.now()}`);\n        let storeInfo = this.getCachedPBKDF2InfoKey();\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg mid ${Date.now()}`);\n        var result = crypto_js_1.AES.encrypt(msg, storeInfo.pw).toString();\n        this.saveContent(result, key);\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg end ${Date.now()}`);\n    }\n    getAndDecrypt(key) {\n        (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt start ${Date.now()}`);\n        let item = this.getItem(key);\n        if (item && item.content) {\n            let storeInfo = this.getCachedPBKDF2InfoKey();\n            (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt mid ${Date.now()}`);\n            let result = crypto_js_1.AES.decrypt(item.content, storeInfo.pw).toString(crypto_js_1.enc.Utf8);\n            (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt end ${Date.now()}`);\n            return result;\n        }\n        return null;\n    }\n    clearCache(key = undefined) {\n        if (key === undefined) {\n            // clean all\n            const localStorage = (0, utils_1.resolveLocalStorage)();\n            this.cache = {};\n            let localKey = Storage.cacheKey + this.subKey;\n            localStorage.setItem(localKey, '');\n        }\n        else {\n            let localKey = Storage.cacheKey + this.subKey;\n            const localStorage = (0, utils_1.resolveLocalStorage)();\n            log.logDebug(this.cache);\n            this.cache[key] = null;\n            let totalCacheStr = (0, utils_2.safeJsonStringify)(this.cache);\n            log.logDebug(`STORAGE: clean key ${key} @ ${this.cache}`);\n            localStorage.setItem(localKey, totalCacheStr);\n        }\n    }\n}\nexports.Storage = Storage;\nStorage.cacheKey = 'OKXStorageKey';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCONNECTOR_STORAGE_PROTOCOL_CACHE = exports.OKXCONNECTOR_STORAGE_CIPHER_METHOD = exports.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV = exports.OKXCONNECTOR_STORAGER_CRYPTO_SALT = exports.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD = exports.OKXCONNECTOR_TON_KEY = exports.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE = exports.OKXCONNECTOR_TOKEN_CACHE = exports.OKXCONNECTOR_JWT_KEY = exports.OKXCONNECTOR_SESSION_PREFIX_KEY = exports.OKXCONNECTOR_CRYPTO_KEY = exports.OKXCONNECTOR_CACHE_KEY_DAPP = exports.OKXCONNECTOR_CACHE_KEY = void 0;\nexports.OKXCONNECTOR_CACHE_KEY = \"ck\";\nexports.OKXCONNECTOR_CACHE_KEY_DAPP = \"ck_dapp\";\nexports.OKXCONNECTOR_CRYPTO_KEY = \"cck_k\";\nexports.OKXCONNECTOR_SESSION_PREFIX_KEY = \"cspk_\";\nexports.OKXCONNECTOR_JWT_KEY = \"cjk_k\";\nexports.OKXCONNECTOR_TOKEN_CACHE = \"ct\";\nexports.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE = \"csp\";\nexports.OKXCONNECTOR_TON_KEY = \"OKXStorage_ctc\";\nexports.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD = \"scp\";\nexports.OKXCONNECTOR_STORAGER_CRYPTO_SALT = \"scs\";\nexports.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV = \"scpc\";\nexports.OKXCONNECTOR_STORAGE_CIPHER_METHOD = \"aes-256-cbc\";\nexports.OKXCONNECTOR_STORAGE_PROTOCOL_CACHE = 'okx_connect_split_cache_key';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnectionManagerEvent = exports.WalletConnectionManagerTopicInfoCacheKey = void 0;\nexports.WalletConnectionManagerTopicInfoCacheKey = \"wcmtic\";\nexports.WalletConnectionManagerEvent = {\n    RECEIVE_REQUEST: \"payload\"\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnectionManager = void 0;\nconst connect_1 = require(\"./connect\");\nconst commands_1 = require(\"./commands\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst jwtconstants_1 = require(\"./jwtconstants\");\nconst constants_1 = require(\"./constants\");\nconst walletConnectionConstants_1 = require(\"./walletConnectionConstants\");\nconst connectionSplitPackages_1 = require(\"./connectionSplitPackages\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils/utils\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst jwt_1 = require(\"./jwt\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst utils_2 = require(\"../utils\");\nclass WalletConnectionManager {\n    constructor() {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.communicateEvents = new eventemitter3_1.EventEmitter();\n        this.splitManager = new connectionSplitPackages_1.ConnectionSplitPackages('wallet');\n        log.logDebug('connect manager construct');\n        // local storage\n        this.connectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n        this.jwtKeyPair = this.getCachedJWTKeyPair();\n        this.saveJWTKeyPair(this.jwtKeyPair);\n        // wss connection\n        this.connector = new connect_1.OKXWalletConnector(constants_1.OKXCONNECTOR_WS_URL_1);\n        this.packageId = Date.now();\n        // connection state\n        this.sessionCryptoInfoMap = new Map();\n        // log.logDebug(`this.connectedWalletPK  constructor   ${this.connectedWalletPK}`)\n        this.inLogin = false;\n        this.isLogined = false;\n    }\n    refreshPackageId(offset = 0) {\n        let nowDate = Date.now() + offset;\n        if (nowDate == this.packageId) {\n            this.packageId = nowDate + 1;\n        }\n        this.packageId = nowDate;\n    }\n    saveCryptoKeyPair(topicId, keyPair) {\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(keyPair);\n        // encrypt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_CRYPTO_KEY + topicId);\n    }\n    getCachedCryptoKeyPair(topicId) {\n        // decrypt kp\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_CRYPTO_KEY + topicId);\n        const content = kp;\n        if (typeof content == 'string') {\n            log.logDebug('get cached crypto key:');\n            log.logDebug(content);\n            let keyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            return keyPairInfo;\n        }\n        else {\n            this.connectStorage.clearCache();\n        }\n        return null;\n    }\n    saveJWTKeyPair(keyPair) {\n        var strkeyPair = {\n            publicKey: (0, utils_1.toHexString)(keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(keyPair.secretKey)\n        };\n        log.logDebug('save jwt kp');\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(strkeyPair);\n        log.logDebug(cacheInfo);\n        // encrypt jwt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        log.logDebug('after save jwt kp');\n    }\n    getCachedJWTKeyPair() {\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            // TODO: decrypt jwt kp\n            log.logDebug('get cached jwt kp:');\n            log.logDebug(content);\n            let strKeyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            log.logDebug('save jwt kp');\n            log.logDebug(strKeyPairInfo);\n            var keyPair = {\n                publicKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.publicKey),\n                secretKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.secretKey)\n            };\n            return keyPair;\n        }\n        else {\n            return (0, jwt_1.generateKeyPair)();\n        }\n    }\n    isTopicPublicKeyExist(topicId) {\n        log.logDebug(`isTopicPublicKeyExist  ===> ${topicId}`);\n        return this.sessionCryptoInfoMap.get(topicId);\n    }\n    makeJWT(timestampStr) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, jwt_1.signJWT)(timestampStr, jwtconstants_1.OKXCONNECTOR_JWT_WALLET_SIDE, jwtconstants_1.OKXCONNECTOR_JWT_TTL, // 24h\n            this.jwtKeyPair);\n        });\n    }\n    parseInternalMsg(internalMsg) {\n        try {\n            let internalObj = (0, safejson_1.safeJsonParse)(internalMsg);\n            let origin = internalObj['ivur-igbfft-ptjip'];\n            if (origin && origin.length > 0) {\n                let originContent = (0, utils_2.base64decode)(origin, true);\n                return originContent.toString();\n            }\n        }\n        catch (error) {\n            log.logError('parse internal msg', error);\n        }\n    }\n    updateClientId(topic, clientId) {\n        let sessionInfo = this.sessionCryptoInfoMap.get(topic);\n        (0, log_1.logDebug)('updateClientId', sessionInfo, topic, clientId);\n        if (sessionInfo && clientId && clientId.length > 0) {\n            if (sessionInfo.cid) {\n                // check\n                let lastCheck = (0, utils_1.getLastSixMd5Hash)(clientId);\n                if (sessionInfo.cid == lastCheck) {\n                    sessionInfo.dappPublicKey = clientId;\n                }\n                else {\n                    log.logError('cid check failed', sessionInfo, topic, clientId);\n                }\n            }\n            else {\n                sessionInfo.dappPublicKey = clientId;\n            }\n            // \n            this.syncCacheSessionInfo();\n        }\n        return false;\n    }\n    parsePackage(topic_1, input_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, input, ignoreACK = false) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s;\n            this.events.emit(input.id, input);\n            // emit event\n            let sessionInfo = this.sessionCryptoInfoMap.get(topic);\n            log.logDebug('get sessionInfo for decrypt topic:', topic);\n            log.logDebug('get sessionInfo for decrypt:', input.id, topic, sessionInfo, this.sessionCryptoInfoMap);\n            let ignoreReceive = false;\n            if (sessionInfo && input.params.data) {\n                if ((_a = input.params.data) === null || _a === void 0 ? void 0 : _a.message) {\n                    // try parse internal message\n                    if ((_b = input.params.data) === null || _b === void 0 ? void 0 : _b.isInternalData) {\n                        let inner_message = (_c = input.params.data) === null || _c === void 0 ? void 0 : _c.message;\n                        let inner_topic = (_d = input.params.data) === null || _d === void 0 ? void 0 : _d.topic;\n                        let originContent = this.parseInternalMsg(inner_message);\n                        (0, log_1.logDebug)('parse internal origin: ', originContent);\n                        if (originContent && originContent.length > 0) {\n                            this.communicateEvents.emit(\"origin\", originContent, inner_topic);\n                        }\n                    }\n                    else {\n                        // try parse message base64\n                        try {\n                            let message = (_e = input.params.data) === null || _e === void 0 ? void 0 : _e.message;\n                            if (message.trimStart().startsWith('{')) {\n                                // 判断是否是分包数据\n                                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(message);\n                                if (msgPlayloadObject) {\n                                    (0, log_1.logDebug)('parse split msg object: ', msgPlayloadObject);\n                                    // 屏蔽后续的receive逻辑\n                                    ignoreReceive = true;\n                                    let msgObject = {\n                                        topicId: (_g = (_f = input.params) === null || _f === void 0 ? void 0 : _f.data) === null || _g === void 0 ? void 0 : _g.topic,\n                                        messageId: (_j = (_h = input.params) === null || _h === void 0 ? void 0 : _h.data) === null || _j === void 0 ? void 0 : _j.messageId,\n                                        messageObject: msgPlayloadObject,\n                                        publishedAt: (_l = (_k = input.params) === null || _k === void 0 ? void 0 : _k.data) === null || _l === void 0 ? void 0 : _l.publishedAt,\n                                    };\n                                    let checkResult = yield this.splitManager.onReceivedPackageCheck(msgObject);\n                                    if (checkResult.completeMessageIdList) {\n                                        checkResult.completeMessageIdList.forEach((msgId) => __awaiter(this, void 0, void 0, function* () {\n                                            // 发送批量receive\n                                            this.refreshPackageId();\n                                            yield this.sendReceive(this.packageId.toString(), msgId, topic);\n                                        }));\n                                    }\n                                    // 抛出finalmessage\n                                    if (checkResult.finalMessage) {\n                                        let message = sessionInfo.crypto.decryptWallet(checkResult.finalMessage, sessionInfo.dappPublicKey);\n                                        (0, log_1.logDebug)('<<< receive msg from split:', topic, message);\n                                        this.communicateEvents.emit(topic, message);\n                                    }\n                                }\n                                else {\n                                    let messageObj = (0, safejson_1.safeJsonParse)(message);\n                                    if (messageObj.method) {\n                                        if (messageObj.method == 'session_info') {\n                                            let sessionInfoString = messageObj.params.sessionInfo;\n                                            let base64Content = (0, utils_2.base64decode)(sessionInfoString, false);\n                                            (0, log_1.logDebug)(\"wallet connection manager requset base64Content:\", base64Content);\n                                            (0, log_1.logDebug)(\"base64Content:\" + base64Content);\n                                            let inner_connection = base64Content.toObject();\n                                            this.updateClientId(topic, inner_connection.clientId);\n                                        }\n                                        (0, log_1.logDebug)('<<< parse raw msg:', topic, messageObj);\n                                        this.communicateEvents.emit(topic, message);\n                                    }\n                                }\n                            }\n                            else {\n                                let message = sessionInfo.crypto.decryptWallet((_m = input.params.data) === null || _m === void 0 ? void 0 : _m.message, sessionInfo.dappPublicKey);\n                                (0, log_1.logDebug)('<<< receive msg:', topic, message);\n                                this.communicateEvents.emit(topic, message);\n                            }\n                        }\n                        catch (error) {\n                            let message = sessionInfo.crypto.decryptWallet((_o = input.params.data) === null || _o === void 0 ? void 0 : _o.message, sessionInfo.dappPublicKey);\n                            (0, log_1.logDebug)('<<< receive msg:', topic, message);\n                            this.communicateEvents.emit(topic, message);\n                        }\n                    }\n                }\n                else {\n                }\n            }\n            // send back ACK\n            if (!ignoreACK) {\n                yield this.sendACK(input.id, true);\n                if (topic && !ignoreReceive) {\n                    let inputObj = input;\n                    if ((_q = (_p = inputObj.params) === null || _p === void 0 ? void 0 : _p.data) === null || _q === void 0 ? void 0 : _q.messageId) {\n                        this.refreshPackageId();\n                        yield this.sendReceive(this.packageId.toString(), (_s = (_r = inputObj.params) === null || _r === void 0 ? void 0 : _r.data) === null || _s === void 0 ? void 0 : _s.messageId, topic);\n                    }\n                }\n            }\n        });\n    }\n    recovrySessionInfoFromCache() {\n        // get topic ids and keys from session\n        // WalletConnectionCryptoCacheMap\n        // {[topicId]: {cryptoKeypair: {publicKey:string, secretKey:string}, dappPublicKey:clientId}}\n        let jsonStr = this.connectStorage.getAndDecrypt(walletConnectionConstants_1.WalletConnectionManagerTopicInfoCacheKey);\n        log.logDebug('get cached sessionInfos:', jsonStr);\n        if (jsonStr) {\n            let cacheMap = (0, safejson_1.safeJsonParse)(jsonStr);\n            for (let topicId in cacheMap) {\n                let topicItem = cacheMap[topicId];\n                log.logDebug('make topicItem:', topicItem);\n                let cryptoItem = {\n                    topic: topicId,\n                    crypto: new crypto_1.SessionCrypto({\n                        publicKey: topicItem.cryptoKeyPair.publicKey,\n                        secretKey: topicItem.cryptoKeyPair.secretKey\n                    }),\n                    dappPublicKey: topicItem.dappPublicKey,\n                    cid: topicItem.cid\n                };\n                this.sessionCryptoInfoMap.set(topicId, cryptoItem);\n            }\n        }\n        log.logDebug('get cached sessionInfos map:', this.sessionCryptoInfoMap);\n    }\n    syncCacheSessionInfo() {\n        let cacheMap = {};\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            log.logDebug('for each Keys', topicId);\n            if (cryptoItem) {\n                cacheMap[topicId] = {\n                    cryptoKeyPair: cryptoItem.crypto.stringifyKeypair(),\n                    dappPublicKey: cryptoItem.dappPublicKey,\n                    cid: cryptoItem.cid\n                };\n            }\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(cacheMap);\n        log.logDebug('sync cache sessionInfos:', jsonData);\n        this.connectStorage.encryptStoreMsg(jsonData, walletConnectionConstants_1.WalletConnectionManagerTopicInfoCacheKey);\n    }\n    cacheSessionInfo(topic, sessionInfo, sync = true) {\n        let dappPublicKey = sessionInfo.dappPublicKey;\n        // 1. search dapp public related topic ids\n        let duplicatedTopics = [];\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            log.logDebug('for each Keys', topicId);\n            if (cryptoItem.dappPublicKey == dappPublicKey) {\n                log.logDebug('duplicated dapp public key:', topicId, dappPublicKey);\n                duplicatedTopics.push(topicId);\n            }\n        }\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            if (duplicatedTopics.includes(topicId)) {\n                this.sessionCryptoInfoMap.delete(topicId);\n            }\n        }\n        // discard useless topics\n        log.logDebug('cleaned connect session cache:', this.sessionCryptoInfoMap);\n        // 2. remove previous connected topic ids\n        // 3. write in current topic\n        this.sessionCryptoInfoMap.set(topic, sessionInfo);\n        // TODO: search domain info and then delete \n        log.logDebug('cache sessionInfo:', topic, sessionInfo, this.sessionCryptoInfoMap);\n        if (sync) {\n            this.syncCacheSessionInfo();\n        }\n        return duplicatedTopics;\n    }\n    updateProtocolVersion(topic, protocolVersion) {\n        this.splitManager.updateTopicSenderVersion(topic, protocolVersion);\n    }\n    // add and subscribe topic\n    appendTopic(topic, sessionPublicKey, cid) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('4.1. get append Topic:', topic);\n            // 1. check if connected\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.isLogined) {\n                    var error = new Error();\n                    error.message = \"connection is not logined\";\n                    error.name = \"append error\";\n                    // throw error\n                    reject(error);\n                    return;\n                }\n                // 2. subscribe topic and session public key\n                let cryptoItem = {\n                    topic: topic,\n                    crypto: new crypto_1.SessionCrypto(),\n                    dappPublicKey: sessionPublicKey ? sessionPublicKey : \"\",\n                    cid: cid\n                };\n                let duplicatedTopics = this.cacheSessionInfo(topic, cryptoItem, false);\n                // make sure cache session info before subscribe\n                yield this.subscribeTopics(Array.from([topic]));\n                this.refreshPackageId();\n                log.logDebug(`5. subscribe callback then fetch append message: ${this.packageId}, ${topic}`);\n                log.reportLog(`5. subscribe callback then fetch append message`);\n                const timeF = new Date().getTime();\n                (0, log_1.logDebug)(\"Append --subscribe callback->\", timeF - this.timeLog);\n                resolve(duplicatedTopics);\n            }));\n        });\n    }\n    confirmAppendingTopics() {\n        this.syncCacheSessionInfo();\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.timeLog = new Date().getTime();\n            (0, log_1.logDebug)(\"[Wallet] ConnectTime---enter->\", this.timeLog);\n            log.reportLog('wallet connect connect called');\n            // 0. get cached topics and infos\n            let timestampStr = Date.now().toString();\n            var jwtToken = yield this.makeJWT(timestampStr);\n            log.logDebug(`generate jwt token: ${jwtToken}`);\n            this.connectStorage.saveContent(jwtToken, 'jwt');\n            this.recovrySessionInfoFromCache();\n            // 1.\n            return new Promise((resolve, reject) => {\n                // 1. when websocket opened\n                this.inLogin = true;\n                this.connector.onOpen(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug(`1. connector on open`);\n                    log.reportLog('1. wallet connect connect on open');\n                    const timeOne = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---open->\", timeOne - this.timeLog);\n                    //2. send jwt to login\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when login');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // throw error\n                            reject(error);\n                        }\n                        else {\n                            this.isLogined = true;\n                            resolve();\n                            // 3. subscribe cached topics\n                            log.logDebug('3. subscribe cached topics', this.sessionCryptoInfoMap);\n                            log.reportLog('3. wallet connect connect subscribe cached topics');\n                            if (this.sessionCryptoInfoMap.size > 0) {\n                                yield this.subscribeTopics(Array.from(this.sessionCryptoInfoMap.keys()));\n                            }\n                        }\n                    }));\n                    log.logDebug(`2. login called`);\n                    log.reportLog('2. wallet connect login called');\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        return yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_LOGIN,\n                        params: {\n                            token: jwtToken\n                        }\n                    });\n                }));\n                this.connector.connect().catch((err) => {\n                    (0, log_1.logDebug)('WalletConnectionManager connect error', err);\n                    reject(err);\n                });\n                // add callback\n                this.connector.addPackageParse((event) => {\n                    var _a, _b;\n                    log.logDebug(`connect: parse package`);\n                    log.logDebug(event);\n                    if (!(\"params\" in event) || !(\"data\" in event[\"params\"])) {\n                        this.parsePackage(\"\", event, true);\n                        return;\n                    }\n                    // ignore receive echo\n                    if ((_a = event.params.data) === null || _a === void 0 ? void 0 : _a.topic) {\n                        this.parsePackage((_b = event.params.data) === null || _b === void 0 ? void 0 : _b.topic, event, event.method === commands_1.CONNECT_METHOD_RECEIVE);\n                    }\n                });\n                // this.connector.addListener(safeJsonStringify(event), (rawMsg: string)=> {\n                //    rawMsg = rawMsg.replace(/'/g, '\"')\n                //    log.logDebug(`addListener ===> ${rawMsg}`)\n                //    if (typeof rawMsg !== 'undefined') {\n                //       var msgObj = safeJsonParse(rawMsg)\n                //       var msg = msgObj.message\n                //       let crypto = \n                //       var result = this.crypto.decrypt(msg, this.connectedWalletPK)\n                //       log.logDebug(`addListener ===> ${result}`)\n                //       return result\n                //    }\n                //    return undefined\n                // }, ()=>{\n                //    // emit success\n                // }, ()=>{\n                //    // emit fail\n                // })\n            });\n        });\n    }\n    // 获取对应topic session下的钱包公钥\n    // 在返回approve时需要填充到clientId字段中\n    getSessionPublicKey(topicId) {\n        if (this.isTopicPublicKeyExist(topicId)) {\n            let item = this.sessionCryptoInfoMap.get(topicId);\n            if (item) {\n                return (0, utils_1.toHexString)(item.crypto.keyPair.publicKey);\n            }\n        }\n        return undefined;\n    }\n    getCurrentCachedTopicIdList() {\n        return Array.from(this.sessionCryptoInfoMap.keys());\n    }\n    disconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            yield this.connector.disconnect();\n            //clean cached topic\n            //如果是恢复连接，就不清理解密public key\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            if (!fromRestore) {\n                this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n            }\n        });\n    }\n    sendRaw(msg, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (topic) {\n                yield this.sendMsg(topic, msg, constants_1.OKXCONNECTOR_MESSAGE_TTL);\n            }\n        });\n    }\n    sendMsg(topic, message, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (message) {\n                this.refreshPackageId();\n                const payload = {\n                    id: this.packageId.toString(),\n                    method: commands_1.CONNECT_METHOD_PUBLISH,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    params: {\n                        message: {\n                            topic: topic,\n                            message: message,\n                            ttl: ttl\n                        }\n                    } // crypted\n                };\n                this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                    // ack\n                    if (rsp && rsp.error) {\n                        log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                    }\n                    else if (rsp && !rsp.error) {\n                        log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                    }\n                }));\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    send(topic_1, msg_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, msg, needPublicKey = false, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL, useRaw = false) {\n            var _a, _b;\n            // make send msg payload\n            log.logDebug(`message send =====> ${msg}`);\n            if (!this.isTopicPublicKeyExist(topic)) {\n                // channel not ready\n                throw new Error('connection not finish');\n            }\n            let connectedDappPK = (_a = this.sessionCryptoInfoMap.get(topic)) === null || _a === void 0 ? void 0 : _a.dappPublicKey;\n            let cryptoObject = (_b = this.sessionCryptoInfoMap.get(topic)) === null || _b === void 0 ? void 0 : _b.crypto;\n            let messageObj = undefined;\n            if (useRaw) {\n                messageObj = {\n                    message: msg,\n                };\n            }\n            let useCrypto = false;\n            if (cryptoObject && connectedDappPK && !useRaw) {\n                let message = cryptoObject.encryptWallet(msg, connectedDappPK);\n                useCrypto = true;\n                messageObj = {\n                    message: message,\n                };\n            }\n            if (messageObj) {\n                if (needPublicKey && cryptoObject) {\n                    messageObj.clientId = (0, utils_1.toHexString)(cryptoObject.keyPair.publicKey);\n                    // let privateKey = toHexString(cryptoObject.keyPair.secretKey)\n                    // log.logDebug(`message send use dapp publicKey =====> ${connectedDappPK}`)\n                    // log.logDebug(`message send use publicKey =====> ${messageObj.clientId}`)\n                    // log.logDebug(`message send use secretKey =====> ${privateKey}`)\n                }\n                let messageStr = (0, safejson_1.safeJsonStringify)(messageObj);\n                if (!useRaw && useCrypto) {\n                    yield this.splitManager.sendSplitPackages(topic, messageStr, this.sendMsg.bind(this), this.sendRaw.bind(this));\n                }\n                else {\n                    yield this.sendMsg(topic, messageStr, ttl);\n                }\n            }\n        });\n    }\n    sendACK(msgId_1, success_1) {\n        return __awaiter(this, arguments, void 0, function* (msgId, success, reason = undefined) {\n            if (success === true) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    result: true\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n            else if (reason) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    error: {\n                        code: reason.code, //int\n                        message: reason.message\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    // send receive\n    sendReceive(msgId, messageId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECEIVE,\n                params: {\n                    data: {\n                        messageId: messageId,\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendUnsubscribe(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: make disconnect payload\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), {\n                id: this.packageId.toString(),\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_UNSUB,\n                params: {\n                    topic: topic\n                }\n            });\n            // remove topicId\n            this.sessionCryptoInfoMap.delete(topic);\n            this.syncCacheSessionInfo();\n        });\n    }\n    // send receive\n    // 1. fetch all \n    // 2. send back receive\n    // 3. check has more, if so, repeat from 1st step\n    sendFetchAndConsumeMessages(msgId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(msgId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic == topic) {\n                                let messageId = msg.messageId;\n                                yield this.connector.getMsgPayloadFromHistory(msg);\n                                // send receive command to relay server\n                                this.refreshPackageId();\n                                yield this.sendReceive(this.packageId.toString(), messageId, topic);\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_FETCHMSG,\n                params: {\n                    data: {\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendBatchFetchAndConsumeMessages(packageId, topicIdList) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(packageId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic) {\n                                // send receive command to relay server\n                                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(msg.message);\n                                if (msgPlayloadObject) {\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                }\n                                else {\n                                    let messageId = msg.messageId;\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                    this.refreshPackageId(i);\n                                    yield this.sendReceive(this.packageId.toString(), messageId, msg.topic);\n                                }\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendBatchFetchAndConsumeMessages(this.packageId.toString(), topicIdList);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            log.reportLog('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: packageId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_BATCH_FETCHMSG,\n                params: {\n                    topics: topicIdList,\n                    withInternalData: true\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                yield this.connector.connect();\n            }), payload);\n        });\n    }\n    cleanCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.connectStorage.clearCache();\n        });\n    }\n    saveSessionContent(key, data) {\n        if (!data) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(data);\n        this.connectStorage.encryptStoreMsg(jsonData, storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n    }\n    getSessionContent(key) {\n        let jsonStr = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        if (jsonStr) {\n            let object = (0, safejson_1.safeJsonParse)(jsonStr);\n            return object;\n        }\n        return undefined;\n    }\n    // subscribe then fetch messages for each topics\n    subscribeTopics(topicIdList) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)(\"4. topicid list\", topicIdList);\n            log.reportLog(\"4. topicid list\");\n            this.refreshPackageId();\n            const timeF = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let finishCount = 0;\n                //3. send subscribe\n                for (let idx = 0; idx < topicIdList.length; ++idx) {\n                    let topicId = topicIdList[idx];\n                    this.refreshPackageId(idx);\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when subscribe');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // reject(error)\n                            finishCount += 1;\n                            if (finishCount == topicIdList.length) {\n                                resolve();\n                            }\n                        }\n                        this.refreshPackageId(idx);\n                        const timeF = new Date().getTime();\n                        (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n                        finishCount += 1;\n                        if (finishCount == topicIdList.length) {\n                            // 4. fetch messages\n                            log.logDebug(`5. send fetch msg: ${this.packageId}, ${topicId}`);\n                            yield this.sendBatchFetchAndConsumeMessages(this.packageId.toString(), topicIdList);\n                            // 5. split manager resend\n                            yield this.splitManager.init(this.sendRaw.bind(this));\n                            resolve();\n                        }\n                    }));\n                    log.logDebug(`3. login callback then send subscribe: ${this.packageId}, ${topicId}`);\n                    log.reportLog('3. login callback then send subscribe');\n                    const timeTh = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---login callback->\", timeTh - this.timeLog);\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        return yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_SUB,\n                        params: {\n                            topic: topicId\n                        }\n                    });\n                }\n            }));\n        });\n    }\n}\nexports.WalletConnectionManager = WalletConnectionManager;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AppwalletConnector = void 0;\nconst ws_connector_1 = require(\"./ws-connector\");\nconst iconnector_1 = require(\"./iconnector\");\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../protocol/constants\");\nclass AppwalletConnector extends ws_connector_1.WsConnector {\n    static getConnector() {\n        return new AppwalletConnector();\n    }\n    constructor() {\n        super();\n        this.walletName = 'OKX App';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectApp';\n    }\n    getTag() {\n        return iconnector_1.OKX_APP_WALLET;\n    }\n    openWallet(engineConnectInfo) {\n        var _a;\n        if (engineConnectInfo && engineConnectInfo.connectRequest) {\n            let connectRequest = engineConnectInfo.connectRequest;\n            (0, utils_1.logDebug)(`appwallet-connector openwallet before useSHortLink engineConnectInfo.connectRequest JSON ${JSON.stringify(engineConnectInfo)}`);\n            if ((0, utils_1.useShortLink)()) {\n                let shortUniversalLink = (0, utils_1.getOKXLink)(connectRequest);\n                (0, utils_1.openOKXUniversalLink)(shortUniversalLink);\n            }\n            else {\n                (0, utils_1.logDebug)(`appwallet-connector openwallet else connectRequest ${connectRequest}`);\n                let appConnectEncodeParams = (0, utils_1.encodeConnectParams)(Object.assign(Object.assign({}, connectRequest), { redirect: (_a = engineConnectInfo.redirect) !== null && _a !== void 0 ? _a : \"none\" }));\n                let appDeepLink = (0, utils_1.getAppWalletDeepLink)(appConnectEncodeParams);\n                (0, utils_1.openOKXDeeplinkWithFallback)(appDeepLink);\n            }\n        }\n        else {\n            if ((0, utils_1.isOS)('android')) {\n                (0, utils_1.openDeeplinkWithFallback)(constants_1.stackDeepLink, () => { });\n            }\n            else {\n                (0, utils_1.openLinkBlank)(constants_1.standardUniversalLink);\n            }\n        }\n    }\n}\nexports.AppwalletConnector = AppwalletConnector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_TG_WALLET = exports.OKX_APP_WALLET = exports.OKX_INJECT_WALLET = void 0;\nexports.OKX_INJECT_WALLET = \"okx_inject_wallet\";\nexports.OKX_APP_WALLET = \"okx_app_wallet\";\nexports.OKX_TG_WALLET = \"okx_tg_wallet\";\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OkxwalletInjectConnector = exports.WsConnector = exports.TgwalletConnector = exports.InjectConnector = exports.OKX_INJECT_WALLET = exports.OKX_APP_WALLET = exports.OKX_TG_WALLET = exports.AppwalletConnector = void 0;\nvar appwallet_connector_1 = require(\"./appwallet-connector\");\nObject.defineProperty(exports, \"AppwalletConnector\", { enumerable: true, get: function () { return appwallet_connector_1.AppwalletConnector; } });\nvar iconnector_1 = require(\"./iconnector\");\nObject.defineProperty(exports, \"OKX_TG_WALLET\", { enumerable: true, get: function () { return iconnector_1.OKX_TG_WALLET; } });\nObject.defineProperty(exports, \"OKX_APP_WALLET\", { enumerable: true, get: function () { return iconnector_1.OKX_APP_WALLET; } });\nObject.defineProperty(exports, \"OKX_INJECT_WALLET\", { enumerable: true, get: function () { return iconnector_1.OKX_INJECT_WALLET; } });\nvar inject_connector_1 = require(\"./inject-connector\");\nObject.defineProperty(exports, \"InjectConnector\", { enumerable: true, get: function () { return inject_connector_1.InjectConnector; } });\nvar tgwallet_connector_1 = require(\"./tgwallet-connector\");\nObject.defineProperty(exports, \"TgwalletConnector\", { enumerable: true, get: function () { return tgwallet_connector_1.TgwalletConnector; } });\nvar ws_connector_1 = require(\"./ws-connector\");\nObject.defineProperty(exports, \"WsConnector\", { enumerable: true, get: function () { return ws_connector_1.WsConnector; } });\nvar okxwallet_inject_connector_1 = require(\"./okxwallet-inject-connector\");\nObject.defineProperty(exports, \"OkxwalletInjectConnector\", { enumerable: true, get: function () { return okxwallet_inject_connector_1.OkxwalletInjectConnector; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InjectConnector = void 0;\nconst protocol_1 = require(\"../protocol\");\nconst utils_1 = require(\"../utils\");\nconst iconnector_1 = require(\"./iconnector\");\nconst SolProvider_1 = require(\"../inject/provider/SolProvider\");\nconst wallet_info_1 = require(\"../protocol/connect/wallet-info\");\nconst AptosProvider_1 = require(\"../inject/provider/AptosProvider\");\nconst media_1 = require(\"../utils/media\");\nconst TONProvider_1 = require(\"../inject/provider/TONProvider\");\nconst inject_1 = require(\"../inject\");\nconst sui_provider_1 = require(\"../inject/provider/sui-provider\");\nconst utils_2 = require(\"../utils/utils\");\nconst sessionUtils_1 = require(\"../connect/sessionUtils\");\nclass InjectConnector {\n    constructor() {\n        this.disconnectListener = [];\n        this.providerMap = new Map();\n        this.accountChangedEVMHandler = null;\n        this.accountChangedSolanaPublicKeyHandler = null;\n        this.accountChangedTONHandler = null;\n        this.disconnectHandler = null;\n        this.walletName = \"\";\n        this.walletNameKey = '';\n        this.enable = true;\n        this.providerMap.set(protocol_1.NameSpaceKeyEip155, new inject_1.Eip155Provider());\n        this.providerMap.set(protocol_1.NameSpaceKeySOL, new SolProvider_1.SolProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeyAptos, new AptosProvider_1.AptosProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeyTON, new TONProvider_1.TONProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeySui, new sui_provider_1.SuiProvider());\n    }\n    setAccountChangeListener(accountChangeListener) {\n        (0, utils_1.logDebug)(\"setAccountChangeListener: inject\", accountChangeListener);\n        this.accountChangeListener = accountChangeListener;\n    }\n    setConnectionManager(connectionManager) {\n        this.connectionManager = connectionManager;\n    }\n    getInjectProvider(nameSpace) {\n        for (const [mapKey, value] of this.providerMap.entries()) {\n            if (nameSpace.includes(mapKey)) {\n                return value;\n            }\n        }\n        return undefined;\n    }\n    openWallet(engineConnectInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c;\n            (0, utils_1.logDebug)(\"InjectEngine connect begin:\", JSON.stringify(engineConnectInfo));\n            if (!engineConnectInfo) {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR);\n            }\n            this.dappInfo = engineConnectInfo.connectRequest.dAppInfo;\n            var universalConnectRequest = engineConnectInfo.connectRequest;\n            try {\n                if (window && window.okxwallet) {\n                    if (universalConnectRequest.requests) {\n                        let requestAccounts = universalConnectRequest.requests\n                            .find(item => item.name === \"requestAccounts\");\n                        let version = yield window.okxwallet.getVersion();\n                        let result = {\n                            method: \"connect\",\n                            requestId: universalConnectRequest.requestId,\n                            payload: {\n                                wallet: {\n                                    platform: (_a = navigator.platform) !== null && _a !== void 0 ? _a : \"/\",\n                                    appName: wallet_info_1.OKXInjectWalletName,\n                                    appVersion: version !== null && version !== void 0 ? version : \"1.0.0\",\n                                    maxProtocolVersion: 1,\n                                },\n                                responses: []\n                            },\n                        };\n                        let responseItem = {\n                            name: \"requestAccounts\",\n                            accounts: [],\n                        };\n                        result.payload.responses.push(responseItem);\n                        yield this.disconnect();\n                        const required = (_b = requestAccounts.requiredNamespaces) !== null && _b !== void 0 ? _b : [];\n                        const optional = (_c = requestAccounts.optionalNamespaces) !== null && _c !== void 0 ? _c : [];\n                        let needPop = true;\n                        let signalChain = false;\n                        if (required.length + optional.length === 1 && !(0, media_1.isDevice)(\"mobile\")) {\n                            const singleItem = required.length === 1 ? required[0] : optional[0];\n                            const singleProvider = this.getInjectProvider(singleItem.namespace);\n                            yield (singleProvider === null || singleProvider === void 0 ? void 0 : singleProvider.connect(singleItem, this.dappInfo));\n                            signalChain = true;\n                            needPop = false;\n                        }\n                        var accounts = yield this.getAccountByRequestWallets(needPop, false, signalChain, required, optional);\n                        if (accounts) {\n                            responseItem.accounts.push(...accounts);\n                            if (responseItem.accounts.length === 0) {\n                                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect connectAccounts is null\");\n                            }\n                        }\n                        else {\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect requestWallets is null\");\n                        }\n                        if (this.connectResultListener) {\n                            if (this.disconnectHandler) {\n                                window.okxwallet.removeListener('disconnect', this.disconnectHandler);\n                            }\n                            this.disconnectHandler = () => {\n                                console.log(\"window.okxwallet disconnect:\");\n                                this.disconnectListener.forEach(listener => listener());\n                                this.disconnectListener = [];\n                            };\n                            window.okxwallet.on('disconnect', this.disconnectHandler);\n                            this.connectResultListener(result);\n                        }\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR);\n                }\n            }\n            catch (error) {\n                var code = protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR;\n                var message = '';\n                if (error instanceof protocol_1.OKXConnectError) {\n                    code = error.code;\n                    message = error.message;\n                }\n                if (this.connectResultListener) {\n                    this.connectResultListener({\n                        requestId: \"-1\",\n                        method: 'connect_error',\n                        payload: {\n                            code: code\n                        }\n                    });\n                }\n            }\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, utils_1.logDebug)('InjectEngine ==>> disconnect  okxwallet.disconnect()');\n            if (window.okxwallet) {\n                yield window.okxwallet.disconnect();\n                (0, utils_1.logDebug)('InjectEngine ==>> disconnect end okxwallet.disconnect()');\n            }\n        });\n    }\n    getRequestId() {\n        const requestId = Date.now().toString();\n        (0, utils_1.logDebug)('InjectEngine ==>> getRequestId ==>', requestId);\n        return requestId;\n    }\n    send(request, requestAnswer) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                (0, utils_1.logDebug)(\"InjectEngine send  > request:\", (0, utils_1.safeJsonStringify)(request));\n                let newRequest = request;\n                if (newRequest.method === 'disconnect') {\n                    yield this.disconnect();\n                    this.disconnectListener.forEach(listener => listener());\n                    this.disconnectListener = [];\n                    (_a = requestAnswer.onAck) === null || _a === void 0 ? void 0 : _a.call(requestAnswer);\n                    return;\n                }\n                yield this.checkWalletMatch();\n                const injectProvider = this.getInjectProvider(newRequest.chainId);\n                if (injectProvider) {\n                    injectProvider.send(newRequest).then(result => {\n                        var _a;\n                        (0, utils_1.logDebug)(\"InjectEngine ==>> send > result:\", result);\n                        (_a = requestAnswer.resolve) === null || _a === void 0 ? void 0 : _a.call(requestAnswer, result);\n                    }).catch(error => {\n                        var _a;\n                        let code = error.code;\n                        if (code === 4001) {\n                            code = protocol_1.OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR;\n                        }\n                        let errorResponse = {\n                            requestId: this.getRequestId(),\n                            method: request.method,\n                            error: {\n                                code: code,\n                                message: error.message\n                            }\n                        };\n                        (0, utils_1.logDebug)(\"InjectEngine ==>> send > errorResponse:\", JSON.stringify(errorResponse));\n                        (_a = requestAnswer.resolve) === null || _a === void 0 ? void 0 : _a.call(requestAnswer, errorResponse);\n                    });\n                    return;\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"InjectEngine ==>> send  ===> error:\", error);\n                return Promise.reject(error);\n            }\n        });\n    }\n    checkWalletMatch() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                var _a;\n                let sessionLocal = (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getSessionContent('connectSession');\n                if (!sessionLocal) {\n                    reject(new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED));\n                }\n                this.restoreconnect(sessionLocal, (session) => {\n                    if (session) {\n                        resolve();\n                    }\n                    else {\n                        reject(new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED));\n                    }\n                });\n            });\n        });\n    }\n    checkAccountChanged() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                let sessionLocal = (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getSessionContent('connectSession');\n                if (!sessionLocal) {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED);\n                }\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --sessionInfo:\", JSON.stringify(sessionLocal));\n                let requiredNamespaces = this.getRequireNameSpaceFromSession(sessionLocal);\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --requiredNamespaces:\", JSON.stringify(requiredNamespaces));\n                // 使用 await 等待异步操作完成\n                let accounts = yield this.getAccountByRequestWallets(false, true, false, requiredNamespaces, []);\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --accounts:\", JSON.stringify(accounts));\n                if (accounts) {\n                    let resultNameSpace = {};\n                    (0, sessionUtils_1.buildAccountNameSpaces)(accounts, resultNameSpace);\n                    if (!this.compareAndModifyNamespaces(sessionLocal.namespaces, resultNameSpace)) {\n                        (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --result sessionLocal:\", JSON.stringify(sessionLocal));\n                        if (this.accountChangeListener) {\n                            (0, utils_1.logDebug)(\"inject-connector checkAccountChanged -accountChangeListener:\", this.accountChangeListener);\n                            this.accountChangeListener(sessionLocal);\n                        }\n                        else {\n                            (0, utils_1.logDebug)(\"inject-connector checkAccountChanged disconnect:\");\n                            yield this.disconnect();\n                        }\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect requestWallets is null\");\n                }\n            }\n            catch (e) {\n                (0, utils_1.logDebug)(\"inject-connector restoreconnect catch error\", JSON.stringify(e));\n                throw e;\n            }\n        });\n    }\n    compareAndModifyNamespaces(nameSpaces1, nameSpaces2) {\n        let isAccountsSame = true;\n        for (const key in nameSpaces1) {\n            if (nameSpaces2[key]) {\n                const ns1 = nameSpaces1[key];\n                const ns2 = nameSpaces2[key];\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged ns1:\", JSON.stringify(ns1));\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged ns2:\", JSON.stringify(ns2));\n                const areAccountsSame = JSON.stringify([...ns1.accounts].sort()) === JSON.stringify([...ns2.accounts].sort());\n                if (!areAccountsSame) {\n                    isAccountsSame = false;\n                    ns1.accounts = [...ns2.accounts];\n                    ns1.extra = Object.assign({}, ns2.extra);\n                    ns1.payload = Object.assign({}, ns2.payload);\n                }\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged new ns1:\", JSON.stringify(ns1));\n            }\n        }\n        (0, utils_1.logDebug)(`inject-connector checkAccountChanged compareAndModifyNamespaces ===> ${isAccountsSame}`);\n        return isAccountsSame;\n    }\n    clearData() {\n        this.connectResultListener = undefined;\n    }\n    addDisconnectListener(disconnecter) {\n        this.disconnectListener.push(disconnecter);\n    }\n    setOnConnectResultListener(connectResultListener) {\n        this.connectResultListener = connectResultListener;\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (_ = false) {\n        });\n    }\n    getCurrentConnectionReady(namespaceKeys) {\n        if (!namespaceKeys) {\n            return false;\n        }\n        const allReady = namespaceKeys.every(namespaceKey => { var _a; return (_a = this.getInjectProvider(namespaceKey)) === null || _a === void 0 ? void 0 : _a.connectReady(); });\n        return allReady;\n    }\n    getTag() {\n        return iconnector_1.OKX_INJECT_WALLET;\n    }\n    toJSON() {\n        return \"inject-connector\";\n    }\n    getRequireNameSpaceFromSession(sessionInfo) {\n        var _a, _b;\n        var requiredNamespaces = [];\n        for (let namespacesKey in sessionInfo.namespaces) {\n            let nameSpace = sessionInfo.namespaces[namespacesKey];\n            let connectWalletNameSpace = {\n                namespace: namespacesKey,\n                chains: nameSpace.chains\n            };\n            if (namespacesKey === protocol_1.NameSpaceKeyAptos) {\n                let aptosChains = [];\n                nameSpace.chains.forEach((chainStr) => {\n                    let aptosChain = (0, utils_2.replaceChainNameToChainId)(chainStr);\n                    aptosChains.push(aptosChain);\n                });\n                connectWalletNameSpace = {\n                    namespace: namespacesKey,\n                    chains: aptosChains\n                };\n            }\n            else if (namespacesKey === protocol_1.NameSpaceKeyTON) {\n                let ton_proof_result_Item = undefined;\n                let proofItem = undefined;\n                if ((_a = nameSpace.payload) === null || _a === void 0 ? void 0 : _a.ton_proof) {\n                    ton_proof_result_Item = (_b = nameSpace.payload) === null || _b === void 0 ? void 0 : _b.ton_proof;\n                    if (ton_proof_result_Item.proof.payload) {\n                        proofItem = {\n                            name: \"ton_proof\",\n                            payload: ton_proof_result_Item.proof.payload\n                        };\n                    }\n                }\n                connectWalletNameSpace = {\n                    namespace: namespacesKey,\n                    chains: nameSpace.chains,\n                    params: {\n                        ton_addr: { name: 'ton_addr' },\n                        ton_proof: proofItem\n                    },\n                };\n            }\n            requiredNamespaces.push(connectWalletNameSpace);\n        }\n        return requiredNamespaces;\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        var _a;\n        if (!window.okxwallet) {\n            onConnectResult(null);\n            return;\n        }\n        this.dappInfo = (_a = sessionInfo.sessionConfig) === null || _a === void 0 ? void 0 : _a.dappInfo;\n        (0, utils_1.logDebug)(\"inject-connector restoreconnect --sessionInfo:\", JSON.stringify(sessionInfo));\n        var requiredNamespaces = this.getRequireNameSpaceFromSession(sessionInfo);\n        (0, utils_1.logDebug)(\"inject-connector restoreconnect --requiredNamespaces:\", JSON.stringify(requiredNamespaces));\n        this.getAccountByRequestWallets(false, false, false, requiredNamespaces, [])\n            .then((accounts) => {\n            (0, utils_1.logDebug)(\"inject-connector restoreconnect --accounts:\", JSON.stringify(accounts));\n            //compare account with sessionInfo\n            let allEqual = true;\n            for (let namespacesKey in sessionInfo.namespaces) {\n                var accountsItem = accounts.find((item) => item.namespace === namespacesKey);\n                var sessionAccounts = sessionInfo.namespaces[namespacesKey].accounts;\n                if (!accountsItem) {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"resotreconnect error: accountItem error\");\n                }\n                let newSessionAccounts = sessionAccounts;\n                if (namespacesKey === protocol_1.NameSpaceKeyAptos && newSessionAccounts && newSessionAccounts.length > 0) {\n                    newSessionAccounts = sessionAccounts.map((address) => {\n                        return (0, utils_2.replaceChainNameToChainId)(address);\n                    });\n                }\n                const areEqual = accountsItem.addresses.length === newSessionAccounts.length &&\n                    accountsItem.addresses.slice().sort().every((value, index) => {\n                        if (namespacesKey === protocol_1.NameSpaceKeyAptos) {\n                            let aptosAdd = newSessionAccounts.slice().sort()[index];\n                            (0, utils_1.logDebug)(\"check aptos address -value and aptosAdd--\", value, aptosAdd);\n                            return aptosAdd === value;\n                        }\n                        else {\n                            return value === newSessionAccounts.slice().sort()[index];\n                        }\n                    });\n                if (!areEqual) {\n                    allEqual = false;\n                }\n            }\n            if (allEqual) {\n                onConnectResult(sessionInfo);\n            }\n            else {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"resotreconnect error: address not as same as session\");\n            }\n        }).catch((e) => {\n            (0, utils_1.logDebug)(\"inject-connector restoreconnect catch error\", JSON.stringify(e));\n            onConnectResult(null);\n        });\n    }\n    getAccountByRequestWallets(needPop, isAccountChange, signalChain, requiredNamespaces, optionalNamespaces) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                var walletInfo = [];\n                var accountResult = [];\n                if ((0, media_1.isDevice)(\"mobile\")) {\n                    var walletInfoItem = yield window.okxwallet.connectWallet(needPop, {\n                        requiredNamespaces: requiredNamespaces,\n                        optionalNamespaces: optionalNamespaces\n                    });\n                    walletInfo.push(walletInfoItem);\n                }\n                else {\n                    walletInfo = (yield window.okxwallet.requestWallets(needPop));\n                }\n                var allNameSpace = [...(requiredNamespaces !== null && requiredNamespaces !== void 0 ? requiredNamespaces : []), ...(optionalNamespaces !== null && optionalNamespaces !== void 0 ? optionalNamespaces : [])];\n                let walletInfoFirst = walletInfo[0];\n                (0, utils_1.logDebug)(\" InjectEngine connect connectAccounts:\", JSON.stringify(walletInfoFirst));\n                let eventkey;\n                let hasTON = false;\n                if (allNameSpace && walletInfoFirst && walletInfoFirst.address) {\n                    for (const [mapKey, provider] of this.providerMap.entries()) {\n                        let itemResult = yield provider.parseConnectResponse(needPop, isAccountChange, signalChain, allNameSpace, walletInfoFirst, this.dappInfo);\n                        if (itemResult) {\n                            eventkey = mapKey;\n                            accountResult.push(itemResult);\n                            if (mapKey === protocol_1.NameSpaceKeyTON) {\n                                hasTON = true;\n                            }\n                        }\n                    }\n                }\n                // check require\n                let cheeckRequire = requiredNamespaces.every(requireItem => {\n                    // requireItem.namespace\n                    let resultSel = accountResult.find(resultItem => {\n                        return resultItem.namespace === requireItem.namespace;\n                    });\n                    if (resultSel) {\n                        let hasChainAdd = requireItem.chains.every(chain => {\n                            let addItem = resultSel.addresses.find(address => {\n                                return address.startsWith(chain + \":\");\n                            });\n                            return !!addItem;\n                        });\n                        return hasChainAdd;\n                    }\n                    return false;\n                });\n                (0, utils_1.logDebug)(\"InjectEngine connect requiredNamespaces:\", JSON.stringify(requiredNamespaces));\n                (0, utils_1.logDebug)(\"InjectEngine connect accountResult:\", JSON.stringify(accountResult));\n                if (!cheeckRequire) {\n                    yield this.disconnect();\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED);\n                }\n                if (!(0, media_1.isDevice)(\"mobile\")) {\n                    this.configEventWithKey(eventkey, hasTON);\n                    yield window.okxwallet.requestWallets(needPop);\n                }\n                return accountResult;\n            }\n            catch (e) {\n                if (e && typeof e === \"object\" && \"code\" in e) {\n                    if (e.code === 4001) {\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR);\n                    }\n                }\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n            }\n        });\n    }\n    configEventWithKey(key, hasTON) {\n        if (window.okxwallet && key) {\n            if (this.accountChangedEVMHandler) {\n                window.okxwallet.removeListener('accountsChanged', this.accountChangedEVMHandler);\n            }\n            if (this.accountChangedSolanaPublicKeyHandler) {\n                window.okxwallet.solana.removeListener('accountChanged', this.accountChangedSolanaPublicKeyHandler);\n                window.okxwallet.sui.removeListener('accountChanged', this.accountChangedSolanaPublicKeyHandler);\n            }\n            if (this.accountChangedTONHandler) {\n                window.okxTonWallet.tonconnect.off('accountChanged', this.accountChangedTONHandler);\n            }\n            if (hasTON) {\n                console.log(\"window.okxwallet configEventWithKey:\", key);\n                this.accountChangedTONHandler = () => {\n                    console.log(\"window.okxwallet configEventWithKey_TON:\", Date.now(), key);\n                    this.checkAccountChanged().catch(e => {\n                        console.log(\"window.okxwallet configEventWithKey error: \", e);\n                    });\n                };\n                window.okxTonWallet.tonconnect.on('accountChanged', this.accountChangedTONHandler);\n            }\n            else {\n                switch (key) {\n                    case protocol_1.NameSpaceKeyEip155:\n                        {\n                            console.log(\"window.okxwallet configEventWithKey:\", key);\n                            this.accountChangedEVMHandler = (accounts) => {\n                                console.log(\"window.okxwallet configEventWithKey_evm:\", Date.now(), key, accounts);\n                                if (accounts && accounts.length > 0) { //\n                                    this.checkAccountChanged().catch(e => {\n                                        console.log(\"window.okxwallet configEventWithKey error: \", e);\n                                    });\n                                }\n                            };\n                            window.okxwallet.on('accountsChanged', this.accountChangedEVMHandler);\n                        }\n                        break;\n                    case protocol_1.NameSpaceKeySOL:\n                        {\n                            console.log(\"window.okxwallet configEventWithKey:\", key);\n                            this.accountChangedSolanaPublicKeyHandler = (publicKey) => {\n                                console.log(\"window.okxwallet configEventWithKey_solana:\", Date.now(), key, publicKey);\n                                if (publicKey) {\n                                    this.checkAccountChanged().catch(e => {\n                                        console.log(\"window.okxwallet configEventWithKey error: \", e);\n                                    });\n                                }\n                            };\n                            window.okxwallet.solana.on('accountChanged', this.accountChangedSolanaPublicKeyHandler);\n                        }\n                        break;\n                    case protocol_1.NameSpaceKeySui:\n                        {\n                            console.log(\"window.okxwallet configEventWithKey:\", key);\n                            this.accountChangedSolanaPublicKeyHandler = (publicKey) => {\n                                console.log(\"window.okxwallet configEventWithKey_sui:\", Date.now(), key, publicKey);\n                                if (publicKey) {\n                                    this.checkAccountChanged().catch(e => {\n                                        console.log(\"window.okxwallet configEventWithKey error: \", e);\n                                    });\n                                }\n                            };\n                            window.okxwallet.sui.on('accountChanged', this.accountChangedSolanaPublicKeyHandler);\n                        }\n                        break;\n                    case protocol_1.NameSpaceKeyTON:\n                        {\n                            console.log(\"window.okxwallet configEventWithKey:\", key);\n                        }\n                        break;\n                    case protocol_1.NameSpaceKeyAptos:\n                        {\n                            window.okxwallet.aptos.onAccountChange((newAccount) => {\n                                console.log(\"window.okxwallet configEventWithKey_aptos:\", Date.now(), key, JSON.stringify(newAccount));\n                                if (newAccount) {\n                                    this.checkAccountChanged().catch(e => {\n                                        console.log(\"window.okxwallet configEventWithKey error: \", e);\n                                    });\n                                }\n                            });\n                        }\n                        break;\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n}\nexports.InjectConnector = InjectConnector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OkxwalletInjectConnector = void 0;\nconst inject_connector_1 = require(\"./inject-connector\");\nclass OkxwalletInjectConnector extends inject_connector_1.InjectConnector {\n    static getConnector() {\n        return new OkxwalletInjectConnector();\n    }\n    constructor() {\n        super();\n        this.walletName = 'OKX Wallet extension';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectInjected';\n    }\n}\nexports.OkxwalletInjectConnector = OkxwalletInjectConnector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TgwalletConnector = void 0;\nconst ws_connector_1 = require(\"./ws-connector\");\nconst iconnector_1 = require(\"./iconnector\");\nconst utils_1 = require(\"../utils\");\nclass TgwalletConnector extends ws_connector_1.WsConnector {\n    static getConnector() {\n        return new TgwalletConnector();\n    }\n    constructor() {\n        super();\n        this.walletName = 'OKX Mini Wallet';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectMini';\n    }\n    getTag() {\n        return iconnector_1.OKX_TG_WALLET;\n    }\n    openWallet(engineConnectInfo) {\n        var _a;\n        var encodeTGParams;\n        if (engineConnectInfo && engineConnectInfo.connectRequest) {\n            encodeTGParams = (0, utils_1.encodeTWAConnectURLParams)(Object.assign(Object.assign({}, engineConnectInfo.connectRequest), { redirect: \"none\" }));\n        }\n        var tgUrl = (0, utils_1.getTelegramWalletTWAUrl)(encodeTGParams, (_a = engineConnectInfo === null || engineConnectInfo === void 0 ? void 0 : engineConnectInfo.tmaReturnUrl) !== null && _a !== void 0 ? _a : \"back\");\n        (0, utils_1.openOKXTMAWalletlinkWithFallback)(tgUrl);\n    }\n}\nexports.TgwalletConnector = TgwalletConnector;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WsConnector = void 0;\nconst safejson_1 = require(\"../utils/safejson\");\nconst log_1 = require(\"../utils/log\");\nclass WsConnector {\n    constructor() {\n        this.disconnectListener = [];\n        this.walletName = '';\n        this.walletNameKey = '';\n        this.enable = true;\n        this.pendingRequests = new Map();\n        // report api begin\n        (0, log_1.getDefaultReporter)().beginReport();\n    }\n    setAccountChangeListener(accountChangeListener) {\n        this.accountChangeListener = accountChangeListener;\n    }\n    setConnectionManager(connectionManager) {\n        this.connectionManager = connectionManager;\n    }\n    addConnectionListener() {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.addListener(\"sdk_response\", (event, msg) => {\n            var jsonResponse = (0, safejson_1.safeJsonParse)(msg);\n            (0, log_1.logDebug)(`Engine ==>> addListener ==> success ==> ${jsonResponse}`);\n            this.handleResponse(event, jsonResponse);\n        }, function () {\n        });\n    }\n    addDisconnectListener(disconnecter) {\n        this.disconnectListener.push(disconnecter);\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.disconnect(fromRestore));\n        });\n    }\n    openWallet(engineConnectInfo) {\n    }\n    bindRequestForPromise(requestId, resolve) {\n        this.pendingRequests.set(requestId, resolve);\n    }\n    send(request, requestAnswer, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            (0, log_1.logDebug)('Engine ==>> send  request==>', JSON.stringify(request));\n            const requestId = this.getRequestId();\n            try {\n                let packageId = yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.send(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId })), ttl));\n                if (packageId) {\n                    (_b = this.connectionManager) === null || _b === void 0 ? void 0 : _b.events.once(packageId.toString(), (event) => {\n                        var _a;\n                        (0, log_1.logDebug)(`Engine ==> send => onAck => ${(0, safejson_1.safeJsonStringify)(event)}`);\n                        if (event && event.result) {\n                            (_a = requestAnswer.onAck) === null || _a === void 0 ? void 0 : _a.call(requestAnswer);\n                        }\n                    });\n                }\n                if (requestAnswer.resolve) {\n                    this.bindRequestForPromise(requestId, requestAnswer.resolve);\n                }\n            }\n            catch (e) {\n                return Promise.reject(e);\n            }\n        });\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.restoreConnect(sessionInfo.topic));\n            onConnectResult(sessionInfo);\n        });\n    }\n    restoreconnectFromTopic(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.restoreConnect(topic));\n        });\n    }\n    getRequestId() {\n        const requestId = Date.now().toString();\n        (0, log_1.logDebug)('Engine ==>> getRequestId ==>', requestId);\n        return requestId;\n    }\n    handleResponse(event, response) {\n        (0, log_1.logDebug)(`Engine ==>> handleResponse_1  ======>response: ${(0, safejson_1.safeJsonStringify)(response)}`, event);\n        if (\"requestId\" in response) {\n            (0, log_1.logDebug)(\"Engine ==>> handleResponse_2  ===> in response\");\n            let requestId = response.requestId;\n            const resolve = this.pendingRequests.get(requestId);\n            if (resolve) {\n                (0, log_1.logDebug)(\"Engine ==>> handleResponse_3  ===> find resolve:\", resolve);\n                resolve(response);\n                // 从pendingRequests中删除这个Promise\n                this.pendingRequests.delete(requestId);\n            }\n            else {\n                (0, log_1.logDebug)(\"Engine ==>> handleResponse_3  ===> not find resolve:\");\n                if (response.method === \"disconnect\") {\n                    this.disconnectListener.forEach(listener => listener());\n                    this.disconnectListener = [];\n                    this.clearData();\n                }\n            }\n        }\n    }\n    getCurrentConnectionReady() {\n        var _a;\n        return !!((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getCurrentConnectionReady());\n    }\n    saveSessionContent(key, data) {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.saveSessionContent(key, data);\n    }\n    getSessionContent(key) {\n        var _a;\n        return (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getSessionContent(key);\n    }\n    setOnConnectResultListener(connectResultListener) {\n        this.connectResultListener = connectResultListener;\n    }\n    getTag() {\n        return \"\";\n    }\n    toJSON() {\n        return \"ws-connector\";\n    }\n    clearData() {\n        this.pendingRequests.clear();\n    }\n}\nexports.WsConnector = WsConnector;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SessionCrypto = void 0;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst utils_1 = require(\"../utils/utils\");\nclass SessionCrypto {\n    constructor(keyPair = undefined) {\n        this.nonceLength = 24;\n        this.sessionKeyPair = keyPair ? this.createKeypairFromString(keyPair) : this.createKeypair();\n    }\n    createKeypair() {\n        return tweetnacl_1.default.box.keyPair();\n    }\n    createKeypairFromString(keyPair) {\n        return {\n            publicKey: (0, utils_1.hexToByteArray)(keyPair.publicKey),\n            secretKey: (0, utils_1.hexToByteArray)(keyPair.secretKey),\n        };\n    }\n    createNonce() {\n        return tweetnacl_1.default.randomBytes(this.nonceLength);\n    }\n    get keyPair() {\n        return this.sessionKeyPair;\n    }\n    // dapp 加密:\n    // base64(hex（nonce+加密内容）)\n    encrypt(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl_1.default.box(encodedMessage, nonce, (0, utils_1.hexToByteArray)(receiverPublicKey), this.keyPair.secretKey);\n        let concatInfo = (0, utils_1.concatUint8Arrays)(nonce, encrypted);\n        var hexResult = (0, utils_1.toHexString)(concatInfo);\n        var encodedResult = new TextEncoder().encode(hexResult);\n        return (0, utils_1.base64encode)(encodedResult, false);\n    }\n    // 钱包加密内容\n    // 注意：没有中间hex的环节\n    // base64（nonce+加密内容)\n    encryptWallet(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl_1.default.box(encodedMessage, nonce, (0, utils_1.hexToByteArray)(receiverPublicKey), this.keyPair.secretKey);\n        let concatInfo = (0, utils_1.concatUint8Arrays)(nonce, encrypted);\n        return (0, utils_1.base64encode)(concatInfo, false);\n    }\n    // dapp 解密\n    // base64(split(nonce+加密内容))\n    decrypt(message, senderPublicKey) {\n        let base64Content = (0, utils_1.base64decode)(message, true);\n        let messageByteArray = base64Content.toUint8Array();\n        const [nonce, internalMessage] = (0, utils_1.splitToUint8Arrays)(messageByteArray, this.nonceLength);\n        const decrypted = tweetnacl_1.default.box.open(internalMessage, nonce, (0, utils_1.hexToByteArray)(senderPublicKey), this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${(0, utils_1.toHexString)(this.keyPair.publicKey)} \\n keypair secretkey: ${(0, utils_1.toHexString)(this.keyPair.secretKey)}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    // dapp 解密\n    // base64(hextoByte(split(nonce+加密内容)))\n    decryptWallet(message, senderPublicKey) {\n        let base64Content = (0, utils_1.base64decode)(message, true);\n        let messageByteArray = (0, utils_1.hexToByteArray)(base64Content.toString());\n        const [nonce, internalMessage] = (0, utils_1.splitToUint8Arrays)(messageByteArray, this.nonceLength);\n        const decrypted = tweetnacl_1.default.box.open(internalMessage, nonce, (0, utils_1.hexToByteArray)(senderPublicKey), this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${(0, utils_1.toHexString)(this.keyPair.publicKey)} \\n keypair secretkey: ${(0, utils_1.toHexString)(this.keyPair.secretKey)}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    stringifyKeypair() {\n        return {\n            publicKey: (0, utils_1.toHexString)(this.keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(this.keyPair.secretKey)\n        };\n    }\n}\nexports.SessionCrypto = SessionCrypto;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./connect\"), exports);\n__exportStar(require(\"./protocol\"), exports);\n__exportStar(require(\"./utils\"), exports);\n__exportStar(require(\"./inject\"), exports);\n__exportStar(require(\"./connector\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuiMethods = exports.TONMethods = exports.AptosMethods = exports.SOLANAMethods = exports.Eip55Methods = void 0;\nexports.hasOKXInjectedProvider = hasOKXInjectedProvider;\nfunction hasOKXInjectedProvider() {\n    if (typeof getWindowProviderNamespace(\"okxwallet\") !== 'undefined') {\n        return true;\n    }\n    return false;\n}\nfunction getWindowProviderNamespace(namespace) {\n    const providerSearch = (provider, namespace) => {\n        const [property, ...path] = namespace.split('.');\n        const _provider = provider[property];\n        if (_provider) {\n            if (path.length === 0)\n                return _provider;\n            return providerSearch(_provider, path.join('.'));\n        }\n    };\n    if (typeof window !== 'undefined')\n        return providerSearch(window, namespace);\n}\nexports.Eip55Methods = [\n    \"personal_sign\",\n    \"eth_signTypedData_v4\",\n    \"eth_sendTransaction\",\n    \"wallet_addEthereumChain\",\n    \"wallet_watchAsset\",\n    \"wallet_switchEthereumChain\",\n    \"eth_requestAccounts\",\n    \"eth_accounts\",\n    \"eth_chainId\"\n];\nexports.SOLANAMethods = [\n    \"solana_signTransaction\",\n    \"solana_signMessage\",\n    \"solana_signAllTransactions\",\n    \"solana_signAndSendTransaction\"\n];\nexports.AptosMethods = [\n    \"aptos_signMessage\",\n    \"aptos_signTransaction\",\n    \"aptos_signAndSubmitTransaction\"\n];\nexports.TONMethods = [\n    \"ton_sendTransaction\",\n];\nexports.SuiMethods = [\n    \"sui_signMessage\",\n    \"sui_signPersonalMessage\",\n    \"sui_signTransactionBlock\",\n    \"sui_signAndExecuteTransactionBlock\"\n];\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./InjectUtils\"), exports);\n__exportStar(require(\"./provider\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AptosProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nconst media_1 = require(\"../../utils/media\");\nconst aptosChainList = Object.freeze([\n    \"637\",\n    \"70000060\",\n    \"70000066\",\n]);\nconst aptosInjectChainMap = new Map();\naptosInjectChainMap.set(\"aptos:637\", \"Mainnet\");\naptosInjectChainMap.set(\"aptos:70000060\", \"Movement Testnet\");\naptosInjectChainMap.set(\"aptos:70000066\", \"Movement Mainnet\");\nclass AptosProvider {\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                (0, utils_1.logDebug)(\"AptosProvider send request:\", (0, utils_1.safeJsonStringify)(request));\n                yield this.restoreConnect();\n                let network = yield window.okxwallet.aptos.network();\n                let searchNetwork = this.searchChainIdToInjectChainName(request.chainId);\n                (0, utils_1.logDebug)(\"AptosProvider send network and searchNetwork:\", network, \"-----\", searchNetwork);\n                if (!(network && searchNetwork && network.toLowerCase() === searchNetwork.toLowerCase())) {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Please switch your wallet link to '${searchNetwork}'`);\n                }\n                const method = request.method;\n                let result;\n                switch (method) {\n                    case \"aptos_signMessage\":\n                        {\n                            if (request.injectParams) {\n                                let message = yield window.okxwallet.aptos.signMessage(request.injectParams);\n                                result = {\n                                    method: request.method,\n                                    result: message.signature,\n                                    injectResult: message\n                                };\n                                (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                                return result;\n                            }\n                            else {\n                                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                            }\n                        }\n                        break;\n                    case \"aptos_signTransaction\":\n                        {\n                            (0, utils_1.logDebug)(\"AptosProvider Method>>>> :\", method);\n                            let message = yield window.okxwallet.aptos.signTransaction(request.params);\n                            result = {\n                                method: request.method,\n                                result: message,\n                            };\n                            (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                            return result;\n                        }\n                        break;\n                    case \"aptos_signAndSubmitTransaction\":\n                        {\n                            (0, utils_1.logDebug)(\"AptosProvider Method>>>> :\", method);\n                            let message = yield window.okxwallet.aptos.signAndSubmitTransaction(request.params);\n                            result = {\n                                method: request.method,\n                                result: message.hash,\n                            };\n                            (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                            return result;\n                        }\n                        break;\n                    default:\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, ` method: '${method}'`);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"AptosProvider send error:\", error);\n                throw error;\n            }\n        });\n    }\n    searchChainIdToInjectChainName(chainId) {\n        let chainName = chainId;\n        aptosInjectChainMap.forEach((value, key) => {\n            if (chainId.includes(key)) {\n                chainName = value;\n            }\n        });\n        return chainName;\n    }\n    connectReady() {\n        return true;\n    }\n    disconnect() {\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return this.connect(undefined);\n        }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let connectChain = [];\n            connectWalletNameSpace.forEach(item => {\n                if (item.namespace === protocol_1.NameSpaceKeyAptos) {\n                    connectChain.push(...item.chains);\n                }\n            });\n            let addresses = [];\n            let extra = {};\n            (0, utils_1.logDebug)(\"AptosProvider parseConnectResponse connectChain\", JSON.stringify(connectChain));\n            let publicKey = undefined;\n            if (!(0, media_1.isDevice)('mobile') && connectChain && connectChain.length > 0) {\n                let aptosAccount = yield window.okxwallet.aptos.connect();\n                publicKey = aptosAccount.publicKey;\n            }\n            connectChain.forEach((chainStr) => {\n                let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                    return (aptosChainList.includes(addressItem.chainId) && addressItem.coinType === 637) || (addressItem.namespaceChainId === chainStr);\n                });\n                if (selectedAddress) {\n                    addresses.push(chainStr + \":\" + selectedAddress.address);\n                    extra[chainStr] = {\n                        publicKey: selectedAddress.publicKey ? selectedAddress.publicKey : publicKey\n                    };\n                }\n            });\n            (0, utils_1.logDebug)(\"AptosProvider parseConnectResponse addresses\", JSON.stringify(addresses));\n            if (addresses && addresses.length > 0) {\n                let nameSpaceResponse = {\n                    namespace: protocol_1.NameSpaceKeyAptos,\n                    addresses: addresses,\n                    methods: [...InjectUtils_1.AptosMethods],\n                    extra: extra\n                };\n                return nameSpaceResponse;\n            }\n            return undefined;\n        });\n    }\n    connect(nameSpace, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return window.okxwallet.aptos.connect();\n        });\n    }\n}\nexports.AptosProvider = AptosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass SolProvider {\n    // TOOD\n    // 问题: 是否需要切链  不切链, 主网 测试网络  sonic 如何区别\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                yield this.restoreConnect();\n                (0, utils_1.logDebug)(\"SolProvider send request:\", JSON.stringify(request));\n                const method = request.method;\n                let result;\n                if (request.injectParams) {\n                    switch (method) {\n                        case \"solana_signMessage\":\n                            {\n                                if (request.injectParams && typeof request.injectParams === 'object' && 'message' in request.injectParams) {\n                                    var message = (_a = request.injectParams) === null || _a === void 0 ? void 0 : _a.message;\n                                    const encodedMessage = new TextEncoder().encode(message);\n                                    const signedMessage = yield window.okxwallet.solana.signMessage(encodedMessage, \"utf8\");\n                                    result = {\n                                        method: request.method,\n                                        result: bs58_1.default.encode(signedMessage.signature),\n                                    };\n                                    (0, utils_1.logDebug)(\"SolProvider send result:\", JSON.stringify(signedMessage));\n                                    return result;\n                                }\n                                else {\n                                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                                }\n                            }\n                            break;\n                        case \"solana_signTransaction\":\n                            {\n                                let bufferResult = yield window.okxwallet.solana.signTransaction(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send bufferResult:\", JSON.stringify(bufferResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: bufferResult,\n                                };\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                                return result;\n                            }\n                            break;\n                        case \"solana_signAllTransactions\":\n                            {\n                                let allResult = yield window.okxwallet.solana.signAllTransactions(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(allResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: allResult,\n                                };\n                                return result;\n                            }\n                            break;\n                        case \"solana_signAndSendTransaction\":\n                            {\n                                var signAndSendResult = yield window.okxwallet.solana.signAndSendTransaction(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(signAndSendResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: signAndSendResult,\n                                };\n                                return result;\n                            }\n                            break;\n                        default:\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, `method: '${method}'`);\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"SolProvider send error:\", error);\n                throw error;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    disconnect() {\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return this.connect(undefined);\n        }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let connectChain = [];\n            connectWalletNameSpace.forEach(item => {\n                if (item.namespace === protocol_1.NameSpaceKeySOL) {\n                    connectChain.push(...item.chains);\n                }\n            });\n            let addresses = [];\n            let extra = {};\n            let accounts = {};\n            // if (!isDevice(\"mobile\")){\n            //      accounts = await window.okxwallet.solana.connect()\n            //     logDebug(\"parseConnectResponse solana.connect() :\",JSON.stringify(accounts))\n            // }\n            connectChain.forEach((chainStr) => {\n                let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                    return (addressItem.chainId === \"501\" && addressItem.coinType === 501)\n                        || (addressItem.namespaceChainId === chainStr);\n                });\n                if (selectedAddress) {\n                    addresses.push(chainStr + \":\" + selectedAddress.address);\n                    if (accounts && \"publicKey\" in accounts) {\n                        extra[chainStr] = accounts;\n                    }\n                    else {\n                        extra[chainStr] = {\n                            publicKey: selectedAddress.publicKey\n                        };\n                    }\n                }\n            });\n            if (addresses && addresses.length > 0) {\n                let nameSpaceResponse = {\n                    namespace: protocol_1.NameSpaceKeySOL,\n                    addresses: addresses,\n                    methods: [...InjectUtils_1.SOLANAMethods],\n                    extra: extra\n                };\n                (0, utils_1.logDebug)(\"parseConnectResponse nameSpaceResponse :\", JSON.stringify(nameSpaceResponse));\n                return nameSpaceResponse;\n            }\n            return undefined;\n        });\n    }\n    connect(nameSpace, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return window.okxwallet.solana.connect();\n        });\n    }\n}\nexports.SolProvider = SolProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TONProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass TONProvider {\n    constructor() {\n        this.signalChainConnectResult = undefined;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                (0, utils_1.logDebug)(\"TONProvider send request:\", (0, utils_1.safeJsonStringify)(request));\n                // await this.restoreConnect()//To initialize data in Discover\n                let tonParams = null;\n                switch (request.method) {\n                    case \"ton_sendTransaction\":\n                        if (request.params) {\n                            tonParams = {\n                                method: \"sendTransaction\",\n                                params: [JSON.stringify(request.params)],\n                                id: Date.now().toString()\n                            };\n                            (0, utils_1.logDebug)(\"TONProvider tonParams first:\", JSON.stringify(tonParams));\n                        }\n                        break;\n                    default:\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n                if (tonParams) {\n                    const resultMe = yield window.okxTonWallet.tonconnect.send(tonParams);\n                    (0, utils_1.logDebug)(\"TONProvider send request result:\", (0, utils_1.safeJsonStringify)(resultMe));\n                    if (resultMe.error) {\n                        throw new protocol_1.OKXConnectError(resultMe.error.code, resultMe.error.message);\n                    }\n                    return {\n                        result: resultMe.result,\n                        method: request.method,\n                    };\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"TONProvider encountered an error:\", error);\n                throw error;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    restoreConnect() {\n        // if (isDevice(\"mobile\") && window.okxTonWallet){\n        //     return  window.okxTonWallet.tonconnect.restoreConnection()\n        // }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeyTON) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                connectChain.forEach((chainStr) => {\n                    let currentChain = (0, utils_1.getChainId)(chainStr);\n                    let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                        return (addressItem.chainId === \"607\" && addressItem.coinType === 607)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                    if (selectedAddress) {\n                        addresses.push(chainStr + \":\" + selectedAddress.address);\n                        extra[chainStr] = {\n                            publicKey: selectedAddress.publicKey\n                        };\n                    }\n                });\n                (0, utils_1.logDebug)(\"tonprovider parseConnectResponse needPop and addresses: \", needPop, JSON.stringify(addresses));\n                if (addresses && addresses.length > 0) {\n                    let tonItem = connectWalletNameSpace.find(tonItem => {\n                        return tonItem.namespace === protocol_1.NameSpaceKeyTON;\n                    });\n                    (0, utils_1.logDebug)(\"tonprovider parseConnectResponse ton: \", JSON.stringify(tonItem));\n                    let tonResult = undefined;\n                    if (tonItem && tonItem.params && dappInfo && dappInfo.manifestUrl) {\n                        this.dappInfo = dappInfo;\n                        let itmes = [tonItem.params.ton_addr];\n                        let params = {\n                            manifestUrl: dappInfo.manifestUrl,\n                            items: itmes\n                        };\n                        let needProof = needPop || accountChange;\n                        if (needProof && tonItem.params.ton_proof) {\n                            itmes.push(tonItem.params.ton_proof);\n                        }\n                        (0, utils_1.logDebug)(\"parseConnectResponse ton connect params: \", JSON.stringify(params));\n                        if ((0, media_1.isDevice)(\"mobile\")) {\n                            tonResult = (yield window.okxTonWallet.tonconnect.connect(2, params));\n                        }\n                        else {\n                            if (needPop || accountChange) {\n                                tonResult = (yield window.okxTonWallet.tonconnect.connect(2, params));\n                            }\n                            else {\n                                //No proof is needed here, the result is only used for address verification\n                                tonResult = (yield window.okxTonWallet.tonconnect.restoreConnection());\n                            }\n                        }\n                    }\n                    else {\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"manifestUrl is nil\");\n                    }\n                    if (signalChain && this.signalChainConnectResult) {\n                        tonResult = this.signalChainConnectResult;\n                        this.signalChainConnectResult = undefined;\n                    }\n                    (0, utils_1.logDebug)(\"parseConnectResponse ton connect result: \", JSON.stringify(tonResult));\n                    if (tonResult && tonItem) {\n                        if (tonResult.event === \"connect_error\") {\n                            throw new protocol_1.OKXConnectError(tonResult.payload.code, tonResult.payload.message);\n                        }\n                        else {\n                            let ton_addr = tonResult.payload.items.find(item => item.name === \"ton_addr\");\n                            let ton_proof = tonResult.payload.items.find(item => item.name === \"ton_proof\");\n                            (0, utils_1.logDebug)(\"tonprovider connect isSignalChain: \", signalChain);\n                            let nameSpaceResponse = {\n                                namespace: protocol_1.NameSpaceKeyTON,\n                                addresses: addresses,\n                                methods: [...InjectUtils_1.TONMethods],\n                                extra: extra,\n                                data: {\n                                    ton_addr: ton_addr,\n                                    ton_proof: ton_proof,\n                                    manifestUrl: dappInfo.manifestUrl\n                                }\n                            };\n                            return nameSpaceResponse;\n                        }\n                    }\n                }\n                return undefined;\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"tonprovider parseConnectResponse error: \", JSON.stringify(error));\n                throw error;\n            }\n        });\n    }\n    connect(nameSpace, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (nameSpace && dappInfo && dappInfo.manifestUrl && nameSpace.params) {\n                this.dappInfo = dappInfo;\n                let itmes = [nameSpace.params.ton_addr];\n                let params = {\n                    manifestUrl: dappInfo.manifestUrl,\n                    items: itmes\n                };\n                if (nameSpace.params.ton_proof) {\n                    itmes.push(nameSpace.params.ton_proof);\n                }\n                (0, utils_1.logDebug)(\"tonprovider connect params: \", JSON.stringify(params));\n                try {\n                    let tonResult = yield window.okxTonWallet.tonconnect.connect(2, params);\n                    (0, utils_1.logDebug)(\"tonprovider connect tonResult: \", JSON.stringify(tonResult));\n                    this.signalChainConnectResult = tonResult;\n                    return tonResult;\n                }\n                catch (error) {\n                    (0, utils_1.logDebug)(\"tonprovider connect error: \", JSON.stringify(error));\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"tonconnect error\");\n                }\n            }\n            else {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"manifestUrl or params is nil\");\n            }\n        });\n    }\n}\nexports.TONProvider = TONProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Eip155Provider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass Eip155Provider {\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                (0, utils_1.logDebug)(\"Eip155Provider send request:\", (0, utils_1.safeJsonStringify)(request));\n                yield this.restoreConnect(); //To initialize data in Discover\n                let ethParams = null;\n                switch (request.method) {\n                    case \"personal_sign\":\n                        if (request.params && \"message\" in request.params) {\n                            ethParams = {\n                                method: request.method,\n                                params: [\n                                    request.params.message,\n                                    request.address,\n                                ],\n                            };\n                        }\n                        break;\n                    case \"eth_sendTransaction\":\n                    case \"wallet_addEthereumChain\":\n                    case \"wallet_switchEthereumChain\":\n                        {\n                            if (request.params) {\n                                ethParams = {\n                                    method: request.method,\n                                    params: [request.params],\n                                };\n                            }\n                        }\n                        break;\n                    case \"eth_signTypedData_v4\":\n                        {\n                            if (request.params && \"typedDataJson\" in request.params && ((_a = request.params) === null || _a === void 0 ? void 0 : _a.typedDataJson) && typeof request.params.typedDataJson === \"string\") {\n                                ethParams = {\n                                    method: request.method,\n                                    params: [\n                                        request.address,\n                                        request.params.typedDataJson,\n                                    ],\n                                };\n                            }\n                        }\n                        break;\n                    case \"wallet_watchAsset\":\n                        {\n                            if (request.params) {\n                                ethParams = {\n                                    method: request.method,\n                                    params: request.params,\n                                };\n                            }\n                        }\n                        break;\n                    default:\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n                if (ethParams) {\n                    // 特殊处理 \"wallet_switchEthereumChain\"\n                    if ((request.method === \"wallet_switchEthereumChain\" || request.method === \"wallet_addEthereumChain\")\n                        && request.params\n                        && \"chainId\" in request.params) {\n                        (0, utils_1.logDebug)(\"Eip155Provider send request switch requestParams:\", (0, utils_1.safeJsonStringify)(ethParams));\n                        const switchChainId = parseInt(request.params.chainId, 16).toString();\n                        yield window.okxwallet.request(ethParams);\n                        const resultSwitch = `eip155:${switchChainId}:${request.address}`;\n                        (0, utils_1.logDebug)(\"Eip155Provider send request switch result:\", resultSwitch);\n                        return {\n                            result: resultSwitch,\n                            method: request.method,\n                        };\n                    }\n                    else {\n                        const chain = (0, utils_1.getChainId)(request.chainId);\n                        const chainHex = `0x${Number(chain).toString(16)}`;\n                        (0, utils_1.logDebug)(\"Eip155Provider current chainId:\", chain, chainHex);\n                        if (chainHex) {\n                            yield window.okxwallet.request({\n                                method: \"wallet_switchEthereumChain\",\n                                params: [{ chainId: chainHex }],\n                            });\n                            (0, utils_1.logDebug)(\"Eip155Provider send request requestParams:\", chainHex, (0, utils_1.safeJsonStringify)(ethParams));\n                            const resultMe = yield window.okxwallet.request(ethParams);\n                            (0, utils_1.logDebug)(\"Eip155Provider send request result:\", (0, utils_1.safeJsonStringify)(resultMe));\n                            return {\n                                result: resultMe,\n                                method: request.method,\n                            };\n                        }\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"Eip155Provider encountered an error:\", error);\n                throw error;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return window.okxwallet.request({ method: 'eth_requestAccounts' });\n        }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeyEip155) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                connectChain.forEach((chainStr) => {\n                    let currentChain = (0, utils_1.getChainId)(chainStr);\n                    let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                        return (addressItem.chainId === currentChain && addressItem.coinType === 60)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                    if (selectedAddress) {\n                        addresses.push(chainStr + \":\" + selectedAddress.address);\n                        extra[chainStr] = {\n                            publicKey: selectedAddress.publicKey\n                        };\n                    }\n                });\n                if (addresses && addresses.length > 0) {\n                    let nameSpaceResponse = {\n                        namespace: protocol_1.NameSpaceKeyEip155,\n                        addresses: addresses,\n                        methods: [...InjectUtils_1.Eip55Methods],\n                        extra: extra\n                    };\n                    return nameSpaceResponse;\n                }\n                return undefined;\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    connect(nameSpace, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return window.okxwallet.request({ method: 'eth_requestAccounts' });\n        });\n    }\n}\nexports.Eip155Provider = Eip155Provider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./eip155Provider\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuiProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass SuiProvider {\n    constructor() {\n        // const GlobalWallet: {\n        //     [key: string]: any;\n        //     register: (wallet: any) => void;\n        // } = {\n        //     register: (wallet) => {\n        //         GlobalWallet[wallet.chainName] = wallet; // 动态添加属性\n        //     },\n        // }\n        // const event = new CustomEvent('wallet-standard:app-ready', { detail: GlobalWallet });\n        // window.dispatchEvent(event);\n        // this.suiWallet = GlobalWallet[\"suiMainnet\"]\n    }\n    connectReady() {\n        return true;\n    }\n    getSuiPublicKey() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const suiAccount = yield this.connect(undefined);\n            let publicKey = suiAccount.accounts[0].publicKey;\n            return publicKey;\n        });\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeySui) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                if (connectChain.length == 0) {\n                    return undefined;\n                }\n                const suiPublicKey = yield this.getSuiPublicKey();\n                connectChain.forEach((chainStr) => {\n                    var _a;\n                    let currentChain = (0, utils_1.getChainId)(chainStr);\n                    let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                        return (addressItem.coinType === 784)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                    if (selectedAddress) {\n                        addresses.push(chainStr + \":\" + selectedAddress.address);\n                        extra[chainStr] = {\n                            publicKey: (_a = selectedAddress.publicKey) !== null && _a !== void 0 ? _a : suiPublicKey\n                        };\n                    }\n                });\n                if (addresses && addresses.length > 0) {\n                    let nameSpaceResponse = {\n                        namespace: protocol_1.NameSpaceKeySui,\n                        addresses: addresses,\n                        methods: [...InjectUtils_1.SuiMethods],\n                        extra: extra\n                    };\n                    return nameSpaceResponse;\n                }\n                return undefined;\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return this.connect(undefined);\n        }\n        return Promise.resolve();\n    }\n    getSuiWallet() {\n        return window.okxwallet.sui;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.restoreConnect();\n                (0, utils_1.logDebug)(\"suiProvider send request:\", JSON.stringify(request));\n                const method = request.method;\n                let result;\n                if (request.injectParams && this.getSuiWallet()) {\n                    let originalRarams = request.injectParams;\n                    switch (method) {\n                        case \"sui_signTransactionBlock\":\n                            const injectSignResult = yield this.getSuiWallet().features['sui:signTransactionBlock'].signTransactionBlock(originalRarams);\n                            //{transactionBlockBytes: 'AAACAAhmAAAAAAAAAAAgcveY+LcJkCRT1LtVxlZh6eBBVKUGdl…7bLNXSJ4Qz1jZurage0aGdH6Zb+4CAAAAAAAAIAo1AAAAAAAA', hash: '2pxcesyfKVCs3EegDYUDeQ28m3V3tn5VR32aUZSdg3dc', signature: 'ADDzSloxm5wEQX4BaTMJEON9t/xGgZ66ybiy5uT4TUimdl6Q9/…NeA3YOy/QsAD4XwjQ0rSuNkeKyfNy+VZPtJsmnKWswbGHSw=='}\n                            result = {\n                                method: \"sui_signTransactionBlock\",\n                                result: injectSignResult.signature\n                            };\n                            break;\n                        case \"sui_signAndExecuteTransactionBlock\":\n                            const injectSendResult = yield this.getSuiWallet().features['sui:signAndExecuteTransactionBlock'].signAndExecuteTransactionBlock(originalRarams);\n                            result = {\n                                method: \"sui_signAndExecuteTransactionBlock\",\n                                result: injectSendResult.digest\n                            };\n                            break;\n                        case \"sui_signMessage\":\n                            const injectResult = yield this.getSuiWallet().features['sui:signMessage'].signMessage(originalRarams);\n                            result = {\n                                method: \"sui_signMessage\",\n                                result: injectResult.signature\n                            };\n                            break;\n                        case \"sui_signPersonalMessage\":\n                            const injectPersonalResult = yield this.getSuiWallet().features['sui:signPersonalMessage'].signPersonalMessage(originalRarams);\n                            result = {\n                                method: \"sui_signPersonalMessage\",\n                                result: injectPersonalResult.signature\n                            };\n                            break;\n                    }\n                }\n                return result;\n            }\n            catch (e) {\n                (0, utils_1.logDebug)(\"suiProvider send error:\", e);\n                throw e;\n            }\n        });\n    }\n    connect(nameSpace, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            return (_a = this.getSuiWallet()) === null || _a === void 0 ? void 0 : _a.features['standard:connect'].connect();\n        });\n    }\n}\nexports.SuiProvider = SuiProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TON_CHAINS = exports.COSMOS_CHAINS = exports.APTOS_CHAINS = exports.SUI_CHAINS = exports.SOLANA_CHAINS = exports.BTC_CHAINS = void 0;\nexports.BTC_CHAINS = {\n    MAINNET: 'btc:mainnet',\n    FRACTAL: 'fractal:mainnet',\n};\nexports.SOLANA_CHAINS = {\n    MAINNET: 'solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp',\n    TESTNET: 'solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z',\n    SONIC_TESTNET: 'sonic:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z'\n};\nexports.SUI_CHAINS = {\n    MAINNET: 'sui:mainnet'\n};\nexports.APTOS_CHAINS = {\n    MAINNET: 'aptos:mainnet', // aptos mainnet\n    MOVEMENT_MAINNET: 'movement:mainnet',\n    MOVEMENT_TESTNET: 'movement:testnet',\n};\nexports.COSMOS_CHAINS = {\n    COSMOS_MAINNET: 'cosmos:cosmoshub-4'\n};\nexports.TON_CHAINS = {\n    MAINNET: 'ton:-239', // mainnet\n};\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IEngine = exports.ISignClient = exports.ISignClientEvents = exports.IEngineEvents = void 0;\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nclass IEngineEvents extends eventemitter3_1.default {\n    constructor() {\n        super();\n    }\n}\nexports.IEngineEvents = IEngineEvents;\nclass ISignClientEvents extends eventemitter3_1.default {\n    constructor() {\n        super();\n    }\n}\nexports.ISignClientEvents = ISignClientEvents;\nclass ISignClient {\n    constructor(data) {\n        this.data = data;\n    }\n}\nexports.ISignClient = ISignClient;\nclass IEngine {\n    constructor(client) {\n        this.client = client;\n    }\n}\nexports.IEngine = IEngine;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXWalletName = exports.creatOKXInjectWalletInfo = exports.creatOKXMiniAppWalletInfo = exports.creatOKXWalletInfo = exports.ISignClientEvents = exports.IEngine = exports.IEngineEvents = exports.ISignClient = exports.getBigIntRpcId = exports.formatJsonRpcRequest = exports.isJsonRpcError = exports.isJsonRpcResponse = exports.parseConnectionError = exports.isHttpUrl = exports.formatJsonRpcError = void 0;\nvar json_rpc_1 = require(\"./json-rpc\");\nObject.defineProperty(exports, \"formatJsonRpcError\", { enumerable: true, get: function () { return json_rpc_1.formatJsonRpcError; } });\nObject.defineProperty(exports, \"isHttpUrl\", { enumerable: true, get: function () { return json_rpc_1.isHttpUrl; } });\nObject.defineProperty(exports, \"parseConnectionError\", { enumerable: true, get: function () { return json_rpc_1.parseConnectionError; } });\nObject.defineProperty(exports, \"isJsonRpcResponse\", { enumerable: true, get: function () { return json_rpc_1.isJsonRpcResponse; } });\nObject.defineProperty(exports, \"isJsonRpcError\", { enumerable: true, get: function () { return json_rpc_1.isJsonRpcError; } });\nObject.defineProperty(exports, \"formatJsonRpcRequest\", { enumerable: true, get: function () { return json_rpc_1.formatJsonRpcRequest; } });\nObject.defineProperty(exports, \"getBigIntRpcId\", { enumerable: true, get: function () { return json_rpc_1.getBigIntRpcId; } });\nvar engine_1 = require(\"./engine\");\nObject.defineProperty(exports, \"ISignClient\", { enumerable: true, get: function () { return engine_1.ISignClient; } });\nObject.defineProperty(exports, \"IEngineEvents\", { enumerable: true, get: function () { return engine_1.IEngineEvents; } });\nObject.defineProperty(exports, \"IEngine\", { enumerable: true, get: function () { return engine_1.IEngine; } });\nObject.defineProperty(exports, \"ISignClientEvents\", { enumerable: true, get: function () { return engine_1.ISignClientEvents; } });\n__exportStar(require(\"./ton\"), exports);\nvar wallet_info_1 = require(\"./wallet-info\");\nObject.defineProperty(exports, \"creatOKXWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXWalletInfo; } });\nObject.defineProperty(exports, \"creatOKXMiniAppWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXMiniAppWalletInfo; } });\nObject.defineProperty(exports, \"creatOKXInjectWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXInjectWalletInfo; } });\nObject.defineProperty(exports, \"OKXWalletName\", { enumerable: true, get: function () { return wallet_info_1.OKXWalletName; } });\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isJsonRpcPayload = isJsonRpcPayload;\nexports.isJsonRpcRequest = isJsonRpcRequest;\nexports.isJsonRpcResponse = isJsonRpcResponse;\nexports.isJsonRpcResult = isJsonRpcResult;\nexports.isJsonRpcError = isJsonRpcError;\nexports.payloadId = payloadId;\nexports.getBigIntRpcId = getBigIntRpcId;\nexports.formatJsonRpcRequest = formatJsonRpcRequest;\nexports.formatJsonRpcResult = formatJsonRpcResult;\nexports.formatJsonRpcError = formatJsonRpcError;\nexports.isReservedErrorCode = isReservedErrorCode;\nexports.getError = getError;\nexports.getErrorByCode = getErrorByCode;\nexports.formatErrorMessage = formatErrorMessage;\nexports.isHttpUrl = isHttpUrl;\nexports.isWsUrl = isWsUrl;\nexports.parseConnectionError = parseConnectionError;\nfunction isJsonRpcPayload(payload) {\n    return (typeof payload === \"object\" &&\n        \"id\" in payload &&\n        \"jsonrpc\" in payload &&\n        payload.jsonrpc === \"2.0\");\n}\nfunction isJsonRpcRequest(payload) {\n    return isJsonRpcPayload(payload) && \"method\" in payload;\n}\nfunction isJsonRpcResponse(payload) {\n    return isJsonRpcPayload(payload) && (isJsonRpcResult(payload) || isJsonRpcError(payload));\n}\nfunction isJsonRpcResult(payload) {\n    return \"result\" in payload;\n}\nfunction isJsonRpcError(payload) {\n    return \"error\" in payload;\n}\nconst okx_connect_error_1 = require(\"../error/okx-connect.error\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nclass IncrementalRandomGenerator {\n    constructor(bits) {\n        this.i = 1;\n        const typedArray = bits === 8 ? new Uint8Array(1) : bits === 16 ? new Uint16Array(1) : new Uint32Array(1);\n        if (bits) {\n            this.initialValue = tweetnacl_1.default.randomBytes(bits / 8)[0];\n        }\n        else {\n            this.initialValue = 0;\n        }\n    }\n    getNextValue() {\n        return this.initialValue + this.i++;\n    }\n}\nconst uint8Generator = new IncrementalRandomGenerator(8);\nconst uint16Generator = new IncrementalRandomGenerator(16);\nfunction payloadId() {\n    const date = Date.now() * 1000;\n    const extra = uint8Generator.getNextValue();\n    return date + extra;\n}\nfunction getBigIntRpcId() {\n    const date = BigInt(Date.now()) * BigInt(1000000);\n    const extra = BigInt(uint16Generator.getNextValue());\n    return date + extra;\n}\nfunction formatJsonRpcRequest(method, params, id) {\n    return {\n        id: id || payloadId(),\n        jsonrpc: \"2.0\",\n        method,\n        params,\n    };\n}\nfunction formatJsonRpcResult(id, result) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        result,\n    };\n}\nfunction formatJsonRpcError(id, error, data) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        error: formatErrorMessage(error, data),\n    };\n}\nfunction isReservedErrorCode(code) {\n    return okx_connect_error_1.RESERVED_ERROR_CODES.includes(code);\n}\nfunction getError(type) {\n    if (!Object.keys(okx_connect_error_1.STANDARD_ERROR_MAP).includes(type)) {\n        return okx_connect_error_1.STANDARD_ERROR_MAP[okx_connect_error_1.DEFAULT_ERROR];\n    }\n    return okx_connect_error_1.STANDARD_ERROR_MAP[type];\n}\nfunction getErrorByCode(code) {\n    const match = Object.values(okx_connect_error_1.STANDARD_ERROR_MAP).find((e) => e.code === code);\n    if (!match) {\n        return okx_connect_error_1.STANDARD_ERROR_MAP[okx_connect_error_1.DEFAULT_ERROR];\n    }\n    return match;\n}\nfunction formatErrorMessage(error, data) {\n    if (typeof error === \"undefined\") {\n        return getError(okx_connect_error_1.INTERNAL_ERROR);\n    }\n    if (typeof error === \"string\") {\n        error = Object.assign(Object.assign({}, getError(okx_connect_error_1.SERVER_ERROR)), { message: error });\n    }\n    if (typeof data !== \"undefined\") {\n        error.data = data;\n    }\n    if (isReservedErrorCode(error.code)) {\n        error = getErrorByCode(error.code);\n    }\n    return error;\n}\nfunction getUrlProtocol(url) {\n    const matches = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!matches || !matches.length)\n        return;\n    return matches[0];\n}\nfunction matchRegexProtocol(url, regex) {\n    const protocol = getUrlProtocol(url);\n    if (typeof protocol === \"undefined\")\n        return false;\n    return new RegExp(regex).test(protocol);\n}\nfunction isHttpUrl(url) {\n    return matchRegexProtocol(url, \"^https?:\");\n}\nfunction isWsUrl(url) {\n    return matchRegexProtocol(url, \"^wss?:\");\n}\nfunction parseConnectionError(e, url, type) {\n    return e.message.includes(\"getaddrinfo ENOTFOUND\") || e.message.includes(\"connect ECONNREFUSED\")\n        ? new Error(`Unavailable ${type} RPC url at ${url}`)\n        : e;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_ITEM_ERROR_CODES = void 0;\nvar CONNECT_ITEM_ERROR_CODES;\n(function (CONNECT_ITEM_ERROR_CODES) {\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(CONNECT_ITEM_ERROR_CODES || (exports.CONNECT_ITEM_ERROR_CODES = CONNECT_ITEM_ERROR_CODES = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TONCHAIN = void 0;\nvar TONCHAIN;\n(function (TONCHAIN) {\n    TONCHAIN[\"MAINNET\"] = \"-239\";\n})(TONCHAIN || (exports.TONCHAIN = TONCHAIN = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_ITEM_ERROR_CODES = exports.TONCHAIN = void 0;\nvar connect_wallet_1 = require(\"./connect-wallet\");\nObject.defineProperty(exports, \"TONCHAIN\", { enumerable: true, get: function () { return connect_wallet_1.TONCHAIN; } });\nvar connect_event_1 = require(\"./connect-event\");\nObject.defineProperty(exports, \"CONNECT_ITEM_ERROR_CODES\", { enumerable: true, get: function () { return connect_event_1.CONNECT_ITEM_ERROR_CODES; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXInjectWalletName = exports.OKXMiniWalletName = exports.OKXWalletName = void 0;\nexports.creatOKXWalletInfo = creatOKXWalletInfo;\nexports.creatOKXMiniAppWalletInfo = creatOKXMiniAppWalletInfo;\nexports.creatOKXInjectWalletInfo = creatOKXInjectWalletInfo;\nexports.OKXWalletName = \"OKX Wallet\";\nexports.OKXMiniWalletName = \"OKX Mini Wallet\";\nexports.OKXInjectWalletName = \"OKX Inject Wallet\";\nfunction creatOKXWalletInfo() {\n    return {\n        \"appName\": \"okxAppWallet\",\n        \"name\": exports.OKXWalletName,\n        \"imageUrl\": \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\"\n    };\n}\nfunction creatOKXMiniAppWalletInfo() {\n    return {\n        \"appName\": \"okxMiniApp\",\n        \"name\": exports.OKXMiniWalletName,\n        \"imageUrl\": \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\"\n    };\n}\nfunction creatOKXInjectWalletInfo() {\n    return {\n        \"appName\": \"okxInjectWallet\",\n        \"name\": exports.OKXInjectWalletName,\n        \"imageUrl\": \"\"\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_MINI_WALLET_NAME = exports.OKX_APP_WALLET_NAME = exports.stackDeepLink = exports.tgwalletAppName = exports.tgwalletName = exports.tonConnectSdkVersion = exports.shortUniversalLink = exports.standardDeeplink = exports.downloadUrl = exports.standardUniversalLink = exports.okxDeeplink = void 0;\nexports.getTestTwaUrl = getTestTwaUrl;\nexports.getTestTgTwaUrl = getTestTgTwaUrl;\nexports.getBotNameAndAppName = getBotNameAndAppName;\nexports.okxDeeplink = 'okx://web3';\nexports.standardUniversalLink = typeof window !== \"undefined\" && window.location.hostname.includes(\"okx.com\")\n    ? \"https://link.okx.com/download\"\n    : \"https://www.okx.com/download\";\nexports.downloadUrl = \"https://www.okx.com/download\";\n// export const standardUniversalLink = 'http://localhost:5173';\nexports.standardDeeplink = `${exports.okxDeeplink}/wallet/connect`;\nexports.shortUniversalLink = `https://www.okx.com/ul/connect`;\n// export const standardDeeplink = 'http://localhost:5173';\nexports.tonConnectSdkVersion = '1';\n// export const tgwalletName: string = \"TCTestqdqwdqwdqBot\"\nexports.tgwalletName = \"OKX_WALLET_BOT\";\nexports.tgwalletAppName = \"start\";\n// https://t.me/OKX_WALLET_BOT/start\nexports.stackDeepLink = 'okx://web3?stack=true';\nfunction getTestTwaUrl() {\n    return window.okxTesttwaUrl;\n}\nfunction getTestTgTwaUrl() {\n    return window.okxTestTgtwaUrl;\n}\nfunction getBotNameAndAppName(url) {\n    const urlObj = new URL(url);\n    const pathnameParts = urlObj.pathname.split('/').filter(Boolean);\n    if (pathnameParts.length >= 2) {\n        const botName = pathnameParts[0]; // 获取 'test_12312313123_bot'\n        const appName = pathnameParts[1]; // 获取 'testtest'\n        return { botName, appName };\n    }\n}\nexports.OKX_APP_WALLET_NAME = 'OKX Wallet';\nexports.OKX_MINI_WALLET_NAME = 'OKX Mini Wallet';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_CONNECT_ERROR_CODES = exports.OKXConnectError = void 0;\nvar okx_connect_error_1 = require(\"./okx-connect.error\");\nObject.defineProperty(exports, \"OKXConnectError\", { enumerable: true, get: function () { return okx_connect_error_1.OKXConnectError; } });\nObject.defineProperty(exports, \"OKX_CONNECT_ERROR_CODES\", { enumerable: true, get: function () { return okx_connect_error_1.OKX_CONNECT_ERROR_CODES; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_ERROR = exports.STANDARD_ERROR_MAP = exports.SERVER_ERROR_CODE_RANGE = exports.RESERVED_ERROR_CODES = exports.SERVER_ERROR = exports.INTERNAL_ERROR = exports.INVALID_PARAMS = exports.METHOD_NOT_FOUND = exports.INVALID_REQUEST = exports.PARSE_ERROR = exports.OKX_CONNECT_ERROR_CODES = exports.OKXConnectError = void 0;\nclass OKXConnectError extends Error {\n    constructor(code, message) {\n        if (message == undefined) {\n            message = getDefaultMessageByCode(code);\n        }\n        super(message);\n        this.code = code;\n        this.message = `${OKXConnectError.prefix} ${message ? '\\n' + message : ''}`;\n        Object.setPrototypeOf(this, OKXConnectError.prototype);\n    }\n    toJSON() {\n        return {\n            message: this.message,\n            code: this.code\n        };\n    }\n}\nexports.OKXConnectError = OKXConnectError;\nOKXConnectError.prefix = '[OKX_CONNECT_SDK_ERROR]';\nfunction getDefaultMessageByCode(code) {\n    if (code == OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR) {\n        return \"unknown error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR) {\n        return \"bad request error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.ALREADY_CONNECTED_ERROR) {\n        return \"already connected error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR) {\n        return \"not connected error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.UNKNOWN_APP_ERROR) {\n        return \"unknown app error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n        return \"user rejects error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR_CAUSE_REGISTER) {\n        return \"wallet address are registering\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED) {\n        return \"method not supported\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.CONNECTION_ERROR) {\n        return \"connect error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED) {\n        return \"chain not supported\";\n    }\n    return \"unknown error\";\n}\nvar OKX_CONNECT_ERROR_CODES;\n(function (OKX_CONNECT_ERROR_CODES) {\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"BAD_REQUEST_ERROR\"] = 1] = \"BAD_REQUEST_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"ALREADY_CONNECTED_ERROR\"] = 11] = \"ALREADY_CONNECTED_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"NOT_CONNECTED_ERROR\"] = 12] = \"NOT_CONNECTED_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"UNKNOWN_APP_ERROR\"] = 100] = \"UNKNOWN_APP_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"USER_REJECTS_ERROR\"] = 300] = \"USER_REJECTS_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"USER_REJECTS_ERROR_CAUSE_REGISTER\"] = 301] = \"USER_REJECTS_ERROR_CAUSE_REGISTER\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"CHAIN_NOT_SUPPORTED\"] = 500] = \"CHAIN_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"WALLET_NOT_SUPPORTED\"] = 600] = \"WALLET_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"CONNECTION_ERROR\"] = 700] = \"CONNECTION_ERROR\";\n})(OKX_CONNECT_ERROR_CODES || (exports.OKX_CONNECT_ERROR_CODES = OKX_CONNECT_ERROR_CODES = {}));\nexports.PARSE_ERROR = \"PARSE_ERROR\";\nexports.INVALID_REQUEST = \"INVALID_REQUEST\";\nexports.METHOD_NOT_FOUND = \"METHOD_NOT_FOUND\";\nexports.INVALID_PARAMS = \"INVALID_PARAMS\";\nexports.INTERNAL_ERROR = \"INTERNAL_ERROR\";\nexports.SERVER_ERROR = \"SERVER_ERROR\";\nexports.RESERVED_ERROR_CODES = [-32700, -32600, -32601, -32602, -32603];\nexports.SERVER_ERROR_CODE_RANGE = [-32000, -32099];\nexports.STANDARD_ERROR_MAP = {\n    [exports.PARSE_ERROR]: { code: -32700, message: \"Parse error\" },\n    [exports.INVALID_REQUEST]: { code: -32600, message: \"Invalid Request\" },\n    [exports.METHOD_NOT_FOUND]: { code: -32601, message: \"Method not found\" },\n    [exports.INVALID_PARAMS]: { code: -32602, message: \"Invalid params\" },\n    [exports.INTERNAL_ERROR]: { code: -32603, message: \"Internal error\" },\n    [exports.SERVER_ERROR]: { code: -32000, message: \"Server error\" },\n};\nexports.DEFAULT_ERROR = exports.SERVER_ERROR;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TON_CHAINS = exports.COSMOS_CHAINS = exports.APTOS_CHAINS = exports.SUI_CHAINS = exports.SOLANA_CHAINS = exports.BTC_CHAINS = exports.downloadUrl = exports.okxDeeplink = exports.tonConnectSdkVersion = exports.standardDeeplink = exports.standardUniversalLink = exports.NameSpaceKeyStarknet = exports.NameSpaceKeyTron = exports.NameSpaceKeyCosmos = exports.NameSpaceKeyAptos = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.NameSpaceKeyTON = exports.NameSpaceKeySOL = exports.NameSpaceKeyEip155 = void 0;\n__exportStar(require(\"./error\"), exports);\nvar misc_1 = require(\"./misc\");\nObject.defineProperty(exports, \"NameSpaceKeyEip155\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyEip155; } });\nObject.defineProperty(exports, \"NameSpaceKeySOL\", { enumerable: true, get: function () { return misc_1.NameSpaceKeySOL; } });\nObject.defineProperty(exports, \"NameSpaceKeyTON\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyTON; } });\nObject.defineProperty(exports, \"NameSpaceKeySui\", { enumerable: true, get: function () { return misc_1.NameSpaceKeySui; } });\nObject.defineProperty(exports, \"NameSpaceKeyBtc\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyBtc; } });\nObject.defineProperty(exports, \"NameSpaceKeyAptos\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyAptos; } });\nObject.defineProperty(exports, \"NameSpaceKeyCosmos\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyCosmos; } });\nObject.defineProperty(exports, \"NameSpaceKeyTron\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyTron; } });\nObject.defineProperty(exports, \"NameSpaceKeyStarknet\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyStarknet; } });\nvar constants_1 = require(\"./constants\");\nObject.defineProperty(exports, \"standardUniversalLink\", { enumerable: true, get: function () { return constants_1.standardUniversalLink; } });\nObject.defineProperty(exports, \"standardDeeplink\", { enumerable: true, get: function () { return constants_1.standardDeeplink; } });\nObject.defineProperty(exports, \"tonConnectSdkVersion\", { enumerable: true, get: function () { return constants_1.tonConnectSdkVersion; } });\nObject.defineProperty(exports, \"okxDeeplink\", { enumerable: true, get: function () { return constants_1.okxDeeplink; } });\nObject.defineProperty(exports, \"downloadUrl\", { enumerable: true, get: function () { return constants_1.downloadUrl; } });\n__exportStar(require(\"./connect\"), exports);\nvar chains_1 = require(\"./chains\");\nObject.defineProperty(exports, \"BTC_CHAINS\", { enumerable: true, get: function () { return chains_1.BTC_CHAINS; } });\nObject.defineProperty(exports, \"SOLANA_CHAINS\", { enumerable: true, get: function () { return chains_1.SOLANA_CHAINS; } });\nObject.defineProperty(exports, \"SUI_CHAINS\", { enumerable: true, get: function () { return chains_1.SUI_CHAINS; } });\nObject.defineProperty(exports, \"APTOS_CHAINS\", { enumerable: true, get: function () { return chains_1.APTOS_CHAINS; } });\nObject.defineProperty(exports, \"COSMOS_CHAINS\", { enumerable: true, get: function () { return chains_1.COSMOS_CHAINS; } });\nObject.defineProperty(exports, \"TON_CHAINS\", { enumerable: true, get: function () { return chains_1.TON_CHAINS; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NameSpaceKeyStarknet = exports.NameSpaceKeyTron = exports.NameSpaceKeyCosmos = exports.NameSpaceKeyAptos = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.NameSpaceKeyTON = exports.NameSpaceKeySOL = exports.NameSpaceKeyEip155 = void 0;\nexports.NameSpaceKeyEip155 = \"eip155\";\nexports.NameSpaceKeySOL = \"solana\";\nexports.NameSpaceKeyTON = \"ton\";\nexports.NameSpaceKeySui = \"sui\";\nexports.NameSpaceKeyBtc = \"btc\";\nexports.NameSpaceKeyAptos = \"aptos\";\nexports.NameSpaceKeyCosmos = \"cosmos\";\nexports.NameSpaceKeyTron = \"tron\";\nexports.NameSpaceKeyStarknet = \"starknet\";\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.callForSuccess = callForSuccess;\nexports.delay = delay;\n/**\n * Function to call ton api until we get response.\n * Because ton network is pretty unstable we need to make sure response is final.\n * @param {T} fn - function to call\n * @param {CallForSuccessOptions} [options] - optional configuration options\n */\nfunction callForSuccess(fn, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b;\n        const attempts = (_a = options === null || options === void 0 ? void 0 : options.attempts) !== null && _a !== void 0 ? _a : 3;\n        const delayMs = (_b = options === null || options === void 0 ? void 0 : options.delayMs) !== null && _b !== void 0 ? _b : 800;\n        if (typeof fn !== 'function') {\n            throw new Error(`Expected a function, got ${typeof fn}`);\n        }\n        let i = 0;\n        let lastError;\n        while (i < attempts) {\n            try {\n                return yield fn();\n            }\n            catch (err) {\n                lastError = err;\n                i++;\n                if (i < attempts) {\n                    yield delay(delayMs);\n                }\n            }\n        }\n        throw lastError;\n    });\n}\n/**\n * Delays the execution of code for a specified number of milliseconds.\n * @param {number} timeout - The number of milliseconds to delay the execution.\n * @param {DelayOptions} [options] - Optional configuration options for the delay.\n * @return {Promise<void>} - A promise that resolves after the specified delay, or rejects if the delay is aborted.\n */\nfunction delay(timeout, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            var _a, _b;\n            if ((_a = options === null || options === void 0 ? void 0 : options.signal) === null || _a === void 0 ? void 0 : _a.aborted) {\n                reject(new Error('Delay aborted'));\n                return;\n            }\n            const timeoutId = setTimeout(() => resolve(), timeout);\n            (_b = options === null || options === void 0 ? void 0 : options.signal) === null || _b === void 0 ? void 0 : _b.addEventListener('abort', () => {\n                clearTimeout(timeoutId);\n                reject(new Error('Delay aborted'));\n            });\n        });\n    });\n}\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.chainName2IdMap = exports.replaceChainIdToChainName = exports.replaceChainNameToChainId = exports.checkMetaData = exports.versionCompare = exports.isBrowser = exports.isOS = exports.isMobileUserAgent = exports.openDeeplinkWithFallback = exports.openLinkBlank = exports.openLink = exports.getChainId = exports.useShortLink = exports.toSafeBase64FromBase64 = exports.isValidObject = exports.isIos = exports.base64decode = exports.base64encode = exports.splitToUint8Arrays = exports.concatUint8Arrays = exports.toHexString = exports.hexToByteArray = exports.getOKXLink = exports.openOKXUniversalLink = exports.getAppWalletShortDeepLink = exports.encodeTWAConnectURLParams = exports.encodeConnectParams = exports.openOKXTMAWalletlinkWithFallback = exports.getTelegramWalletTWAUrl = exports.getAppWalletDeepLink = exports.encodeTelegramUrlParameters = exports.isTelegramUrl = exports.openOKXDeeplinkWithFallback = exports.openOKXDeeplink = exports.getUniversalLink = exports.safeJsonStringify = exports.safeJsonParse = exports.getDefaultReporter = exports.reportEvent = exports.reportLog = exports.logWarning = exports.logError = exports.logDebug = exports.callForSuccess = void 0;\nvar call_for_success_1 = require(\"./call-for-success\");\nObject.defineProperty(exports, \"callForSuccess\", { enumerable: true, get: function () { return call_for_success_1.callForSuccess; } });\nvar log_1 = require(\"./log\");\nObject.defineProperty(exports, \"logDebug\", { enumerable: true, get: function () { return log_1.logDebug; } });\nObject.defineProperty(exports, \"logError\", { enumerable: true, get: function () { return log_1.logError; } });\nObject.defineProperty(exports, \"logWarning\", { enumerable: true, get: function () { return log_1.logWarning; } });\nObject.defineProperty(exports, \"reportLog\", { enumerable: true, get: function () { return log_1.reportLog; } });\nObject.defineProperty(exports, \"reportEvent\", { enumerable: true, get: function () { return log_1.reportEvent; } });\nObject.defineProperty(exports, \"getDefaultReporter\", { enumerable: true, get: function () { return log_1.getDefaultReporter; } });\n__exportStar(require(\"./reportconstants\"), exports);\n__exportStar(require(\"./report\"), exports);\nvar safejson_1 = require(\"./safejson\");\nObject.defineProperty(exports, \"safeJsonParse\", { enumerable: true, get: function () { return safejson_1.safeJsonParse; } });\nObject.defineProperty(exports, \"safeJsonStringify\", { enumerable: true, get: function () { return safejson_1.safeJsonStringify; } });\nvar url_1 = require(\"./url\");\nObject.defineProperty(exports, \"getUniversalLink\", { enumerable: true, get: function () { return url_1.getUniversalLink; } });\nObject.defineProperty(exports, \"openOKXDeeplink\", { enumerable: true, get: function () { return url_1.openOKXDeeplink; } });\nObject.defineProperty(exports, \"openOKXDeeplinkWithFallback\", { enumerable: true, get: function () { return url_1.openOKXDeeplinkWithFallback; } });\nObject.defineProperty(exports, \"isTelegramUrl\", { enumerable: true, get: function () { return url_1.isTelegramUrl; } });\nObject.defineProperty(exports, \"encodeTelegramUrlParameters\", { enumerable: true, get: function () { return url_1.encodeTelegramUrlParameters; } });\nObject.defineProperty(exports, \"getAppWalletDeepLink\", { enumerable: true, get: function () { return url_1.getAppWalletDeepLink; } });\nObject.defineProperty(exports, \"getTelegramWalletTWAUrl\", { enumerable: true, get: function () { return url_1.getTelegramWalletTWAUrl; } });\nObject.defineProperty(exports, \"openOKXTMAWalletlinkWithFallback\", { enumerable: true, get: function () { return url_1.openOKXTMAWalletlinkWithFallback; } });\nObject.defineProperty(exports, \"encodeConnectParams\", { enumerable: true, get: function () { return url_1.encodeConnectParams; } });\nObject.defineProperty(exports, \"encodeTWAConnectURLParams\", { enumerable: true, get: function () { return url_1.encodeTWAConnectURLParams; } });\nObject.defineProperty(exports, \"getAppWalletShortDeepLink\", { enumerable: true, get: function () { return url_1.getAppWalletShortDeepLink; } });\nObject.defineProperty(exports, \"openOKXUniversalLink\", { enumerable: true, get: function () { return url_1.openOKXUniversalLink; } });\nObject.defineProperty(exports, \"getOKXLink\", { enumerable: true, get: function () { return url_1.getOKXLink; } });\nvar utils_1 = require(\"./utils\");\nObject.defineProperty(exports, \"hexToByteArray\", { enumerable: true, get: function () { return utils_1.hexToByteArray; } });\nObject.defineProperty(exports, \"toHexString\", { enumerable: true, get: function () { return utils_1.toHexString; } });\nObject.defineProperty(exports, \"concatUint8Arrays\", { enumerable: true, get: function () { return utils_1.concatUint8Arrays; } });\nObject.defineProperty(exports, \"splitToUint8Arrays\", { enumerable: true, get: function () { return utils_1.splitToUint8Arrays; } });\nObject.defineProperty(exports, \"base64encode\", { enumerable: true, get: function () { return utils_1.base64encode; } });\nObject.defineProperty(exports, \"base64decode\", { enumerable: true, get: function () { return utils_1.base64decode; } });\nObject.defineProperty(exports, \"isIos\", { enumerable: true, get: function () { return utils_1.isIos; } });\nObject.defineProperty(exports, \"isValidObject\", { enumerable: true, get: function () { return utils_1.isValidObject; } });\nObject.defineProperty(exports, \"toSafeBase64FromBase64\", { enumerable: true, get: function () { return utils_1.toSafeBase64FromBase64; } });\nObject.defineProperty(exports, \"useShortLink\", { enumerable: true, get: function () { return utils_1.useShortLink; } });\nObject.defineProperty(exports, \"getChainId\", { enumerable: true, get: function () { return utils_1.getChainId; } });\nvar web_api_1 = require(\"./web-api\");\nObject.defineProperty(exports, \"openLink\", { enumerable: true, get: function () { return web_api_1.openLink; } });\nObject.defineProperty(exports, \"openLinkBlank\", { enumerable: true, get: function () { return web_api_1.openLinkBlank; } });\nObject.defineProperty(exports, \"openDeeplinkWithFallback\", { enumerable: true, get: function () { return web_api_1.openDeeplinkWithFallback; } });\nObject.defineProperty(exports, \"isMobileUserAgent\", { enumerable: true, get: function () { return web_api_1.isMobileUserAgent; } });\nObject.defineProperty(exports, \"isOS\", { enumerable: true, get: function () { return web_api_1.isOS; } });\nObject.defineProperty(exports, \"isBrowser\", { enumerable: true, get: function () { return web_api_1.isBrowser; } });\nvar tma_api_1 = require(\"./tma-api\");\nObject.defineProperty(exports, \"versionCompare\", { enumerable: true, get: function () { return tma_api_1.versionCompare; } });\nvar request_1 = require(\"./request\");\nObject.defineProperty(exports, \"checkMetaData\", { enumerable: true, get: function () { return request_1.checkMetaData; } });\nvar utils_2 = require(\"./utils\");\nObject.defineProperty(exports, \"replaceChainNameToChainId\", { enumerable: true, get: function () { return utils_2.replaceChainNameToChainId; } });\nObject.defineProperty(exports, \"replaceChainIdToChainName\", { enumerable: true, get: function () { return utils_2.replaceChainIdToChainName; } });\nObject.defineProperty(exports, \"chainName2IdMap\", { enumerable: true, get: function () { return utils_2.chainName2IdMap; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getDefaultReporter = getDefaultReporter;\nexports.logDebug = logDebug;\nexports.logError = logError;\nexports.logWarning = logWarning;\nexports.reportEvent = reportEvent;\nexports.reportLog = reportLog;\nconst debug = false;\nconst forceReport = false;\nconst report_1 = require(\"./report\");\nconst defaultReporter = new report_1.OKXReporter();\nfunction getDefaultReporter() {\n    return defaultReporter;\n}\nconst packageJson = require('../../package.json');\nconst version = packageJson.version;\nfunction logDebug(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.log(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction logError(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.error(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n            if (forceReport || !debug) {\n                let content = '';\n                content += [...args].reduce((result, item) => {\n                    if (typeof item == 'string') {\n                        result += ',' + item;\n                    }\n                    else if (typeof item == 'object') {\n                        result += JSON.stringify(item);\n                    }\n                });\n                defaultReporter.sendRecordContent(content, report_1.OKXReportType.LOG, '');\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction logWarning(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.warn(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction reportEvent(type, action, content) {\n    return __awaiter(this, void 0, void 0, function* () {\n        yield defaultReporter.sendRecordContent(content, type, action);\n    });\n}\nfunction reportLog(content_1) {\n    return __awaiter(this, arguments, void 0, function* (content, action = 'default') {\n        // await defaultReporter.sendRecordContent(content, OKXReportType.LOG, action)\n    });\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mediaNotTouch = exports.mediaTouch = exports.maxWidth = void 0;\nexports.isDevice = isDevice;\nexports.media = media;\nexports.mediaMin = mediaMin;\nexports.mediaMax = mediaMax;\nexports.mediaMinMax = mediaMinMax;\nconst web_api_1 = require(\"../utils/web-api\");\nconst tma_api_1 = require(\"../utils/tma-api\");\nconst url_1 = require(\"./url\");\nconst log_1 = require(\"./log\");\nexports.maxWidth = {\n    mobile: 440,\n    tablet: 1020\n};\nfunction isDevice(device) {\n    var _a;\n    const window = (0, url_1.getWindow)();\n    if (!window) {\n        return device === 'desktop';\n    }\n    // TODO: remove this check when weba will fix viewport width\n    if ((0, tma_api_1.isTmaPlatform)('weba')) {\n        return true;\n    }\n    const width = window.innerWidth;\n    switch (device) {\n        case 'desktop':\n            return width > exports.maxWidth.tablet;\n        case 'tablet':\n            return width > exports.maxWidth.mobile;\n        default:\n        case 'mobile':\n            let isMobile = width <= exports.maxWidth.mobile || (0, web_api_1.isOS)('ios', 'android', 'ipad');\n            if (isMobile) {\n                const isTelegram = !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n                const maxTouchPoints = navigator.maxTouchPoints || 0;\n                if (isTelegram && maxTouchPoints === 0) {\n                    isMobile = false;\n                }\n                (0, log_1.logDebug)(\"isDevice mobile isTelegram and maxTouchPoints:\", isMobile, isTelegram, maxTouchPoints);\n            }\n            return isMobile;\n    }\n}\nfunction media(device) {\n    switch (device) {\n        case 'mobile':\n            return `@media (max-width: ${exports.maxWidth.mobile}px)`;\n        case 'tablet':\n            return `@media (max-width: ${exports.maxWidth.tablet}px) (min-width: ${exports.maxWidth.mobile}px)`;\n        default:\n        case 'desktop':\n            return `@media (min-width: ${exports.maxWidth.tablet}px)`;\n    }\n}\nfunction mediaMin(px) {\n    return `@media (min-width: ${px}px)`;\n}\nfunction mediaMax(px) {\n    return `@media (max-width: ${px}px)`;\n}\nfunction mediaMinMax(pxMin, pxMax) {\n    return `@media (min-width: ${pxMin}px) and (max-width: ${pxMax}px)`;\n}\nexports.mediaTouch = '@media (hover: none)';\nexports.mediaNotTouch = '@media not all and (hover: none)';\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXReporter = exports.OKXReportSide = exports.OKXReportType = exports.versionStr = void 0;\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst log_1 = require(\"./log\");\nconst url_1 = require(\"./url\");\nconst utils_1 = require(\"../utils\");\nconst localforage_1 = __importDefault(require(\"localforage\"));\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nexports.versionStr = '1.7.0';\nconst reportApiList = [\n    'https://www.okx.com/dappstat/wallet-connect',\n    'https://www.okx.ac/dappstat/wallet-connect'\n];\nconst reportCacheKey = 'OKX_RP_CK';\nconst reportUUIDKey = 'OKX_RP_UUID_CK';\nconst MAX_LIMIT_REPORTCOUNT = 100;\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"*/*\",\n    \"Content-Type\": \"text/plain\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\nexports.OKXReportType = {\n    PAGE_IN: 'page_in',\n    PAGE_OUT: 'page_out',\n    CLICK: 'click',\n    LOG: 'log',\n};\nexports.OKXReportSide = {\n    DAPP: 'dapp',\n    WALLET: 'wallet',\n};\nclass IReporter {\n}\nconst fetchWithTimeout = (url, options, timeout = 5000) => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n    const fetchPromise = (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, options), { signal }));\n    const timeoutPromise = new Promise((_, reject) => setTimeout(() => {\n        controller.abort();\n        reject(new Error('Request timed out'));\n    }, timeout));\n    return Promise.race([fetchPromise, timeoutPromise]);\n};\nconst fetchListWithTimeout = (urls_1, ...args_1) => __awaiter(void 0, [urls_1, ...args_1], void 0, function* (urls, options = {}, timeout = 5000) {\n    for (const url of urls) {\n        try {\n            const controller = new AbortController();\n            const signal = controller.signal;\n            const fetchPromise = (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, options), { signal }));\n            const timeoutPromise = new Promise((_, reject) => setTimeout(() => {\n                controller.abort();\n                reject(new Error('Request timed out'));\n            }, timeout));\n            const response = yield Promise.race([fetchPromise, timeoutPromise]);\n            if (response.ok) {\n                return response;\n            }\n            if (response.status == 502) {\n                console.error(`Fetch error status 502`, url);\n                return response;\n            }\n        }\n        catch (error) {\n            console.error(`Fetch error for ${url}:`, error);\n        }\n    }\n    console.error(`'All fetch attempts failed.'`);\n    throw new Error('All fetch attempts failed.');\n});\nclass OKXReporter {\n    constructor() {\n        this.currentSide = exports.OKXReportSide.DAPP;\n        this.currentVersion = exports.versionStr;\n        this.storage = localforage_1.default.createInstance({\n            name: \"OKXReporter\"\n        });\n        this.recordList = new Array();\n        this.currentUUID = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(16));\n    }\n    configVersionAndSide(version, side, appname) {\n        this.currentVersion = version;\n        this.currentSide = side;\n        this.appName = appname;\n    }\n    get recordCacheKey() {\n        return reportCacheKey + \"@\" + this.appName;\n    }\n    get reportPlatform() {\n        if ((0, utils_1.isMobileUserAgent)()) {\n            if ((0, utils_1.isIos)()) {\n                return 'iOS';\n            }\n            else {\n                return 'android';\n            }\n        }\n        else {\n            return 'pc';\n        }\n    }\n    beginReport() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.startErrorCatching();\n            let records = yield this.storage.getItem(this.recordCacheKey);\n            let uuid = yield this.storage.getItem(reportUUIDKey);\n            if (uuid) {\n                this.currentUUID = uuid;\n            }\n            else {\n                this.storage.setItem(reportUUIDKey, this.currentUUID);\n            }\n            if (records) {\n                this.recordList = records;\n                (0, log_1.logDebug)('resume records from cache length: ', this.recordList.length);\n                yield this.sendCachedRecords();\n            }\n        });\n    }\n    startErrorCatching() {\n        let window = (0, url_1.getWindow)();\n        if (window) {\n            (0, log_1.logDebug)('begin capture console error');\n            // window.onerror = (event: Event | string, source?: string, lineno?: number, colno?: number, error?: Error) => {\n            //     logDebug('capture error info:', error, source)\n            //     this.markRecord(error?.message+'/'+error?.name+'/'+error?.stack, OKXReportType.LOG, '', this.currentSide)\n            // }\n        }\n    }\n    cachedErrors() {\n        return this.recordList;\n    }\n    sendRecord(record) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    const body = JSON.stringify(record);\n                    (0, log_1.logDebug)('[REPORT] record: ', body);\n                    const res = yield fetchListWithTimeout(reportApiList, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body: body }));\n                    (0, log_1.logDebug)('[REPORT] get rsp:', res);\n                    if (res && res.status && res.status == 200) {\n                        this.recordList = this.recordList.filter((item) => {\n                            return item.timestamp != record.timestamp || item.content != record.content;\n                        });\n                        yield this.storage.setItem(this.recordCacheKey, this.recordList);\n                        resolve(true);\n                    }\n                    else {\n                        reject(false);\n                    }\n                }\n                catch (e) {\n                    (0, log_1.logDebug)('send record error:', e);\n                    resolve(true);\n                    // reject(e)\n                }\n            }));\n        });\n    }\n    sendRecordContent(content, type, action) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            let path = (_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.location.pathname;\n            let location = (_b = (0, url_1.getWindow)()) === null || _b === void 0 ? void 0 : _b.location.origin;\n            if (path && location) {\n                location = location + path;\n            }\n            let language = (_c = (0, url_1.getWindow)()) === null || _c === void 0 ? void 0 : _c.navigator.language;\n            let ua = (_d = (0, url_1.getWindow)()) === null || _d === void 0 ? void 0 : _d.navigator.userAgent;\n            let platform = this.reportPlatform;\n            let reportItem = {\n                uuid: this.currentUUID,\n                version: this.currentVersion,\n                content: content,\n                action: action,\n                side: this.currentSide,\n                timestamp: new Date().getTime(),\n                url: location,\n                lang: language,\n                type: type,\n                platform: platform,\n                \"user-agent\": ua\n            };\n            yield this.markRecordItem(reportItem);\n            yield this.sendRecord(reportItem);\n        });\n    }\n    sendCachedRecords() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let sendList = this.recordList.map(record => this.sendRecord(record));\n                (0, log_1.logDebug)('[REPORT] submit & clean recorded caches begin @', new Date().toUTCString());\n                Promise.allSettled(sendList).then((results) => {\n                    (0, log_1.logDebug)('[REPORT] submit & clean recorded caches ends @', new Date().toUTCString());\n                    let keepIndex = [];\n                    results.forEach((result, index) => {\n                        if (result.status == \"rejected\") {\n                            keepIndex.push(index);\n                        }\n                    });\n                    this.recordList = this.recordList.filter((_, index) => !keepIndex.includes(index));\n                    this.storage.setItem(this.recordCacheKey, this.recordList).then(function (value) {\n                        resolve();\n                    }).catch(function (err) {\n                        reject(err);\n                    });\n                });\n            }));\n        });\n    }\n    markRecordItem(item) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.recordList.push(item);\n            if (this.recordList.length > MAX_LIMIT_REPORTCOUNT) {\n                let offset = this.recordList.length - MAX_LIMIT_REPORTCOUNT;\n                this.recordList.splice(0, offset);\n            }\n            return new Promise((resolve, reject) => {\n                this.storage.setItem(this.recordCacheKey, this.recordList).then(function (value) {\n                    resolve(item);\n                }).catch(function (err) {\n                    reject(err);\n                });\n            });\n        });\n    }\n    markRecord(content, type, action, side) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            let path = (_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.location.pathname;\n            let location = (_b = (0, url_1.getWindow)()) === null || _b === void 0 ? void 0 : _b.location.origin;\n            if (path && location) {\n                location = location + path;\n            }\n            let language = (_c = (0, url_1.getWindow)()) === null || _c === void 0 ? void 0 : _c.navigator.language;\n            let platform = this.reportPlatform;\n            let ua = (_d = (0, url_1.getWindow)()) === null || _d === void 0 ? void 0 : _d.navigator.userAgent;\n            let reportItem = {\n                uuid: this.currentUUID,\n                version: this.currentVersion,\n                content: content,\n                action: action,\n                side: side,\n                timestamp: new Date().getTime(),\n                url: location,\n                lang: language,\n                type: type,\n                platform: platform,\n                \"user-agent\": ua\n            };\n            return yield this.markRecordItem(reportItem);\n        });\n    }\n}\nexports.OKXReporter = OKXReporter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Report_WalletType_Key = exports.Report_ConnectDapp_ConnectAndSign_Click = exports.Report_Proceed_QRCode_Click = exports.Report_ChooseType_Download_Click = exports.Report_ChooseType_ConnectWallet_Click = exports.Report_Proceed_Retry_Click = exports.Report_ChooseType_ConnectWallet_View = exports.Report_Loading_ConnectWallet_View = exports.Report_Proceed_QRCode_View = exports.Report_Proceed_Proceed_View = void 0;\nexports.Report_Proceed_Proceed_View = \"OKXConnectSDK_Proceed_Proceed_View\";\nexports.Report_Proceed_QRCode_View = \"OKXConnectSDK_Proceed_QRCode_View\";\nexports.Report_Loading_ConnectWallet_View = \"OKXConnectSDK_Loading_ConnectWallet_View\";\nexports.Report_ChooseType_ConnectWallet_View = \"OKXConnectSDK_ChooseType_ConnectWallet_View\";\nexports.Report_Proceed_Retry_Click = \"OKXConnectSDK_Proceed_Retry_Click\";\nexports.Report_ChooseType_ConnectWallet_Click = \"OKXConnectSDK_ChooseType_ConnectWallet_Click\";\nexports.Report_ChooseType_Download_Click = \"OKXConnectSDK_ChooseType_Download_Click\";\nexports.Report_Proceed_QRCode_Click = \"OKXConnectSDK_Proceed_QRCode_Click\";\nexports.Report_ConnectDapp_ConnectAndSign_Click = \"OKXConnectSDK_ConnectDapp_ConnectAndSign_Click\";\nexports.Report_WalletType_Key = 'wallet_type';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkMetaData = checkMetaData;\nconst protocol_1 = require(\"../protocol\");\nfunction checkMetaData(dappMetaData) {\n    if (!dappMetaData) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"You have to specify a `dappMetaData`in the options.\");\n    }\n    if (!dappMetaData.name) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"dappName is required\");\n    }\n    if (!dappMetaData.icon) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"icon is required\");\n    }\n    return true;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.safeJsonParse = safeJsonParse;\nexports.safeJsonStringify = safeJsonStringify;\nconst log_1 = require(\"./log\");\nconst JSONStringify = (data) => JSON.stringify(data, (_, value) => (typeof value === \"bigint\" ? value.toString() + \"n\" : value));\n/*\n  Function to parse JSON.\n  If JSON has values in our custom format BigInt (strings with \"n\" character at the end), we just parse them to BigInt values.\n  If JSON has big number values, but not in our custom format, we copy it, and in a copy we convert those values to our custom format,\n  then parse them to BigInt values.\n  Other values (not big numbers and not our custom format BigInt values) are not affected and parsed as native JSON.parse() would parse them.\n*/\nconst JSONParse = (json) => {\n    /*\n      Big numbers are found and marked using Regex with this condition:\n      Number's length is bigger than 16 || Number's length is 16 and any numerical digit of the number is greater than that of the Number.MAX_SAFE_INTEGER\n      Additionally, it skips values that are strings (between double quotes).\n      */\n    // prettier-ignore\n    // eslint-disable-next-line no-useless-escape\n    const numbersBiggerThanMaxInt = /:(\\b\\d{17,}|\\b(?:[9](?:[1-9]07199254740991|0[1-9]7199254740991|00[8-9]199254740991|007[2-9]99254740991|007199[3-9]54740991|0071992[6-9]4740991|00719925[5-9]740991|007199254[8-9]40991|0071992547[5-9]0991|00719925474[1-9]991|00719925474099[2-9])))(?=[,\\}\\]]|$)/g;\n    const serializedData = json.replace(numbersBiggerThanMaxInt, (match, group) => `:\"${group}n\"`);\n    try {\n        return JSON.parse(serializedData, (_, value) => {\n            const isCustomFormatBigInt = typeof value === \"string\" && value.match(/^\\d+n$/);\n            if (isCustomFormatBigInt)\n                return BigInt(value.substring(0, value.length - 1));\n            return value;\n        });\n    }\n    catch (e) {\n        return JSON.parse(json);\n    }\n};\nfunction safeJsonParse(value) {\n    if (typeof value !== \"string\") {\n        (0, log_1.logDebug)(value);\n        throw new Error(`Cannot safe json parse value of type ${typeof value}`);\n    }\n    try {\n        return JSONParse(value);\n    }\n    catch (e) {\n        // eslint-disable-next-line no-console\n        console.error(\"safeJsonParse error:\", e);\n        return value;\n    }\n}\nfunction safeJsonStringify(value) {\n    return typeof value === \"string\" ? value : JSONStringify(value) || \"\";\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.okxfromString = okxfromString;\nexports.okxtoString = okxtoString;\nexports.alloc = alloc;\nexports.allocUnsafe = allocUnsafe;\nconst basics_1 = require(\"multiformats/basics\");\nconst log_1 = require(\"../utils/log\");\nfunction okxfromString(string, encoding = 'utf8') {\n    const base = BASES[encoding];\n    (0, log_1.logDebug)(\"okxfromstring ====> \");\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    return base.decoder.decode(`${base.prefix}${string}`);\n}\nfunction okxtoString(array, encoding = 'utf8') {\n    const base = BASES[encoding];\n    (0, log_1.logDebug)(\"okxtoString ====> \");\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    return base.encoder.encode(array).substring(1);\n}\nfunction alloc(size = 0) {\n    return new Uint8Array(size);\n}\nfunction allocUnsafe(size = 0) {\n    return new Uint8Array(size);\n}\nfunction createCodec(name, prefix, encode, decode) {\n    return {\n        name,\n        prefix,\n        encoder: {\n            name,\n            prefix,\n            encode\n        },\n        decoder: { decode }\n    };\n}\nconst string = createCodec('utf8', 'u', buf => {\n    const decoder = new TextDecoder('utf8');\n    return 'u' + decoder.decode(buf);\n}, str => {\n    const encoder = new TextEncoder();\n    return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n    let result = 'a';\n    for (let i = 0; i < buf.length; i++) {\n        let bufNum = buf[i];\n        if (bufNum && String.fromCharCode(bufNum)) {\n            result += String.fromCharCode(bufNum);\n        }\n    }\n    return result;\n}, str => {\n    str = str.substring(1);\n    const buf = allocUnsafe(str.length);\n    for (let i = 0; i < str.length; i++) {\n        buf[i] = str.charCodeAt(i);\n    }\n    return buf;\n});\nconst BASES = Object.assign({ utf8: string, 'utf-8': string, hex: basics_1.bases.base16, latin1: ascii, ascii: ascii, binary: ascii }, basics_1.bases);\n","\"use strict\";\nvar _a, _b, _c, _d, _e, _f, _g;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isTmaPlatform = isTmaPlatform;\nexports.isInTMA = isInTMA;\nexports.inTg = inTg;\nexports.isInTelegramBrowser = isInTelegramBrowser;\nexports.sendExpand = sendExpand;\nexports.sendOpenTelegramLink = sendOpenTelegramLink;\nexports.versionCompare = versionCompare;\nconst url_1 = require(\"./url\");\nconst log_1 = require(\"./log\");\nconst protocol_1 = require(\"../protocol\");\nconst web_api_1 = require(\"./web-api\");\nlet initParams = {};\ntry {\n    let locationHash = location.hash.toString();\n    initParams = urlParseHashParams(locationHash);\n}\ncatch (e) { }\nlet tmaPlatform = 'unknown';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppPlatform) {\n    tmaPlatform = (_a = initParams.tgWebAppPlatform) !== null && _a !== void 0 ? _a : 'unknown';\n}\nif (tmaPlatform === 'unknown') {\n    const window = (0, url_1.getWindow)();\n    tmaPlatform = (_d = (_c = (_b = window === null || window === void 0 ? void 0 : window.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : 'unknown';\n}\nlet webAppVersion = '6.0';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppVersion) {\n    webAppVersion = initParams.tgWebAppVersion;\n}\nif (!webAppVersion) {\n    const window = (0, url_1.getWindow)();\n    webAppVersion = (_g = (_f = (_e = window === null || window === void 0 ? void 0 : window.Telegram) === null || _e === void 0 ? void 0 : _e.WebApp) === null || _f === void 0 ? void 0 : _f.version) !== null && _g !== void 0 ? _g : '6.0';\n}\n/**\n * Returns true if the app is running in TMA on the specified platform.\n * @param platforms\n */\nfunction isTmaPlatform(...platforms) {\n    return platforms.includes(tmaPlatform);\n}\n/**\n * Returns true if the app is running in TMA.\n */\nfunction isInTMA() {\n    var _a;\n    return tmaPlatform !== 'unknown' || !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n}\nfunction inTg() {\n    // return true\n    return isInTelegramBrowser() || isInTMA();\n}\n/**\n * Returns true if the app is running in the Telegram browser.\n */\nfunction isInTelegramBrowser() {\n    var _a;\n    const isTelegramWebview = !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebview);\n    return (isInTMA() || isTelegramWebview) && tmaPlatform === 'unknown';\n}\n/**\n * Expand the app window.\n */\nfunction sendExpand() {\n    postEvent('web_app_expand', {});\n}\n/**\n * Opens link in TMA or in new tab and returns a function that closes the tab.\n * @param link The link to open.\n * @param fallback The function to call if the link can't be opened in TMA.\n */\nfunction sendOpenTelegramLink(link, fallback) {\n    const url = new URL(link);\n    if (url.protocol !== 'http:' && url.protocol !== 'https:') {\n        if (fallback) {\n            return fallback();\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Url protocol is not supported: ${url}`);\n    }\n    if (url.hostname !== 't.me') {\n        if (fallback) {\n            return fallback();\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Url host is not supported: ${url}`);\n    }\n    const pathFull = url.pathname + url.search;\n    if (isIframe() || versionAtLeast('6.1')) {\n        postEvent('web_app_open_tg_link', { path_full: pathFull });\n    }\n    else {\n        (0, web_api_1.openLinkBlank)('https://t.me' + pathFull);\n    }\n}\nfunction isIframe() {\n    try {\n        const window = (0, url_1.getWindow)();\n        if (!window) {\n            return false;\n        }\n        return window.parent != null && window !== window.parent;\n    }\n    catch (e) {\n        return false;\n    }\n}\nfunction postEvent(eventType, eventData) {\n    try {\n        const window = (0, url_1.getWindow)();\n        if (!window) {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Can't post event to parent window: window is not defined`);\n        }\n        if (window.TelegramWebviewProxy !== undefined) {\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.TelegramWebviewProxy.postEvent(eventType, JSON.stringify(eventData));\n        }\n        else if (window.external && 'notify' in window.external) {\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.external.notify(JSON.stringify({ eventType: eventType, eventData: eventData }));\n        }\n        else if (isIframe()) {\n            const trustedTarget = '*';\n            const message = JSON.stringify({ eventType: eventType, eventData: eventData });\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.parent.postMessage(message, trustedTarget);\n        }\n        else {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Can't post event to TMA`);\n        }\n    }\n    catch (e) {\n        (0, log_1.logError)(`Can't post event to parent window: ${e}`);\n    }\n}\nfunction urlParseHashParams(locationHash) {\n    locationHash = locationHash.replace(/^#/, '');\n    let params = {};\n    if (!locationHash.length) {\n        return params;\n    }\n    if (locationHash.indexOf('=') < 0 && locationHash.indexOf('?') < 0) {\n        params._path = urlSafeDecode(locationHash);\n        return params;\n    }\n    let qIndex = locationHash.indexOf('?');\n    if (qIndex >= 0) {\n        let pathParam = locationHash.substr(0, qIndex);\n        params._path = urlSafeDecode(pathParam);\n        locationHash = locationHash.substr(qIndex + 1);\n    }\n    let query_params = urlParseQueryString(locationHash);\n    for (let k in query_params) {\n        params[k] = query_params[k];\n    }\n    return params;\n}\nfunction urlSafeDecode(urlencoded) {\n    try {\n        urlencoded = urlencoded.replace(/\\+/g, '%20');\n        return decodeURIComponent(urlencoded);\n    }\n    catch (e) {\n        return urlencoded;\n    }\n}\nfunction urlParseQueryString(queryString) {\n    let params = {};\n    if (!queryString.length) {\n        return params;\n    }\n    let queryStringParams = queryString.split('&');\n    let i, param, paramName, paramValue;\n    for (i = 0; i < queryStringParams.length; i++) {\n        param = queryStringParams[i].split('=');\n        paramName = urlSafeDecode(param[0]);\n        paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n        params[paramName] = paramValue;\n    }\n    return params;\n}\nfunction versionCompare(v1, v2) {\n    if (typeof v1 !== 'string')\n        v1 = '';\n    if (typeof v2 !== 'string')\n        v2 = '';\n    let v1List = v1.replace(/^\\s+|\\s+$/g, '').split('.');\n    let v2List = v2.replace(/^\\s+|\\s+$/g, '').split('.');\n    let a, i, p1, p2;\n    a = Math.max(v1List.length, v2List.length);\n    for (i = 0; i < a; i++) {\n        p1 = parseInt(v1List[i]) || 0;\n        p2 = parseInt(v2List[i]) || 0;\n        if (p1 === p2)\n            continue;\n        if (p1 > p2)\n            return 1;\n        return -1;\n    }\n    return 0;\n}\nfunction versionAtLeast(ver) {\n    return versionCompare(webAppVersion, ver) >= 0;\n}\n","\"use strict\";\nvar _a, _b, _c, _d;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.removeUrlLastSlash = removeUrlLastSlash;\nexports.addPathToUrl = addPathToUrl;\nexports.getUniversalLink = getUniversalLink;\nexports.openOKXDeeplink = openOKXDeeplink;\nexports.openOKXUniversalLink = openOKXUniversalLink;\nexports.openOKXDeeplinkWithFallback = openOKXDeeplinkWithFallback;\nexports.getWindow = getWindow;\nexports.isTelegramUrl = isTelegramUrl;\nexports.encodeTelegramUrlParameters = encodeTelegramUrlParameters;\nexports.encodeConnectParams = encodeConnectParams;\nexports.encodeTWAConnectURLParams = encodeTWAConnectURLParams;\nexports.getAppWalletDeepLink = getAppWalletDeepLink;\nexports.getAppWalletShortDeepLink = getAppWalletShortDeepLink;\nexports.getTelegramWalletTWAUrl = getTelegramWalletTWAUrl;\nexports.openOKXTMAWalletlinkWithFallback = openOKXTMAWalletlinkWithFallback;\nexports.isInTMA = isInTMA;\nexports.isInTelegramBrowser = isInTelegramBrowser;\nexports.getOKXLink = getOKXLink;\nconst protocol_1 = require(\"../protocol\");\nconst log_1 = require(\"./log\");\nconst constants_1 = require(\"../protocol/constants\");\nconst utils_1 = require(\"./utils\");\nconst tma_api_1 = require(\"./tma-api\");\nconst constants_2 = require(\"../connect/constants\");\nfunction removeUrlLastSlash(url) {\n    if (url.slice(-1) === '/') {\n        return url.slice(0, -1);\n    }\n    return url;\n}\nfunction addPathToUrl(url, path) {\n    return removeUrlLastSlash(url) + '/' + path;\n}\nfunction getUniversalLink(deeplinkUrl, useStandardUniversalLink = false) {\n    console.log(\"getUniversalLink deeplinkUrl:\", deeplinkUrl, \", useStandardUniversalLink:\", useStandardUniversalLink);\n    /*const replaceStrWithParam = `${standardDeeplink}?param=`\n    if(!useStandardUniversalLink && deeplinkUrl.startsWith(replaceStrWithParam)){\n        const cleanUrl = deeplinkUrl.replace(replaceStrWithParam, '');\n        logDebug(\"getUniversalLink cleanUrl:\",cleanUrl)\n        const deeplinkEncodeUrl= encodeURIComponent(cleanUrl);\n        logDebug(\"getUniversalLink standardUniversalLink:\",standardUniversalLink)\n        logDebug(\"getUniversalLink `${shortUniversalLink}?param=${deeplinkEncodeUrl}`:\",`${shortUniversalLink}?param=${deeplinkEncodeUrl}`)\n        return `${shortUniversalLink}?param=${deeplinkEncodeUrl}`;\n    }else if(!useStandardUniversalLink && deeplinkUrl == standardDeeplink){\n        logDebug(\"getUniversalLink shortUniversalLink:\",shortUniversalLink)\n        return shortUniversalLink;\n    }else {\n        const deeplinkEncodeUrl= encodeURIComponent(deeplinkUrl);\n        console.log(\"getUniversalLink standardUniversalLink:\",standardUniversalLink)\n\n        return `${standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`;\n    }*/\n    const deeplinkEncodeUrl = encodeURIComponent(deeplinkUrl);\n    console.log(\"getUniversalLink standardUniversalLink:\", protocol_1.standardUniversalLink);\n    console.log(\"getUniversalLink standardUniversalLink:\", `${protocol_1.standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`);\n    return `${protocol_1.standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`;\n}\nfunction openOKXDeeplink(deeplinkUrl) {\n    var _a;\n    const fullUrl = getUniversalLink(deeplinkUrl);\n    const isTelegram = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n    console.log(\"openOKXDeeplink fullUrl:\", fullUrl);\n    if (!(0, utils_1.isIos)() || (0, utils_1.isInIOSLine)()) {\n        if (isTelegram) {\n            window.open(deeplinkUrl, '_blank');\n        }\n        else {\n            window.location.href = deeplinkUrl;\n        }\n    }\n    else {\n        openOKXUniversalLink(fullUrl);\n    }\n}\nfunction openOKXUniversalLink(fullUrl) {\n    if (!(0, utils_1.isIos)()) {\n        // if (isTelegram) {\n        window.open(fullUrl, '_blank');\n        // } else {\n        //     window.location.href = fullUrl;\n        // }\n    }\n    else {\n        if (isInTMA()) {\n            window.open(fullUrl, '_blank');\n        }\n        else {\n            console.log(\"windowOpen[before]: \", Date.now());\n            if (window === null || window === void 0 ? void 0 : window.okxLogDebug) {\n                window.open(fullUrl, '_blank');\n            }\n            else {\n                window.open(fullUrl, '_self');\n            }\n            console.log(\"windowOpen[after]: \", Date.now());\n        }\n    }\n}\nfunction openOKXDeeplinkWithFallback(deeplinkUrl) {\n    var _a;\n    const fullUrl = getUniversalLink(deeplinkUrl);\n    const isTelegram = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n    console.log(\"openOKXDeeplinkWithFallback fullUrl:\", fullUrl);\n    let deepLinkOpened = false;\n    const timeoutDuration = 3000; // 1.5秒的等待时间\n    const downloadUrl = protocol_1.standardUniversalLink;\n    console.log(\"openOKXDeeplinkWithFallback standardUniversalLink:\", protocol_1.standardUniversalLink);\n    let newWindow = null;\n    let fallbackToDownloadPage = () => {\n        console.log(\"fallbackToDownloadPage :empty\");\n    };\n    if (!(0, utils_1.isIos)()) {\n        fallbackToDownloadPage = () => {\n            if (!deepLinkOpened) {\n                if (newWindow) {\n                    newWindow.open(fullUrl, '_self');\n                }\n                else {\n                    window.open(fullUrl, '_blank');\n                }\n            }\n        };\n    }\n    else if ((0, utils_1.isInIOSLine)()) {\n        fallbackToDownloadPage = () => {\n            if (!deepLinkOpened) {\n                window.open(fullUrl, '_self');\n            }\n        };\n    }\n    if (!(0, utils_1.isIos)() || (0, utils_1.isInIOSLine)() || (0, utils_1.isInIOSLark)() || (0, utils_1.isInIOSWeChat)()) {\n        if (isTelegram) {\n            newWindow = window.open(deeplinkUrl, '_blank');\n        }\n        else {\n            window.location.href = deeplinkUrl;\n        }\n        setTimeout(fallbackToDownloadPage, timeoutDuration);\n        let count = 0;\n        let interval = setInterval(() => {\n            count++;\n            console.log(\"windowOpen --> interval:\", count, document.hidden, document.visibilityState);\n            if (count >= 10 || document.hidden) {\n                deepLinkOpened = true;\n                clearInterval(interval);\n                console.log(\"windowOpen :cleat: ${count}\");\n            }\n        }, 200);\n        window.addEventListener('blur', () => {\n            deepLinkOpened = true;\n        }, { once: true });\n        document.addEventListener('visibilitychange', () => {\n            if (document.visibilityState === 'hidden') {\n                deepLinkOpened = true;\n            }\n        });\n    }\n    else {\n        if (isTelegram) {\n            window.open(fullUrl, '_blank');\n        }\n        else {\n            console.log(\"windowOpen[before]: \", Date.now());\n            if (window === null || window === void 0 ? void 0 : window.okxLogDebug) {\n                window.open(fullUrl, '_blank');\n            }\n            else {\n                window.open(fullUrl, '_self');\n            }\n            console.log(\"windowOpen[after]: \", Date.now());\n        }\n    }\n}\nfunction getWindow() {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    return undefined;\n}\nfunction isTelegramUrl(link) {\n    if (!link) {\n        return false;\n    }\n    const url = new URL(link);\n    return url.protocol === 'tg:' || url.hostname === 't.me';\n}\nfunction encodeTelegramUrlParameters(parameters) {\n    let encodedParameters = parameters;\n    encodedParameters = encodedParameters.replace(/\\./g, '%2E');\n    encodedParameters = encodedParameters.replace(/-/g, '%2D');\n    encodedParameters = encodedParameters.replace(/_/g, '%5F');\n    encodedParameters = encodedParameters.replace(/&/g, '-');\n    encodedParameters = encodedParameters.replace(/=/g, '__');\n    encodedParameters = encodedParameters.replace(/%/g, '--');\n    return encodedParameters;\n}\nfunction encodeConnectParams(connectRequest) {\n    let connectRequestWithVersion = Object.assign(Object.assign({}, connectRequest), { protocolVersion: constants_2.CONNECT_PROTOCOL_VER });\n    const connectRequestStr = JSON.stringify(connectRequestWithVersion);\n    (0, log_1.logDebug)(\"url encodeConnectParams connectRequestStr \", connectRequestStr);\n    const utf8Array = new TextEncoder().encode(connectRequestStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    // .replace(/\\+/g, '-')\n    // .replace(/\\//g, '_')\n    // .replace(/=+$/, ''); //Compatible with older versions of iOS. Cannot be added directly  (Base64 URL Safe)\n    (0, log_1.logDebug)(\"url encodeConnectParams base64Encoded \", base64Encoded);\n    return base64Encoded;\n}\nfunction encodeTWAConnectURLParams(connectRequest) {\n    const connectRequestStr = JSON.stringify({ topic: connectRequest.topic, clientId: connectRequest.clientId });\n    (0, log_1.logDebug)(\"url encodeConnectParams connectRequestStr\", connectRequestStr);\n    const utf8Array = new TextEncoder().encode(connectRequestStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    return base64Encoded;\n}\nfunction getAppWalletDeepLink(connectParam) {\n    return `${protocol_1.standardDeeplink}?param=${connectParam}`;\n}\nfunction getAppWalletShortDeepLink(topic, clientId) {\n    return `${constants_1.shortUniversalLink}?topic=${topic}${(0, utils_1.getLastSixMd5Hash)(clientId)}`;\n}\n//  make telegram okx wallet TWA url\nfunction getTelegramWalletTWAUrl(connectParam, redirectStr) {\n    let base64Content = { okxconnect: \"\", redirect: \"\", extraparams: \"\", fromtg: false };\n    if (connectParam) {\n        base64Content.okxconnect = connectParam;\n    }\n    if (redirectStr) {\n        base64Content.redirect = redirectStr;\n    }\n    if (!isInTMA()) {\n        base64Content.fromtg = false;\n    }\n    else {\n        base64Content.fromtg = true;\n    }\n    (0, log_1.logDebug)('getTelegramWalletTWAUrl redirect:', base64Content.redirect);\n    let base64ContentStr = JSON.stringify(base64Content);\n    const utf8Array = new TextEncoder().encode(base64ContentStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    const urlSafeBase64 = (0, utils_1.toSafeBase64FromBase64)(base64Encoded);\n    (0, log_1.logDebug)('[TWA] open link:', base64Content, base64Encoded);\n    if (connectParam || redirectStr) {\n        if (!isInTMA()) {\n            // return `http://localhost:5173?tgWebAppStartParam=${urlSafeBase64}`\n            if ((0, constants_1.getTestTwaUrl)()) {\n                return `${(0, constants_1.getTestTwaUrl)()}?tgWebAppStartParam=${urlSafeBase64}`;\n            }\n            else if ((0, constants_1.getTestTgTwaUrl)()) {\n                let result = (0, constants_1.getBotNameAndAppName)((0, constants_1.getTestTgTwaUrl)());\n                if (result) {\n                    let { botName, appName } = result;\n                    return `tg://resolve?domain=${botName}&appname=${appName}&startapp=${urlSafeBase64}`;\n                }\n                return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}&startapp=${urlSafeBase64}`;\n            }\n            else {\n                return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}&startapp=${urlSafeBase64}`;\n            }\n        }\n        else {\n            if ((0, constants_1.getTestTgTwaUrl)()) {\n                return `${(0, constants_1.getTestTgTwaUrl)()}?startapp=${urlSafeBase64}`;\n            }\n            else {\n                return `https://t.me/${constants_1.tgwalletName}/start?startapp=${urlSafeBase64}`;\n            }\n        }\n    }\n    if (!isInTMA()) {\n        // return \"http://localhost:5173\"\n        if ((0, constants_1.getTestTwaUrl)()) {\n            return `${(0, constants_1.getTestTwaUrl)()}`;\n        }\n        else if ((0, constants_1.getTestTgTwaUrl)()) {\n            let result = (0, constants_1.getBotNameAndAppName)((0, constants_1.getTestTgTwaUrl)());\n            if (result) {\n                let { botName, appName } = result;\n                return `tg://resolve?domain=${botName}&appname=${appName}`;\n            }\n            return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}`;\n        }\n        else {\n            return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}`;\n        }\n    }\n    else {\n        if ((0, constants_1.getTestTgTwaUrl)()) {\n            return `${(0, constants_1.getTestTgTwaUrl)()}`;\n        }\n        else {\n            return `https://t.me/${constants_1.tgwalletName}/start`;\n        }\n    }\n}\n//  open TWA url in telegram\nfunction openOKXTMAWalletlinkWithFallback(twaDeepLink) {\n    var _a, _b, _c, _d, _e;\n    (0, log_1.logDebug)('[TWA] open link:', twaDeepLink, \"isInTMA ==> \", isInTMA());\n    if (!isInTMA()) {\n        if ((0, constants_1.getTestTwaUrl)()) {\n            window.open(twaDeepLink, '_blank');\n        }\n        else {\n            window.open(twaDeepLink, '_self');\n        }\n    }\n    else {\n        if ((_b = (_a = getWindow()) === null || _a === void 0 ? void 0 : _a.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) {\n            (_e = (_d = (_c = getWindow()) === null || _c === void 0 ? void 0 : _c.Telegram) === null || _d === void 0 ? void 0 : _d.WebApp) === null || _e === void 0 ? void 0 : _e.openTelegramLink(twaDeepLink);\n        }\n        else {\n            (0, tma_api_1.sendOpenTelegramLink)(twaDeepLink);\n        }\n    }\n}\n/**\n * Returns true if the app is running in TMA.\n */\nfunction urlSafeDecode(urlencoded) {\n    try {\n        urlencoded = urlencoded.replace(/\\+/g, '%20');\n        return decodeURIComponent(urlencoded);\n    }\n    catch (e) {\n        return urlencoded;\n    }\n}\nfunction urlParseQueryString(queryString) {\n    let params = {};\n    if (!queryString.length) {\n        return params;\n    }\n    let queryStringParams = queryString.split('&');\n    let i, param, paramName, paramValue;\n    for (i = 0; i < queryStringParams.length; i++) {\n        param = queryStringParams[i].split('=');\n        paramName = urlSafeDecode(param[0]);\n        paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n        params[paramName] = paramValue;\n    }\n    return params;\n}\nfunction urlParseHashParams(locationHash) {\n    locationHash = locationHash.replace(/^#/, '');\n    let params = {};\n    if (!locationHash.length) {\n        return params;\n    }\n    if (locationHash.indexOf('=') < 0 && locationHash.indexOf('?') < 0) {\n        params._path = urlSafeDecode(locationHash);\n        return params;\n    }\n    let qIndex = locationHash.indexOf('?');\n    if (qIndex >= 0) {\n        let pathParam = locationHash.substr(0, qIndex);\n        params._path = urlSafeDecode(pathParam);\n        locationHash = locationHash.substr(qIndex + 1);\n    }\n    let query_params = urlParseQueryString(locationHash);\n    for (let k in query_params) {\n        params[k] = query_params[k];\n    }\n    return params;\n}\nlet initParams = {};\ntry {\n    let locationHash = location.hash.toString();\n    initParams = urlParseHashParams(locationHash);\n}\ncatch (e) { }\nlet tmaPlatform = 'unknown';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppPlatform) {\n    tmaPlatform = (_a = initParams.tgWebAppPlatform) !== null && _a !== void 0 ? _a : 'unknown';\n}\nif (tmaPlatform === 'unknown') {\n    const window = getWindow();\n    tmaPlatform = (_d = (_c = (_b = window === null || window === void 0 ? void 0 : window.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : 'unknown';\n}\nfunction isInTMA() {\n    var _a;\n    return tmaPlatform !== 'unknown' || !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n}\n/**\n * Returns true if the app is running in the Telegram browser.\n */\nfunction isInTelegramBrowser() {\n    var _a;\n    const isTelegramWebview = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebview);\n    return (isInTMA() || isTelegramWebview) && tmaPlatform === 'unknown';\n}\nfunction getOKXLink(connectRequest, useMini = false, tmaReturnUrl) {\n    (0, log_1.logDebug)(`url  getOKXLink() called connectRequest==> ${JSON.stringify(connectRequest)}  useMini=> ${useMini}  tmaReturnUrl==> ${tmaReturnUrl}`);\n    if (useMini) {\n        if (connectRequest) {\n            var encodeTGParams = encodeTWAConnectURLParams(connectRequest);\n            return getTelegramWalletTWAUrl(encodeTGParams, tmaReturnUrl !== null && tmaReturnUrl !== void 0 ? tmaReturnUrl : \"back\");\n        }\n        else {\n            return getTelegramWalletTWAUrl(undefined, tmaReturnUrl !== null && tmaReturnUrl !== void 0 ? tmaReturnUrl : \"back\");\n        }\n    }\n    else {\n        if ((0, utils_1.useShortLink)()) {\n            if (connectRequest) {\n                return getAppWalletShortDeepLink(connectRequest.topic, connectRequest.clientId);\n            }\n            else {\n                return constants_1.shortUniversalLink;\n            }\n        }\n        else {\n            if (connectRequest) {\n                const base64Encoded = encodeConnectParams(connectRequest);\n                return `${protocol_1.standardDeeplink}?param=${base64Encoded}`;\n            }\n            else {\n                return protocol_1.standardDeeplink;\n            }\n        }\n    }\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.chainName2IdMap = exports.isValidObject = exports.RANDOM_LENGTH = exports.isBrowser = exports.resolveLocalStorage = exports.hasLocalStorage = exports.hasBuiltInWebSocket = exports.resolveWebSocketImplementation = void 0;\nexports.hexToByteArray = hexToByteArray;\nexports.getChainId = getChainId;\nexports.toHexString = toHexString;\nexports.concatUint8Arrays = concatUint8Arrays;\nexports.splitToUint8Arrays = splitToUint8Arrays;\nexports.base64encode = base64encode;\nexports.base64decode = base64decode;\nexports.checkWSUrl = checkWSUrl;\nexports.hashKey = hashKey;\nexports.generateRandomBytes32 = generateRandomBytes32;\nexports.generateTopic = generateTopic;\nexports.generateGroupId = generateGroupId;\nexports.isInIOSLine = isInIOSLine;\nexports.isInIOSLark = isInIOSLark;\nexports.isInIOSWeChat = isInIOSWeChat;\nexports.isIos = isIos;\nexports.getLastSixMd5Hash = getLastSixMd5Hash;\nexports.toSafeBase64FromBase64 = toSafeBase64FromBase64;\nexports.useShortLink = useShortLink;\nexports.replaceChainNameToChainId = replaceChainNameToChainId;\nexports.replaceChainIdToChainName = replaceChainIdToChainName;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst tweetnacl_util_1 = __importDefault(require(\"tweetnacl-util\"));\nconst to_string_1 = require(\"uint8arrays/to-string\");\nconst sha256_1 = require(\"@stablelib/sha256\");\nconst safejson_1 = require(\"./safejson\");\nconst log_1 = require(\"./log\");\nconst stringUtils_1 = require(\"../utils/stringUtils\");\nconst crypto_js_1 = __importDefault(require(\"crypto-js\"));\nconst BASE16 = \"base16\";\nfunction hexToByteArray(hexString) {\n    if (hexString.length % 2 !== 0) {\n        throw new Error(`Cannot convert ${hexString} to bytesArray`);\n    }\n    const result = new Uint8Array(hexString.length / 2);\n    for (let i = 0; i < hexString.length; i += 2) {\n        result[i / 2] = parseInt(hexString.slice(i, i + 2), 16);\n    }\n    return result;\n}\nfunction getChainId(chain) {\n    return chain.includes(\":\") ? chain.split(\":\")[1] : chain;\n}\nfunction toHexString(byteArray) {\n    let hexString = '';\n    byteArray.forEach(byte => {\n        hexString += ('0' + (byte & 0xff).toString(16)).slice(-2);\n    });\n    return hexString;\n}\nfunction concatUint8Arrays(buffer1, buffer2) {\n    const mergedArray = new Uint8Array(buffer1.length + buffer2.length);\n    mergedArray.set(buffer1);\n    mergedArray.set(buffer2, buffer1.length);\n    return mergedArray;\n}\nfunction splitToUint8Arrays(array, index) {\n    if (index >= array.length) {\n        throw new Error('Index is out of buffer');\n    }\n    const subArray1 = array.slice(0, index);\n    const subArray2 = array.slice(index);\n    return [subArray1, subArray2];\n}\nfunction encodeUint8Array(value, urlSafe) {\n    const encoded = tweetnacl_util_1.default.encodeBase64(value);\n    if (!urlSafe) {\n        return encoded;\n    }\n    return encodeURIComponent(encoded);\n}\nfunction decodeToUint8Array(value, urlSafe) {\n    if (urlSafe) {\n        value = decodeURIComponent(value);\n    }\n    return tweetnacl_util_1.default.decodeBase64(value);\n}\nfunction base64encode(value, urlSafe) {\n    let uint8Array;\n    if (value instanceof Uint8Array) {\n        uint8Array = value;\n    }\n    else {\n        if (typeof value !== 'string') {\n            value = (0, safejson_1.safeJsonStringify)(value);\n        }\n        uint8Array = tweetnacl_util_1.default.decodeUTF8(value);\n    }\n    return encodeUint8Array(uint8Array, urlSafe);\n}\nfunction base64decode(value, urlSafe) {\n    const decodedUint8Array = decodeToUint8Array(value, urlSafe);\n    return {\n        toString() {\n            return tweetnacl_util_1.default.encodeUTF8(decodedUint8Array);\n        },\n        toObject() {\n            try {\n                return (0, safejson_1.safeJsonParse)(tweetnacl_util_1.default.encodeUTF8(decodedUint8Array));\n            }\n            catch (e) {\n                return null;\n            }\n        },\n        toUint8Array() {\n            return decodedUint8Array;\n        }\n    };\n}\nfunction checkWSUrl(url) {\n    const match = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!match || !match.length) {\n        return false;\n    }\n    let scheme = match[0];\n    if (scheme === undefined) {\n        return false;\n    }\n    return new RegExp(\"^wss?:\").test(scheme);\n}\nconst resolveWebSocketImplementation = () => {\n    if (typeof WebSocket !== \"undefined\") {\n        return WebSocket;\n    }\n    else if (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") {\n        return global.WebSocket;\n    }\n    else if (typeof window !== \"undefined\" && typeof window.WebSocket !== \"undefined\") {\n        return window.WebSocket;\n    }\n    else if (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\") {\n        return self.WebSocket;\n    }\n    return WebSocket;\n    //\n    // return require(\"ws\");\n};\nexports.resolveWebSocketImplementation = resolveWebSocketImplementation;\nconst hasBuiltInWebSocket = () => typeof WebSocket !== \"undefined\" ||\n    (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") ||\n    (typeof window !== \"undefined\" && typeof window.WebSocket !== \"undefined\") ||\n    (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\");\nexports.hasBuiltInWebSocket = hasBuiltInWebSocket;\nconst hasLocalStorage = () => (typeof global !== \"undefined\" && (typeof global.localStorage !== \"undefined\")) ||\n    (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\");\nexports.hasLocalStorage = hasLocalStorage;\nconst resolveLocalStorage = () => {\n    if (typeof global !== \"undefined\" && typeof global.localStorage !== \"undefined\") {\n        return global.localStorage;\n    }\n    else if (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\") {\n        return window.localStorage;\n    }\n    return localStorage;\n};\nexports.resolveLocalStorage = resolveLocalStorage;\nconst isBrowser = () => typeof window !== \"undefined\";\nexports.isBrowser = isBrowser;\nexports.RANDOM_LENGTH = 32;\nfunction hashKey(key, encode = BASE16) {\n    (0, log_1.logDebug)(`hash key called ${key}`);\n    const result = (0, sha256_1.hash)((0, stringUtils_1.okxfromString)(key, encode));\n    return (0, to_string_1.toString)(result, encode);\n}\nfunction generateRandomBytes32() {\n    return tweetnacl_1.default.randomBytes(exports.RANDOM_LENGTH);\n}\nfunction generateTopic() {\n    let randomBytes32 = generateRandomBytes32();\n    (0, log_1.logDebug)(`generate topic called ${randomBytes32}`);\n    return hashKey((0, to_string_1.toString)(randomBytes32, BASE16));\n}\nfunction generateGroupId() {\n    let randomBytes32 = tweetnacl_1.default.randomBytes(16);\n    (0, log_1.logDebug)(`generate groupid called ${randomBytes32}`);\n    return hashKey((0, to_string_1.toString)(randomBytes32, BASE16));\n}\nconst isValidObject = (obj) => Object.getPrototypeOf(obj) === Object.prototype && Object.keys(obj).length;\nexports.isValidObject = isValidObject;\nfunction isInIOSLine() {\n    const userAgent = navigator.userAgent;\n    const inLine = userAgent.includes('Safari Line/');\n    return inLine && isIos();\n}\nfunction isInIOSLark() {\n    const userAgent = navigator.userAgent;\n    const inLine = userAgent.includes('Lark/');\n    return inLine && isIos();\n}\nfunction isInIOSWeChat() {\n    const userAgent = navigator.userAgent;\n    const inLine = userAgent.includes('MicroMessenger/');\n    return inLine && isIos();\n}\nfunction isIos() {\n    const userAgent = navigator.userAgent;\n    const maxTouchPoints = navigator.maxTouchPoints || 0;\n    // 检测 iPhone、iPod 和传统的 iPad\n    const isIOSDevice = /iPad|iPhone|iPod/.test(userAgent) && !window.MSStream;\n    // 针对 iPadOS 13 及以上的设备进行额外判断\n    const isIPadOS = (userAgent.includes('Mac') && maxTouchPoints > 1);\n    (0, log_1.logDebug)(`utils isIos >>>isIOSDevice: ${isIOSDevice}    >> isIPadOS: ${isIPadOS}`);\n    // 如果是 iOS 设备或者是 iPadOS 设备，返回 true\n    return isIOSDevice || isIPadOS;\n}\nfunction getLastSixMd5Hash(input) {\n    // 生成 MD5 哈希\n    const hash = crypto_js_1.default.MD5(input).toString();\n    // 获取最后六位\n    return hash.slice(-6);\n}\nfunction toSafeBase64FromBase64(base64) {\n    return base64\n        .replace(/=/g, \"\")\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\");\n}\nfunction useShortLink() {\n    // return !!(window as any).useShortLink;\n    return false;\n}\nexports.chainName2IdMap = new Map();\nexports.chainName2IdMap.set(\"aptos:mainnet\", \"aptos:637\");\nexports.chainName2IdMap.set(\"movement:testnet\", \"aptos:70000060\");\nexports.chainName2IdMap.set(\"movement:mainnet\", \"aptos:70000066\");\nexports.chainName2IdMap.set(\"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\", \"svm:70000069\");\nexports.chainName2IdMap.set(\"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\", \"svm:70000067\");\nexports.chainName2IdMap.set(\"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\", \"svm:70000068\");\nfunction replaceChainNameToChainId(chainId) {\n    exports.chainName2IdMap.forEach((value, key) => {\n        if (chainId.includes(key)) {\n            chainId = chainId.replace(key, value);\n        }\n    });\n    return chainId;\n}\nfunction replaceChainIdToChainName(chainId) {\n    exports.chainName2IdMap.forEach((value, key) => {\n        if (chainId.includes(value)) {\n            chainId = chainId.replace(value, key);\n        }\n    });\n    return chainId;\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.openLink = openLink;\nexports.openLinkBlank = openLinkBlank;\nexports.openDeeplinkWithFallback = openDeeplinkWithFallback;\nexports.isMobileUserAgent = isMobileUserAgent;\nexports.getUserAgent = getUserAgent;\nexports.isOS = isOS;\nexports.isBrowser = isBrowser;\nconst ua_parser_js_1 = __importDefault(require(\"ua-parser-js\"));\nconst log_1 = require(\"./log\");\nconst tma_api_1 = require(\"./tma-api\");\nfunction openLink(href, target = '_self') {\n    (0, log_1.logDebug)('openLink', href, target);\n    window.open(href, target, 'noopener noreferrer');\n}\nfunction openLinkBlank(href) {\n    openLink(href, '_blank');\n}\nfunction openDeeplinkWithFallback(href, fallback) {\n    const doFallback = () => {\n        if (isBrowser('safari') || (isOS('android') && isBrowser('firefox'))) {\n            // Safari does not support fallback to direct link.\n            return;\n        }\n        fallback();\n    };\n    const fallbackTimeout = setTimeout(() => doFallback(), 500);\n    window.addEventListener('blur', () => clearTimeout(fallbackTimeout), { once: true });\n    if (isOS('android') && (0, tma_api_1.inTg)()) {\n        openLink(href, '_blank');\n    }\n    else {\n        openLink(href, '_self');\n    }\n}\nfunction isMobileUserAgent() {\n    let check = false;\n    (function (a) {\n        if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) ||\n            /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.slice(0, 4)))\n            check = true;\n    })(navigator.userAgent ||\n        navigator.vendor ||\n        window.opera);\n    return check;\n}\nfunction getUserAgent() {\n    var _a, _b, _c;\n    const results = new ua_parser_js_1.default().getResult();\n    const osName = (_a = results.os.name) === null || _a === void 0 ? void 0 : _a.toLowerCase();\n    const deviceModel = (_b = results.device.model) === null || _b === void 0 ? void 0 : _b.toLowerCase();\n    let os;\n    switch (true) {\n        case deviceModel === 'ipad':\n            os = 'ipad';\n            break;\n        case osName === 'ios':\n            os = 'ios';\n            break;\n        case osName === 'android':\n            os = 'android';\n            break;\n        case osName === 'mac os':\n            os = 'macos';\n            break;\n        case osName === 'linux':\n            os = 'linux';\n            break;\n        case osName === null || osName === void 0 ? void 0 : osName.includes('windows'):\n            os = 'windows';\n            break;\n    }\n    const browserName = (_c = results.browser.name) === null || _c === void 0 ? void 0 : _c.toLowerCase();\n    let browser;\n    switch (true) {\n        case browserName === 'chrome':\n            browser = 'chrome';\n            break;\n        case browserName === 'firefox':\n            browser = 'firefox';\n            break;\n        case browserName === null || browserName === void 0 ? void 0 : browserName.includes('safari'):\n            browser = 'safari';\n            break;\n        case browserName === null || browserName === void 0 ? void 0 : browserName.includes('opera'):\n            browser = 'opera';\n            break;\n    }\n    return {\n        os,\n        browser\n    };\n}\nfunction isOS(...os) {\n    return os.includes(getUserAgent().os);\n}\nfunction isBrowser(...browser) {\n    return browser.includes(getUserAgent().browser);\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXSolanaProvider = void 0;\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXSolanaProvider {\n    getRealChainId(chainId) {\n        if (chainId == null) {\n            if (this.chainsSet.size == 1) {\n                let realChain = \"\";\n                let map = this.defaultChainMap;\n                this.chainsSet.forEach(function (chain) {\n                    if (map.has(chain)) {\n                        realChain = map.get(chain);\n                    }\n                });\n                if (realChain == \"\") {\n                    throw new Error(\"unsupported chainId\");\n                }\n                else {\n                    return realChain;\n                }\n            }\n            else {\n                throw new Error(\"connected to multiple solana chains,chainId can not be null\");\n            }\n        }\n        else {\n            if (chainId.startsWith(\"svm\")) {\n                return chainId;\n            }\n            else {\n                if (this.caip.includes(chainId)) {\n                    return chainId;\n                }\n                else {\n                    throw new Error(\"wrong chainId\");\n                }\n            }\n        }\n    }\n    getConnectedNamespace() {\n        var _a, _b, _c;\n        (_c = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces) === null || _b === void 0 ? void 0 : _b['solana']) === null || _c === void 0 ? void 0 : _c.chains.forEach(chain => {\n            this.chainsSet.add(chain.split(\":\")[0]);\n        });\n    }\n    constructor(provider) {\n        this.chainsSet = new Set();\n        this.caip = [\n            \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n            \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n            \"sonic:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n            \"sonic:EtWTRABZaYq6iMfeYKouRu166VU2xqa1\",\n            \"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n            \"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n            \"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\"\n        ];\n        this.SOON_MAIN_NET_CAIP = \"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\";\n        this.SOON_TEST_NET_CAIP = \"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\";\n        this.ECLIPSE_MAIN_NET_CAIP = \"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\";\n        this.SOON_MAIN_NET_ID = \"svm:70000069\";\n        this.SOON_TEST_NET_ID = \"svm:70000067\";\n        this.ECLIPSE_MAIN_NET_ID = \"svm:70000068\";\n        this.defaultChainMap = new Map();\n        this.provider = provider;\n        this.defaultChainMap.set(\"solana\", \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\");\n        this.defaultChainMap.set(\"sonic\", \"sonic:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\");\n        this.defaultChainMap.set(\"soon\", this.SOON_MAIN_NET_CAIP);\n        this.defaultChainMap.set(\"eclipse\", this.ECLIPSE_MAIN_NET_CAIP);\n        this.getConnectedNamespace();\n    }\n    signMessage(message, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            // compatipal with uint8array\n            if (typeof message !== 'string') {\n                try {\n                    message = new TextDecoder().decode(message);\n                }\n                catch (e) {\n                }\n            }\n            let realMessage = message;\n            let tx = null;\n            try {\n                const transaction = bs58_1.default.decode(message);\n                try {\n                    tx = web3_js_1.Transaction.from(transaction);\n                }\n                catch (error) {\n                    tx = web3_js_1.VersionedTransaction.deserialize(transaction);\n                }\n            }\n            catch (e) {\n            }\n            if (tx != null) {\n                return new Promise((resolve, reject) => {\n                    reject(\"Please sign with normal message\");\n                });\n            }\n            if (((_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.wallet) === null || _b === void 0 ? void 0 : _b.appName) == \"OKX Wallet\") {\n                realMessage = bs58_1.default.encode(new TextEncoder().encode(message));\n            }\n            else {\n                realMessage = message;\n            }\n            chainId = this.getRealChainId(chainId);\n            try {\n                let data = {\n                    \"chainId\": chainId,\n                    \"method\": \"solana_signMessage\",\n                    \"params\": {\n                        \"message\": realMessage,\n                        \"pubkey\": (_c = this.getAccount(chainId)) === null || _c === void 0 ? void 0 : _c.address\n                    },\n                    injectParams: {\n                        message: message,\n                        pubkey: (_d = this.getAccount(chainId)) === null || _d === void 0 ? void 0 : _d.address\n                    }\n                };\n                let signedMessage = yield this.provider.request(data, chainId);\n                (0, core_1.logDebug)(\"signMessage111\", signedMessage);\n                if ('result' in signedMessage) {\n                    let successData = signedMessage.result;\n                    return new Promise((resolve, reject) => {\n                        var _a;\n                        resolve({\n                            \"signature\": bs58_1.default.decode(successData),\n                            \"publicKey\": (_a = this.getAccount(chainId)) === null || _a === void 0 ? void 0 : _a.address\n                        });\n                    });\n                }\n                else {\n                    (0, core_1.logDebug)(\"signMessage111\", signedMessage);\n                    return new Promise((resolve, reject) => {\n                        resolve(signedMessage.error);\n                    });\n                }\n            }\n            catch (error) {\n                console.error('方法数据回调失败 --Error--', error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d;\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['solana']) === null || _b === void 0 ? void 0 : _b.accounts[0];\n        if (chainId != null) {\n            account = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces['solana']) === null || _d === void 0 ? void 0 : _d.accounts.filter(function (account) {\n                return account.startsWith(chainId);\n            })[0];\n        }\n        (0, core_1.logDebug)(\"getAccount\", account);\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const address = account.split(':')[2];\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address,\n            publicKey: new web3_js_1.PublicKey(address)\n        };\n    }\n    signTransaction(transaction, chainId) {\n        var _a, _b;\n        (0, core_1.logDebug)(\"OKXSolanaProvider\", typeof transaction);\n        chainId = this.getRealChainId(chainId);\n        try {\n            let serializedMessage = transaction.serialize({\n                requireAllSignatures: false,\n                verifySignatures: false,\n            });\n            let data = { \"data\": bs58_1.default.encode(serializedMessage), \"from\": (_a = this.getAccount(chainId)) === null || _a === void 0 ? void 0 : _a.address };\n            return this.getSignedTransaction(\"solana_signTransaction\", data, chainId, transaction);\n        }\n        catch (e) {\n            let serializedMessage = transaction.serialize();\n            let data = { \"data\": bs58_1.default.encode(serializedMessage), \"from\": (_b = this.getAccount(chainId)) === null || _b === void 0 ? void 0 : _b.address };\n            return this.getSignedTransaction(\"solana_signTransaction\", data, chainId, transaction);\n        }\n    }\n    signAllTransactions(transactions, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getRealChainId(chainId);\n            try {\n                var array = transactions.map((tx) => {\n                    var _a;\n                    var serializedMessage;\n                    if (tx instanceof web3_js_1.VersionedTransaction) {\n                        serializedMessage = tx.serialize();\n                    }\n                    else {\n                        serializedMessage = tx.serialize({\n                            requireAllSignatures: false,\n                            verifySignatures: false,\n                        });\n                    }\n                    return { \"data\": bs58_1.default.encode(serializedMessage), \"from\": (_a = this.getAccount(chainId)) === null || _a === void 0 ? void 0 : _a.address };\n                });\n                const response = yield this.provider.request({\n                    \"method\": \"solana_signAllTransactions\",\n                    \"params\": {\n                        \"transactions\": array\n                    },\n                    injectParams: transactions\n                }, chainId);\n                if (\"result\" in response) {\n                    let result = response.result;\n                    let newTransactions = JSON.parse(result).map((s) => {\n                        let c = bs58_1.default.decode(s);\n                        try {\n                            let transaction = web3_js_1.Transaction.from(c);\n                            (0, core_1.logDebug)(\"verifySignatures\", transaction.verifySignatures());\n                            return transaction;\n                        }\n                        catch (error) {\n                            return web3_js_1.VersionedTransaction.deserialize(c);\n                        }\n                    });\n                    return new Promise((resolve, reject) => {\n                        resolve(newTransactions);\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        resolve(response);\n                    });\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"getSignedTransaction\", error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    signAndSendTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            chainId = this.getRealChainId(chainId);\n            try {\n                let data = {};\n                try {\n                    let serializedMessage = transaction.serialize({\n                        requireAllSignatures: false,\n                        verifySignatures: false,\n                    });\n                    data = { \"data\": bs58_1.default.encode(serializedMessage), \"from\": (_a = this.getAccount(chainId)) === null || _a === void 0 ? void 0 : _a.address };\n                }\n                catch (e) {\n                    let serializedMessage = transaction.serialize();\n                    data = { \"data\": bs58_1.default.encode(serializedMessage), \"from\": (_b = this.getAccount(chainId)) === null || _b === void 0 ? void 0 : _b.address };\n                }\n                let signature = yield this.provider.request({\n                    \"method\": \"solana_signAndSendTransaction\",\n                    \"params\": data,\n                    injectParams: transaction\n                }, chainId);\n                if ('result' in signature) {\n                    let successData = signature.result;\n                    return new Promise((resolve, reject) => {\n                        resolve(successData);\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        resolve(signature);\n                    });\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"getSignedTransaction\", error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    getSignedTransaction(method, transactionStr, chainId, transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let signature = yield this.provider.request({\n                    \"method\": method,\n                    \"params\": transactionStr,\n                    injectParams: transaction\n                }, chainId);\n                if ('result' in signature) {\n                    let successData = signature.result;\n                    let c = bs58_1.default.decode(successData);\n                    let resultTx;\n                    try {\n                        resultTx = web3_js_1.Transaction.from(c);\n                    }\n                    catch (error) {\n                        resultTx = web3_js_1.VersionedTransaction.deserialize(c);\n                    }\n                    if (!(resultTx instanceof web3_js_1.VersionedTransaction)) {\n                        (0, core_1.logDebug)(\"verifySignatures\", resultTx.verifySignatures());\n                    }\n                    return new Promise((resolve, reject) => {\n                        resolve(resultTx);\n                    });\n                }\n                else if (\"injectResult\" in signature) {\n                    (0, core_1.logDebug)(\"getSignedTransaction injectResult\");\n                    let resultTx = signature.injectResult;\n                    return new Promise((resolve, reject) => {\n                        resolve(resultTx);\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        reject(signature);\n                    });\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"getSignedTransaction\", error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n}\nexports.OKXSolanaProvider = OKXSolanaProvider;\nexports.default = OKXSolanaProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXSolanaProvider = void 0;\nvar OKXSolanaProvider_1 = require(\"./OKXSolanaProvider\");\nObject.defineProperty(exports, \"OKXSolanaProvider\", { enumerable: true, get: function () { return OKXSolanaProvider_1.OKXSolanaProvider; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXSuiProvider = void 0;\nconst universal_provider_1 = require(\"@okxconnect/universal-provider\");\nconst transactions_1 = require(\"@mysten/sui/transactions\");\nconst utils_1 = require(\"@mysten/sui/utils\");\nconst client_1 = require(\"@mysten/sui/client\");\nclass OKXSuiProvider {\n    get defaultNetwork() {\n        let network = this.provider.requestDefaultChainWithNamespace(universal_provider_1.NameSpaceKeySui);\n        return network;\n    }\n    get suiClient() {\n        var _a;\n        let rpcUrl = (0, client_1.getFullnodeUrl)(this.defaultNetwork);\n        let suiProvider = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[universal_provider_1.NameSpaceKeySui];\n        if (suiProvider && suiProvider.rpcMap) {\n            let url = suiProvider.rpcMap[this.currentChainId];\n            if (url !== undefined) {\n                // @ts-ignore\n                rpcUrl = url;\n                console.log(\"use custom rpc======> \", rpcUrl);\n            }\n            else {\n                console.log(\"use mainnet rpc======> \", rpcUrl);\n            }\n        }\n        else {\n            console.log(\"use mainnet rpc======> \", rpcUrl);\n        }\n        return new client_1.SuiClient({ url: rpcUrl });\n    }\n    get currentChainId() {\n        return `sui:${this.defaultNetwork}`;\n    }\n    constructor(provider) {\n        this.provider = provider;\n    }\n    getAccount() {\n        var _a, _b, _c, _d, _e, _f, _g;\n        let namespaces = universal_provider_1.NameSpaceKeySui;\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[namespaces]) === null || _b === void 0 ? void 0 : _b.accounts[0];\n        console.log('====> getAccount');\n        console.log(account);\n        if (!account) {\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        console.log(\"sui_publicKey\", (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[namespaces]) === null || _d === void 0 ? void 0 : _d.extra);\n        let extra = (_g = (_f = (_e = this.provider.session) === null || _e === void 0 ? void 0 : _e.namespaces[namespaces]) === null || _f === void 0 ? void 0 : _f.extra) === null || _g === void 0 ? void 0 : _g[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n            console.log(\"sui_publicKey\", publicKey);\n        }\n        if (!address) {\n            return undefined;\n        }\n        return {\n            address: address,\n            publicKey: publicKey\n        };\n    }\n    signTransaction(input) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const [txBytes, txSerialize] = yield this.generateTsBytesAndSerizlize(input);\n            const ret = yield this.provider.request({\n                method: \"sui_signTransactionBlock\",\n                params: {\n                    txBytes: txBytes,\n                    txSerialize: txSerialize\n                },\n                injectParams: Object.assign({}, input)\n            }, this.currentChainId);\n            if (\"result\" in ret) {\n                return {\n                    signature: ret.result,\n                    transactionBlockBytes: txBytes,\n                };\n            }\n            else {\n                let errorData = ret;\n                return errorData.error;\n            }\n        });\n    }\n    signAndExecuteTransaction(input) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const [txBytes, txSerialize] = yield this.generateTsBytesAndSerizlize(input);\n            let ret = (yield this.provider.request({\n                method: \"sui_signAndExecuteTransactionBlock\",\n                params: {\n                    txBytes: txBytes,\n                    txSerialize: txSerialize,\n                },\n                injectParams: Object.assign({}, input)\n            }, this.currentChainId));\n            if (\"result\" in ret) {\n                return {\n                    confirmedLocalExecution: false,\n                    digest: ret.result,\n                    txBytes: txBytes,\n                };\n            }\n            else {\n                let errorData = ret;\n                return errorData.error;\n            }\n        });\n    }\n    // input = {message: uint8Array }\n    signMessage(input) {\n        return __awaiter(this, void 0, void 0, function* () {\n            console.log(\"====> signMessage:\");\n            console.log(input);\n            const decoder = new TextDecoder(\"utf8\");\n            const b64encoded = btoa(decoder.decode(input.message));\n            const message = atob(b64encoded);\n            const ret = (yield this.provider.request({\n                method: \"sui_signMessage\",\n                params: {\n                    message: message\n                },\n                injectParams: Object.assign({}, input)\n            }, this.currentChainId));\n            if (\"result\" in ret) {\n                let successData = ret;\n                console.log(\"====> signAction result\");\n                console.log(ret);\n                const sign = successData.result;\n                return {\n                    messageBytes: b64encoded,\n                    signature: sign,\n                };\n            }\n            else {\n                console.log(\"====> signAction result error\");\n                let errorData = ret;\n                return errorData.error;\n            }\n        });\n    }\n    // input = {message: uint8Array }\n    signPersonalMessage(input) {\n        return __awaiter(this, void 0, void 0, function* () {\n            console.log(\"====> signPersonalMessage：\");\n            console.log(input);\n            const decoder = new TextDecoder(\"utf8\");\n            const b64encoded = btoa(decoder.decode(input.message));\n            const message = atob(b64encoded);\n            const ret = (yield this.provider.request({\n                method: \"sui_signPersonalMessage\",\n                params: {\n                    message: message,\n                },\n                injectParams: Object.assign({}, input)\n            }, this.currentChainId));\n            if (\"result\" in ret) {\n                let successData = ret;\n                console.log(\"====> signAction result\");\n                console.log(ret);\n                const sign = successData.result;\n                return {\n                    bytes: b64encoded,\n                    signature: sign,\n                };\n            }\n            else {\n                console.log(\"====> signAction result error\");\n                let errorData = ret;\n                return errorData.error;\n            }\n        });\n    }\n    /// generate txBytes and txSerialize\n    generateTsBytesAndSerizlize(input) {\n        return __awaiter(this, void 0, void 0, function* () {\n            /// txBytes and txSerialize may be constructed in advance by the dapp side\n            let resultTuple = [\"\", \"\"];\n            if (\"txBytes\" in input &&\n                input.txBytes.length > 0 &&\n                \"txSerialize\" in input &&\n                input.txSerialize.length > 0) {\n                resultTuple = [input.txBytes, input.txSerialize];\n            }\n            /// Otherwise, a transactionBlock parameter is required.\n            if (!(\"transactionBlock\" in input)) {\n                throw new universal_provider_1.OKXConnectError(universal_provider_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `params doesn't contains transactionBlock`);\n            }\n            let senderAccounts = this.provider.requestAccountsWithNamespace(universal_provider_1.NameSpaceKeySui);\n            if (senderAccounts.length == 0) {\n                throw new universal_provider_1.OKXConnectError(universal_provider_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `there is no sui account`);\n            }\n            /// sender is required\n            input.transactionBlock.setSender(senderAccounts[0]);\n            const result = yield input.transactionBlock.build({\n                client: this.suiClient,\n            });\n            const txBytes = (0, utils_1.toBase64)(result);\n            const txSerialize = yield transactions_1.Transaction.from(txBytes).toJSON();\n            resultTuple = [txBytes, txSerialize];\n            return new Promise((resolve) => {\n                resolve(resultTuple);\n            });\n        });\n    }\n}\nexports.OKXSuiProvider = OKXSuiProvider;\nexports.default = OKXSuiProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXSuiProvider = void 0;\nvar OKXSuiProvider_1 = require(\"./OKXSuiProvider\");\nObject.defineProperty(exports, \"OKXSuiProvider\", { enumerable: true, get: function () { return OKXSuiProvider_1.OKXSuiProvider; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXBtcProvider = void 0;\nconst _1 = require(\"./\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXBtcProvider {\n    constructor(provider) {\n        this.caip = [\n            \"btc:mainnet\",\n            \"fractal:mainnet\"\n        ];\n        this.provider = provider;\n    }\n    getAddressForChainId(chainId) {\n        var _a, _b;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let accounts = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        });\n        if (accounts == undefined || accounts.length < 0) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `no connected account`);\n        }\n        let account = accounts[0];\n        const address = account.split(':')[2];\n        return address;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let extra = (_c = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.extra) === null || _c === void 0 ? void 0 : _c[chainId];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"compressedPublicKey\"];\n        }\n        return {\n            address: this.getAddressForChainId(chainId),\n            publicKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param signStr\n     * @param chainId\n     * @param type\n     * @returns\n     */\n    signMessage(chainId, signStr, type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (signStr === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signMessage parmas error`);\n            }\n            let params = {\n                signStr: signStr,\n                from: this.getAddressForChainId(chainId)\n            };\n            if (type) {\n                params.type = type;\n            }\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signMessage\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param toAddress\n     * @param satoshis\n     * @param options { feeRate: 0 }\n     * @returns\n     */\n    sendBitcoin(chainId, toAddress, satoshis, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            let params = {\n                from: this.getAddressForChainId(chainId),\n                to: toAddress,\n                value: (satoshis / 100000000).toString(),\n            };\n            if (options === null || options === void 0 ? void 0 : options.feeRate) {\n                params[\"satBytes\"] = options.feeRate.toString();\n            }\n            let result = yield this.send(chainId, params);\n            if (result !== undefined && ('txhash' in result)) {\n                // return txhash directly\n                return result.txhash;\n            }\n            // or return unexpected result\n            return result;\n        });\n    }\n    //  from - string：当前连接的钱包的 BTC 地址\n    //  to - string：接受 BTC 的地址\n    //  value - string：发送 BTC 的数量\n    //  satBytes - string： (可选) 自定义费率\n    //  memo - string： (可选) 指定 outputs OP_RETURN 内容 示例\n    //  memoPos - number： (可选) 指定 outputs OP_RETURN 输出位置，如果传了 memo 则必须传入 memoPos 指定位置，否则 memo 不生效\n    send(chainId, input) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (!this.checkParameters(input, 'to', 'value')) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send parmas  error`);\n            }\n            input[\"from\"] = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: 'btc_send',\n                    params: input\n                }, chainId);\n                if ('result' in ret) {\n                    return {\n                        txhash: ret.result\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param psbtHex string 要签名的 psbt 的十六进制字符串\n     * @param options object { autoFinalized: 0 }\n     */\n    signPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.signPsbts(chainId, [psbtHex], [options]).then(psbtResults => {\n                    let results = JSON.parse(psbtResults);\n                    resolve(results[0]);\n                }).catch(error => {\n                    reject(error);\n                });\n            });\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHexs Array\n     * @param options Array [{ autoFinalized: 0 }]\n     * @returns\n     */\n    signPsbts(chainId, psbtHexs, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHexs === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHexs: psbtHexs,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signPsbts\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHex string\n     * @param options object\n     * @returns\n     */\n    signAndPushPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHex === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHex: psbtHex,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signAndPushPsbt\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return JSON.parse(ret.result);\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param address string, receiver address\n     * @param inscriptionId string, 铭文 ID + 协议，没有传协议则默认是 Ordinals NFT ，目前仅支持 Ordinals 及 Atomicals 协议\n     * @param options object, { feeRate: number } custom rates\n     */\n    sendInscription(chainId, address, inscriptionId, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let extension = {\n                address: address,\n                inscriptionId: inscriptionId,\n                options: options\n            };\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (address === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method sendInscription params error`);\n            }\n            var feeRate = 0;\n            if (options && ('feeRate' in options)) {\n                feeRate = options.feeRate;\n            }\n            let coinId = '';\n            let from = this.getAddressForChainId(chainId);\n            var protocolId = 7; //ProtocolIdBRCNFT\n            if (inscriptionId !== 'undefined') {\n                let atomicSuffix = \"-Atomicals\";\n                let ordinalsSuffix = \"-Ordinals\";\n                if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(atomicSuffix.toLowerCase())) {\n                    protocolId = 8; //WXRCProtocolIdARCNFT\n                    inscriptionId = this.removeSuffix(inscriptionId, atomicSuffix);\n                }\n                else if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(ordinalsSuffix.toLowerCase())) {\n                    inscriptionId = this.removeSuffix(inscriptionId, ordinalsSuffix);\n                }\n            }\n            let params = {\n                scenario: 5,\n                feeRate: feeRate,\n                txType: \"20\",\n                to: address,\n                batchBean: [\n                    {\n                        coinAmount: \"1\",\n                        nftId: inscriptionId,\n                        protocolId: protocolId,\n                        coinId: coinId,\n                        inscriptionId: \"\",\n                        from: from\n                    }\n                ],\n                extension: extension\n            };\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_sendInscription\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    sendRunes(chainId, address, runeid, amount, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!chainId || !address || !runeid || !amount) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `The parameter is empty. Please check`);\n                }\n                let ns = this.checkChainId(chainId);\n                let protocolId = undefined;\n                if (ns != undefined) {\n                    if (ns.startsWith(\"btc\")) {\n                        protocolId = 13;\n                    }\n                    else if (ns.startsWith(\"fractal\")) {\n                        protocolId = 16;\n                    }\n                }\n                if (ns == undefined || protocolId == undefined) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n                }\n                let fromAddress = this.getAddressForChainId(chainId); // string\n                let params = {\n                    fromAddress: fromAddress,\n                    protocolId: protocolId,\n                    address: address, //String\n                    runeid: runeid, //String\n                    amount: amount, // String\n                    options: options\n                };\n                (0, core_1.logDebug)(\"OKXBtcProvider sendRunes -->\", JSON.stringify(params));\n                const ret = yield this.provider.request({\n                    method: \"btc_sendRunes\",\n                    params: params\n                }, chainId);\n                return ret.result;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    inscribeTransfer(chainId, ticker, amount) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!chainId || !ticker || !amount) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `The parameter is empty. Please check`);\n                }\n                let ns = this.checkChainId(chainId);\n                let protocolId = undefined;\n                if (ns != undefined) {\n                    if (ns.startsWith(\"btc\")) {\n                        protocolId = 1;\n                    }\n                    else if (ns.startsWith(\"fractal\")) {\n                        protocolId = 14;\n                    }\n                }\n                if (ns == undefined || protocolId == undefined) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n                }\n                let fromAddress = this.getAddressForChainId(chainId); // string\n                let params = {\n                    fromAddress: fromAddress,\n                    protocolId: protocolId,\n                    ticker: ticker, //String\n                    amount: amount, // String\n                };\n                (0, core_1.logDebug)(\"OKXBtcProvider inscribeTransfer -->\", JSON.stringify(params));\n                const ret = yield this.provider.request({\n                    method: \"btc_inscribeTransfer\",\n                    params: params\n                }, chainId);\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    removeSuffix(str, suffix) {\n        if (str.endsWith(suffix)) {\n            return str.slice(0, str.length - suffix.length);\n        }\n        return str;\n    }\n    checkParameters(params, ...keys) {\n        var unexistKeys = [];\n        keys.forEach(key => {\n            if (!(`${key}` in params)) {\n                unexistKeys.push(key);\n            }\n        });\n        if (unexistKeys.length > 0) {\n            console.log('not find key: ', unexistKeys.join(\",\"));\n            return false;\n        }\n        return true;\n    }\n    /**\n     *\n     * @param chainId eg. btc:mainnet\n     * @returns eg. btc\n     */\n    checkChainId(chainId) {\n        if (this.caip.includes(chainId)) {\n            let [namespaceKey, _] = chainId.split(\":\");\n            return namespaceKey;\n        }\n        return undefined;\n    }\n}\nexports.OKXBtcProvider = OKXBtcProvider;\nexports.default = OKXBtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCosmosProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXCosmosProvider {\n    constructor(provider) {\n        this.provider = provider;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e, _f;\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount chainId:\", chainId);\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount namespaces:\", JSON.stringify((_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces));\n        let account = (_c = (_b = this.provider.session) === null || _b === void 0 ? void 0 : _b.namespaces[core_1.NameSpaceKeyCosmos]) === null || _c === void 0 ? void 0 : _c.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount account:\", JSON.stringify(account));\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount address:\", address);\n        let extra = (_f = (_e = (_d = this.provider.session) === null || _d === void 0 ? void 0 : _d.namespaces[core_1.NameSpaceKeyCosmos]) === null || _e === void 0 ? void 0 : _e.extra) === null || _f === void 0 ? void 0 : _f[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n            console.log(\"aptos_publicKey\", publicKey);\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            algo: \"secp256k1\",\n            address: address,\n            bech32Address: address,\n            pubKey: this.hexToUint8Array(publicKey),\n        };\n    }\n    signArbitrary(chainId, signerAddress, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const base64Encoded = window.btoa(data);\n            const signDoc = {\n                chain_id: \"\",\n                account_number: \"0\",\n                sequence: \"0\",\n                fee: {\n                    gas: \"0\",\n                    amount: []\n                },\n                msgs: [{\n                        \"type\": \"sign/MsgSignData\",\n                        \"value\": {\n                            \"signer\": signerAddress,\n                            \"data\": base64Encoded\n                        }\n                    }],\n                memo: \"\"\n            };\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signArbitrary\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chain_id\": chainId.split(\":\")[1],\n                    \"data\": signDoc\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    if (typeof ret.result == \"string\") {\n                        return JSON.parse(ret.result);\n                    }\n                    else {\n                        return ret.result;\n                    }\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAmino(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (signDoc.msgs[0].type == \"sign/MsgSignData\") {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signArbitrary\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chain_id\": chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        return ret.result;\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    return error;\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                }\n            }\n            else {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signAmino\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chainId\": chainId.split(\":\")[1],\n                        \"sign_doc\": signDoc,\n                        \"signOptions\": signOptions\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        const resData = JSON.parse(ret.result);\n                        console.log(\"signdoc\", signDoc, resData.signDoc);\n                        signDoc.fee = resData.signDoc.fee;\n                        return { signed: signDoc, signature: resData.signature };\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                    return error;\n                }\n            }\n        });\n    }\n    signDirect(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const object = {\n                bodyBytes: this.bufferToHex(signDoc.bodyBytes),\n                authInfoBytes: this.bufferToHex(signDoc.authInfoBytes),\n                chainId: signDoc.chainId,\n                accountNumber: signDoc.accountNumber ? signDoc.accountNumber.toString() : null,\n                signOptions: signOptions ? signOptions : null\n            };\n            let data = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signDirect\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chainId\": chainId.split(\":\")[1],\n                    \"sign_doc\": object,\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    const res = JSON.parse(ret.result);\n                    console.log(\"signdirect result\", res);\n                    signDoc.authInfoBytes = this.messageToBuffer(res.signDoc.authInfoBytes);\n                    return { signed: signDoc, signature: res.signature };\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    messageToBuffer(message) {\n        var buffer = Uint8Array.from([]);\n        try {\n            if (typeof message === \"string\") {\n                buffer = this.hexToUint8Array(message.replace(\"0x\", \"\"));\n            }\n            else {\n                buffer = Uint8Array.from(message);\n            }\n        }\n        catch (err) {\n            console.log(`messageToBuffer error: ${err}`);\n        }\n        return buffer;\n    }\n    bufferToHex(arr) {\n        let output = [...new Uint8Array(arr)]\n            .map(x => x.toString(16).padStart(2, '0'))\n            .join('');\n        return '0x' + output;\n    }\n    hexToUint8Array(hexString) {\n        if (hexString.length % 2 !== 0) {\n            throw \"Invalid hexString\";\n        }\n        var arrayBuffer = new Uint8Array(hexString.length / 2);\n        for (var i = 0; i < hexString.length; i += 2) {\n            var byteValue = parseInt(hexString.substr(i, 2), 16);\n            if (isNaN(byteValue)) {\n                throw \"Invalid hexString\";\n            }\n            arrayBuffer[i / 2] = byteValue;\n        }\n        return arrayBuffer;\n    }\n}\nexports.OKXCosmosProvider = OKXCosmosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXStarknetProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXStarknetProvider {\n    constructor(provider) {\n        this.STARKNET_CHAIN_ID = \"starknet:mainnet\";\n        this.provider = provider;\n    }\n    getChain(chainId) {\n        if (chainId == null) {\n            chainId = this.STARKNET_CHAIN_ID;\n        }\n        if (chainId != this.STARKNET_CHAIN_ID) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, \"The chainId:\" + chainId + \"is wrong for OKXStarknetProvider\");\n        }\n        return chainId;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyStarknet]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyStarknet]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address,\n            pubKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param chainId\n     * @param signerAddress\n     * @param data: { types, primaryType, domain, message } as TypedData\n     * @returns [signedDataR, signedDataS]\n     */\n    signMessage(signerAddress, typedData, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            if (signerAddress.length == 0) {\n                signerAddress = this.getAccount(chainId)[\"address\"];\n            }\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"starknet_signMessage\",\n                \"params\": {\n                    \"accountAddress\": signerAddress,\n                    \"typedData\": typedData\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    let results = ret.result;\n                    if (typeof results == 'string') {\n                        results = JSON.parse(results);\n                    }\n                    return [results[\"signedDataR\"], results[\"signedDataS\"]];\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     * sendTransaction\n     * @param chainId\n     * @param signerAddress\n     * @param transaction\n     * @returns { transaction_hash }\n     */\n    sendTransaction(signerAddress, transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let transactionData = {\n                \"accountAddress\": signerAddress,\n                \"executionRequest\": transaction\n            };\n            let data = {\n                \"method\": \"starknet_sendTransaction\",\n                \"params\": {\n                    \"data\": JSON.stringify(transactionData),\n                    \"from\": signerAddress\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return { transaction_hash: ret.result };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * signMessage old API（rarely used, no need provide to external）\n     * @param chainId\n     * @param payload\n     * @returns {transaction_hash, class_hash}\n     */\n    signMessageDeclareContractPayload(payload, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            try {\n                let data = {\n                    \"method\": \"starknet_signMessage\",\n                    \"params\": payload\n                };\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return {\n                        \"transaction_hash\": ret.result[\"txHash\"],\n                        \"class_hash\": ret.result[\"classHash\"]\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     * sendTransaction old API（rarely used, no need provide to external）\n     * @param chainId\n     * @param signerAddress\n     * @param calls\n     * @param abis\n     * @param transactionsDetail\n     * @returns { transaction_hash }\n     */\n    /// todo： \n    /// 修改方法名\n    /// chainId 放后面\n    sendMessageExecuteTransactionDetail(signerAddress, calls, abis, transactionsDetail, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            const transactions = Array.isArray(calls) ? calls : [calls];\n            const executionRequest = {\n                \"calls\": transactions,\n                \"abis\": abis,\n                \"transactionsDetail\": {\n                    \"nonce\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.nonce,\n                    \"maxFee\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.nonce,\n                    \"version\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.version,\n                }\n            };\n            return this.sendTransaction(signerAddress, executionRequest, chainId);\n        });\n    }\n}\nexports.OKXStarknetProvider = OKXStarknetProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTonProvider = void 0;\nconst _1 = require(\"./\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTonProvider {\n    constructor(generator) {\n        this.statusChangeSubscriptions = [];\n        this.statusChangeErrorSubscriptions = [];\n        this.provider = generator;\n        this.provider.on(\"connect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event connect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"reconnect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event reconnect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"disconnect\", () => {\n            (0, core_1.logDebug)(\"OKXTONProvider event disconnect:\");\n            this.statusChangeSubscriptions.forEach(callback => callback(null));\n        });\n        this.provider.on(\"connect_error\", (error) => {\n            (0, core_1.logDebug)(\"OKXTONProvider event connect_error:\", JSON.stringify(error));\n            this.statusChangeErrorSubscriptions.forEach(errorsHandler => errorsHandler(error));\n        });\n    }\n    connected() {\n        if (this.provider.connected()) {\n            return !!this.provider.session.namespaces[\"ton\"];\n        }\n        return false;\n    }\n    account() {\n        try {\n            if (!this.provider.session) {\n                return null;\n            }\n            let tonNameSpace = this.provider.session.namespaces['ton'];\n            if (!tonNameSpace || !tonNameSpace.payload || !tonNameSpace.payload.ton_addr) {\n                return null;\n            }\n            let ton_addr = tonNameSpace.payload.ton_addr;\n            return {\n                address: ton_addr.address,\n                chain: ton_addr.network,\n                walletStateInit: ton_addr.walletStateInit,\n                publicKey: ton_addr.publicKey,\n            };\n        }\n        catch (e) {\n            (0, core_1.logDebug)(\"OKXTONProvider account  error:\", JSON.stringify(e));\n            return null;\n        }\n    }\n    wallet() {\n        if (this.connected()) {\n            try {\n                let sessionWallet = this.provider.session.wallet;\n                let tonDeviceInfo = {\n                    platform: sessionWallet.platform,\n                    appName: sessionWallet.appName,\n                    appVersion: sessionWallet.appVersion,\n                    maxProtocolVersion: sessionWallet.maxProtocolVersion,\n                    features: ['ton_sendTransaction'],\n                };\n                const wallet = {\n                    device: tonDeviceInfo,\n                    provider: \"http\",\n                    account: this.account()\n                };\n                let tonNameSpace = this.provider.session.namespaces['ton'];\n                if (tonNameSpace && tonNameSpace.payload && tonNameSpace.payload.ton_proof) {\n                    wallet.connectItems = {\n                        tonProof: tonNameSpace.payload.ton_proof\n                    };\n                }\n                (0, core_1.logDebug)(\"OKXTONProvider wallet :\", JSON.stringify(wallet));\n                return wallet;\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"OKXTONProvider wallet  error:\", JSON.stringify(e));\n                return null;\n            }\n        }\n        return null;\n    }\n    onStatusChange(callback, errorsHandler) {\n        this.statusChangeSubscriptions.push(callback);\n        if (errorsHandler) {\n            this.statusChangeErrorSubscriptions.push(errorsHandler);\n        }\n        return () => {\n            this.statusChangeSubscriptions = this.statusChangeSubscriptions.filter(item => item !== callback);\n            if (errorsHandler) {\n                this.statusChangeErrorSubscriptions = this.statusChangeErrorSubscriptions.filter(item => item !== errorsHandler);\n            }\n        };\n    }\n    sendTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (transaction.network && transaction.network !== core_1.TONCHAIN.MAINNET) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, 'OKXTONProvider sendTransaction network error');\n            }\n            if (!transaction.network) {\n                transaction.network = core_1.TONCHAIN.MAINNET;\n            }\n            if (this.provider.session) {\n                if (!transaction.from) {\n                    const accounts = this.provider.requestAccountsWithNamespace('ton');\n                    transaction.from = accounts[0];\n                }\n            }\n            const requestParams = {\n                method: \"ton_sendTransaction\",\n                params: transaction,\n            };\n            let chain = 'ton:' + core_1.TONCHAIN.MAINNET;\n            (0, core_1.logDebug)(\"OKXTONProvider sendTransaction transaction----:\", chain, JSON.stringify(requestParams));\n            return this.provider.request(requestParams, chain);\n        });\n    }\n}\nexports.OKXTonProvider = OKXTonProvider;\nexports.default = OKXTonProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTronProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTronProvider {\n    constructor(provider) {\n        this.TRON_CHAIN_ID = \"tron:mainnet\";\n        this.provider = provider;\n    }\n    getChain(chainId) {\n        if (chainId == null) {\n            chainId = this.TRON_CHAIN_ID;\n        }\n        if (chainId != this.TRON_CHAIN_ID) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, \"The chainId:\" + chainId + \"is wrong for OKXTronProvider\");\n        }\n        return chainId;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        chainId = this.getChain(chainId);\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyTron]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyTron]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address\n        };\n    }\n    stringToHex(str) {\n        let hex = '';\n        for (let i = 0; i < str.length; i++) {\n            hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n        }\n        return hex;\n    }\n    signMessage(data, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessage\",\n                \"params\": {\n                    \"message\": this.stringToHex(data)\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signMessageV2(data, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessageV2\",\n                \"params\": {\n                    \"message\": data\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let data = {\n                \"method\": \"tron_signTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    let signedTx;\n                    if (typeof ret.result == \"string\") {\n                        signedTx = JSON.parse(ret.result);\n                    }\n                    else {\n                        signedTx = ret.result;\n                    }\n                    let realSignTx = {};\n                    realSignTx.visible = signedTx.visible;\n                    realSignTx.txID = signedTx.txID;\n                    let rawData = {};\n                    rawData.contract = signedTx.raw_data.contract;\n                    rawData.expiration = signedTx.raw_data.expiration;\n                    rawData.ref_block_bytes = signedTx.raw_data.ref_block_bytes;\n                    rawData.fee_limit = signedTx.raw_data.fee_limit;\n                    rawData.ref_block_hash = signedTx.raw_data.ref_block_hash;\n                    rawData.timestamp = signedTx.raw_data.timestamp;\n                    realSignTx.raw_data = rawData;\n                    realSignTx.raw_data_hex = signedTx.raw_data_hex;\n                    realSignTx.signature = signedTx.signature;\n                    return realSignTx;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAndSendTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let data = {\n                \"method\": \"tron_signAndSendTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n}\nexports.OKXTronProvider = OKXTronProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXUniversalProvider = void 0;\nconst eip155_1 = require(\"./provider/providers/eip155\");\nconst sui_1 = require(\"./provider/providers/sui\");\nconst constants_1 = require(\"./provider/constants\");\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nconst client_1 = require(\"./packages/sign-client/client\");\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"./packages/utils/namespaces\");\nconst solana_1 = __importDefault(require(\"./provider/providers/solana\"));\nconst btc_1 = __importDefault(require(\"./provider/providers/btc\"));\nconst aptos_1 = __importDefault(require(\"./provider/providers/aptos\"));\nconst ton_1 = __importDefault(require(\"./provider/providers/ton\"));\nconst cosmos_1 = __importDefault(require(\"./provider/providers/cosmos\"));\nconst tron_1 = __importDefault(require(\"./provider/providers/tron\"));\nconst utils_1 = require(\"./provider/utils\");\nconst packages_1 = require(\"./packages\");\nconst provider_1 = require(\"./provider\");\nconst starknet_1 = __importDefault(require(\"./provider/providers/starknet\"));\nclass OKXUniversalProvider {\n    static init(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_2.logDebug)('OKXUniversalProvider init() called');\n            (0, core_2.checkMetaData)(opts.dappMetaData);\n            // ignore rpc provider check by default\n            (0, utils_1.setGlobal)('disableProviderPing', true);\n            let provider;\n            if (window && window.okxConnectUniversalinwindow && window.okxConnectUniversalinwindow instanceof OKXUniversalProvider) {\n                (0, core_2.logDebug)('OKXUniversalConnect init() old called');\n                provider = window.okxConnectUniversalinwindow;\n            }\n            else {\n                (0, core_2.logDebug)('OKXUniversalConnect init() new called');\n                provider = new OKXUniversalProvider(opts);\n                if (window) {\n                    window.okxConnectUniversalinwindow = provider;\n                }\n                yield provider.initialize();\n            }\n            (0, core_2.getDefaultReporter)().configVersionAndSide('universalprovider-1.5.2', 'dapp', provider.providerOpts.dappMetaData.name);\n            return provider;\n        });\n    }\n    constructor(opts) {\n        this.rpcProviders = {};\n        this.events = new eventemitter3_1.default();\n        if (!opts.connector || opts.connector.length == 0) {\n            opts.connector = [core_2.AppwalletConnector.getConnector(), core_2.TgwalletConnector.getConnector()];\n        }\n        this.providerOpts = opts;\n    }\n    request(args, chain) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_2.logDebug)('OKXUniversalProvider request() called');\n            (0, core_2.reportLog)('OKXUniversalProvider request() called');\n            if (!this.connected()) {\n                throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            (0, core_2.logDebug)('OKXUniversalProvider request()  connected ');\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return yield this.getProvider(namespace).request(requestParam);\n        });\n    }\n    buildRequestParamFromRequest(args, chain) {\n        var _a;\n        (0, core_2.logDebug)(\"UniversalProvider request args >>>>>>>: \", chain, (0, core_2.safeJsonStringify)(args));\n        let [namespace, chainId] = this.validateChain(chain);\n        if (!this.session) {\n            throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Please call connect() before request()\");\n        }\n        let keyArr = Object.keys(this.session.namespaces);\n        if (!chain && keyArr && keyArr.length > 1) {\n            throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Multiple chains have been linked, the request method requires chain`);\n        }\n        let realChain = (0, core_1.replaceChainNameToChainId)(`${namespace}:${chainId}`);\n        if (realChain != null) {\n            namespace = realChain.split(\":\")[0];\n            chainId = realChain.split(\":\")[1];\n        }\n        // if (namespace == \"aptos\" && chainId == \"mainnet\") {\n        //     namespace = \"aptos\"\n        //     chainId = \"637\"\n        // }\n        // if (namespace == \"movement\" && chainId == \"testnet\") {\n        //     namespace = \"aptos\"\n        //     chainId = \"70000060\"\n        // }\n        const requestParam = Object.assign(Object.assign({}, args), { chainId: `${namespace}:${chainId}`, redirect: (_a = args.redirect) !== null && _a !== void 0 ? _a : this.sessionConfig.redirect });\n        return { namespace, requestParam };\n    }\n    enable() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.client) {\n                throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (!this.session) {\n                if (this.connectOpts) {\n                    yield this.connect(this.connectOpts);\n                }\n                else {\n                    throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n                }\n            }\n            const accounts = yield this.requestAccounts();\n            return accounts;\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_2.logDebug)('OKXUniversalProvider disconnect() called');\n            (0, core_2.reportLog)('provider disconnect called');\n            if (!this.session) {\n                throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                let called = false;\n                const onRequestSent = () => __awaiter(this, void 0, void 0, function* () {\n                    if (!called) {\n                        called = true;\n                        yield this.disconnectAndEmit();\n                        yield this.cleanup();\n                        resolve();\n                        (0, core_2.logDebug)(\"UniversalProvider disconnect Disconnected\");\n                        (0, core_2.reportLog)('provider disconnect disconnected');\n                    }\n                });\n                try {\n                    yield this.client.disconnect();\n                    yield onRequestSent();\n                }\n                catch (e) {\n                    yield onRequestSent();\n                }\n            }));\n        });\n    }\n    disconnectAndEmit() {\n        var _a, _b;\n        this.client.engine.connectManagerDisconnect();\n        this.events.emit(\"disconnect\", { topic: (_a = this.session) === null || _a === void 0 ? void 0 : _a.topic });\n        this.events.emit(\"session_delete\", { topic: (_b = this.session) === null || _b === void 0 ? void 0 : _b.topic });\n    }\n    replaceNamespace(opts, nameSpace) {\n        var _a, _b;\n        let aptosNameSpace = (_a = opts.namespaces) === null || _a === void 0 ? void 0 : _a[nameSpace];\n        if (aptosNameSpace != undefined) {\n            let realNS = this.replaceNamespaceInner(aptosNameSpace);\n            if (opts.namespaces != undefined && nameSpace in opts.namespaces && realNS != undefined) {\n                opts.namespaces[nameSpace] = realNS;\n            }\n        }\n        let optionAptosNameSpace = (_b = opts.optionalNamespaces) === null || _b === void 0 ? void 0 : _b[nameSpace];\n        if (optionAptosNameSpace != undefined) {\n            let realOptionNS = this.replaceNamespaceInner(optionAptosNameSpace);\n            if (opts.optionalNamespaces != undefined && nameSpace in opts.optionalNamespaces && realOptionNS != undefined) {\n                opts.optionalNamespaces[nameSpace] = realOptionNS;\n            }\n        }\n        return opts;\n    }\n    replaceNamespaceInner(aptosNameSpace) {\n        var _a;\n        if (aptosNameSpace != undefined) {\n            aptosNameSpace.chains = (_a = aptosNameSpace.chains) === null || _a === void 0 ? void 0 : _a.map(chainId => {\n                return (0, core_1.replaceChainNameToChainId)(chainId);\n            });\n            if (aptosNameSpace.defaultChain != undefined) {\n                aptosNameSpace.defaultChain = (0, core_1.replaceChainNameToChainId)(aptosNameSpace.defaultChain);\n            }\n        }\n        return aptosNameSpace;\n    }\n    replaceSessionAptos(session, namespace) {\n        var _a;\n        let namespaces = (_a = session === null || session === void 0 ? void 0 : session.namespaces) === null || _a === void 0 ? void 0 : _a[namespace];\n        if (namespaces != undefined && namespaces.chains != undefined) {\n            namespaces.chains = namespaces.chains.map(chain => {\n                return (0, core_1.replaceChainIdToChainName)(chain);\n            });\n            namespaces.accounts = namespaces.accounts.map((account) => {\n                return (0, core_1.replaceChainIdToChainName)(account);\n            });\n            let extra = {};\n            Object.keys(namespaces.extra || {}).forEach((key, index) => {\n                let newKey = (0, core_1.replaceChainIdToChainName)(key);\n                extra[(0, core_1.replaceChainIdToChainName)(key)] = Object.values((session === null || session === void 0 ? void 0 : session.namespaces[namespace].extra) || {})[index];\n            });\n            namespaces.extra = extra;\n        }\n        (0, core_2.logDebug)(\"replaceSessionAptos\", session);\n    }\n    connected() {\n        (0, core_2.logDebug)('OKXUniversalProvider connected() called');\n        (0, core_2.reportLog)('provider connected called');\n        let disconnectInner = () => {\n            try {\n                this.cleanup();\n                this.client.engine.connectManagerDisconnect();\n            }\n            catch (e) {\n                (0, core_2.logDebug)(\"Error during disconnect:\", e);\n            }\n        };\n        try {\n            if (!this.session)\n                return false;\n            if (!this.client.engine.getCurrentConnectionReady(Object.keys(this.session.namespaces))) {\n                disconnectInner();\n                return false;\n            }\n            return true;\n        }\n        catch (e) {\n            disconnectInner();\n            return false;\n        }\n    }\n    connectAndSign(opts, signRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_2.logDebug)('OKXUniversalProvider connectAndSign() called');\n            const updatedOpts = Object.assign(Object.assign({}, opts), signRequest);\n            (0, core_2.logDebug)('OKXUniversalProvider connectAndSign() opts:', JSON.stringify(opts));\n            (0, core_2.logDebug)('OKXUniversalProvider connectAndSign() signRequest:', JSON.stringify(signRequest));\n            return yield this.connect(updatedOpts);\n        });\n    }\n    connect(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_2.logDebug)('OKXUniversalProvider connect() called');\n            (0, core_2.reportLog)('provider connect called');\n            if (!this.client) {\n                throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (this.connected()) {\n                return this.session;\n            }\n            opts = this.replaceNamespace(opts, \"aptos\");\n            opts = this.replaceNamespace(opts, \"solana\");\n            (0, core_2.logDebug)(`OKXUniversalProvider connect >>>>`, JSON.stringify(opts));\n            if (opts.sessionConfig === undefined) {\n                opts.sessionConfig = {};\n            }\n            if (opts.sessionConfig.openUniversalUrl === undefined) {\n                opts.sessionConfig.openUniversalUrl = (0, core_2.isMobileUserAgent)();\n            }\n            this.setNamespaces(opts);\n            try {\n                (0, core_2.logDebug)(`UniversalProvider connect opts.stringify ====> ${JSON.stringify(opts)}`);\n                //Connect\n                let session = yield this.client.connect(opts);\n                (0, core_2.logDebug)(`UniversalProvider connect success ====> ${JSON.stringify(session)}`);\n                if (session) {\n                    this.replaceSessionAptos(session, \"aptos\");\n                    this.replaceSessionAptos(session, \"solana\");\n                    this.session = session;\n                    this.client.session = session;\n                    this.setConnectConnector();\n                    (0, core_2.logDebug)(`OKXUniversalProvider connect success opts>>>>`, JSON.stringify(opts));\n                    this.onConnect();\n                    if (opts.signRequest && opts.signRequest.length > 0) {\n                        let requestItem = opts.signRequest[0];\n                        let signResponseList = [];\n                        if (typeof window !== \"undefined\" && window && window.okxConnectUniversalUIinwindow) { //from UI\n                            (0, core_2.logDebug)(`OKXUniversalProvider connect success, us UI SDK>>>>`);\n                            if (this.session.signResponse && this.session.signResponse.length > 0) { // >=6.96\n                                signResponseList = this.session.signResponse;\n                            }\n                        }\n                        else {\n                            (0, core_2.logDebug)(`OKXUniversalProvider connect success, us Universal SDK>>>>`);\n                            if (this.session.signResponse && this.session.signResponse.length > 0) { // >=6.96\n                                signResponseList = this.session.signResponse;\n                            }\n                            else {\n                                signResponseList.push((0, packages_1.creatNotSupportMethodItemReplay)(requestItem));\n                            }\n                        }\n                        (0, core_2.logDebug)(`UniversalProvider connect success connectRequestReply ====> ${JSON.stringify(signResponseList)}`);\n                        setTimeout(() => {\n                            this.events.emit(\"connect_signResponse\", signResponseList);\n                        }, 100);\n                    }\n                    return session;\n                }\n                return undefined;\n            }\n            catch (error) {\n                (0, core_2.logDebug)(`UniversalProvider connect error ====> `, JSON.stringify(error));\n                throw error;\n            }\n        });\n    }\n    syncAllAddresses() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if ((0, provider_1.syncAddressAvailable)(this.session.wallet)) {\n                return this.client.syncAllAddress();\n            }\n            else {\n                throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n            }\n        });\n    }\n    setConnectConnector() {\n        var _a;\n        this.client.setConnectConnector((_a = this.session) === null || _a === void 0 ? void 0 : _a.wallet);\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    setDefaultChain(chain, rpcUrl) {\n        (0, core_2.logDebug)('OKXUniversalProvider setDefaultChain() called');\n        // chain = this.chainNameToGeneralId(chain)\n        try {\n            // ignore without active session\n            if (!this.connected())\n                return;\n            const [namespace, chainId] = this.validateChain(chain);\n            const provider = this.getProvider(namespace);\n            provider.setDefaultChain(chainId, rpcUrl);\n        }\n        catch (error) {\n            // ignore the error if the fx is used prematurely before namespaces are set\n            if (!/Please call connect/.test(error.message))\n                throw error;\n        }\n    }\n    checkStorage() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let sessionInfoStr = yield this.getFromStore(\"connectSession\");\n            (0, core_2.logDebug)(sessionInfoStr);\n            if (sessionInfoStr) {\n                (0, core_2.logDebug)(`checkStorage error start`);\n                try {\n                    let sessionInfo = sessionInfoStr;\n                    this.session = sessionInfo;\n                    this.client.session = this.session;\n                    this.setConnectConnector();\n                    yield this.client.restoreconnect(sessionInfo);\n                    this.sessionConfig = sessionInfo.sessionConfig;\n                    this.client.sessionConfig = this.sessionConfig;\n                    (0, core_2.logDebug)('[evm u-provider] do reconnection', this.session);\n                    this.createProviders();\n                    this.registerEventListeners();\n                    setTimeout(() => {\n                        this.events.emit(\"reconnect\", { session: this.session });\n                    }, 100);\n                }\n                catch (e) {\n                    yield this.cleanup();\n                    (0, core_2.logDebug)(`checkStorage error ${JSON.stringify(e)}`);\n                }\n            }\n        });\n    }\n    initialize() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_2.logDebug)('OKXUniversalProvider initialize() called');\n            (0, core_2.reportLog)('provider initialize called');\n            const data = Object.assign({ url: window.location.hostname, origin: window.location.origin }, this.providerOpts.dappMetaData);\n            this.client = new client_1.SignClient(data, this.events);\n            this.registerConnector(this.providerOpts.connector);\n            yield this.checkStorage();\n        });\n    }\n    createProviders() {\n        if (!this.client) {\n            throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n        }\n        if (!this.connected()) {\n            throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Session not initialized. Please call connect() before enable()\");\n        }\n        const providersToCreate = [\n            ...new Set(Object.keys(this.session.namespaces)\n                .filter((namespace) => { var _a, _b; return ((_b = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.accounts) === null || _b === void 0 ? void 0 : _b.length) > 0; })\n                .map((namespace) => (0, namespaces_1.parseNamespaceKey)(namespace))),\n        ];\n        this.rpcProviders = {};\n        providersToCreate.forEach((namespace) => {\n            if (!this.session)\n                return;\n            const namespacesValue = this.session.namespaces;\n            const currentNameSpace = namespacesValue[namespace];\n            (0, core_2.logDebug)(\"init eip155 >> \", currentNameSpace);\n            switch (namespace) {\n                case \"eip155\":\n                    const opts = {\n                        namespace: currentNameSpace\n                    };\n                    this.rpcProviders[namespace] = new eip155_1.Eip155Provider(opts, this.client, this.events);\n                    break;\n                case \"solana\":\n                    const opts1 = {\n                        namespace: currentNameSpace\n                    };\n                    let solanaProvider = new solana_1.default(opts1, \"solana\", this.client, this.events);\n                    this.rpcProviders[namespace] = solanaProvider;\n                    let sonicProvider = new solana_1.default(opts1, \"sonic\", this.client, this.events);\n                    this.rpcProviders['sonic'] = sonicProvider;\n                    let svmProvider = new solana_1.default(opts1, \"svm\", this.client, this.events);\n                    this.rpcProviders['svm'] = svmProvider;\n                    let soonProvider = new solana_1.default(opts1, \"soon\", this.client, this.events);\n                    this.rpcProviders['soon'] = soonProvider;\n                    let eclipseProvider = new solana_1.default(opts1, \"eclipse\", this.client, this.events);\n                    this.rpcProviders['eclipse'] = eclipseProvider;\n                    // this.rpcProviders[namespace] = new SolanaProvider(opts1, () => { return this.session; });\n                    break;\n                case \"ton\":\n                    const optsTon = {\n                        namespace: currentNameSpace\n                    };\n                    let tonProvider = new ton_1.default(optsTon, this.client, this.events);\n                    this.rpcProviders[namespace] = tonProvider;\n                    break;\n                case \"sui\":\n                    const optsSui = {\n                        namespace: currentNameSpace\n                    };\n                    let suiProvider = new sui_1.SuiProvider(optsSui, this.client, this.events);\n                    suiProvider.name = \"sui\";\n                    this.rpcProviders[namespace] = suiProvider;\n                    break;\n                case \"btc\":\n                    const optsBtc = {\n                        namespace: currentNameSpace\n                    };\n                    let btcProvider = new btc_1.default(optsBtc, \"btc\", this.client, this.events);\n                    this.rpcProviders[\"btc\"] = btcProvider;\n                    let fbProvider = new btc_1.default(optsBtc, \"fractal\", this.client, this.events);\n                    this.rpcProviders[\"fractal\"] = fbProvider;\n                    break;\n                case \"aptos\":\n                    let aptosProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"aptos\", this.client, this.events);\n                    this.rpcProviders[namespace] = aptosProvider;\n                    let moveProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"movement\", this.client, this.events);\n                    this.rpcProviders[\"movement\"] = moveProvider;\n                    break;\n                case \"cosmos\":\n                    let cosmosProvider = new cosmos_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = cosmosProvider;\n                    break;\n                case \"tron\":\n                    let tronProvider = new tron_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = tronProvider;\n                    break;\n                case \"starknet\":\n                    let starknetProvider = new starknet_1.default({\n                        namespace: currentNameSpace\n                    }, \"starknet\", this.client, this.events);\n                    this.rpcProviders[namespace] = starknetProvider;\n                    break;\n            }\n        });\n    }\n    registerEventListeners() {\n        if (typeof this.client === \"undefined\") {\n            throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client is not initialized\");\n        }\n        this.client.engine.addDisconnectListener(() => {\n            this.disconnectAndEmit();\n            this.cleanup();\n        });\n        this.on(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, (caip2ChainId) => {\n            this.onChainChanged(caip2ChainId);\n        });\n        this.on(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, (nameSpaces) => {\n            if (nameSpaces) {\n                const nameSpacekey = Object.keys(nameSpaces)[0];\n                if (this.session) {\n                    this.session.namespaces[nameSpacekey] = nameSpaces[nameSpacekey];\n                    if (this.session) {\n                        this.persist(\"connectSession\", this.session);\n                        this.events.emit(\"session_update\", this.session);\n                    }\n                    (0, core_2.logDebug)(\"PROVIDER_EVENTS.UPDATE_NAMESPACES this.session... ->>>\", JSON.stringify(this.session));\n                }\n            }\n        });\n    }\n    getProvider(namespace) {\n        (0, core_2.logDebug)('current get providers', this.rpcProviders);\n        (0, core_2.logDebug)('query namespace: ', namespace);\n        return this.rpcProviders[namespace];\n    }\n    setNamespaces(params) {\n        this.connectOpts = params;\n        const { namespaces, sessionConfig } = params;\n        const data = {\n            origin: window.location.origin,\n            url: window.location.hostname,\n            name: this.providerOpts.dappMetaData.name,\n            icon: this.providerOpts.dappMetaData.icon,\n            manifestUrl: this.providerOpts.dappMetaData.manifestUrl,\n        };\n        this.sessionConfig = Object.assign({ dappInfo: data }, sessionConfig);\n        (0, core_2.logDebug)(\"setNamespaces sessionConfig>>>\", this.sessionConfig);\n        this.client.sessionConfig = this.sessionConfig;\n        this.persist(\"sessionConfig\", sessionConfig);\n    }\n    validateChain(chain) {\n        var _a;\n        let [namespace, chainId] = (chain === null || chain === void 0 ? void 0 : chain.split(\":\")) || [\"\", \"\"];\n        if (!this.session || !this.session.namespaces || !Object.keys(this.session.namespaces).length) {\n            (0, core_2.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        if (namespace) {\n            if (!this.isChainNamespaceInSession(namespace)) {\n                throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace '${namespace}' is not configured. Please call connect() first with namespace config.`);\n            }\n            if (chainId && chain) {\n                (0, core_2.logDebug)('this.session.namespaces -->> ', namespace, JSON.stringify(this.session.namespaces));\n                const chainsArr = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.chains;\n                (0, core_2.logDebug)('get chainsArr & chain', JSON.stringify(chainsArr), chain);\n                if (chainsArr && !chainsArr.includes(chain)) {\n                    throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace not include the chain '${chain}'`);\n                }\n            }\n        }\n        if (namespace && chainId) {\n            (0, core_2.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        let defaultNamespace = (0, namespaces_1.parseNamespaceKey)(Object.keys(this.session.namespaces)[0]);\n        const defaultChain = this.rpcProviders[defaultNamespace].getDefaultChain();\n        (0, core_2.logDebug)('get default chain:', defaultChain);\n        return [defaultNamespace, defaultChain];\n    }\n    isChainNamespaceInSession(namespaceStr) {\n        var _a, _b;\n        if (Object.keys(((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces) || {})\n            .map((key) => (0, namespaces_1.parseNamespaceKey)(key))\n            .includes(namespaceStr)) {\n            return true;\n        }\n        let isChainNamespaceInSession = false;\n        Object.values(((_b = this.session) === null || _b === void 0 ? void 0 : _b.namespaces) || {})\n            .forEach(namespace => {\n            namespace.chains.forEach(chain => {\n                if (chain.split(\":\")[0] == namespaceStr) {\n                    isChainNamespaceInSession = true;\n                }\n            });\n        });\n        return isChainNamespaceInSession;\n    }\n    requestAccountsWithNamespace(namespace) {\n        return this.getProvider(namespace).requestAccounts();\n    }\n    requestDefaultChainWithNamespace(namespace) {\n        return this.getProvider(namespace).getDefaultChain();\n    }\n    requestAccounts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const [namespace] = this.validateChain();\n            return yield this.getProvider(namespace).requestAccounts();\n        });\n    }\n    onChainChanged(caip2Chain) {\n        var _a;\n        if (!((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces))\n            return;\n        const [namespace, chainId] = this.validateChain(caip2Chain);\n        if (!chainId)\n            return;\n        if (this.session.namespaces[namespace]) {\n            this.session.namespaces[namespace].defaultChain = chainId;\n            this.persist(\"connectSession\", this.session);\n        }\n        this.events.emit(\"chainChanged\", chainId);\n    }\n    onConnect() {\n        this.createProviders();\n        if (this.session) {\n            this.persist(\"connectSession\", this.session);\n            console.log(\"window.okxwallet save session:\", Date.now());\n        }\n        this.events.emit(\"connect\", { session: this.session });\n        this.registerEventListeners();\n    }\n    cleanup() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.session = undefined;\n            this.client.session = undefined;\n            this.setConnectConnector();\n            this.sessionProperties = undefined;\n            this.persist(\"optionalNamespaces\", undefined);\n            this.persist(\"sessionProperties\", undefined);\n            this.persist(\"connectSession\", undefined);\n        });\n    }\n    persist(key, data) {\n        (0, core_2.logDebug)('[evm u-provider] persisit data', key, data);\n        return this.client.engine.saveSessionContent(key, data);\n    }\n    getFromStore(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.client.engine.getSessionContent(key);\n        });\n    }\n    showRequestModal(args, chain) {\n        try {\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return this.getProvider(namespace).showRequestModal(requestParam);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    openWallet(engineConnectInfo, connector) {\n        this.client.openWallet(engineConnectInfo, connector);\n    }\n    registerConnector(connectors) {\n        this.client.registerConnector(connectors);\n        this.client.setAccountChangeListener(session => {\n            (0, core_2.logDebug)(\"accountChangeListener session：\", this.events.listenerCount('accountChanged'), JSON.stringify(session));\n            try {\n                if (session && this.events.listenerCount('accountChanged')) {\n                    this.replaceSessionAptos(session, \"aptos\");\n                    this.replaceSessionAptos(session, \"solana\");\n                    this.session = session;\n                    this.client.session = session;\n                    if (this.session) {\n                        this.persist(\"connectSession\", this.session);\n                        console.log(\"window.okxwallet save session:\", Date.now());\n                    }\n                    this.setConnectConnector();\n                    this.createProviders();\n                    this.events.emit(\"accountChanged\", this.session);\n                }\n            }\n            catch (error) {\n                (0, core_2.logDebug)(\"setAccountChangeListener error:\", JSON.stringify(error));\n            }\n        });\n    }\n}\nexports.OKXUniversalProvider = OKXUniversalProvider;\nexports.default = OKXUniversalProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXStarknetProvider = exports.OKXTronProvider = exports.OKXTonProvider = exports.OKXCosmosProvider = exports.OKXBtcProvider = exports.OKXUniversalProvider = void 0;\n__exportStar(require(\"./provider/types\"), exports);\n__exportStar(require(\"./packages\"), exports);\nvar OKXUniversalProvider_1 = require(\"./OKXUniversalProvider\");\nObject.defineProperty(exports, \"OKXUniversalProvider\", { enumerable: true, get: function () { return OKXUniversalProvider_1.OKXUniversalProvider; } });\nvar OKXBtcProvider_1 = require(\"./OKXBtcProvider\");\nObject.defineProperty(exports, \"OKXBtcProvider\", { enumerable: true, get: function () { return OKXBtcProvider_1.OKXBtcProvider; } });\nvar OKXCosmosProvider_1 = require(\"./OKXCosmosProvider\");\nObject.defineProperty(exports, \"OKXCosmosProvider\", { enumerable: true, get: function () { return OKXCosmosProvider_1.OKXCosmosProvider; } });\nvar OKXTonProvider_1 = require(\"./OKXTonProvider\");\nObject.defineProperty(exports, \"OKXTonProvider\", { enumerable: true, get: function () { return OKXTonProvider_1.OKXTonProvider; } });\nvar OKXTronProvider_1 = require(\"./OKXTronProvider\");\nObject.defineProperty(exports, \"OKXTronProvider\", { enumerable: true, get: function () { return OKXTronProvider_1.OKXTronProvider; } });\nvar OKXStarknetProvider_1 = require(\"./OKXStarknetProvider\");\nObject.defineProperty(exports, \"OKXStarknetProvider\", { enumerable: true, get: function () { return OKXStarknetProvider_1.OKXStarknetProvider; } });\n__exportStar(require(\"@okxconnect/core\"), exports);\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignClient = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"../utils/namespaces\");\nconst ConnectMethodUtils_1 = require(\"../utils/ConnectMethodUtils\");\nconst constants_1 = require(\"../../provider/constants\");\nclass SignClient extends core_1.ISignClient {\n    constructor(metaData, events) {\n        super(metaData);\n        // ---------- Engine ----------------------------------------------- //\n        this.connect = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    var connectRequest = [];\n                    (0, core_1.logDebug)(`client connect params >>>`, JSON.stringify(params));\n                    var requestAccountItem = {\n                        name: \"requestAccounts\",\n                        requiredNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.namespaces),\n                        optionalNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.optionalNamespaces),\n                    };\n                    this.engine.setSessionConnectingListener(() => {\n                        (0, core_1.logDebug)(`sessionConnectingListener >>>`);\n                        this.events.emit(constants_1.PROVIDER_EVENTS.SESSION_CONNECTING);\n                    });\n                    if (params.signRequest) {\n                        requestAccountItem.connectRequestMethods = yield (0, ConnectMethodUtils_1.connectMethodsToConnectWalletMethods)(params.signRequest, requestAccountItem.requiredNamespaces);\n                    }\n                    connectRequest.push(requestAccountItem);\n                    (0, core_1.logDebug)(`client connect connectRequest >>>`, JSON.stringify(connectRequest));\n                    this.engine.universalConnect(connectRequest, Object.assign({ dappInfo: this.metadata }, params.sessionConfig), (info) => {\n                        if (info && info.connectRequest) {\n                            (0, core_1.logDebug)(`universalConect info.connectRequest :`, info.connectRequest);\n                            (0, core_1.logDebug)(`universalConect url:`, (0, core_1.getOKXLink)(info.connectRequest, this.sessionConfig.useMini));\n                            this.events.emit(\"display_uri\", (0, core_1.getOKXLink)(info.connectRequest, this.sessionConfig.useMini));\n                            this.events.emit(\"short_display_uri\", (0, core_1.getAppWalletShortDeepLink)(info.connectRequest.topic, info.connectRequest.clientId));\n                            (0, core_1.logDebug)(`universalConect EngineConnectInfo  ${JSON.stringify(info)}`);\n                            this.events.emit(\"okx_engine_connect_params\", info);\n                        }\n                    }).then((session) => __awaiter(this, void 0, void 0, function* () {\n                        (0, namespaces_1.fillParamsToSession)(session, params.namespaces, params.optionalNamespaces, this.sessionConfig);\n                        (0, core_1.logDebug)(`signClient: connect: session ${JSON.stringify(session)}`);\n                        if (params.signRequest) {\n                            yield (0, ConnectMethodUtils_1.connectMethodsResponseUpdate)(session, params.signRequest);\n                        }\n                        resolve(session);\n                    })).catch((e) => {\n                        (0, core_1.logDebug)(`signClient: connect: catch ${JSON.stringify(e)}`);\n                        this.events.emit(\"connect_error\", e);\n                        reject(e);\n                    });\n                }\n                catch (error) {\n                    (0, core_1.logDebug)(`signClient: connect:  ${JSON.stringify(error)}`);\n                    reject(error);\n                }\n            }));\n        });\n        this.restoreconnect = (sessionConfig) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.restoreconnect(sessionConfig, (session) => {\n                    if (session) {\n                        resolve(session);\n                    }\n                    else {\n                        reject();\n                    }\n                });\n            });\n        });\n        this.reject = (params) => __awaiter(this, void 0, void 0, function* () {\n        });\n        this.request = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                (0, core_1.logDebug)(\"clint request --params>>>> >\", (_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl, (0, core_1.safeJsonStringify)(params));\n                try {\n                    // this.sessionConfig\n                    if (((_b = this.sessionConfig) === null || _b === void 0 ? void 0 : _b.openUniversalUrl) && (0, core_1.isIos)()) {\n                        this.openOKXWallet();\n                    }\n                    yield this.engine.send(params, {\n                        resolve: (response) => {\n                            delete response.requestId;\n                            (0, core_1.logDebug)(\"clint request --response >\", (0, core_1.safeJsonStringify)(response));\n                            if (('error' in response) && response.error) {\n                                let error = response.error;\n                                reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                            }\n                            else {\n                                resolve(response);\n                            }\n                        },\n                        onAck: () => {\n                            var _a;\n                            if (!(0, core_1.isIos)() && ((_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl)) {\n                                this.openOKXWallet();\n                            }\n                        }\n                    });\n                }\n                catch (e) {\n                    (0, core_1.logDebug)(\"clint request --error:\", e);\n                    reject(e);\n                }\n            }));\n        });\n        this.disconnect = () => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"disconnect\"\n                }, {\n                    onAck: () => {\n                        resolve();\n                    }\n                }, 86400000).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n        this.engine = new core_1.Engine(metaData.name);\n        this.events = events;\n        this.metadata = metaData;\n    }\n    setAccountChangeListener(accountChangeListener) {\n        this.engine.setAccountChangeListener(accountChangeListener);\n    }\n    openOKXWallet() {\n        // if (this.openUniversalUrl){\n        (0, core_1.logDebug)('bridge-provider ==>> connect_5');\n        this.engine.openWallet({ tmaReturnUrl: this.sessionConfig.tmaReturnUrl });\n        // if (this.sessionConfig?.useMini){\n        //     let url = getTelegramWalletTWAUrl(undefined,this.sessionConfig.tmaReturnUrl)\n        //     openOKXTMAWalletlinkWithFallback(url)\n        // }else{\n        //     openOKXDeeplink(standardDeeplink);\n        // }\n        // }\n    }\n    syncAllAddress() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"sync_all_addresses\"\n                }, {\n                    resolve: (response) => {\n                        delete response.requestId;\n                        (0, core_1.logDebug)(\"clint syncAllAddress --response >\", JSON.stringify(response));\n                        if (('error' in response) && response.error) {\n                            let error = response.error;\n                            reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                        }\n                        else {\n                            let allAddressStr = response.result;\n                            resolve((0, ConnectMethodUtils_1.syncResoonseToRequire)(allAddressStr));\n                        }\n                    }\n                }).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n    }\n    registerConnector(connectors) {\n        this.engine.registerConnector(connectors);\n    }\n    openWallet(engineConnectInfo, connector) {\n        this.engine.openWallet(engineConnectInfo, connector);\n    }\n    setConnectConnector(wallet) {\n        this.engine.setConnectConnector(wallet);\n    }\n}\nexports.SignClient = SignClient;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.connectSupportMethods = void 0;\nexports.creatNotSupportMethodItemReplay = creatNotSupportMethodItemReplay;\nexports.connectMethodsAdaptOldVersion = connectMethodsAdaptOldVersion;\nexports.connectMethodsResponseUpdate = connectMethodsResponseUpdate;\nexports.connectMethodsToConnectWalletMethods = connectMethodsToConnectWalletMethods;\nexports.syncResoonseToRequire = syncResoonseToRequire;\nconst core_1 = require(\"@okxconnect/core\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst provider_1 = require(\"../../provider\");\nfunction isArray(value) {\n    return typeof value === \"object\" && value !== null && Array.isArray(value);\n}\nfunction isRecord(value) {\n    return typeof value === \"object\" && value !== null && !Array.isArray(value);\n}\n// \"wallet_addEthereumChain\",\n// \"solana_signMessage\",  There are risks\nexports.connectSupportMethods = Object.freeze([\n    \"personal_sign\",\n    \"sui_signMessage\",\n    \"sui_signPersonalMessage\",\n    \"btc_signMessage\",\n    \"aptos_signMessage\",\n    \"cosmos_signArbitrary\",\n    \"tron_signMessage\",\n    \"tron_signMessageV2\",\n    \"starknet_signMessage\",\n    \"sync_all_addresses\"\n]);\nfunction creatNotSupportMethodItemReplay(requestParams) {\n    let notSupportError = new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n    var errorItem = {\n        method: requestParams.method,\n        chainId: requestParams.chainId,\n        error: {\n            code: notSupportError.code,\n            message: notSupportError.message\n        },\n    };\n    return errorItem;\n}\nfunction connectMethodsAdaptOldVersion(requestParams, session) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b, _c, _d, _e;\n        try {\n            (0, core_1.logDebug)(\"connectMethodsAdaptOldVersion start params :\", JSON.stringify(requestParams));\n            let callBackParams = {};\n            if (requestParams.method === \"solana_signMessage\") {\n                let solAccount = (_a = session.namespaces[core_1.NameSpaceKeySOL]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account1) {\n                    return account1.startsWith(requestParams.chainId);\n                })[0];\n                const solAddress = (0, provider_1.fromAccountToAddress)(solAccount);\n                if (requestParams.params && solAddress && \"message\" in requestParams.params) {\n                    let realMessage = requestParams.params.message;\n                    if (((_b = session.wallet) === null || _b === void 0 ? void 0 : _b.appName) == \"OKX Wallet\") {\n                        let encodeMessage = new TextEncoder().encode(realMessage);\n                        realMessage = bs58_1.default.encode(encodeMessage);\n                    }\n                    requestParams.params = {\n                        message: realMessage,\n                        \"pubkey\": solAddress\n                    };\n                    requestParams.injectParams = requestParams.params;\n                    callBackParams = {\n                        publicKey: solAddress\n                    };\n                    (0, core_1.logDebug)(\"solana_signMessage account and address:\", JSON.stringify(solAccount), solAddress);\n                    (0, core_1.logDebug)(\"solana_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"sui_signMessage\" || requestParams.method === \"sui_signPersonalMessage\") {\n                if (\"message\" in requestParams.params && requestParams.params.message) {\n                    let suiMessage = JSON.parse(JSON.stringify(requestParams.params.message));\n                    let convertedArray = Object.values(suiMessage);\n                    let uint8Array = new Uint8Array(convertedArray);\n                    let decoder = new TextDecoder(\"utf8\");\n                    let b64encoded = btoa(decoder.decode(uint8Array));\n                    requestParams.params = {\n                        message: atob(b64encoded),\n                    };\n                    requestParams.injectParams = {\n                        message: uint8Array\n                    };\n                    console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", JSON.stringify(requestParams.params), b64encoded);\n                    if (requestParams.method === \"sui_signMessage\") {\n                        callBackParams = {\n                            \"messageBytes\": b64encoded,\n                            \"signature\": \"\"\n                        };\n                    }\n                    else if (requestParams.method === \"sui_signPersonalMessage\") {\n                        callBackParams = {\n                            \"bytes\": b64encoded,\n                            \"signature\": \"\"\n                        };\n                    }\n                    (0, core_1.logDebug)(\"sui_signMessage/sui_signPersonalMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"btc_signMessage\") {\n                let btcAccounts = (_c = session.namespaces[core_1.NameSpaceKeyBtc]) === null || _c === void 0 ? void 0 : _c.accounts.filter(function (account2) {\n                    return account2.startsWith(requestParams.chainId);\n                });\n                let btcAccount = btcAccounts[0];\n                const btcAddress = (0, provider_1.fromAccountToAddress)(btcAccount);\n                (0, core_1.logDebug)(\"btc_signMessage account and address:\", JSON.stringify(btcAccount), btcAddress);\n                if (btcAddress) {\n                    if (\"message\" in requestParams.params && requestParams.params.message && typeof requestParams.params.message === 'string') {\n                        requestParams.params = {\n                            from: btcAddress,\n                            signStr: requestParams.params.message\n                        };\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                    }\n                    requestParams.params[\"from\"] = btcAddress;\n                    (0, core_1.logDebug)(\"btc_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"aptos_signMessage\") {\n                let paramData = requestParams.params;\n                let aptosAccount = (_d = session.namespaces[core_1.NameSpaceKeyAptos]) === null || _d === void 0 ? void 0 : _d.accounts.filter(function (account3) {\n                    return account3.startsWith(requestParams.chainId);\n                })[0];\n                let aptosAddress = (0, provider_1.fromAccountToAddress)(aptosAccount);\n                if (paramData && aptosAddress) {\n                    let prefix = \"APTOS\";\n                    let message = \"\", nonce = \"\";\n                    var fullMessage = prefix;\n                    let application = window.location.protocol + \"//\" + window.location.hostname;\n                    if (\"address\" in paramData && paramData.address) {\n                        fullMessage += \"\\naddress: \" + aptosAddress;\n                    }\n                    if (\"application\" in paramData && paramData.application) {\n                        fullMessage += \"\\napplication: \" + application;\n                    }\n                    let aptosChainId = 1;\n                    if (\"chainId\" in paramData && paramData.chainId) {\n                        if (paramData.chainId == \"aptos:mainnet\") {\n                            aptosChainId = 1;\n                        }\n                        else if (paramData.chainId == \"movement:testnet\") {\n                            aptosChainId = 2;\n                        }\n                        fullMessage += \"\\nchainId: \" + aptosChainId;\n                    }\n                    if (\"message\" in paramData) {\n                        fullMessage += \"\\nmessage: \" + paramData.message;\n                        message = paramData.message;\n                    }\n                    if (\"nonce\" in paramData) {\n                        fullMessage += \"\\nnonce: \" + paramData.nonce;\n                        nonce = paramData.nonce;\n                    }\n                    const utf8Array = new TextEncoder().encode(fullMessage);\n                    const hex = Array.from(utf8Array)\n                        .map(byte => byte.toString(16).padStart(2, \"0\"))\n                        .join(\"\");\n                    requestParams.params = {\n                        \"message\": hex,\n                    };\n                    requestParams.injectParams = paramData;\n                    (0, core_1.logDebug)(\"aptos_signMessage requestParams:\", JSON.stringify(requestParams));\n                    callBackParams = {\n                        address: aptosAddress,\n                        application: application,\n                        chainId: aptosChainId,\n                        fullMessage: fullMessage,\n                        message: message,\n                        nonce: nonce,\n                        prefix: prefix,\n                        signature: \"\",\n                    };\n                    (0, core_1.logDebug)(\"aptos_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"cosmos_signArbitrary\") {\n                let cosmosAccount = (_e = session === null || session === void 0 ? void 0 : session.namespaces[core_1.NameSpaceKeyCosmos]) === null || _e === void 0 ? void 0 : _e.accounts.filter(function (account_cosmos) {\n                    return account_cosmos.startsWith(requestParams.chainId);\n                })[0];\n                const cosmosAddress = (0, provider_1.fromAccountToAddress)(cosmosAccount);\n                let cosmosData = requestParams.params[\"message\"];\n                const cosmosBase64Encoded = btoa(cosmosData);\n                (0, core_1.logDebug)(\"cosmos_signArbitrary account and address:\", JSON.stringify(cosmosAccount), cosmosAddress);\n                (0, core_1.logDebug)(\"cosmos_signArbitrary cosmosBase64Encoded:\", cosmosBase64Encoded);\n                if (cosmosData && cosmosAddress) {\n                    const signDoc = {\n                        chain_id: \"\",\n                        account_number: \"0\",\n                        sequence: \"0\",\n                        fee: {\n                            gas: \"0\",\n                            amount: []\n                        },\n                        msgs: [{\n                                \"type\": \"sign/MsgSignData\",\n                                \"value\": {\n                                    \"signer\": cosmosAddress,\n                                    \"data\": cosmosBase64Encoded\n                                }\n                            }],\n                        memo: \"\"\n                    };\n                    requestParams.params = {\n                        \"signer\": cosmosAddress,\n                        \"chain_id\": requestParams.chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    };\n                    (0, core_1.logDebug)(\"cosmos_signArbitrary callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            (0, core_1.logDebug)(\"sol_handleSignatureData end params:\", JSON.stringify(requestParams));\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\nfunction connectMethodsResponseUpdate(session, requestParams) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a;\n        try {\n            if (session.signResponse) {\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate signResponse:\", JSON.stringify(session.signResponse));\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate session.namespaces:\", JSON.stringify(session.namespaces));\n                for (const methodItem of session.signResponse) {\n                    (0, core_1.logDebug)(\"connectMethodsResponseUpdate methodItem:\", JSON.stringify(methodItem));\n                    if (\"result\" in methodItem) {\n                        if (methodItem.method === \"solana_signMessage\") {\n                            let solanaSuccessData = methodItem.result;\n                            (0, core_1.logDebug)(\"solana_signMessage methodItem.chainId:\", methodItem.chainId);\n                            let account = (_a = session.namespaces[core_1.NameSpaceKeySOL]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account) {\n                                (0, core_1.logDebug)(\"solana_signMessage account:\", account);\n                                return account.startsWith(methodItem.chainId);\n                            })[0];\n                            (0, core_1.logDebug)(\"solana_signMessage result account:\", solanaSuccessData, account);\n                            if (solanaSuccessData && account) {\n                                methodItem.result = {\n                                    \"signature\": bs58_1.default.decode(solanaSuccessData),\n                                    \"publicKey\": (0, provider_1.fromAccountToAddress)(account)\n                                };\n                            }\n                        }\n                        else if (methodItem.method === \"sui_signMessage\" || methodItem.method === \"sui_signPersonalMessage\") {\n                            let suiMethod = requestParams.filter(function (requestMethod) {\n                                return requestMethod.method === methodItem.method;\n                            })[0];\n                            if (suiMethod && suiMethod.params && \"message\" in suiMethod.params) {\n                                let suiMessage = suiMethod.params.message;\n                                let suiMessageb64 = btoa(suiMessage);\n                                console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", suiMessage, suiMessageb64);\n                                if (methodItem.method === \"sui_signMessage\") {\n                                    methodItem.result = {\n                                        \"messageBytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                                else if (methodItem.method === \"sui_signPersonalMessage\") {\n                                    methodItem.result = {\n                                        \"bytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                            }\n                        }\n                        else if (methodItem.method === \"aptos_signMessage\") {\n                            methodItem.chainId = (0, core_1.replaceChainIdToChainName)(methodItem.chainId);\n                            methodItem.result = JSON.parse(methodItem.result);\n                            console.log(\"aptos_signMessage result methodItem.result before:>>>>\", JSON.stringify(methodItem.result));\n                            if (methodItem.result && \"signature\" in methodItem.result) {\n                                let aptosSignature = methodItem.result.signature;\n                                if (aptosSignature && aptosSignature.startsWith(\"0x\")) {\n                                    aptosSignature = aptosSignature.slice(2, aptosSignature.length);\n                                    methodItem.result.signature = aptosSignature;\n                                }\n                            }\n                            console.log(\"aptos_signMessage result methodItem.result after:>>>>\", JSON.stringify(methodItem.result));\n                        }\n                        else if (methodItem.method === \"cosmos_signArbitrary\") {\n                            methodItem.result = JSON.parse(methodItem.result);\n                        }\n                        else if (methodItem.method == 'starknet_signMessage') {\n                            let results = methodItem.result;\n                            if (typeof results == 'string') {\n                                results = JSON.parse(results);\n                            }\n                            methodItem.result = [results[\"signedDataR\"], results[\"signedDataS\"]];\n                        }\n                        else if (methodItem.method == 'sync_all_addresses') {\n                            methodItem.result = syncResoonseToRequire(methodItem.result);\n                        }\n                    }\n                }\n            }\n        }\n        catch (error) {\n            (0, core_1.logDebug)(\"connectMethodsResponseUpdate signResponse Error:\", JSON.stringify(error));\n            throw error;\n        }\n    });\n}\nfunction connectMethodsToConnectWalletMethods(params, requireNameSpace) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods requestMethods:\", JSON.stringify(params));\n            const result = [];\n            //TODO  后面需要打开限制\n            if (params && params.length > 1) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connectAndSign/openModalAndSign signRequest only support one data`);\n            }\n            if (!requireNameSpace && params && params.length > 0) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error , RequestMethods cannot be added when the NameSpace is empty`);\n            }\n            // check chianId\n            for (const methodItem of params) {\n                if (methodItem.method === \"aptos_signMessage\") { //update chainId\n                    methodItem.chainId = (0, core_1.replaceChainNameToChainId)(methodItem.chainId);\n                }\n                // check chianId\n                if (methodItem.method === \"wallet_addEthereumChain\") {\n                    var includeEip155 = requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.namespace.includes(\"eip155\"));\n                    if (!includeEip155) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', the EVM chain needs to be included in the NameSpace`);\n                    }\n                }\n                else if (methodItem.method === \"sync_all_addresses\") {\n                    if ((0, provider_1.syncAddressHostAvailable)()) {\n                        methodItem.chainId = \"\";\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                    }\n                }\n                else {\n                    const includeChain = !!(requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.chains.some(chain => chain.includes(`${methodItem.chainId}`))));\n                    if (!includeChain) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', NameSpace must contain '${methodItem.chainId}'`);\n                    }\n                }\n            }\n            for (const item of params) {\n                if (!exports.connectSupportMethods.includes(item.method)) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect requestMethods not support method, method: '${item.method}'`);\n                }\n                if (item.method === \"wallet_addEthereumChain\") {\n                    if (Array.isArray(item.params)) {\n                        const paramsArr = item.params;\n                        if (paramsArr && paramsArr.length === 1) {\n                            const firstParam = paramsArr[0];\n                            if (isRecord(firstParam)) {\n                                item.params = firstParam;\n                            }\n                        }\n                        else if (paramsArr && paramsArr.length > 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params only support one data, method: '${item.method}'`);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is nil, method: '${item.method}'`);\n                        }\n                    }\n                }\n                else if (item.method === \"personal_sign\") {\n                    if (isArray(item.params)) {\n                        if (item.params && item.params.length !== 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params error,  method: '${item.method}' `);\n                        }\n                        let firstObj = item.params[0];\n                        if (firstObj && typeof firstObj === 'string') {\n                            item.params = {\n                                message: firstObj\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                }\n                else if (item.method === \"sui_signMessage\" || item.method === \"sui_signPersonalMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message) {\n                            (0, core_1.logDebug)(\"sui_signMessage item.params.message :\", item.params.message);\n                            let message = JSON.parse(JSON.stringify(item.params.message));\n                            let convertedArray = Object.values(message);\n                            let uint8Array = new Uint8Array(convertedArray);\n                            let decoder = new TextDecoder(\"utf8\");\n                            let b64encoded = btoa(decoder.decode(uint8Array));\n                            item.params.message = atob(b64encoded);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"solana_signMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            let encodeMessage = new TextEncoder().encode(item.params.message);\n                            item.params[\"bs58Message\"] = bs58_1.default.encode(encodeMessage);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"aptos_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (item.chainId) {\n                            var aptosParams = item.params;\n                            var currentURL = window.location.protocol + \"//\" + window.location.hostname;\n                            let signChainId = 1;\n                            if (item.chainId === \"aptos:637\") {\n                            }\n                            else if (item.chainId === \"aptos:70000060\") {\n                                signChainId = 2;\n                            }\n                            item.params = {\n                                data: aptosParams,\n                                applicationUrl: currentURL,\n                                prefix: \"APTOS\",\n                                aptosChainId: signChainId\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"cosmos_signArbitrary\") {\n                    if (isRecord(item.params)) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            const base64Encoded = btoa(item.params.message);\n                            let cosmosChain = item.chainId.split(\":\")[1];\n                            if (cosmosChain) {\n                                item.params = {\n                                    chain_id: cosmosChain,\n                                    data: {\n                                        chain_id: \"\",\n                                        account_number: \"0\",\n                                        sequence: \"0\",\n                                        fee: {\n                                            gas: \"0\",\n                                            amount: []\n                                        },\n                                        msgs: [{\n                                                \"type\": \"sign/MsgSignData\",\n                                                \"value\": {\n                                                    \"signer\": \"\", //address\n                                                    \"data\": base64Encoded\n                                                }\n                                            }],\n                                        memo: \"\"\n                                    }\n                                };\n                            }\n                            else {\n                                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                            }\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params message is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method == \"tron_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (\"message\" in item.params && item.params.message && typeof item.params.message === 'string') {\n                            item.params.message = stringToHex(item.params.message);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method == \"btc_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (\"message\" in item.params && item.params.message && typeof item.params.message === 'string') {\n                            item.params = {\n                                signStr: item.params.message\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods item:\", JSON.stringify(item));\n                result.push(item);\n            }\n            return result;\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\nfunction stringToHex(str) {\n    let hex = '';\n    for (let i = 0; i < str.length; i++) {\n        hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n    }\n    return hex;\n}\nfunction syncResoonseToRequire(responseAddressStr) {\n    const allAddress = JSON.parse(responseAddressStr);\n    const result = {\n        type: allAddress.type,\n        isEvm: allAddress.isEvm,\n        walletName: allAddress.walletName,\n        deriveName: allAddress.deriveName,\n        addresses: allAddress.addresses.map((addr) => ({\n            coinId: addr.ci,\n            address: addr.a && addr.a !== 'null' ? addr.a : allAddress.evmAddress,\n        })),\n    };\n    return result;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.creatNotSupportMethodItemReplay = exports.connectMethodsAdaptOldVersion = void 0;\nvar ConnectMethodUtils_1 = require(\"./ConnectMethodUtils\");\nObject.defineProperty(exports, \"connectMethodsAdaptOldVersion\", { enumerable: true, get: function () { return ConnectMethodUtils_1.connectMethodsAdaptOldVersion; } });\nObject.defineProperty(exports, \"creatNotSupportMethodItemReplay\", { enumerable: true, get: function () { return ConnectMethodUtils_1.creatNotSupportMethodItemReplay; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAccountsChains = getAccountsChains;\nexports.nameSpaceToConnectWalletNameSpace = nameSpaceToConnectWalletNameSpace;\nexports.fillParamsToSession = fillParamsToSession;\nexports.isCaipNamespace = isCaipNamespace;\nexports.parseNamespaceKey = parseNamespaceKey;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getAccountsChains(accounts) {\n    const chains = [];\n    accounts.forEach((account) => {\n        const [chain, chainId] = account.split(\":\");\n        chains.push(`${chain}:${chainId}`);\n    });\n    return chains;\n}\nfunction nameSpaceToConnectWalletNameSpace(namespaces) {\n    var result = [];\n    if (!namespaces) {\n        return result;\n    }\n    Object.keys(namespaces).forEach((key) => {\n        if (key === core_1.NameSpaceKeyEip155 || key === core_1.NameSpaceKeySOL || key === core_1.NameSpaceKeySui || key === core_1.NameSpaceKeyAptos\n            || key == core_1.NameSpaceKeyBtc || key === core_1.NameSpaceKeyTON || key === core_1.NameSpaceKeyCosmos || key === core_1.NameSpaceKeyTron || key === core_1.NameSpaceKeyStarknet) {\n            if (namespaces[key].chains) {\n                result.push({\n                    namespace: key,\n                    chains: namespaces[key].chains,\n                    params: namespaces[key].params,\n                });\n            }\n        }\n    });\n    return result;\n}\nfunction fillParamsToSession(session, namespaces, optionalNamespaces, sessionConfig) {\n    // Helper function to merge rpcMaps\n    const mergeRpcMap = (targetRpcMap, sourceRpcMap) => {\n        Object.assign(targetRpcMap, sourceRpcMap);\n    };\n    // Merge function for namespaces\n    const mergeNamespaces = (target, source) => {\n        for (const key in source) {\n            if (source.hasOwnProperty(key) && source[key].rpcMap) {\n                if (source[key].rpcMap) {\n                    if (!target[key].rpcMap) {\n                        target[key].rpcMap = {};\n                    }\n                    // 合并 rpcMap\n                    mergeRpcMap(target[key].rpcMap, source[key].rpcMap);\n                }\n                if (source[key].defaultChain && target[key].defaultChain === undefined) {\n                    //defaultChain need in session nameSpace\n                    if (target[key].chains.some(chain => chain.split(\":\")[1] === source[key].defaultChain)) {\n                        target[key].defaultChain = source[key].defaultChain;\n                    }\n                }\n            }\n        }\n    };\n    // 合并 namespaces\n    if (namespaces) {\n        mergeNamespaces(session.namespaces, namespaces);\n    }\n    // 合并 optionalNamespaces\n    if (optionalNamespaces) {\n        mergeNamespaces(session.namespaces, optionalNamespaces);\n    }\n    for (const key in session.namespaces) {\n        const namespace = session.namespaces[key];\n        if (!(namespace === null || namespace === void 0 ? void 0 : namespace.accounts) || namespace.accounts.length === 0) {\n            delete session.namespaces[key];\n        }\n    }\n    if (session.namespaces[core_1.NameSpaceKeyBtc] && session.wallet.appName === core_1.OKXWalletName) {\n        fixMobileBtcSession(session.namespaces[core_1.NameSpaceKeyBtc]);\n    }\n    session.sessionConfig = sessionConfig;\n}\nfunction fixMobileBtcSession(btcNameSpace) {\n    try {\n        if (btcNameSpace && btcNameSpace.extra) {\n            var data = btcNameSpace.extra;\n            Object.keys(data).forEach(key => {\n                const item = data[key];\n                if (Number(item.addressType) === 6) {\n                    item.publicKey = item.compressedPublicKey.slice(2);\n                }\n                else {\n                    item.publicKey = item.compressedPublicKey;\n                }\n            });\n        }\n    }\n    catch (e) {\n        (0, core_1.logDebug)(\"namespaces fixMobileBtcSession error\");\n    }\n}\n/**\n * util designed for Wallets that builds namespaces structure by provided supported chains, methods, events & accounts.\n * It takes required & optional namespaces provided in the session proposal\n * along with the supported chains/methods/events/accounts by the wallet and returns a structured namespaces object\n * @param {BuildApprovedNamespacesParams} params\n * @returns {SessionTypes.Namespaces}\n */\n// export function buildApprovedNamespaces(\n//   params: BuildApprovedNamespacesParams,\n// ): SessionTypes.Namespaces {\n//   const {\n//     proposal: { requiredNamespaces, optionalNamespaces = {} },\n//     supportedNamespaces,\n//   } = params;\n//   const normalizedRequired = normalizeNamespaces(requiredNamespaces);\n//   const normalizedOptional = normalizeNamespaces(optionalNamespaces);\n//\n//   // build approved namespaces\n//   const namespaces = {};\n//   Object.keys(supportedNamespaces).forEach((namespace) => {\n//     const supportedChains = supportedNamespaces[namespace].chains;\n//     const supportedMethods = supportedNamespaces[namespace].methods;\n//     const supportedEvents = supportedNamespaces[namespace].events;\n//     const supportedAccounts = supportedNamespaces[namespace].accounts;\n//\n//     supportedChains.forEach((chain) => {\n//       if (!supportedAccounts.some((account) => account.includes(chain))) {\n//         throw new Error(`No accounts provided for chain ${chain} in namespace ${namespace}`);\n//       }\n//     });\n//\n//     namespaces[namespace] = {\n//       chains: supportedChains,\n//       methods: supportedMethods,\n//       events: supportedEvents,\n//       accounts: supportedAccounts,\n//     };\n//   });\n//\n//   // verify all required namespaces are supported\n//   const err = isConformingNamespaces(requiredNamespaces, namespaces, \"approve()\");\n//   if (err) throw new Error(err.message);\n//\n//   const approvedNamespaces = {};\n//\n//   // if both required & optional namespaces are empty, return all supported namespaces by the wallet\n//   if (!Object.keys(requiredNamespaces).length && !Object.keys(optionalNamespaces).length)\n//     return namespaces;\n//\n//   // assign accounts for the required namespaces\n//   Object.keys(normalizedRequired).forEach((requiredNamespace) => {\n//     const chains = supportedNamespaces[requiredNamespace].chains.filter((chain) =>\n//       normalizedRequired[requiredNamespace]?.chains?.includes(chain),\n//     );\n//     const methods = supportedNamespaces[requiredNamespace].methods.filter((method) =>\n//       normalizedRequired[requiredNamespace]?.methods?.includes(method),\n//     );\n//     const events = supportedNamespaces[requiredNamespace].events.filter((event) =>\n//       normalizedRequired[requiredNamespace]?.events?.includes(event),\n//     );\n//\n//     const accounts = chains\n//       .map((chain: string) =>\n//         supportedNamespaces[requiredNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[requiredNamespace] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   });\n//\n//   // add optional namespaces\n//   Object.keys(normalizedOptional).forEach((optionalNamespace) => {\n//     if (!supportedNamespaces[optionalNamespace]) return;\n//\n//     const chainsToAdd = normalizedOptional[optionalNamespace]?.chains?.filter((chain) =>\n//       supportedNamespaces[optionalNamespace].chains.includes(chain),\n//     );\n//     const methodsToAdd = supportedNamespaces[optionalNamespace].methods.filter((method) =>\n//       normalizedOptional[optionalNamespace]?.methods?.includes(method),\n//     );\n//     const eventsToAdd = supportedNamespaces[optionalNamespace].events.filter((event) =>\n//       normalizedOptional[optionalNamespace]?.events?.includes(event),\n//     );\n//\n//     const accountsToAdd = chainsToAdd\n//       ?.map((chain: string) =>\n//         supportedNamespaces[optionalNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[optionalNamespace] = {\n//       chains: mergeArrays(approvedNamespaces[optionalNamespace]?.chains, chainsToAdd),\n//       methods: mergeArrays(approvedNamespaces[optionalNamespace]?.methods, methodsToAdd),\n//       events: mergeArrays(approvedNamespaces[optionalNamespace]?.events, eventsToAdd),\n//       accounts: mergeArrays(approvedNamespaces[optionalNamespace]?.accounts, accountsToAdd),\n//     };\n//   });\n//\n//   return approvedNamespaces;\n// }\nfunction isCaipNamespace(namespace) {\n    return namespace.includes(\":\");\n}\nfunction parseNamespaceKey(namespace) {\n    return isCaipNamespace(namespace) ? namespace.split(\":\")[0] : namespace;\n}\n/**\n * Converts\n * ```\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * ```\n * into\n * ```\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *```\n */\n// export function normalizeNamespaces(\n//   namespaces: ProposalTypes.RequiredNamespaces,\n// ): ProposalTypes.RequiredNamespaces {\n//   const normalizedNamespaces = {} as ProposalTypes.RequiredNamespaces;\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       methods: mergeArrays(methods, normalizedNamespaces[normalizedKey]?.methods),\n//       events: mergeArrays(events, normalizedNamespaces[normalizedKey]?.events),\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n// export function getNamespacesFromAccounts(accounts: string[]) {\n//   const namespaces = {};\n//   accounts?.forEach((account) => {\n//     const [namespace, chainId] = account.split(\":\");\n//     if (!namespaces[namespace]) {\n//       namespaces[namespace] = {\n//         accounts: [],\n//         chains: [],\n//         events: [],\n//       };\n//     }\n//     namespaces[namespace].accounts.push(account);\n//     namespaces[namespace].chains.push(`${namespace}:${chainId}`);\n//   });\n//\n//   return namespaces;\n// }\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PROVIDER_EVENTS = void 0;\nexports.PROVIDER_EVENTS = {\n    DEFAULT_CHAIN_CHANGED: \"default_chain_changed\",\n    UPDATE_NAMESPACES: \"update_name_spaces\",\n    SESSION_CONNECTING: \"session_connecting\"\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./values\"), exports);\n__exportStar(require(\"./events\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GENERIC_SUBPROVIDER_NAME = exports.RPC_URL = exports.STORAGE = exports.CONTEXT = exports.WC_VERSION = exports.PROTOCOL = exports.RELAY_URL = exports.LOGGER = void 0;\nexports.LOGGER = \"error\";\nexports.RELAY_URL = \"wss://relay.walletconnect.com\";\nexports.PROTOCOL = \"wc\";\nexports.WC_VERSION = 2;\nexports.CONTEXT = \"universal_provider\";\nexports.STORAGE = `${exports.PROTOCOL}@${exports.WC_VERSION}:${exports.CONTEXT}:`;\nexports.RPC_URL = \"https://rpc.walletconnect.com/v1/\";\nexports.GENERIC_SUBPROVIDER_NAME = \"generic\";\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./types\"), exports);\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass AptosProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"aptos\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"aptos request --args--string>\", (0, core_1.safeJsonStringify)(args));\n            (0, core_1.logDebug)(\"aptos provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = AptosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass BtcProvider {\n    constructor(opts, name, client, events) {\n        this.name = core_1.NameSpaceKeyBtc;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"btc request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"btc provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = BtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass CosmosProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyCosmos;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"cosmos request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"cosmos provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = CosmosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Eip155Provider = void 0;\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nclass Eip155Provider {\n    constructor(opts, client, events) {\n        this.name = \"eip155\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = parseInt(this.getDefaultChain());\n        // rpc\n        this.httpProviders = this.createHttpProviders();\n        (0, core_1.logDebug)(\"eip155 constructor --opts.namespace-->\", opts.namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    isArray(value) {\n        return typeof value === \"object\" && value !== null && Array.isArray(value);\n    }\n    updateRequestParams(args) {\n        let isDic = args.params && typeof args.params === 'object' && !Array.isArray(args.params);\n        if (args.method === 'wallet_switchEthereumChain') {\n            const switchChainId = args.chainId.split(\":\")[1];\n            // const hexChainId = parseInt(switchChainId, 16);\n            const decimalNumber = parseInt(switchChainId, 10);\n            if (isNaN(decimalNumber)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid decimal number,  chainId: '${switchChainId}' `);\n            }\n            if (!args.params) {\n                args.params = { chainId: '0x' + decimalNumber.toString(16) };\n            }\n            else if (isDic) { //为 Record<string, unknown>\n                let params = args.params;\n                if (!('chainId' in params)) {\n                    params['chainId'] = '0x' + decimalNumber.toString(16);\n                    args.params = params;\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params error ,  method: '${args.method}' `);\n            }\n        }\n        else if (args.method === 'personal_sign'\n            || args.method === 'eth_signTypedData_v4'\n            || args.method === 'eth_sendTransaction'\n            || args.method === 'wallet_watchAsset') {\n            if (!args.params) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params is nil, method: '${args.method}'`);\n            }\n            if (this.isRecord(args.params)) {\n                let params = args.params;\n                (0, core_1.logDebug)(\"eip155 updateRequestParams params>\", JSON.stringify(params));\n                if ('chainId' in params) {\n                    const selectedChainId = args.chainId.split(\":\")[1];\n                    const chainNum = parseInt(selectedChainId, 10);\n                    let paramsChainString = String(params.chainId);\n                    let paramsChainId;\n                    if (paramsChainString.startsWith(this.name) && args.chainId === paramsChainString) { //为\n                        paramsChainId = chainNum;\n                    }\n                    else if (paramsChainString.startsWith(\"0x\")) {\n                        paramsChainId = parseInt(paramsChainString, 16);\n                    }\n                    else if (!isNaN(Number(paramsChainString))) { //数字\n                        paramsChainId = parseInt(paramsChainString, 10);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid params.chainId format, method: '${args.method}'`);\n                    }\n                    if (chainNum !== paramsChainId) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params.chainId not equal chain,  method: '${args.method}' `);\n                    }\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid request params type, method: '${args.method}'`);\n            }\n        }\n    }\n    //adapt array\n    adaptArray(args) {\n        if (args.method === 'wallet_switchEthereumChain'\n            || args.method === 'wallet_addEthereumChain'\n            || args.method === 'wallet_watchAsset'\n            || args.method === 'eth_sendTransaction') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr) {\n                    if (paramsArr.length === 1) {\n                        let firstParam = args.params[0];\n                        if (this.isRecord(firstParam)) {\n                            args.params = firstParam;\n                        }\n                    }\n                    else if (paramsArr.length > 1) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                    }\n                }\n            }\n        }\n        else if (args.method === 'eth_signTypedData_v4') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr && paramsArr.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                }\n                else if (paramsArr && paramsArr.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let messageObj = {};\n                if (paramsArr && paramsArr.length === 2) {\n                    let addressObj = args.params[0]; //address\n                    if (addressObj && typeof addressObj === 'string') { //check address\n                        let isEqual = false;\n                        this.namespace.accounts.forEach((account) => {\n                            let chainAddress = (0, utils_1.fromAccountToAddress)(account);\n                            if (chainAddress.toLowerCase() === addressObj.toLowerCase()) {\n                                isEqual = true;\n                            }\n                        });\n                        (0, core_1.logDebug)(\"eip155 adaptArray eth_signTypedData_v4 >>>isEqual: \", isEqual);\n                        if (!isEqual) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error, not equal,  method: '${args.method}' `);\n                        }\n                        if (this.isRecord(args.params[1])) {\n                            messageObj = args.params[1];\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error , not string,  method: '${args.method}' `);\n                    }\n                }\n                else if (paramsArr && paramsArr.length === 1) {\n                    if (this.isRecord(args.params[0])) {\n                        messageObj = args.params[0];\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                    }\n                }\n                try {\n                    let messages = JSON.stringify(messageObj);\n                    args.params = {\n                        typedDataJson: messages\n                    };\n                }\n                catch (err) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params call JSON.stringify() failed,  method: '${args.method}' `);\n                }\n            }\n        }\n        else if (args.method === 'personal_sign') {\n            if (this.isArray(args.params)) {\n                if (args.params && args.params.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params error,  method: '${args.method}' `);\n                }\n                else if (args.params && args.params.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let firstObj = args.params[0];\n                let secondObj = args.params[1];\n                if (secondObj && typeof secondObj === 'string') { //check address\n                    let isEqual = false;\n                    this.namespace.accounts.forEach((account) => {\n                        let chainAddress = (0, utils_1.fromAccountToAddress)(account);\n                        if (chainAddress.toLowerCase() === secondObj.toLowerCase()) {\n                            isEqual = true;\n                        }\n                    });\n                    (0, core_1.logDebug)(\"eip155 adaptArray personal_sign >>>isEqual: \", isEqual);\n                    if (!isEqual) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error,  method: '${args.method}' `);\n                    }\n                }\n                if (firstObj && typeof firstObj === 'string') {\n                    args.params = {\n                        message: firstObj\n                    };\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is error,  method: '${args.method}' `);\n                }\n            }\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"eth_requestAccounts\":\n            case \"eth_accounts\":\n            case \"eth_chainId\":\n                return false;\n            case \"eth_sendTransaction\":\n            case \"eth_signTransaction\":\n            case \"eth_sign\":\n            case \"personal_sign\":\n            case \"eth_signTypedData\":\n            case \"wallet_addEthereumChain\":\n            case \"wallet_watchAsset\":\n            case \"eth_signTypedData_v4\":\n                return true;\n            case \"wallet_switchEthereumChain\": {\n                this.adaptArray(args);\n                this.updateRequestParams(args);\n                const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n                return !this.isChainApproved(parsedChainId);\n            }\n            default:\n                return false;\n        }\n        return false;\n    }\n    configAddressAdaptInjectWallet(args) {\n        this.namespace.accounts.forEach((account) => {\n            if (account.includes(args.chainId)) {\n                args.address = (0, utils_1.fromAccountToAddress)(account);\n            }\n        });\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.adaptArray(args);\n            (0, core_1.logDebug)(\"eip155 request --args--string>\", JSON.stringify(args));\n            this.updateRequestParams(args);\n            (0, core_1.logDebug)(\"eip155 request --params--string>\", JSON.stringify(args));\n            this.configAddressAdaptInjectWallet(args);\n            switch (args.method) {\n                case \"eth_requestAccounts\":\n                    return this.getAccounts();\n                case \"eth_accounts\":\n                    return this.getAccounts();\n                case \"eth_chainId\":\n                    return parseInt(this.getDefaultChain());\n                case \"wallet_switchEthereumChain\": {\n                    return (yield this.handleSwitchChain(args));\n                }\n                case \"wallet_addEthereumChain\":\n                    return this.addEthereumChain(args);\n                default:\n                    break;\n            }\n            if (this.namespace.methods.includes(args.method)) {\n                // personal_sign\n                // eth_signTypedData_v4\n                // eth_sendTransaction\n                // wallet_watchAsset\n                try {\n                    const response = yield this.client.request(args);\n                    (0, core_1.logDebug)(\"eip155 request --response----string>\", JSON.stringify(response));\n                    if (this.isRecord(response)) {\n                        if ('result' in response) {\n                            let result = response.result;\n                            if (result && typeof result === 'string' && (result === \"true\" || result === \"false\")) {\n                                (0, core_1.logDebug)(\"eip155 request --wallet_watchAsset>>>>\", result === \"true\");\n                                return (result === \"true\");\n                            }\n                            return response.result;\n                        }\n                    }\n                    return response;\n                }\n                catch (e) {\n                    (0, core_1.logDebug)(`eip155 request --response --error--string> e instanceof OKXConnectError ${e instanceof core_1.OKXConnectError}`, JSON.stringify(e));\n                    throw e;\n                }\n            }\n            else {\n                (0, core_1.logDebug)('[RPC] request begin');\n                return yield this.getHttpProvider().request(args);\n            }\n        });\n    }\n    addEthereumChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let resultData = (yield this.client.request(args));\n            try {\n                if ('result' in resultData) {\n                    let successData = resultData;\n                    let account = resultData.result;\n                    if (account) {\n                        const nameSpace = account.split(\":\")[0];\n                        const chainId = account.split(\":\")[1];\n                        const chain = nameSpace + ':' + chainId;\n                        let newNameSpace = this.namespace;\n                        this.namespace.accounts.push(account);\n                        this.namespace.chains.push(chain);\n                        if (this.isRecord(args.params)) {\n                            if (\"rpcUrls\" in args.params) {\n                                let rpcUrls = args.params.rpcUrls;\n                                let rpcUrl = rpcUrls ? rpcUrls[0] : undefined;\n                                if (rpcUrl) {\n                                    if (this.namespace.rpcMap) {\n                                        this.namespace.rpcMap[chainId] = rpcUrl;\n                                    }\n                                    else {\n                                        this.namespace.rpcMap = {\n                                            [chainId]: rpcUrl\n                                        };\n                                    }\n                                    this.setHttpProvider(chainId, rpcUrl);\n                                }\n                            }\n                        }\n                        this.events.emit(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, {\n                            eip155: this.namespace\n                        });\n                    }\n                }\n                else {\n                    new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request error`);\n                }\n            }\n            catch (error) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request  error`);\n            }\n            return null;\n        });\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        this.chainId = parseInt(chainId);\n        // set rpc\n        if (!this.httpProviders[chainId]) {\n            const rpc = rpcUrl || (0, utils_1.getRpcUrl)(`${this.name}:${chainId}`, this.namespace);\n            if (!rpc) {\n                // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n                (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            }\n            else {\n                this.setHttpProvider(chainId, rpc);\n            }\n        }\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId.toString();\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // ---------- Private ----------------------------------------------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"eip155 getAccounts \", accounts, this.chainId);\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => {\n                return (0, utils_1.fromAccountToAddress)(account);\n            })),\n        ];\n    }\n    getHexChainIdFromRequest(args) {\n        let params = args.params;\n        let hexChainId = \"0x0\";\n        if (params && \"chainId\" in params) {\n            hexChainId = params.chainId;\n        }\n        hexChainId = hexChainId.startsWith(\"0x\") ? hexChainId : `0x${hexChainId}`;\n        (0, core_1.logDebug)(\"handleSwitchChain -->args \", args);\n        (0, core_1.logDebug)(\"handleSwitchChain -->hexChainId \", hexChainId);\n        const parsedChainId = parseInt(hexChainId, 16);\n        (0, core_1.logDebug)(\"handleSwitchChain -->parsedChainId \", parsedChainId);\n        return { parsedChainId, hexChainId };\n    }\n    handleSwitchChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n            if (this.isChainApproved(parsedChainId)) {\n                this.setDefaultChain(`${parsedChainId}`);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, `the method ${args.method} request  error`);\n            }\n        });\n    }\n    isChainApproved(chainId) {\n        return this.namespace.chains.includes(`${this.name}:${chainId}`);\n    }\n    // rpc\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            //   throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            (0, core_1.logDebug)('get parsed chain and rpc:', parsedChainId, parsedRpc);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        (0, core_1.logDebug)('get http providermap:', http);\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n}\nexports.Eip155Provider = Eip155Provider;\nexports.default = Eip155Provider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcConnection = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\n// Source: https://nodejs.org/api/events.html#emittersetmaxlistenersn\nconst EVENT_EMITTER_MAX_LISTENERS_DEFAULT = 10;\nclass JsonRpcConnection {\n    constructor(url, disableProviderPing = false) {\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n        this.events = new eventemitter3_1.EventEmitter();\n        this.isAvailable = false;\n        this.registering = false;\n        if (!(0, core_2.isHttpUrl)(url)) {\n            throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n        }\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n    }\n    get connected() {\n        return this.isAvailable;\n    }\n    get connecting() {\n        return this.registering;\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            yield this.register(url);\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                throw new Error(\"Connection already closed\");\n            }\n            this.onClose();\n        });\n    }\n    send(payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                yield this.register();\n            }\n            try {\n                const body = (0, core_1.safeJsonStringify)(payload);\n                const res = yield (0, cross_fetch_1.default)(this.url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                const data = yield res.json();\n                this.onPayload({ data });\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    register() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (!(0, core_2.isHttpUrl)(url)) {\n                throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n            }\n            if (this.registering) {\n                return new Promise((resolve, reject) => {\n                    this.events.once(\"register_error\", (error) => {\n                        reject(error);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.isAvailable === \"undefined\") {\n                            return reject(new Error(\"HTTP connection is missing or invalid\"));\n                        }\n                        resolve();\n                    });\n                });\n            }\n            this.url = url;\n            this.registering = true;\n            try {\n                if (!this.disableProviderPing) {\n                    const body = (0, core_1.safeJsonStringify)({ id: 1, jsonrpc: \"2.0\", method: \"test\", params: [] });\n                    yield (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                }\n                this.onOpen();\n            }\n            catch (e) {\n                const error = this.parseError(e);\n                this.events.emit(\"register_error\", error);\n                this.onClose();\n                throw error;\n            }\n        });\n    }\n    onOpen() {\n        this.isAvailable = true;\n        this.registering = false;\n        this.events.emit(\"open\");\n    }\n    onClose() {\n        this.isAvailable = false;\n        this.registering = false;\n        this.events.emit(\"close\");\n    }\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        const payload = typeof e.data === \"string\" ? (0, core_1.safeJsonParse)(e.data) : e.data;\n        this.events.emit(\"payload\", payload);\n    }\n    onError(id, e) {\n        const error = this.parseError(e);\n        const message = error.message || error.toString();\n        const payload = (0, core_2.formatJsonRpcError)(id, message);\n        this.events.emit(\"payload\", payload);\n    }\n    parseError(e, url = this.url) {\n        return (0, core_2.parseConnectionError)(e, url, \"HTTP\");\n    }\n}\nexports.JsonRpcConnection = JsonRpcConnection;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcProvider = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst types_1 = require(\"../../types\");\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nclass JsonRpcProvider extends types_1.IJSONRpcProvider {\n    constructor(connection) {\n        super(connection);\n        this.events = new eventemitter3_1.EventEmitter();\n        this.connected = false;\n        this.connecting = false;\n        this.hasRegisteredEventListeners = false;\n        this.connection = this.setConnection(connection);\n        if (this.connection.connected) {\n            this.registerEventListeners();\n        }\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            yield this.open(connection);\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.close();\n        });\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    request(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.requestStrict((0, core_1.formatJsonRpcRequest)(request.method, request.params || [], (0, core_1.getBigIntRpcId)().toString()), // casting to any is required in order to use BigInt as rpcId\n            context);\n        });\n    }\n    // ---------- Protected ----------------------------------------------- //\n    requestStrict(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.connection.connected) {\n                    try {\n                        yield this.open();\n                    }\n                    catch (e) {\n                        reject(e);\n                    }\n                }\n                this.events.on(`${request.id}`, (response) => {\n                    if ((0, core_1.isJsonRpcError)(response)) {\n                        reject(response.error);\n                    }\n                    else {\n                        resolve(response.result);\n                    }\n                });\n                try {\n                    (0, core_2.logDebug)('[RPC] >>> send request', request, context);\n                    yield this.connection.send(request, context);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }));\n        });\n    }\n    setConnection(connection = this.connection) {\n        return connection;\n    }\n    onPayload(payload) {\n        this.events.emit(\"payload\", payload);\n        if ((0, core_1.isJsonRpcResponse)(payload)) {\n            this.events.emit(`${payload.id}`, payload);\n        }\n        else {\n            this.events.emit(\"message\", {\n                type: payload.method,\n                data: payload.params,\n            });\n        }\n    }\n    onClose(event) {\n        // Code 3000 indicates an abnormal closure signalled by the relay -> emit an error in this case.\n        if (event && event.code === 3000) {\n            this.events.emit(\"error\", new Error(`WebSocket connection closed abnormally with code: ${event.code} ${event.reason ? `(${event.reason})` : \"\"}`));\n        }\n        this.events.emit(\"disconnect\");\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            if (this.connection === connection && this.connection.connected)\n                return;\n            if (this.connection.connected)\n                this.close();\n            if (typeof connection === \"string\") {\n                yield this.connection.open(connection);\n                connection = this.connection;\n            }\n            this.connection = this.setConnection(connection);\n            yield this.connection.open();\n            this.registerEventListeners();\n            this.events.emit(\"connect\");\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.connection.close();\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    registerEventListeners() {\n        if (this.hasRegisteredEventListeners)\n            return;\n        this.connection.on(\"payload\", (payload) => this.onPayload(payload));\n        this.connection.on(\"close\", (event) => this.onClose(event));\n        this.connection.on(\"error\", (error) => this.events.emit(\"error\", error));\n        this.connection.on(\"register_error\", (_error) => this.onClose());\n        this.hasRegisteredEventListeners = true;\n    }\n}\nexports.JsonRpcProvider = JsonRpcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolanaProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SolanaProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"solana\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"solana request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"solana provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    //   {\n    //     \"chains\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\" ],\n    //     \"accounts\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp:F7wnJc5wiBGy1k87jv6gyNwE3jMEWd18oTQiYsF1xVG7\"],\n    //     \"methods\": [\n    //         \"solana_signTransaction\",\n    //         \"solana_signMessage\"\n    //     ],\n    //     \"defaultChain\": \"5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\"\n    // }\n    // TODO:确认上面的defaultChain是否正确（没有solana前缀）\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"solana\"))) {\n                chainId = `solana:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.SolanaProvider = SolanaProvider;\nexports.default = SolanaProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass StarknetProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"starknet\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"starknet request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"starknet provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Wallet doesn't support\" + args.method);\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = StarknetProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuiProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SuiProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeySui;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"sui request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"sui provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"sui\"))) {\n                chainId = `sui:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"sui_signMessage\":\n            case \"sui_signPersonalMessage\":\n            case \"sui_signTransactionBlock\":\n            case \"sui_signAndExecuteTransactionBlock\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.SuiProvider = SuiProvider;\nexports.default = SuiProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TONProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTON;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            (0, core_1.logDebug)(\"TONProvider request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"TONProvider request provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                if (!args.params) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params is nil\");\n                }\n                if (this.isRecord(args.params)) {\n                    const _e = args.params, { validUntil } = _e, newParams = __rest(_e, [\"validUntil\"]);\n                    let fromAddress = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n                    if ('from' in newParams) {\n                        fromAddress = newParams.from || ((_d = (_c = this.namespace.payload) === null || _c === void 0 ? void 0 : _c.ton_addr) === null || _d === void 0 ? void 0 : _d.address);\n                    }\n                    args.params['from'] = fromAddress;\n                    args.params['network'] = this.getDefaultChain();\n                    args.params['valid_until'] = validUntil;\n                    let response = yield this.client.request(args);\n                    if (this.isRecord(response) && 'result' in response) {\n                        const result = {\n                            boc: response.result.toString()\n                        };\n                        (0, core_1.logDebug)(\"TONProvider request provider response: \", JSON.stringify(response));\n                        (0, core_1.logDebug)(\"TONProvider request provider result: \", JSON.stringify(result));\n                        return result;\n                    }\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton_send request response is nil\");\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params type add nil\");\n                }\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        var _a, _b;\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"ton getAccounts accounts :\", accounts);\n        (0, core_1.logDebug)(\"ton getAccounts .namespace :\", JSON.stringify(this.namespace));\n        if (!accounts) {\n            return [];\n        }\n        let address = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n        (0, core_1.logDebug)(\"ton getAccounts address :\", address);\n        if (address) {\n            return [\n                address\n            ];\n        }\n        return [];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"ton_sendTransaction\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.default = TONProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TronProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTron;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"tron request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"tron provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = TronProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./providers\"), exports);\n__exportStar(require(\"./misc\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IJSONRpcProvider = exports.IJSONRpcConnection = void 0;\nclass IJSONRpcConnection {\n}\nexports.IJSONRpcConnection = IJSONRpcConnection;\nclass IJSONRpcProvider {\n    constructor(opt) {\n    }\n}\nexports.IJSONRpcProvider = IJSONRpcProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setGlobal = exports.getGlobal = void 0;\nconst globals = {};\nconst getGlobal = (key) => {\n    return globals[key];\n};\nexports.getGlobal = getGlobal;\nconst setGlobal = (key, value) => {\n    globals[key] = value;\n};\nexports.setGlobal = setGlobal;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./misc\"), exports);\n__exportStar(require(\"./globals\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRpcUrl = getRpcUrl;\nexports.getChainId = getChainId;\nexports.fromAccountToAddress = fromAccountToAddress;\nexports.convertChainIdToNumber = convertChainIdToNumber;\nexports.parseChainId = parseChainId;\nexports.mergeArrays = mergeArrays;\nexports.syncAddressAvailable = syncAddressAvailable;\nexports.syncAddressHostAvailable = syncAddressHostAvailable;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getRpcUrl(chainId, rpc, projectId) {\n    var _a;\n    const chain = parseChainId(chainId);\n    // no default\n    return (((_a = rpc.rpcMap) === null || _a === void 0 ? void 0 : _a[chain.reference]) ||\n        ``);\n}\nfunction getChainId(chain) {\n    return chain.includes(\":\") ? chain.split(\":\")[1] : chain;\n}\nfunction fromAccountToAddress(account) {\n    if (!account) {\n        return \"\";\n    }\n    try {\n        let addressArr = account.split(\":\").slice(2);\n        let address = addressArr.length > 0 ? addressArr.join(\":\") : \"\";\n        (0, core_1.logDebug)(\"fromAccountToAddress address and account:\", address, account);\n        return address;\n    }\n    catch (e) {\n        (0, core_1.logError)(\"fromAccountToAddress error:\", account);\n        return \"\";\n    }\n}\n// export function validateChainApproval(chain: string, chains: string[]): void {\n//   if (!chains.includes(chain)) {\n//     throw new Error(\n//       `Chain '${chain}' not approved. Please use one of the following: ${chains.toString()}`,\n//     );\n//   }\n// }\n// export function getChainsFromApprovedSession(accounts: string[]): string[] {\n//   return accounts.map((address) => `${address.split(\":\")[0]}:${address.split(\":\")[1]}`);\n// }\n// export function getAccountsFromSession(namespace: string, session: SessionTypes.Struct): string[] {\n//   // match namespaces e.g. eip155 with eip155:1\n//   const matchedNamespaceKeys = Object.keys(session.namespaces).filter((key) =>\n//     key.includes(namespace),\n//   );\n//   if (!matchedNamespaceKeys.length) return [];\n//   const accounts: string[] = [];\n//   matchedNamespaceKeys.forEach((key) => {\n//     const accountsForNamespace = session.namespaces[key].accounts;\n//     accounts.push(...accountsForNamespace);\n//   });\n//   return accounts;\n// }\n// export function mergeRequiredOptionalNamespaces(\n//   required: NamespaceConfig = {},\n//   optional: NamespaceConfig = {},\n// ){\n//   const requiredNamespaces = normalizeNamespaces(required);\n//   const optionalNamespaces = normalizeNamespaces(optional);\n//    return merge.merge(requiredNamespaces,optionalNamespaces)\n// }\n/**\n * Converts\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * into\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *\n */\n// export function normalizeNamespaces(namespaces: NamespaceConfig): NamespaceConfig {\n//   const normalizedNamespaces: NamespaceConfig = {};\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const rpcMap = values.rpcMap || {};\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       ...values,\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       rpcMap: { ...rpcMap, ...normalizedNamespaces[normalizedKey]?.rpcMap },\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n//\n// export function parseCaip10Account(caip10Account: string): string {\n//   return caip10Account.includes(\":\") ? caip10Account.split(\":\")[2] : caip10Account;\n// }\n/**\n * Populates the chains array for each namespace with the chains extracted from the accounts if are otherwise missing\n */\n// export function populateNamespacesChains(\n//   namespaces: SessionTypes.Namespaces,\n// ): Record<string, SessionTypes.Namespace> {\n//   const parsedNamespaces: Record<string, SessionTypes.Namespace> = {};\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const accounts = values.accounts || [];\n//     // If the key includes a CAIP separator `:` we know it's a namespace + chainId (e.g. `eip155:1`)\n//     const chains = isCaipNamespace(key)\n//       ? [key]\n//       : values.chains\n//       ? values.chains\n//       : getChainsFromApprovedSession(values.accounts);\n//     parsedNamespaces[key] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   }\n//   return parsedNamespaces;\n// }\nfunction convertChainIdToNumber(chainId) {\n    if (typeof chainId === \"number\")\n        return chainId;\n    if (chainId.includes(\"0x\")) {\n        return parseInt(chainId, 16);\n    }\n    chainId = chainId.includes(\":\") ? chainId.split(\":\")[1] : chainId;\n    return isNaN(Number(chainId)) ? chainId : Number(chainId);\n}\nconst CAIP_DELIMITER = \":\";\nfunction parseChainId(chain) {\n    const [namespace, reference] = chain.split(CAIP_DELIMITER);\n    return { namespace, reference };\n}\nfunction mergeArrays(a = [], b = []) {\n    return [...new Set([...a, ...b])];\n}\nfunction syncAddressAvailable(wallet) {\n    if (!wallet) {\n        return false;\n    }\n    if (wallet.appName !== 'OKX Wallet') {\n        return false;\n    }\n    if ((0, core_1.versionCompare)('6.97.0', wallet.appVersion) > 0) {\n        return false;\n    }\n    return syncAddressHostAvailable();\n}\nfunction syncAddressHostAvailable() {\n    try {\n        return !!(window.okxGlobal);\n    }\n    catch (e) {\n        return false;\n    }\n}\n","<template>\n  <div id=\"app\">\n    <el-container>\n      <el-header>OKX Connect</el-header>\n      <el-main>\n        <el-card class=\"wallet-info\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Wallet Info</div>\n          </template>\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Wallet Address:</strong> {{ getWalletAddress }}\n            </el-col>\n          </el-row>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Status :</strong> {{ currentStatus }}\n            </el-col>\n          </el-row>\n\n        </el-card>\n\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Connect Params</div>\n          </template>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"withUI\" @change=\"handleWithUI\">\n                Show UI\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"universalToTG\" @change=\"handleUniversalToTG\">\n                Use mini wallet\n              </el-checkbox>\n            </el-col>\n          </el-row>\n\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Modals</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"modals\" placeholder=\"Modals\" @change=\"handleModalsSelect\" multiple>\n                <el-option label=\"Before\" value=\"before\"/>\n                <el-option label=\"Success\" value=\"success\"/>\n                <el-option label=\"Error\" value=\"error\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center; justify-content: space-between;\">\n            <el-col :span=\"6\" style=\"gap: 2px\">\n              <p style=\"font-size: 11pt; margin: 0px\">Return Strategy</p>\n              <p style=\"font-size: 9pt; margin: 0px\">(Mobile only)</p>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-select\n                  v-model=\"returnStrategy\"\n                  @change=\"handleReturnStrategySelect\"\n                  placeholder=\"Return Strategy\"\n              >\n                <el-option\n                    v-for=\"strategy in returnStrategies\"\n                    :key=\"`return-strategy-select-option-${strategy}`\"\n                    :label=\"strategy\"\n                    :value=\"strategy\"\n                />\n              </el-select>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-input\n                  v-if=\"returnStrategy === 'deeplink'\"\n                  v-model=\"deeplink\"\n                  @change=\"handleReturnStrategyDeeplink\"\n                  placeholder=\"Deeplink\"\n                  :disabled=\"returnStrategy !== 'deeplink'\"\n                  style=\"margin: 0px\"\n              />\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Lang</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"language\" @change=\"handleLanguageSelect\" placeholder=\"Language\">\n                <el-option v-for=\"locale in locales\" :key=\"`language-select-option-${locale}`\" :label=\"locale\"\n                           :value=\"locale\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Theme</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"theme\" @change=\"handleThemeSelect\" placeholder=\"Theme\">\n                <el-option label=\"LIGHT\" :value=\"THEME.LIGHT\"/>\n                <el-option label=\"DARK\" :value=\"THEME.DARK\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <!--          <el-row>-->\n          <!--          <el-row style=\"align-items: center\">-->\n          <!--            <el-col :span=\"4\">-->\n          <!--              <p style=\"font-size: 11pt\">Connect</p>-->\n          <!--              <p style=\"font-size: 11pt\">Methods</p>-->\n          <!--            </el-col>-->\n          <!--            <el-col :span=\"20\">-->\n          <!--              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" placeholder=\"Methods\">-->\n          <!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n          <!--                           :value=\"methods\" />-->\n\n          <!--              </el-select>-->\n          <!--            </el-col>-->\n          <!--          </el-row>-->\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Connect</p>\n              <p style=\"font-size: 11pt\">Methods</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" multiple placeholder=\"methods\">\n                <el-option\n                    v-for=\"item in connectMethods\"\n                    :key=\"item\"\n                    :label=\"item\"\n                    :value=\"item\">\n                </el-option>\n              </el-select>\n\n\n              <!--              <el-select v-model=\"selectedMethod\" placeholder=\"Methods\" @change=\"handleConnectMethodsSelect\" multiple>-->\n              <!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n              <!--                           :value=\"methods\" />-->\n              <!--              </el-select>-->\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">ton_proof</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-input v-model=\"tonProofValue\" placeholder=\"input ton_proof\"></el-input>\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" align=\"middle\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Required Chains</div>\n            </el-col>\n            <el-col\n                :span=\"6\"\n                v-for=\"item in Object.keys(availableChains)\"\n                :key=\"item\"\n            >\n              <el-checkbox\n                  v-model=\"availableChains[item].checked\"\n                  :disabled=\"!areChainsInit\"\n              >{{ availableChains[item].name }}\n              </el-checkbox\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" align=\"middle\" style=\"margin-top: 20px\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Optional Chains</div>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:43114')\" @change=\"() => handleOptionChange('eip155:43114')\">\n                AVAX\n              </el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:10')\" @change=\"() => handleOptionChange('eip155:10')\">OP</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:8453')\" @change=\"() => handleOptionChange('eip155:8453')\">\n                BASE\n              </el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:99781165')\"\n                           @change=\"() => handleOptionChange('eip155:99781165')\">Nonexist\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp')\"\n                           @change=\"() => handleOptionChange('solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp')\">Solana\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('ton:-239')\" @change=\"() => handleOptionChange('ton:-239')\">Ton\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('btc:mainnet')\"\n                           @change=\"() => handleOptionChange('btc:mainnet')\">btc\n              </el-checkbox>\n            </el-col>\n\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"initBtnClicked\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectInitStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"testTonConnect\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectTonStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"connectBtnClicked\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectStatusStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"syncAllAddressClick\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ syncAllAddressStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"danger\"\n                  @click=\"disconnectAction\"\n                  icon=\"el-icon-switch-button\"\n                  :disabled=\"!areChainsInit || walletAddress.length == 0\"\n              >{{ disconnectStatusStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <teleport to=\"body\">\n            <div v-if=\"showModal\" class=\"modal-overlay\" @click=\"closeModal\">\n              <div class=\"modal-content\" @click.stop>\n                <button class=\"close-button\" @click=\"closeModal\">\n                  &times;\n                </button>\n                <h2>Scan to connect</h2>\n                <qrcode-vue :value=\"qrValue\" :size=\"350\" level=\"L\"/>\n              </div>\n            </div>\n          </teleport>\n        </el-card>\n\n        <!-- 发送交易 -->\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Transactions</div>\n          </template>\n\n          <el-tabs v-model=\"activeTab\" type=\"border-card\" @tab-click=\"clickActiveTab\">\n            <!-- ETH -->\n            <el-tab-pane label=\"ETH\" name=\"eip155:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to Fuse)\n                  </el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send ETH)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve TONCoin)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(eth mint\n                    nft)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add SPX6900)\n                  </el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"oversized_personal_sign()\">oversized_personal_sign(about 70k, split limit 63k)\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TON\" name=\"ton:-239\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_getAccount\">ton_getAccount</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_sendTransaction\">ton_sendTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- solana -->\n            <el-tab-pane label=\"Sol\" name=\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- soon -->\n            <el-tab-pane label=\"soon:mainnet\" name=\"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"soon:testnet\" name=\"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"eclipse:mainnet\" name=\"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- Sui-->\n            <el-tab-pane label=\"Sui\" name=\"sui:mainnet\">\n              <SuiPanel @generateTransactionParams=\"sui_generateTransactionParams\"/>\n            </el-tab-pane>\n            <!-- BTC -->\n            <el-tab-pane label=\"BTC\" name=\"btc:mainnet\">\n              <BTCPanel @generateTransactionParams=\"btc_generateTransactionParams\"/>\n            </el-tab-pane>\n\n            <!-- Fractal BTC -->\n            <el-tab-pane label=\"Fractal\" name=\"fractal:mainnet\">\n              <FractalPanel @generateTransactionParams=\"fractal_generateTransactionParams\"/>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Tron\" name=\"tron:mainnet\">\n              <TronTransactionPanel\n                  @generateTransactionParams=\"tron_generateTransactionParams\"\n                  @generateTransactionResult=\"tron_getTransactionResult\"/>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Aptos\" name=\"aptos:mainnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signTransaction\">aptos_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"aptos_signAndSubmitTransaction\">aptos_signAndSubmitTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Cosmos\" name=\"cosmos:cosmoshub-4\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <!-- Polygon-->\n            <el-tab-pane label=\"Polygon\" name=\"eip155:137\">\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"Polygon_RPCRequest()\">Polygon_RPCRequest(Polygon)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send POL)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve sushi)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(polygon mint\n                    nft)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add LGNS)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\"\n                  >eth_sendTransaction(转账FUSE)\n                  </el-button\n                  >\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\"\n                  >eth_sendTransaction(授权USDC)\n                  </el-button\n                  >\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- BSC-->\n            <el-tab-pane label=\"BNB\" name=\"eip155:56\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to BNB)\n                  </el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send BNB)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve POSI)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add FET)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Fuse\" name=\"eip155:122\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_swap\">eth_sendTransaction(Swap)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Sonic testnet\" name=\"svm:70000062\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Movement\" name=\"movement:testnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"move_signTransaction\">move_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"move_signAndSubmitTransaction\">move_signAndSubmitTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Movement mainnet\" name=\"movement:mainnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"move_signTransaction\">move_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"move_signAndSubmitTransaction\">move_signAndSubmitTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n\n            <el-tab-pane label=\"osmos\" name=\"cosmos:osmosis-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"SEI\" name=\"cosmos:pacific-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Starknet\" name=\"starknet:mainnet\">\n              <StarknetPanel ref=\"starknetPanelRef\" @generateTransactionParams=\"starknet_generateTransactionParams\"\n                             @generateTransactionResult=\"starknet_getTransactionResult\"/>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TEST \" name=\"test:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"testBase64UrlSafe\">testBase64UrlSafe</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n          </el-tabs>\n\n          <el-col :xs=\"24\" :sm=\"24\" style=\"margin: 16px 0px;\">\n            <el-row style=\"align-items: center; justify-content: space-between; margin-bottom: 8px;\">\n              <el-col :span=\"4\">\n                <p style=\"font-size: 11pt; margin: 0px; text-align: start\">Redirect param (only for ETH, Polygon, BNB,\n                  Fuse)</p>\n              </el-col>\n              <el-col :span=\"9\">\n                <el-select\n                    v-model=\"redirect\"\n                    @change=\"handleRedirectSelect\"\n                    placeholder=\"Return Strategy\"\n                    :disabled=\"!canChainAddRedirectParam()\"\n                >\n                  <el-option\n                      v-for=\"strategy in returnStrategies\"\n                      :key=\"`return-strategy-select-option-${strategy}`\"\n                      :label=\"strategy\"\n                      :value=\"strategy\"\n                  />\n                </el-select>\n              </el-col>\n              <el-col :span=\"10\">\n                <el-input\n                    v-if=\"redirect === 'deeplink'\"\n                    v-model=\"redirectDeeplink\"\n                    @change=\"handleRedirectDeeplink\"\n                    placeholder=\"Deeplink\"\n                    :disabled=\"!canChainAddRedirectParam() || redirect !== 'deeplink'\"\n                    style=\"margin: 0px\"\n                />\n              </el-col>\n            </el-row>\n            <el-button\n                type=\"primary\" @click=\"addRedirectParam()\"\n                :disabled=\"!canChainAddRedirectParam() || !testTransaction\"\n            >\n              Add redirect param to data\n            </el-button>\n          </el-col>\n\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Data:</div>\n            <el-input v-model=\"testTransaction\" type=\"textarea\" :rows=\"5\" placeholder=\"sendTransactions\"></el-input>\n          </el-col>\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Result :</div>\n            <el-input v-model=\"testboc\" type=\"textarea\" :rows=\"5\" placeholder=\"boc\"></el-input>\n          </el-col>\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button type=\"primary\" :disabled=\"sendBtnDisabled\" @click=\"sendTransaction()\">{{\n                  testTransactionStr\n                }}\n              </el-button>\n            </el-col>\n          </el-row>\n        </el-card>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<style scoped>\n/* 重置全局边距和内边距 */\nbody,\nhtml {\n  margin: 0;\n  padding: 0;\n  height: 100%;\n}\n\n/* 确保 app 容器占满整个视口 */\n#app {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin: 0 auto;\n  /* 居中 */\n  max-width: 600px;\n  /* 设置最大宽度 */\n  padding: 0 20px;\n  /* 添加一些左右内边距 */\n}\n\n/* 调整 el-container 样式 */\n.el-container {\n  min-height: 100vh;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n}\n\n/* 调整 el-header 样式 */\n.el-header {\n  background-color: #333333;\n  color: white;\n  height: 50px;\n  line-height: 50px;\n  font-size: 18px;\n  font-weight: bold;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n}\n\n/* 调整 el-main 样式 */\n.el-main {\n  padding: 70px 0 20px;\n  /* 增加顶部内边距以避免被固定header遮挡 */\n  flex-grow: 1;\n}\n\n.el-card {\n  margin-bottom: 20px;\n}\n\n.info-row {\n  margin-bottom: 10px;\n}\n\n.input-label {\n  margin-bottom: 5px;\n  text-align: left;\n}\n\n.el-input {\n  margin-bottom: 10px;\n}\n\n/* 通用按钮样式 */\n.wallet-actions .el-button,\n.transaction .el-button,\n.clear-cache .el-button {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 40px;\n}\n\n.wallet-actions .el-button span,\n.transaction .el-button span,\n.clear-cache .el-button span {\n  margin: 0 auto;\n}\n\n/* 按钮行间距 */\n.wallet-actions .button-row,\n.transaction .button-row {\n  margin-bottom: 8px;\n}\n\n.wallet-actions .button-row:last-child,\n.transaction .button-row:last-child {\n  margin-bottom: 0;\n}\n\n/* 调整图标和文字的对齐 */\n.wallet-actions .el-button [class^=\"el-icon-\"],\n.transaction .el-button [class^=\"el-icon-\"],\n.clear-cache .el-button [class^=\"el-icon-\"] {\n  margin-right: 5px;\n  vertical-align: middle;\n}\n\n/* 新增：调整发送交易按钮与输入框的间距 */\n.transaction .el-row:not(:last-child) {\n  margin-bottom: 10px;\n}\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  text-align: center;\n  position: relative;\n  max-width: 90%;\n  width: 400px;\n}\n\n.close-button {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  font-size: 24px;\n  border: none;\n  background: none;\n  cursor: pointer;\n}\n\n/* 响应式调整 */\n@media (max-width: 600px) {\n  #app {\n    padding: 0 10px;\n  }\n\n  .el-main {\n    padding: 60px 0 10px;\n  }\n}\n</style>\n<script>\nimport {OKX_CONNECT_ERROR_CODES, safeJsonStringify, getAppWalletDeepLink, getUniversalLink} from \"@okxconnect/core\"\nimport {\n  OKXBtcProvider,\n  OKXUniversalProvider,\n  OKXCosmosProvider,\n  OKXTonProvider,\n  OKXTronProvider,\n  OKXStarknetProvider\n} from \"@okxconnect/universal-provider\"\nimport {OKXSolanaProvider} from \"@okxconnect/solana-provider\";\nimport {\n  Connection,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n  TransactionMessage,\n  VersionedTransaction\n} from '@solana/web3.js';\nimport {OKXSuiProvider as SuiAdapter} from \"@okxconnect/sui-provider\"\nimport QrcodeVue from 'qrcode.vue'\n\nimport {OKXAptosProvider} from \"@okxconnect/aptos-provider\";\nimport {Aptos, AptosConfig, Network} from \"@aptos-labs/ts-sdk\";\n\nimport BTCPanel from \"./components/BtcTransactionPanel.vue\";\nimport FractalPanel from \"./components/FractalTransactionPanel.vue\"\nimport SuiPanel from \"./components/SuiTransactionPanel.vue\";\nimport StarknetPanel from \"./components/StarknetTransactionPanel.vue\";\n\nimport {OKXTonConnectUI, OKXUniversalConnectUI, THEME} from \"@okxconnect/ui\";\nimport {ethers} from 'ethers';\nimport VConsole from 'vconsole';\nimport nacl from \"tweetnacl\";\n\nconst {verifyADR36Amino} = require('@keplr-wallet/cosmos')\nconst {fromBech32} = require('@cosmjs/encoding')\nimport {verifyPersonalMessageSignature} from '@mysten/sui/verify';\nimport {useShortLink} from \"@okxconnect/core\";\nimport TronTransactionPanel from \"@/components/TronTransactionPanel.vue\";\nimport {TronWeb} from \"tronweb\";\nimport {RpcProvider as StarknetRpcProvider, Account as StarknetAccount} from \"starknet\";\nimport {ref, toRaw} from \"vue\";\n\nnew VConsole();\n\nconst allChains = {\n  1: {name: \"Eth\", checked: false},\n  56: {name: \"BNB\", checked: false},\n  137: {name: \"Polygon\", checked: false},\n  122: {name: \"Fuse\", checked: false},\n  \"ton:-239\": {name: \"TON\", checked: false},\n  \"btc:mainnet\": {name: \"BTC\", checked: false},\n  \"sui:mainnet\": {name: \"Sui\", checked: false},\n  \"aptos:mainnet\": {name: \"Aptos\", checked: false},\n  \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\": {\n    name: \"Solana\",\n    checked: false,\n  },\n  \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\": {\n    name: \"Sol testnet\",\n    checked: false,\n  },\n  \"svm:70000062\": {\n    name: \"Sonic testnet\",\n    checked: false,\n  },\n  \"movement:mainnet\": {name: \"Movement mainnet\", checked: false},\n  \"movement:testnet\": {name: \"Movement\", checked: false},\n  \"fractal:mainnet\": {name: \"Fractal\", checked: false},\n  \"cosmos:osmosis-1\": {name: \"Osmos\", checked: false},\n  \"cosmos:cosmoshub-4\": {name: \"Cosmos\", checked: false},\n  \"cosmos:pacific-1\": {name: \"SEI\", checked: false},\n  \"cosmos:abvdefg\": {name: \"cosmos:abvdefg\", checked: false},\n  \"tron:mainnet\": {name: \"tron\", checked: false},\n  997865: {name: \"Non Exist chain\", checked: false},\n  2020: {name: \"Ronin\", checked: false},\n  1666600000: {name: \"Harmony\", checked: false},\n  \"starknet:mainnet\": {name: \"starknet\", checked: false},\n  \"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\":{name:\"soon:mainnet\", checked: false},\n  \"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\":{name:\"soon:testnet\", checked: false},\n  \"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\":{name:\"eclipse:mainnet\", checked: false},\n};\n\nconst chainsThatCanAddRedirectParam = [\n  \"eip\"\n]\n\nvar optionChains = new Set([]);\nvar selectedModals = [\"before\", \"success\", \"error\"];\nvar selectedReturnStrategy = \"none\";\nvar selectedDeepLink = \"tg://resolve\";\nvar selectedLanguage = \"en_US\";\nvar selectedTheme = THEME.LIGHT;\n\n// import QrcodeVue from 'qrcode.vue'\nexport default {\n  name: \"App\",\n  components: {\n    TronTransactionPanel,\n    QrcodeVue,\n    BTCPanel,\n    FractalPanel,\n    SuiPanel,\n    StarknetPanel\n  },\n\n  setup() {\n    const sendBtnDisabled = ref(false)\n\n    return {\n      sendBtnDisabled\n    }\n  },\n  data: () => {\n    return {\n      activeTab: \"eip155:1\",\n      testTopic: \"\",\n      testPublicKey: \"\",\n      testProofPayload: \"\",\n      tonProofValue: \"\",\n      pendingDeepLink: \"-\",\n      logList: [],\n      connectReady: false,\n      connectStatusStr: \"Connect\",\n      syncAllAddressStr: \"syncAllAddress\",\n      connectInitStr: \"init test\",\n      connectTonStr: \"tonuiconnect test\",\n      disconnectStatusStr: \"Disconnect\",\n      localPubKey: \"\",\n      localSecKey: \"\",\n      testTransaction: \"\",\n      selectedChain: \"eip155:1\",\n      testTransactionStr: \"Send\",\n      walletAddress: \"\",\n      testboc: \"\",\n      ProofPayloadVerify: \"\",\n      showModal: false,\n      showVerifyRow: false,\n      qrValue: \"https://www.okx.com/download\",\n      currentStatus: \"\",\n      areChainsInit: false,\n      availableChains: allChains,\n      isOptionalChecked: (chainId) => {\n        return optionChains.has(chainId);\n      },\n      withUI: localStorage.getItem(\"autoRefresh\") != \"false\",\n      universalToTG: localStorage.getItem(\"universalToTG\") != \"false\",\n      modals: selectedModals,\n      returnStrategies: [\"none\", \"back\", \"deeplink\"],\n      returnStrategy: selectedReturnStrategy,\n      deeplink: selectedDeepLink,\n      locales: [\n        \"en_US\",\n        \"ru_RU\",\n        \"zh_CN\",\n        \"zh\",\n        \"ar_AE\",\n        \"cs_CZ\",\n        \"de_DE\",\n        \"es_ES\",\n        \"es_LAT\",\n        \"fr_FR\",\n        \"id_ID\",\n        \"it_IT\",\n        \"nl_NL\",\n        \"pl_PL\",\n        \"pt_BR\",\n        \"pt_PT\",\n        \"ro_RO\",\n        \"tr_TR\",\n        \"uk_UA\",\n        \"vi_VN\",\n        \"zh_TW\"\n      ],\n      selectedMethod: [],\n      selectedMethodData: [],\n      connectMethods: [\n        \"wallet_addEthereumChain(ETH)\",\n        \"personal_sign(ETH)\",\n        \"solana_signMessage(Sol mainnet)\",\n        \"sui_signMessage(Sui mainnet)\",\n        \"sui_signPersonalMessage(Sui mainnet)\",\n        \"btc_signMessage(BTC)\",\n        \"aptos_signMessage(aptos mainnet)\",\n        \"cosmos_signArbitrary(cosmoshub)\",\n        \"test_noSupport_eth(ETH)\",\n        \"tron_signMessage\",\n        \"tron_signMessageV2\",\n        \"starknet_signMessage\",\n        \"sync_all_addresses\"\n      ],\n\n      language: selectedLanguage,\n      theme: selectedTheme,\n      THEME: THEME,\n      redirect: selectedReturnStrategy,\n      redirectDeeplink: selectedDeepLink,\n      handleWithUI: (isChecked) => {\n        localStorage.setItem(\"autoRefresh\", `${isChecked}`);\n        location.reload();\n      },\n      handleUniversalToTG: (isChecked) => {\n        localStorage.setItem(\"universalToTG\", `${isChecked}`);\n      },\n      handleOptionChange: (chainId) => {\n        console.log(\"handleOptionChange ->chainId:\",chainId)\n        if (optionChains.has(chainId)) {\n          optionChains.delete(chainId);\n        } else {\n          optionChains.add(chainId);\n        }\n      },\n      starknetPanelTypedData: ''\n    };\n  },\n  computed: {\n    getWalletAddress: function () {\n      return this.walletAddress;\n    },\n  },\n  methods: {\n    isChecked(chainId) {\n      return this.selectedChains.has(chainId);\n    },\n\n    initChains(newChains) {\n      if (newChains.length > 0) {\n        const updatedChains = Object.assign({}, this.availableChains);\n        for (const chainId of newChains) {\n          if (updatedChains[chainId]) {\n            updatedChains[chainId].checked = !updatedChains[chainId].checked;\n          }\n        }\n        this.availableChains = updatedChains;\n      }\n\n      this.areChainsInit = true;\n    },\n\n    async clickActiveTab(tab) {\n      const tabName = tab.props ? tab.props.name : tab.name;\n      this.selectedChain = tabName;\n      console.log(`已切换到链 :`, tabName);\n\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (tabName == \"starknet:mainnet\") {\n        this.sendBtnDisabled = true\n      } else {\n        this.sendBtnDisabled = false\n      }\n\n      window.provider.setDefaultChain(this.selectedChain);\n    },\n\n    async testTonConnect(){\n      await window.testTon.openModal().catch(\n          (error) => console.error(\"发生了错误：\", error));\n    },\n\n    async initBtnClicked() {\n      console.log(\"initBtnClickedddinitBtnClickedddinitBtnClickedddinitBtnClickedddinitBtnClickeddd\")\n      window.okxLogDebug = true\n      var initCall;\n      if (!this.withUI) {\n        initCall = OKXUniversalProvider.init({\n          dappMetaData: {\n            name: \"univer test dapp\",\n            icon: \"https://avatars.githubusercontent.com/u/37784886\",\n          },\n        });\n      } else {\n\n        window.testTon = new OKXTonConnectUI({\n          dappMetaData: {\n            name: \"OKX WalletConnect UI Demo\",\n            icon: \"https://avatars.githubusercontent.com/u/37784886\",\n          },\n          actionsConfiguration: {\n            returnStrategy: 'tg://resolve',\n            tmaReturnUrl:'back',\n            modals: \"all\",\n          },\n          uiPreferences: {\n            theme: THEME.LIGHT\n          },\n          language: 'en_US',\n        });\n\n        initCall = OKXUniversalConnectUI.init({\n          dappMetaData: {\n            icon: \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\",\n            name: \"OKX WalletConnect UI Demo\",\n            manifestUrl:\"https://app.ston.fi/tonconnect-manifest.json\"\n          },\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: 'all',\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme\n          },\n        });\n\n\n      }\n\n      initCall.then((provider) => {\n        window.provider = provider;\n        window.tonProvider = new OKXTonProvider(window.provider);\n        window.tonProvider.onStatusChange((walletInfo) => {\n              console.log('TONConnection onStatusChange:', JSON.stringify(walletInfo));\n            }, (err) => {\n              console.log('TONConnection onStatusChange error:', err);\n            }\n        )\n\n        if (window.provider instanceof OKXUniversalConnectUI) {\n          window.provider.onModalStateChange((state) => {\n            console.log(`onModalStateChange   ${JSON.stringify(state)}`)\n          })\n        }\n\n        console.log(\"init finished:\", provider);\n        console.log(\"init finished session:\", JSON.stringify(provider.session));\n\n        if (provider.session?.namespaces) {\n          const newChains = [];\n          console.log(\"namespaces\", provider.session.namespaces);\n          Object.entries(provider.session.namespaces).forEach(([key, value]) => {\n            if (key === \"eip155\") {\n              value.chains.forEach((chain) => {\n                newChains.push(parseInt(chain.substring(7)));\n              });\n            } else {\n              value.chains.forEach((chain) => {\n                newChains.push(chain);\n              });\n            }\n          });\n\n          console.log(\"existing chains:\", newChains);\n          this.initChains(newChains);\n        } else {\n          this.initChains([]);\n        }\n\n        provider.on(\"display_uri\", (uri) => {\n          if (!useShortLink()) {\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>display_uri  ==> \", uri);\n        });\n\n        provider.on(\"connect_signResponse\", (items) => {\n          console.log(\"通知>>>connect_signResponse  ==> \", JSON.stringify(items));\n          this.verifyMessage(items)\n        })\n\n        provider.on(\"short_display_uri\", (uri) => {\n          if (useShortLink()) {\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>short_display_uri  ==> \", uri);\n        });\n\n\n        provider.on(\"session_connecting\", () => {\n          console.log(\"通知>>>session_connecting  ==> \");\n        });\n\n        provider.on(\"connect\", (session) => {\n          console.log(\"通知>>>get connect session\", session);\n        });\n        provider.on(\"reconnect\", (session) => {\n          console.log(\"通知>>>get reconnect session\", session);\n          this.walletAddress = \"connected\";\n        });\n        provider.on(\"disconnect\", ({topic}) => {\n          console.log(`通知>>>get disconnect  ${topic}`);\n          this.walletAddress = \"disconnecteddddd\";\n        });\n        provider.on(\"session_delete\", ({topic}) => {\n          console.log(`通知>>>get session_delete  ${topic}`);\n        });\n        provider.on(\"session_update\", (session) => {\n          console.log(`通知>>>get session_update `, JSON.stringify(session));\n        });\n\n        provider.on(\"accountChanged\", (session) => {\n          if (session){\n            this.testboc = JSON.stringify(session);\n          }\n          console.log(`通知>>>get accountChanged `, JSON.stringify(session));\n        });\n\n      });\n    },\n\n    async connectBtnClicked() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        this.testTonSdk();\n      } else {\n        console.log(`connectBtnClicked provider not finish init`);\n      }\n    },\n\n    async syncAllAddressClick() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        if (window.provider instanceof OKXUniversalProvider) {\n          if (window.provider.connected()) {\n            try {\n              let message = await window.provider.syncAllAddresses()\n              if (typeof message == \"string\") {\n                this.testboc = message\n              } else {\n                this.testboc = JSON.stringify(message)\n              }\n            } catch (e) {\n              this.testboc = JSON.stringify(e)\n            }\n          } else {\n            this.testboc = \"not connected\"\n          }\n        }\n\n      } else {\n        console.log(`syncAllAddress provider not finish init`);\n      }\n    },\n\n    async disconnectAction() {\n      try {\n        console.log(\"get disconnect wallet btn clicked\");\n        // await TON.disconnect();\n        var provider = window.provider;\n        await provider.disconnect();\n        this.walletAddress = \"disconnected\";\n      } catch (error) {\n        console.log(\"Disconnect  error ==>> \", error.message);\n        this.currentStatus = error.message;\n      }\n    },\n\n    async eth_requestAccounts() {\n      var data = {method: \"eth_requestAccounts\"};\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_chainId() {\n      var data = {method: \"eth_chainId\"};\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_switchEthereumChain() {\n      var data = {\n        method: \"wallet_switchEthereumChain\",\n        params: [\n          {\n            chainId: \"0x7a\"\n          }\n        ]\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_addEthereumChain() {\n      var data = {\n        method: \"wallet_addEthereumChain\",\n        params: {\n          blockExplorerUrls: [\"https://explorer.fuse.io\"],\n          chainId: \"0x7a\",\n          chainName: \"Fuse\",\n          nativeCurrency: {name: \"Fuse\", symbol: \"FUSE\", decimals: 18},\n          rpcUrls: [\"https://rpc.fuse.io\"],\n        },\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    fromAccountToAddress(account) {\n      if (!account) {\n        return \"\"\n      }\n      try {\n        let addressArr = account.split(\":\").slice(2);\n        let address = addressArr.length > 0 ? addressArr.join(\":\") : \"\";\n        return address;\n      } catch (e) {\n        return \"\"\n      }\n\n    },\n\n    requestEVMAccountWithSession(chainId) {\n      console.log(\"requestAccountWithSession >>>\", chainId);\n      if (window.provider && window.provider.session && chainId) {\n        let key = chainId.includes(\":\") ? chainId.split(\":\")[0] : chainId;\n        let namespace = window.provider.session.namespaces\n        if (key === \"eip155\") {\n          let evmNameSpace = namespace[key];\n          if (evmNameSpace && evmNameSpace.accounts) {\n            let accounts = evmNameSpace.accounts;\n            return [\n              ...new Set(\n                  accounts\n                      // get the accounts from the active chain\n                      .filter((account) => account.includes(chainId+\":\"))\n                      // remove namespace & chainId from the string\n                      .map((account) => {\n                        return this.fromAccountToAddress(account);\n                      })\n              ),\n            ];\n\n          }\n\n        }\n      }\n      return undefined\n    },\n\n    async personal_sign() {\n      if (this.selectedChain === \"eip155:1\") {\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0x1ca023f10e157d148deed210f8bee193657a1eaa7f187909e20a9dc3b071dbc364c41fde37960c05093359f410a061ec8a7dca8c0c39fc7c1e24de8a3329775d1b\n\n        var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n        var address = accounts[0];\n        console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n        var dataETH = {\n          method: \"personal_sign\",\n          params: [\n            \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n            address,\n          ],\n        };\n\n        this.testTransaction = JSON.stringify(dataETH);\n      } else if (\n          this.selectedChain === \"eip155:137\" ||\n          this.selectedChain === \"eip155:122\"\n      ) {\n        // method\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0xebda9cfa2af43999058dffa0107031d1ef7fc0252dca85dcbd22ea097af922ca39b64d509ef61ce42b7641c5840b8a80337ffd1411b13e87e2260a3f1b6c151c1b\n\n        var dataPolygon = {\n          method: \"personal_sign\",\n          params: {\n            message:\n                \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n        this.testTransaction = JSON.stringify(dataPolygon);\n      } else if (this.selectedChain === \"eip155:56\") {\n        var data = {\n          method: \"personal_sign\",\n          params: {\n            message:\n                \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n\n        this.testTransaction = JSON.stringify(data);\n      }\n    },\n\n    async eth_sendTransaction_swap() {\n      var data = {\n        method: \"eth_sendTransaction\",\n        chainId: \"eip155:122\",\n        params: {\n          value: \"0x38d7ea4c68000\",\n          gas: \"0x2665f\",\n          to: \"0xf2614A233c7C3e7f08b1F887Ba133a13f1eb2c55\",\n          from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n          data: \"0x2646478b000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00000000000000000000000000000000000000000000000000038d7ea4c68000000000000000000000000000620fd5fa44be6af63715ef4e65ddfa0387ad13f5000000000000000000000000000000000000000000000000000000000000001b000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000700301ffff0201602352A9Eb5234466Eac23E59e7B99bCaE79C39c0BE9e53fd7EDaC9F859882AfdDa116645287C629040BE9e53fd7EDaC9F859882AfdDa116645287C62900602352A9Eb5234466Eac23E59e7B99bCaE79C39c01f2F3e73be57031114dd1f4E75c1DD87658be7F0E000bb800000000000000000000000000000000\",\n        },\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async oversized_personal_sign() {\n      const payload = ``\n      if (this.selectedChain === \"eip155:1\") {\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0x1ca023f10e157d148deed210f8bee193657a1eaa7f187909e20a9dc3b071dbc364c41fde37960c05093359f410a061ec8a7dca8c0c39fc7c1e24de8a3329775d1b\n\n        var accounts = await window.provider.request(\n          { method: \"eth_requestAccounts\" },\n          \"eip155:1\"\n        );\n        var address = accounts[0];\n        console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n        var dataETH = {\n          method: \"personal_sign\",\n          params: [\n            payload,\n            address,\n          ],\n        };\n\n        this.testTransaction = JSON.stringify(dataETH);\n      } else if (\n        this.selectedChain === \"eip155:137\" ||\n        this.selectedChain === \"eip155:122\"\n      ) {\n        // method\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0xebda9cfa2af43999058dffa0107031d1ef7fc0252dca85dcbd22ea097af922ca39b64d509ef61ce42b7641c5840b8a80337ffd1411b13e87e2260a3f1b6c151c1b\n\n        var dataPolygon = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              payload,\n          },\n        };\n        this.testTransaction = JSON.stringify(dataPolygon);\n      } else if (this.selectedChain === \"eip155:56\") {\n        var data = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              payload,\n          },\n        };\n\n        this.testTransaction = JSON.stringify(data);\n      }\n    },\n\n    async eth_signTypedData_v4() {\n      // method\n      // eth_signTypedData\n      // address\n      // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n      // valid\n      // true\n      // result\n      // 0xa8bb3c6b33a119d2d567c7632195c21988df778006082742125a591f5c633f716107883a37f7de6531a6312a5f69022135bf46fe5ab77905b62c82b3395f985e1b\n      //\n\n      // var data = {\n      //   \"method\": \"eth_signTypedData_v4\",\n      //   \"params\": {\n      //     \"typedDataJson\":\"{\\\"types\\\":{\\\"EIP712Domain\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"version\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"chainId\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"name\\\":\\\"verifyingContract\\\",\\\"type\\\":\\\"address\\\"}],\\\"Person\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"wallet\\\",\\\"type\\\":\\\"address\\\"}],\\\"Mail\\\":[{\\\"name\\\":\\\"from\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"to\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"contents\\\",\\\"type\\\":\\\"string\\\"}]},\\\"primaryType\\\":\\\"Mail\\\",\\\"domain\\\":{\\\"name\\\":\\\"Ether Mail\\\",\\\"version\\\":\\\"1\\\",\\\"chainId\\\":1,\\\"verifyingContract\\\":\\\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\\\"},\\\"message\\\":{\\\"from\\\":{\\\"name\\\":\\\"Cow\\\",\\\"wallet\\\":\\\"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\\\"},\\\"to\\\":{\\\"name\\\":\\\"Bob\\\",\\\"wallet\\\":\\\"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\\\"},\\\"contents\\\":\\\"Hello, Bob!\\\"}}\"\n      // }}\n\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n      var data = {\n        method: \"eth_signTypedData_v4\",\n        params: [\n          address,\n          {\n            types: {\n              EIP712Domain: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"version\",\n                  type: \"string\",\n                },\n                {\n                  name: \"chainId\",\n                  type: \"uint256\",\n                },\n                {\n                  name: \"verifyingContract\",\n                  type: \"address\",\n                },\n              ],\n              Person: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"wallet\",\n                  type: \"address\",\n                },\n              ],\n              Mail: [\n                {\n                  name: \"from\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"to\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"contents\",\n                  type: \"string\",\n                },\n              ],\n            },\n            primaryType: \"Mail\",\n            domain: {\n              name: \"Ether Mail\",\n              version: \"1\",\n              chainId: 1,\n              verifyingContract: \"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\",\n            },\n            message: {\n              from: {\n                name: \"Cow\",\n                wallet: \"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\",\n              },\n              to: {\n                name: \"Bob\",\n                wallet: \"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\",\n              },\n              contents: \"Hello, Bob!\",\n            },\n          },\n        ],\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_sendTransaction_transfer() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            chainId: \"0x1\",\n            to: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            value: \"0x5af3107a4000\",\n            maxPriorityFeePerGas: \"0x3b9aca00\",\n            gas: \"0x5e56\",\n            maxFeePerGas: \"0x2643b9db8\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gasPrice: \"0x17003f6530\",\n            nonce: \"0x0d30\",\n            data: \"0x\",\n            value: \"0x00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasLimit: \"0x5208\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x5e56\",\n            value: \"0x5af3107a4000\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasPrice: \"0x3b9aca00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            chainId: \"0x38\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:122\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            value: \"0x0\",\n            chainId: \"0x7a\",\n          }\n        }\n      }\n\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"to\"] = address;\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_approve() {\n      var data = {};\n\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000000000000022d473030f116ddee9f6b43ac78ba3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x582d872a1b094fc48f5de31d3b73f2d9be47def1\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000f6f8096ac575b0\",\n            to: \"0x0b3F868E0BE5597D5DB7fEB59E1CADBb0fdDa50a\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            value: \"0x0\",\n            gas: \"0xe117\",\n            gasPrice: \"0xb2d05e00\",\n            data: \"0x095ea7b300000000000000000000000031c2f6fcff4f8759b3bd5bf0e1084a055615c768ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x5CA42204cDaa70d5c773946e69dE942b85CA6706\",\n          },\n        };\n      } else if (this.selectedChain === 'eip155:122') {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000000000000013b3\",\n            to: \"0x620fd5fa44BE6af63715Ef4E65DDFA0387aD13F5\",\n          },\n        };\n      }\n\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_mint() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x4cacb\",\n            data: \"0xa64dfa75000000000000000000000000ed688002f3797599db8b4feacfe8b1dda0df1c8d000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cecb15396825a895ff8da8fc2d2c77a234dccee00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f6261667962656968643737366b6177706e71336f6f6a6635693274787a76617737737164656b34616a776472637472703261366f626b70723773792f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x30795\",\n            data: \"0xa64dfa75000000000000000000000000341b3687f0309778f08f29336b2c4b9c38b9f110000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f62616679626569686a6279676b68747a71376b68377434336266686e676e793236337668766f6578716a6d6e377161716166366e717a64743777712f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      }\n\n      let str = JSON.stringify(data);\n      console.log(\"-----长度--->\", str.length);\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async Polygon_RPCRequest() {\n      try {\n        var data = {\n          method: \"eth_getTransactionByHash\",\n          params: [\"0xd62fa4ea3cf7ee3bf6f5302b764490730186ed6a567c283517e8cb3c36142e1a\"],\n        };\n        this.testTransaction = JSON.stringify(data);\n\n        var result = await window.provider.request(data, this.selectedChain)\n        console.log(`请求数据回调 Polygon_RPCRequest ----->> ${JSON.stringify(result)}`)\n\n        if (typeof result == \"string\") {\n          this.testboc = result;\n        } else {\n          this.testboc = JSON.stringify(result);\n        }\n      }catch (e) {\n        this.testboc = JSON.stringify(e);\n      }\n\n    },\n    async wallet_watchAsset() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xe0f63a424a4439cbe457d80e4f4b51ad25b2c56c\",\n              symbol: \"SPX6900\",\n              image:\n                  \"https://assets.coingecko.com/coins/images/31401/standard/sticker_%281%29.jpg?1702371083\",\n              decimals: 8,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xeB51D9A39AD5EEF215dC0Bf39a8821ff804A0F01\",\n              symbol: \"LGNS\",\n              image: \"https://polygonscan.com/token/images/originlgns_32.png\",\n              decimals: 9,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0x031b41e504677879370e9dbcf937283a8691fa7f\",\n              symbol: \"FET\",\n              image: \"https://bscscan.com/token/images/fetch_32.png\",\n              decimals: 18,\n            },\n          },\n        };\n      }\n\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async ton_sendTransaction() {\n      var data = {\n        \"messages\": [{\n          \"address\": \"EQARULUYsmJq1RiZ-YiH-IJLcAZUVkVff-KBPwEmmaQGH6aC\",\n          \"amount\": \"186000000\",\n          \"payload\": \"te6cckEBAgEAhgABaw+KfqUAAACKXw/PUzD0JAgA7zuZAqJxsqAciTilI8/iTnGEeq62piAAHtRKd6wOcJwQLBuBAwEAlSWThWGAEPckSDVNSvvmJOKMGCE4qb+zE0NdQGXsIPpYy63RDznGJO33ACoTmz7CXpV552d6ANFof7NJCUxG8kSbhHYZT5CrVcQGUCH+joo=\"\n        }],\n        \"validUntil\": 1736161561913,\n        \"network\": '-239'\n      }\n      this.testTransaction = JSON.stringify(data)\n    },\n    ton_getAccount() {\n      this.testTransaction = \"这里是同步获取 不再需要点击 <<发送交易>>\"\n      let result = window.tonProvider.account()\n      if (result) {\n        this.testboc = JSON.stringify(result);\n      } else {\n        this.testboc = 'null'\n      }\n    },\n\n    async tonUniversalLog() {\n      console.log(\"ton 信息: tonProvider  connected:\", window.tonProvider.connected())\n      console.log(\"ton 信息: tonProvider  account:\", JSON.stringify(window.tonProvider.account()))\n      console.log(\"ton 信息: tonProvider  wallet:\", JSON.stringify(window.tonProvider.wallet()))\n    },\n\n    async sendTransactionAlert() {\n      //\n      const response = await fetch(`https://apitest.fireverse.ai/oauth/okx/getNonce?publicAddress=0x0cecb15396825a895ff8da8fc2d2c77a234dccee`);\n      const data = await response.json();\n      console.log(\"请求数据----\", JSON.stringify(data))\n      await this.personal_sign()\n      if (confirm(\"Are you want to sign message?\")) {\n        this.sendTransaction();\n      }\n\n      // window.open(\"https://www.okx.com/download?deeplink=okx%3A%2F%2Fweb3%2Fwallet%2Fconnect\",'_self')\n    },\n\n    async sendTransaction() {\n      if (this.selectedChain.startsWith(\"aptos\")\n          || this.selectedChain.startsWith(\"movement\")\n          || this.selectedChain.startsWith(\"solana\")\n          || this.selectedChain.startsWith(\"sonic\")\n          || this.selectedChain.startsWith(\"cosmos\")) {\n        return\n      }\n      console.log(\"sendTransaction\", window.provider);\n      console.log(\"sendTransaction内容11------\", this.testTransaction);\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (this.testTransaction && window.provider) {\n        // eslint-disable-next-line no-undef\n        const sendData = JSON.parse(this.testTransaction);\n        try {\n          console.log(\"sendTransaction-----22method>>\", sendData.method);\n\n          let chainId = \"eip155:1\";\n          if (this.selectedChain) {\n            chainId = this.selectedChain;\n            console.log(\n                \"sendTransaction-----this.selectedChain>>\",\n                this.selectedChain\n            );\n          }\n          console.log(\"windowOpen[click_1]: \", Date.now());\n          console.log(\"交易的ChainId: \",chainId);\n\n          if (chainId == \"sui:mainnet\") {\n            const adapter = new SuiAdapter(window.provider);\n            var suiResult = \"invalid result\";\n            if (this.currentSuiMethod == 'sui_getAccount') {\n              let result = adapter.getAccount()\n              if (typeof result == \"string\") {\n                this.testboc = result\n              } else {\n                this.testboc = JSON.stringify(result)\n              }\n            }\n            if (this.currentSuiMethod == \"sui_signTransaction\") {\n              suiResult = await adapter.signTransaction(\n                  this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signAndExecuteTransaction\") {\n              suiResult = await adapter.signAndExecuteTransaction(\n                  this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signMessage\") {\n              console.log(\"signMessage----\", this.currentSuiTransaction);\n              suiResult = await adapter.signMessage(this.currentSuiTransaction);\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_signPersonalMessage\") {\n              console.log(\n                  \"signPersonalMessage----\",\n                  this.currentSuiTransaction\n              );\n              suiResult = await adapter.signPersonalMessage(\n                  this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_testRpc\") {\n              console.log(\"test rpc----\", this.currentSuiTransaction);\n              console.log(\n                  `请求数据发送 rpc ----->> ${JSON.stringify(sendData)}`\n              );\n              const res = await window.provider.request(sendData, chainId);\n              console.log(`请求数据回调 rpc ----->> ${JSON.stringify(result)}`);\n              if (typeof res == \"string\") {\n                this.testboc = res;\n              } else {\n                this.testboc = JSON.stringify(res);\n              }\n            }\n            console.log(\"windowOpen[click_2]: \", Date.now());\n            return;\n          } else if (chainId === \"ton:-239\") {\n            console.log(\n                `请求数据发送 sendTransaction ---ton-->> ${JSON.stringify(sendData)}`\n            );\n            let result = await window.tonProvider.sendTransaction(sendData)\n            console.log(\n                `请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`\n            );\n            if (typeof result == \"string\") {\n              this.testboc = result;\n            } else {\n              this.testboc = JSON.stringify(result);\n            }\n            return\n          }\n\n          if (chainId == 'btc:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var btcResult = 'invalid result'\n\n            if (this.currentBtcMethod == 'btc_signMessage') {\n              btcResult = await btcAdapter.signMessage(chainId, this.currentBtcTransaction[\"signStr\"])\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_send') {\n              btcResult = await btcAdapter.send(chainId, this.currentBtcTransaction)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signPsbt') {\n              btcResult = await btcAdapter.signPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n\n              this.hexToBase64(btcResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentBtcMethod == 'btc_signPsbts') {\n              btcResult = await btcAdapter.signPsbts(chainId, this.currentBtcTransaction.psbtHexs, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_sendInscription') {\n              btcResult = await btcAdapter.sendInscription(chainId, this.currentBtcTransaction.address, this.currentBtcTransaction.inscriptionId, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signAndPushPsbt') {\n              btcResult = await btcAdapter.signAndPushPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_sendBitcoin') {\n              btcResult = await btcAdapter.sendBitcoin(chainId, this.currentBtcTransaction.toAddress, this.currentBtcTransaction.satoshis, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_getAccount') {\n              btcResult = btcAdapter.getAccount(chainId)\n              this.testboc = JSON.stringify(btcResult)\n            }else if(this.currentBtcMethod === \"btc_sendRunes\"){\n              console.log(\"BTC参数--->\",JSON.stringify(this.currentBtcTransaction))\n              btcResult = await btcAdapter.sendRunes(chainId,this.currentBtcTransaction.address,this.currentBtcTransaction.runeid,this.currentBtcTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }else if(this.currentBtcMethod === \"btc_inscribeTransfer\"){\n              console.log(\"BTC参数--->\",JSON.stringify(this.currentBtcTransaction))\n              btcResult = await btcAdapter.inscribeTransfer(chainId,this.currentBtcTransaction.ticker,this.currentBtcTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }\n\n            return\n          }\n\n          if (chainId == 'fractal:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var fractalResult = 'invalid result'\n\n            if (this.currentFractalMethod == 'fractal_signMessage') {\n              fractalResult = await btcAdapter.signMessage(chainId, this.currentFractalTransaction['signStr'])\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_send') {\n              fractalResult = await btcAdapter.send(chainId, this.currentFractalTransaction)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signPsbt') {\n              fractalResult = await btcAdapter.signPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.hexToBase64(fractalResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentFractalMethod == 'fractal_signPsbts') {\n              fractalResult = await btcAdapter.signPsbts(chainId, this.currentFractalTransaction.psbtHexs, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_sendInscription') {\n              fractalResult = await btcAdapter.sendInscription(chainId, this.currentFractalTransaction.address, this.currentFractalTransaction.inscriptionId, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signAndPushPsbt') {\n              fractalResult = await btcAdapter.signAndPushPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_sendBitcoin') {\n              fractalResult = await btcAdapter.sendBitcoin(chainId, this.currentFractalTransaction.toAddress, this.currentFractalTransaction.satoshis, this.currentFractalTransaction.options)\n\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_getAccount') {\n              fractalResult = btcAdapter.getAccount(chainId)\n              this.testboc = JSON.stringify(fractalResult)\n            }else if(this.currentFractalMethod === \"fractal_sendRunes\"){\n              console.log(\"fractal参数--->\",JSON.stringify(this.currentFractalTransaction))\n              btcResult = await btcAdapter.sendRunes(chainId,this.currentFractalTransaction.address,this.currentFractalTransaction.runeid,this.currentFractalTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }else if(this.currentFractalMethod === \"fractal_inscribeTransfer\"){\n              console.log(\"fractal参数--->\",JSON.stringify(this.currentFractalTransaction))\n              btcResult = await btcAdapter.inscribeTransfer(chainId,this.currentFractalTransaction.ticker,this.currentFractalTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }\n\n            return\n          }\n\n          console.log(`请求数据发送 sendTransaction ----->> ${JSON.stringify(sendData)}`)\n          var result = await window.provider.request(sendData, chainId)\n          console.log(`请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`)\n\n          console.log(\"windowOpen[click_3]: \", Date.now());\n          if (typeof result == \"string\") {\n            this.testboc = result;\n          } else {\n            this.testboc = JSON.stringify(result);\n          }\n          console.log(\"方法数据回调 --this.testboc--\", this.testboc);\n        } catch (error) {\n          console.error(\"方法数据回调失败 --Error--\", error.message);\n\n          if (error.code === OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n            this.testboc = error.message;\n          } else {\n            this.testboc = \"wrong signature！\" + error.message;\n          }\n        }\n      } else {\n        alert(\"Please input transaction data\");\n      }\n    },\n\n    hexToBase64(hexStr) {\n      var bytes = [];\n      for (var i = 0; i < hexStr.length; i += 2) {\n        bytes.push(parseInt(hexStr.substr(i, 2), 16));\n      }\n      const buffer = new Uint8Array(bytes)\n      const blob = new Blob([buffer]);\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = function (e) {\n          var base64Data = e.target.result.split(\",\")[1]\n          resolve(base64Data);\n        };\n        reader.onerror = function (e) {\n          reject(e);\n        };\n        reader.readAsDataURL(blob);\n      });\n    },\n    testBase64UrlSafe() {\n      let datatest = {\n        \"protocolVer\": 1,\n        \"topic\": \"8a7a4c3be73802d0ae2587123ade7bb79f27433b9aa3ca589a2208a2089eecfd\",\n        \"clientId\": \"5f1bbf9eac92160affa7ef04d0a710817ddb6d8c22ebbd6263e86f059930b404\",\n        \"requestId\": \"1731383250054\",\n        \"dAppInfo\": {\n          \"url\": \"connect.oker.vip\",\n          \"origin\": \"https://connect.oker.vip\",\n          \"name\": \"univer test dapp\",\n          \"icon\": \"https://avatars.githubusercontent.com/u/37784886\"\n        },\n        \"requests\": [{\n          \"name\": \"requestAccounts\",\n          \"requiredNamespaces\": [{\"namespace\": \"aptos\", \"chains\": [\"aptos:637\"]}],\n          \"optionalNamespaces\": [],\n          \"connectRequestMethods\": [{\n            \"chainId\": \"aptos:637\",\n            \"method\": \"aptos_signMessage\",\n            \"params\": {\n              \"data\": {\n                \"address\": true,\n                \"application\": true,\n                \"chainId\": true,\n                \"message\": \"123 中文测试!\",\n                \"nonce\": \"1234\"\n              }, \"applicationUrl\": \"https://connect.oker.vip\", \"prefix\": \"APTOS\", \"aptosChainId\": \"1\"\n            }\n          }]\n        }],\n        \"redirect\": \"none\"\n      }\n      let json = JSON.stringify(datatest)\n      const utf8Array = new TextEncoder().encode(json);\n      let binary = '';\n      utf8Array.forEach(byte => {\n        binary += String.fromCharCode(byte);\n      });\n\n      let firstStr = btoa(binary)\n      console.log(\"字符串编码1>>>>\", firstStr)\n      firstStr = firstStr.replace(/\\+/g, '-')  // 替换 '+'\n      console.log(\"字符串编码2>>>>\", firstStr)\n      firstStr = firstStr.replace(/\\//g, '_')  // 替换 '/'\n      console.log(\"字符串编码3>>>>\", firstStr)\n      firstStr = firstStr.replace(/=+$/, '');  // 移除 '=';\n      console.log(\"字符串编码4>>>>\", firstStr)\n\n      let showUrl = getUniversalLink(getAppWalletDeepLink(firstStr))\n      console.log(\"字符串编码5>>>>\", showUrl)\n      this.qrValue = showUrl;\n      this.showModal = true;\n    },\n\n\n    async testTonSdk() {\n      // 1. connect\n      //  create sub providers for each namespace/chain\n      let nameSpacesChains = [];\n      let optSpaceChains = [];\n\n      let solanaChains = [\n        \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n        \"svm:70000062\",\n        \"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n        \"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\"\n      ];\n      let hasEip155, hasSolana, hasSui, hasBtc, hasAptos, hasTon, hasCosmos, hasTron, hasStarknet,hasPolygon = false\n\n      let suiChains = [\n        \"sui:mainnet\",\n      ];\n\n      let btcChains = [\n        \"btc:mainnet\",\n        \"fractal:mainnet\"\n      ];\n\n      const chains = Object.entries(this.availableChains)\n          .filter((chain) => chain[1].checked)\n          .map((chain) => chain[0]);\n      console.log(`chains  ===> ${chains.values()}`)\n      chains.forEach(function (chainId) {\n        console.log(`chains.forEach chainId  ===> ${chainId}`)\n\n        if (solanaChains.includes(chainId)) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"ton\")) {\n          nameSpacesChains.push(chainId)\n          hasTon = true\n          return\n        }\n        if (typeof chainId == 'string' && (chainId.startsWith(\"aptos\") || chainId.startsWith(\"movement\"))) {\n          nameSpacesChains.push(chainId)\n          hasAptos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId)\n          hasSolana = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"cosmos\")) {\n          nameSpacesChains.push(chainId)\n          hasCosmos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"tron\")) {\n          nameSpacesChains.push(chainId)\n          hasTron = true\n          return\n        }\n\n        if (typeof chainId == 'string' && chainId.startsWith(\"starknet\")) {\n          nameSpacesChains.push(chainId)\n          hasStarknet = true\n          return\n        }\n\n        if (suiChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`);\n          nameSpacesChains.push(chainId);\n          hasSui = true;\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`)\n          nameSpacesChains.push(chainId)\n          hasBtc = true\n          return\n        }\n        if (chainId === \"137\"){\n          hasPolygon = true\n        }\n        hasEip155 = true\n        nameSpacesChains.push(`eip155:${chainId}`)\n      })\n\n\n      optionChains.forEach(function (chainId) {\n        console.log(\"optionChains.forEach 。chainId：》》\",chainId)\n        if (solanaChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n        if (typeof chainId == \"string\" && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (suiChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          optSpaceChains.push(chainId)\n          return\n        }\n        if (chainId.startsWith('ton')) {\n          optSpaceChains.push(chainId)\n          return\n        }\n\n        optSpaceChains.push(`eip155:${chainId}`)\n      })\n\n      console.log(`namespaceChains  ===> ${JSON.stringify(nameSpacesChains)}`);\n      var connectData = {};\n      if (nameSpacesChains && nameSpacesChains.length > 0) {\n        var requireData = {};\n\n        if (hasEip155) {\n\n          if (hasPolygon){\n            requireData.eip155 = {\n              chains: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              ),\n              defaultChain: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              )[0],\n              rpcMap: {\n                \"137\":\"https://polygon.drpc.org\"\n              }\n            };\n          }else {\n            requireData.eip155 = {\n              chains: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              ),\n              defaultChain: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              )[0],\n            };\n          }\n\n        }\n        if (hasSolana) {\n          requireData.solana = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"solana\") ||\n                    item.startsWith(\"sonic\") ||\n                    item.startsWith(\"svm\") ||\n                    item.startsWith(\"soon\") ||\n                    item.startsWith(\"eclipse\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"solana\") ||\n                    item.startsWith(\"sonic\") ||\n                    item.startsWith(\"svm\")||\n                    item.startsWith(\"soon\")||\n                    item.startsWith(\"eclipse\")\n\n            )[0],\n          };\n        }\n\n        if (hasCosmos) {\n          requireData.cosmos = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            )[0],\n          }\n        }\n        if (hasTron) {\n          requireData.tron = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            )[0],\n          }\n        }\n        if (hasStarknet) {\n          requireData.starknet = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"starknet\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"starknet\")\n            )[0],\n          }\n        }\n        if (hasTon) {\n\n          //\n          let tonParams = {\n            ton_addr: {\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue) {\n            tonParams = {\n              ton_addr: {\n                name: 'ton_addr',\n              },\n              ton_proof: {\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          requireData.ton = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"ton\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"ton\"))[0],\n            params: tonParams,\n          };\n        }\n\n        if (hasSui) {\n          requireData.sui = {\n            chains: nameSpacesChains.filter((item) => item.startsWith(\"sui\")),\n            defaultChain: nameSpacesChains.filter((item) =>\n                item.startsWith(\"sui\")\n            )[0],\n            rpcMap: {\n              \"sui:mainnet\": \"https://www.okx.com/fullnode/sui/discover/rpc\"\n            }\n          };\n        }\n        if (hasAptos) {\n          requireData.aptos = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\"))[0]\n          }\n        }\n\n        if (hasBtc) {\n          let btcChains = nameSpacesChains.filter(item => item.startsWith(\"btc\") || item.startsWith(\"fractal\"))\n          requireData.btc = {\n            chains: btcChains,\n            defaultChain: btcChains[0]\n          }\n        }\n        console.log(`requireData  ===> ${JSON.stringify(requireData)}`)\n        connectData['namespaces'] = requireData;\n        console.log(JSON.stringify(connectData))\n      }\n\n      if (optSpaceChains && optSpaceChains.length > 0) {\n        const optData = {};\n\n        const eip155Chains = optSpaceChains.filter((item) => item.startsWith(\"eip155\"));\n        if (eip155Chains.length > 0) {\n          optData[\"eip155\"] = {\n            chains: eip155Chains,\n            defaultChain: eip155Chains[0],\n          };\n        }\n\n        const solanaChains = optSpaceChains.filter((item) => item.startsWith(\"solana\"));\n        if (solanaChains.length > 0) {\n          optData[\"solana\"] = {\n            chains: solanaChains,\n            defaultChain: solanaChains[0],\n          };\n        }\n\n        const tonChains = optSpaceChains.filter((item) => item.startsWith(\"ton\"));\n        if (tonChains.length > 0) {\n\n          let tonParams = {\n            ton_addr: {\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue) {\n            tonParams = {\n              ton_addr: {\n                name: 'ton_addr',\n              },\n              ton_proof: {\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          optData[\"ton\"] = {\n            chains: tonChains,\n            defaultChain: tonChains[0],\n            params: tonParams,\n          };\n        }\n\n        const btcChains = optSpaceChains.filter((item) => item.startsWith(\"btc\"));\n        if (btcChains.length > 0) {\n          optData[\"btc\"] = {\n            chains: btcChains,\n            defaultChain: btcChains[0],\n          };\n        }\n\n        connectData[\"optionalNamespaces\"] = optData;\n      }\n\n      if (nameSpacesChains.length === 0 && optSpaceChains.length === 0) {\n        //未选择链\n        alert(\"Please select a chain from above to continue\");\n        return;\n      }\n      console.log(\"=====>connectData \");\n      console.log(connectData);\n\n      var connectMethod;\n      let signMethods = this.getCurrentSelectedMethodData();\n      if (window.provider instanceof OKXUniversalConnectUI) {\n\n        if (signMethods && signMethods.length > 0) {\n          connectMethod = window.provider.openModalAndSign(connectData, JSON.parse(JSON.stringify(signMethods)));\n        } else {\n          connectMethod = window.provider.openModal(connectData);\n        }\n      } else {\n        if (this.universalToTG) {\n          connectData.sessionConfig = {\n            useMini: true,\n            openUniversalUrl: true,\n            tmaReturnUrl: 'back'\n          }\n        } else {\n          connectData.sessionConfig = {\n            redirect: selectedReturnStrategy\n          }\n        }\n        if (signMethods && signMethods.length > 0) {\n          connectMethod = window.provider.connectAndSign(connectData, JSON.parse(JSON.stringify(signMethods)));\n        } else {\n          connectMethod = window.provider.connect(connectData);\n        }\n      }\n\n      await connectMethod\n          .then((result) => {\n            // 2. set defaul chain\n            this.walletAddress = \"connected\";\n            if (this.isPC()) {\n              this.showModal = false;\n            }\n            if (result) {\n              this.testboc = JSON.stringify(result)\n            }\n\n            if (window.provider.session && window.provider.session.namespaces) {\n              let ton = window.provider.session.namespaces[\"ton\"];\n              console.log(\"是否包含ton\", ton)\n              if (ton) {\n                this.tonUniversalLog()\n              }\n            }\n          })\n          .catch((error) => {\n            if (error.code == 301) {\n              setTimeout(() => {\n                alert(error.message)\n              }, 0.5);\n            } else if (error.message) {\n              alert(error.message)\n            }\n            console.error(\"发生了错误：\", error);\n          });\n    },\n\n    getCurrentSelectedMethodData() {// 连接签名\n      var methodList = [];\n      this.selectedMethod.forEach(method => {\n        switch (method) {\n          case \"wallet_addEthereumChain(ETH)\":\n            methodList.push({\n              method: \"wallet_addEthereumChain\",\n              chainId: \"eip155:1\",\n              params: {\n                blockExplorerUrls: [\"https://explorer.fuse.io\"],\n                chainId: \"0x7a\",\n                chainName: \"Fuse\",\n                nativeCurrency: {name: \"Fuse\", symbol: \"FUSE\", decimals: 18},\n                rpcUrls: [\"https://rpc.fuse.io\"],\n              },\n            })\n            break;\n          case \"personal_sign(ETH)\":\n            methodList.push(\n                {\n                  method: \"personal_sign\",\n                  chainId: \"eip155:1\",\n                  params: [\n                    \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n                  ],\n                });\n            break;\n          case \"solana_signMessage(Sol mainnet)\":\n            methodList.push(\n                {\n                  \"chainId\": \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n                  \"method\": \"solana_signMessage\",\n                  \"params\": {\n                    \"message\": \"Hello Solana\",\n                  }\n                }\n            );\n            break;\n          case \"sui_signMessage(Sui mainnet)\":\n          case \"sui_signPersonalMessage(Sui mainnet)\": {\n            let suiData = [\n              76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n              109, 111, 118, 101,\n            ];\n            let uint8Array = new Uint8Array(suiData);\n            let currentMethod = \"sui_signMessage\";\n            this.currentSuiTransaction = {\n              message: uint8Array\n            }\n\n            if (method.startsWith(\"sui_signPersonalMessage\")) {\n              currentMethod = \"sui_signPersonalMessage\";\n            }\n            methodList.push(\n                {\n                  method: currentMethod,\n                  chainId: \"sui:mainnet\",\n                  params: {\n                    message: uint8Array,\n                  }\n                }\n            );\n            break;\n          }\n          case \"btc_signMessage(BTC)\":\n            methodList.push(\n                {\n                  method: \"btc_signMessage\",\n                  chainId: \"btc:mainnet\",\n                  params: {\n                    message: \"Welcome to BTC\"\n                  }\n                }\n            )\n            break;\n          case \"aptos_signMessage(aptos mainnet)\":\n            methodList.push(\n                {\n                  \"chainId\": \"aptos:mainnet\",\n                  \"method\": \"aptos_signMessage\",\n                  \"params\": {\n                    address: true,\n                    application: true,\n                    chainId: true,\n                    message: \"Hello Aptos\",\n                    nonce: \"1234\"\n                  }\n                }\n            )\n            break;\n          case \"cosmos_signArbitrary(cosmoshub)\":\n            methodList.push(\n                {\n                  \"chainId\": \"cosmos:cosmoshub-4\",\n                  \"method\": \"cosmos_signArbitrary\",\n                  \"params\": {\n                    message: \"test cosmos\"\n                  }\n                }\n            )\n\n            break;\n          case \"test_noSupport_eth(ETH)\":\n            methodList.push(\n                {\n                  chainId: \"eip155:1\",\n                  method: \"test_noSupport_eth\",\n                  params: {\n                    message: \"test hello\",\n                  }\n                }\n            )\n            break;\n          case \"sync_all_addresses\":\n            methodList.push(\n                {\n                  method: \"sync_all_addresses\",\n                });\n            break;\n          case \"tron_signMessage\":\n            methodList.push(\n                {\n                  chainId: \"tron:mainnet\",\n                  method: \"tron_signMessage\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n          case \"tron_signMessageV2\":\n            methodList.push(\n                {\n                  chainId: \"tron:mainnet\",\n                  method: \"tron_signMessageV2\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n\n            //\n          case \"starknet_signMessage\": {\n            const signData = {\n              \"domain\": {\n                \"chainId\": \"0x534e5f4d41494e\",\n                \"name\": \"STRKFarm\",\n                \"version\": \"1\"\n              },\n              \"message\": {\n                \"document\": \"app.strkfarm.xyz/tnc/v1\",\n                \"message\": \"Read and Agree T&C\"\n              },\n              \"primaryType\": \"Tnc\",\n              \"types\": {\n                \"StarkNetDomain\": [\n                  {\n                    \"name\": \"name\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"version\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"chainId\",\n                    \"type\": \"felt\"\n                  }\n                ],\n                \"Tnc\": [\n                  {\n                    \"name\": \"message\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"document\",\n                    \"type\": \"felt\"\n                  }\n                ]\n              }\n            }\n            methodList.push({\n              chainId: \"starknet:mainnet\",\n              method: \"starknet_signMessage\",\n              params: {\n                accountAddress: \"\",\n                typedData: signData\n              }\n            })\n          }\n            break\n          default:\n\n            break;\n        }\n      })\n      this.selectedMethodData = methodList\n      return methodList\n\n    },\n\n    closeModal() {\n      this.showModal = false;\n    },\n\n    isPC() {\n      const userAgentInfo = navigator.userAgent;\n      console.log(\"current device ua is ===>\", userAgentInfo);\n\n      const Agents = [\n        \"Android\",\n        \"iPhone\",\n        \"SymbianOS\",\n        \"Windows Phone\",\n        \"iPad\",\n        \"iPod\",\n      ];\n      let flag = true;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = false;\n          break;\n        }\n      }\n      return flag;\n    },\n    isSafariOrChrome() {\n      const userAgentInfo = navigator.userAgent;\n      const Agents = [\"Safari\", \"Chrome\"];\n      let flag = false;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = true;\n          break;\n        }\n      }\n      return flag;\n    },\n\n    /// solana\n    async sol_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      try {\n        let data = {\n          method: \"solana_signMessage\",\n          params: {\n            message: \"Hello Solana\",\n            pubkey: \"\",\n          },\n        };\n        this.testTransaction = JSON.stringify(data);\n        let provider = new OKXSolanaProvider(window.provider);\n\n        const encoder = new TextEncoder();\n        const uint8Array1 = encoder.encode(\"Hello Solana\");\n\n        let message = await provider.signMessage(\n            uint8Array1,\n            this.selectedChain\n        );\n        console.log(\"solana_signMessage Result:\", JSON.stringify(message), typeof(uint8Array1))\n        const result1 = nacl.sign.detached.verify(\n            new TextEncoder().encode(\"Hello Solana\"),\n            message.signature,\n            new PublicKey(message.publicKey).toBytes()\n        );\n        console.log(result1)\n\n        if (typeof message == \"string\") {\n          this.testboc = result1;\n        } else {\n          this.testboc = result1;\n        }\n      } catch (e) {\n        console.log(\"solana_signMessage error:\", JSON.stringify(e))\n        this.testboc = e.message\n      }\n\n    },\n\n    async aptos_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      let data = {\n        address: true,\n        application: true,\n        chainId: true,\n        message: \"Hello Aptos\",\n        nonce: \"1234\"\n      }\n\n      let provider = new OKXAptosProvider(window.provider)\n      let message = await provider.signMessage(data, this.selectedChain)\n      this.testTransaction = JSON.stringify(data)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n      try {\n        const transaction = await aptos.transaction.build.simple({\n          sender: provider.getAccount(this.selectedChain).address,\n          data: {\n            // The Move entry-function\n            function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n            // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n            typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n            functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n          },\n        });\n        console.log(\"获取地址aptos 222222：\");\n\n        this.testTransaction = safeJsonStringify(transaction)\n\n        let message = await provider.signTransaction(transaction, this.selectedChain)\n        if (typeof message == \"string\") {\n          this.testboc = message\n        } else {\n          this.testboc = JSON.stringify(message)\n        }\n      }catch (e) {\n\n        this.testboc = JSON.stringify(e)\n      }\n\n    },\n\n    async move_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n          functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        },\n      });\n\n      // let data = {\n      //   \"arguments\": [\"100000\",[\"0\",\"0\",\"10533\"],[\"10\",\"5\",\"5\"],[\"false\",\"false\",\"true\"]],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x3\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\",\"0x73eb84966be67e4697fc5ae75173ca6c35089e802650f75422ab49a8729704ec::coin::DooDoo\",\"0x53a30a6e5936c0a4c5140daed34de39d17ca7fcae08f947c02e979cef98a3719::coin::LSD\",\"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::CurveV1\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x54cb0bb2c18564b86e34539b9f89cfe1186e39d89fce54e1cd007b8e61673a85::bin_steps::X80\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async sol_signVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(\n          provider.getAccount(\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\").address\n      );\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signTransaction(\n          transaction,\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAndSendVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n          transaction,\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllVersionedTransactions() {\n      let provider = new OKXSolanaProvider(window.provider);\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n          [transaction],\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signTransaction() {\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: 1000,\n          })\n      );\n\n      this.testTransaction = safeJsonStringify(transaction)\n      let result = await provider.signTransaction(\n          transaction,\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllTransactions() {\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n          [transaction],\n          this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    getSolConnect() {\n      let rpc = \"https://www.okx.com/fullnode/sol/discover/rpc\"\n      if (this.selectedChain === \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\") {\n        rpc = \"https://www.okx.com//fullnode/sol/discover/rpc\"\n      } else if (this.selectedChain === \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\") {\n        rpc = \"https://www.okx.com/fullnode/soltestnet/discover/rpc\"\n      } else if (this.selectedChain === \"svm:70000062\") {\n        rpc = \"https://www.okx.com/fullnode/sonic/testnet/discover/rpc\"\n      }\n      return rpc\n    },\n\n    async sol_signAndSendTransaction() {\n\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n          transaction,\n          this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async cosmos_signArbitrary() {\n      let provider = new OKXCosmosProvider(window.provider)\n      let message = await provider.signArbitrary(this.selectedChain, provider.getAccount(this.selectedChain).address, \"test cosmos\")\n      if (typeof message == \"string\") {\n        this.testboc = message;\n      } else {\n        let isValid = await this.cosmos_verifySignArbitrary(provider.getAccount(this.selectedChain).address, \"test cosmos\", message.signature, message.pub_key.value)\n        console.log(\"verify\", isValid)\n        this.testboc = \"verify:\" + isValid + JSON.stringify(message);\n      }\n    },\n\n    async cosmos_verifySignArbitrary(signer, data, signature, pubkey) {\n      try {\n        console.log(\"cosmos_verifySignArbitrary signer:\", signer)\n        console.log(\"cosmos_verifySignArbitrary data:\", JSON.stringify(data))\n        console.log(\"cosmos_verifySignArbitrary signature:\", signature)\n        console.log(\"cosmos_verifySignArbitrary pubkey:\", pubkey)\n\n        // 将bech32地址转换为公钥\n        const {prefix: prefixStr} = fromBech32(signer)\n\n        const signatureBuffer = Buffer.from(signature, 'base64');\n\n        const uint8Signature = new Uint8Array(signatureBuffer); // Convert the buffer to an Uint8Array\n\n        const pubKeyValueBuffer = Buffer.from(pubkey, 'base64'); // Decode the base64 encoded value\n\n        const pubKeyUint8Array = new Uint8Array(pubKeyValueBuffer); // Convert the buffer to an Uint8Array\n\n        // 验证签名\n        return await verifyADR36Amino(\n            prefixStr,\n            signer,\n            data,\n            pubKeyUint8Array,\n            uint8Signature\n        )\n      } catch (err) {\n        console.error('Verification failed:', err)\n        return false\n      }\n    },\n\n    async cosmos_signAmino() {\n      let provider = new OKXCosmosProvider(window.provider)\n      // const rpcUrl = 'https://osmosis-rpc.publicnode.com:443';\n      // const client = await StargateClient.connect(rpcUrl);\n      // const height = await client.getHeight();\n      // let address = provider.getAccount(this.selectedChain).address\n      // const sequence = await client.getSequence(address)\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      // let signDoc = makeSignDoc(\n      //     transaction.msgs,\n      //     transaction.fee,\n      //     this.selectedChain.split(\":\")[1],\n      //     transaction.memo,\n      //     transaction.accountNumber,\n      //     transaction.sequence,\n      // )\n      let signDoc = {\n        \"chain_id\": \"osmosis-1\",\n        \"account_number\": \"630104\",\n        \"sequence\": \"480\",\n        \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]},\n        \"msgs\": [{\n          \"type\": \"osmosis/poolmanager/swap-exact-amount-in\",\n          \"value\": {\n            \"sender\": \"osmo1u6lts9ng4etxj0zdaxsada6zgl8dudpgelmuyu\",\n            \"routes\": [{\n              \"pool_id\": \"1096\",\n              \"token_out_denom\": \"ibc/987C17B11ABC2B20019178ACE62929FE9840202CE79498E29FE8E5CB02B7C0A4\"\n            }, {\n              \"pool_id\": \"611\",\n              \"token_out_denom\": \"ibc/27394FB092D2ECCD56123C74F36E4C1F926001CEADA9CA97EA622B25F41E5EB2\"\n            }],\n            \"token_in\": {\"denom\": \"uosmo\", \"amount\": \"100\"},\n            \"token_out_min_amount\": \"8\"\n          }\n        }],\n        \"memo\": \"FE\",\n        \"timeout_height\": \"23603788\",\n        \"signOptions\": {\n          \"useOneClickTrading\": false,\n          \"preferNoSetFee\": true,\n          \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]}\n        }\n      }\n\n\n      // let signOption = {\n      //   memo: true, // optional\n      //   fee: true, // optional\n      //   gasRate: {\n      //     // optional\n      //     average: \"0.2\",\n      //     low: \"0.02\",\n      //     tiny: \"0.002\",\n      //   },\n      // }\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signAmino(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, signDoc)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    messageToBuffer(message) {\n      var buffer = Buffer.from([]);\n      try {\n        if (typeof message === \"string\") {\n          buffer = Buffer.from(message.replace(\"0x\", \"\"), \"hex\");\n        } else {\n          buffer = Buffer.from(message);\n        }\n      } catch (err) {\n        console.log(`messageToBuffer error: ${err}`);\n      }\n      return buffer;\n    },\n\n\n    async cosmos_signDirect() {\n      let provider = new OKXCosmosProvider(window.provider)\n\n      let signDoc = {\n        \"bodyBytes\": this.messageToBuffer(\"0x0ac1010a292f6962632e6170706c69636174696f6e732e7472616e736665722e76312e4d73675472616e736665721293010a087472616e7366657212096368616e6e656c2d301a0d0a05756f736d6f120431303030222b6f736d6f3175366c7473396e67346574786a307a64617873616461367a676c386475647067656c6d7579752a2d636f736d6f733175366c7473396e67346574786a307a64617873616461367a676c386475647067337967766a773207080410ebe3f90a3880b0bcafd18cec8218\"),\n        \"authInfoBytes\": this.messageToBuffer(\"0x0a510a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a2102446e19e94ac0e83ea896d2712507577eb39fbdd2d6ae9f0fc0b9759f1fbaba9012040a02080118e00312140a0e0a05756f736d6f1205323530303010859a11\"),\n        \"chainId\": \"osmosis-1\",\n        \"accountNumber\": \"630104\",\n      }\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signDirect(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, transaction)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    sui_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentSuiTransaction = params\n      this.currentSuiMethod = flag\n    },\n\n    btc_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentBtcTransaction = params\n      this.currentBtcMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n\n    fractal_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentFractalTransaction = params\n      this.currentFractalMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n    tron_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n    tron_generateTransactionParams(params) {\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n\n    starknet_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n\n    starknet_generateTransactionParams(params) {\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n\n    handleModalsSelect(modals) {\n      selectedModals = modals;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: modals.length === 3 ? \"all\" : modals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n\n    handleReturnStrategySelect(returnStrategy) {\n      selectedReturnStrategy = returnStrategy === \"deeplink\" ? this.deeplink : returnStrategy;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = selectedReturnStrategy;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: selectedReturnStrategy\n          };\n        }\n      }\n    },\n\n    handleReturnStrategyDeeplink(deeplink) {\n      console.log('handleReturnStrategyDeeplink', deeplink)\n      selectedReturnStrategy = deeplink;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: deeplink,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = deeplink;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: deeplink\n          };\n        }\n      }\n    },\n\n    handleLanguageSelect(language) {\n      selectedLanguage = language;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: language,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n    handleConnectMethodsSelect() {\n      console.log(\"当前的方法 this.selectedMethod>>>>\", this.selectedMethod);\n    },\n\n    eth_verifyMessage(message, signature, ethAddress) {\n      console.log(\"eth_verifyMessage   message>>>\", message)\n      console.log(\"eth_verifyMessage   signature>>>\", signature)\n      console.log(\"eth_verifyMessage   ethAddress>>>\", ethAddress)\n      if (!message || !signature) {\n        return \"\"\n      }\n      let originalMessage = message\n      if (message.startsWith(\"0x\")) {\n        originalMessage = originalMessage.replace(/^0x/, '');\n        let str = '';\n        for (let i = 0; i < originalMessage.length; i += 2) {\n          const byte = originalMessage.slice(i, i + 2);\n          str += String.fromCharCode(parseInt(byte, 16));\n        }\n        originalMessage = str\n      }\n      console.log(\"eth_verifyMessage   originalMessage>>>\", originalMessage)\n\n      // const messageHash = ethers.utils.hashMessage(originalMessage);\n      const recoveredAddress = ethers.utils.verifyMessage(originalMessage, signature);\n      console.log(\"eth_verifyMessage recoveredAddress:\", recoveredAddress);\n      return recoveredAddress.toLowerCase() === ethAddress.toLowerCase();\n    },\n\n    async verifyMessage(list) { //连接验签\n\n      if (window.provider && window.provider.session && list && list.length > 0) {\n        let verifyList = {}\n        for (let methodItem of list) {\n          if (\"result\" in methodItem && \"method\" in methodItem) {\n            let requestItme = this.selectedMethodData.filter(item => item.method === methodItem.method)[0];\n            console.log(\"验证签名 请求>>>:\", JSON.stringify(requestItme));\n            console.log(\"验证签名 结果>>>:\", JSON.stringify(methodItem));\n            if (methodItem.method === \"personal_sign\") {\n              let ethAddress = this.requestEVMAccountWithSession(methodItem.chainId)\n              ethAddress = ethAddress[0];\n              console.log(\"验证eth 钱包地址>>>:\", ethAddress);\n              let ethMessage = requestItme.params[0]\n              console.log(\"验证eth 签名消息体>>:\", JSON.stringify(ethMessage));\n              verifyList[methodItem.method] = this.eth_verifyMessage(ethMessage, methodItem.result, ethAddress)\n            } else if (methodItem.method === \"solana_signMessage\") {\n              let solanaMessage = methodItem.result\n              if (\"signature\" in solanaMessage && \"publicKey\" in solanaMessage) {\n                const verifySol = nacl.sign.detached.verify(\n                    new TextEncoder().encode(\"Hello Solana\"),\n                    solanaMessage.signature,\n                    new PublicKey(solanaMessage.publicKey).toBytes()\n                );\n                verifyList[methodItem.method] = verifySol\n              } else {\n                verifyList[methodItem.method] = false\n              }\n            } else if (methodItem.method === \"sui_signPersonalMessage\" || methodItem.method === \"sui_signMessage\") {\n              let suiResult = this.sui_verifySignature(methodItem.result);\n              verifyList[methodItem.method] = (await suiResult).result\n            } else if (methodItem.method === \"btc_signMessage\") {\n\n              verifyList[methodItem.method] = \"Not verified yet\"\n\n            } else if (methodItem.method === \"aptos_signMessage\") {\n              let aptosMessage = methodItem.result\n              let aptosProvider = new OKXAptosProvider(window.provider)\n              let aptosPublicKey = aptosProvider.getAccount(methodItem.chainId)?.publicKey\n\n              let signStr = aptosMessage.signature\n              if (signStr.startsWith(\"0x\")) {\n                signStr = signStr.slice(2, signStr.length)\n              }\n\n              console.log(\"aptos_signMessage aptosPublicKey And signStr\", aptosPublicKey, signStr)\n              verifyList[methodItem.method] = nacl.sign.detached.verify(\n                  Buffer.from(aptosMessage.fullMessage),\n                  Buffer.from(signStr, 'hex'),\n                  Buffer.from(aptosPublicKey, 'hex'),\n              );\n            } else if (methodItem.method === \"cosmos_signArbitrary\") {\n              let cosmosProvider = new OKXCosmosProvider(window.provider)\n              let cosmosAddress = cosmosProvider.getAccount(methodItem.chainId)?.address\n              let cosmosMessage = methodItem.result\n              let isValid = await this.cosmos_verifySignArbitrary(cosmosAddress, \"test cosmos\", cosmosMessage.signature, cosmosMessage.pub_key.value)\n              verifyList[methodItem.method] = isValid\n\n            } else if (methodItem.method === \"tron_signMessage\") {\n              let tronMessage = methodItem.result\n              let tronWeb = new TronWeb({\n                \"fullHost\": 'https://api.trongrid.io',\n                \"headers\": {},\n                \"privateKey\": ''\n              })\n              let provider = new OKXTronProvider(window.provider)\n              verifyList[methodItem.method] = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), tronMessage, provider.getAccount(\"tron:mainnet\").address)\n            } else if (methodItem.method === \"tron_signMessageV2\") {\n              let tronMessage = methodItem.result\n              let tronWeb = new TronWeb({\n                \"fullHost\": 'https://api.trongrid.io',\n                \"headers\": {},\n                \"privateKey\": ''\n              })\n              const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", tronMessage);\n              let provider = new OKXTronProvider(window.provider)\n\n              verifyList[methodItem.method] = base58Address === provider.getAccount(\"tron:mainnet\").address\n            } else if (methodItem.method === \"starknet_signMessage\") {\n              let res = methodItem.result\n              let signData = this.starknetPanelTypedData\n\n              const rpcProvider = new StarknetRpcProvider({nodeUrl: \"https://free-rpc.nethermind.io/mainnet-juno/v0_7\"});\n\n              let provider = new OKXStarknetProvider(window.provider)\n              let address = provider.getAccount(\"starknet:mainnet\").address\n              let pk = \"0x123\"; /// random pk\n              const account = new StarknetAccount(rpcProvider, address, pk)\n\n              let that = this\n              account.verifyMessage(signData, res).then(function (isValid) {\n                that.testTransaction = `Verifyed result: \\n${isValid}`\n              }).catch(function (error) {\n                that.testTransaction = `Verifyed failed: \\n${error}`\n              })\n              verifyList[methodItem.method] = \"starknet is verifying signature...\"\n            } else {\n              verifyList[methodItem.method] = \"Not verified yet\"\n\n            }\n          } else if (\"method\" in methodItem && \"error\" in methodItem) {\n            verifyList[methodItem.method] = methodItem.error\n          }\n\n        }\n\n        console.log(\"验证签名 最后的结果>>>:\", JSON.stringify(verifyList));\n        this.testTransaction = \"签名验证结果如下: \\n\" + JSON.stringify(verifyList)\n      } else {\n        console.log(\"验证签名 window.provider.session.connectMethodsReply 为空:\");\n\n      }\n\n    },\n\n    handleThemeSelect(theme) {\n      selectedTheme = theme;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: theme,\n          },\n        };\n      }\n    },\n\n    async sui_verifySignature(signatureResult) {\n      let resultObj = signatureResult\n      let result = false\n      let msg = ''\n      try {\n        /// 获取当前account\n        const adapter = new SuiAdapter(window.provider);\n        let account = adapter.getAccount()\n        console.log(`Account中获取的address：${account.address}`)\n\n        /// 验证签名\n        let pubKey = await verifyPersonalMessageSignature(this.currentSuiTransaction.message, resultObj.signature)\n        let address = pubKey.toSuiAddress()\n        console.log(`验签结果计算得到address：${address}`)\n\n        /// 对比pubKey\n        console.log(`account pubkey: ${account.publicKey}`,)\n        console.log(`result pubkey: ${pubKey.toBase64()}`)\n        result = (account.address === address) && (account.publicKey === pubKey.toBase64())\n\n        msg = `address verify: ${account.address === address}\\npublicKey verify: ${account.publicKey === pubKey.toBase64()}`\n        console.log(\"signature verify success: \", pubKey)\n      } catch (e) {\n        console.log(\"signature verify failed: \", e)\n      }\n      return {\n        result,\n        msg\n      }\n    },\n\n\n    handleRedirectSelect(input) {\n      this.redirect = input;\n    },\n\n    handleRedirectDeeplink(input) {\n      this.redirectDeeplink = input;\n    },\n\n    addRedirectParam() {\n      if (this.testTransaction) {\n        const newTransaction = JSON.parse(this.testTransaction);\n        newTransaction.redirect = this.redirect === 'deeplink' ? this.redirectDeeplink : this.redirect;\n        this.testTransaction = JSON.stringify(newTransaction);\n      }\n    },\n\n    canChainAddRedirectParam() {\n      return chainsThatCanAddRedirectParam.some((c) => this.selectedChain.startsWith(c));\n    }\n  },\n  created() {\n    // for (const eventName of Object.values(OKX_TON_CONNECTION_AND_TRANSACTION_EVENT)) {\n    //   console.log(eventName);\n    //   window.addEventListener(eventName, (event) => {\n    //     console.log(eventName,event.detail)\n    //     this.currentStatus = eventName\n    //   });\n    // }\n  },\n\n  mounted() {\n\n    var scriptTag = document.createElement(\"script\");\n    scriptTag.src = \"https://telegram.org/js/telegram-web-app.js\";\n    scriptTag.id = \"tgsdk\";\n    document.getElementsByTagName('head')[0].appendChild(scriptTag);\n\n    this.connectReady = true;\n    document.title = \"OKX Connect\";\n    this.initBtnClicked()\n    this.initBtnClicked()\n\n    console.log(\"挂载成功:\")\n    if (this.$refs.starknetPanelRef) {\n      this.starknetPanelTypedData = toRaw(this.$refs.starknetPanelRef.signData)\n      console.log(\"111: \", this.starknetPanelTypedData)\n    } else {\n      console.log(\"222\")\n    }\n  },\n};\n</script>\n","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_getAccount()\">getAccount(BTC)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signMessage()\">signMessage(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_send()\">send(BTC)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendBitcoin()\">sendBitcoin(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signPsbt_up()\">signPsbt(上架NFT)</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"btc_signAndPushPsbt_up()\">signAndPushPsbt(上架NFT)</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在OKX App选择要上架的Btc NFT，点击【上架】\n        </li>\n        <li>\n          2. 弹出签名面板，点开高级选项，查看\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出上架流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendInscription()\">sendInscription(BTC)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Btc NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"runsAddress\" clearable placeholder=\"the receiver address\" />\n      <el-input class=\"grid-content\" v-model=\"runsId\" clearable placeholder=\"the runeid\" />\n      <el-input class=\"grid-content\" v-model=\"runsAmount\" clearable placeholder=\"the amount to send\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendRunes()\">btc_sendRunes(BTC)</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model= \"intTicker\" clearable placeholder=\"BRC-20 ticker \" />\n      <el-input class=\"grid-content\" v-model=\" intAmount\" clearable placeholder=\" the amount to inscribe\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_inscribeTransfer()\">btc_inscribeTransfer(BTC)</el-button>\n    </el-col>\n\n\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    const runsAddress = ref('')\n    const runsId = ref('')\n    const runsAmount = ref('')\n    const intTicker = ref('')\n    const intAmount = ref('')\n\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount,\n      runsAddress,\n      runsId,\n      runsAmount,\n      intTicker,\n      intAmount\n    }\n  },\n  methods: {\n\n    btc_getAccount() {\n      this.$emit('generateTransactionParams', {}, \"btc_getAccount\")\n    },\n\n    btc_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to BTC\"\n      };\n      this.$emit('generateTransactionParams', params, \"btc_signMessage\")\n    },\n\n    btc_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"btc_send\")\n    },\n\n    btc_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"btc_sendBitcoin\")\n    },\n\n    btc_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"btc_signPsbt\")\n    },\n\n    btc_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"btc_signAndPushPsbt\")\n    },\n\n    btc_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"btc_sendInscription\")\n    },\n    btc_sendRunes() {\n      if (!this.runsAddress) {\n        alert(\"Please enter the receiver address\")\n        return\n      }\n      if (!this.runsId) {\n        alert(\"Please enter the runsId\")\n        return\n      }\n      if (!this.runsAmount) {\n        alert(\"Please enter the amount to send \")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        address:this.runsAddress,\n        runeid:this.runsId,\n        amount:this.runsAmount\n      }, \"btc_sendRunes\")\n    },\n\n    btc_inscribeTransfer() {\n      if (!this.intTicker) {\n        alert(\"Please enter BRC-20 ticker\")\n        return\n      }\n      if (!this.intAmount) {\n        alert(\"Please enter the amount to inscribe\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        ticker:this.intTicker,\n        amount:this.intAmount\n      }, \"btc_inscribeTransfer\")\n    },\n\n\n\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./BtcTransactionPanel.vue?vue&type=template&id=759766a0&scoped=true\"\nimport script from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./BtcTransactionPanel.vue?vue&type=style&index=0&id=759766a0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-759766a0\"]])\n\nexport default __exports__","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_getAccount()\">getAccount(Fractal)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signMessage()\">signMessage(Fractal)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_send()\">send(Fractal)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_sendBitcoin()\">sendBitcoin(Fractal)</el-button>\n\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signPsbt_up()\">signPsbt(上架NFT)</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_signAndPushPsbt_up()\">signAndPushPsbt(上架NFT)</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在OKX App选择要上架的Fractal NFT，点击【上架】\n        </li>\n        <li>\n          2. 弹出签名面板，点开高级选项，查看\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出上架流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_sendInscription()\">sendInscription(Fractal)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Fractal NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"runsAddress\" clearable placeholder=\"the receiver address\" />\n      <el-input class=\"grid-content\" v-model=\"runsId\" clearable placeholder=\"the runeid\" />\n      <el-input class=\"grid-content\" v-model=\"runsAmount\" clearable placeholder=\"the amount to send\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_sendRunes()\">fractal_sendRunes(fractal)</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model= \"intTicker\" clearable placeholder=\"BRC-20 ticker \" />\n      <el-input class=\"grid-content\" v-model=\" intAmount\" clearable placeholder=\" the amount to inscribe\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_inscribeTransfer()\">fractal_inscribeTransfer(fractal)</el-button>\n    </el-col>\n\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    const runsAddress = ref('')\n    const runsId = ref('')\n    const runsAmount = ref('')\n    const intTicker = ref('')\n    const intAmount = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount,\n      runsAddress,\n      runsId,\n      runsAmount,\n      intTicker,\n      intAmount\n    }\n  },\n  methods: {\n\n    fractal_getAccount() {\n      this.$emit('generateTransactionParams', {}, \"fractal_getAccount\")\n    },\n\n    fractal_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to UniSat!\\n\\nClick to sign in and accept the UniSat Terms of Service (https://unisat.io/terms-of-service.html) and Privacy Policy (https://unisat.io/privacy-policy.html).\\n    \\nThis request will not trigger a blockchain transaction.\\n    \\nYour authentication status will reset after 24 hours.\\n    \\nWallet address:\\nbc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\\n    \\nNonce:\\n162d70e3-8c21-4cfd-9a22-9bf0a4b7be51\\n\"\n      };\n      this.$emit('generateTransactionParams', params, \"fractal_signMessage\")\n    },\n\n    fractal_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_send\")\n    },\n\n    fractal_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_sendBitcoin\")\n    },\n\n    fractal_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"fractal_signPsbt\")\n    },\n\n    fractal_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"fractal_signAndPushPsbt\")\n    },\n\n    fractal_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"fractal_sendInscription\")\n    },\n\n    fractal_sendRunes() {\n      if (!this.runsAddress) {\n        alert(\"Please enter the receiver address\")\n        return\n      }\n      if (!this.runsId) {\n        alert(\"Please enter the runsId\")\n        return\n      }\n      if (!this.runsAmount) {\n        alert(\"Please enter the amount to send \")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        address:this.runsAddress,\n        runeid:this.runsId,\n        amount:this.runsAmount\n      }, \"fractal_sendRunes\")\n    },\n\n    fractal_inscribeTransfer() {\n      if (!this.intTicker) {\n        alert(\"Please enter BRC-20 ticker\")\n        return\n      }\n      if (!this.intAmount) {\n        alert(\"Please enter the amount to inscribe\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        ticker:this.intTicker,\n        amount:this.intAmount\n      }, \"fractal_inscribeTransfer\")\n    },\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./FractalTransactionPanel.vue?vue&type=template&id=07ed8044&scoped=true\"\nimport script from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./FractalTransactionPanel.vue?vue&type=style&index=0&id=07ed8044&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-07ed8044\"]])\n\nexport default __exports__","<script>\n\nimport {getFullnodeUrl, SuiClient} from \"@mysten/sui/client\";\nimport {Transaction as SuiTransaction} from '@mysten/sui/transactions';\n\nexport default {\n  name: \"SuiTransactionPanel\",\n  methods: {\n    sui_getAccount() {\n      this.$emit('generateTransactionParams', '', \"sui_getAccount\")\n    },\n\n    //对单个交易签名（不发送)\n    async sui_signMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signMessage\")\n    },\n\n    async sui_signPersonalMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signPersonalMessage\")\n    },\n\n    sui_signTransaction2() {\n      // 定义要转移的金额和目标地址\n      const amount = 109; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    async sui_requestRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n          `sui:mainnet`,\n          `https://fullnode.mainnet.sui.io:443`\n      );\n      var data = {\n        method: \"suix_getBalance\",\n        params: [\n          \"0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae\",\n          \"0x168da5bf1f48dafc111b0a488fa454aca95e0b5e::usdc::USDC\",\n        ],\n      };\n\n      this.$emit(\"generateTransactionParams\", data, \"sui_testRpc\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 102; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signAndExecuteTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n      this.$emit(\"generateTransactionParams\", input, \"sui_signAndExecuteTransaction\")\n    },\n\n    /// generate txBytes and txSerialize\n    async generateTsBytesAndSerizlize(input) {\n      /// txBytes and txSerialize may be constructed in advance by the dapp side\n      let resultTuple = [\"\", \"\"];\n      if (\n          \"txBytes\" in input &&\n          input.txBytes.length > 0 &&\n          \"txSerialize\" in input &&\n          input.txSerialize.length > 0\n      ) {\n        resultTuple = [input.txBytes, input.txSerialize];\n      }\n\n      /// Otherwise, a transactionBlock parameter is required.\n      if (!(\"transactionBlock\" in input)) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      // if (this.walletAddress != \"connected\") {\n      //   alert(\"请先连接钱包\");\n      //   return new Promise((resolve) => {\n      //     resolve(resultTuple);\n      //   });\n      // }\n\n      let senderAccounts = window.provider.requestAccountsWithNamespace(\"sui\");\n      if (senderAccounts.length == 0) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      try {\n        let rpcUrl = getFullnodeUrl(\"mainnet\");\n        rpcUrl = \"https://www.okx.com/fullnode/sui/discover/rpc\"\n        const suiClient = new SuiClient({ url: rpcUrl });\n\n        /// sender is required\n        input.transactionBlock.setSender(senderAccounts[0]);\n        const result = await input.transactionBlock.build({\n          client: suiClient,\n        });\n        const txBytes = Buffer(result).toString(\"base64\");\n        const txSerialize = await SuiTransaction.from(txBytes).toJSON();\n        resultTuple = [txBytes, txSerialize];\n      } catch (error) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      return new Promise((resolve) => {\n        resolve(resultTuple)\n      })\n    },\n\n    //签名并发送交易\n    sui_signAndExecuteTransaction() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n        \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.testTransaction = JSON.stringify(input);\n      this.currentSuiTransaction = input;\n      this.currentSuiMethod = \"sui_signAndExecuteTransaction\";\n    },\n  },\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_getAccount()\">getAccount(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signMessage()\">signMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signPersonalMessage()\">signPersonalMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signTransaction2()\">signTransaction(Sui)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signAndExecuteTransaction()\">sendTransaction(Sui)</el-button>\n      <div style=\"font-size: 12px; color: gray;\">(send to Rally Tiger account)</div>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_requestRpc()\">RPC_getBalance</el-button>\n      <div style=\"font-size: 12px; color: gray;\">get USDC balance of address:</div>\n      <div style=\"font-size: 12px; color: gray\">0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae</div>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signTransaction_pre_execution()\">signTransaction(prepared data)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signAndExecuteTransaction_pre_execution()\">sendTransaction(prepared data)</el-button>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./SuiTransactionPanel.vue?vue&type=template&id=56a8eddf&scoped=true\"\nimport script from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./SuiTransactionPanel.vue?vue&type=style&index=0&id=56a8eddf&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-56a8eddf\"]])\n\nexport default __exports__","<script>\nimport { OKXStarknetProvider } from \"@okxconnect/universal-provider\";\nimport { CallData, uint256, RpcProvider, Account } from \"starknet\";\n\nexport default {\n  name: \"StarknetTransactionPanel\",\n  methods: {\n    async starknet_signMessage() {\n      this.address = this.getCurrentAddress()\n      if (this.address === \"\") {\n        alert(\"address can't be ''\");\n        return\n      }\n\n      let signData = this.signData\n      this.$emit(\"generateTransactionParams\", JSON.stringify(signData))\n      let provider = new OKXStarknetProvider(window.provider)\n      let res = await provider.signMessage(this.address, signData, \"starknet:mainnet\")\n      if (res.code) {\n        if (res.code == 301) {\n          let msg = \"Wallet address is registering, please try again later!\"\n          alert(msg)\n          this.$emit(\"generateTransactionResult\", msg, \"starknet_signMessage\")\n        }\n        this.$emit(\"generateTransactionResult\", res, \"starknet_signMessage\")\n        return\n      }\n      console.log(res)\n\n      const rpcProvider = new RpcProvider({ nodeUrl: \"https://free-rpc.nethermind.io/mainnet-juno/v0_7\" });\n      let pk = \"0x123\"; /// random pk\n      const account = new Account(rpcProvider, this.address, pk)\n      let that = this\n      account.verifyMessage(signData, res).then(function (isValid) {\n        that.$emit(\"generateTransactionResult\", \"verify:\" + isValid + \"\\n\" + res, \"starknet_signMessage\")\n      }).catch(function (error) {\n        that.$emit(\"generateTransactionResult\", \"failed:\" + error + \"\\n\" + res, \"starknet_signMessage\")\n      })\n    },\n\n    async starknet_sendTransaction() {\n      this.address = this.getCurrentAddress()\n      if (this.address === \"\") {\n        alert(\"address can't be ''\");\n        return\n      }\n\n      let val = uint256.bnToUint256(120000000000000000)\n      const transferCalldata = CallData.compile({\n        to: \"0x00b909cefa36ab6bc26f5887a867e46ef162238f0a171b1c2974b665afd4237f\",\n        value: val\n      })\n\n      // const ETHTokenAddress = \"0x049d36570d4e46f48e99674bd3fcc84644ddd6b96f7c741b1562b82f9e004dc7\"\n      // const STARKTokenAddress = \"0x04718f5a0fc34cc1af16a1cdee98ffb20c31f5cd61d6ab07201858f4287c938d\"\n      const DAITokenAddress = \"0x00da114221cb83fa859dbdb4c44beeaa0bb37c7537ad5ae66fe5e0efd20e6eb3\"\n\n      const invokeParams = {\n        calls: [\n          {\n            contract_address: DAITokenAddress,\n            entry_point: \"transfer\",\n            calldata: transferCalldata\n          }\n        ],\n      }\n\n      this.$emit(\"generateTransactionParams\", JSON.stringify(invokeParams))\n      let provider = new OKXStarknetProvider(window.provider)\n\n      let that = this\n      provider.sendTransaction(this.address, invokeParams, \"starknet:mainnet\").then(function(res){\n        console.log(\"starknet_sendTransaction result \", res)\n        that.$emit(\"generateTransactionResult\", res, \"starknet_sendTransaction\")\n      }).catch(function(error) {\n        if (error.code == 301) {\n          let msg = \"Wallet address is registering, please try again later!\"\n          alert(msg)\n          that.$emit(\"generateTransactionResult\", msg, \"starknet_sendTransaction\")\n        }else {\n          that.$emit(\"generateTransactionResult\", error, \"starknet_sendTransaction\")\n        }\n      });\n    },\n\n    getCurrentAddress() {\n      let provider = new OKXStarknetProvider(window.provider)\n      const address = provider.getAccount(\"starknet:mainnet\")?.address\n      return address\n    },\n\n    getPublicKey() {\n      let provider = new OKXStarknetProvider(window.provider)\n      const account = provider.getAccount(\"starknet:mainnet\")\n      console.log(\"获取到的account是：\")\n      console.log(account)\n      return \"05d8e5e9c1dd686246716c888159271d2f13986cb4acee46164e2c4e034629c0\"\n    }\n  },\n\n  data() {\n    const signData = {\n        \"domain\": {\n          \"chainId\": \"0x534e5f4d41494e\",\n          \"name\": \"STRKFarm\",\n          \"version\": \"1\"\n        },\n        \"message\": {\n          \"document\": \"app.strkfarm.xyz/tnc/v1\",\n          \"message\": \"Read and Agree T&C\"\n        },\n        \"primaryType\": \"Tnc\",\n        \"types\": {\n          \"StarkNetDomain\": [\n            {\n              \"name\": \"name\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"version\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"chainId\",\n              \"type\": \"felt\"\n            }\n          ],\n          \"Tnc\": [\n            {\n              \"name\": \"message\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"document\",\n              \"type\": \"felt\"\n            }\n          ]\n        }\n    }\n\n    return {\n      signData\n    }\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"starknet_signMessage()\">signMessage</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 验签不成功的话，请尝试连接VPN\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"starknet_sendTransaction(true)\">\n        sendTransaction\n      </el-button>\n\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 发送0.12个DAI到0x00b9...4237f的地址\n        </li>\n        <li>\n          2. 请保证你的钱包有足够的DAI\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./StarknetTransactionPanel.vue?vue&type=template&id=082fda2b&scoped=true\"\nimport script from \"./StarknetTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./StarknetTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./StarknetTransactionPanel.vue?vue&type=style&index=0&id=082fda2b&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-082fda2b\"]])\n\nexport default __exports__","<script>\n\n\nimport {OKXTronProvider} from \"@okxconnect/universal-provider\";\nimport {TronWeb} from \"tronweb\";\n\nexport default {\n  name: \"TronTransactionPanel\",\n  methods: {\n\n    async tron_signMessage() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessage(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n\n      const verify = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), res, provider.getAccount(\"tron:mainnet\").address)\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" + res, \"tron_signMessage\")\n    },\n\n    async tron_signMessageV2() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessageV2(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", res);\n      console.log(\"tron_signMessageV2_base58Address\", base58Address)\n      console.log(\"tron_signMessageV2_address\", provider.getAccount(\"tron:mainnet\").address)\n      const verify = base58Address === provider.getAccount(\"tron:mainnet\").address\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" +  res, \"tron_signMessage\")\n    },\n\n    async tron_signTransaction(isOnlySign) {\n      let provider = new OKXTronProvider(window.provider)\n        let tronWeb = new TronWeb({\n          \"fullHost\": 'https://api.trongrid.io',\n          \"headers\": {},\n          \"privateKey\": ''\n        })\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const transaction = await tronWeb.transactionBuilder.sendTrx(\"TGBcVLMnVtvJzjPWZpPiYBgwwb7th1w3BF\", 1000, address);\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let res = await provider.signTransaction( transaction, \"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", res, \"tron_signTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async getContract() {\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n      \n      try {\n        const contract = await tronWeb.trx.getContract(contractAddress)\n        const abi = contract.abi.entrys;\n        console.log(\"获取到的合约：\")\n        console.log(abi)\n      } catch (error) {\n        console.log(\"Error getting contract ABI:\", error);\n      }\n    },\n    \n    async tron_signAndSendTransactionContract(isOnlySign) {\n      // this.getContract()\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n      ]\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"quote(uint256,uint256,uint256)\", {}, parameter, address);\n      console.log(\"=====>transaction: \")\n      console.log(ret);\n      this.$emit(\"generateTransactionParams\", ret.transaction)\n      if (isOnlySign) {\n        let tx = await provider.signTransaction( ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async tron_signAndSendTransactionApprove(isOnlySign) {\n      let contractAddress = \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'address', value: contractAddress},\n        {type: 'uint256', value: 1000},\n      ]\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"approve(address,uint256)\", {}, parameter, address);\n\n      let transaction = ret.transaction\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let tx = await provider.signTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n\n    }\n\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessage()\">tron_signMessage</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessageV2()\">tron_signMessageV2</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(true)\">\n        tron_signTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(true)\">\n        tron_signTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(true)\">\n        tron_signTransaction(Approve)\n      </el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(false)\">\n        tron_signAndSendTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(false)\">\n        tron_signAndSendTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(false)\">\n        tron_signAndSendTransaction(approve)\n      </el-button>\n    </el-col>\n\n\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./TronTransactionPanel.vue?vue&type=template&id=55a13ab0&scoped=true\"\nimport script from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./TronTransactionPanel.vue?vue&type=style&index=0&id=55a13ab0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-55a13ab0\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=46dad1a2&scoped=true\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=46dad1a2&scoped=true&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-46dad1a2\"]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\nimport App from './App.vue'\n\nconst app = createApp(App)\n\napp.use(ElementPlus)\napp.mount('#app')","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkokxconnectdemo\"] = self[\"webpackChunkokxconnectdemo\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(27526); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["require","Object","defineProperty","exports","value","AptosUtils","getTransaction","o","transaction","rawTransaction","payload","entryFunction","typeArgs","type_args","typeArguments","Array","forEach","typeTag","push","toString","realArguments","this","getTypeArguments","args","i","arguments","function","module_name","address","data","name","identifier","function_name","type","type_arguments","getArguments","array","j","length","y","values","subArray","dealArrayElements","e","Uint8Array","t","isArray","r","n","assign","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","rejected","result","done","then","apply","OKXAptosProvider","buffer_1","AptosUtils_1","core_1","constructor","provider","chainsSet","Set","getConnectedNamespace","defaultNetwork","network","requestDefaultChainWithNamespace","NameSpaceKeyAptos","currentChainId","getRealChainId","chainId","size","Error","_a","_b","_c","session","namespaces","chains","chain","add","getAccount","_d","_e","_f","_g","_h","_j","account","accounts","filter","startsWith","logDebug","accountArray","split","console","log","extra","publicKey","undefined","substring","signMessage","realChain","prefix","message","nonce","fullMessage","application","window","location","protocol","hostname","buffer","Buffer","from","hex","bufferToHex","injectParams","signedMessage","request","injectResult","error","JSON","stringify","successData","signStr","slice","signature","signTransaction","tx","signAndSubmitTransaction","buf","OKXAptosProvider_1","enumerable","get","CONNECT_METHOD_BATCH_FETCHMSG","CONNECT_METHOD_FETCHMSG","CONNECT_METHOD_RECEIVE","CONNECT_METHOD_UNSUB","CONNECT_METHOD_SUB","CONNECT_METHOD_PUBLISH","CONNECT_METHOD_LOGIN","CONNECT_METHOD_PUSH","__createBinding","create","m","k","k2","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","__setModuleDefault","v","__importStar","ownKeys","getOwnPropertyNames","ar","prototype","hasOwnProperty","call","mod","OKXWalletConnector","constants_1","storageconstants_1","storage_1","utils_1","utils_2","eventemitter3_1","protocol_1","report_1","WS","resolveWebSocketImplementation","url","events","EventEmitter","state","ConnectorState","InitState","selectedUrlIndex","retryCount","timeOutLimit","checkWSUrl","heartbeatTimer","connectionTimeoutTimer","connectURLStorage","Storage","OKXCONNECTOR_CACHE_KEY","connecting","Connecting","onPayload","rsp","Date","now","emit","onClose","event","socket","code","onError","id","msg","onopen","onmessage","onclose","Connected","emitError","errorEvent","heartbeat","clearTimeout","OnError","readyState","WebSocket","OPEN","send","setTimeout","bind","tryRegistOpen","logError","registOpen","inRetry","toUTCString","URLSearchParams","startTimeOutTimer","hasBuiltInWebSocket","onerror","close","on","resetTimeOutTimer","OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE","FINISHED","checkMaxRetry","OKXCONNECTOR_WS_URL_LIST","connectionTryNext","nextUrl","getNextSelectUrl","CANCELED","pendingSocket","TIME_OUT","reportEvent","OKXReportType","LOG","cacheSuccessUrlSelect","saveContent","onVisibleChanged","document","visibilityState","once","err","OKXConnectError","OKX_CONNECT_ERROR_CODES","CONNECTION_ERROR","connect","removeEventListener","addEventListener","disconnect","Disconnected","currentStatus","addListener","decrypt","success","failed","splitCheckComplete","listenPayloadHandler","removeListener","parsedEvent","safeJsonParse","params","rawMsg","skipMsg","checkResult","isSplitPackage","finalMessage","failHandler","addPackageParse","callback","payloadHandler","param","listener","off","doLogin","safeJsonStringify","getMsgPayloadFromHistory","tmpMsg","jsonstr","onOpen","openHandler","ConnectionManager","connect_1","commands_1","jwtconstants_1","crypto_1","jwt_1","safejson_1","log_1","url_1","connectionSplitPackages_1","appname","splitManager","ConnectionSplitPackages","connectStorage","OKXCONNECTOR_CACHE_KEY_DAPP","crypto","SessionCrypto","inTMA","isInTMA","reportLog","keyPairInfo","getCachedCryptoKeyPair","clearCache","jwtKeyPair","getCachedJWTKeyPair","saveJWTKeyPair","connector","OKXCONNECTOR_WS_URL_1","packageId","connectedWalletPK","currentTopic","refreshPackageId","nowDate","saveCryptoKeyPair","keyPair","cacheInfo","encryptStoreMsg","OKXCONNECTOR_CRYPTO_KEY","kp","getAndDecrypt","content","strkeyPair","toHexString","secretKey","OKXCONNECTOR_JWT_KEY","strKeyPairInfo","hexToByteArray","generateKeyPair","isWalletPKReady","makeJWT","topic","signJWT","OKXCONNECTOR_JWT_SIDE","OKXCONNECTOR_JWT_TTL","parsePackage","input_1","input","ignoreACK","_k","_l","_m","_o","sendACK","getItem","OKXCONNECTOR_TOKEN_CACHE","inputObj","messageId","msgPlayloadObject","tryParseMessageSplitPayload","msgObject","topicId","messageObject","publishedAt","onReceivedPackageCheck","completeMessageIdList","msgId","sendReceive","restoreConnect","getConnectInfo","generateTopic","info","channelId","clientId","stringifyKeypair","fromRestore","timeLog","getTime","lastConnectId","cachedSenderPublicKey","OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE","jwtToken","timeOne","timeF","sendFetchAndConsumeMessages","init","sendRaw","timeTh","catch","jsonrpc","CONNECT_JSONRPC_VER","method","token","replace","parsedMessage","updateProtocolVersion","protocolVersion","updateTopicSenderVersion","fail","msgObj","trimStart","inputDataObj","msgResult","ttl","OKXCONNECTOR_MESSAGE_TTL","sendEncryptedMsg","topic_1","encryptedMsg_1","encryptedMsg","msg_1","encrypt","sendSplitPackages","msgId_1","success_1","reason","fetchedMessages","hasMore","receivedMsgs","timeFive","cleanCache","saveSessionContent","key","OKXCONNECTOR_SESSION_PREFIX_KEY","jsonData","getSessionContent","jsonStr","object","getCurrentConnectionReady","cryptoKeyReady","cryptoKeyPair","getCryptoKeyEnable","__importDefault","localforage_1","ConnectionSplitSupportedVersionLimit","ConnectionSplitSupportedSizeLimit","ConnectionReceiveKey","ConnectionSendKey","ConnectionTopicVersionKey","side","splitMessageSendArray","Map","splitMessageReceivedArray","splitMessageSenderVersionMap","splitPackageCache","default","createInstance","OKXCONNECTOR_STORAGE_PROTOCOL_CACHE","sendRawMsg","recoverFromCache","payloadList","entries","splice","syncCache","messageObj","protocol_version","protocolMessageObject","package_group_id","set","sendMsg","senderVersion","msgLength","msg_parts","msg_part_length","groupId","generateGroupId","splitMessagePackages","map","index","total_count","package_index","mergePackageArray","completeMap","inputTopic","itemList","item","messageCache","index_check","sort","a","b","messageList","reduce","msgList","messageIdList","msgIdList","join","receivedList","includes","isSending","inputPayloadArray","inputSendArray","filtedArray","accept","sendCacheArray","cachedPayload","sendArray","concat","inputReceiveArray","receiveCacheArray","receiveArray","setItem","rec_array","send_array","CONNECT_PROTOCOL_VER","OKXCONNECTOR_WS_URL_IDX_KEY","OKXCONNECTOR_WS_URL_3","OKXCONNECTOR_WS_URL_2","EVENT_EMITTER_MAX_LISTENERS","OKXCONNECTOR_PROTOCOL_VERSION","Engine","iconnector_1","connectionManager_1","sessionUtils_1","wallet_info_1","appName","connectors","useConnector","connectionManager","addConnectionListener","getConnector","setAccountChangeListener","accountChangeListener","registerConnector","setConnectionManager","hasWsConnector","isWsConnector","getTag","OKX_TG_WALLET","OKX_APP_WALLET","isInjectedConnector","OKX_INJECT_WALLET","universalConnect","sessionConfig","connectInfoAndUrl","universalRequest","connectInfo","requestId","openUniversalLink","openUniversalUrl","universalConnectRequest","protocolVer","Number","tonConnectSdkVersion","dAppInfo","dappInfo","requests","redirect","base64Encoded","encodeConnectParams","openOKXLink","getOKXLink","useMini","tmaReturnUrl","openMethod","openWallet","connectRequest","openOKXTMAWalletlinkWithFallback","useShortLink","openOKXUniversalLink","openOKXDeeplinkWithFallback","isIOS","isIos","addOnConnectResultListener","response","connectResponse","buildNameSpacesByConnectResponse","UNKNOWN_ERROR","walletName","responses","wallet","tag","OKXWalletName","OKXMiniWalletName","OKXInjectWalletName","find","methodsResponse","connectRequestMethods","signResponse","maxProtocolVersion","setUseConnector","sendSession","connectResultListener","setOnConnectResultListener","engineConnectInfo","requestAnswer","clearData","addDisconnectListener","disconnecter","getTagByappName","setConnectConnector","setSessionConnectingListener","sessionConnectingListener","restoreconnect","sessionInfo","onConnectResult","restoreconnectFromTopic","namespaceKeys","connectManagerDisconnect","jsonResponse","WalletConnectionManager","walletConnectionManager_1","engine_1","MULTICODEC_ED25519_LENGTH","MULTICODEC_ED25519_HEADER","MULTICODEC_ED25519_BASE","MULTICODEC_ED25519_ENCODING","DID_METHOD","DID_PREFIX","DID_DELIMITER","KEY_PAIR_SEED_LENGTH","DATA_ENCODING","JSON_ENCODING","JWT_ENCODING","JWT_DELIMITER","JWT_IRIDIUM_TYP","JWT_IRIDIUM_ALG","JWTHeaderType","decodeJSON","encodeJSON","encodeIss","decodeIss","encodeSig","decodeSig","encodeData","decodeData","encodeJWT","decodeJWT","verifyJWT","ed25519","tweetnacl_1","stringUtils_1","sign","str","okxtoString","okxfromString","val","publicKeyStr","issuer","multicodec","bytes","encoded","header","jwt","sub_1","aud_1","ttl_1","keyPair_1","sub","aud","iat","Math","floor","alg","typ","iss","exp","act","detached","verify","OKXCONNECTOR_JWT_WALLET_SIDE","buildRequestAccountNameSpacesByConnectResponse","buildAccountNameSpaces","requestAccountNameSpaces","universalResponse","filterAccount","namespace","ton_addr","tonAddress","tonProof","ton_proof","addresses","methods","addressItem","addressArr","utils_3","crypto_js_1","subKey","beforeKey","localStorage","resolveLocalStorage","storeKey","cipherIV","cacheStr","cacheKey","cache","cacheObj","checkAndUpgradeCache","fromCacheKey","toCacheKey","removeItem","timestamp","saveItem","localKey","totalCacheStr","getCachedPBKDF2InfoKey","pwLen","saltLen","pw","iv","salt","OKXCONNECTOR_STORAGER_CRYPTO_SALT","randomBytes","OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD","OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV","ivBuffer","PBKDF2","iterations","storeInfo","AES","enc","Utf8","OKXCONNECTOR_STORAGE_CIPHER_METHOD","OKXCONNECTOR_TON_KEY","WalletConnectionManagerEvent","WalletConnectionManagerTopicInfoCacheKey","RECEIVE_REQUEST","walletConnectionConstants_1","communicateEvents","sessionCryptoInfoMap","inLogin","isLogined","offset","isTopicPublicKeyExist","timestampStr","parseInternalMsg","internalMsg","internalObj","origin","originContent","base64decode","updateClientId","cid","lastCheck","getLastSixMd5Hash","dappPublicKey","syncCacheSessionInfo","_p","_q","_r","_s","ignoreReceive","isInternalData","inner_message","inner_topic","decryptWallet","sessionInfoString","base64Content","inner_connection","toObject","recovrySessionInfoFromCache","cacheMap","topicItem","cryptoItem","cacheSessionInfo","sync","duplicatedTopics","delete","appendTopic","sessionPublicKey","subscribeTopics","confirmAppendingTopics","keys","getSessionPublicKey","getCurrentCachedTopicIdList","needPublicKey","useRaw","connectedDappPK","cryptoObject","useCrypto","encryptWallet","messageStr","sendUnsubscribe","sendBatchFetchAndConsumeMessages","topicIdList","topics","withInternalData","finishCount","idx","AppwalletConnector","ws_connector_1","WsConnector","super","walletNameKey","shortUniversalLink","appConnectEncodeParams","appDeepLink","getAppWalletDeepLink","isOS","openDeeplinkWithFallback","stackDeepLink","openLinkBlank","standardUniversalLink","OkxwalletInjectConnector","TgwalletConnector","InjectConnector","appwallet_connector_1","inject_connector_1","tgwallet_connector_1","okxwallet_inject_connector_1","SolProvider_1","AptosProvider_1","media_1","TONProvider_1","inject_1","sui_provider_1","disconnectListener","providerMap","accountChangedEVMHandler","accountChangedSolanaPublicKeyHandler","accountChangedTONHandler","disconnectHandler","enable","NameSpaceKeyEip155","Eip155Provider","NameSpaceKeySOL","SolProvider","AptosProvider","NameSpaceKeyTON","TONProvider","NameSpaceKeySui","SuiProvider","getInjectProvider","nameSpace","mapKey","BAD_REQUEST_ERROR","okxwallet","requestAccounts","version","getVersion","platform","navigator","appVersion","responseItem","required","requiredNamespaces","optional","optionalNamespaces","needPop","signalChain","isDevice","singleItem","singleProvider","getAccountByRequestWallets","getRequestId","newRequest","onAck","checkWalletMatch","injectProvider","USER_REJECTS_ERROR","errorResponse","CHAIN_NOT_SUPPORTED","sessionLocal","WALLET_NOT_SUPPORTED","checkAccountChanged","getRequireNameSpaceFromSession","resultNameSpace","compareAndModifyNamespaces","nameSpaces1","nameSpaces2","isAccountsSame","ns1","ns2","areAccountsSame","_","allReady","every","namespaceKey","connectReady","toJSON","namespacesKey","connectWalletNameSpace","aptosChains","chainStr","aptosChain","replaceChainNameToChainId","ton_proof_result_Item","proofItem","proof","allEqual","accountsItem","sessionAccounts","newSessionAccounts","areEqual","aptosAdd","isAccountChange","walletInfo","accountResult","walletInfoItem","connectWallet","requestWallets","allNameSpace","eventkey","walletInfoFirst","hasTON","itemResult","parseConnectResponse","cheeckRequire","requireItem","resultSel","resultItem","hasChainAdd","addItem","configEventWithKey","solana","sui","okxTonWallet","tonconnect","aptos","onAccountChange","newAccount","encodeTGParams","encodeTWAConnectURLParams","tgUrl","getTelegramWalletTWAUrl","pendingRequests","getDefaultReporter","beginReport","handleResponse","bindRequestForPromise","clear","nonceLength","sessionKeyPair","createKeypairFromString","createKeypair","box","createNonce","receiverPublicKey","encodedMessage","TextEncoder","encode","encrypted","concatInfo","concatUint8Arrays","hexResult","encodedResult","base64encode","senderPublicKey","messageByteArray","toUint8Array","internalMessage","splitToUint8Arrays","decrypted","open","TextDecoder","decode","__exportStar","p","hasOKXInjectedProvider","getWindowProviderNamespace","providerSearch","property","path","_provider","SuiMethods","TONMethods","AptosMethods","SOLANAMethods","Eip55Methods","InjectUtils_1","aptosChainList","freeze","aptosInjectChainMap","searchNetwork","searchChainIdToInjectChainName","toLowerCase","hash","METHOD_NOT_SUPPORTED","chainName","accountChange","connectRequestWalletResponse","connectChain","aptosAccount","selectedAddress","coinType","namespaceChainId","nameSpaceResponse","bs58_1","bufferResult","allResult","signAllTransactions","signAndSendResult","signAndSendTransaction","signalChainConnectResult","tonParams","resultMe","getChainId","tonResult","tonItem","manifestUrl","itmes","items","needProof","restoreConnection","ethParams","typedDataJson","switchChainId","parseInt","resultSwitch","chainHex","currentChain","getSuiPublicKey","suiAccount","suiPublicKey","getSuiWallet","originalRarams","injectSignResult","features","signTransactionBlock","injectSendResult","signAndExecuteTransactionBlock","digest","injectPersonalResult","signPersonalMessage","TON_CHAINS","COSMOS_CHAINS","APTOS_CHAINS","SUI_CHAINS","SOLANA_CHAINS","BTC_CHAINS","MAINNET","FRACTAL","TESTNET","SONIC_TESTNET","MOVEMENT_MAINNET","MOVEMENT_TESTNET","COSMOS_MAINNET","IEngine","ISignClient","ISignClientEvents","IEngineEvents","client","creatOKXInjectWalletInfo","creatOKXMiniAppWalletInfo","creatOKXWalletInfo","getBigIntRpcId","formatJsonRpcRequest","isJsonRpcError","isJsonRpcResponse","parseConnectionError","isHttpUrl","formatJsonRpcError","json_rpc_1","isJsonRpcPayload","isJsonRpcRequest","isJsonRpcResult","payloadId","formatJsonRpcResult","isReservedErrorCode","getError","getErrorByCode","formatErrorMessage","isWsUrl","okx_connect_error_1","IncrementalRandomGenerator","bits","Uint16Array","Uint32Array","initialValue","getNextValue","uint8Generator","uint16Generator","date","BigInt","RESERVED_ERROR_CODES","STANDARD_ERROR_MAP","DEFAULT_ERROR","match","INTERNAL_ERROR","SERVER_ERROR","getUrlProtocol","matches","RegExp","matchRegexProtocol","regex","test","CONNECT_ITEM_ERROR_CODES","TONCHAIN","connect_wallet_1","connect_event_1","getTestTwaUrl","okxTesttwaUrl","getTestTgTwaUrl","okxTestTgtwaUrl","getBotNameAndAppName","urlObj","URL","pathnameParts","pathname","Boolean","botName","OKX_MINI_WALLET_NAME","OKX_APP_WALLET_NAME","tgwalletAppName","tgwalletName","standardDeeplink","downloadUrl","okxDeeplink","SERVER_ERROR_CODE_RANGE","INVALID_PARAMS","METHOD_NOT_FOUND","INVALID_REQUEST","PARSE_ERROR","getDefaultMessageByCode","setPrototypeOf","ALREADY_CONNECTED_ERROR","NOT_CONNECTED_ERROR","UNKNOWN_APP_ERROR","USER_REJECTS_ERROR_CAUSE_REGISTER","NameSpaceKeyStarknet","NameSpaceKeyTron","NameSpaceKeyCosmos","NameSpaceKeyBtc","misc_1","chains_1","callForSuccess","fn","options","attempts","delayMs","lastError","delay","timeout","signal","aborted","timeoutId","chainName2IdMap","replaceChainIdToChainName","checkMetaData","versionCompare","isBrowser","isMobileUserAgent","openLink","toSafeBase64FromBase64","isValidObject","getAppWalletShortDeepLink","encodeTelegramUrlParameters","isTelegramUrl","openOKXDeeplink","getUniversalLink","logWarning","call_for_success_1","web_api_1","tma_api_1","request_1","debug","forceReport","defaultReporter","OKXReporter","packageJson","okxLogDebug","sendRecordContent","warn","action","content_1","mediaNotTouch","mediaTouch","maxWidth","media","mediaMin","mediaMax","mediaMinMax","device","getWindow","isTmaPlatform","width","innerWidth","tablet","mobile","isMobile","isTelegram","TelegramWebviewProxy","maxTouchPoints","px","pxMin","pxMax","OKXReportSide","versionStr","cross_fetch_1","reportApiList","reportCacheKey","reportUUIDKey","MAX_LIMIT_REPORTCOUNT","DEFAULT_HTTP_HEADERS","Accept","DEFAULT_HTTP_METHOD","DEFAULT_FETCH_OPTS","headers","PAGE_IN","PAGE_OUT","CLICK","DAPP","WALLET","fetchListWithTimeout","urls_1","args_1","urls","controller","AbortController","fetchPromise","timeoutPromise","abort","race","ok","status","currentSide","currentVersion","storage","recordList","currentUUID","configVersionAndSide","recordCacheKey","reportPlatform","startErrorCatching","records","uuid","sendCachedRecords","cachedErrors","sendRecord","record","body","res","language","ua","userAgent","reportItem","lang","markRecordItem","sendList","allSettled","results","keepIndex","markRecord","Report_WalletType_Key","Report_ConnectDapp_ConnectAndSign_Click","Report_Proceed_QRCode_Click","Report_ChooseType_Download_Click","Report_ChooseType_ConnectWallet_Click","Report_Proceed_Retry_Click","Report_ChooseType_ConnectWallet_View","Report_Loading_ConnectWallet_View","Report_Proceed_QRCode_View","Report_Proceed_Proceed_View","dappMetaData","icon","JSONStringify","JSONParse","json","numbersBiggerThanMaxInt","serializedData","group","parse","isCustomFormatBigInt","alloc","allocUnsafe","basics_1","string","encoding","base","BASES","decoder","encoder","createCodec","ascii","bufNum","String","fromCharCode","charCodeAt","utf8","bases","base16","latin1","binary","inTg","isInTelegramBrowser","sendExpand","sendOpenTelegramLink","initParams","locationHash","urlParseHashParams","tmaPlatform","tgWebAppPlatform","Telegram","WebApp","webAppVersion","tgWebAppVersion","platforms","isTelegramWebview","TelegramWebview","postEvent","link","fallback","pathFull","search","isIframe","versionAtLeast","path_full","parent","eventType","eventData","external","notify","trustedTarget","postMessage","indexOf","_path","urlSafeDecode","qIndex","pathParam","substr","query_params","urlParseQueryString","urlencoded","decodeURIComponent","queryString","paramName","paramValue","queryStringParams","v1","v2","p1","p2","v1List","v2List","max","ver","removeUrlLastSlash","addPathToUrl","constants_2","deeplinkUrl","useStandardUniversalLink","deeplinkEncodeUrl","encodeURIComponent","fullUrl","isInIOSLine","href","deepLinkOpened","timeoutDuration","newWindow","fallbackToDownloadPage","isInIOSLark","isInIOSWeChat","count","interval","setInterval","hidden","clearInterval","parameters","encodedParameters","connectRequestWithVersion","connectRequestStr","utf8Array","btoa","connectParam","redirectStr","okxconnect","extraparams","fromtg","base64ContentStr","urlSafeBase64","twaDeepLink","openTelegramLink","RANDOM_LENGTH","hasLocalStorage","hashKey","generateRandomBytes32","tweetnacl_util_1","to_string_1","sha256_1","BASE16","hexString","byteArray","byte","buffer1","buffer2","mergedArray","subArray1","subArray2","encodeUint8Array","urlSafe","encodeBase64","decodeToUint8Array","decodeBase64","uint8Array","decodeUTF8","decodedUint8Array","encodeUTF8","scheme","global","self","randomBytes32","obj","getPrototypeOf","inLine","isIOSDevice","MSStream","isIPadOS","MD5","base64","getUserAgent","ua_parser_js_1","target","doFallback","fallbackTimeout","check","vendor","opera","getResult","osName","os","deviceModel","model","browserName","browser","OKXSolanaProvider","web3_js_1","defaultChainMap","has","caip","SOON_MAIN_NET_CAIP","SOON_TEST_NET_CAIP","ECLIPSE_MAIN_NET_CAIP","SOON_MAIN_NET_ID","SOON_TEST_NET_ID","ECLIPSE_MAIN_NET_ID","realMessage","Transaction","VersionedTransaction","deserialize","pubkey","PublicKey","serializedMessage","serialize","requireAllSignatures","verifySignatures","getSignedTransaction","transactions","newTransactions","s","c","transactionStr","resultTx","OKXSolanaProvider_1","OKXSuiProvider","universal_provider_1","transactions_1","client_1","suiClient","rpcUrl","getFullnodeUrl","suiProvider","rpcMap","SuiClient","txBytes","txSerialize","generateTsBytesAndSerizlize","ret","transactionBlockBytes","errorData","signAndExecuteTransaction","confirmedLocalExecution","b64encoded","atob","messageBytes","resultTuple","senderAccounts","requestAccountsWithNamespace","transactionBlock","setSender","build","toBase64","OKXSuiProvider_1","OKXBtcProvider","_1","getAddressForChainId","ns","checkChainId","sendBitcoin","toAddress","satoshis","to","feeRate","txhash","checkParameters","signPsbt","psbtHex","signPsbts","psbtResults","psbtHexs","signAndPushPsbt","sendInscription","inscriptionId","extension","coinId","protocolId","atomicSuffix","ordinalsSuffix","endsWith","removeSuffix","scenario","txType","batchBean","coinAmount","nftId","sendRunes","runeid","amount","fromAddress","inscribeTransfer","ticker","suffix","unexistKeys","OKXCosmosProvider","algo","bech32Address","pubKey","hexToUint8Array","signArbitrary","signerAddress","signDoc","chain_id","account_number","sequence","fee","gas","msgs","memo","signData","signAmino","signOptions","resData","signed","signDirect","bodyBytes","authInfoBytes","accountNumber","messageToBuffer","arr","output","x","padStart","arrayBuffer","byteValue","isNaN","OKXStarknetProvider","STARKNET_CHAIN_ID","getChain","typedData","sendTransaction","transactionData","transaction_hash","signMessageDeclareContractPayload","sendMessageExecuteTransactionDetail","calls","abis","transactionsDetail","executionRequest","OKXTonProvider","statusChangeSubscriptions","statusChangeErrorSubscriptions","tonWallet","errorsHandler","connected","tonNameSpace","walletStateInit","sessionWallet","tonDeviceInfo","connectItems","onStatusChange","requestParams","OKXTronProvider","TRON_CHAIN_ID","stringToHex","signMessageV2","signedTx","realSignTx","visible","txID","rawData","contract","raw_data","expiration","ref_block_bytes","fee_limit","ref_block_hash","raw_data_hex","OKXUniversalProvider","eip155_1","sui_1","core_2","namespaces_1","solana_1","btc_1","aptos_1","ton_1","cosmos_1","tron_1","packages_1","provider_1","starknet_1","opts","setGlobal","okxConnectUniversalinwindow","initialize","providerOpts","rpcProviders","requestParam","buildRequestParamFromRequest","getProvider","validateChain","keyArr","connectOpts","called","onRequestSent","disconnectAndEmit","cleanup","engine","replaceNamespace","aptosNameSpace","realNS","replaceNamespaceInner","optionAptosNameSpace","realOptionNS","defaultChain","replaceSessionAptos","disconnectInner","connectAndSign","signRequest","updatedOpts","setNamespaces","onConnect","requestItem","signResponseList","okxConnectUniversalUIinwindow","creatNotSupportMethodItemReplay","syncAllAddresses","syncAddressAvailable","syncAllAddress","setDefaultChain","checkStorage","sessionInfoStr","getFromStore","createProviders","registerEventListeners","SignClient","providersToCreate","parseNamespaceKey","namespacesValue","currentNameSpace","opts1","solanaProvider","sonicProvider","svmProvider","soonProvider","eclipseProvider","optsTon","tonProvider","optsSui","optsBtc","btcProvider","fbProvider","aptosProvider","moveProvider","cosmosProvider","tronProvider","starknetProvider","PROVIDER_EVENTS","DEFAULT_CHAIN_CHANGED","caip2ChainId","onChainChanged","UPDATE_NAMESPACES","nameSpaces","nameSpacekey","persist","isChainNamespaceInSession","chainsArr","defaultNamespace","getDefaultChain","namespaceStr","caip2Chain","sessionProperties","showRequestModal","listenerCount","OKXUniversalProvider_1","OKXBtcProvider_1","OKXCosmosProvider_1","OKXTonProvider_1","OKXTronProvider_1","OKXStarknetProvider_1","ConnectMethodUtils_1","metaData","requestAccountItem","nameSpaceToConnectWalletNameSpace","SESSION_CONNECTING","connectMethodsToConnectWalletMethods","metadata","fillParamsToSession","connectMethodsResponseUpdate","openOKXWallet","allAddressStr","syncResoonseToRequire","connectSupportMethods","connectMethodsAdaptOldVersion","isRecord","notSupportError","errorItem","callBackParams","solAccount","account1","solAddress","fromAccountToAddress","encodeMessage","suiMessage","convertedArray","btcAccounts","account2","btcAccount","btcAddress","paramData","account3","aptosAddress","aptosChainId","cosmosAccount","account_cosmos","cosmosAddress","cosmosData","cosmosBase64Encoded","methodItem","solanaSuccessData","suiMethod","requestMethod","suiMessageb64","aptosSignature","requireNameSpace","includeEip155","some","space","syncAddressHostAvailable","includeChain","paramsArr","firstParam","firstObj","aptosParams","currentURL","signChainId","applicationUrl","cosmosChain","responseAddressStr","allAddress","isEvm","deriveName","addr","ci","evmAddress","getAccountsChains","isCaipNamespace","mergeRpcMap","targetRpcMap","sourceRpcMap","mergeNamespaces","source","fixMobileBtcSession","btcNameSpace","addressType","compressedPublicKey","GENERIC_SUBPROVIDER_NAME","RPC_URL","STORAGE","CONTEXT","WC_VERSION","PROTOCOL","RELAY_URL","LOGGER","JsonRpcConnection_1","JsonRpcProvider_1","httpProviders","createHttpProviders","updateNamespace","getAccounts","setHttpProvider","http","parsedChainId","parsedRpc","getRpcUrl","httpProvider","createHttpProvider","getHttpProvider","rpc","JsonRpcProvider","JsonRpcConnection","getGlobal","BtcProvider","CosmosProvider","updateRequestParams","isDic","decimalNumber","selectedChainId","chainNum","paramsChainId","paramsChainString","adaptArray","addressObj","isEqual","chainAddress","messages","secondObj","hexChainId","getHexChainIdFromRequest","isChainApproved","configAddressAdaptInjectWallet","handleSwitchChain","addEthereumChain","resultData","rpcUrls","eip155","disableProviderPing","isAvailable","registering","register","parseError","types_1","IJSONRpcProvider","connection","hasRegisteredEventListeners","setConnection","context","requestStrict","_error","SolanaProvider","getPubkey","getWalletAddress","components","StarknetProvider","__rest","getOwnPropertySymbols","propertyIsEnumerable","validUntil","newParams","boc","TronProvider","IJSONRpcConnection","opt","globals","convertChainIdToNumber","parseChainId","mergeArrays","projectId","reference","CAIP_DELIMITER","okxGlobal","_createElementBlock","_hoisted_1","_createVNode","_component_el_container","_withCtx","_component_el_header","_cache","_createTextVNode","_component_el_main","_component_el_card","class","_createElementVNode","style","_component_el_row","_component_el_col","span","_toDisplayString","$options","_ctx","_component_el_checkbox","modelValue","withUI","$event","onChange","handleWithUI","universalToTG","handleUniversalToTG","_component_el_select","modals","placeholder","handleModalsSelect","multiple","_component_el_option","label","returnStrategy","handleReturnStrategySelect","_Fragment","_renderList","returnStrategies","strategy","_createBlock","_component_el_input","deeplink","handleReturnStrategyDeeplink","disabled","_createCommentVNode","handleLanguageSelect","locales","locale","theme","handleThemeSelect","THEME","LIGHT","DARK","selectedMethod","handleConnectMethodsSelect","connectMethods","tonProofValue","gutter","align","availableChains","checked","areChainsInit","isOptionalChecked","handleOptionChange","_component_el_button","onClick","initBtnClicked","connectInitStr","testTonConnect","connectTonStr","connectBtnClicked","connectStatusStr","syncAllAddressClick","syncAllAddressStr","disconnectAction","walletAddress","disconnectStatusStr","_Teleport","showModal","closeModal","_withModifiers","_component_qrcode_vue","qrValue","level","_component_el_tabs","activeTab","onTabClick","clickActiveTab","_component_el_tab_pane","eth_requestAccounts","eth_chainId","wallet_switchEthereumChain","wallet_addEthereumChain","personal_sign","eth_signTypedData_v4","eth_sendTransaction_transfer","eth_sendTransaction_approve","eth_sendTransaction_mint","wallet_watchAsset","oversized_personal_sign","ton_getAccount","ton_sendTransaction","sol_signMessage","sol_signTransaction","sol_signVersionedTransaction","sol_signAllTransactions","sol_signAllVersionedTransactions","sol_signAndSendTransaction","sol_signAndSendVersionedTransaction","_component_SuiPanel","onGenerateTransactionParams","sui_generateTransactionParams","_component_BTCPanel","btc_generateTransactionParams","_component_FractalPanel","fractal_generateTransactionParams","_component_TronTransactionPanel","tron_generateTransactionParams","onGenerateTransactionResult","tron_getTransactionResult","aptos_signMessage","aptos_signTransaction","aptos_signAndSubmitTransaction","cosmos_signArbitrary","cosmos_signAmino","cosmos_signDirect","Polygon_RPCRequest","eth_sendTransaction_swap","move_signTransaction","move_signAndSubmitTransaction","_component_StarknetPanel","ref","starknet_generateTransactionParams","starknet_getTransactionResult","testBase64UrlSafe","xs","sm","handleRedirectSelect","canChainAddRedirectParam","redirectDeeplink","handleRedirectDeeplink","addRedirectParam","testTransaction","rows","testboc","$setup","sendBtnDisabled","testTransactionStr","btc_getAccount","btc_signMessage","sendAmount","clearable","btc_send","sendSatoshisAmount","btc_sendBitcoin","btc_signPsbt_up","btc_signAndPushPsbt_up","receiver","btc_sendInscription","runsAddress","runsId","runsAmount","btc_sendRunes","intTicker","intAmount","btc_inscribeTransfer","props","setup","$emit","alert","autoFinalized","__exports__","fractal_getAccount","fractal_signMessage","fractal_send","fractal_sendBitcoin","fractal_signPsbt_up","fractal_signAndPushPsbt_up","fractal_sendInscription","fractal_sendRunes","fractal_inscribeTransfer","sui_getAccount","sui_signMessage","sui_signPersonalMessage","sui_signTransaction2","sui_signAndExecuteTransaction","sui_requestRpc","sui_signTransaction_pre_execution","sui_signAndExecuteTransaction_pre_execution","recipientAddress","SuiTransaction","coin","splitCoins","transferObjects","showEffects","currentSuiTransaction","currentSuiMethod","starknet_signMessage","starknet_sendTransaction","getCurrentAddress","rpcProvider","RpcProvider","nodeUrl","pk","Account","that","verifyMessage","isValid","uint256","bnToUint256","transferCalldata","CallData","compile","DAITokenAddress","invokeParams","contract_address","entry_point","calldata","getPublicKey","tron_signMessage","tron_signMessageV2","tron_signTransaction","tron_signAndSendTransactionContract","tron_signAndSendTransactionApprove","tronWeb","TronWeb","trx","base58Address","verifyMessageV2","isOnlySign","transactionBuilder","sendTrx","getContract","contractAddress","abi","entrys","parameter","triggerSmartContract","verifyADR36Amino","fromBech32","VConsole","allChains","chainsThatCanAddRedirectParam","optionChains","selectedModals","selectedReturnStrategy","selectedDeepLink","selectedLanguage","selectedTheme","TronTransactionPanel","QrcodeVue","BTCPanel","FractalPanel","SuiPanel","StarknetPanel","testTopic","testPublicKey","testProofPayload","pendingDeepLink","logList","localPubKey","localSecKey","selectedChain","ProofPayloadVerify","showVerifyRow","selectedMethodData","isChecked","reload","starknetPanelTypedData","computed","selectedChains","initChains","newChains","updatedChains","tab","tabName","testTon","openModal","initCall","OKXTonConnectUI","actionsConfiguration","uiPreferences","OKXUniversalConnectUI","onModalStateChange","uri","isPC","testTonSdk","blockExplorerUrls","nativeCurrency","symbol","decimals","requestEVMAccountWithSession","evmNameSpace","dataETH","dataPolygon","types","EIP712Domain","Person","Mail","primaryType","domain","verifyingContract","contents","maxPriorityFeePerGas","maxFeePerGas","gasPrice","gasLimit","image","tonUniversalLog","sendTransactionAlert","fetch","confirm","sendData","adapter","SuiAdapter","suiResult","sui_verifySignature","btcAdapter","btcResult","currentBtcMethod","currentBtcTransaction","hexToBase64","bs64Str","fractalResult","currentFractalMethod","currentFractalTransaction","hexStr","blob","Blob","reader","FileReader","onload","base64Data","readAsDataURL","datatest","firstStr","showUrl","hasEip155","hasSolana","hasSui","hasBtc","hasAptos","hasTon","hasCosmos","hasTron","hasStarknet","nameSpacesChains","optSpaceChains","solanaChains","hasPolygon","suiChains","btcChains","connectMethod","connectData","requireData","cosmos","tron","starknet","ton","btc","optData","eip155Chains","tonChains","signMethods","getCurrentSelectedMethodData","openModalAndSign","methodList","suiData","currentMethod","accountAddress","userAgentInfo","Agents","flag","isSafariOrChrome","uint8Array1","result1","nacl","toBytes","config","AptosConfig","Network","Aptos","simple","sender","functionArguments","Connection","getSolConnect","blockhash","getLatestBlockhash","versionedTransactionMessage","TransactionMessage","payerKey","recentBlockhash","instructions","SystemProgram","transfer","fromPubkey","toPubkey","lamports","compileToV0Message","feePayer","cosmos_verifySignArbitrary","pub_key","signer","prefixStr","signatureBuffer","uint8Signature","pubKeyValueBuffer","pubKeyUint8Array","uiOptions","eth_verifyMessage","ethAddress","originalMessage","recoveredAddress","ethers","list","verifyList","requestItme","ethMessage","solanaMessage","verifySol","aptosMessage","aptosPublicKey","cosmosMessage","tronMessage","StarknetRpcProvider","StarknetAccount","signatureResult","resultObj","verifyPersonalMessageSignature","toSuiAddress","newTransaction","created","mounted","scriptTag","createElement","src","getElementsByTagName","appendChild","title","$refs","starknetPanelRef","toRaw","render","app","createApp","App","use","ElementPlus","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","loaded","__webpack_modules__","amdO","deferred","O","chunkIds","priority","notFulfilled","Infinity","getter","d","leafPrototypes","getProto","__proto__","mode","def","current","definition","g","globalThis","Function","prop","Symbol","toStringTag","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}