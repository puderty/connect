{"version":3,"file":"js/app.20666135.js","mappings":"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","sources":["webpack://okxconnectdemo/../packages/aptos-provider/src/AptosUtils.js","webpack://okxconnectdemo/../packages/aptos-provider/src/OKXAptosProvider.js","webpack://okxconnectdemo/../packages/aptos-provider/src/index.js","webpack://okxconnectdemo/../packages/solana-provider/src/OKXSolanaProvider.js","webpack://okxconnectdemo/../packages/solana-provider/src/index.js","webpack://okxconnectdemo/./src/App.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue?1b44","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue?e4fb","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue?aa83","webpack://okxconnectdemo/./src/components/StarknetTransactionPanel.vue","webpack://okxconnectdemo/./src/components/StarknetTransactionPanel.vue?1a06","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue?089a","webpack://okxconnectdemo/./src/App.vue?7ccd","webpack://okxconnectdemo/./src/main.js","webpack://okxconnectdemo/webpack/bootstrap","webpack://okxconnectdemo/webpack/runtime/amd options","webpack://okxconnectdemo/webpack/runtime/chunk loaded","webpack://okxconnectdemo/webpack/runtime/compat get default export","webpack://okxconnectdemo/webpack/runtime/create fake namespace object","webpack://okxconnectdemo/webpack/runtime/define property getters","webpack://okxconnectdemo/webpack/runtime/global","webpack://okxconnectdemo/webpack/runtime/hasOwnProperty shorthand","webpack://okxconnectdemo/webpack/runtime/make namespace object","webpack://okxconnectdemo/webpack/runtime/node module decorator","webpack://okxconnectdemo/webpack/runtime/jsonp chunk loading","webpack://okxconnectdemo/webpack/startup"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AptosUtils = void 0;\nclass AptosUtils {\n    static getTransaction(o) {\n        if (\"rawTransaction\" in o) {\n            let transaction = o;\n            if (\"entryFunction\" in transaction.rawTransaction.payload) {\n                let entryFunction = transaction.rawTransaction.payload.entryFunction;\n                let typeArgs = entryFunction.type_args;\n                let typeArguments = new Array();\n                typeArgs.forEach(typeTag => {\n                    typeArguments.push(typeTag.toString());\n                });\n                let realArguments = new Array();\n                this.getTypeArguments(entryFunction.args, realArguments);\n                let i = {\n                    arguments: realArguments,\n                    function: `${entryFunction.module_name.address.data ? entryFunction.module_name.address.toString() : entryFunction.module_name.address}::${entryFunction.module_name.name.identifier ? entryFunction.module_name.name.identifier : entryFunction.module_name.name}::${entryFunction.function_name.identifier ? entryFunction.function_name.identifier : entryFunction.function_name}`,\n                    type: \"entry_function_payload\",\n                    type_arguments: typeArguments\n                };\n                return this.getArguments(i);\n            }\n        }\n        return o;\n    }\n    static getTypeArguments(args, array) {\n        for (let j = 0; j < args.length; j++) {\n            let y = args[j];\n            if (\"values\" in y && y.values != null && y.values instanceof Array) {\n                let subArray = new Array();\n                array.push(subArray);\n                this.getTypeArguments(y.values, subArray);\n            }\n            else {\n                this.dealArrayElements(y, array);\n            }\n        }\n    }\n    static dealArrayElements(e, array) {\n        if (\"value\" in e && e.value != null) {\n            array.push(e.value.toString());\n        }\n        else if (\"data\" in e && e.data != null && e.data instanceof Uint8Array) {\n            return array.push(e.toString());\n        }\n        else {\n            return array.push(e.toString());\n        }\n    }\n    static getArguments(e) {\n        if (\"arguments\" in e) {\n            let t = e.arguments;\n            if (Array.isArray(t)) {\n                let r = new Array();\n                t.forEach(n => {\n                    if (n instanceof Uint8Array) {\n                        let o = new Array();\n                        n.forEach(i => {\n                            o.push(i);\n                        });\n                        r.push(o);\n                    }\n                    else\n                        r.push(n);\n                });\n                e = Object.assign(Object.assign({}, e), { arguments: r });\n            }\n        }\n        return e;\n    }\n}\nexports.AptosUtils = AptosUtils;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXAptosProvider = void 0;\nconst buffer_1 = require(\"buffer\");\nconst AptosUtils_1 = require(\"./AptosUtils\");\nconst core_1 = require(\"@okxconnect/core\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nclass OKXAptosProvider {\n    constructor(provider) {\n        this.chainsSet = new Set();\n        this.provider = provider.getUniversalProvider();\n        this.getConnectedNamespace();\n    }\n    get defaultNetwork() {\n        let network = this.provider.requestDefaultChainWithNamespace(core_1.NameSpaceKeyAptos);\n        return network;\n    }\n    get currentChainId() {\n        return `aptos:${this.defaultNetwork}`;\n    }\n    getRealChainId(chainId) {\n        if (chainId == \"aptos:mainnet\") {\n            return \"aptos:637\";\n        }\n        else if (chainId == \"movement:testnet\") {\n            return \"aptos:70000060\";\n        }\n        if (chainId == null) {\n            if (this.chainsSet.size == 1) {\n                return this.currentChainId;\n            }\n            else {\n                throw new Error(\"connected to multiple aptos chains,chainId can not be null\");\n            }\n        }\n        else {\n            return chainId;\n        }\n    }\n    getConnectedNamespace() {\n        var _a, _b, _c;\n        (_c = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces) === null || _b === void 0 ? void 0 : _b['aptos']) === null || _c === void 0 ? void 0 : _c.chains.forEach(chain => {\n            this.chainsSet.add(chain);\n        });\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n        chainId = this.getRealChainId(chainId);\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['aptos']) === null || _b === void 0 ? void 0 : _b.accounts[0];\n        if (chainId != null) {\n            account = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces['aptos']) === null || _d === void 0 ? void 0 : _d.accounts.filter(function (account) {\n                return account.startsWith(chainId);\n            })[0];\n        }\n        (0, core_1.logDebug)(\"getAccount\", account);\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        console.log(\"aptos_publicKey\", (_f = (_e = this.provider.session) === null || _e === void 0 ? void 0 : _e.namespaces['aptos']) === null || _f === void 0 ? void 0 : _f.extra);\n        let extra = (_j = (_h = (_g = this.provider.session) === null || _g === void 0 ? void 0 : _g.namespaces['aptos']) === null || _h === void 0 ? void 0 : _h.extra) === null || _j === void 0 ? void 0 : _j[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n            console.log(\"aptos_publicKey\", publicKey);\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address,\n            publicKey: publicKey\n        };\n    }\n    signMessage(payload, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            let realChain = this.getRealChainId(chainId);\n            try {\n                let prefix = \"APTOS\";\n                let address = (_a = this.getAccount(realChain)) === null || _a === void 0 ? void 0 : _a.address;\n                let message = \"\", nonce = \"\";\n                var fullMessage = prefix;\n                let application = window.location.protocol + \"//\" + window.location.hostname;\n                if (\"address\" in payload && payload.address) {\n                    fullMessage += \"\\naddress: \" + address;\n                }\n                if (\"application\" in payload && payload.application) {\n                    fullMessage += \"\\napplication: \" + application;\n                }\n                if (\"chainId\" in payload && payload.chainId) {\n                    fullMessage += \"\\nchainId: \" + realChain;\n                }\n                if (\"message\" in payload) {\n                    fullMessage += \"\\nmessage: \" + payload.message;\n                    message = payload.message;\n                }\n                if (\"nonce\" in payload) {\n                    fullMessage += \"\\nnonce: \" + payload.nonce;\n                    nonce = payload.nonce;\n                }\n                console.log(\"signMessage\", fullMessage);\n                const buffer = buffer_1.Buffer.from(fullMessage);\n                const hex = this.bufferToHex(buffer);\n                let data = {\n                    \"chainId\": realChain,\n                    \"method\": \"aptos_signMessage\",\n                    \"params\": {\n                        \"message\": hex,\n                    }\n                };\n                let signedMessage = yield this.provider.request(data, realChain);\n                if ('result' in signedMessage) {\n                    let successData = signedMessage.result;\n                    let publicKey = (_b = this.getAccount(realChain)) === null || _b === void 0 ? void 0 : _b.publicKey;\n                    // Remove the 0x prefix\n                    const key = publicKey.slice(2, 66);\n                    console.log(\"apt_signMessage\", buffer_1.Buffer.from(successData, 'hex'));\n                    console.log(\"apt_signMessage\", successData);\n                    const verified = tweetnacl_1.default.sign.detached.verify(buffer_1.Buffer.from(fullMessage), buffer_1.Buffer.from(successData.slice(2, successData.length), 'hex'), buffer_1.Buffer.from(publicKey, 'hex'));\n                    console.log(\"signMessage\", verified);\n                    return new Promise((resolve, reject) => {\n                        resolve({\n                            address: address,\n                            application: application,\n                            chainId: realChain,\n                            fullMessage: fullMessage,\n                            message: message,\n                            nonce: nonce,\n                            prefix: prefix,\n                            signature: successData,\n                            // verified:verified\n                        });\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        if (\"error\" in signedMessage) {\n                            resolve(signedMessage.error);\n                        }\n                    });\n                }\n            }\n            catch (error) {\n                console.error('方法数据回调失败 --Error--', error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    signTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let tx = AptosUtils_1.AptosUtils.getTransaction(transaction);\n            console.log(\"signTransaction\", tx);\n            let realChain = this.getRealChainId(chainId);\n            try {\n                let signature = yield this.provider.request({\n                    \"method\": \"aptos_signTransaction\",\n                    \"params\": tx\n                }, realChain);\n                if ('result' in signature) {\n                    let successData = signature.result;\n                    return new Promise((resolve, reject) => {\n                        resolve(buffer_1.Buffer.from(successData));\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        reject(signature);\n                    });\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"getSignedTransaction\", error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    signAndSubmitTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let tx = AptosUtils_1.AptosUtils.getTransaction(transaction);\n            console.log(\"signAndSubmitTransaction\", tx);\n            let realChain = this.getRealChainId(chainId);\n            try {\n                let signature = yield this.provider.request({\n                    \"method\": \"aptos_signAndSubmitTransaction\",\n                    \"params\": tx\n                }, realChain);\n                if ('result' in signature) {\n                    let successData = signature.result;\n                    return new Promise((resolve, reject) => {\n                        resolve(successData);\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        reject(signature);\n                    });\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"getSignedTransaction\", error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    bufferToHex(buf) {\n        return \"0x\" + buffer_1.Buffer.from(buf).toString(\"hex\");\n    }\n}\nexports.OKXAptosProvider = OKXAptosProvider;\nexports.default = OKXAptosProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXAptosProvider = void 0;\nvar OKXAptosProvider_1 = require(\"./OKXAptosProvider\");\nObject.defineProperty(exports, \"OKXAptosProvider\", { enumerable: true, get: function () { return OKXAptosProvider_1.OKXAptosProvider; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXSolanaProvider = void 0;\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXSolanaProvider {\n    getRealChainId(chainId) {\n        if (chainId == null) {\n            if (this.chainsSet.size == 1) {\n                let realChain = \"\";\n                let map = this.defaultChainMap;\n                this.chainsSet.forEach(function (chain) {\n                    if (map.has(chain)) {\n                        realChain = map.get(chain);\n                    }\n                });\n                if (realChain == \"\") {\n                    throw new Error(\"unsupported chainId\");\n                }\n                else {\n                    return realChain;\n                }\n            }\n            else {\n                throw new Error(\"connected to multiple solana chains,chainId can not be null\");\n            }\n        }\n        else {\n            if (chainId.startsWith(\"svm\")) {\n                return chainId;\n            }\n            else {\n                if (this.caip.includes(chainId)) {\n                    return chainId;\n                }\n                else {\n                    throw new Error(\"wrong chainId\");\n                }\n            }\n        }\n    }\n    getConnectedNamespace() {\n        var _a, _b, _c;\n        (_c = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces) === null || _b === void 0 ? void 0 : _b['solana']) === null || _c === void 0 ? void 0 : _c.chains.forEach(chain => {\n            this.chainsSet.add(chain.split(\":\")[0]);\n        });\n    }\n    constructor(provider) {\n        this.chainsSet = new Set();\n        this.caip = [\n            \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n            \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n            \"sonic:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n            \"sonic:EtWTRABZaYq6iMfeYKouRu166VU2xqa1\"\n        ];\n        this.defaultChainMap = new Map();\n        this.provider = provider.getUniversalProvider();\n        this.defaultChainMap.set(\"solana\", \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\");\n        this.defaultChainMap.set(\"sonic\", \"sonic:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\");\n        this.getConnectedNamespace();\n    }\n    signMessage(message, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            chainId = this.getRealChainId(chainId);\n            try {\n                let data = {\n                    \"chainId\": chainId,\n                    \"method\": \"solana_signMessage\",\n                    \"params\": {\n                        \"message\": message,\n                        \"pubkey\": (_a = this.getAccount(chainId)) === null || _a === void 0 ? void 0 : _a.address\n                    }\n                };\n                let signedMessage = yield this.provider.request(data, chainId);\n                (0, core_1.logDebug)(\"signMessage111\", signedMessage);\n                if ('result' in signedMessage) {\n                    let successData = signedMessage.result;\n                    return new Promise((resolve, reject) => {\n                        var _a;\n                        resolve({\n                            \"signature\": bs58_1.default.decode(successData),\n                            \"publicKey\": (_a = this.getAccount(chainId)) === null || _a === void 0 ? void 0 : _a.address\n                        });\n                    });\n                }\n                else {\n                    (0, core_1.logDebug)(\"signMessage111\", signedMessage);\n                    return new Promise((resolve, reject) => {\n                        resolve(signedMessage.error);\n                    });\n                }\n            }\n            catch (error) {\n                console.error('方法数据回调失败 --Error--', error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d;\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['solana']) === null || _b === void 0 ? void 0 : _b.accounts[0];\n        if (chainId != null) {\n            account = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces['solana']) === null || _d === void 0 ? void 0 : _d.accounts.filter(function (account) {\n                return account.startsWith(chainId);\n            })[0];\n        }\n        (0, core_1.logDebug)(\"getAccount\", account);\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const address = account.split(':')[2];\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address,\n            publicKey: new web3_js_1.PublicKey(address)\n        };\n    }\n    signTransaction(transaction, chainId) {\n        var _a, _b;\n        (0, core_1.logDebug)(\"OKXSolanaProvider\", typeof transaction);\n        chainId = this.getRealChainId(chainId);\n        try {\n            let serializedMessage = transaction.serialize({\n                requireAllSignatures: false,\n                verifySignatures: false,\n            });\n            let data = { \"data\": bs58_1.default.encode(serializedMessage), \"from\": (_a = this.getAccount(chainId)) === null || _a === void 0 ? void 0 : _a.address };\n            return this.getSignedTransaction(\"solana_signTransaction\", data, chainId);\n        }\n        catch (e) {\n            let serializedMessage = transaction.serialize();\n            let data = { \"data\": bs58_1.default.encode(serializedMessage), \"from\": (_b = this.getAccount(chainId)) === null || _b === void 0 ? void 0 : _b.address };\n            return this.getSignedTransaction(\"solana_signTransaction\", data, chainId);\n        }\n    }\n    signAllTransactions(transactions, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getRealChainId(chainId);\n            try {\n                var array = transactions.map((tx) => {\n                    var _a;\n                    var serializedMessage;\n                    if (tx instanceof web3_js_1.VersionedTransaction) {\n                        serializedMessage = tx.serialize();\n                    }\n                    else {\n                        serializedMessage = tx.serialize({\n                            requireAllSignatures: false,\n                            verifySignatures: false,\n                        });\n                    }\n                    return { \"data\": bs58_1.default.encode(serializedMessage), \"from\": (_a = this.getAccount(chainId)) === null || _a === void 0 ? void 0 : _a.address };\n                });\n                const response = yield this.provider.request({\n                    \"method\": \"solana_signAllTransactions\",\n                    \"params\": {\n                        \"transactions\": array\n                    }\n                }, chainId);\n                if (\"result\" in response) {\n                    let result = response.result;\n                    let newTransactions = JSON.parse(result).map((s) => {\n                        let c = bs58_1.default.decode(s);\n                        try {\n                            let transaction = web3_js_1.Transaction.from(c);\n                            (0, core_1.logDebug)(\"verifySignatures\", transaction.verifySignatures());\n                            return transaction;\n                        }\n                        catch (error) {\n                            return web3_js_1.VersionedTransaction.deserialize(c);\n                        }\n                    });\n                    return new Promise((resolve, reject) => {\n                        resolve(newTransactions);\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        resolve(response);\n                    });\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"getSignedTransaction\", error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    signAndSendTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            chainId = this.getRealChainId(chainId);\n            try {\n                let data = {};\n                try {\n                    let serializedMessage = transaction.serialize({\n                        requireAllSignatures: false,\n                        verifySignatures: false,\n                    });\n                    data = { \"data\": bs58_1.default.encode(serializedMessage), \"from\": (_a = this.getAccount(chainId)) === null || _a === void 0 ? void 0 : _a.address };\n                }\n                catch (e) {\n                    let serializedMessage = transaction.serialize();\n                    data = { \"data\": bs58_1.default.encode(serializedMessage), \"from\": (_b = this.getAccount(chainId)) === null || _b === void 0 ? void 0 : _b.address };\n                }\n                let signature = yield this.provider.request({\n                    \"method\": \"solana_signAndSendTransaction\",\n                    \"params\": data\n                }, chainId);\n                if ('result' in signature) {\n                    let successData = signature.result;\n                    return new Promise((resolve, reject) => {\n                        resolve(successData);\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        resolve(signature);\n                    });\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"getSignedTransaction\", error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    getSignedTransaction(method, transactionStr, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let signature = yield this.provider.request({\n                    \"method\": method,\n                    \"params\": transactionStr\n                }, chainId);\n                if ('result' in signature) {\n                    let successData = signature.result;\n                    let c = bs58_1.default.decode(successData);\n                    let resultTx;\n                    try {\n                        resultTx = web3_js_1.Transaction.from(c);\n                    }\n                    catch (error) {\n                        resultTx = web3_js_1.VersionedTransaction.deserialize(c);\n                    }\n                    if (!(resultTx instanceof web3_js_1.VersionedTransaction)) {\n                        (0, core_1.logDebug)(\"verifySignatures\", resultTx.verifySignatures());\n                    }\n                    return new Promise((resolve, reject) => {\n                        resolve(resultTx);\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        reject(signature);\n                    });\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"getSignedTransaction\", error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n}\nexports.OKXSolanaProvider = OKXSolanaProvider;\nexports.default = OKXSolanaProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXSolanaProvider = void 0;\nvar OKXSolanaProvider_1 = require(\"./OKXSolanaProvider\");\nObject.defineProperty(exports, \"OKXSolanaProvider\", { enumerable: true, get: function () { return OKXSolanaProvider_1.OKXSolanaProvider; } });\n","<template>\n  <div id=\"app\">\n    <el-container>\n      <el-header>OKX Connect</el-header>\n      <el-main>\n        <el-card class=\"wallet-info\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Wallet Info</div>\n          </template>\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Wallet Address:</strong> {{ getWalletAddress }}\n            </el-col>\n          </el-row>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Status :</strong> {{ currentStatus }}\n            </el-col>\n          </el-row>\n\n        </el-card>\n\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Connect Params</div>\n          </template>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"withUI\" @change=\"handleWithUI\">\n                Show UI\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"universalToTG\" @change=\"handleUniversalToTG\">\n                Use mini wallet\n              </el-checkbox>\n            </el-col>\n          </el-row>\n\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Modals</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"modals\" placeholder=\"Modals\" @change=\"handleModalsSelect\" multiple>\n                <el-option label=\"Before\" value=\"before\"/>\n                <el-option label=\"Success\" value=\"success\"/>\n                <el-option label=\"Error\" value=\"error\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center; justify-content: space-between;\">\n            <el-col :span=\"6\" style=\"gap: 2px\">\n              <p style=\"font-size: 11pt; margin: 0px\">Return Strategy</p>\n              <p style=\"font-size: 9pt; margin: 0px\">(Mobile only)</p>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-select\n                  v-model=\"returnStrategy\"\n                  @change=\"handleReturnStrategySelect\"\n                  placeholder=\"Return Strategy\"\n              >\n                <el-option\n                    v-for=\"strategy in returnStrategies\"\n                    :key=\"`return-strategy-select-option-${strategy}`\"\n                    :label=\"strategy\"\n                    :value=\"strategy\"\n                />\n              </el-select>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-input\n                  v-if=\"returnStrategy === 'deeplink'\"\n                  v-model=\"deeplink\"\n                  @change=\"handleReturnStrategyDeeplink\"\n                  placeholder=\"Deeplink\"\n                  :disabled=\"returnStrategy !== 'deeplink'\"\n                  style=\"margin: 0px\"\n              />\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Lang</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"language\" @change=\"handleLanguageSelect\" placeholder=\"Language\">\n                <el-option v-for=\"locale in locales\" :key=\"`language-select-option-${locale}`\" :label=\"locale\"\n                           :value=\"locale\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Theme</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"theme\" @change=\"handleThemeSelect\" placeholder=\"Theme\">\n                <el-option label=\"LIGHT\" :value=\"THEME.LIGHT\"/>\n                <el-option label=\"DARK\" :value=\"THEME.DARK\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <!--          <el-row>-->\n          <!--          <el-row style=\"align-items: center\">-->\n          <!--            <el-col :span=\"4\">-->\n          <!--              <p style=\"font-size: 11pt\">Connect</p>-->\n          <!--              <p style=\"font-size: 11pt\">Methods</p>-->\n          <!--            </el-col>-->\n          <!--            <el-col :span=\"20\">-->\n          <!--              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" placeholder=\"Methods\">-->\n          <!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n          <!--                           :value=\"methods\" />-->\n\n          <!--              </el-select>-->\n          <!--            </el-col>-->\n          <!--          </el-row>-->\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Connect</p>\n              <p style=\"font-size: 11pt\">Methods</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" multiple placeholder=\"methods\">\n                <el-option\n                    v-for=\"item in connectMethods\"\n                    :key=\"item\"\n                    :label=\"item\"\n                    :value=\"item\">\n                </el-option>\n              </el-select>\n\n\n              <!--              <el-select v-model=\"selectedMethod\" placeholder=\"Methods\" @change=\"handleConnectMethodsSelect\" multiple>-->\n              <!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n              <!--                           :value=\"methods\" />-->\n              <!--              </el-select>-->\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">ton_proof</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-input v-model=\"tonProofValue\" placeholder=\"input ton_proof\"></el-input>\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" align=\"middle\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Required Chains</div>\n            </el-col>\n            <el-col\n                :span=\"6\"\n                v-for=\"item in Object.keys(availableChains)\"\n                :key=\"item\"\n            >\n              <el-checkbox\n                  v-model=\"availableChains[item].checked\"\n                  :disabled=\"!areChainsInit\"\n              >{{ availableChains[item].name }}\n              </el-checkbox\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" align=\"middle\" style=\"margin-top: 20px\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Optional Chains</div>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(43114)\" @change=\"() => handleOptionChange(43114)\">\n                AVAX\n              </el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(10)\" @change=\"() => handleOptionChange(10)\">OP</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(8453)\" @change=\"() => handleOptionChange(8453)\">\n                BASE\n              </el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(99781165)\"\n                           @change=\"() => handleOptionChange(99781165)\">Nonexist\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp')\"\n                           @change=\"() => handleOptionChange('solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp')\">Solana\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('ton:-239')\" @change=\"() => handleOptionChange('ton:-239')\">Ton\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('btc:mainnet')\"\n                           @change=\"() => handleOptionChange('btc:mainnet')\">btc\n              </el-checkbox>\n            </el-col>\n\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"initBtnClicked\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectInitStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"connectBtnClicked\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectStatusStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"syncAllAddressClick\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ syncAllAddressStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"danger\"\n                  @click=\"disconnectAction\"\n                  icon=\"el-icon-switch-button\"\n                  :disabled=\"!areChainsInit || walletAddress.length == 0\"\n              >{{ disconnectStatusStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <teleport to=\"body\">\n            <div v-if=\"showModal\" class=\"modal-overlay\" @click=\"closeModal\">\n              <div class=\"modal-content\" @click.stop>\n                <button class=\"close-button\" @click=\"closeModal\">\n                  &times;\n                </button>\n                <h2>Scan to connect</h2>\n                <qrcode-vue :value=\"qrValue\" :size=\"350\" level=\"L\"/>\n              </div>\n            </div>\n          </teleport>\n        </el-card>\n\n        <!-- 发送交易 -->\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Transactions</div>\n          </template>\n\n          <el-tabs v-model=\"activeTab\" type=\"border-card\" @tab-click=\"clickActiveTab\">\n            <!-- ETH -->\n            <el-tab-pane label=\"ETH\" name=\"eip155:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to Fuse)\n                  </el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send ETH)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve TONCoin)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(eth mint\n                    nft)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add SPX6900)\n                  </el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"oversized_personal_sign()\">oversized_personal_sign(about 70k, split limit 63k)\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TON\" name=\"ton:-239\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_getAccount\">ton_getAccount</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_sendTransaction\">ton_sendTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- solana -->\n            <el-tab-pane label=\"Sol\" name=\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- Sui-->\n            <el-tab-pane label=\"Sui\" name=\"sui:mainnet\">\n              <SuiPanel @generateTransactionParams=\"sui_generateTransactionParams\"/>\n            </el-tab-pane>\n            <!-- BTC -->\n            <el-tab-pane label=\"BTC\" name=\"btc:mainnet\">\n              <BTCPanel @generateTransactionParams=\"btc_generateTransactionParams\"/>\n            </el-tab-pane>\n\n            <!-- Fractal BTC -->\n            <el-tab-pane label=\"Fractal\" name=\"fractal:mainnet\">\n              <FractalPanel @generateTransactionParams=\"fractal_generateTransactionParams\"/>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Tron\" name=\"tron:mainnet\">\n              <TronTransactionPanel\n                  @generateTransactionParams=\"tron_generateTransactionParams\"\n                  @generateTransactionResult=\"tron_getTransactionResult\"/>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Aptos\" name=\"aptos:mainnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signTransaction\">aptos_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"aptos_signAndSubmitTransaction\">aptos_signAndSubmitTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Cosmos\" name=\"cosmos:cosmoshub-4\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <!-- Polygon-->\n            <el-tab-pane label=\"Polygon\" name=\"eip155:137\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send POL)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve sushi)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(polygon mint\n                    nft)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add LGNS)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_testRpc()\">wallet_testRpc(Polygon)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\"\n                  >eth_sendTransaction(转账FUSE)\n                  </el-button\n                  >\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\"\n                  >eth_sendTransaction(授权USDC)\n                  </el-button\n                  >\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- BSC-->\n            <el-tab-pane label=\"BNB\" name=\"eip155:56\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to BNB)\n                  </el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send BNB)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve POSI)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add FET)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_testRpc()\">wallet_testRpc(check balance on eth)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Fuse\" name=\"eip155:122\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_swap\">eth_sendTransaction(Swap)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Sonic testnet\" name=\"svm:70000062\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Movement\" name=\"movement:testnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"move_signTransaction\">move_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"move_signAndSubmitTransaction\">move_signAndSubmitTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n\n            <el-tab-pane label=\"osmos\" name=\"cosmos:osmosis-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"SEI\" name=\"cosmos:pacific-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Starknet\" name=\"starknet:mainnet\">\n              <StarknetPanel ref=\"starknetPanelRef\" @generateTransactionParams=\"starknet_generateTransactionParams\"\n                             @generateTransactionResult=\"starknet_getTransactionResult\"/>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TEST \" name=\"test:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"testBase64UrlSafe\">testBase64UrlSafe</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n          </el-tabs>\n\n          <el-col :xs=\"24\" :sm=\"24\" style=\"margin: 16px 0px;\">\n            <el-row style=\"align-items: center; justify-content: space-between; margin-bottom: 8px;\">\n              <el-col :span=\"4\">\n                <p style=\"font-size: 11pt; margin: 0px; text-align: start\">Redirect param (only for ETH, Polygon, BNB,\n                  Fuse)</p>\n              </el-col>\n              <el-col :span=\"9\">\n                <el-select\n                    v-model=\"redirect\"\n                    @change=\"handleRedirectSelect\"\n                    placeholder=\"Return Strategy\"\n                    :disabled=\"!canChainAddRedirectParam()\"\n                >\n                  <el-option\n                      v-for=\"strategy in returnStrategies\"\n                      :key=\"`return-strategy-select-option-${strategy}`\"\n                      :label=\"strategy\"\n                      :value=\"strategy\"\n                  />\n                </el-select>\n              </el-col>\n              <el-col :span=\"10\">\n                <el-input\n                    v-if=\"redirect === 'deeplink'\"\n                    v-model=\"redirectDeeplink\"\n                    @change=\"handleRedirectDeeplink\"\n                    placeholder=\"Deeplink\"\n                    :disabled=\"!canChainAddRedirectParam() || redirect !== 'deeplink'\"\n                    style=\"margin: 0px\"\n                />\n              </el-col>\n            </el-row>\n            <el-button\n                type=\"primary\" @click=\"addRedirectParam()\"\n                :disabled=\"!canChainAddRedirectParam() || !testTransaction\"\n            >\n              Add redirect param to data\n            </el-button>\n          </el-col>\n\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Data:</div>\n            <el-input v-model=\"testTransaction\" type=\"textarea\" :rows=\"5\" placeholder=\"sendTransactions\"></el-input>\n          </el-col>\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Result :</div>\n            <el-input v-model=\"testboc\" type=\"textarea\" :rows=\"5\" placeholder=\"boc\"></el-input>\n          </el-col>\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button type=\"primary\" :disabled=\"sendBtnDisabled\" @click=\"sendTransaction()\">{{\n                  testTransactionStr\n                }}\n              </el-button>\n            </el-col>\n          </el-row>\n        </el-card>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<style scoped>\n/* 重置全局边距和内边距 */\nbody,\nhtml {\n  margin: 0;\n  padding: 0;\n  height: 100%;\n}\n\n/* 确保 app 容器占满整个视口 */\n#app {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin: 0 auto;\n  /* 居中 */\n  max-width: 600px;\n  /* 设置最大宽度 */\n  padding: 0 20px;\n  /* 添加一些左右内边距 */\n}\n\n/* 调整 el-container 样式 */\n.el-container {\n  min-height: 100vh;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n}\n\n/* 调整 el-header 样式 */\n.el-header {\n  background-color: #333333;\n  color: white;\n  height: 50px;\n  line-height: 50px;\n  font-size: 18px;\n  font-weight: bold;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n}\n\n/* 调整 el-main 样式 */\n.el-main {\n  padding: 70px 0 20px;\n  /* 增加顶部内边距以避免被固定header遮挡 */\n  flex-grow: 1;\n}\n\n.el-card {\n  margin-bottom: 20px;\n}\n\n.info-row {\n  margin-bottom: 10px;\n}\n\n.input-label {\n  margin-bottom: 5px;\n  text-align: left;\n}\n\n.el-input {\n  margin-bottom: 10px;\n}\n\n/* 通用按钮样式 */\n.wallet-actions .el-button,\n.transaction .el-button,\n.clear-cache .el-button {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 40px;\n}\n\n.wallet-actions .el-button span,\n.transaction .el-button span,\n.clear-cache .el-button span {\n  margin: 0 auto;\n}\n\n/* 按钮行间距 */\n.wallet-actions .button-row,\n.transaction .button-row {\n  margin-bottom: 8px;\n}\n\n.wallet-actions .button-row:last-child,\n.transaction .button-row:last-child {\n  margin-bottom: 0;\n}\n\n/* 调整图标和文字的对齐 */\n.wallet-actions .el-button [class^=\"el-icon-\"],\n.transaction .el-button [class^=\"el-icon-\"],\n.clear-cache .el-button [class^=\"el-icon-\"] {\n  margin-right: 5px;\n  vertical-align: middle;\n}\n\n/* 新增：调整发送交易按钮与输入框的间距 */\n.transaction .el-row:not(:last-child) {\n  margin-bottom: 10px;\n}\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  text-align: center;\n  position: relative;\n  max-width: 90%;\n  width: 400px;\n}\n\n.close-button {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  font-size: 24px;\n  border: none;\n  background: none;\n  cursor: pointer;\n}\n\n/* 响应式调整 */\n@media (max-width: 600px) {\n  #app {\n    padding: 0 10px;\n  }\n\n  .el-main {\n    padding: 60px 0 10px;\n  }\n}\n</style>\n<script>\nimport {OKX_CONNECT_ERROR_CODES, safeJsonStringify, getAppWalletDeepLink, getUniversalLink} from \"@okxconnect/core\"\nimport {\n  OKXBtcProvider,\n  OKXUniversalProvider,\n  OKXCosmosProvider,\n  OKXTonProvider,\n  OKXTronProvider,\n  OKXStarknetProvider\n} from \"@okxconnect/universal-provider\"\nimport {OKXSolanaProvider} from \"@okxconnect/solana-provider\";\nimport {\n  Connection,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n  TransactionMessage,\n  VersionedTransaction\n} from '@solana/web3.js';\nimport {OKXSuiProvider as SuiAdapter} from \"@okxconnect/sui-provider\"\nimport QrcodeVue from 'qrcode.vue'\n\nimport {OKXAptosProvider} from \"@okxconnect/aptos-provider\";\nimport {Aptos, AptosConfig, Network} from \"@aptos-labs/ts-sdk\";\n\nimport BTCPanel from \"./components/BtcTransactionPanel.vue\";\nimport FractalPanel from \"./components/FractalTransactionPanel.vue\"\nimport SuiPanel from \"./components/SuiTransactionPanel.vue\";\nimport StarknetPanel from \"./components/StarknetTransactionPanel.vue\";\n\nimport {OKXUniversalConnectUI, THEME} from \"@okxconnect/ui\";\nimport {ethers} from 'ethers';\nimport VConsole from 'vconsole';\nimport nacl from \"tweetnacl\";\n\nconst {verifyADR36Amino} = require('@keplr-wallet/cosmos')\nconst {fromBech32} = require('@cosmjs/encoding')\nimport {verifyPersonalMessageSignature} from '@mysten/sui/verify';\nimport {useShortLink} from \"@okxconnect/core\";\nimport TronTransactionPanel from \"@/components/TronTransactionPanel.vue\";\nimport {TronWeb} from \"tronweb\";\nimport {RpcProvider as StarknetRpcProvider, Account as StarknetAccount} from \"starknet\";\nimport {ref, toRaw} from \"vue\";\n\nnew VConsole();\n\nconst allChains = {\n  1: {name: \"Eth\", checked: false},\n  56: {name: \"BNB\", checked: false},\n  137: {name: \"Polygon\", checked: false},\n  122: {name: \"Fuse\", checked: false},\n  \"ton:-239\": {name: \"TON\", checked: false},\n  \"btc:mainnet\": {name: \"BTC\", checked: false},\n  \"sui:mainnet\": {name: \"Sui\", checked: false},\n  \"aptos:mainnet\": {name: \"Aptos\", checked: false},\n  \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\": {\n    name: \"Solana\",\n    checked: false,\n  },\n  \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\": {\n    name: \"Sol testnet\",\n    checked: false,\n  },\n  \"svm:70000062\": {\n    name: \"Sonic testnet\",\n    checked: false,\n  },\n  \"movement:testnet\": {name: \"Movement\", checked: false},\n  \"fractal:mainnet\": {name: \"Fractal\", checked: false},\n  \"cosmos:osmosis-1\": {name: \"Osmos\", checked: false},\n  \"cosmos:cosmoshub-4\": {name: \"Cosmos\", checked: false},\n  \"cosmos:pacific-1\": {name: \"SEI\", checked: false},\n  \"cosmos:abvdefg\": {name: \"cosmos:abvdefg\", checked: false},\n  \"tron:mainnet\": {name: \"tron\", checked: false},\n  997865: {name: \"Non Exist chain\", checked: false},\n  2020: {name: \"Ronin\", checked: false},\n  1666600000: {name: \"Harmony\", checked: false},\n  \"starknet:mainnet\": {name: \"starknet\", checked: false}\n};\n\nconst chainsThatCanAddRedirectParam = [\n  \"eip\"\n]\n\nvar optionChains = new Set([]);\nvar selectedModals = [\"before\", \"success\", \"error\"];\nvar selectedReturnStrategy = \"none\";\nvar selectedDeepLink = \"tg://resolve\";\nvar selectedLanguage = \"en_US\";\nvar selectedTheme = THEME.LIGHT;\n\n// import QrcodeVue from 'qrcode.vue'\nexport default {\n  name: \"App\",\n  components: {\n    TronTransactionPanel,\n    QrcodeVue,\n    BTCPanel,\n    FractalPanel,\n    SuiPanel,\n    StarknetPanel\n  },\n\n  setup() {\n    const sendBtnDisabled = ref(false)\n\n    return {\n      sendBtnDisabled\n    }\n  },\n  data: () => {\n    return {\n      activeTab: \"eip155:1\",\n      testTopic: \"\",\n      testPublicKey: \"\",\n      testProofPayload: \"\",\n      tonProofValue: \"\",\n      pendingDeepLink: \"-\",\n      logList: [],\n      connectReady: false,\n      connectStatusStr: \"Connect\",\n      syncAllAddressStr: \"syncAllAddress\",\n      connectInitStr: \"init test\",\n      disconnectStatusStr: \"Disconnect\",\n      localPubKey: \"\",\n      localSecKey: \"\",\n      testTransaction: \"\",\n      selectedChain: \"eip155:1\",\n      testTransactionStr: \"Send\",\n      walletAddress: \"\",\n      testboc: \"\",\n      ProofPayloadVerify: \"\",\n      showModal: false,\n      showVerifyRow: false,\n      qrValue: \"https://www.okx.com/download\",\n      currentStatus: \"\",\n      areChainsInit: false,\n      availableChains: allChains,\n      isOptionalChecked: (chainId) => {\n        return optionChains.has(chainId);\n      },\n      withUI: localStorage.getItem(\"autoRefresh\") != \"false\",\n      universalToTG: localStorage.getItem(\"universalToTG\") != \"false\",\n      modals: selectedModals,\n      returnStrategies: [\"none\", \"back\", \"deeplink\"],\n      returnStrategy: selectedReturnStrategy,\n      deeplink: selectedDeepLink,\n      locales: [\n        \"en_US\",\n        \"ru_RU\",\n        \"zh_CN\",\n        \"zh\",\n        \"ar_AE\",\n        \"cs_CZ\",\n        \"de_DE\",\n        \"es_ES\",\n        \"es_LAT\",\n        \"fr_FR\",\n        \"id_ID\",\n        \"it_IT\",\n        \"nl_NL\",\n        \"pl_PL\",\n        \"pt_BR\",\n        \"pt_PT\",\n        \"ro_RO\",\n        \"tr_TR\",\n        \"uk_UA\",\n        \"vi_VN\",\n        \"zh_TW\"\n      ],\n      selectedMethod: [],\n      selectedMethodData: [],\n      connectMethods: [\n        \"wallet_addEthereumChain(ETH)\",\n        \"personal_sign(ETH)\",\n        \"solana_signMessage(Sol mainnet)\",\n        \"sui_signMessage(Sui mainnet)\",\n        \"sui_signPersonalMessage(Sui mainnet)\",\n        \"btc_signMessage(BTC)\",\n        \"aptos_signMessage(aptos mainnet)\",\n        \"cosmos_signArbitrary(cosmoshub)\",\n        \"test_noSupport_eth(ETH)\",\n        \"tron_signMessage\",\n        \"tron_signMessageV2\",\n        \"starknet_signMessage\",\n        \"sync_all_addresses\"\n      ],\n\n      language: selectedLanguage,\n      theme: selectedTheme,\n      THEME: THEME,\n      redirect: selectedReturnStrategy,\n      redirectDeeplink: selectedDeepLink,\n      handleWithUI: (isChecked) => {\n        localStorage.setItem(\"autoRefresh\", `${isChecked}`);\n        location.reload();\n      },\n      handleUniversalToTG: (isChecked) => {\n        localStorage.setItem(\"universalToTG\", `${isChecked}`);\n      },\n      handleOptionChange: (chainId) => {\n        if (optionChains.has(chainId)) {\n          optionChains.delete(chainId);\n        } else {\n          optionChains.add(chainId);\n        }\n      },\n      starknetPanelTypedData: ''\n    };\n  },\n  computed: {\n    getWalletAddress: function () {\n      return this.walletAddress;\n    },\n  },\n  methods: {\n    isChecked(chainId) {\n      return this.selectedChains.has(chainId);\n    },\n\n    initChains(newChains) {\n      if (newChains.length > 0) {\n        const updatedChains = Object.assign({}, this.availableChains);\n        for (const chainId of newChains) {\n          if (updatedChains[chainId]) {\n            updatedChains[chainId].checked = !updatedChains[chainId].checked;\n          }\n        }\n        this.availableChains = updatedChains;\n      }\n\n      this.areChainsInit = true;\n    },\n\n    async clickActiveTab(tab) {\n      const tabName = tab.props ? tab.props.name : tab.name;\n      this.selectedChain = tabName;\n      console.log(`已切换到链 :`, tabName);\n\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (tabName == \"starknet:mainnet\") {\n        this.sendBtnDisabled = true\n      } else {\n        this.sendBtnDisabled = false\n      }\n\n      window.provider.setDefaultChain(this.selectedChain);\n    },\n\n    async initBtnClicked() {\n      console.log(\"initBtnClickedddinitBtnClickedddinitBtnClickedddinitBtnClickedddinitBtnClickeddd\")\n      window.okxLogDebug = true\n      var initCall;\n      if (!this.withUI) {\n        initCall = OKXUniversalProvider.init({\n          dappMetaData: {\n            name: \"univer test dapp\",\n            icon: \"https://avatars.githubusercontent.com/u/37784886\",\n          },\n        });\n      } else {\n        initCall = OKXUniversalConnectUI.init({\n          dappMetaData: {\n            icon: \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\",\n            name: \"OKX WalletConnect UI Demo\",\n          },\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: 'all',\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme\n          },\n        });\n      }\n\n      initCall.then((provider) => {\n        window.provider = provider;\n        window.tonProvider = new OKXTonProvider(window.provider);\n        window.tonProvider.onStatusChange((walletInfo) => {\n              console.log('TONConnection onStatusChange:', JSON.stringify(walletInfo));\n            }, (err) => {\n              console.log('TONConnection onStatusChange error:', err);\n            }\n        )\n\n        if (window.provider instanceof OKXUniversalConnectUI) {\n          window.provider.onModalStateChange((state) => {\n            console.log(`onModalStateChange   ${JSON.stringify(state)}`)\n          })\n        }\n\n        console.log(\"init finished:\", provider);\n        console.log(\"init finished session:\", JSON.stringify(provider.session));\n\n        if (provider.session?.namespaces) {\n          const newChains = [];\n          console.log(\"namespaces\", provider.session.namespaces);\n          Object.entries(provider.session.namespaces).forEach(([key, value]) => {\n            if (key === \"eip155\") {\n              value.chains.forEach((chain) => {\n                newChains.push(parseInt(chain.substring(7)));\n              });\n            } else {\n              value.chains.forEach((chain) => {\n                newChains.push(chain);\n              });\n            }\n          });\n\n          console.log(\"existing chains:\", newChains);\n          this.initChains(newChains);\n        } else {\n          this.initChains([]);\n        }\n\n        provider.on(\"display_uri\", (uri) => {\n          if (!useShortLink()) {\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>display_uri  ==> \", uri);\n        });\n\n        provider.on(\"connect_signResponse\", (items) => {\n          console.log(\"通知>>>connect_signResponse  ==> \", JSON.stringify(items));\n          this.verifyMessage(items)\n        })\n\n        provider.on(\"short_display_uri\", (uri) => {\n          if (useShortLink()) {\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>short_display_uri  ==> \", uri);\n        });\n\n\n        provider.on(\"session_connecting\", () => {\n          console.log(\"通知>>>session_connecting  ==> \");\n        });\n\n        provider.on(\"connect\", (session) => {\n          console.log(\"通知>>>get connect session\", session);\n        });\n        provider.on(\"reconnect\", (session) => {\n          console.log(\"通知>>>get reconnect session\", session);\n          this.walletAddress = \"connected\";\n        });\n        provider.on(\"disconnect\", ({topic}) => {\n          console.log(`通知>>>get disconnect  ${topic}`);\n          this.walletAddress = \"disconnecteddddd\";\n        });\n        provider.on(\"session_delete\", ({topic}) => {\n          console.log(`通知>>>get session_delete  ${topic}`);\n        });\n        provider.on(\"session_update\", (session) => {\n          console.log(`通知>>>get session_update `, JSON.stringify(session));\n        });\n      });\n    },\n\n    async connectBtnClicked() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        this.testTonSdk();\n      } else {\n        console.log(`connectBtnClicked provider not finish init`);\n      }\n    },\n\n    async syncAllAddressClick() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        if (window.provider instanceof OKXUniversalProvider) {\n          if (window.provider.connected()) {\n            try {\n              let message = await window.provider.syncAllAddresses()\n              if (typeof message == \"string\") {\n                this.testboc = message\n              } else {\n                this.testboc = JSON.stringify(message)\n              }\n            } catch (e) {\n              this.testboc = JSON.stringify(e)\n            }\n          } else {\n            this.testboc = \"not connected\"\n          }\n        }\n\n      } else {\n        console.log(`syncAllAddress provider not finish init`);\n      }\n    },\n\n    async disconnectAction() {\n      try {\n        console.log(\"get disconnect wallet btn clicked\");\n        // await TON.disconnect();\n        var provider = window.provider;\n        await provider.disconnect();\n        this.walletAddress = \"disconnected\";\n      } catch (error) {\n        console.log(\"Disconnect  error ==>> \", error.message);\n        this.currentStatus = error.message;\n      }\n    },\n\n    async eth_requestAccounts() {\n      var data = {method: \"eth_requestAccounts\"};\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_chainId() {\n      var data = {method: \"eth_chainId\"};\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_switchEthereumChain() {\n      var data = {\n        method: \"wallet_switchEthereumChain\",\n        params: [\n          {\n            chainId: \"0x7a\"\n          }\n        ]\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_addEthereumChain() {\n      var data = {\n        method: \"wallet_addEthereumChain\",\n        params: {\n          blockExplorerUrls: [\"https://explorer.fuse.io\"],\n          chainId: \"0x7a\",\n          chainName: \"Fuse\",\n          nativeCurrency: {name: \"Fuse\", symbol: \"FUSE\", decimals: 18},\n          rpcUrls: [\"https://rpc.fuse.io\"],\n        },\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    fromAccountToAddress(account) {\n      if (!account) {\n        return \"\"\n      }\n      try {\n        let addressArr = account.split(\":\").slice(2);\n        let address = addressArr.length > 0 ? addressArr.join(\":\") : \"\";\n        return address;\n      } catch (e) {\n        return \"\"\n      }\n\n    },\n\n    requestEVMAccountWithSession(chainId) {\n      console.log(\"requestAccountWithSession >>>\", chainId);\n      if (window.provider && window.provider.session && chainId) {\n        let key = chainId.includes(\":\") ? chainId.split(\":\")[0] : chainId;\n        let namespace = window.provider.session.namespaces\n        if (key === \"eip155\") {\n          let evmNameSpace = namespace[key];\n          if (evmNameSpace && evmNameSpace.accounts) {\n            let accounts = evmNameSpace.accounts;\n            return [\n              ...new Set(\n                  accounts\n                      // get the accounts from the active chain\n                      .filter((account) => account.includes(chainId+\":\"))\n                      // remove namespace & chainId from the string\n                      .map((account) => {\n                        return this.fromAccountToAddress(account);\n                      })\n              ),\n            ];\n\n          }\n\n        }\n      }\n      return undefined\n    },\n\n    async personal_sign() {\n      if (this.selectedChain === \"eip155:1\") {\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0x1ca023f10e157d148deed210f8bee193657a1eaa7f187909e20a9dc3b071dbc364c41fde37960c05093359f410a061ec8a7dca8c0c39fc7c1e24de8a3329775d1b\n\n        var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n        var address = accounts[0];\n        console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n        var dataETH = {\n          method: \"personal_sign\",\n          params: [\n            \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n            address,\n          ],\n        };\n\n        this.testTransaction = JSON.stringify(dataETH);\n      } else if (\n          this.selectedChain === \"eip155:137\" ||\n          this.selectedChain === \"eip155:122\"\n      ) {\n        // method\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0xebda9cfa2af43999058dffa0107031d1ef7fc0252dca85dcbd22ea097af922ca39b64d509ef61ce42b7641c5840b8a80337ffd1411b13e87e2260a3f1b6c151c1b\n\n        var dataPolygon = {\n          method: \"personal_sign\",\n          params: {\n            message:\n                \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n        this.testTransaction = JSON.stringify(dataPolygon);\n      } else if (this.selectedChain === \"eip155:56\") {\n        var data = {\n          method: \"personal_sign\",\n          params: {\n            message:\n                \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n\n        this.testTransaction = JSON.stringify(data);\n      }\n    },\n\n    async eth_sendTransaction_swap() {\n      var data = {\n        method: \"eth_sendTransaction\",\n        chainId: \"eip155:122\",\n        params: {\n          value: \"0x38d7ea4c68000\",\n          gas: \"0x2665f\",\n          to: \"0xf2614A233c7C3e7f08b1F887Ba133a13f1eb2c55\",\n          from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n          data: \"0x2646478b000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00000000000000000000000000000000000000000000000000038d7ea4c68000000000000000000000000000620fd5fa44be6af63715ef4e65ddfa0387ad13f5000000000000000000000000000000000000000000000000000000000000001b000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000700301ffff0201602352A9Eb5234466Eac23E59e7B99bCaE79C39c0BE9e53fd7EDaC9F859882AfdDa116645287C629040BE9e53fd7EDaC9F859882AfdDa116645287C62900602352A9Eb5234466Eac23E59e7B99bCaE79C39c01f2F3e73be57031114dd1f4E75c1DD87658be7F0E000bb800000000000000000000000000000000\",\n        },\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async oversized_personal_sign() {\n      const payload = ``\n      if (this.selectedChain === \"eip155:1\") {\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0x1ca023f10e157d148deed210f8bee193657a1eaa7f187909e20a9dc3b071dbc364c41fde37960c05093359f410a061ec8a7dca8c0c39fc7c1e24de8a3329775d1b\n\n        var accounts = await window.provider.request(\n          { method: \"eth_requestAccounts\" },\n          \"eip155:1\"\n        );\n        var address = accounts[0];\n        console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n        var dataETH = {\n          method: \"personal_sign\",\n          params: [\n            payload,\n            address,\n          ],\n        };\n\n        this.testTransaction = JSON.stringify(dataETH);\n      } else if (\n        this.selectedChain === \"eip155:137\" ||\n        this.selectedChain === \"eip155:122\"\n      ) {\n        // method\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0xebda9cfa2af43999058dffa0107031d1ef7fc0252dca85dcbd22ea097af922ca39b64d509ef61ce42b7641c5840b8a80337ffd1411b13e87e2260a3f1b6c151c1b\n\n        var dataPolygon = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              payload,\n          },\n        };\n        this.testTransaction = JSON.stringify(dataPolygon);\n      } else if (this.selectedChain === \"eip155:56\") {\n        var data = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              payload,\n          },\n        };\n\n        this.testTransaction = JSON.stringify(data);\n      }\n    },\n\n    async eth_signTypedData_v4() {\n      // method\n      // eth_signTypedData\n      // address\n      // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n      // valid\n      // true\n      // result\n      // 0xa8bb3c6b33a119d2d567c7632195c21988df778006082742125a591f5c633f716107883a37f7de6531a6312a5f69022135bf46fe5ab77905b62c82b3395f985e1b\n      //\n\n      // var data = {\n      //   \"method\": \"eth_signTypedData_v4\",\n      //   \"params\": {\n      //     \"typedDataJson\":\"{\\\"types\\\":{\\\"EIP712Domain\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"version\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"chainId\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"name\\\":\\\"verifyingContract\\\",\\\"type\\\":\\\"address\\\"}],\\\"Person\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"wallet\\\",\\\"type\\\":\\\"address\\\"}],\\\"Mail\\\":[{\\\"name\\\":\\\"from\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"to\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"contents\\\",\\\"type\\\":\\\"string\\\"}]},\\\"primaryType\\\":\\\"Mail\\\",\\\"domain\\\":{\\\"name\\\":\\\"Ether Mail\\\",\\\"version\\\":\\\"1\\\",\\\"chainId\\\":1,\\\"verifyingContract\\\":\\\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\\\"},\\\"message\\\":{\\\"from\\\":{\\\"name\\\":\\\"Cow\\\",\\\"wallet\\\":\\\"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\\\"},\\\"to\\\":{\\\"name\\\":\\\"Bob\\\",\\\"wallet\\\":\\\"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\\\"},\\\"contents\\\":\\\"Hello, Bob!\\\"}}\"\n      // }}\n\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n      var data = {\n        method: \"eth_signTypedData_v4\",\n        params: [\n          address,\n          {\n            types: {\n              EIP712Domain: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"version\",\n                  type: \"string\",\n                },\n                {\n                  name: \"chainId\",\n                  type: \"uint256\",\n                },\n                {\n                  name: \"verifyingContract\",\n                  type: \"address\",\n                },\n              ],\n              Person: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"wallet\",\n                  type: \"address\",\n                },\n              ],\n              Mail: [\n                {\n                  name: \"from\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"to\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"contents\",\n                  type: \"string\",\n                },\n              ],\n            },\n            primaryType: \"Mail\",\n            domain: {\n              name: \"Ether Mail\",\n              version: \"1\",\n              chainId: 1,\n              verifyingContract: \"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\",\n            },\n            message: {\n              from: {\n                name: \"Cow\",\n                wallet: \"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\",\n              },\n              to: {\n                name: \"Bob\",\n                wallet: \"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\",\n              },\n              contents: \"Hello, Bob!\",\n            },\n          },\n        ],\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_sendTransaction_transfer() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            chainId: \"0x1\",\n            to: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            value: \"0x5af3107a4000\",\n            maxPriorityFeePerGas: \"0x3b9aca00\",\n            gas: \"0x5e56\",\n            maxFeePerGas: \"0x2643b9db8\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gasPrice: \"0x17003f6530\",\n            nonce: \"0x0d30\",\n            data: \"0x\",\n            value: \"0x00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasLimit: \"0x5208\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x5e56\",\n            value: \"0x5af3107a4000\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasPrice: \"0x3b9aca00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            chainId: \"0x38\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:122\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            value: \"0x0\",\n            chainId: \"0x7a\",\n          }\n        }\n      }\n\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"to\"] = address;\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_approve() {\n      var data = {};\n\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000000000000022d473030f116ddee9f6b43ac78ba3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x582d872a1b094fc48f5de31d3b73f2d9be47def1\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000f6f8096ac575b0\",\n            to: \"0x0b3F868E0BE5597D5DB7fEB59E1CADBb0fdDa50a\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            value: \"0x0\",\n            gas: \"0xe117\",\n            gasPrice: \"0xb2d05e00\",\n            data: \"0x095ea7b300000000000000000000000031c2f6fcff4f8759b3bd5bf0e1084a055615c768ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x5CA42204cDaa70d5c773946e69dE942b85CA6706\",\n          },\n        };\n      } else if (this.selectedChain === 'eip155:122') {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000000000000013b3\",\n            to: \"0x620fd5fa44BE6af63715Ef4E65DDFA0387aD13F5\",\n          },\n        };\n      }\n\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_mint() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x4cacb\",\n            data: \"0xa64dfa75000000000000000000000000ed688002f3797599db8b4feacfe8b1dda0df1c8d000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cecb15396825a895ff8da8fc2d2c77a234dccee00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f6261667962656968643737366b6177706e71336f6f6a6635693274787a76617737737164656b34616a776472637472703261366f626b70723773792f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x30795\",\n            data: \"0xa64dfa75000000000000000000000000341b3687f0309778f08f29336b2c4b9c38b9f110000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f62616679626569686a6279676b68747a71376b68377434336266686e676e793236337668766f6578716a6d6e377161716166366e717a64743777712f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      }\n\n      let str = JSON.stringify(data);\n      console.log(\"-----长度--->\", str.length);\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_testRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n          `eip155:56`,\n          `https://eth-mainnet.g.alchemy.com/v2/NxUfYJUr-TQtEpLmSXhhD5pXn70GwsyV`\n      );\n      var data = {\n        method: \"eth_getBalance\",\n        params: [\"0x8D97689C9818892B700e27F316cc3E41e17fBeb9\", \"latest\"],\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_watchAsset() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xe0f63a424a4439cbe457d80e4f4b51ad25b2c56c\",\n              symbol: \"SPX6900\",\n              image:\n                  \"https://assets.coingecko.com/coins/images/31401/standard/sticker_%281%29.jpg?1702371083\",\n              decimals: 8,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xeB51D9A39AD5EEF215dC0Bf39a8821ff804A0F01\",\n              symbol: \"LGNS\",\n              image: \"https://polygonscan.com/token/images/originlgns_32.png\",\n              decimals: 9,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0x031b41e504677879370e9dbcf937283a8691fa7f\",\n              symbol: \"FET\",\n              image: \"https://bscscan.com/token/images/fetch_32.png\",\n              decimals: 18,\n            },\n          },\n        };\n      }\n\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async ton_sendTransaction() {\n      var data = {\n        \"messages\": [{\n          \"address\": \"EQARULUYsmJq1RiZ-YiH-IJLcAZUVkVff-KBPwEmmaQGH6aC\",\n          \"amount\": \"205000000\",\n          \"payload\": \"te6cckEBAgEAhwABbQ+KfqUAAADNgG7tIEATEtAIAO87mQKicbKgHIk4pSPP4k5xhHqutqYgAB7USnesDnCcECwbgQMBAJUlk4VhgBD3JEg1TUr75iTijBghOKm/sxNDXUBl7CD6WMut0Q85x4RafwA/Es89DBXoTxuqxVFxyBbzt9Rav2HBUKl7hmkvLuKHLBCW57aK\"\n        }],\n        \"validUntil\": 1792481054,\n        \"network\": '-239'\n      }\n      this.testTransaction = JSON.stringify(data)\n    },\n    ton_getAccount() {\n      this.testTransaction = \"这里是同步获取 不再需要点击 <<发送交易>>\"\n      let result = window.tonProvider.account()\n      if (result) {\n        this.testboc = JSON.stringify(result);\n      } else {\n        this.testboc = 'null'\n      }\n    },\n\n    async tonUniversalLog() {\n      console.log(\"ton 信息: tonProvider  connected:\", window.tonProvider.connected())\n      console.log(\"ton 信息: tonProvider  account:\", JSON.stringify(window.tonProvider.account()))\n      console.log(\"ton 信息: tonProvider  wallet:\", JSON.stringify(window.tonProvider.wallet()))\n    },\n\n    async sendTransactionAlert() {\n      //\n      const response = await fetch(`https://apitest.fireverse.ai/oauth/okx/getNonce?publicAddress=0x0cecb15396825a895ff8da8fc2d2c77a234dccee`);\n      const data = await response.json();\n      console.log(\"请求数据----\", JSON.stringify(data))\n      await this.personal_sign()\n      if (confirm(\"Are you want to sign message?\")) {\n        this.sendTransaction();\n      }\n\n      // window.open(\"https://www.okx.com/download?deeplink=okx%3A%2F%2Fweb3%2Fwallet%2Fconnect\",'_self')\n    },\n\n    async sendTransaction() {\n      if (this.selectedChain.startsWith(\"aptos\")\n          || this.selectedChain.startsWith(\"movement\")\n          || this.selectedChain.startsWith(\"solana\")\n          || this.selectedChain.startsWith(\"sonic\")\n          || this.selectedChain.startsWith(\"cosmos\")) {\n        return\n      }\n      console.log(\"sendTransaction\", window.provider);\n      console.log(\"sendTransaction内容11------\", this.testTransaction);\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (this.testTransaction && window.provider) {\n        // eslint-disable-next-line no-undef\n        const sendData = JSON.parse(this.testTransaction);\n        try {\n          console.log(\"sendTransaction-----22method>>\", sendData.method);\n\n          let chainId = \"eip155:1\";\n          if (this.selectedChain) {\n            chainId = this.selectedChain;\n            console.log(\n                \"sendTransaction-----this.selectedChain>>\",\n                this.selectedChain\n            );\n          }\n          console.log(\"windowOpen[click_1]: \", Date.now());\n          if (chainId == \"sui:mainnet\") {\n            const adapter = new SuiAdapter(window.provider);\n            var suiResult = \"invalid result\";\n            if (this.currentSuiMethod == 'sui_getAccount') {\n              let result = adapter.getAccount()\n              if (typeof result == \"string\") {\n                this.testboc = result\n              } else {\n                this.testboc = JSON.stringify(result)\n              }\n            }\n            if (this.currentSuiMethod == \"sui_signTransaction\") {\n              suiResult = await adapter.signTransaction(\n                  this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signAndExecuteTransaction\") {\n              suiResult = await adapter.signAndExecuteTransaction(\n                  this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signMessage\") {\n              console.log(\"signMessage----\", this.currentSuiTransaction);\n              suiResult = await adapter.signMessage(this.currentSuiTransaction);\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_signPersonalMessage\") {\n              console.log(\n                  \"signPersonalMessage----\",\n                  this.currentSuiTransaction\n              );\n              suiResult = await adapter.signPersonalMessage(\n                  this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_testRpc\") {\n              console.log(\"test rpc----\", this.currentSuiTransaction);\n              console.log(\n                  `请求数据发送 rpc ----->> ${JSON.stringify(sendData)}`\n              );\n              const res = await window.provider.request(sendData, chainId);\n              console.log(`请求数据回调 rpc ----->> ${JSON.stringify(result)}`);\n              if (typeof res == \"string\") {\n                this.testboc = res;\n              } else {\n                this.testboc = JSON.stringify(res);\n              }\n            }\n            console.log(\"windowOpen[click_2]: \", Date.now());\n            return;\n          } else if (chainId === \"ton:-239\") {\n            console.log(\n                `请求数据发送 sendTransaction ---ton-->> ${JSON.stringify(sendData)}`\n            );\n            let result = await window.tonProvider.sendTransaction(sendData)\n            console.log(\n                `请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`\n            );\n            if (typeof result == \"string\") {\n              this.testboc = result;\n            } else {\n              this.testboc = JSON.stringify(result);\n            }\n            return\n          }\n\n          if (chainId == 'btc:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var btcResult = 'invalid result'\n\n            if (this.currentBtcMethod == 'btc_signMessage') {\n              btcResult = await btcAdapter.signMessage(chainId, this.currentBtcTransaction[\"signStr\"])\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_send') {\n              btcResult = await btcAdapter.send(chainId, this.currentBtcTransaction)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signPsbt') {\n              btcResult = await btcAdapter.signPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n\n              this.hexToBase64(btcResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentBtcMethod == 'btc_signPsbts') {\n              btcResult = await btcAdapter.signPsbts(chainId, this.currentBtcTransaction.psbtHexs, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_sendInscription') {\n              btcResult = await btcAdapter.sendInscription(chainId, this.currentBtcTransaction.address, this.currentBtcTransaction.inscriptionId, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signAndPushPsbt') {\n              btcResult = await btcAdapter.signAndPushPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_sendBitcoin') {\n              btcResult = await btcAdapter.sendBitcoin(chainId, this.currentBtcTransaction.toAddress, this.currentBtcTransaction.satoshis, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_getAccount') {\n              btcResult = btcAdapter.getAccount(chainId)\n              this.testboc = JSON.stringify(btcResult)\n            }\n\n            return\n          }\n\n          if (chainId == 'fractal:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var fractalResult = 'invalid result'\n\n            if (this.currentFractalMethod == 'fractal_signMessage') {\n              fractalResult = await btcAdapter.signMessage(chainId, this.currentFractalTransaction['signStr'])\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_send') {\n              fractalResult = await btcAdapter.send(chainId, this.currentFractalTransaction)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signPsbt') {\n              fractalResult = await btcAdapter.signPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.hexToBase64(fractalResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentFractalMethod == 'fractal_signPsbts') {\n              fractalResult = await btcAdapter.signPsbts(chainId, this.currentFractalTransaction.psbtHexs, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_sendInscription') {\n              fractalResult = await btcAdapter.sendInscription(chainId, this.currentFractalTransaction.address, this.currentFractalTransaction.inscriptionId, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signAndPushPsbt') {\n              fractalResult = await btcAdapter.signAndPushPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_sendBitcoin') {\n              fractalResult = await btcAdapter.sendBitcoin(chainId, this.currentFractalTransaction.toAddress, this.currentFractalTransaction.satoshis, this.currentFractalTransaction.options)\n\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_getAccount') {\n              fractalResult = btcAdapter.getAccount(chainId)\n              this.testboc = JSON.stringify(fractalResult)\n            }\n\n            return\n          }\n\n          console.log(`请求数据发送 sendTransaction ----->> ${JSON.stringify(sendData)}`)\n          var result = await window.provider.request(sendData, chainId)\n          console.log(`请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`)\n\n          console.log(\"windowOpen[click_3]: \", Date.now());\n          if (typeof result == \"string\") {\n            this.testboc = result;\n          } else {\n            this.testboc = JSON.stringify(result);\n          }\n          console.log(\"方法数据回调 --this.testboc--\", this.testboc);\n        } catch (error) {\n          console.error(\"方法数据回调失败 --Error--\", error.message);\n\n          if (error.code === OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n            this.testboc = error.message;\n          } else {\n            this.testboc = \"wrong signature！\" + error.message;\n          }\n        }\n      } else {\n        alert(\"Please input transaction data\");\n      }\n    },\n\n    hexToBase64(hexStr) {\n      var bytes = [];\n      for (var i = 0; i < hexStr.length; i += 2) {\n        bytes.push(parseInt(hexStr.substr(i, 2), 16));\n      }\n      const buffer = new Uint8Array(bytes)\n      const blob = new Blob([buffer]);\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = function (e) {\n          var base64Data = e.target.result.split(\",\")[1]\n          resolve(base64Data);\n        };\n        reader.onerror = function (e) {\n          reject(e);\n        };\n        reader.readAsDataURL(blob);\n      });\n    },\n    testBase64UrlSafe() {\n      let datatest = {\n        \"protocolVer\": 1,\n        \"topic\": \"8a7a4c3be73802d0ae2587123ade7bb79f27433b9aa3ca589a2208a2089eecfd\",\n        \"clientId\": \"5f1bbf9eac92160affa7ef04d0a710817ddb6d8c22ebbd6263e86f059930b404\",\n        \"requestId\": \"1731383250054\",\n        \"dAppInfo\": {\n          \"url\": \"connect.oker.vip\",\n          \"origin\": \"https://connect.oker.vip\",\n          \"name\": \"univer test dapp\",\n          \"icon\": \"https://avatars.githubusercontent.com/u/37784886\"\n        },\n        \"requests\": [{\n          \"name\": \"requestAccounts\",\n          \"requiredNamespaces\": [{\"namespace\": \"aptos\", \"chains\": [\"aptos:637\"]}],\n          \"optionalNamespaces\": [],\n          \"connectRequestMethods\": [{\n            \"chainId\": \"aptos:637\",\n            \"method\": \"aptos_signMessage\",\n            \"params\": {\n              \"data\": {\n                \"address\": true,\n                \"application\": true,\n                \"chainId\": true,\n                \"message\": \"123 中文测试!\",\n                \"nonce\": \"1234\"\n              }, \"applicationUrl\": \"https://connect.oker.vip\", \"prefix\": \"APTOS\", \"aptosChainId\": \"1\"\n            }\n          }]\n        }],\n        \"redirect\": \"none\"\n      }\n      let json = JSON.stringify(datatest)\n      const utf8Array = new TextEncoder().encode(json);\n      let binary = '';\n      utf8Array.forEach(byte => {\n        binary += String.fromCharCode(byte);\n      });\n\n      let firstStr = btoa(binary)\n      console.log(\"字符串编码1>>>>\", firstStr)\n      firstStr = firstStr.replace(/\\+/g, '-')  // 替换 '+'\n      console.log(\"字符串编码2>>>>\", firstStr)\n      firstStr = firstStr.replace(/\\//g, '_')  // 替换 '/'\n      console.log(\"字符串编码3>>>>\", firstStr)\n      firstStr = firstStr.replace(/=+$/, '');  // 移除 '=';\n      console.log(\"字符串编码4>>>>\", firstStr)\n\n      let showUrl = getUniversalLink(getAppWalletDeepLink(firstStr))\n      console.log(\"字符串编码5>>>>\", showUrl)\n      this.qrValue = showUrl;\n      this.showModal = true;\n    },\n\n\n    async testTonSdk() {\n      // 1. connect\n      //  create sub providers for each namespace/chain\n      let nameSpacesChains = [];\n      let optSpaceChains = [];\n\n      let solanaChains = [\n        \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n        \"svm:70000062\",\n      ];\n      let hasEip155, hasSolana, hasSui, hasBtc, hasAptos, hasTon, hasCosmos, hasTron, hasStarknet = false\n\n      let suiChains = [\n        \"sui:mainnet\",\n      ];\n\n      let btcChains = [\n        \"btc:mainnet\",\n        \"fractal:mainnet\"\n      ];\n\n      const chains = Object.entries(this.availableChains)\n          .filter((chain) => chain[1].checked)\n          .map((chain) => chain[0]);\n      console.log(`chains  ===> ${chains.values()}`)\n      chains.forEach(function (chainId) {\n        console.log(`chains.forEach chainId  ===> ${chainId}`)\n\n        if (solanaChains.includes(chainId)) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"ton\")) {\n          nameSpacesChains.push(chainId)\n          hasTon = true\n          return\n        }\n        if (typeof chainId == 'string' && (chainId.startsWith(\"aptos\") || chainId.startsWith(\"movement\"))) {\n          nameSpacesChains.push(chainId)\n          hasAptos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId)\n          hasSolana = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"cosmos\")) {\n          nameSpacesChains.push(chainId)\n          hasCosmos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"tron\")) {\n          nameSpacesChains.push(chainId)\n          hasTron = true\n          return\n        }\n\n        if (typeof chainId == 'string' && chainId.startsWith(\"starknet\")) {\n          nameSpacesChains.push(chainId)\n          hasStarknet = true\n          return\n        }\n\n        if (suiChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`);\n          nameSpacesChains.push(chainId);\n          hasSui = true;\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`)\n          nameSpacesChains.push(chainId)\n          hasBtc = true\n          return\n        }\n\n        hasEip155 = true\n        nameSpacesChains.push(`eip155:${chainId}`)\n      })\n\n\n      optionChains.forEach(function (chainId) {\n        if (solanaChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n        if (typeof chainId == \"string\" && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (suiChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          optSpaceChains.push(chainId)\n          return\n        }\n\n        if (chainId.startsWith('ton')) {\n          optSpaceChains.push(chainId)\n          return\n        }\n\n        optSpaceChains.push(`eip155:${chainId}`)\n      })\n\n      console.log(`namespaceChains  ===> ${JSON.stringify(nameSpacesChains)}`);\n      var connectData = {};\n      if (nameSpacesChains && nameSpacesChains.length > 0) {\n        var requireData = {};\n\n        if (hasEip155) {\n          requireData.eip155 = {\n            chains: nameSpacesChains.filter((item) =>\n                item.startsWith(\"eip155\")\n            ),\n            defaultChain: nameSpacesChains.filter((item) =>\n                item.startsWith(\"eip155\")\n            )[0],\n          };\n        }\n        if (hasSolana) {\n          requireData.solana = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"solana\") ||\n                    item.startsWith(\"sonic\") ||\n                    item.startsWith(\"svm\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"solana\") ||\n                    item.startsWith(\"sonic\") ||\n                    item.startsWith(\"svm\")\n            )[0],\n          };\n        }\n\n        if (hasCosmos) {\n          requireData.cosmos = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            )[0],\n          }\n        }\n        if (hasTron) {\n          requireData.tron = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            )[0],\n          }\n        }\n        if (hasStarknet) {\n          requireData.starknet = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"starknet\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"starknet\")\n            )[0],\n          }\n        }\n        if (hasTon) {\n\n          //\n          let tonParams = {\n            ton_addr: {\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue) {\n            tonParams = {\n              ton_addr: {\n                name: 'ton_addr',\n              },\n              ton_proof: {\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          requireData.ton = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"ton\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"ton\"))[0],\n            params: tonParams\n          };\n        }\n\n        if (hasSui) {\n          requireData.sui = {\n            chains: nameSpacesChains.filter((item) => item.startsWith(\"sui\")),\n            defaultChain: nameSpacesChains.filter((item) =>\n                item.startsWith(\"sui\")\n            )[0],\n            rpcMap: {\n              \"sui:mainnet\": \"https://www.okx.com/fullnode/sui/discover/rpc\"\n            }\n          };\n        }\n        if (hasAptos) {\n          requireData.aptos = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\"))[0]\n          }\n        }\n\n        if (hasBtc) {\n          let btcChains = nameSpacesChains.filter(item => item.startsWith(\"btc\") || item.startsWith(\"fractal\"))\n          requireData.btc = {\n            chains: btcChains,\n            defaultChain: btcChains[0]\n          }\n        }\n        console.log(`requireData  ===> ${JSON.stringify(requireData)}`)\n        connectData['namespaces'] = requireData;\n        console.log(JSON.stringify(connectData))\n      }\n\n      if (optSpaceChains && optSpaceChains.length > 0) {\n        const optData = {};\n\n        const eip155Chains = optSpaceChains.filter((item) => item.startsWith(\"eip155\"));\n        if (eip155Chains.length > 0) {\n          optData[\"eip155\"] = {\n            chains: eip155Chains,\n            defaultChain: eip155Chains[0],\n          };\n        }\n\n        const solanaChains = optSpaceChains.filter((item) => item.startsWith(\"solana\"));\n        if (solanaChains.length > 0) {\n          optData[\"solana\"] = {\n            chains: solanaChains,\n            defaultChain: solanaChains[0],\n          };\n        }\n\n        const tonChains = optSpaceChains.filter((item) => item.startsWith(\"ton\"));\n        if (tonChains.length > 0) {\n\n          let tonParams = {\n            ton_addr: {\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue) {\n            tonParams = {\n              ton_addr: {\n                name: 'ton_addr',\n              },\n              ton_proof: {\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          optData[\"ton\"] = {\n            chains: tonChains,\n            defaultChain: tonChains[0],\n            params: tonParams\n          };\n        }\n\n        const btcChains = optSpaceChains.filter((item) => item.startsWith(\"btc\"));\n        if (btcChains.length > 0) {\n          optData[\"btc\"] = {\n            chains: btcChains,\n            defaultChain: btcChains[0],\n          };\n        }\n\n        connectData[\"optionalNamespaces\"] = optData;\n      }\n\n      if (nameSpacesChains.length === 0 && optSpaceChains.length === 0) {\n        //未选择链\n        alert(\"Please select a chain from above to continue\");\n        return;\n      }\n      console.log(\"=====>connectData \");\n      console.log(connectData);\n\n      var connectMethod;\n      let signMethods = this.getCurrentSelectedMethodData();\n      if (window.provider instanceof OKXUniversalConnectUI) {\n\n        if (signMethods && signMethods.length > 0) {\n          connectMethod = window.provider.openModalAndSign(connectData, JSON.parse(JSON.stringify(signMethods)));\n        } else {\n          connectMethod = window.provider.openModal(connectData);\n        }\n      } else {\n        if (this.universalToTG) {\n          connectData.sessionConfig = {\n            useMini: true,\n            openUniversalUrl: true,\n            tmaReturnUrl: 'back'\n          }\n        } else {\n          connectData.sessionConfig = {\n            redirect: selectedReturnStrategy\n          }\n        }\n        if (signMethods && signMethods.length > 0) {\n          connectMethod = window.provider.connectAndSign(connectData, JSON.parse(JSON.stringify(signMethods)));\n        } else {\n          connectMethod = window.provider.connect(connectData);\n        }\n      }\n\n      await connectMethod\n          .then((result) => {\n            // 2. set defaul chain\n            this.walletAddress = \"connected\";\n            if (this.isPC()) {\n              this.showModal = false;\n            }\n            if (result) {\n              this.testboc = JSON.stringify(result)\n            }\n\n            if (window.provider.session && window.provider.session.namespaces) {\n              let ton = window.provider.session.namespaces[\"ton\"];\n              console.log(\"是否包含ton\", ton)\n              if (ton) {\n                this.tonUniversalLog()\n              }\n            }\n          })\n          .catch((error) => {\n            if (error.code == 301) {\n              setTimeout(() => {\n                alert(error.message)\n              }, 0.5);\n            } else if (error.message) {\n              alert(error.message)\n            }\n            console.error(\"发生了错误：\", error);\n          });\n    },\n\n    getCurrentSelectedMethodData() {// 连接签名\n      var methodList = [];\n      this.selectedMethod.forEach(method => {\n        switch (method) {\n          case \"wallet_addEthereumChain(ETH)\":\n            methodList.push({\n              method: \"wallet_addEthereumChain\",\n              chainId: \"eip155:1\",\n              params: {\n                blockExplorerUrls: [\"https://explorer.fuse.io\"],\n                chainId: \"0x7a\",\n                chainName: \"Fuse\",\n                nativeCurrency: {name: \"Fuse\", symbol: \"FUSE\", decimals: 18},\n                rpcUrls: [\"https://rpc.fuse.io\"],\n              },\n            })\n            break;\n          case \"personal_sign(ETH)\":\n            methodList.push(\n                {\n                  method: \"personal_sign\",\n                  chainId: \"eip155:1\",\n                  params: [\n                    \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n                  ],\n                });\n            break;\n          case \"solana_signMessage(Sol mainnet)\":\n            methodList.push(\n                {\n                  \"chainId\": \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n                  \"method\": \"solana_signMessage\",\n                  \"params\": {\n                    \"message\": \"Hello Solana\",\n                  }\n                }\n            );\n            break;\n          case \"sui_signMessage(Sui mainnet)\":\n          case \"sui_signPersonalMessage(Sui mainnet)\": {\n            let suiData = [\n              76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n              109, 111, 118, 101,\n            ];\n            let uint8Array = new Uint8Array(suiData);\n            let currentMethod = \"sui_signMessage\";\n            this.currentSuiTransaction = {\n              message: uint8Array\n            }\n\n            if (method.startsWith(\"sui_signPersonalMessage\")) {\n              currentMethod = \"sui_signPersonalMessage\";\n            }\n            methodList.push(\n                {\n                  method: currentMethod,\n                  chainId: \"sui:mainnet\",\n                  params: {\n                    message: uint8Array,\n                  }\n                }\n            );\n            break;\n          }\n          case \"btc_signMessage(BTC)\":\n            methodList.push(\n                {\n                  method: \"btc_signMessage\",\n                  chainId: \"btc:mainnet\",\n                  params: {\n                    message: \"Welcome to BTC\"\n                  }\n                }\n            )\n            break;\n          case \"aptos_signMessage(aptos mainnet)\":\n            methodList.push(\n                {\n                  \"chainId\": \"aptos:mainnet\",\n                  \"method\": \"aptos_signMessage\",\n                  \"params\": {\n                    address: true,\n                    application: true,\n                    chainId: true,\n                    message: \"Hello Aptos\",\n                    nonce: \"1234\"\n                  }\n                }\n            )\n            break;\n          case \"cosmos_signArbitrary(cosmoshub)\":\n            methodList.push(\n                {\n                  \"chainId\": \"cosmos:cosmoshub-4\",\n                  \"method\": \"cosmos_signArbitrary\",\n                  \"params\": {\n                    message: \"test cosmos\"\n                  }\n                }\n            )\n\n            break;\n          case \"test_noSupport_eth(ETH)\":\n            methodList.push(\n                {\n                  chainId: \"eip155:1\",\n                  method: \"test_noSupport_eth\",\n                  params: {\n                    message: \"test hello\",\n                  }\n                }\n            )\n            break;\n          case \"sync_all_addresses\":\n            methodList.push(\n                {\n                  method: \"sync_all_addresses\",\n                });\n            break;\n          case \"tron_signMessage\":\n            methodList.push(\n                {\n                  chainId: \"tron:mainnet\",\n                  method: \"tron_signMessage\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n          case \"tron_signMessageV2\":\n            methodList.push(\n                {\n                  chainId: \"tron:mainnet\",\n                  method: \"tron_signMessageV2\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n\n            //\n          case \"starknet_signMessage\": {\n            const signData = {\n              \"domain\": {\n                \"chainId\": \"0x534e5f4d41494e\",\n                \"name\": \"STRKFarm\",\n                \"version\": \"1\"\n              },\n              \"message\": {\n                \"document\": \"app.strkfarm.xyz/tnc/v1\",\n                \"message\": \"Read and Agree T&C\"\n              },\n              \"primaryType\": \"Tnc\",\n              \"types\": {\n                \"StarkNetDomain\": [\n                  {\n                    \"name\": \"name\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"version\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"chainId\",\n                    \"type\": \"felt\"\n                  }\n                ],\n                \"Tnc\": [\n                  {\n                    \"name\": \"message\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"document\",\n                    \"type\": \"felt\"\n                  }\n                ]\n              }\n            }\n            methodList.push({\n              chainId: \"starknet:mainnet\",\n              method: \"starknet_signMessage\",\n              params: {\n                accountAddress: \"\",\n                typedData: signData\n              }\n            })\n          }\n            break\n          default:\n\n            break;\n        }\n      })\n      this.selectedMethodData = methodList\n      return methodList\n\n    },\n\n    closeModal() {\n      this.showModal = false;\n    },\n\n    isPC() {\n      const userAgentInfo = navigator.userAgent;\n      console.log(\"current device ua is ===>\", userAgentInfo);\n\n      const Agents = [\n        \"Android\",\n        \"iPhone\",\n        \"SymbianOS\",\n        \"Windows Phone\",\n        \"iPad\",\n        \"iPod\",\n      ];\n      let flag = true;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = false;\n          break;\n        }\n      }\n      return flag;\n    },\n    isSafariOrChrome() {\n      const userAgentInfo = navigator.userAgent;\n      const Agents = [\"Safari\", \"Chrome\"];\n      let flag = false;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = true;\n          break;\n        }\n      }\n      return flag;\n    },\n\n    /// solana\n    async sol_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      try {\n        let data = {\n          method: \"solana_signMessage\",\n          params: {\n            message: \"Hello Solana\",\n            pubkey: \"\",\n          },\n        };\n        this.testTransaction = JSON.stringify(data);\n        let provider = new OKXSolanaProvider(window.provider);\n\n        let message = await provider.signMessage(\n            \"Hello Solana\",\n            this.selectedChain\n        );\n        console.log(\"solana_signMessage Result:\", JSON.stringify(message))\n        const result1 = nacl.sign.detached.verify(\n            new TextEncoder().encode(\"Hello Solana\"),\n            message.signature,\n            new PublicKey(message.publicKey).toBytes()\n        );\n        console.log(result1)\n\n        if (typeof message == \"string\") {\n          this.testboc = result1;\n        } else {\n          this.testboc = result1;\n        }\n      } catch (e) {\n        console.log(\"solana_signMessage error:\", JSON.stringify(e))\n        this.testboc = e.message\n      }\n\n    },\n\n    async aptos_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      let data = {\n        address: true,\n        application: true,\n        chainId: true,\n        message: \"Hello Aptos\",\n        nonce: \"1234\"\n      }\n\n      let provider = new OKXAptosProvider(window.provider)\n      let message = await provider.signMessage(data, this.selectedChain)\n      this.testTransaction = JSON.stringify(data)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n          functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n          functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        },\n      });\n\n      // let data = {\n      //   \"arguments\": [\"100000\",[\"0\",\"0\",\"10533\"],[\"10\",\"5\",\"5\"],[\"false\",\"false\",\"true\"]],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x3\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\",\"0x73eb84966be67e4697fc5ae75173ca6c35089e802650f75422ab49a8729704ec::coin::DooDoo\",\"0x53a30a6e5936c0a4c5140daed34de39d17ca7fcae08f947c02e979cef98a3719::coin::LSD\",\"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::CurveV1\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x54cb0bb2c18564b86e34539b9f89cfe1186e39d89fce54e1cd007b8e61673a85::bin_steps::X80\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async sol_signVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(\n          provider.getAccount(\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\").address\n      );\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signTransaction(\n          transaction,\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAndSendVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n          transaction,\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllVersionedTransactions() {\n      let provider = new OKXSolanaProvider(window.provider);\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n          [transaction],\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signTransaction() {\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: 1000,\n          })\n      );\n\n      this.testTransaction = safeJsonStringify(transaction)\n      let result = await provider.signTransaction(\n          transaction,\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllTransactions() {\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n          [transaction],\n          this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    getSolConnect() {\n      let rpc = \"https://www.okx.com/fullnode/sol/discover/rpc\"\n      if (this.selectedChain === \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\") {\n        rpc = \"https://www.okx.com//fullnode/sol/discover/rpc\"\n      } else if (this.selectedChain === \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\") {\n        rpc = \"https://www.okx.com/fullnode/soltestnet/discover/rpc\"\n      } else if (this.selectedChain === \"svm:70000062\") {\n        rpc = \"https://www.okx.com/fullnode/sonic/testnet/discover/rpc\"\n      }\n      return rpc\n    },\n\n    async sol_signAndSendTransaction() {\n\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n          transaction,\n          this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async cosmos_signArbitrary() {\n      let provider = new OKXCosmosProvider(window.provider)\n      let message = await provider.signArbitrary(this.selectedChain, provider.getAccount(this.selectedChain).address, \"test cosmos\")\n      if (typeof message == \"string\") {\n        this.testboc = message;\n      } else {\n        let isValid = await this.cosmos_verifySignArbitrary(provider.getAccount(this.selectedChain).address, \"test cosmos\", message.signature, message.pub_key.value)\n        console.log(\"verify\", isValid)\n        this.testboc = \"verify:\" + isValid + JSON.stringify(message);\n      }\n    },\n\n    async cosmos_verifySignArbitrary(signer, data, signature, pubkey) {\n      try {\n        console.log(\"cosmos_verifySignArbitrary signer:\", signer)\n        console.log(\"cosmos_verifySignArbitrary data:\", JSON.stringify(data))\n        console.log(\"cosmos_verifySignArbitrary signature:\", signature)\n        console.log(\"cosmos_verifySignArbitrary pubkey:\", pubkey)\n\n        // 将bech32地址转换为公钥\n        const {prefix: prefixStr} = fromBech32(signer)\n\n        const signatureBuffer = Buffer.from(signature, 'base64');\n\n        const uint8Signature = new Uint8Array(signatureBuffer); // Convert the buffer to an Uint8Array\n\n        const pubKeyValueBuffer = Buffer.from(pubkey, 'base64'); // Decode the base64 encoded value\n\n        const pubKeyUint8Array = new Uint8Array(pubKeyValueBuffer); // Convert the buffer to an Uint8Array\n\n        // 验证签名\n        return await verifyADR36Amino(\n            prefixStr,\n            signer,\n            data,\n            pubKeyUint8Array,\n            uint8Signature\n        )\n      } catch (err) {\n        console.error('Verification failed:', err)\n        return false\n      }\n    },\n\n    async cosmos_signAmino() {\n      let provider = new OKXCosmosProvider(window.provider)\n      // const rpcUrl = 'https://osmosis-rpc.publicnode.com:443';\n      // const client = await StargateClient.connect(rpcUrl);\n      // const height = await client.getHeight();\n      // let address = provider.getAccount(this.selectedChain).address\n      // const sequence = await client.getSequence(address)\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      // let signDoc = makeSignDoc(\n      //     transaction.msgs,\n      //     transaction.fee,\n      //     this.selectedChain.split(\":\")[1],\n      //     transaction.memo,\n      //     transaction.accountNumber,\n      //     transaction.sequence,\n      // )\n      let signDoc = {\n        \"chain_id\": \"osmosis-1\",\n        \"account_number\": \"630104\",\n        \"sequence\": \"480\",\n        \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]},\n        \"msgs\": [{\n          \"type\": \"osmosis/poolmanager/swap-exact-amount-in\",\n          \"value\": {\n            \"sender\": \"osmo1u6lts9ng4etxj0zdaxsada6zgl8dudpgelmuyu\",\n            \"routes\": [{\n              \"pool_id\": \"1096\",\n              \"token_out_denom\": \"ibc/987C17B11ABC2B20019178ACE62929FE9840202CE79498E29FE8E5CB02B7C0A4\"\n            }, {\n              \"pool_id\": \"611\",\n              \"token_out_denom\": \"ibc/27394FB092D2ECCD56123C74F36E4C1F926001CEADA9CA97EA622B25F41E5EB2\"\n            }],\n            \"token_in\": {\"denom\": \"uosmo\", \"amount\": \"100\"},\n            \"token_out_min_amount\": \"8\"\n          }\n        }],\n        \"memo\": \"FE\",\n        \"timeout_height\": \"23603788\",\n        \"signOptions\": {\n          \"useOneClickTrading\": false,\n          \"preferNoSetFee\": true,\n          \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]}\n        }\n      }\n\n\n      // let signOption = {\n      //   memo: true, // optional\n      //   fee: true, // optional\n      //   gasRate: {\n      //     // optional\n      //     average: \"0.2\",\n      //     low: \"0.02\",\n      //     tiny: \"0.002\",\n      //   },\n      // }\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signAmino(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, signDoc)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    messageToBuffer(message) {\n      var buffer = Buffer.from([]);\n      try {\n        if (typeof message === \"string\") {\n          buffer = Buffer.from(message.replace(\"0x\", \"\"), \"hex\");\n        } else {\n          buffer = Buffer.from(message);\n        }\n      } catch (err) {\n        console.log(`messageToBuffer error: ${err}`);\n      }\n      return buffer;\n    },\n\n\n    async cosmos_signDirect() {\n      let provider = new OKXCosmosProvider(window.provider)\n\n      let signDoc = {\n        \"bodyBytes\": this.messageToBuffer(\"0x0ac1010a292f6962632e6170706c69636174696f6e732e7472616e736665722e76312e4d73675472616e736665721293010a087472616e7366657212096368616e6e656c2d301a0d0a05756f736d6f120431303030222b6f736d6f3175366c7473396e67346574786a307a64617873616461367a676c386475647067656c6d7579752a2d636f736d6f733175366c7473396e67346574786a307a64617873616461367a676c386475647067337967766a773207080410ebe3f90a3880b0bcafd18cec8218\"),\n        \"authInfoBytes\": this.messageToBuffer(\"0x0a510a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a2102446e19e94ac0e83ea896d2712507577eb39fbdd2d6ae9f0fc0b9759f1fbaba9012040a02080118e00312140a0e0a05756f736d6f1205323530303010859a11\"),\n        \"chainId\": \"osmosis-1\",\n        \"accountNumber\": \"630104\",\n      }\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signDirect(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, transaction)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    sui_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentSuiTransaction = params\n      this.currentSuiMethod = flag\n    },\n\n    btc_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentBtcTransaction = params\n      this.currentBtcMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n\n    fractal_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentFractalTransaction = params\n      this.currentFractalMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n    tron_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n    tron_generateTransactionParams(params) {\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n\n    starknet_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n\n    starknet_generateTransactionParams(params) {\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n\n    handleModalsSelect(modals) {\n      selectedModals = modals;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: modals.length === 3 ? \"all\" : modals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n\n    handleReturnStrategySelect(returnStrategy) {\n      selectedReturnStrategy = returnStrategy === \"deeplink\" ? this.deeplink : returnStrategy;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = selectedReturnStrategy;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: selectedReturnStrategy\n          };\n        }\n      }\n    },\n\n    handleReturnStrategyDeeplink(deeplink) {\n      console.log('handleReturnStrategyDeeplink', deeplink)\n      selectedReturnStrategy = deeplink;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: deeplink,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = deeplink;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: deeplink\n          };\n        }\n      }\n    },\n\n    handleLanguageSelect(language) {\n      selectedLanguage = language;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: language,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n    handleConnectMethodsSelect() {\n      console.log(\"当前的方法 this.selectedMethod>>>>\", this.selectedMethod);\n    },\n\n    eth_verifyMessage(message, signature, ethAddress) {\n      console.log(\"eth_verifyMessage   message>>>\", message)\n      console.log(\"eth_verifyMessage   signature>>>\", signature)\n      console.log(\"eth_verifyMessage   ethAddress>>>\", ethAddress)\n      if (!message || !signature) {\n        return \"\"\n      }\n      let originalMessage = message\n      if (message.startsWith(\"0x\")) {\n        originalMessage = originalMessage.replace(/^0x/, '');\n        let str = '';\n        for (let i = 0; i < originalMessage.length; i += 2) {\n          const byte = originalMessage.slice(i, i + 2);\n          str += String.fromCharCode(parseInt(byte, 16));\n        }\n        originalMessage = str\n      }\n      console.log(\"eth_verifyMessage   originalMessage>>>\", originalMessage)\n\n      // const messageHash = ethers.utils.hashMessage(originalMessage);\n      const recoveredAddress = ethers.utils.verifyMessage(originalMessage, signature);\n      console.log(\"eth_verifyMessage recoveredAddress:\", recoveredAddress);\n      return recoveredAddress.toLowerCase() === ethAddress.toLowerCase();\n    },\n\n    async verifyMessage(list) { //连接验签\n\n      if (window.provider && window.provider.session && list && list.length > 0) {\n        let verifyList = {}\n        for (let methodItem of list) {\n          if (\"result\" in methodItem && \"method\" in methodItem) {\n            let requestItme = this.selectedMethodData.filter(item => item.method === methodItem.method)[0];\n            console.log(\"验证签名 请求>>>:\", JSON.stringify(requestItme));\n            console.log(\"验证签名 结果>>>:\", JSON.stringify(methodItem));\n            if (methodItem.method === \"personal_sign\") {\n              let ethAddress = this.requestEVMAccountWithSession(methodItem.chainId)\n              ethAddress = ethAddress[0];\n              console.log(\"验证eth 钱包地址>>>:\", ethAddress);\n              let ethMessage = requestItme.params[0]\n              console.log(\"验证eth 签名消息体>>:\", JSON.stringify(ethMessage));\n              verifyList[methodItem.method] = this.eth_verifyMessage(ethMessage, methodItem.result, ethAddress)\n            } else if (methodItem.method === \"solana_signMessage\") {\n              let solanaMessage = methodItem.result\n              if (\"signature\" in solanaMessage && \"publicKey\" in solanaMessage) {\n                const verifySol = nacl.sign.detached.verify(\n                    new TextEncoder().encode(\"Hello Solana\"),\n                    solanaMessage.signature,\n                    new PublicKey(solanaMessage.publicKey).toBytes()\n                );\n                verifyList[methodItem.method] = verifySol\n              } else {\n                verifyList[methodItem.method] = false\n              }\n            } else if (methodItem.method === \"sui_signPersonalMessage\" || methodItem.method === \"sui_signMessage\") {\n              let suiResult = this.sui_verifySignature(methodItem.result);\n              verifyList[methodItem.method] = (await suiResult).result\n            } else if (methodItem.method === \"btc_signMessage\") {\n\n              verifyList[methodItem.method] = \"Not verified yet\"\n\n            } else if (methodItem.method === \"aptos_signMessage\") {\n              let aptosMessage = methodItem.result\n              let aptosProvider = new OKXAptosProvider(window.provider)\n              let aptosPublicKey = aptosProvider.getAccount(methodItem.chainId)?.publicKey\n\n              let signStr = aptosMessage.signature\n              if (signStr.startsWith(\"0x\")) {\n                signStr = signStr.slice(2, signStr.length)\n              }\n\n              console.log(\"aptos_signMessage aptosPublicKey And signStr\", aptosPublicKey, signStr)\n              verifyList[methodItem.method] = nacl.sign.detached.verify(\n                  Buffer.from(aptosMessage.fullMessage),\n                  Buffer.from(signStr, 'hex'),\n                  Buffer.from(aptosPublicKey, 'hex'),\n              );\n            } else if (methodItem.method === \"cosmos_signArbitrary\") {\n              let cosmosProvider = new OKXCosmosProvider(window.provider)\n              let cosmosAddress = cosmosProvider.getAccount(methodItem.chainId)?.address\n              let cosmosMessage = methodItem.result\n              let isValid = await this.cosmos_verifySignArbitrary(cosmosAddress, \"test cosmos\", cosmosMessage.signature, cosmosMessage.pub_key.value)\n              verifyList[methodItem.method] = isValid\n\n            } else if (methodItem.method === \"tron_signMessage\") {\n              let tronMessage = methodItem.result\n              let tronWeb = new TronWeb({\n                \"fullHost\": 'https://api.trongrid.io',\n                \"headers\": {},\n                \"privateKey\": ''\n              })\n              let provider = new OKXTronProvider(window.provider)\n              verifyList[methodItem.method] = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), tronMessage, provider.getAccount(\"tron:mainnet\").address)\n            } else if (methodItem.method === \"tron_signMessageV2\") {\n              let tronMessage = methodItem.result\n              let tronWeb = new TronWeb({\n                \"fullHost\": 'https://api.trongrid.io',\n                \"headers\": {},\n                \"privateKey\": ''\n              })\n              const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", tronMessage);\n              let provider = new OKXTronProvider(window.provider)\n\n              verifyList[methodItem.method] = base58Address === provider.getAccount(\"tron:mainnet\").address\n            } else if (methodItem.method === \"starknet_signMessage\") {\n              let res = methodItem.result\n              let signData = this.starknetPanelTypedData\n\n              const rpcProvider = new StarknetRpcProvider({nodeUrl: \"https://free-rpc.nethermind.io/mainnet-juno/v0_7\"});\n\n              let provider = new OKXStarknetProvider(window.provider)\n              let address = provider.getAccount(\"starknet:mainnet\").address\n              let pk = \"0x123\"; /// random pk\n              const account = new StarknetAccount(rpcProvider, address, pk)\n\n              let that = this\n              account.verifyMessage(signData, res).then(function (isValid) {\n                that.testTransaction = `Verifyed result: \\n${isValid}`\n              }).catch(function (error) {\n                that.testTransaction = `Verifyed failed: \\n${error}`\n              })\n              verifyList[methodItem.method] = \"starknet is verifying signature...\"\n            } else {\n              verifyList[methodItem.method] = \"Not verified yet\"\n\n            }\n          } else if (\"method\" in methodItem && \"error\" in methodItem) {\n            verifyList[methodItem.method] = methodItem.error\n          }\n\n        }\n\n        console.log(\"验证签名 最后的结果>>>:\", JSON.stringify(verifyList));\n        this.testTransaction = \"签名验证结果如下: \\n\" + JSON.stringify(verifyList)\n      } else {\n        console.log(\"验证签名 window.provider.session.connectMethodsReply 为空:\");\n\n      }\n\n    },\n\n    handleThemeSelect(theme) {\n      selectedTheme = theme;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: theme,\n          },\n        };\n      }\n    },\n\n    async sui_verifySignature(signatureResult) {\n      let resultObj = signatureResult\n      let result = false\n      let msg = ''\n      try {\n        /// 获取当前account\n        const adapter = new SuiAdapter(window.provider);\n        let account = adapter.getAccount()\n        console.log(`Account中获取的address：${account.address}`)\n\n        /// 验证签名\n        let pubKey = await verifyPersonalMessageSignature(this.currentSuiTransaction.message, resultObj.signature)\n        let address = pubKey.toSuiAddress()\n        console.log(`验签结果计算得到address：${address}`)\n\n        /// 对比pubKey\n        console.log(`account pubkey: ${account.publicKey}`,)\n        console.log(`result pubkey: ${pubKey.toBase64()}`)\n        result = (account.address === address) && (account.publicKey === pubKey.toBase64())\n\n        msg = `address verify: ${account.address === address}\\npublicKey verify: ${account.publicKey === pubKey.toBase64()}`\n        console.log(\"signature verify success: \", pubKey)\n      } catch (e) {\n        console.log(\"signature verify failed: \", e)\n      }\n      return {\n        result,\n        msg\n      }\n    },\n\n\n    handleRedirectSelect(input) {\n      this.redirect = input;\n    },\n\n    handleRedirectDeeplink(input) {\n      this.redirectDeeplink = input;\n    },\n\n    addRedirectParam() {\n      if (this.testTransaction) {\n        const newTransaction = JSON.parse(this.testTransaction);\n        newTransaction.redirect = this.redirect === 'deeplink' ? this.redirectDeeplink : this.redirect;\n        this.testTransaction = JSON.stringify(newTransaction);\n      }\n    },\n\n    canChainAddRedirectParam() {\n      return chainsThatCanAddRedirectParam.some((c) => this.selectedChain.startsWith(c));\n    }\n  },\n  created() {\n    // for (const eventName of Object.values(OKX_TON_CONNECTION_AND_TRANSACTION_EVENT)) {\n    //   console.log(eventName);\n    //   window.addEventListener(eventName, (event) => {\n    //     console.log(eventName,event.detail)\n    //     this.currentStatus = eventName\n    //   });\n    // }\n  },\n\n  mounted() {\n\n    var scriptTag = document.createElement(\"script\");\n    scriptTag.src = \"https://telegram.org/js/telegram-web-app.js\";\n    scriptTag.id = \"tgsdk\";\n    document.getElementsByTagName('head')[0].appendChild(scriptTag);\n\n    this.connectReady = true;\n    document.title = \"OKX Connect\";\n    this.initBtnClicked()\n    this.initBtnClicked()\n\n    console.log(\"挂载成功:\")\n    if (this.$refs.starknetPanelRef) {\n      this.starknetPanelTypedData = toRaw(this.$refs.starknetPanelRef.signData)\n      console.log(\"111: \", this.starknetPanelTypedData)\n    } else {\n      console.log(\"222\")\n    }\n  },\n};\n</script>\n","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_getAccount()\">getAccount(BTC)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signMessage()\">signMessage(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_send()\">send(BTC)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendBitcoin()\">sendBitcoin(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signPsbt_up()\">signPsbt(上架NFT)</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"btc_signAndPushPsbt_up()\">signAndPushPsbt(上架NFT)</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在OKX App选择要上架的Btc NFT，点击【上架】\n        </li>\n        <li>\n          2. 弹出签名面板，点开高级选项，查看\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出上架流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendInscription()\">sendInscription(BTC)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Btc NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount\n    }\n  },\n  methods: {\n\n    btc_getAccount() {\n      this.$emit('generateTransactionParams', {}, \"btc_getAccount\")\n    },\n\n    btc_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to BTC\"\n      };\n      this.$emit('generateTransactionParams', params, \"btc_signMessage\")\n    },\n\n    btc_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"btc_send\")\n    },\n\n    btc_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"btc_sendBitcoin\")\n    },\n\n    btc_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"btc_signPsbt\")\n    },\n\n    btc_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"btc_signAndPushPsbt\")\n    },\n\n    btc_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"btc_sendInscription\")\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./BtcTransactionPanel.vue?vue&type=template&id=376d03bc&scoped=true\"\nimport script from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./BtcTransactionPanel.vue?vue&type=style&index=0&id=376d03bc&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-376d03bc\"]])\n\nexport default __exports__","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_getAccount()\">getAccount(Fractal)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signMessage()\">signMessage(Fractal)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_send()\">send(Fractal)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_sendBitcoin()\">sendBitcoin(Fractal)</el-button>\n\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signPsbt_up()\">signPsbt(上架NFT)</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_signAndPushPsbt_up()\">signAndPushPsbt(上架NFT)</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在OKX App选择要上架的Fractal NFT，点击【上架】\n        </li>\n        <li>\n          2. 弹出签名面板，点开高级选项，查看\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出上架流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_sendInscription()\">sendInscription(Fractal)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Fractal NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount\n    }\n  },\n  methods: {\n\n    fractal_getAccount() {\n      this.$emit('generateTransactionParams', {}, \"fractal_getAccount\")\n    },\n\n    fractal_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to UniSat!\\n\\nClick to sign in and accept the UniSat Terms of Service (https://unisat.io/terms-of-service.html) and Privacy Policy (https://unisat.io/privacy-policy.html).\\n    \\nThis request will not trigger a blockchain transaction.\\n    \\nYour authentication status will reset after 24 hours.\\n    \\nWallet address:\\nbc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\\n    \\nNonce:\\n162d70e3-8c21-4cfd-9a22-9bf0a4b7be51\\n\"\n      };\n      this.$emit('generateTransactionParams', params, \"fractal_signMessage\")\n    },\n\n    fractal_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_send\")\n    },\n\n    fractal_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_sendBitcoin\")\n    },\n\n    fractal_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"fractal_signPsbt\")\n    },\n\n    fractal_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"fractal_signAndPushPsbt\")\n    },\n\n    fractal_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"fractal_sendInscription\")\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./FractalTransactionPanel.vue?vue&type=template&id=fb2f7e38&scoped=true\"\nimport script from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./FractalTransactionPanel.vue?vue&type=style&index=0&id=fb2f7e38&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-fb2f7e38\"]])\n\nexport default __exports__","<script>\n\nimport {getFullnodeUrl, SuiClient} from \"@mysten/sui/client\";\nimport {Transaction as SuiTransaction} from '@mysten/sui/transactions';\n\nexport default {\n  name: \"SuiTransactionPanel\",\n  methods: {\n    sui_getAccount() {\n      this.$emit('generateTransactionParams', '', \"sui_getAccount\")\n    },\n\n    //对单个交易签名（不发送)\n    async sui_signMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signMessage\")\n    },\n\n    async sui_signPersonalMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signPersonalMessage\")\n    },\n\n    sui_signTransaction2() {\n      // 定义要转移的金额和目标地址\n      const amount = 109; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    async sui_requestRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n          `sui:mainnet`,\n          `https://fullnode.mainnet.sui.io:443`\n      );\n      var data = {\n        method: \"suix_getBalance\",\n        params: [\n          \"0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae\",\n          \"0x168da5bf1f48dafc111b0a488fa454aca95e0b5e::usdc::USDC\",\n        ],\n      };\n\n      this.$emit(\"generateTransactionParams\", data, \"sui_testRpc\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 102; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signAndExecuteTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n      this.$emit(\"generateTransactionParams\", input, \"sui_signAndExecuteTransaction\")\n    },\n\n    /// generate txBytes and txSerialize\n    async generateTsBytesAndSerizlize(input) {\n      /// txBytes and txSerialize may be constructed in advance by the dapp side\n      let resultTuple = [\"\", \"\"];\n      if (\n          \"txBytes\" in input &&\n          input.txBytes.length > 0 &&\n          \"txSerialize\" in input &&\n          input.txSerialize.length > 0\n      ) {\n        resultTuple = [input.txBytes, input.txSerialize];\n      }\n\n      /// Otherwise, a transactionBlock parameter is required.\n      if (!(\"transactionBlock\" in input)) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      // if (this.walletAddress != \"connected\") {\n      //   alert(\"请先连接钱包\");\n      //   return new Promise((resolve) => {\n      //     resolve(resultTuple);\n      //   });\n      // }\n\n      let senderAccounts = window.provider.requestAccountsWithNamespace(\"sui\");\n      if (senderAccounts.length == 0) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      try {\n        let rpcUrl = getFullnodeUrl(\"mainnet\");\n        rpcUrl = \"https://www.okx.com/fullnode/sui/discover/rpc\"\n        const suiClient = new SuiClient({ url: rpcUrl });\n\n        /// sender is required\n        input.transactionBlock.setSender(senderAccounts[0]);\n        const result = await input.transactionBlock.build({\n          client: suiClient,\n        });\n        const txBytes = Buffer(result).toString(\"base64\");\n        const txSerialize = await SuiTransaction.from(txBytes).toJSON();\n        resultTuple = [txBytes, txSerialize];\n      } catch (error) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      return new Promise((resolve) => {\n        resolve(resultTuple)\n      })\n    },\n\n    //签名并发送交易\n    sui_signAndExecuteTransaction() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n        \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.testTransaction = JSON.stringify(input);\n      this.currentSuiTransaction = input;\n      this.currentSuiMethod = \"sui_signAndExecuteTransaction\";\n    },\n  },\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_getAccount()\">getAccount(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signMessage()\">signMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signPersonalMessage()\">signPersonalMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signTransaction2()\">signTransaction(Sui)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signAndExecuteTransaction()\">sendTransaction(Sui)</el-button>\n      <div style=\"font-size: 12px; color: gray;\">(send to Rally Tiger account)</div>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_requestRpc()\">RPC_getBalance</el-button>\n      <div style=\"font-size: 12px; color: gray;\">get USDC balance of address:</div>\n      <div style=\"font-size: 12px; color: gray\">0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae</div>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signTransaction_pre_execution()\">signTransaction(prepared data)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signAndExecuteTransaction_pre_execution()\">sendTransaction(prepared data)</el-button>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./SuiTransactionPanel.vue?vue&type=template&id=56a8eddf&scoped=true\"\nimport script from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./SuiTransactionPanel.vue?vue&type=style&index=0&id=56a8eddf&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-56a8eddf\"]])\n\nexport default __exports__","<script>\nimport { OKXStarknetProvider } from \"@okxconnect/universal-provider\";\nimport { CallData, uint256, RpcProvider, Account } from \"starknet\";\n\nexport default {\n  name: \"StarknetTransactionPanel\",\n  methods: {\n    async starknet_signMessage() {\n      this.address = this.getCurrentAddress()\n      if (this.address === \"\") {\n        alert(\"address can't be ''\");\n        return\n      }\n\n      let signData = this.signData\n      this.$emit(\"generateTransactionParams\", JSON.stringify(signData))\n      let provider = new OKXStarknetProvider(window.provider)\n      let res = await provider.signMessage(this.address, signData, \"starknet:mainnet\")\n      if (res.code) {\n        if (res.code == 301) {\n          let msg = \"Wallet address is registering, please try again later!\"\n          alert(msg)\n          this.$emit(\"generateTransactionResult\", msg, \"starknet_signMessage\")\n        }\n        this.$emit(\"generateTransactionResult\", res, \"starknet_signMessage\")\n        return\n      }\n      console.log(res)\n\n      const rpcProvider = new RpcProvider({ nodeUrl: \"https://free-rpc.nethermind.io/mainnet-juno/v0_7\" });\n      let pk = \"0x123\"; /// random pk\n      const account = new Account(rpcProvider, this.address, pk)\n      let that = this\n      account.verifyMessage(signData, res).then(function (isValid) {\n        that.$emit(\"generateTransactionResult\", \"verify:\" + isValid + \"\\n\" + res, \"starknet_signMessage\")\n      }).catch(function (error) {\n        that.$emit(\"generateTransactionResult\", \"failed:\" + error + \"\\n\" + res, \"starknet_signMessage\")\n      })\n    },\n\n    async starknet_sendTransaction() {\n      this.address = this.getCurrentAddress()\n      if (this.address === \"\") {\n        alert(\"address can't be ''\");\n        return\n      }\n\n      let val = uint256.bnToUint256(120000000000000000)\n      const transferCalldata = CallData.compile({\n        to: \"0x00b909cefa36ab6bc26f5887a867e46ef162238f0a171b1c2974b665afd4237f\",\n        value: val\n      })\n\n      // const ETHTokenAddress = \"0x049d36570d4e46f48e99674bd3fcc84644ddd6b96f7c741b1562b82f9e004dc7\"\n      // const STARKTokenAddress = \"0x04718f5a0fc34cc1af16a1cdee98ffb20c31f5cd61d6ab07201858f4287c938d\"\n      const DAITokenAddress = \"0x00da114221cb83fa859dbdb4c44beeaa0bb37c7537ad5ae66fe5e0efd20e6eb3\"\n\n      const invokeParams = {\n        calls: [\n          {\n            contract_address: DAITokenAddress,\n            entry_point: \"transfer\",\n            calldata: transferCalldata\n          }\n        ],\n      }\n\n      this.$emit(\"generateTransactionParams\", JSON.stringify(invokeParams))\n      let provider = new OKXStarknetProvider(window.provider)\n\n      let that = this\n      provider.sendTransaction(this.address, invokeParams, \"starknet:mainnet\").then(function(res){\n        console.log(\"starknet_sendTransaction result \", res)\n        that.$emit(\"generateTransactionResult\", res, \"starknet_sendTransaction\")\n      }).catch(function(error) {\n        if (error.code == 301) {\n          let msg = \"Wallet address is registering, please try again later!\"\n          alert(msg)\n          that.$emit(\"generateTransactionResult\", msg, \"starknet_sendTransaction\")\n        }else {\n          that.$emit(\"generateTransactionResult\", error, \"starknet_sendTransaction\")\n        }\n      });\n    },\n\n    getCurrentAddress() {\n      let provider = new OKXStarknetProvider(window.provider)\n      const address = provider.getAccount(\"starknet:mainnet\")?.address\n      return address\n    },\n\n    getPublicKey() {\n      let provider = new OKXStarknetProvider(window.provider)\n      const account = provider.getAccount(\"starknet:mainnet\")\n      console.log(\"获取到的account是：\")\n      console.log(account)\n      return \"05d8e5e9c1dd686246716c888159271d2f13986cb4acee46164e2c4e034629c0\"\n    }\n  },\n\n  data() {\n    const signData = {\n        \"domain\": {\n          \"chainId\": \"0x534e5f4d41494e\",\n          \"name\": \"STRKFarm\",\n          \"version\": \"1\"\n        },\n        \"message\": {\n          \"document\": \"app.strkfarm.xyz/tnc/v1\",\n          \"message\": \"Read and Agree T&C\"\n        },\n        \"primaryType\": \"Tnc\",\n        \"types\": {\n          \"StarkNetDomain\": [\n            {\n              \"name\": \"name\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"version\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"chainId\",\n              \"type\": \"felt\"\n            }\n          ],\n          \"Tnc\": [\n            {\n              \"name\": \"message\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"document\",\n              \"type\": \"felt\"\n            }\n          ]\n        }\n    }\n\n    return {\n      signData\n    }\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"starknet_signMessage()\">signMessage</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 验签不成功的话，请尝试连接VPN\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"starknet_sendTransaction(true)\">\n        sendTransaction\n      </el-button>\n\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 发送0.12个DAI到0x00b9...4237f的地址\n        </li>\n        <li>\n          2. 请保证你的钱包有足够的DAI\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./StarknetTransactionPanel.vue?vue&type=template&id=082fda2b&scoped=true\"\nimport script from \"./StarknetTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./StarknetTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./StarknetTransactionPanel.vue?vue&type=style&index=0&id=082fda2b&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-082fda2b\"]])\n\nexport default __exports__","<script>\n\n\nimport {OKXTronProvider} from \"@okxconnect/universal-provider\";\nimport {TronWeb} from \"tronweb\";\n\nexport default {\n  name: \"TronTransactionPanel\",\n  methods: {\n\n    async tron_signMessage() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessage(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n\n      const verify = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), res, provider.getAccount(\"tron:mainnet\").address)\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" + res, \"tron_signMessage\")\n    },\n\n    async tron_signMessageV2() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessageV2(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", res);\n      console.log(\"tron_signMessageV2_base58Address\", base58Address)\n      console.log(\"tron_signMessageV2_address\", provider.getAccount(\"tron:mainnet\").address)\n      const verify = base58Address === provider.getAccount(\"tron:mainnet\").address\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" +  res, \"tron_signMessage\")\n    },\n\n    async tron_signTransaction(isOnlySign) {\n      let provider = new OKXTronProvider(window.provider)\n        let tronWeb = new TronWeb({\n          \"fullHost\": 'https://api.trongrid.io',\n          \"headers\": {},\n          \"privateKey\": ''\n        })\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const transaction = await tronWeb.transactionBuilder.sendTrx(\"TGBcVLMnVtvJzjPWZpPiYBgwwb7th1w3BF\", 1000, address);\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let res = await provider.signTransaction( transaction, \"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", res, \"tron_signTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async getContract() {\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n      \n      try {\n        const contract = await tronWeb.trx.getContract(contractAddress)\n        const abi = contract.abi.entrys;\n        console.log(\"获取到的合约：\")\n        console.log(abi)\n      } catch (error) {\n        console.log(\"Error getting contract ABI:\", error);\n      }\n    },\n    \n    async tron_signAndSendTransactionContract(isOnlySign) {\n      // this.getContract()\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n      ]\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"quote(uint256,uint256,uint256)\", {}, parameter, address);\n      console.log(\"=====>transaction: \")\n      console.log(ret);\n      this.$emit(\"generateTransactionParams\", ret.transaction)\n      if (isOnlySign) {\n        let tx = await provider.signTransaction( ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async tron_signAndSendTransactionApprove(isOnlySign) {\n      let contractAddress = \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'address', value: contractAddress},\n        {type: 'uint256', value: 1000},\n      ]\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"approve(address,uint256)\", {}, parameter, address);\n\n      let transaction = ret.transaction\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let tx = await provider.signTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n\n    }\n\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessage()\">tron_signMessage</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessageV2()\">tron_signMessageV2</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(true)\">\n        tron_signTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(true)\">\n        tron_signTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(true)\">\n        tron_signTransaction(Approve)\n      </el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(false)\">\n        tron_signAndSendTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(false)\">\n        tron_signAndSendTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(false)\">\n        tron_signAndSendTransaction(approve)\n      </el-button>\n    </el-col>\n\n\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./TronTransactionPanel.vue?vue&type=template&id=55a13ab0&scoped=true\"\nimport script from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./TronTransactionPanel.vue?vue&type=style&index=0&id=55a13ab0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-55a13ab0\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=74989896&scoped=true\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=74989896&scoped=true&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-74989896\"]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\nimport App from './App.vue'\n\nconst app = createApp(App)\n\napp.use(ElementPlus)\napp.mount('#app')","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkokxconnectdemo\"] = self[\"webpackChunkokxconnectdemo\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(47657); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["require","Object","defineProperty","exports","value","AptosUtils","getTransaction","o","transaction","rawTransaction","payload","entryFunction","typeArgs","type_args","typeArguments","Array","forEach","typeTag","push","toString","realArguments","this","getTypeArguments","args","i","arguments","function","module_name","address","data","name","identifier","function_name","type","type_arguments","getArguments","array","j","length","y","values","subArray","dealArrayElements","e","Uint8Array","t","isArray","r","n","assign","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","rejected","result","done","then","apply","__importDefault","mod","__esModule","OKXAptosProvider","buffer_1","AptosUtils_1","core_1","tweetnacl_1","constructor","provider","chainsSet","Set","getUniversalProvider","getConnectedNamespace","defaultNetwork","network","requestDefaultChainWithNamespace","NameSpaceKeyAptos","currentChainId","getRealChainId","chainId","size","Error","_a","_b","_c","session","namespaces","chains","chain","add","getAccount","_d","_e","_f","_g","_h","_j","account","accounts","filter","startsWith","logDebug","accountArray","split","console","log","extra","publicKey","undefined","signMessage","realChain","prefix","message","nonce","fullMessage","application","window","location","protocol","hostname","buffer","Buffer","from","hex","bufferToHex","signedMessage","request","successData","slice","verified","default","sign","detached","verify","signature","error","signTransaction","tx","signAndSubmitTransaction","buf","OKXAptosProvider_1","enumerable","get","OKXSolanaProvider","web3_js_1","bs58_1","map","defaultChainMap","has","caip","includes","Map","set","decode","PublicKey","serializedMessage","serialize","requireAllSignatures","verifySignatures","encode","getSignedTransaction","signAllTransactions","transactions","VersionedTransaction","response","newTransactions","JSON","parse","s","c","Transaction","deserialize","signAndSendTransaction","method","transactionStr","resultTx","OKXSolanaProvider_1","id","_createElementBlock","_hoisted_1","_createVNode","_component_el_container","_withCtx","_component_el_header","_cache","_createTextVNode","_","_component_el_main","_component_el_card","class","header","_createElementVNode","style","_component_el_row","_component_el_col","span","_toDisplayString","$options","getWalletAddress","_ctx","currentStatus","_component_el_checkbox","modelValue","withUI","$event","onChange","handleWithUI","universalToTG","handleUniversalToTG","_component_el_select","modals","placeholder","handleModalsSelect","multiple","_component_el_option","label","returnStrategy","handleReturnStrategySelect","_Fragment","_renderList","returnStrategies","strategy","_createBlock","key","_component_el_input","deeplink","handleReturnStrategyDeeplink","disabled","_createCommentVNode","language","handleLanguageSelect","locales","locale","theme","handleThemeSelect","THEME","LIGHT","DARK","selectedMethod","handleConnectMethodsSelect","connectMethods","item","tonProofValue","gutter","align","keys","availableChains","checked","areChainsInit","isOptionalChecked","handleOptionChange","_component_el_button","onClick","initBtnClicked","icon","connectInitStr","connectBtnClicked","connectStatusStr","syncAllAddressClick","syncAllAddressStr","disconnectAction","walletAddress","disconnectStatusStr","_Teleport","to","showModal","closeModal","_withModifiers","_component_qrcode_vue","qrValue","level","_component_el_tabs","activeTab","onTabClick","clickActiveTab","_component_el_tab_pane","eth_requestAccounts","eth_chainId","wallet_switchEthereumChain","wallet_addEthereumChain","personal_sign","eth_signTypedData_v4","eth_sendTransaction_transfer","eth_sendTransaction_approve","eth_sendTransaction_mint","wallet_watchAsset","oversized_personal_sign","ton_getAccount","ton_sendTransaction","sol_signMessage","sol_signTransaction","sol_signVersionedTransaction","sol_signAllTransactions","sol_signAllVersionedTransactions","sol_signAndSendTransaction","sol_signAndSendVersionedTransaction","_component_SuiPanel","onGenerateTransactionParams","sui_generateTransactionParams","_component_BTCPanel","btc_generateTransactionParams","_component_FractalPanel","fractal_generateTransactionParams","_component_TronTransactionPanel","tron_generateTransactionParams","onGenerateTransactionResult","tron_getTransactionResult","aptos_signMessage","aptos_signTransaction","aptos_signAndSubmitTransaction","cosmos_signArbitrary","cosmos_signAmino","cosmos_signDirect","wallet_testRpc","eth_sendTransaction_swap","move_signTransaction","move_signAndSubmitTransaction","_component_StarknetPanel","ref","starknet_generateTransactionParams","starknet_getTransactionResult","testBase64UrlSafe","xs","sm","redirect","handleRedirectSelect","canChainAddRedirectParam","redirectDeeplink","handleRedirectDeeplink","addRedirectParam","testTransaction","rows","testboc","$setup","sendBtnDisabled","sendTransaction","testTransactionStr","btc_getAccount","btc_signMessage","sendAmount","clearable","btc_send","sendSatoshisAmount","btc_sendBitcoin","psbtHex","btc_signPsbt_up","btc_signAndPushPsbt_up","nftId","receiver","btc_sendInscription","props","msg","String","setup","methods","$emit","params","signStr","alert","toAddress","satoshis","options","feeRate","autoFinalized","inscriptionId","__exports__","fractal_getAccount","fractal_signMessage","fractal_send","fractal_sendBitcoin","fractal_signPsbt_up","fractal_signAndPushPsbt_up","fractal_sendInscription","sui_getAccount","sui_signMessage","sui_signPersonalMessage","sui_signTransaction2","sui_signAndExecuteTransaction","sui_requestRpc","sui_signTransaction_pre_execution","sui_signAndExecuteTransaction_pre_execution","uint8Array","input","amount","recipientAddress","SuiTransaction","coin","splitCoins","gas","transferObjects","transactionBlock","showEffects","setDefaultChain","txBytes","txSerialize","generateTsBytesAndSerizlize","resultTuple","senderAccounts","requestAccountsWithNamespace","rpcUrl","getFullnodeUrl","suiClient","SuiClient","url","setSender","build","client","toJSON","stringify","currentSuiTransaction","currentSuiMethod","starknet_signMessage","starknet_sendTransaction","getCurrentAddress","signData","OKXStarknetProvider","res","code","rpcProvider","RpcProvider","nodeUrl","pk","Account","that","verifyMessage","isValid","catch","val","uint256","bnToUint256","transferCalldata","CallData","compile","DAITokenAddress","invokeParams","calls","contract_address","entry_point","calldata","getPublicKey","tron_signMessage","tron_signMessageV2","tron_signTransaction","tron_signAndSendTransactionContract","tron_signAndSendTransactionApprove","OKXTronProvider","tronWeb","TronWeb","trx","signMessageV2","base58Address","verifyMessageV2","isOnlySign","transactionBuilder","sendTrx","getContract","contractAddress","contract","abi","entrys","parameter","ret","triggerSmartContract","verifyADR36Amino","fromBech32","VConsole","allChains","chainsThatCanAddRedirectParam","optionChains","selectedModals","selectedReturnStrategy","selectedDeepLink","selectedLanguage","selectedTheme","components","TronTransactionPanel","QrcodeVue","BTCPanel","FractalPanel","SuiPanel","StarknetPanel","testTopic","testPublicKey","testProofPayload","pendingDeepLink","logList","connectReady","localPubKey","localSecKey","selectedChain","ProofPayloadVerify","showVerifyRow","localStorage","getItem","selectedMethodData","isChecked","setItem","reload","delete","starknetPanelTypedData","computed","selectedChains","initChains","newChains","updatedChains","tab","tabName","initCall","okxLogDebug","OKXUniversalConnectUI","init","dappMetaData","actionsConfiguration","uiPreferences","OKXUniversalProvider","tonProvider","OKXTonProvider","onStatusChange","walletInfo","err","onModalStateChange","state","entries","parseInt","substring","on","uri","useShortLink","isPC","items","topic","Date","now","testTonSdk","connected","syncAllAddresses","disconnect","blockExplorerUrls","chainName","nativeCurrency","symbol","decimals","rpcUrls","fromAccountToAddress","addressArr","join","requestEVMAccountWithSession","namespace","evmNameSpace","dataETH","dataPolygon","types","EIP712Domain","Person","Mail","primaryType","domain","version","verifyingContract","wallet","contents","maxPriorityFeePerGas","maxFeePerGas","gasPrice","gasLimit","str","image","tonUniversalLog","sendTransactionAlert","fetch","json","confirm","sendData","adapter","SuiAdapter","suiResult","signAndExecuteTransaction","sui_verifySignature","signPersonalMessage","btcAdapter","OKXBtcProvider","btcResult","currentBtcMethod","currentBtcTransaction","send","signPsbt","hexToBase64","bs64Str","signPsbts","psbtHexs","sendInscription","signAndPushPsbt","sendBitcoin","fractalResult","currentFractalMethod","currentFractalTransaction","OKX_CONNECT_ERROR_CODES","USER_REJECTS_ERROR","hexStr","bytes","substr","blob","Blob","reader","FileReader","onload","base64Data","target","onerror","readAsDataURL","datatest","utf8Array","TextEncoder","binary","byte","fromCharCode","firstStr","btoa","replace","showUrl","getUniversalLink","getAppWalletDeepLink","hasEip155","hasSolana","hasSui","hasBtc","hasAptos","hasTon","hasCosmos","hasTron","nameSpacesChains","optSpaceChains","solanaChains","hasStarknet","suiChains","btcChains","connectMethod","connectData","requireData","eip155","defaultChain","solana","cosmos","tron","starknet","tonParams","ton_addr","ton_proof","ton","sui","rpcMap","aptos","btc","optData","eip155Chains","tonChains","signMethods","getCurrentSelectedMethodData","openModalAndSign","openModal","sessionConfig","useMini","openUniversalUrl","tmaReturnUrl","connectAndSign","connect","setTimeout","methodList","suiData","currentMethod","accountAddress","typedData","userAgentInfo","navigator","userAgent","Agents","flag","v","indexOf","isSafariOrChrome","pubkey","result1","nacl","toBytes","config","AptosConfig","Network","MAINNET","Aptos","simple","sender","functionArguments","safeJsonStringify","connection","Connection","getSolConnect","blockhash","getLatestBlockhash","versionedTransactionMessage","TransactionMessage","payerKey","recentBlockhash","instructions","SystemProgram","transfer","fromPubkey","toPubkey","lamports","compileToV0Message","feePayer","rpc","OKXCosmosProvider","signArbitrary","cosmos_verifySignArbitrary","pub_key","signer","prefixStr","signatureBuffer","uint8Signature","pubKeyValueBuffer","pubKeyUint8Array","signDoc","signAmino","messageToBuffer","signDirect","uiOptions","eth_verifyMessage","ethAddress","originalMessage","recoveredAddress","ethers","toLowerCase","list","verifyList","methodItem","requestItme","ethMessage","solanaMessage","verifySol","aptosMessage","aptosProvider","aptosPublicKey","cosmosProvider","cosmosAddress","cosmosMessage","tronMessage","StarknetRpcProvider","StarknetAccount","signatureResult","resultObj","pubKey","verifyPersonalMessageSignature","toSuiAddress","toBase64","newTransaction","some","created","mounted","scriptTag","document","createElement","src","getElementsByTagName","appendChild","title","$refs","starknetPanelRef","toRaw","render","app","createApp","App","use","ElementPlus","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","loaded","__webpack_modules__","call","m","amdO","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","every","splice","getter","d","a","leafPrototypes","getProto","getPrototypeOf","obj","__proto__","mode","ns","create","def","current","getOwnPropertyNames","definition","g","globalThis","Function","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}