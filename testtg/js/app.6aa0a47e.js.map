{"version":3,"file":"js/app.6aa0a47e.js","mappings":"oDACAA,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQE,8BAAgCF,EAAQG,wBAA0BH,EAAQI,uBAAyBJ,EAAQK,qBAAuBL,EAAQM,mBAAqBN,EAAQO,uBAAyBP,EAAQQ,qBAAuBR,EAAQS,yBAAsB,EAErQT,EAAQS,oBAAsB,OAC9BT,EAAQQ,qBAAuB,QAC/BR,EAAQO,uBAAyB,UACjCP,EAAQM,mBAAqB,YAC7BN,EAAQK,qBAAuB,cAC/BL,EAAQI,uBAAyB,UACjCJ,EAAQG,wBAA0B,gBAClCH,EAAQE,8BAAgC,oB,qCCX5BQ,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACb,IAAIC,EAAmBC,MAAQA,KAAKD,kBAAqBb,OAAOe,OAAU,SAASC,EAAGC,EAAGC,EAAGC,QAC7EC,IAAPD,IAAkBA,EAAKD,GAC3B,IAAIG,EAAOrB,OAAOsB,yBAAyBL,EAAGC,GACzCG,KAAS,QAASA,GAAQJ,EAAEM,WAAaF,EAAKG,UAAYH,EAAKI,gBAClEJ,EAAO,CAAEK,YAAY,EAAMC,IAAK,WAAa,OAAOV,EAAEC,EAAI,IAE5DlB,OAAOC,eAAee,EAAGG,EAAIE,EACjC,EAAM,SAASL,EAAGC,EAAGC,EAAGC,QACTC,IAAPD,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,EACd,GACIU,EAAsBd,MAAQA,KAAKc,qBAAwB5B,OAAOe,OAAU,SAASC,EAAGa,GACxF7B,OAAOC,eAAee,EAAG,UAAW,CAAEU,YAAY,EAAMvB,MAAO0B,GACnE,EAAK,SAASb,EAAGa,GACbb,EAAE,WAAaa,CACnB,GACIC,EAAgBhB,MAAQA,KAAKgB,cAAiB,SAAUC,GACxD,GAAIA,GAAOA,EAAIR,WAAY,OAAOQ,EAClC,IAAIC,EAAS,CAAC,EACd,GAAW,MAAPD,EAAa,IAAK,IAAIb,KAAKa,EAAe,YAANb,GAAmBlB,OAAOiC,UAAUC,eAAeC,KAAKJ,EAAKb,IAAIL,EAAgBmB,EAAQD,EAAKb,GAEtI,OADAU,EAAmBI,EAAQD,GACpBC,CACX,EACII,EAAatB,MAAQA,KAAKsB,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMtC,GAAS,OAAOA,aAAiBoC,EAAIpC,EAAQ,IAAIoC,GAAE,SAAUG,GAAWA,EAAQvC,EAAQ,GAAI,CAC3G,OAAO,IAAKoC,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU1C,GAAS,IAAM2C,EAAKN,EAAUO,KAAK5C,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAS9C,GAAS,IAAM2C,EAAKN,EAAU,SAASrC,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKd,GAAUA,EAAOkB,KAAOR,EAAQV,EAAO7B,OAASsC,EAAMT,EAAO7B,OAAOgD,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACA/C,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQmD,wBAAqB,EAC7B,MAAMC,EAAc1C,EAAQ,OACtB2C,EAAqB3C,EAAQ,OAC7B4C,EAAY5C,EAAQ,OACpB6C,EAAU7C,EAAQ,OAClB8C,EAAU9C,EAAQ,OAClB+C,EAAkB/C,EAAQ,OAC1BgD,EAAM9B,EAAalB,EAAQ,QAC3BiD,EAAajD,EAAQ,OACrBkD,GAAK,EAAIJ,EAAQK,kCACvB,MAAMV,EACFW,WAAAA,CAAYC,GAQR,GAPAnD,KAAKoD,OAAS,IAAIP,EAAgBQ,aAClCrD,KAAKsD,MAAQd,EAAYe,eAAeC,UACxCxD,KAAKyD,iBAAmB,EAExBzD,KAAK0D,WAAa,EAElB1D,KAAK2D,aAAe,MACf,EAAIf,EAAQgB,YAAYT,GACzB,MAAM,IAAIU,MAAM,0BAA0BV,KAE9CnD,KAAKmD,IAAMA,EACXnD,KAAK8D,eAAiB,KACtB9D,KAAK+D,uBAAyB,KAC9B/D,KAAKgE,kBAAoB,IAAItB,EAAUuB,QAAQxB,EAAmByB,uBAAyBzB,EAAmByB,uBAClH,CACA,cAAIC,GACA,OAAOnE,KAAKsD,OAASd,EAAYe,eAAea,UACpD,CAEAC,SAAAA,CAAUnC,GACN,GAAsB,qBAAXA,EAAEoC,KAAb,CAIA,GAFAxB,EAAIyB,SAAS,qBACbzB,EAAIyB,SAASrC,GACS,kBAAXA,EAAEoC,KAAmB,CAC5B,IAAIE,EAAMtC,EAAEoC,KACZ,GAAY,SAARE,EAEA,YADA1B,EAAIyB,SAAS,yBAAyBE,KAAKC,MAAMC,aAGzD,CACA3E,KAAKoD,OAAOwB,KAAK,UAAW1C,EAAEoC,KAVpB,CAWd,CACAO,OAAAA,CAAQC,GACJ,IAAIC,EACJjC,EAAIyB,SAAS,sBAA8C,QAAtBQ,EAAK/E,KAAKgF,cAA2B,IAAPD,OAAgB,EAASA,EAAG5B,IAAK2B,EAAMG,MAC1GjF,KAAKgF,YAAS1E,EACdN,KAAKoD,OAAOwB,KAAK,QAASE,EAC9B,CACAI,OAAAA,CAAQC,EAAIjD,GACR,MAAMkD,EAAU,CAAED,GAAIA,EAAIE,IAAKnD,EAAEyC,YACjC3E,KAAKoD,OAAOwB,KAAK,UAAWQ,EAChC,CACAE,MAAAA,CAAON,GACHA,EAAOO,UAAaT,GAAU9E,KAAKqE,UAAUS,GAC7CE,EAAOQ,QAAWV,GAAU9E,KAAK6E,QAAQC,GACzC9E,KAAKgF,OAASA,EACdhF,KAAKsD,MAAQd,EAAYe,eAAekC,UACxCzF,KAAKoD,OAAOwB,KAAK,OACrB,CAEAc,SAAAA,CAAUC,GACN3F,KAAKoD,OAAOwB,KAAK,OAAQe,EAC7B,CAEAC,SAAAA,GACI,OAAOtE,EAAUtB,UAAM,OAAQ,GAAQ,YAInC,GAHIA,KAAK8D,gBACL+B,aAAa7F,KAAK8D,gBAElB9D,KAAKsD,OAASd,EAAYe,eAAekC,WAAazF,KAAKsD,OAASd,EAAYe,eAAeuC,SAInG,GAAK9F,KAAKgF,QAcV,GAAIhF,KAAKgF,OAAOe,aAAeC,UAAUC,KAczCnD,EAAIyB,SAAS,yBAAyBE,KAAKC,MAAMC,eAAe3E,KAAKgF,UACrEhF,KAAKgF,OAAOkB,KAAK,QACjBlG,KAAK8D,eAAiBqC,WAAWnG,KAAK4F,UAAUQ,KAAKpG,MAAO,UAdxD,GADA8C,EAAIyB,SAAS,oBACTvE,KAAKsD,OAASd,EAAYe,eAAekC,WAAazF,KAAKsD,OAASd,EAAYe,eAAeuC,QAAS,CACxGhD,EAAIyB,SAAS,2CAA4CvE,KAAKsD,MAAOtD,KAAKgF,OAAOe,YACjF,UACU/F,KAAKqG,eACf,CACA,MAAOnE,GACHY,EAAIwD,SAAS,sBACbtG,KAAK8D,eAAiBqC,WAAWnG,KAAK4F,UAAUQ,KAAKpG,MAAO,IAChE,CACJ,OAvBA,GADA8C,EAAIyB,SAAS,oBACTvE,KAAKsD,OAASd,EAAYe,eAAekC,WAAazF,KAAKsD,OAASd,EAAYe,eAAeuC,QAAS,CACxGhD,EAAIyB,SAAS,iCACb,UACUvE,KAAKqG,eACf,CACA,MAAOnE,GACHY,EAAIwD,SAAS,sBACbtG,KAAK8D,eAAiBqC,WAAWnG,KAAK4F,UAAUQ,KAAKpG,MAAO,IAChE,CACJ,OAdA8C,EAAIyB,SAAS,mBAkCrB,GACJ,CACAgC,UAAAA,CAAWpD,EAAMnD,KAAKmD,IAAKqD,GAAU,GACjC,KAAK,EAAI5D,EAAQgB,YAAYT,GACzB,MAAM,IAAIU,MAAM,0BAA0BV,KAE9CnD,KAAKmD,IAAMA,EACNqD,GACD1D,EAAIyB,SAAS,sBAAuBvE,KAAKmD,KAAK,IAAIsB,MAAOgC,eAE7DzG,KAAKsD,MAAQd,EAAYe,eAAea,WACzB,IAAIsC,gBAAgBvD,GAAKtC,IAAI,UAC5C,OAAO,IAAIgB,SAAQ,CAACD,EAASE,KACzB,MAAMkD,EAAS,IAAIhC,EAAGG,EAAK,IAC3BL,EAAIyB,SAAS,4BAA6BvE,KAAKmD,KAAK,IAAIsB,MAAOgC,eAC/DzG,KAAK2G,kBAAkB3B,IACnB,EAAIpC,EAAQgE,wBACZ9D,EAAIyB,SAAS,4BACbS,EAAO6B,QAAU,KACb/E,EAAO,IAAI+B,MAAM,iBACjBmB,EAAO8B,OAAO,IAIlBhE,EAAIyB,SAAS,4BACbS,EAAO+B,GAAG,SAAS,KACfjF,EAAO,IAAI+B,MAAM,iBACjBmB,EAAO8B,OAAO,KAGtB9B,EAAOM,OAAS,KACZxC,EAAIyB,SAAS,iBACbvE,KAAKgH,kBAAkBxE,EAAYyE,uCAAuCC,UAC1ElH,KAAKsF,OAAON,GACZhF,KAAK4F,YACLhE,EAAQoD,EAAO,CAClB,GAET,CACAmC,aAAAA,GAEI,OADArE,EAAIyB,SAAS,uBAAwBvE,KAAK0D,WAAY,KAAMlB,EAAY4E,yBAAyBC,QAC1FrH,KAAK0D,WAAalB,EAAY4E,yBAAyBC,MAClE,CACAC,iBAAAA,GACI,OAAOhG,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,IAAKA,KAAKmH,gBAAiB,CAEvBnH,KAAK0D,YAAc,EACnB,IAAI6D,EAAUvH,KAAKwH,mBAEnB,OADA1E,EAAIyB,SAAS,oBAAqBgD,GAAS,IAAI9C,MAAOgC,eAC/CzG,KAAKuG,WAAWgB,GAAS,EACpC,CAEIzE,EAAIyB,SAAS,wBAAyBvE,KAAK0D,YAAY,IAAIe,MAAOgC,cAE1E,GACJ,CACAE,iBAAAA,CAAkB3B,GACVhF,KAAK+D,wBACL/D,KAAKgH,kBAAkBxE,EAAYyE,uCAAuCQ,UAE9EzH,KAAK0H,cAAgB1C,EACrBhF,KAAK+D,uBAAyBoC,YAAW,KACjCnG,KAAK0H,eACL1H,KAAKgH,kBAAkBxE,EAAYyE,uCAAuCU,SAC9E,GACD3H,KAAK2D,aACZ,CACAqD,iBAAAA,CAAkB/B,GACd,IAAIF,EAEAE,GAAQzC,EAAYyE,uCAAuCC,WAC7B,QAA7BnC,EAAK/E,KAAK0H,qBAAkC,IAAP3C,GAAyBA,EAAG+B,MAAM7B,IAE5EjF,KAAK0H,mBAAgBpH,EAErBuF,aAAa7F,KAAK+D,uBACtB,CACA6D,qBAAAA,GACI5H,KAAKgE,kBAAkB6D,YAAY7H,KAAKyD,iBAAiBkB,WAAYlC,EAAmByB,uBAC5F,CAUAsD,gBAAAA,GAGI,OAFAxH,KAAKyD,kBAAoB,EACzBzD,KAAKyD,iBAAmBzD,KAAKyD,iBAAmBjB,EAAY4E,yBAAyBC,OAC9E7E,EAAY4E,yBAAyBpH,KAAKyD,iBACrD,CAEAqE,gBAAAA,GACI,OAAOxG,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,GAAiC,YAA7B+H,SAASC,kBAETlF,EAAIyB,SAAS,eAAevE,KAAKsD,UAAUtD,KAAKgF,UAC5ChF,KAAKsD,OAASd,EAAYe,eAAekC,WAAoC,qBAAhBzF,KAAKgF,aAH1E,CAIQlC,EAAIyB,SAAS,0BACb,UACUvE,KAAKqG,eACf,CACA,MAAOnE,GACHY,EAAIwD,SAAS,qBACjB,CAGR,CACJ,GACJ,CACAD,aAAAA,GACI,OAAO/E,EAAUtB,KAAMiI,eAAW,GAAQ,UAAW9E,EAAMnD,KAAKmD,KAC5D,GAAInD,KAAKmE,WAEL,OADArB,EAAIyB,SAAS,qCACN,IAAI1C,SAAQ,CAACD,EAASE,KACzB9B,KAAKoD,OAAO8E,KAAK,QAAShG,IACtBY,EAAIyB,SAAS,4CAA6CrC,GACnDJ,EAAOI,MAElBlC,KAAKoD,OAAO8E,KAAK,QAAQ,IACK,oBAAflI,KAAKgF,OACLlD,EAAO,IAAI+B,MAAM,iBAErBjC,EAAQ5B,KAAKgF,SACtB,IAGVlC,EAAIyB,SAAS,4DACb,IAAIiC,GAAU,EACd,OAAQxG,KAAKmH,kBAAoBnH,KAAKgF,OAClC,IACIlC,EAAIyB,SAAS,+CAAgDvE,KAAK0D,WAAY8C,SACxExG,KAAKuG,WAAWpD,EAAKqD,EAC/B,CACA,MAAO2B,GACHrF,EAAIyB,SAAS,qCAAsC4D,GACnDnI,KAAK0D,YAAc,EACnBP,EAAMnD,KAAKwH,mBACXhB,GAAU,CACd,CAGJ,GADA1D,EAAIyB,SAAS,mCAAoCvE,KAAK0D,WAAY1D,KAAKgF,SAClEhF,KAAKgF,QAAUhF,KAAKmH,gBAKrB,MAJArE,EAAIyB,SAAS,2CAA4CvE,KAAK0D,WAAY1D,KAAKgF,QAC/EhF,KAAK0D,WAAa,EAClB1D,KAAKsD,MAAQd,EAAYe,eAAeuC,QACxC9F,KAAK0F,UAAU,IAAI7B,MAAM,yBACnB,IAAId,EAAWqF,gBAAgBrF,EAAWsF,wBAAwBC,iBAAkB,oBAElG,GACJ,CACAC,OAAAA,GACI,OAAOjH,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,UACUA,KAAKqG,gBAEX0B,SAASS,oBAAoB,mBAAoBxI,KAAK8H,iBAAiB1B,KAAKpG,OAC5E+H,SAASU,iBAAiB,mBAAoBzI,KAAK8H,iBAAiB1B,KAAKpG,MAC7E,CACA,MAAOkC,GAEH,MADAY,EAAIyB,SAAS,+BAAgCrC,GACvCA,CACV,CACJ,GACJ,CACAwG,UAAAA,GACI,OAAOpH,EAAUtB,UAAM,OAAQ,GAAQ,YAEnC,OADAA,KAAKsD,MAAQd,EAAYe,eAAeoF,aACjC,IAAI9G,SAAQ,CAACD,EAASE,KACE,qBAAhB9B,KAAKgF,QAKhBhF,KAAKgF,OAAOQ,QAAWV,IACnB9E,KAAK6E,QAAQC,GACblD,GAAS,EAEb5B,KAAKgF,OAAO8B,QACR9G,KAAK8D,gBACL+B,aAAa7F,KAAK8D,iBATlBlC,GAUJ,GAER,GACJ,CACAgH,aAAAA,GACI,MAAO,CACHtF,MAAOtD,KAAKsD,MACZH,IAAKnD,KAAKmD,IAElB,CAIA0F,WAAAA,CAAY/D,EAAOgE,EAASC,EAASC,GAC7BhJ,KAAKiJ,sBACLjJ,KAAKoD,OAAO8F,eAAe,UAAWlJ,KAAKiJ,sBAE/CjJ,KAAKiJ,qBAAwB/G,IACzB,IAAI6C,EACJjC,EAAIyB,SAAS,mBAAmBrC,KAChC,IAAIiH,GAAc,EAAIxG,EAAQyG,eAAelH,GAE7C,GAAIiH,EAAYE,QAAUF,EAAYE,OAAO/E,KAAM,CAC/C,IAAIgF,EAA4C,QAAlCvE,EAAKoE,EAAYE,OAAO/E,YAAyB,IAAPS,OAAgB,EAASA,EAAGwE,QACpF,GAAID,EACA,IACI,IAAIjE,EAAMyD,EAAQQ,QACNhJ,IAAR+E,GACAvC,EAAIyB,SAAS,8BACbyE,EAAOlE,EAAO,sBAGdiE,EAAQjE,EAAOO,EAEvB,CACA,MAAOnD,GACHY,EAAIyB,SAAS,4BAA4BrC,KACzC8G,EAAOlE,EAAO5C,EAAEqH,QACpB,CAER,GAEJvJ,KAAKoD,OAAO2D,GAAG,UAAW/G,KAAKiJ,sBAC3BjJ,KAAKwJ,aACLxJ,KAAKoD,OAAO8F,eAAe,OAAQlJ,KAAKwJ,aAE5CxJ,KAAKwJ,YAAetH,IACZA,GACAY,EAAIyB,SAAS,mBAAmBrC,KAChC8G,EAAOlE,EAAO5C,EAAEqH,UAGhBP,EAAOlE,EAAO,gBAClB,EAEJ9E,KAAKoD,OAAO2D,GAAG,OAAQ/G,KAAKwJ,YAChC,CACAC,eAAAA,CAAgBC,GACR1J,KAAK2J,gBACL3J,KAAKoD,OAAO8F,eAAe,UAAWlJ,KAAK2J,gBAE/C3J,KAAK2J,eAAkBzH,GAAMZ,EAAUtB,UAAM,OAAQ,GAAQ,YAEzD8C,EAAIyB,SAAS,iBAAgB,IAAIE,MAAOgC,kCAAkCvE,KAC1E,IAAI0H,GAAQ,EAAIjH,EAAQyG,eAAelH,SACjCwH,EAASE,EACnB,IACA5J,KAAKoD,OAAO2D,GAAG,UAAW/G,KAAK2J,eACnC,CACAzB,IAAAA,CAAKpD,EAAO+E,GACR7J,KAAKoD,OAAO8E,KAAKpD,EAAO+E,EAC5B,CACAC,GAAAA,CAAIhF,EAAO+E,GACP7J,KAAKoD,OAAO0G,IAAIhF,EAAO+E,EAC3B,CACAX,cAAAA,CAAepE,EAAO+E,GAClB7J,KAAKoD,OAAO8F,eAAepE,EAAO+E,EACtC,CACA3D,IAAAA,CAAK6D,EAAS3E,GACV,OAAO9D,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,IAC+B,qBAAhBA,KAAKgF,SACZlC,EAAIyB,SAAS,8BAA8Ba,WAErC2E,KAEVjH,EAAIyB,SAAS,iBAAgB,IAAIE,MAAOgC,mCAAkC,EAAI9D,EAAQqH,mBAAmB5E,MACrGpF,KAAKgF,QACLhF,KAAKgF,OAAOkB,MAAK,EAAIvD,EAAQqH,mBAAmB5E,GAExD,CACA,MAAOlD,GACHlC,KAAKkF,QAAQE,EAAQD,GAAIjD,EAC7B,CACJ,GACJ,CACA+H,wBAAAA,CAAyB5E,GACrB,OAAO/D,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,GAAmB,qBAARqF,EACP,OACJ,IAAI6E,EAAS,CACTb,OAAQ,CACJ/E,KAAMe,IAGV8E,GAAU,EAAIxH,EAAQqH,mBAAmB3E,GAC7CvC,EAAIyB,SAAS,kCACbzB,EAAIyB,SAAS4F,GACbA,GAAU,EAAIxH,EAAQqH,mBAAmBE,GACzClK,KAAKoD,OAAOwB,KAAK,UAAWuF,EAChC,GACJ,CACAC,MAAAA,CAAOV,GACC1J,KAAKqK,aACLrK,KAAKoD,OAAO8F,eAAe,OAAQlJ,KAAKqK,aAE5CrK,KAAKqK,YAAc,IAAM/I,EAAUtB,UAAM,OAAQ,GAAQ,YACrD8C,EAAIyB,SAAS,iBAAgB,IAAIE,MAAOgC,wCAClCiD,GACV,IACA1J,KAAKoD,OAAO2D,GAAG,OAAQ/G,KAAKqK,aAC5BrK,KAAK4H,uBACT,EAEJxI,EAAQmD,mBAAqBA,C,oCCjc7B,IAAIxC,EAAmBC,MAAQA,KAAKD,kBAAqBb,OAAOe,OAAU,SAASC,EAAGC,EAAGC,EAAGC,QAC7EC,IAAPD,IAAkBA,EAAKD,GAC3B,IAAIG,EAAOrB,OAAOsB,yBAAyBL,EAAGC,GACzCG,KAAS,QAASA,GAAQJ,EAAEM,WAAaF,EAAKG,UAAYH,EAAKI,gBAClEJ,EAAO,CAAEK,YAAY,EAAMC,IAAK,WAAa,OAAOV,EAAEC,EAAI,IAE5DlB,OAAOC,eAAee,EAAGG,EAAIE,EACjC,EAAM,SAASL,EAAGC,EAAGC,EAAGC,QACTC,IAAPD,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,EACd,GACIU,EAAsBd,MAAQA,KAAKc,qBAAwB5B,OAAOe,OAAU,SAASC,EAAGa,GACxF7B,OAAOC,eAAee,EAAG,UAAW,CAAEU,YAAY,EAAMvB,MAAO0B,GACnE,EAAK,SAASb,EAAGa,GACbb,EAAE,WAAaa,CACnB,GACIC,EAAgBhB,MAAQA,KAAKgB,cAAiB,SAAUC,GACxD,GAAIA,GAAOA,EAAIR,WAAY,OAAOQ,EAClC,IAAIC,EAAS,CAAC,EACd,GAAW,MAAPD,EAAa,IAAK,IAAIb,KAAKa,EAAe,YAANb,GAAmBlB,OAAOiC,UAAUC,eAAeC,KAAKJ,EAAKb,IAAIL,EAAgBmB,EAAQD,EAAKb,GAEtI,OADAU,EAAmBI,EAAQD,GACpBC,CACX,EACII,EAAatB,MAAQA,KAAKsB,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMtC,GAAS,OAAOA,aAAiBoC,EAAIpC,EAAQ,IAAIoC,GAAE,SAAUG,GAAWA,EAAQvC,EAAQ,GAAI,CAC3G,OAAO,IAAKoC,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU1C,GAAS,IAAM2C,EAAKN,EAAUO,KAAK5C,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAS9C,GAAS,IAAM2C,EAAKN,EAAU,SAASrC,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKd,GAAUA,EAAOkB,KAAOR,EAAQV,EAAO7B,OAASsC,EAAMT,EAAO7B,OAAOgD,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACA/C,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQkL,uBAAoB,EAC5B,MAAMC,EAAYzK,EAAQ,OACpB0K,EAAa1K,EAAQ,OACrB2C,EAAqB3C,EAAQ,OAC7B2K,EAAiB3K,EAAQ,OACzB0C,EAAc1C,EAAQ,OACtB+C,EAAkB/C,EAAQ,OAC1B4C,EAAY5C,EAAQ,OACpB6C,EAAU7C,EAAQ,OAClB4K,EAAW5K,EAAQ,OACnB6K,EAAQ7K,EAAQ,OAChB8K,EAAa9K,EAAQ,OACrBgD,EAAM9B,EAAalB,EAAQ,QAC3B+K,EAAQ/K,EAAQ,OAChBgL,EAAWhL,EAAQ,OACnBiL,EAAQjL,EAAQ,OACtB,MAAMwK,EACFpH,WAAAA,CAAY8H,OAAU1K,GAClBN,KAAKoD,OAAS,IAAIP,EAAgBQ,aAElCrD,KAAKiL,eAAiB,IAAIvI,EAAUuB,QAAQxB,EAAmByI,4BAA8BF,EAASvI,EAAmByI,6BACzHlL,KAAKmL,OAAS,IAAIT,EAASU,cAC3B,IAAIC,GAAQ,EAAIN,EAAMO,WAGtB,IAFA,EAAIT,EAAMtG,UAAU,WAAY8G,GAChCvI,EAAIyI,UAAU,8BACVF,EAAO,CAEP,MAAMG,EAAcxL,KAAKyL,0BACzB,EAAIZ,EAAMtG,UAAU,eAAgBiH,GACpCxL,KAAKmL,OAAS,IAAIT,EAASU,cAAcI,EAC7C,CACAxL,KAAK0L,WAAa1L,KAAK2L,sBACvB3L,KAAK4L,eAAe5L,KAAK0L,YAEzB1L,KAAK6L,UAAY,IAAItB,EAAUhI,mBAAmBC,EAAYsJ,uBAC9D9L,KAAK+L,UAAYtH,KAAKC,MAEtB1E,KAAKgM,kBAAoB,GACzBhM,KAAKiM,aAAe,GACpBnJ,EAAIyB,SAAS,yCAAyCvE,KAAKgM,oBAC/D,CACAE,gBAAAA,GACIlM,KAAK+L,UAAYtH,KAAKC,KAC1B,CACAyH,iBAAAA,CAAkBC,GACd,IAAIC,GAAY,EAAIzB,EAAWZ,mBAAmBoC,GAElDpM,KAAKiL,eAAeqB,gBAAgBD,EAAW5J,EAAmB8J,wBACtE,CACAd,sBAAAA,GAEI,MAAMe,EAAKxM,KAAKiL,eAAewB,cAAchK,EAAmB8J,yBAC1DG,EAAUF,EAChB,GAAsB,iBAAXE,EAAqB,CAC5B5J,EAAIyB,SAAS,0BACbzB,EAAIyB,SAASmI,GACb,IAAIlB,GAAc,EAAIZ,EAAWxB,eAAesD,GAChD,OAAOlB,CACX,CAIA,OAFIxL,KAAKiL,eAAe0B,aAEjB,IACX,CACAf,cAAAA,CAAeQ,GACX,IAAIQ,EAAa,CACbC,WAAW,EAAIlK,EAAQmK,aAAaV,EAAQS,WAC5CE,WAAW,EAAIpK,EAAQmK,aAAaV,EAAQW,YAEhDjK,EAAIyB,SAAS,eACb,IAAI8H,GAAY,EAAIzB,EAAWZ,mBAAmB4C,GAClD9J,EAAIyB,SAAS8H,GAEbrM,KAAKiL,eAAeqB,gBAAgBD,EAAW5J,EAAmBuK,qBACtE,CACArB,mBAAAA,GACI,MAAMa,EAAKxM,KAAKiL,eAAewB,cAAchK,EAAmBuK,sBAC1DN,EAAUF,EAChB,GAAsB,iBAAXE,EAAqB,CAE5B5J,EAAIyB,SAAS,sBACbzB,EAAIyB,SAASmI,GACb,IAAIO,GAAiB,EAAIrC,EAAWxB,eAAesD,GACnD5J,EAAIyB,SAAS,eACbzB,EAAIyB,SAAS0I,GACb,IAAIb,EAAU,CACVS,WAAW,EAAIlK,EAAQuK,gBAAgBD,EAAeJ,WACtDE,WAAW,EAAIpK,EAAQuK,gBAAgBD,EAAeF,YAE1D,OAAOX,CACX,CAEI,OAAO,EAAIzB,EAAMwC,kBAEzB,CACAC,eAAAA,GAEI,OADAtK,EAAIyB,SAAS,yBAAyBvE,KAAKgM,qBACpChM,KAAKgM,kBAAkB3E,OAAS,CAC3C,CACAgG,OAAAA,CAAQC,GACJ,OAAOhM,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,aAAa,EAAI2K,EAAM4C,SAASD,EAAO7C,EAAe+C,sBAAuB/C,EAAegD,qBAC5FzN,KAAK0L,WACT,GACJ,CACAgC,YAAAA,CAAaC,GACT,OAAOrM,EAAUtB,KAAMiI,eAAW,GAAQ,UAAW2F,EAAOC,GAAY,GACpE,IAAI9I,EAAI+I,EAAIC,EAAIC,EAAIC,EAGpB,GAFAjO,KAAKoD,OAAOwB,KAAKgJ,EAAMzI,GAAIyI,IAEtBC,EAAW,OACN7N,KAAKkO,QAAQN,EAAMzI,IAAI,GAC7B,IAAImI,EAA4F,QAAnFvI,EAAK/E,KAAKiL,eAAekD,QAAQ1L,EAAmB2L,iCAA8C,IAAPrJ,OAAgB,EAASA,EAAG2H,QACpI,GAAIY,EAAO,CACP,IAAIe,EAAWT,GACoE,QAA9EG,EAAgC,QAA1BD,EAAKO,EAAShF,cAA2B,IAAPyE,OAAgB,EAASA,EAAGxJ,YAAyB,IAAPyJ,OAAgB,EAASA,EAAGO,aACnHtO,KAAKkM,yBACClM,KAAKuO,YAAYvO,KAAK+L,UAAUpH,WAA2F,QAA9EsJ,EAAgC,QAA1BD,EAAKK,EAAShF,cAA2B,IAAP2E,OAAgB,EAASA,EAAG1J,YAAyB,IAAP2J,OAAgB,EAASA,EAAGK,UAAWhB,GAExL,CACJ,CACJ,GACJ,CACAkB,cAAAA,CAAelB,GACX,OAAOhM,EAAUtB,UAAM,OAAQ,GAAQ,YAGnC,GAFA8C,EAAIyI,UAAU,yCACdzI,EAAIyB,SAAS,uCAAuC+I,KAC9B,kBAAVA,GAAwC,IAAjBA,EAAMjG,OACrC,MAAM,IAAIxD,MAAM,6BAEpBf,EAAIyB,SAAS,wDACPvE,KAAK0I,YAAW,GACtB1I,KAAKiL,eAAepD,YAAYyF,EAAO7K,EAAmB2L,0BAC1DtL,EAAIyB,SAAS,oDACPvE,KAAKuI,SAAQ,EACvB,GACJ,CACAkG,cAAAA,GACI,IAAInB,GAAQ,EAAI3K,EAAQ+L,iBACxB5L,EAAIyB,SAAS,yBAAyB+I,KACtCxK,EAAIyI,UAAU,+CACdvL,KAAKiM,aAAeqB,EACpB,MAAMqB,EAAO,CACTC,UAAWtB,EACXuB,SAAU7O,KAAKmL,OAAO2D,mBAAmBjC,WAE7C,OAAO8B,CACX,CACApG,OAAAA,GACI,OAAOjH,EAAUtB,KAAMiI,eAAW,GAAQ,UAAW8G,GAAc,GAC/D/O,KAAKgP,SAAU,IAAIvK,MAAOwK,WAC1B,EAAIpE,EAAMtG,UAAU,wBAAyBvE,KAAKgP,SAClDlM,EAAIyI,UAAU,oCACd,IAAI2D,EAAgBlP,KAAKiL,eAAekD,QAAQ1L,EAAmB2L,0BAEnE,IAAId,EAAQtN,KAAKiM,aAGjB,GAFAnJ,EAAIyB,SAAS,yBAAyB+I,KAElCyB,EAAa,CACgB,qBAAlBG,GAAmD,OAAlBA,IACxCpM,EAAIyB,SAAS,yBAAyB2K,KACtC5B,EAAQ4B,EAAcxC,SAE1B,IAAIyC,EAAwBnP,KAAKiL,eAAekD,QAAQ1L,EAAmB2M,qCACvED,IACAnP,KAAKgM,kBAAoBmD,EAAsBzC,SAC/C,EAAI7B,EAAMtG,UAAU,wDAAwDvE,KAAKgM,sBAErFlJ,EAAIyI,UAAU,2CAClB,CACA,GAAIwD,EAAa,CAEb,MAAMvD,EAAcxL,KAAKyL,yBACrBD,IACAxL,KAAKmL,OAAS,IAAIT,EAASU,cAAcI,GAEjD,CACA1I,EAAIyB,SAAS,yBAAyBvE,KAAKmL,OAAO2D,mBAAmBjC,aAErE7M,KAAKiL,eAAepD,YAAYyF,EAAO7K,EAAmB2L,0BAC1D,IAAIiB,QAAiBrP,KAAKqN,QAAQC,GAGlC,OAFAxK,EAAIyB,SAAS,uBAAuB8K,KACpCrP,KAAKiL,eAAepD,YAAYwH,EAAU,OACnC,IAAIxN,SAAQ,CAACD,EAASE,KAEzB9B,KAAK6L,UAAUzB,QAAO,IAAM9I,EAAUtB,UAAM,OAAQ,GAAQ,YACxD8C,EAAIyB,SAAS,wBACbzB,EAAIyI,UAAU,sBACd,MAAM+D,GAAU,IAAI7K,MAAOwK,WAC3B,EAAIpE,EAAMtG,UAAU,uBAAwB+K,EAAUtP,KAAKgP,SAE3DhP,KAAKoD,OAAO8E,KAAKlI,KAAK+L,UAAUpH,YAAaH,GAAQlD,EAAUtB,UAAM,OAAQ,GAAQ,YAEjF,GAAIwE,GAAOA,EAAI+K,MAAO,CAClBzM,EAAIwD,SAAS,qBACbxD,EAAIyI,UAAU,iCACRvL,KAAK6L,UAAUnD,aACrB,IAAI6G,EAAQ,IAAI1L,MAChB0L,EAAMhG,QAAU/E,EAAI+K,MAAMhG,QAC1BgG,EAAMC,KAAOhL,EAAI+K,MAAMtK,KAAKN,WAE5B7C,EAAOyN,EACX,CAEAvP,KAAKkM,mBACLlM,KAAKoD,OAAO8E,KAAKlI,KAAK+L,UAAUpH,YAAaH,GAAQlD,EAAUtB,UAAM,OAAQ,GAAQ,YAEjF,GAAIwE,GAAOA,EAAI+K,MAAO,CAClBzM,EAAIwD,SAAS,yBACbxD,EAAIyI,UAAU,qCACRvL,KAAK6L,UAAUnD,aACrB,IAAI6G,EAAQ,IAAI1L,MAChB0L,EAAMhG,QAAU/E,EAAI+K,MAAMhG,QAC1BgG,EAAMC,KAAOhL,EAAI+K,MAAMtK,KAAKN,WAE5B7C,EAAOyN,EACX,CACAvP,KAAKkM,mBACLpJ,EAAIyB,SAAS,0CAA0CvE,KAAK+L,aAC5DjJ,EAAIyI,UAAU,yCACd,MAAMkE,GAAQ,IAAIhL,MAAOwK,WACzB,EAAIpE,EAAMtG,UAAU,oCAAqCkL,EAAQzP,KAAKgP,eAEhEhP,KAAK0P,4BAA4B1P,KAAK+L,UAAUpH,WAAY2I,GAClE1L,GACJ,MACAkB,EAAIyB,SAAS,0CAA0CvE,KAAK+L,aAC5DjJ,EAAIyI,UAAU,+BACd,MAAMoE,GAAS,IAAIlL,MAAOwK,WAC1B,EAAIpE,EAAMtG,UAAU,iCAAkCoL,EAAS3P,KAAKgP,eAC9DhP,KAAK6L,UAAU3F,MAAK,IAAM5E,EAAUtB,UAAM,OAAQ,GAAQ,YAC5D8C,EAAIyB,SAAS,wCACPvE,KAAK6L,UAAUtD,UAChBqH,OAAOzH,KACR,EAAI0C,EAAMtG,UAAU,kCAAmC4D,GACvDrG,EAAOqG,EAAI,GAEnB,KAAI,CACAhD,GAAInF,KAAK+L,UAAUpH,WACnBkL,QAASrN,EAAYsN,oBACrBC,OAAQvF,EAAW9K,mBACnB2J,OAAQ,CACJiE,MAAOA,IAGnB,MACAxK,EAAIyB,SAAS,mBACbzB,EAAIyI,UAAU,kDACRvL,KAAK6L,UAAU3F,MAAK,IAAM5E,EAAUtB,UAAM,OAAQ,GAAQ,YAC5D8C,EAAIyB,SAAS,wCACPvE,KAAK6L,UAAUtD,UAChBqH,OAAOzH,KACR,EAAI0C,EAAMtG,UAAU,kCAAmC4D,GACvDrG,EAAOqG,EAAI,GAEnB,KAAI,CACAhD,GAAInF,KAAK+L,UAAUpH,WACnBkL,QAASrN,EAAYsN,oBACrBC,OAAQvF,EAAW5K,qBACnByJ,OAAQ,CACJ2G,MAAOX,KAIfrP,KAAK6L,UAAUpC,iBAAiB3E,IAC5B,IAAIC,EAGJ,GAFAjC,EAAIyB,SAAS,0BACbzB,EAAIyB,SAASO,KACP,WAAYA,MAAY,SAAUA,EAAM,WAE1C,YADA9E,KAAK0N,aAAa5I,GAAO,GAG7B,IAAIwE,EAAsC,QAA5BvE,EAAKD,EAAMuE,OAAO/E,YAAyB,IAAPS,OAAgB,EAASA,EAAGwE,QAC9E,GAAsB,qBAAXD,EAAwB,CAC/BA,EAASA,EAAO2G,QAAQ,KAAM,KAC9B,IAAIC,GAAgB,EAAItF,EAAWxB,eAAeE,GACrB,kBAAlB4G,GAA8B,aAAcA,GAAiBA,EAAcrB,UAAYqB,EAAcrB,SAASxH,OAAS,IAC9HrH,KAAKgM,kBAAoBkE,EAAcrB,SACvC/L,EAAIyB,SAAS,6CAA6CvE,KAAKgM,qBAG/DhM,KAAKiL,eAAepD,YAAY7H,KAAKgM,kBAAmBvJ,EAAmB2M,qCAE3EpP,KAAKmM,kBAAkBnM,KAAKmL,OAAO2D,oBAE3C,CAEA9O,KAAK0N,aAAa5I,EAAOA,EAAMiL,SAAWvF,EAAWhL,uBAAuB,GAEpF,MACAQ,KAAK6L,UAAUtD,UAAUqH,OAAOzH,KAC5B,EAAI0C,EAAMtG,UAAU,kCAAmC4D,GACvDrG,EAAOqG,EAAI,GACb,GAEV,GACJ,CACAO,UAAAA,GACI,OAAOpH,EAAUtB,KAAMiI,eAAW,GAAQ,UAAW8G,GAAc,SACzD/O,KAAK6L,UAAUnD,aACrB5F,EAAIyI,UAAU,sBAGdvL,KAAKiL,eAAe0B,WAAWlK,EAAmB2L,0BAC7CW,IACD/O,KAAKiL,eAAe0B,WAAWlK,EAAmB2M,qCAClDpP,KAAKgM,kBAAoB,IACzB,EAAInB,EAAMtG,UAAU,2DAA2DvE,KAAKgM,qBAE5F,GACJ,CACAnD,WAAAA,CAAY/D,EAAOiE,EAASoH,GACxBnQ,KAAK6L,UAAUhD,aAAY,EAAI+B,EAAWZ,mBAAmBlF,IAASwE,IAGlE,GAFAA,EAASA,EAAO2G,QAAQ,KAAM,KAC9BnN,EAAIyB,SAAS,oBAAoB+E,KACX,qBAAXA,EAAwB,CAC/B,IAAI8G,GAAS,EAAIxF,EAAWxB,eAAeE,GACvCjE,EAAM+K,EAAO7G,QACjB,IAAIrI,EAgBJ,OAfImE,EAAIgL,YAAYC,WAAW,KAC3BpP,EAASmE,GAGL+K,EAAOvB,UAAYuB,EAAOvB,SAASxH,OAAS,IAC5CrH,KAAKgM,kBAAoBoE,EAAOvB,SAChC7O,KAAKiL,eAAepD,YAAY7H,KAAKgM,kBAAmBvJ,EAAmB2M,qCAC3EtM,EAAIyB,SAAS,yCAAyCvE,KAAKgM,qBAC3DlJ,EAAIyB,SAAS,kCAAiC,EAAI5B,EAAQmK,aAAa9M,KAAKmL,OAAOiB,QAAQS,cAE3F7M,KAAKmM,kBAAkBnM,KAAKmL,OAAO2D,qBAEvC5N,EAASlB,KAAKmL,OAAOrC,QAAQzD,EAAKrF,KAAKgM,oBAE3ClJ,EAAIyB,SAAS,oBAAoBrD,KAC1BA,CACX,CACgB,GACjB6H,EAASoH,EAChB,CACAI,OAAAA,CAAQlL,GACJ,OAAO/D,EAAUtB,UAAM,OAAQ,GAAQ,YACnC8C,EAAIyB,SAAS,uBAAuBc,KACpCvC,EAAIyI,UAAU,wBACd,IAAIhC,EAAUlE,EACdvC,EAAIyB,SAAS,gDAAgDgF,EAAQlC,UAErE,IAAIiG,EAAQtN,KAAKiL,eAAekD,QAAQ1L,EAAmB2L,0BAC3DtL,EAAIyB,SAAS,+BAAyC,OAAV+I,QAA4B,IAAVA,OAAmB,EAASA,EAAMZ,WAChG1M,KAAKkM,mBACL,MAAM9G,EAAU,CACZD,GAAInF,KAAK+L,UAAUpH,WACnBoL,OAAQvF,EAAW7K,uBACnBkQ,QAASrN,EAAYsN,oBACrBzG,OAAQ,CACJE,QAAS,CACL+D,MAAiB,OAAVA,QAA4B,IAAVA,OAAmB,EAASA,EAAMZ,QAC3DnD,QAASA,EACTiH,IAAKhO,EAAYiO,4BAiB7B,OAbAzQ,KAAKoD,OAAO8E,KAAKlI,KAAK+L,UAAUpH,YAAaH,GAAQlD,EAAUtB,UAAM,OAAQ,GAAQ,YAE7EwE,GAAOA,EAAI+K,MACXzM,EAAIwD,SAAS,KAAI,IAAI7B,MAAOgC,0CAEvBjC,IAAQA,EAAI+K,OACjBzM,EAAIyB,SAAS,iBAAgB,IAAIE,MAAOgC,uCAAuCzG,KAAK+L,sBAE5F,YACM/L,KAAK6L,UAAU3F,MAAK,IAAM5E,EAAUtB,UAAM,OAAQ,GAAQ,YAE5D,OADA8C,EAAIyB,SAAS,wCACAvE,KAAK6L,UAAUtD,SAChC,KAAInD,GACGpF,KAAK+L,SAChB,GACJ,CACA7F,IAAAA,CAAKwK,GACD,OAAOpP,EAAUtB,KAAMiI,eAAW,GAAQ,UAAW5C,EAAKmL,EAAMhO,EAAYiO,0BAIxE,GAFA3N,EAAIyB,SAAS,uBAAuBc,KACpCvC,EAAIyI,UAAU,qBACTvL,KAAKoN,kBAEN,MAAM,IAAIvJ,MAAM,yBAEpB,IAAI0F,EAAUvJ,KAAKmL,OAAOwF,QAAQtL,EAAKrF,KAAKgM,mBAC5ClJ,EAAIyB,SAAS,gDAAgDgF,EAAQlC,UACrEvE,EAAI8N,YAAY9F,EAAS+F,cAAcC,IAAK,WAAYvH,EAAQlC,OAAO1C,YAEvE,IAAI2I,EAAQtN,KAAKiL,eAAekD,QAAQ1L,EAAmB2L,0BAC3DtL,EAAIyB,SAAS,+BAAyC,OAAV+I,QAA4B,IAAVA,OAAmB,EAASA,EAAMZ,WAChG1M,KAAKkM,mBACL,MAAM9G,EAAU,CACZD,GAAInF,KAAK+L,UAAUpH,WACnBoL,OAAQvF,EAAW7K,uBACnBkQ,QAASrN,EAAYsN,oBACrBzG,OAAQ,CACJE,QAAS,CACL+D,MAAiB,OAAVA,QAA4B,IAAVA,OAAmB,EAASA,EAAMZ,QAC3DnD,QAASA,EACTiH,IAAKA,KAiBjB,OAbAxQ,KAAKoD,OAAO8E,KAAKlI,KAAK+L,UAAUpH,YAAaH,GAAQlD,EAAUtB,UAAM,OAAQ,GAAQ,YAE7EwE,GAAOA,EAAI+K,MACXzM,EAAIwD,SAAS,KAAI,IAAI7B,MAAOgC,0CAEvBjC,IAAQA,EAAI+K,OACjBzM,EAAIyB,SAAS,iBAAgB,IAAIE,MAAOgC,uCAAuCzG,KAAK+L,sBAE5F,YACM/L,KAAK6L,UAAU3F,MAAK,IAAM5E,EAAUtB,UAAM,OAAQ,GAAQ,YAE5D,OADA8C,EAAIyB,SAAS,wCACAvE,KAAK6L,UAAUtD,SAChC,KAAInD,GACGpF,KAAK+L,SAChB,GACJ,CACAmC,OAAAA,CAAQ6C,EAASC,GACb,OAAO1P,EAAUtB,KAAMiI,eAAW,GAAQ,UAAWgJ,EAAOlI,EAASmI,OAAS5Q,GAC1E,IAAgB,IAAZyI,EAAkB,CAClB,MAAM3D,EAAU,CACZD,GAAI8L,EACJpB,QAASrN,EAAYsN,oBACrB5O,QAAQ,SAENlB,KAAK6L,UAAU3F,MAAK,IAAM5E,EAAUtB,UAAM,OAAQ,GAAQ,YAE5D,OADA8C,EAAIyB,SAAS,wCACAvE,KAAK6L,UAAUtD,SAChC,KAAInD,EACR,MACK,GAAI8L,EAAQ,CACb,MAAM9L,EAAU,CACZD,GAAI8L,EACJpB,QAASrN,EAAYsN,oBACrBP,MAAO,CACHtK,KAAMiM,EAAOjM,KACbsE,QAAS2H,EAAO3H,gBAGlBvJ,KAAK6L,UAAU3F,MAAK,IAAM5E,EAAUtB,UAAM,OAAQ,GAAQ,YAE5D,OADA8C,EAAIyB,SAAS,wCACAvE,KAAK6L,UAAUtD,SAChC,KAAInD,EACR,CACJ,GACJ,CAEAmJ,WAAAA,CAAY0C,EAAO3C,EAAWhB,GAC1B,OAAOhM,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,MAAMoF,EAAU,CACZD,GAAI8L,EACJpB,QAASrN,EAAYsN,oBACrBC,OAAQvF,EAAWhL,uBACnB6J,OAAQ,CACJ/E,KAAM,CACFgK,UAAWA,EACXhB,MAAOA,WAIbtN,KAAK6L,UAAU3F,MAAK,IAAM5E,EAAUtB,UAAM,OAAQ,GAAQ,YAE5D,OADA8C,EAAIyB,SAAS,wCACAvE,KAAK6L,UAAUtD,SAChC,KAAInD,EACR,GACJ,CACA+L,sBAAAA,CAAuBF,EAAO3C,EAAWhB,EAAOjE,GAC5C,OAAO/H,EAAUtB,UAAM,OAAQ,GAAQ,YACvC,GACJ,CAKA0P,2BAAAA,CAA4BuB,EAAO3D,GAC/B,OAAOhM,EAAUtB,UAAM,OAAQ,GAAQ,YAEnCA,KAAKoD,OAAO8E,KAAK+I,GAAQG,GAAoB9P,EAAUtB,UAAM,OAAQ,GAAQ,YACzE,IAAI+E,EAAI+I,EAER,GAAIsD,EAAgBlQ,OAAQ,CACxB,IAAImQ,EAAUD,EAAgBlQ,OAAOmQ,QACjCC,EAAeF,EAAgBlQ,OAAOoD,KAC1C,GAAIgN,EACA,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAajK,OAAQkK,IAAK,CAC1C,IAAIlM,EAAMiM,EAAaC,GACvB,GAAIlM,GAAOA,EAAIiI,OAASA,EAAO,CAC3B,IAAIgB,EAAYjJ,EAAIiJ,UACpBxL,EAAIyI,UAAU,6BACRvL,KAAK6L,UAAU5B,yBAAyB5E,GAE9CrF,KAAKkM,yBACClM,KAAKuO,YAAYvO,KAAK+L,UAAUpH,WAAY2J,EAAWhB,EACjE,CACJ,CAGA+D,IACArR,KAAKkM,yBACClM,KAAK0P,4BAA4B1P,KAAK+L,UAAUpH,WAAY2I,GAE1E,MAEIxK,EAAIyB,SAAS,0BAA2D,QAAhCQ,EAAKqM,EAAgB7B,aAA0B,IAAPxK,OAAgB,EAASA,EAAGE,UAA2C,QAAhC6I,EAAKsD,EAAgB7B,aAA0B,IAAPzB,OAAgB,EAASA,EAAGvE,UAEnM,MACAzG,EAAIyB,SAAS,sBACbzB,EAAIyI,UAAU,sBACd,MAAMiG,GAAW,IAAI/M,MAAOwK,WAC5B,EAAIpE,EAAMtG,UAAU,oBAAqBiN,EAAWxR,KAAKgP,SACzD,MAAM5J,EAAU,CACZD,GAAI8L,EACJpB,QAASrN,EAAYsN,oBACrBC,OAAQvF,EAAWjL,wBACnB8J,OAAQ,CACJ/E,KAAM,CACFgJ,MAAOA,WAIbtN,KAAK6L,UAAU3F,MAAK,IAAM5E,EAAUtB,UAAM,OAAQ,GAAQ,YAE5D,OADA8C,EAAIyB,SAAS,wCACAvE,KAAK6L,UAAUtD,SAChC,KAAInD,EACR,GACJ,CACAqM,UAAAA,GACI,OAAOnQ,EAAUtB,UAAM,OAAQ,GAAQ,YACnC8C,EAAIyI,UAAU,iCACdvL,KAAKiL,eAAe0B,YACxB,GACJ,CACA+E,kBAAAA,CAAmBC,EAAKrN,GACfA,GACDtE,KAAKiL,eAAe0B,WAAWlK,EAAmBmP,gCAAkCD,GAExF,IAAIE,GAAW,EAAIjH,EAAWZ,mBAAmB1F,GACjDtE,KAAKiL,eAAeqB,gBAAgBuF,EAAUpP,EAAmBmP,gCAAkCD,EACvG,CACAG,iBAAAA,CAAkBH,GACd,IAAII,EAAU/R,KAAKiL,eAAewB,cAAchK,EAAmBmP,gCAAkCD,GACrG,GAAII,EAAS,CACT,IAAIC,GAAS,EAAIpH,EAAWxB,eAAe2I,GAC3C,OAAOC,CACX,CAEJ,CACAC,yBAAAA,GACI,OAAOjS,KAAKoN,iBAChB,EAEJhO,EAAQkL,kBAAoBA,C,mCC5kB5BpL,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQmE,eAAiBnE,EAAQ0Q,oBAAsB1Q,EAAQqR,yBAA2BrR,EAAQ6H,uCAAyC7H,EAAQgI,yBAA2BhI,EAAQ8S,4BAA8B9S,EAAQ+S,sBAAwB/S,EAAQgT,sBAAwBhT,EAAQ0M,sBAAwB1M,EAAQiT,iCAA8B,EAC1VjT,EAAQiT,4BAA8B,GACtCjT,EAAQ0M,sBAAwB,oDAChC1M,EAAQgT,sBAAwB,mDAChChT,EAAQ+S,sBAAwB,wDAChC/S,EAAQ8S,4BAA8B,OACtC9S,EAAQgI,yBAA2B,CAC/BhI,EAAQ0M,sBACR1M,EAAQgT,sBACRhT,EAAQ+S,uBAEZ/S,EAAQ6H,uCAAyC,CAC7CU,SAAU,KACVF,SAAU,KACVP,SAAU,MAEd9H,EAAQqR,yBAA2B,IAEnCrR,EAAQ0Q,oBAAsB,MAC9B1Q,EAAQmE,eAAiB,CACrBC,UAAW,EACXY,WAAY,EACZqB,UAAW,EACXkD,aAAc,EACd7C,QAAS,E,qCC1BDhG,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACb,IAAIwB,EAAatB,MAAQA,KAAKsB,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMtC,GAAS,OAAOA,aAAiBoC,EAAIpC,EAAQ,IAAIoC,GAAE,SAAUG,GAAWA,EAAQvC,EAAQ,GAAI,CAC3G,OAAO,IAAKoC,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU1C,GAAS,IAAM2C,EAAKN,EAAUO,KAAK5C,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAS9C,GAAS,IAAM2C,EAAKN,EAAU,SAASrC,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKd,GAAUA,EAAOkB,KAAOR,EAAQV,EAAO7B,OAASsC,EAAMT,EAAO7B,OAAOgD,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACA/C,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQkT,YAAS,EACjB,MAAM1H,EAAa9K,EAAQ,OACrB+K,EAAQ/K,EAAQ,OAChBiD,EAAajD,EAAQ,OAErB6C,EAAU7C,EAAQ,OAClB8C,EAAU9C,EAAQ,OAClByS,EAAiBzS,EAAQ,KACzBiL,EAAQjL,EAAQ,OACtB,MAAMwS,EACFpP,WAAAA,CAAYsP,GACRxS,KAAKyS,gBAAkB,IAAIC,IAC3B1S,KAAK2S,mBAAqB,GAC1B3S,KAAKwS,kBAAoBA,GAEzB,EAAI3H,EAAM+H,sBAAsBC,cAChC7S,KAAKwS,kBAAkB3J,YAAY,gBAAgB,CAAC/D,EAAOO,KACvD,IAAIyN,GAAe,EAAIlI,EAAWxB,eAAe/D,IACjD,EAAIwF,EAAMtG,UAAU,2CAA2CuO,KAC/D9S,KAAK+S,eAAejO,EAAOgO,EAAa,IACzC,WACH,GACJ,CACAE,qBAAAA,CAAsBC,GAClBjT,KAAK2S,mBAAmBO,KAAKD,EACjC,CACAE,4BAAAA,CAA6BC,GACzBpT,KAAKoT,0BAA4BA,CACrC,CACA1K,UAAAA,IACI,EAAImC,EAAMtG,UAAU,0BACpBvE,KAAKyS,gBAAgBY,OACzB,CACAC,YAAAA,GACI,MAAMC,EAAY9O,KAAKC,MAAMC,WAE7B,OADA,EAAIkG,EAAMtG,UAAU,+BAAgCgP,GAC7CA,CACX,CACAC,qBAAAA,CAAsBD,EAAW3R,GAC7B5B,KAAKyS,gBAAgBgB,IAAIF,EAAW3R,EACxC,CACAsE,IAAAA,CAAKwN,EAASC,EAAeC,EAAQpD,GACjC,OAAOlP,EAAUtB,UAAM,OAAQ,GAAQ,aACnC,EAAI6K,EAAMtG,UAAU,+BAAgCsP,KAAKC,UAAUJ,IACnE,MAAMH,EAAYvT,KAAKsT,eACvB,IACI,IAAIvH,QAAkB/L,KAAKwS,kBAAkBtM,KAAK2N,KAAKC,UAAU5U,OAAO6U,OAAO7U,OAAO6U,OAAO,CAAC,EAAGL,GAAU,CAAEH,UAAWA,KAAe/C,GACvIxQ,KAAKwS,kBAAkBpP,OAAO8E,KAAK6D,EAAUpH,YAAaG,IACtD,IAAIC,GACJ,EAAI8F,EAAMtG,UAAU,gCAA+B,EAAIqG,EAAWZ,mBAAmBlF,MACjFA,GAASA,EAAM5D,SACgB,QAA9B6D,EAAK4O,EAAcK,aAA0B,IAAPjP,GAAyBA,EAAG1D,KAAKsS,GAC5E,IAEAA,EAAc/R,SACd5B,KAAKwT,sBAAsBD,EAAWI,EAAc/R,QAE5D,CACA,MAAOM,GACH,OAAOL,QAAQC,OAAOI,EAC1B,CACJ,GACJ,CACA+R,WAAAA,CAAYC,GACR,OAAO5S,EAAUtB,UAAM,OAAQ,GAAQ,aACnC,EAAI6K,EAAMtG,UAAU,gCAAiC2P,GACrD,MAAMX,EAAYvT,KAAKsT,eACvB,IAAII,EAAU,CACV3D,OAAQ,eACR1G,OAAQ,CAAE6K,YAAaA,UAErBlU,KAAKwS,kBAAkBjC,QAAQsD,KAAKC,UAAU5U,OAAO6U,OAAO7U,OAAO6U,OAAO,CAAC,EAAGL,GAAU,CAAEH,UAAWA,KAgB/G,GACJ,CACAR,cAAAA,CAAejO,EAAOqP,GAElB,IADA,EAAItJ,EAAMtG,UAAU,mDAAkD,EAAIqG,EAAWZ,mBAAmBmK,KAAarP,GACjH,cAAeqP,EAAU,EACzB,EAAItJ,EAAMtG,UAAU,kDACpB,IAAIgP,EAAYY,EAASZ,UACzB,MAAM3R,EAAU5B,KAAKyS,gBAAgB5R,IAAI0S,GACrC3R,IACA,EAAIiJ,EAAMtG,UAAU,mDAAoD3C,GACxEA,EAAQuS,GAERnU,KAAKyS,gBAAgB2B,OAAOb,MAG5B,EAAI1I,EAAMtG,UAAU,wDACI,eAApB4P,EAASpE,QACT/P,KAAK2S,mBAAmB0B,SAAQxK,GAAYA,MAC5C7J,KAAK2S,mBAAqB,GAC1B3S,KAAK0I,cAEoB,uBAApByL,EAASpE,UACd,EAAIlF,EAAMtG,UAAU,gEAChBvE,KAAKoT,6BACL,EAAIvI,EAAMtG,UAAU,yEACpBvE,KAAKoT,4BACLpT,KAAKoT,+BAA4B9S,IAIjD,CACJ,CACAgU,cAAAA,CAAeJ,EAAaK,GACxB,OAAOjT,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,IAAI+E,QACqC,QAAjCA,EAAK/E,KAAKwS,yBAAsC,IAAPzN,OAAgB,EAASA,EAAGyJ,eAAe0F,EAAY5G,OACxGiH,EAAgBL,EACpB,GACJ,CACAM,MAAAA,CAAOd,EAASe,EAAeF,GAC3B,OAAOjT,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,IAAI+E,EAAI+I,EACR,MAAM4G,EAAc1U,KAAKwS,kBAAkB/D,iBACrC8E,EAAYvT,KAAKsT,eACvB,IAAIqB,EAA8D,QAAzC5P,EAAK0P,EAAcG,wBAAqC,IAAP7P,GAAgBA,EAC1F,MAAM8P,EAAiB,CACnBC,YAAaC,OAAOhS,EAAWiS,sBAC/B1H,MAAOoH,EAAY9F,UACnBC,SAAU6F,EAAY7F,SACtB0E,UAAWA,EACX0B,SAAUR,EAAcS,SACxBC,SAAUzB,GAER0B,EAAoBvB,KAAKC,UAAUe,GACnCQ,GAAY,IAAIC,aAAcC,OAAOH,GACrCI,EAAgBC,KAAKC,OAAOC,gBAAgBN,IAC5CO,EAAc,GAAG7S,EAAW8S,0BAA0BL,KAC5D,EAAI3K,EAAMtG,UAAU,uCAAwCqR,GAC5D,MAAME,GAAQ,EAAIlT,EAAQmT,UAC1B,EAAIlL,EAAMtG,UAAU,kCAAkCuR,0BAA8BnB,KAChFmB,GAASnB,KACT,EAAI9J,EAAMtG,UAAU,mCACpB,EAAI5B,EAAQqT,6BAA6BJ,UAEJ,QAAjC9H,EAAK9N,KAAKwS,yBAAsC,IAAP1E,OAAgB,EAASA,EAAGpF,YAAW,GACxF1I,KAAKwT,sBAAsBD,GAAYY,IACnC,IAAI8B,EAAUjW,KAAKkW,UAAU/B,EAAUM,EAAeC,EAAY9F,WAClE2F,EAAgB0B,EAAS9B,EAAS,IAEtC,UACUnU,KAAKwS,kBAAkBjK,SACjC,CACA,MAAOrG,GAEH,MADA,EAAI2I,EAAMtG,UAAU,sBAAuBrC,GACrCA,CACV,CAKA,OAJK4T,GAASnB,KACV,EAAI9J,EAAMtG,UAAU,mCACpB,EAAI5B,EAAQqT,6BAA6BJ,IAEtC,CACHlB,YAAaA,EACbkB,aAAa,EAAIjT,EAAQwT,kBAAkBP,GAEnD,GACJ,CACAM,SAAAA,CAAUE,EAAiB3B,EAAenH,GACtC,GAA8B,WAA1B8I,EAAgBrG,OAAqB,CACrC,IAAIsG,GAAa,EAAI9D,EAAe+D,kCAAkCF,GACtE,GAAIC,EAAY,CACZ,IAAIJ,EAAU,CACV3I,MAAOA,EACPmH,cAAeA,EACf4B,WAAYA,GAEhB,OAAOJ,CACX,CACJ,CACA,OAAO,IACX,CACAM,gBAAAA,CAAiB7C,EAASe,EAAe+B,GACrC,OAAOlV,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,OAAO,IAAI6B,SAAQ,CAACD,EAASE,IAAWR,EAAUtB,UAAM,OAAQ,GAAQ,YACpE,IAAI+E,EAAI+I,EAAIC,EAAIC,EAChB,KACI,EAAInD,EAAMtG,UAAU,oCAAqCsP,KAAKC,UAAUJ,KACxE,EAAI7I,EAAMtG,UAAU,0CAA2CsP,KAAKC,UAAUW,IAC9E,IAAIgC,EAAmB,GACvB/C,EAAQW,SAASqC,IACb,IAAIlH,EAAOkH,EAAKlH,MACZA,EAAKc,WAAW,oBAAsBd,EAAKc,WAAW,SACtDmG,EAAiBvD,KAAKwD,EAC1B,KAEJ,EAAI7L,EAAMtG,UAAU,6CAA8CsP,KAAKC,UAAU2C,IACjF,MAAM/B,EAAc1U,KAAKwS,kBAAkB/D,iBACrC8E,EAAYvT,KAAKsT,eACvB,IAAIqB,EAA8D,QAAzC5P,EAAK0P,EAAcG,wBAAqC,IAAP7P,GAAgBA,EAC1F,MAAM4R,EAA0B,CAC5B7B,YAAaC,OAAOhS,EAAWiS,sBAC/B1H,MAAOoH,EAAY9F,UACnBC,SAAU6F,EAAY7F,SACtB0E,UAAWA,EACX0B,SAAUR,EAAcS,SACxBC,SAAUsB,EACVG,SAA0G,QAA/F9I,EAAuB,OAAlB2G,QAA4C,IAAlBA,OAA2B,EAASA,EAAcmC,gBAA6B,IAAP9I,EAAgBA,EAAK,QAErI0H,GAAgB,EAAIzK,EAAM8L,qBAAqBF,GACrDA,EAAwBC,SAA2G,QAA/F7I,EAAuB,OAAlB0G,QAA4C,IAAlBA,OAA2B,EAASA,EAAcmC,gBAA6B,IAAP7I,EAAgBA,EAAK,QAChK,EAAIlD,EAAMtG,UAAU,uDAAwDsP,KAAKC,UAAU6C,IAC3F,IAAIG,EAAc,GAEdnC,IACAmC,GAAc,EAAI/L,EAAMgM,YAAYJ,EAAyBlC,EAAcuC,QAASvC,EAAcwC,eAClG,EAAIpM,EAAMtG,UAAU,2CAA4CuS,IAEpE,MAAMI,EAAaA,IAAMzC,EAAcuC,SAAU,EAAIjM,EAAMoM,kCAAkCL,IACzF,EAAInU,EAAQyU,iBAAkB,EAAIzU,EAAQ0U,sBAAsBP,IAAe,EAAInU,EAAQqT,6BAA6Bc,IAC5H,EAAIjM,EAAMtG,UAAU,2CAA4CuS,GAChE,MAAMhB,GAAQ,EAAIlT,EAAQmT,SACtBD,GAASnB,KACT,EAAI9J,EAAMtG,UAAU,sCAAsCuR,0BAA8BnB,KACxFuC,WAEqC,QAAjClJ,EAAKhO,KAAKwS,yBAAsC,IAAPxE,OAAgB,EAASA,EAAGtF,YAAW,GACxF1I,KAAKwT,sBAAsBD,GAAYY,IACnC,IAAIpP,EAAI+I,EAAIC,EAAIC,EAChB,IACI,IAAIoI,EAAkBjC,EACtB,GAA8B,WAA1BiC,EAAgBrG,OAAqB,EACrC,EAAIlF,EAAMtG,UAAU,sDAAuDsP,KAAKC,UAAUsC,IAC1F,IAAIC,GAAa,EAAI9D,EAAe+D,kCAAkCF,GACtE,IAAIC,EAmBA,MAAM,IAAItT,EAAWqF,gBAAgBrF,EAAWsF,wBAAwBiP,eAnB5D,CACZ,IAAIC,GAC6F,QAA3FzJ,EAAwC,QAAlC/I,EAAKqR,EAAgBhR,eAA4B,IAAPL,OAAgB,EAASA,EAAGyS,iBAA8B,IAAP1J,OAAgB,EAASA,EAAG,KAAO,eAAgBsI,EAAgBhR,QAAQoS,UAAU,KAC1LD,EAAanB,EAAgBhR,QAAQoS,UAAU,GAAG,eAEtD,IAAIvB,EAAU,CACV3I,MAAOoH,EAAY9F,UACnB6F,cAAeA,EACf4B,WAAYA,EACZoB,OAAQvY,OAAO6U,OAAO7U,OAAO6U,OAAO,CAAC,EAAsC,QAAlChG,EAAKqI,EAAgBhR,eAA4B,IAAP2I,OAAgB,EAASA,EAAG0J,QAAS,CAAEF,WAAYA,KAEtIG,EAAkBtB,EAAgBhR,QAAQoS,UAAUG,MAAKjB,GAAsB,oBAAdA,EAAKlH,OACtEkI,GAAmBA,EAAgBE,wBACnC3B,EAAQ4B,aAAeH,EAAgBE,wBAE3C,EAAI/M,EAAMtG,UAAU,8CAA+CsP,KAAKC,UAAUmC,IAClFrU,EAAQqU,EACZ,CAIJ,MACK,GAA8B,iBAA1BG,EAAgBrG,SAAiE,QAAlC/B,EAAKoI,EAAgBhR,eAA4B,IAAP4I,OAAgB,EAASA,EAAG/I,MAC1H,MAAM,IAAIlC,EAAWqF,gBAAgBgO,EAAgBhR,QAAQH,KAErE,CACA,MAAO/C,GACHJ,EAAOI,EACX,KAEJ,UACUlC,KAAKwS,kBAAkBjK,SACjC,CACA,MAAOrG,GAEH,MADA,EAAI2I,EAAMtG,UAAU,gCAAiCrC,GAC/CA,CACV,CAMA,IALK4T,GAASnB,GACVuC,KAEJ,EAAIrM,EAAMtG,UAAU,kDAAmDiS,GACvExW,KAAKiU,YAAYuB,GACbgB,EAAmB,CACnB,MAAM7H,EAAO,CACTkG,eAAgB8B,EAChBC,SAAUnC,EAAcmC,SACxBK,aAAcxC,EAAcwC,eAEhC,EAAIpM,EAAMtG,UAAU,4CAA6CsP,KAAKC,UAAUnF,IAChF6H,EAAkB7H,EACtB,CACJ,CACA,MAAOY,IACH,EAAI1E,EAAMtG,UAAU,sCAAuCgL,GAC3DzN,EAAOyN,EACX,CACJ,KACJ,GACJ,EAEJnQ,EAAQkT,OAASA,C,qCCrTjBpT,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ6E,QAAU7E,EAAQkT,OAASlT,EAAQ0Y,wBAA0B1Y,EAAQkL,kBAAoBlL,EAAQmD,wBAAqB,EAC9H,IAAIgI,EAAYzK,EAAQ,OACxBZ,OAAOC,eAAeC,EAAS,qBAAsB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO0J,EAAUhI,kBAAoB,IACjI,IAAIwV,EAAsBjY,EAAQ,MAClCZ,OAAOC,eAAeC,EAAS,oBAAqB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOkX,EAAoBzN,iBAAmB,IACzI,IAAI0N,EAA4BlY,EAAQ,OACxCZ,OAAOC,eAAeC,EAAS,0BAA2B,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOmX,EAA0BF,uBAAyB,IAC3J,IAAIG,EAAWnY,EAAQ,OACvBZ,OAAOC,eAAeC,EAAS,SAAU,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOoX,EAAS3F,MAAQ,IACxG,IAAI5P,EAAY5C,EAAQ,OACxBZ,OAAOC,eAAeC,EAAS,UAAW,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO6B,EAAUuB,OAAS,G,qCCX3G,IAAIlE,EAAmBC,MAAQA,KAAKD,kBAAqBb,OAAOe,OAAU,SAASC,EAAGC,EAAGC,EAAGC,QAC7EC,IAAPD,IAAkBA,EAAKD,GAC3B,IAAIG,EAAOrB,OAAOsB,yBAAyBL,EAAGC,GACzCG,KAAS,QAASA,GAAQJ,EAAEM,WAAaF,EAAKG,UAAYH,EAAKI,gBAClEJ,EAAO,CAAEK,YAAY,EAAMC,IAAK,WAAa,OAAOV,EAAEC,EAAI,IAE5DlB,OAAOC,eAAee,EAAGG,EAAIE,EACjC,EAAM,SAASL,EAAGC,EAAGC,EAAGC,QACTC,IAAPD,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,EACd,GACIU,EAAsBd,MAAQA,KAAKc,qBAAwB5B,OAAOe,OAAU,SAASC,EAAGa,GACxF7B,OAAOC,eAAee,EAAG,UAAW,CAAEU,YAAY,EAAMvB,MAAO0B,GACnE,EAAK,SAASb,EAAGa,GACbb,EAAE,WAAaa,CACnB,GACIC,EAAgBhB,MAAQA,KAAKgB,cAAiB,SAAUC,GACxD,GAAIA,GAAOA,EAAIR,WAAY,OAAOQ,EAClC,IAAIC,EAAS,CAAC,EACd,GAAW,MAAPD,EAAa,IAAK,IAAIb,KAAKa,EAAe,YAANb,GAAmBlB,OAAOiC,UAAUC,eAAeC,KAAKJ,EAAKb,IAAIL,EAAgBmB,EAAQD,EAAKb,GAEtI,OADAU,EAAmBI,EAAQD,GACpBC,CACX,EACII,EAAatB,MAAQA,KAAKsB,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMtC,GAAS,OAAOA,aAAiBoC,EAAIpC,EAAQ,IAAIoC,GAAE,SAAUG,GAAWA,EAAQvC,EAAQ,GAAI,CAC3G,OAAO,IAAKoC,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU1C,GAAS,IAAM2C,EAAKN,EAAUO,KAAK5C,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAS9C,GAAS,IAAM2C,EAAKN,EAAU,SAASrC,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKd,GAAUA,EAAOkB,KAAOR,EAAQV,EAAO7B,OAASsC,EAAMT,EAAO7B,OAAOgD,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACIiW,EAAmBlY,MAAQA,KAAKkY,iBAAoB,SAAUjX,GAC9D,OAAQA,GAAOA,EAAIR,WAAcQ,EAAM,CAAE,QAAWA,EACxD,EACA/B,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ+Y,0BAA4B/Y,EAAQgZ,0BAA4BhZ,EAAQiZ,wBAA0BjZ,EAAQkZ,4BAA8BlZ,EAAQmZ,WAAanZ,EAAQoZ,WAAapZ,EAAQqZ,cAAgBrZ,EAAQsZ,qBAAuBtZ,EAAQuZ,cAAgBvZ,EAAQwZ,cAAgBxZ,EAAQyZ,aAAezZ,EAAQ0Z,cAAgB1Z,EAAQ2Z,gBAAkB3Z,EAAQ4Z,gBAAkB5Z,EAAQ6Z,mBAAgB,EAC5Z7Z,EAAQ+N,gBAAkBA,EAC1B/N,EAAQ8Z,WAAaA,EACrB9Z,EAAQ+Z,WAAaA,EACrB/Z,EAAQga,UAAYA,EACpBha,EAAQia,UAAYA,EACpBja,EAAQka,UAAYA,EACpBla,EAAQma,UAAYA,EACpBna,EAAQoa,WAAaA,EACrBpa,EAAQqa,WAAaA,EACrBra,EAAQsa,UAAYA,EACpBta,EAAQua,UAAYA,EACpBva,EAAQmO,QAAUA,EAClBnO,EAAQwa,UAAYA,EACpB,MAAMC,EAAU7Y,EAAalB,EAAQ,QAC/B8K,EAAa9K,EAAQ,OACrB6C,EAAU7C,EAAQ,OAClBga,EAAc5B,EAAgBpY,EAAQ,QACtCgD,EAAM9B,EAAalB,EAAQ,QAC3Bia,EAAgBja,EAAQ,OAgB9B,SAASqN,IAGL,OAAO2M,EAAYE,QAAQC,KAAK7N,SACpC,CACA,SAAS8M,EAAWgB,GAChB,OAAO,EAAItP,EAAWxB,gBAAe,EAAI2Q,EAAcI,cAAa,EAAIJ,EAAcK,eAAeF,EAAK9a,EAAQyZ,cAAezZ,EAAQwZ,eAC7I,CACA,SAASO,EAAWkB,GAChB,OAAO,EAAIN,EAAcI,cAAa,EAAIJ,EAAcK,gBAAe,EAAIxP,EAAWZ,mBAAmBqQ,GAAMjb,EAAQwZ,eAAgBxZ,EAAQyZ,aACnJ,CACA,SAASO,EAAUvM,GACf/J,EAAIyB,SAAS,eAAc,EAAI5B,EAAQmK,aAAaD,MACpD,IAAIyN,GAAe,EAAIP,EAAcI,aAAatN,EAAWzN,EAAQkZ,6BACrE,MAAO,CAAClZ,EAAQoZ,WAAYpZ,EAAQmZ,WAAY+B,GAAcC,KAAKnb,EAAQqZ,cAC/E,CACA,SAASY,EAAUmB,GACf,MAAOC,EAAQ1K,EAAQ2K,GAAcF,EAAOG,MAAMvb,EAAQqZ,eAC1D,GAAIgC,IAAWrb,EAAQoZ,YAAczI,IAAW3Q,EAAQmZ,WACpD,MAAM,IAAI1U,MAAM,0CAEpB,QAAmBvD,IAAfoa,EACA,MAAM,IAAI7W,MAAM,2BAEpB,MAAMgJ,GAAY,EAAIkN,EAAcK,eAAeM,EAAYtb,EAAQkZ,6BACvE,QAAkBhY,IAAduM,GAA2BA,EAAUxF,SAAWjI,EAAQ+Y,0BACxD,MAAM,IAAItU,MAAM,oDAEpB,OAAOgJ,CACX,CAEA,SAASyM,EAAUsB,GACf,OAAO,EAAIb,EAAcI,aAAaS,EAAOxb,EAAQyZ,aACzD,CACA,SAASU,EAAUsB,GACf,OAAO,EAAId,EAAcK,eAAeS,EAASzb,EAAQyZ,aAC7D,CAEA,SAASW,EAAWnQ,GAChB,OAAO,EAAI0Q,EAAcK,eAAe,CAACjB,EAAW9P,EAAOyR,QAAS3B,EAAW9P,EAAOjE,UAAUmV,KAAKnb,EAAQ0Z,eAAgB1Z,EAAQuZ,cACzI,CACA,SAASc,EAAWnV,GAChB,IAAIS,EAAI+I,EACR,MAAMzE,GAAS,EAAI0Q,EAAcI,aAAa7V,EAAMlF,EAAQuZ,eAAegC,MAAMvb,EAAQ0Z,eACnFgC,EAAS5B,EAAgC,QAApBnU,EAAKsE,EAAO,UAAuB,IAAPtE,EAAgBA,EAAK,MACtEK,EAAU8T,EAAgC,QAApBpL,EAAKzE,EAAO,UAAuB,IAAPyE,EAAgBA,EAAK,MAC7E,MAAO,CAAEgN,SAAQ1V,UACrB,CAEA,SAASsU,EAAUrQ,GACf,MAAO,CAAC8P,EAAW9P,EAAOyR,QAAS3B,EAAW9P,EAAOjE,SAAUkU,EAAUjQ,EAAO0R,YAAYR,KAAKnb,EAAQ0Z,cAC7G,CACA,SAASa,EAAUqB,GACf,IAAIjW,EAAI+I,EAAIC,EACZ,MAAM1E,EAAS2R,EAAIL,MAAMvb,EAAQ0Z,eAC3BgC,EAAS5B,EAAgC,QAApBnU,EAAKsE,EAAO,UAAuB,IAAPtE,EAAgBA,EAAK,MACtEK,EAAU8T,EAAgC,QAApBpL,EAAKzE,EAAO,UAAuB,IAAPyE,EAAgBA,EAAK,MACvEiN,EAAYxB,EAA+B,QAApBxL,EAAK1E,EAAO,UAAuB,IAAP0E,EAAgBA,EAAK,MACxEzJ,GAAO,EAAIyV,EAAcK,eAAe/Q,EAAO4R,MAAM,EAAG,GAAGV,KAAKnb,EAAQ0Z,eAAgB1Z,EAAQuZ,eACtG,MAAO,CAAEmC,SAAQ1V,UAAS2V,YAAWzW,OACzC,CACA,SAASiJ,EAAQ2N,EAAOC,EAAOC,EAAOC,GAClC,OAAO/Z,EAAUtB,KAAMiI,eAAW,GAAQ,UAAWqT,EAAKC,EAAK/K,EAAKpE,EAASoP,EAAMC,KAAKC,MAAMjX,KAAKC,QAC/F,MAAMoW,EAAS,CAAEa,IAAKvc,EAAQ4Z,gBAAiB4C,IAAKxc,EAAQ2Z,iBACtD8C,EAAMzC,EAAUhN,EAAQS,WACxBiP,EAAMN,EAAMhL,EACZuL,EAAM,oBACN3W,EAAU,CAAEyW,MAAKP,MAAKC,MAAKQ,MAAKP,MAAKM,OACrCxX,EAAOkV,EAAW,CAAEsB,SAAQ1V,YAElCtC,EAAIyB,SAAS,eAAe6H,EAAQW,cAAcX,EAAQW,UAAU1F,WACpE,MAAM0T,EAAYjB,EAAYE,QAAQC,KAAK+B,SAAS1X,EAAM8H,EAAQW,WAClE,OAAO2M,EAAU,CAAEoB,SAAQ1V,UAAS2V,aACxC,GACJ,CACA,SAASnB,EAAUoB,GACf,OAAO1Z,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,MAAM,OAAE8a,EAAM,QAAE1V,EAAO,KAAEd,EAAI,UAAEyW,GAAcpB,EAAUqB,GACvD,GAAIF,EAAOa,MAAQvc,EAAQ4Z,iBAAmB8B,EAAOc,MAAQxc,EAAQ2Z,gBACjE,MAAM,IAAIlV,MAAM,gCAEpB,MAAMgJ,EAAYwM,EAAUjU,EAAQyW,KACpC,OAAOhC,EAAQoC,OAAOpP,EAAWvI,EAAMyW,EAC3C,GACJ,CAnGA3b,EAAQ6Z,cAAgB,OACxB7Z,EAAQ4Z,gBAAkB,QAC1B5Z,EAAQ2Z,gBAAkB,MAC1B3Z,EAAQ0Z,cAAgB,IACxB1Z,EAAQyZ,aAAe,YACvBzZ,EAAQwZ,cAAgB,OACxBxZ,EAAQuZ,cAAgB,OACxBvZ,EAAQsZ,qBAAuB,GAC/BtZ,EAAQqZ,cAAgB,IACxBrZ,EAAQoZ,WAAa,MACrBpZ,EAAQmZ,WAAa,MACrBnZ,EAAQkZ,4BAA8B,YACtClZ,EAAQiZ,wBAA0B,IAClCjZ,EAAQgZ,0BAA4B,MACpChZ,EAAQ+Y,0BAA4B,E,mCCtEpCjZ,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQqO,qBAAuBrO,EAAQ8c,6BAA+B9c,EAAQoO,2BAAwB,EACtGpO,EAAQoO,sBAAwB,SAChCpO,EAAQ8c,6BAA+B,OACvC9c,EAAQqO,qBAAuB,K,mCCLnB3N,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACbZ,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQkX,iCAAmCA,EAC3ClX,EAAQ+c,+CAAiDA,EACzD,MAAMtR,EAAQ/K,EAAQ,OACtB,SAASwW,EAAiCF,GACtC,IAAIgG,EAA2BD,EAA+C/F,GAC9E,OAAOgG,CACX,CACA,SAASD,EAA+C/F,GACpD,IAAIlV,EAAS,CAAC,GACd,EAAI2J,EAAMtG,UAAU,yEAA0EsP,KAAKC,UAAUsC,IAC7G,IAAIiG,EAAoBjG,EAAgBhR,QAAQoS,UAAUG,MAAKjB,GAAsB,oBAAdA,EAAKlH,OAC5E,MAAM8M,EAAalG,EAAgBhR,QAAQoS,UAAUG,MAAKjB,GAAsB,aAAdA,EAAKlH,OACjE+M,EAAWnG,EAAgBhR,QAAQoS,UAAUG,MAAKjB,GAAsB,cAAdA,EAAKlH,OACrE,GAAI8M,IAAeD,EAAmB,EAClC,EAAIxR,EAAMtG,UAAU,oEACpB,IAAIiY,EAAUF,EAAWE,QACzBA,EAAU,OAASF,EAAWG,QAAU,IAAMD,EAC9C,IAAIlY,EAAO,CACPoY,SAAUJ,GAEVC,IACAjY,EAAKqY,UAAYJ,GAErBF,EAAoB,CAChB7M,KAAM,kBACNoN,SAAU,CAAC,CACHC,UAAW,MACXC,UAAW,CAACN,GACZO,QAAS,CAAC,uBACVC,MAAO,CAAC,EACR1Y,KAAMA,IAGtB,CA8BA,OA7BA,EAAIuG,EAAMtG,UAAU,0EAA2EsP,KAAKC,UAAUuI,IAC9GA,EAAkBO,SAASvI,SAAQqC,IAC/B,IAAIuG,EAAS,GACTL,EAAW,GACflG,EAAKoG,UAAUzI,SAAQ6I,IACnB,IAAIC,EAAaD,EAAYvC,MAAM,KAEnC,IADA,EAAI9P,EAAMtG,UAAU,8DAA+D4Y,EAAW9V,QAC1F8V,EAAW9V,QAAU,EAAG,CACxB,IAAI+V,EAAQD,EAAWlC,MAAM,EAAG,GAAGV,KAAK,KACxC0C,EAAO/J,KAAKkK,GACZR,EAAS1J,KAAKgK,IACd,EAAIrS,EAAMtG,UAAU,0DAA2D6Y,EAAO,eAAgBF,EAC1G,KAEAxG,EAAKpS,MAAQoS,EAAKpS,KAAKoY,WACvBhG,EAAKpS,KAAKoY,SAASlN,KAAO,YAE1BkH,EAAKpS,MAAQoS,EAAKpS,KAAKqY,YACvBjG,EAAKpS,KAAKqY,UAAUnN,KAAO,aAE/BtO,EAAOwV,EAAKmG,WAAa,CACrBI,OAAQA,EACRL,SAAUA,EACVG,QAASrG,EAAKqG,QACdC,MAAOtG,EAAKsG,MACZ5X,QAASsR,EAAKpS,OAElB,EAAIuG,EAAMtG,UAAU,0DAA2DsP,KAAKC,UAAU5S,GAAQ,IAEnGA,CACX,C,qCCjEA,IAAInB,EAAmBC,MAAQA,KAAKD,kBAAqBb,OAAOe,OAAU,SAASC,EAAGC,EAAGC,EAAGC,QAC7EC,IAAPD,IAAkBA,EAAKD,GAC3B,IAAIG,EAAOrB,OAAOsB,yBAAyBL,EAAGC,GACzCG,KAAS,QAASA,GAAQJ,EAAEM,WAAaF,EAAKG,UAAYH,EAAKI,gBAClEJ,EAAO,CAAEK,YAAY,EAAMC,IAAK,WAAa,OAAOV,EAAEC,EAAI,IAE5DlB,OAAOC,eAAee,EAAGG,EAAIE,EACjC,EAAM,SAASL,EAAGC,EAAGC,EAAGC,QACTC,IAAPD,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,EACd,GACIU,EAAsBd,MAAQA,KAAKc,qBAAwB5B,OAAOe,OAAU,SAASC,EAAGa,GACxF7B,OAAOC,eAAee,EAAG,UAAW,CAAEU,YAAY,EAAMvB,MAAO0B,GACnE,EAAK,SAASb,EAAGa,GACbb,EAAE,WAAaa,CACnB,GACIC,EAAgBhB,MAAQA,KAAKgB,cAAiB,SAAUC,GACxD,GAAIA,GAAOA,EAAIR,WAAY,OAAOQ,EAClC,IAAIC,EAAS,CAAC,EACd,GAAW,MAAPD,EAAa,IAAK,IAAIb,KAAKa,EAAe,YAANb,GAAmBlB,OAAOiC,UAAUC,eAAeC,KAAKJ,EAAKb,IAAIL,EAAgBmB,EAAQD,EAAKb,GAEtI,OADAU,EAAmBI,EAAQD,GACpBC,CACX,EACIgX,EAAmBlY,MAAQA,KAAKkY,iBAAoB,SAAUjX,GAC9D,OAAQA,GAAOA,EAAIR,WAAcQ,EAAM,CAAE,QAAWA,EACxD,EACA/B,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ6E,aAAU,EAClB,MAAMxB,EAAqB3C,EAAQ,OAC7Bga,EAAc5B,EAAgBpY,EAAQ,QACtC6C,EAAU7C,EAAQ,OAClB8C,EAAU9C,EAAQ,OAClBgD,EAAM9B,EAAalB,EAAQ,QAC3Bud,EAAUvd,EAAQ,OAClBwd,EAAcxd,EAAQ,OAC5B,MAAMmE,EACFf,WAAAA,CAAYqa,EAAQC,OAAYld,GAC5B,MAAMmd,GAAe,EAAI9a,EAAQ+a,uBAEjC5a,EAAIyB,SAAS,qCACTiZ,GACAxd,KAAK2d,qBAAqBH,EAAWD,GAGzCvd,KAAK4d,SAAW,GAChB5d,KAAK6d,SAAW,GAChB7d,KAAKud,OAASA,EACdza,EAAIyB,SAAS,8CACbzB,EAAIyB,SAASkZ,GACb,MAAMK,EAAWL,EAAatP,QAAQlK,EAAQ8Z,SAAWR,GACzD,GAAwB,qBAAbO,GAAyC,OAAbA,EAGnC,OAFAhb,EAAIyB,SAAS,sBACbvE,KAAKge,MAAQ,CAAC,GAIlB,GADAlb,EAAIyB,SAASuZ,IACK,OAAbA,QAAkC,IAAbA,OAAsB,EAASA,EAASzW,QAAU,EAAG,CAC3E,IAAI4W,GAAW,EAAIrb,EAAQwG,eAAe0U,GAC1C9d,KAAKge,MAAQC,CACjB,CACAnb,EAAIyB,SAAS,kBAAkBvE,KAAKge,SACV,qBAAfhe,KAAKge,OAAuC,MAAdhe,KAAKge,QAC1Che,KAAKge,MAAQ,CAAC,EAEtB,CACAL,oBAAAA,CAAqBO,EAAcC,GAC/B,GAAID,GAAgBA,EAAa7W,OAAS,GAAK8W,GAAcA,EAAW9W,OAAS,EAAG,CAEhFvE,EAAIyB,SAAS,8CACbzB,EAAIyB,SAASkZ,cACb,MAAMK,EAAWL,aAAatP,QAAQlK,EAAQ8Z,SAAWG,GACzD,GAAwB,qBAAbJ,GAAyC,OAAbA,EAEnC,YADAhb,EAAIyB,SAAS,wBAGjBzB,EAAIyB,SAASuZ,IACK,OAAbA,QAAkC,IAAbA,OAAsB,EAASA,EAASzW,QAAU,IAExEvE,EAAIyB,SAAS,2BAA4B2Z,EAAc,KAAMC,GAC7DV,aAAaW,QAAQna,EAAQ8Z,SAAWI,EAAYL,GAEpDhb,EAAIyB,SAAS,2BAA4B2Z,GACzCT,aAAaY,WAAWpa,EAAQ8Z,SAAWG,GAEnD,MAEIpb,EAAIyB,SAAS,oBAAqB2Z,EAE1C,CACArW,WAAAA,CAAY6E,EAASiF,EAAKxM,EAAK,KAC3B,IAAIuR,EAAO,CACPvR,GAAIA,EACJmZ,UAAW7Z,KAAKC,MAAMC,WACtB+H,QAASA,GAEb1M,KAAKue,SAAS7H,EAAM/E,EACxB,CACA4M,QAAAA,CAAS7H,EAAM/E,GACX,IAAI6M,EAAWva,EAAQ8Z,SAAW/d,KAAKud,OACvC,MAAME,GAAe,EAAI9a,EAAQ+a,uBACjC5a,EAAIyB,SAASvE,KAAKge,OAClBlb,EAAIyB,SAAS,kBAAkBvE,KAAKge,UAAUrM,MAAQ+E,KACtD1W,KAAKge,MAAMrM,GAAO+E,EAClB,IAAI+H,GAAgB,EAAI7b,EAAQoH,mBAAmBhK,KAAKge,OACxDlb,EAAIyB,SAAS,YAAYoN,OAAS3R,KAAKge,SACvCP,EAAaW,QAAQI,EAAUC,EACnC,CACAtQ,OAAAA,CAAQwD,GAEJ,OADA7O,EAAIyB,SAAS,uBAAuBoN,OAAS3R,KAAKge,SAC3Che,KAAKge,MAAMrM,EACtB,CACA+M,sBAAAA,GACI,IAAI3Z,EAAI+I,EAAIC,EAAIC,EAChB,MAAM2Q,EAAQ,GACRC,EAAU,GAChB,GAAI5e,KAAK4d,SAASvW,OAAS,IAA+B,QAAxBtC,EAAK/E,KAAK6d,gBAA6B,IAAP9Y,OAAgB,EAASA,EAAGsC,QAAU,EACpG,MAAO,CACHwX,GAAI7e,KAAK4d,SACTkB,GAAI9e,KAAK6d,UAGjB,IAAIkB,EAAqF,QAA7EjR,EAAK9N,KAAKmO,QAAQ1L,EAAmBuc,0CAAuD,IAAPlR,OAAgB,EAASA,EAAGpB,QACxHqS,IACDA,GAAO,EAAIpc,EAAQmK,aAAagN,EAAYE,QAAQiF,YAAYL,IAChE5e,KAAK6H,YAAYkX,EAAMtc,EAAmBuc,oCAE9C,IAAIH,EAAsF,QAAhF9Q,EAAK/N,KAAKmO,QAAQ1L,EAAmByc,6CAA0D,IAAPnR,OAAgB,EAASA,EAAGrB,QACzHmS,IACDA,GAAK,EAAIlc,EAAQmK,aAAagN,EAAYE,QAAQiF,YAAYN,IAC9D3e,KAAK6H,YAAYgX,EAAIpc,EAAmByc,uCAE5C,IAAIrB,EAA4F,QAAhF7P,EAAKhO,KAAKmO,QAAQ1L,EAAmB0c,6CAA0D,IAAPnR,OAAgB,EAASA,EAAGtB,QACpI,IAAKmR,EAAU,CAEX,IAAIuB,EAAWtF,EAAYE,QAAQiF,YAAY,IAC/CpB,GAAW,EAAIlb,EAAQmK,aAAasS,GACpCpf,KAAK6H,YAAYgW,EAAUpb,EAAmB0c,qCAClD,CAGA,OAFAnf,KAAK6d,SAAWA,EAChB7d,KAAK4d,UAAW,EAAIN,EAAY+B,QAAQR,EAAIE,EAAM,CAAEO,WAAY,KAAM3a,WAC/D,CACHka,GAAI7e,KAAK4d,SACTkB,GAAI9e,KAAK6d,SAEjB,CACAvR,eAAAA,CAAgBjH,EAAKsM,IACjB,EAAI0L,EAAQ9Y,UAAU,0CAA0CE,KAAKC,SACrE,IAAI6a,EAAYvf,KAAK0e,0BACrB,EAAIrB,EAAQ9Y,UAAU,wCAAwCE,KAAKC,SACnE,IAAIxD,EAASoc,EAAYkC,IAAI7O,QAAQtL,EAAKka,EAAUV,IAAIla,WACxD3E,KAAK6H,YAAY3G,EAAQyQ,IACzB,EAAI0L,EAAQ9Y,UAAU,wCAAwCE,KAAKC,QACvE,CACA+H,aAAAA,CAAckF,IACV,EAAI0L,EAAQ9Y,UAAU,wCAAwCE,KAAKC,SACnE,IAAIgS,EAAO1W,KAAKmO,QAAQwD,GACxB,GAAI+E,GAAQA,EAAKhK,QAAS,CACtB,IAAI6S,EAAYvf,KAAK0e,0BACrB,EAAIrB,EAAQ9Y,UAAU,sCAAsCE,KAAKC,SACjE,IAAIxD,EAASoc,EAAYkC,IAAI1W,QAAQ4N,EAAKhK,QAAS6S,EAAUV,IAAIla,SAAS2Y,EAAYmC,IAAIC,MAE1F,OADA,EAAIrC,EAAQ9Y,UAAU,sCAAsCE,KAAKC,SAC1DxD,CACX,CACA,OAAO,IACX,CACAyL,UAAAA,CAAWgF,OAAMrR,GACb,QAAYA,IAARqR,EAAmB,CAEnB3R,KAAKge,MAAQ,CAAC,EACd,IAAIQ,EAAWva,EAAQ8Z,SAAW/d,KAAKud,OACvCE,aAAaW,QAAQI,EAAU,GACnC,KACK,CACD,IAAIA,EAAWva,EAAQ8Z,SAAW/d,KAAKud,OACvC,MAAME,GAAe,EAAI9a,EAAQ+a,uBACjC5a,EAAIyB,SAASvE,KAAKge,OAClBhe,KAAKge,MAAMrM,GAAO,KAClB,IAAI8M,GAAgB,EAAI7b,EAAQoH,mBAAmBhK,KAAKge,OACxDlb,EAAIyB,SAAS,sBAAsBoN,OAAS3R,KAAKge,SACjDP,EAAaW,QAAQI,EAAUC,EACnC,CACJ,EAEJrf,EAAQ6E,QAAUA,EAClBA,EAAQ8Z,SAAW,e,mCCxLnB7e,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQugB,mCAAqCvgB,EAAQ+f,qCAAuC/f,EAAQ4f,kCAAoC5f,EAAQ8f,qCAAuC9f,EAAQwgB,qBAAuBxgB,EAAQgQ,oCAAsChQ,EAAQgP,yBAA2BhP,EAAQ4N,qBAAuB5N,EAAQwS,gCAAkCxS,EAAQmN,wBAA0BnN,EAAQ8L,4BAA8B9L,EAAQ8E,4BAAyB,EACzd9E,EAAQ8E,uBAAyB,KACjC9E,EAAQ8L,4BAA8B,UACtC9L,EAAQmN,wBAA0B,QAClCnN,EAAQwS,gCAAkC,QAC1CxS,EAAQ4N,qBAAuB,QAC/B5N,EAAQgP,yBAA2B,KACnChP,EAAQgQ,oCAAsC,MAC9ChQ,EAAQwgB,qBAAuB,iBAC/BxgB,EAAQ8f,qCAAuC,MAC/C9f,EAAQ4f,kCAAoC,MAC5C5f,EAAQ+f,qCAAuC,OAC/C/f,EAAQugB,mCAAqC,a,mCCb7CzgB,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQygB,6BAA+BzgB,EAAQ0gB,8CAA2C,EAC1F1gB,EAAQ0gB,yCAA2C,SACnD1gB,EAAQygB,6BAA+B,CACnCE,gBAAiB,U,qCCLTjgB,EAAA,OAACA,EAAA,OACb,IAAIC,EAAmBC,MAAQA,KAAKD,kBAAqBb,OAAOe,OAAU,SAASC,EAAGC,EAAGC,EAAGC,QAC7EC,IAAPD,IAAkBA,EAAKD,GAC3B,IAAIG,EAAOrB,OAAOsB,yBAAyBL,EAAGC,GACzCG,KAAS,QAASA,GAAQJ,EAAEM,WAAaF,EAAKG,UAAYH,EAAKI,gBAClEJ,EAAO,CAAEK,YAAY,EAAMC,IAAK,WAAa,OAAOV,EAAEC,EAAI,IAE5DlB,OAAOC,eAAee,EAAGG,EAAIE,EACjC,EAAM,SAASL,EAAGC,EAAGC,EAAGC,QACTC,IAAPD,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,EACd,GACIU,EAAsBd,MAAQA,KAAKc,qBAAwB5B,OAAOe,OAAU,SAASC,EAAGa,GACxF7B,OAAOC,eAAee,EAAG,UAAW,CAAEU,YAAY,EAAMvB,MAAO0B,GACnE,EAAK,SAASb,EAAGa,GACbb,EAAE,WAAaa,CACnB,GACIC,EAAgBhB,MAAQA,KAAKgB,cAAiB,SAAUC,GACxD,GAAIA,GAAOA,EAAIR,WAAY,OAAOQ,EAClC,IAAIC,EAAS,CAAC,EACd,GAAW,MAAPD,EAAa,IAAK,IAAIb,KAAKa,EAAe,YAANb,GAAmBlB,OAAOiC,UAAUC,eAAeC,KAAKJ,EAAKb,IAAIL,EAAgBmB,EAAQD,EAAKb,GAEtI,OADAU,EAAmBI,EAAQD,GACpBC,CACX,EACII,EAAatB,MAAQA,KAAKsB,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMtC,GAAS,OAAOA,aAAiBoC,EAAIpC,EAAQ,IAAIoC,GAAE,SAAUG,GAAWA,EAAQvC,EAAQ,GAAI,CAC3G,OAAO,IAAKoC,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU1C,GAAS,IAAM2C,EAAKN,EAAUO,KAAK5C,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAS9C,GAAS,IAAM2C,EAAKN,EAAU,SAASrC,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKd,GAAUA,EAAOkB,KAAOR,EAAQV,EAAO7B,OAASsC,EAAMT,EAAO7B,OAAOgD,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACA/C,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ0Y,6BAA0B,EAClC,MAAMvN,EAAYzK,EAAQ,OACpB0K,EAAa1K,EAAQ,OACrB2C,EAAqB3C,EAAQ,OAC7B2K,EAAiB3K,EAAQ,OACzB0C,EAAc1C,EAAQ,OACtBkgB,EAA8BlgB,EAAQ,OACtC+C,EAAkB/C,EAAQ,OAC1B4C,EAAY5C,EAAQ,OACpB6C,EAAU7C,EAAQ,OAClB4K,EAAW5K,EAAQ,OACnB6K,EAAQ7K,EAAQ,OAChB8K,EAAa9K,EAAQ,OACrBgD,EAAM9B,EAAalB,EAAQ,QAC3B+K,EAAQ/K,EAAQ,OAChB8C,EAAU9C,EAAQ,OACxB,MAAMgY,EACF5U,WAAAA,GACIlD,KAAKoD,OAAS,IAAIP,EAAgBQ,aAClCrD,KAAKigB,kBAAoB,IAAIpd,EAAgBQ,aAC7CP,EAAIyB,SAAS,6BAEbvE,KAAKiL,eAAiB,IAAIvI,EAAUuB,QAAQxB,EAAmByB,wBAE/DlE,KAAK0L,WAAa1L,KAAK2L,sBACvB3L,KAAK4L,eAAe5L,KAAK0L,YAEzB1L,KAAK6L,UAAY,IAAItB,EAAUhI,mBAAmBC,EAAYsJ,uBAC9D9L,KAAK+L,UAAYtH,KAAKC,MAEtB1E,KAAKkgB,qBAAuB,IAAIxN,IAEhC1S,KAAKmgB,SAAU,EACfngB,KAAKogB,WAAY,CACrB,CACAlU,gBAAAA,CAAiBmU,EAAS,GACtBrgB,KAAK+L,UAAYtH,KAAKC,MAAQ2b,CAClC,CACAlU,iBAAAA,CAAkBmU,EAASlU,GACvB,IAAIC,GAAY,EAAIzB,EAAWZ,mBAAmBoC,GAElDpM,KAAKiL,eAAeqB,gBAAgBD,EAAW5J,EAAmB8J,wBAA0B+T,EAChG,CACA7U,sBAAAA,CAAuB6U,GAEnB,MAAM9T,EAAKxM,KAAKiL,eAAewB,cAAchK,EAAmB8J,wBAA0B+T,GACpF5T,EAAUF,EAChB,GAAsB,iBAAXE,EAAqB,CAC5B5J,EAAIyB,SAAS,0BACbzB,EAAIyB,SAASmI,GACb,IAAIlB,GAAc,EAAIZ,EAAWxB,eAAesD,GAChD,OAAOlB,CACX,CAIA,OAFIxL,KAAKiL,eAAe0B,aAEjB,IACX,CACAf,cAAAA,CAAeQ,GACX,IAAIQ,EAAa,CACbC,WAAW,EAAIlK,EAAQmK,aAAaV,EAAQS,WAC5CE,WAAW,EAAIpK,EAAQmK,aAAaV,EAAQW,YAEhDjK,EAAIyB,SAAS,eACb,IAAI8H,GAAY,EAAIzB,EAAWZ,mBAAmB4C,GAClD9J,EAAIyB,SAAS8H,GAEbrM,KAAKiL,eAAeqB,gBAAgBD,EAAW5J,EAAmBuK,sBAClElK,EAAIyB,SAAS,oBACjB,CACAoH,mBAAAA,GACI,MAAMa,EAAKxM,KAAKiL,eAAewB,cAAchK,EAAmBuK,sBAC1DN,EAAUF,EAChB,GAAsB,iBAAXE,EAAqB,CAE5B5J,EAAIyB,SAAS,sBACbzB,EAAIyB,SAASmI,GACb,IAAIO,GAAiB,EAAIrC,EAAWxB,eAAesD,GACnD5J,EAAIyB,SAAS,eACbzB,EAAIyB,SAAS0I,GACb,IAAIb,EAAU,CACVS,WAAW,EAAIlK,EAAQuK,gBAAgBD,EAAeJ,WACtDE,WAAW,EAAIpK,EAAQuK,gBAAgBD,EAAeF,YAE1D,OAAOX,CACX,CAEI,OAAO,EAAIzB,EAAMwC,kBAEzB,CACAoT,qBAAAA,CAAsBD,GAElB,OADAxd,EAAIyB,SAAS,+BAA+B+b,KACrCtgB,KAAKkgB,qBAAqBrf,IAAIyf,EACzC,CACAjT,OAAAA,CAAQmT,GACJ,OAAOlf,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,aAAa,EAAI2K,EAAM4C,SAASiT,EAAc/V,EAAeyR,6BAA8BzR,EAAegD,qBAC1GzN,KAAK0L,WACT,GACJ,CACA+U,gBAAAA,CAAiBC,GACb,IACI,IAAIC,GAAc,EAAI/V,EAAWxB,eAAesX,GAC5CE,EAASD,EAAY,qBACzB,GAAIC,GAAUA,EAAOvZ,OAAS,EAAG,CAC7B,IAAIwZ,GAAgB,EAAIje,EAAQke,cAAcF,GAAQ,GACtD,OAAOC,EAAclc,UACzB,CACJ,CACA,MAAO4K,GACHzM,EAAIwD,SAAS,qBAAsBiJ,EACvC,CACJ,CACAwR,cAAAA,CAAezT,EAAOuB,GAClB,IAAIqF,EAAclU,KAAKkgB,qBAAqBrf,IAAIyM,GAEhD,IADA,EAAIzC,EAAMtG,UAAU,iBAAkB2P,EAAa5G,EAAOuB,GACtDqF,GAAerF,GAAYA,EAASxH,OAAS,EAAG,CAChD,GAAI6M,EAAY8M,IAAK,CAEjB,IAAIC,GAAY,EAAIte,EAAQue,mBAAmBrS,GAC3CqF,EAAY8M,KAAOC,EACnB/M,EAAYiN,cAAgBtS,EAG5B/L,EAAIwD,SAAS,mBAAoB4N,EAAa5G,EAAOuB,EAE7D,MAEIqF,EAAYiN,cAAgBtS,EAGhC7O,KAAKohB,sBACT,CACA,OAAO,CACX,CACA1T,YAAAA,CAAa2T,EAAS1T,GAClB,OAAOrM,EAAUtB,KAAMiI,eAAW,GAAQ,UAAWqF,EAAOM,EAAOC,GAAY,GAC3E,IAAI9I,EAAI+I,EAAIC,EAAIC,EAAIC,EAAIqT,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAC5C3hB,KAAKoD,OAAOwB,KAAKgJ,EAAMzI,GAAIyI,GAE3B,IAAIsG,EAAclU,KAAKkgB,qBAAqBrf,IAAIyM,GAGhD,GAFAxK,EAAIyB,SAAS,qCAAsC+I,GACnDxK,EAAIyB,SAAS,+BAAgCqJ,EAAMzI,GAAImI,EAAO4G,EAAalU,KAAKkgB,sBAC5EhM,GAAetG,EAAMvE,OAAO/E,OACK,QAA5BS,EAAK6I,EAAMvE,OAAO/E,YAAyB,IAAPS,OAAgB,EAASA,EAAGwE,SAEjE,GAAiC,QAA5BuE,EAAKF,EAAMvE,OAAO/E,YAAyB,IAAPwJ,OAAgB,EAASA,EAAG8T,eAAgB,CACjF,IAAIC,EAA6C,QAA5B9T,EAAKH,EAAMvE,OAAO/E,YAAyB,IAAPyJ,OAAgB,EAASA,EAAGxE,QACjFuY,EAA2C,QAA5B9T,EAAKJ,EAAMvE,OAAO/E,YAAyB,IAAP0J,OAAgB,EAASA,EAAGV,MAC/EuT,EAAgB7gB,KAAKygB,iBAAiBoB,IAC1C,EAAIhX,EAAMtG,UAAU,0BAA2Bsc,GAC3CA,GAAiBA,EAAcxZ,OAAS,GACxCrH,KAAKigB,kBAAkBrb,KAAK,SAAUic,EAAeiB,EAE7D,MAGI,IACI,IAAIvY,EAAuC,QAA5B0E,EAAKL,EAAMvE,OAAO/E,YAAyB,IAAP2J,OAAgB,EAASA,EAAG1E,QAC/E,GAAIA,EAAQ8G,YAAYC,WAAW,KAAM,CACrC,IAAIyR,GAAa,EAAInX,EAAWxB,eAAeG,GAC/C,GAAIwY,EAAWhS,OAAQ,CACnB,GAAyB,gBAArBgS,EAAWhS,OAA0B,CACrC,IAAIiS,EAAoBD,EAAW1Y,OAAO6K,YACtC+N,GAAgB,EAAIrf,EAAQke,cAAckB,GAAmB,IACjE,EAAInX,EAAMtG,UAAU,mDAAoD0d,IACxE,EAAIpX,EAAMtG,UAAU,iBAAmB0d,GACvC,IAAIC,EAAmBD,EAAcE,WACrCniB,KAAK+gB,eAAezT,EAAO4U,EAAiBrT,SAChD,EACA,EAAIhE,EAAMtG,UAAU,qBAAsB+I,EAAOyU,GACjD/hB,KAAKigB,kBAAkBrb,KAAK0I,EAAO/D,EACvC,CACJ,KACK,CACD,IAAIA,EAAU2K,EAAY/I,OAAOiX,cAA2C,QAA5Bd,EAAK1T,EAAMvE,OAAO/E,YAAyB,IAAPgd,OAAgB,EAASA,EAAG/X,QAAS2K,EAAYiN,gBACrI,EAAItW,EAAMtG,UAAU,mBAAoB+I,EAAO/D,GAC/CvJ,KAAKigB,kBAAkBrb,KAAK0I,EAAO/D,EACvC,CACJ,CACA,MAAOgG,GACH,IAAIhG,EAAU2K,EAAY/I,OAAOiX,cAA2C,QAA5Bb,EAAK3T,EAAMvE,OAAO/E,YAAyB,IAAPid,OAAgB,EAASA,EAAGhY,QAAS2K,EAAYiN,gBACrI,EAAItW,EAAMtG,UAAU,mBAAoB+I,EAAO/D,GAC/CvJ,KAAKigB,kBAAkBrb,KAAK0I,EAAO/D,EACvC,CAOZ,IAAKsE,UACK7N,KAAKkO,QAAQN,EAAMzI,IAAI,GACzBmI,GAAO,CACP,IAAIe,EAAWT,GACoE,QAA9E6T,EAAgC,QAA1BD,EAAKnT,EAAShF,cAA2B,IAAPmY,OAAgB,EAASA,EAAGld,YAAyB,IAAPmd,OAAgB,EAASA,EAAGnT,aACnHtO,KAAKkM,yBACClM,KAAKuO,YAAYvO,KAAK+L,UAAUpH,WAA2F,QAA9Egd,EAAgC,QAA1BD,EAAKrT,EAAShF,cAA2B,IAAPqY,OAAgB,EAASA,EAAGpd,YAAyB,IAAPqd,OAAgB,EAASA,EAAGrT,UAAWhB,GAExL,CAER,GACJ,CACA+U,2BAAAA,GAII,IAAItQ,EAAU/R,KAAKiL,eAAewB,cAAcuT,EAA4BF,0CAE5E,GADAhd,EAAIyB,SAAS,2BAA4BwN,GACrCA,EAAS,CACT,IAAIuQ,GAAW,EAAI1X,EAAWxB,eAAe2I,GAC7C,IAAK,IAAIuO,KAAWgC,EAAU,CAC1B,IAAIC,EAAYD,EAAShC,GACzBxd,EAAIyB,SAAS,kBAAmBge,GAChC,IAAIC,EAAa,CACblV,MAAOgT,EACPnV,OAAQ,IAAIT,EAASU,cAAc,CAC/ByB,UAAW0V,EAAUE,cAAc5V,UACnCE,UAAWwV,EAAUE,cAAc1V,YAEvCoU,cAAeoB,EAAUpB,cACzBH,IAAKuB,EAAUvB,KAEnBhhB,KAAKkgB,qBAAqBzM,IAAI6M,EAASkC,EAC3C,CACJ,CACA1f,EAAIyB,SAAS,+BAAgCvE,KAAKkgB,qBACtD,CACAkB,oBAAAA,GACI,IAAIkB,EAAW,CAAC,EAChB,IAAK,IAAKhC,EAASkC,KAAexiB,KAAKkgB,qBACnCpd,EAAIyB,SAAS,gBAAiB+b,GAC1BkC,IACAF,EAAShC,GAAW,CAChBmC,cAAeD,EAAWrX,OAAO2D,mBACjCqS,cAAeqB,EAAWrB,cAC1BH,IAAKwB,EAAWxB,MAI5B,IAAInP,GAAW,EAAIjH,EAAWZ,mBAAmBsY,GACjDxf,EAAIyB,SAAS,2BAA4BsN,GACzC7R,KAAKiL,eAAeqB,gBAAgBuF,EAAUmO,EAA4BF,yCAC9E,CACA4C,gBAAAA,CAAiBpV,EAAO4G,EAAayO,GAAO,GACxC,IAAIxB,EAAgBjN,EAAYiN,cAE5ByB,EAAmB,GACvB,IAAK,IAAKtC,EAASkC,KAAexiB,KAAKkgB,qBACnCpd,EAAIyB,SAAS,gBAAiB+b,GAC1BkC,EAAWrB,eAAiBA,IAC5Bre,EAAIyB,SAAS,8BAA+B+b,EAASa,GACrDyB,EAAiB1P,KAAKoN,IAG9B,IAAK,IAAKA,EAASkC,KAAexiB,KAAKkgB,qBAC/B0C,EAAiBC,SAASvC,IAC1BtgB,KAAKkgB,qBAAqB9L,OAAOkM,GAazC,OATAxd,EAAIyB,SAAS,iCAAkCvE,KAAKkgB,sBAGpDlgB,KAAKkgB,qBAAqBzM,IAAInG,EAAO4G,GAErCpR,EAAIyB,SAAS,qBAAsB+I,EAAO4G,EAAalU,KAAKkgB,sBACxDyC,GACA3iB,KAAKohB,uBAEFwB,CACX,CAEAE,WAAAA,CAAYxV,EAAOyV,EAAkB/B,GACjC,OAAO1f,EAAUtB,UAAM,OAAQ,GAAQ,YAGnC,OAFA,EAAI6K,EAAMtG,UAAU,yBAA0B+I,GAEvC,IAAIzL,SAAQ,CAACD,EAASE,IAAWR,EAAUtB,UAAM,OAAQ,GAAQ,YACpE,IAAKA,KAAKogB,UAAW,CACjB,IAAI7Q,EAAQ,IAAI1L,MAKhB,OAJA0L,EAAMhG,QAAU,4BAChBgG,EAAMC,KAAO,oBAEb1N,EAAOyN,EAEX,CAEA,IAAIiT,EAAa,CACblV,MAAOA,EACPnC,OAAQ,IAAIT,EAASU,cACrB+V,cAAe4B,GAAsC,GACrD/B,IAAKA,GAEL4B,EAAmB5iB,KAAK0iB,iBAAiBpV,EAAOkV,GAAY,SAE1DxiB,KAAKgjB,gBAAgBC,MAAMC,KAAK,CAAC5V,KACvCtN,KAAKkM,mBACLpJ,EAAIyB,SAAS,oDAAoDvE,KAAK+L,cAAcuB,KACpFxK,EAAIyI,UAAU,mDACd,MAAMkE,GAAQ,IAAIhL,MAAOwK,WACzB,EAAIpE,EAAMtG,UAAU,gCAAiCkL,EAAQzP,KAAKgP,SAClEpN,EAAQghB,EACZ,KACJ,GACJ,CACAO,sBAAAA,GACInjB,KAAKohB,sBACT,CACA7Y,OAAAA,GACI,OAAOjH,EAAUtB,UAAM,OAAQ,GAAQ,YACnCA,KAAKgP,SAAU,IAAIvK,MAAOwK,WAC1B,EAAIpE,EAAMtG,UAAU,iCAAkCvE,KAAKgP,SAC3DlM,EAAIyI,UAAU,iCAEd,IAAIiV,EAAe/b,KAAKC,MAAMC,WAC9B,IAAI0K,QAAiBrP,KAAKqN,QAAQmT,GAKlC,OAJA1d,EAAIyB,SAAS,uBAAuB8K,KACpCrP,KAAKiL,eAAepD,YAAYwH,EAAU,OAC1CrP,KAAKqiB,8BAEE,IAAIxgB,SAAQ,CAACD,EAASE,KAEzB9B,KAAKmgB,SAAU,EACfngB,KAAK6L,UAAUzB,QAAO,IAAM9I,EAAUtB,UAAM,OAAQ,GAAQ,YACxD8C,EAAIyB,SAAS,wBACbzB,EAAIyI,UAAU,qCACd,MAAM+D,GAAU,IAAI7K,MAAOwK,WAC3B,EAAIpE,EAAMtG,UAAU,uBAAwB+K,EAAUtP,KAAKgP,SAE3DhP,KAAKoD,OAAO8E,KAAKlI,KAAK+L,UAAUpH,YAAaH,GAAQlD,EAAUtB,UAAM,OAAQ,GAAQ,YAEjF,GAAIwE,GAAOA,EAAI+K,MAAO,CAClBzM,EAAIwD,SAAS,2BACPtG,KAAK6L,UAAUnD,aACrB,IAAI6G,EAAQ,IAAI1L,MAChB0L,EAAMhG,QAAU/E,EAAI+K,MAAMhG,QAC1BgG,EAAMC,KAAOhL,EAAI+K,MAAMtK,KAAKN,WAE5B7C,EAAOyN,EACX,MAEIvP,KAAKogB,WAAY,EACjBxe,IAEAkB,EAAIyB,SAAS,6BAA8BvE,KAAKkgB,sBAChDpd,EAAIyI,UAAU,qDACVvL,KAAKkgB,qBAAqBkD,KAAO,UAC3BpjB,KAAKgjB,gBAAgBC,MAAMC,KAAKljB,KAAKkgB,qBAAqBmD,SAG5E,MACAvgB,EAAIyB,SAAS,mBACbzB,EAAIyI,UAAU,wCACRvL,KAAK6L,UAAU3F,MAAK,IAAM5E,EAAUtB,UAAM,OAAQ,GAAQ,YAE5D,OADA8C,EAAIyB,SAAS,wCACAvE,KAAK6L,UAAUtD,SAChC,KAAI,CACApD,GAAInF,KAAK+L,UAAUpH,WACnBkL,QAASrN,EAAYsN,oBACrBC,OAAQvF,EAAW5K,qBACnByJ,OAAQ,CACJ2G,MAAOX,IAGnB,MACArP,KAAK6L,UAAUtD,UAAUqH,OAAOzH,KAC5B,EAAI0C,EAAMtG,UAAU,wCAAyC4D,GAC7DrG,EAAOqG,EAAI,IAGfnI,KAAK6L,UAAUpC,iBAAiB3E,IAC5B,IAAIC,EAAI+I,EACRhL,EAAIyB,SAAS,0BACbzB,EAAIyB,SAASO,GACP,WAAYA,GAAY,SAAUA,EAAM,WAKb,QAA5BC,EAAKD,EAAMuE,OAAO/E,YAAyB,IAAPS,OAAgB,EAASA,EAAGuI,QACjEtN,KAAK0N,aAA0C,QAA5BI,EAAKhJ,EAAMuE,OAAO/E,YAAyB,IAAPwJ,OAAgB,EAASA,EAAGR,MAAOxI,EAAOA,EAAMiL,SAAWvF,EAAWhL,wBAL7HQ,KAAK0N,aAAa,GAAI5I,GAAO,EAMjC,GACF,GAmBV,GACJ,CAGAwe,mBAAAA,CAAoBhD,GAChB,GAAItgB,KAAKugB,sBAAsBD,GAAU,CACrC,IAAI5J,EAAO1W,KAAKkgB,qBAAqBrf,IAAIyf,GACzC,GAAI5J,EACA,OAAO,EAAI/T,EAAQmK,aAAa4J,EAAKvL,OAAOiB,QAAQS,UAE5D,CAEJ,CACA0W,2BAAAA,GACI,OAAON,MAAMC,KAAKljB,KAAKkgB,qBAAqBmD,OAChD,CACA3a,UAAAA,GACI,OAAOpH,EAAUtB,KAAMiI,eAAW,GAAQ,UAAW8G,GAAc,SACzD/O,KAAK6L,UAAUnD,aAGrB1I,KAAKiL,eAAe0B,WAAWlK,EAAmB2L,0BAC7CW,GACD/O,KAAKiL,eAAe0B,WAAWlK,EAAmB2M,oCAE1D,GACJ,CACAlJ,IAAAA,CAAKmb,EAAS3Q,GACV,OAAOpP,EAAUtB,KAAMiI,eAAW,GAAQ,UAAWqF,EAAOjI,EAAKme,GAAgB,EAAOhT,EAAMhO,EAAYiO,yBAA0BgT,GAAS,GACzI,IAAI1e,EAAI+I,EAGR,GADAhL,EAAIyB,SAAS,uBAAuBc,MAC/BrF,KAAKugB,sBAAsBjT,GAE5B,MAAM,IAAIzJ,MAAM,yBAEpB,IAEIke,EAFA2B,EAAkE,QAA/C3e,EAAK/E,KAAKkgB,qBAAqBrf,IAAIyM,UAA2B,IAAPvI,OAAgB,EAASA,EAAGoc,cACtGwC,EAA+D,QAA/C7V,EAAK9N,KAAKkgB,qBAAqBrf,IAAIyM,UAA2B,IAAPQ,OAAgB,EAASA,EAAG3C,OAOvG,GALIsY,IACA1B,EAAa,CACTxY,QAASlE,IAGbse,GAAgBD,IAAoBD,EAAQ,CAC5C,IAAIla,EAAUoa,EAAaC,cAAcve,EAAKqe,GAC9C3B,EAAa,CACTxY,QAASA,EAEjB,CACA,GAAIwY,EAAY,CACRyB,GAAiBG,IACjB5B,EAAWlT,UAAW,EAAIlM,EAAQmK,aAAa6W,EAAavX,QAAQS,YAMxE7M,KAAKkM,mBACL,MAAM9G,EAAU,CACZD,GAAInF,KAAK+L,UAAUpH,WACnBoL,OAAQvF,EAAW7K,uBACnBkQ,QAASrN,EAAYsN,oBACrBzG,OAAQ,CACJE,QAAS,CACL+D,MAAOA,EACP/D,SAAS,EAAIqB,EAAWZ,mBAAmB+X,GAC3CvR,IAAKA,KAiBjB,OAbAxQ,KAAKoD,OAAO8E,KAAKlI,KAAK+L,UAAUpH,YAAaH,GAAQlD,EAAUtB,UAAM,OAAQ,GAAQ,YAE7EwE,GAAOA,EAAI+K,MACXzM,EAAIwD,SAAS,KAAI,IAAI7B,MAAOgC,0CAEvBjC,IAAQA,EAAI+K,OACjBzM,EAAIyB,SAAS,iBAAgB,IAAIE,MAAOgC,uCAAuCzG,KAAK+L,sBAE5F,YACM/L,KAAK6L,UAAU3F,MAAK,IAAM5E,EAAUtB,UAAM,OAAQ,GAAQ,YAE5D,OADA8C,EAAIyB,SAAS,wCACAvE,KAAK6L,UAAUtD,SAChC,KAAInD,GACGpF,KAAK+L,SAChB,CACJ,GACJ,CACAmC,OAAAA,CAAQ6C,EAASC,GACb,OAAO1P,EAAUtB,KAAMiI,eAAW,GAAQ,UAAWgJ,EAAOlI,EAASmI,OAAS5Q,GAC1E,IAAgB,IAAZyI,EAAkB,CAClB,MAAM3D,EAAU,CACZD,GAAI8L,EACJpB,QAASrN,EAAYsN,oBACrB5O,QAAQ,SAENlB,KAAK6L,UAAU3F,MAAK,IAAM5E,EAAUtB,UAAM,OAAQ,GAAQ,YAE5D,OADA8C,EAAIyB,SAAS,wCACAvE,KAAK6L,UAAUtD,SAChC,KAAInD,EACR,MACK,GAAI8L,EAAQ,CACb,MAAM9L,EAAU,CACZD,GAAI8L,EACJpB,QAASrN,EAAYsN,oBACrBP,MAAO,CACHtK,KAAMiM,EAAOjM,KACbsE,QAAS2H,EAAO3H,gBAGlBvJ,KAAK6L,UAAU3F,MAAK,IAAM5E,EAAUtB,UAAM,OAAQ,GAAQ,YAE5D,OADA8C,EAAIyB,SAAS,wCACAvE,KAAK6L,UAAUtD,SAChC,KAAInD,EACR,CACJ,GACJ,CAEAmJ,WAAAA,CAAY0C,EAAO3C,EAAWhB,GAC1B,OAAOhM,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,MAAMoF,EAAU,CACZD,GAAI8L,EACJpB,QAASrN,EAAYsN,oBACrBC,OAAQvF,EAAWhL,uBACnB6J,OAAQ,CACJ/E,KAAM,CACFgK,UAAWA,EACXhB,MAAOA,WAIbtN,KAAK6L,UAAU3F,MAAK,IAAM5E,EAAUtB,UAAM,OAAQ,GAAQ,YAE5D,OADA8C,EAAIyB,SAAS,wCACAvE,KAAK6L,UAAUtD,SAChC,KAAInD,EACR,GACJ,CACAye,eAAAA,CAAgBvW,GACZ,OAAOhM,EAAUtB,UAAM,OAAQ,GAAQ,kBAE7BA,KAAK6L,UAAU3F,MAAK,IAAM5E,EAAUtB,UAAM,OAAQ,GAAQ,YAE5D,OADA8C,EAAIyB,SAAS,wCACAvE,KAAK6L,UAAUtD,SAChC,KAAI,CACApD,GAAInF,KAAK+L,UAAUpH,WACnBkL,QAASrN,EAAYsN,oBACrBC,OAAQvF,EAAW/K,qBACnB4J,OAAQ,CACJiE,MAAOA,KAIftN,KAAKkgB,qBAAqB9L,OAAO9G,GACjCtN,KAAKohB,sBACT,GACJ,CAKA1R,2BAAAA,CAA4BuB,EAAO3D,GAC/B,OAAOhM,EAAUtB,UAAM,OAAQ,GAAQ,YAEnCA,KAAKoD,OAAO8E,KAAK+I,GAAQG,GAAoB9P,EAAUtB,UAAM,OAAQ,GAAQ,YACzE,IAAI+E,EAAI+I,EAER,GAAIsD,EAAgBlQ,OAAQ,CACxB,IAAImQ,EAAUD,EAAgBlQ,OAAOmQ,QACjCC,EAAeF,EAAgBlQ,OAAOoD,KAC1C,GAAIgN,EACA,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAajK,OAAQkK,IAAK,CAC1C,IAAIlM,EAAMiM,EAAaC,GACvB,GAAIlM,GAAOA,EAAIiI,OAASA,EAAO,CAC3B,IAAIgB,EAAYjJ,EAAIiJ,gBACdtO,KAAK6L,UAAU5B,yBAAyB5E,GAE9CrF,KAAKkM,yBACClM,KAAKuO,YAAYvO,KAAK+L,UAAUpH,WAAY2J,EAAWhB,EACjE,CACJ,CAGA+D,IACArR,KAAKkM,yBACClM,KAAK0P,4BAA4B1P,KAAK+L,UAAUpH,WAAY2I,GAE1E,MAEIxK,EAAIyB,SAAS,0BAA2D,QAAhCQ,EAAKqM,EAAgB7B,aAA0B,IAAPxK,OAAgB,EAASA,EAAGE,UAA2C,QAAhC6I,EAAKsD,EAAgB7B,aAA0B,IAAPzB,OAAgB,EAASA,EAAGvE,UAEnM,MACAzG,EAAIyB,SAAS,sBACb,MAAMiN,GAAW,IAAI/M,MAAOwK,WAC5B,EAAIpE,EAAMtG,UAAU,oBAAqBiN,EAAWxR,KAAKgP,SACzD,MAAM5J,EAAU,CACZD,GAAI8L,EACJpB,QAASrN,EAAYsN,oBACrBC,OAAQvF,EAAWjL,wBACnB8J,OAAQ,CACJ/E,KAAM,CACFgJ,MAAOA,WAIbtN,KAAK6L,UAAU3F,MAAK,IAAM5E,EAAUtB,UAAM,OAAQ,GAAQ,YAE5D,OADA8C,EAAIyB,SAAS,wCACAvE,KAAK6L,UAAUtD,SAChC,KAAInD,EACR,GACJ,CACA0e,gCAAAA,CAAiC/X,EAAWgY,GACxC,OAAOziB,EAAUtB,UAAM,OAAQ,GAAQ,YAEnCA,KAAKoD,OAAO8E,KAAK6D,GAAYqF,GAAoB9P,EAAUtB,UAAM,OAAQ,GAAQ,YAC7E,IAAI+E,EAAI+I,EAER,GAAIsD,EAAgBlQ,OAAQ,CACxB,IAAImQ,EAAUD,EAAgBlQ,OAAOmQ,QACjCC,EAAeF,EAAgBlQ,OAAOoD,KAC1C,GAAIgN,EACA,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAajK,OAAQkK,IAAK,CAC1C,IAAIlM,EAAMiM,EAAaC,GACvB,GAAIlM,GAAOA,EAAIiI,MAAO,CAClB,IAAIgB,EAAYjJ,EAAIiJ,gBACdtO,KAAK6L,UAAU5B,yBAAyB5E,GAE9CrF,KAAKkM,iBAAiBqF,SAChBvR,KAAKuO,YAAYvO,KAAK+L,UAAUpH,WAAY2J,EAAWjJ,EAAIiI,MACrE,CACJ,CAGA+D,IACArR,KAAKkM,yBACClM,KAAK8jB,iCAAiC9jB,KAAK+L,UAAUpH,WAAYof,GAE/E,MAEIjhB,EAAIyB,SAAS,0BAA2D,QAAhCQ,EAAKqM,EAAgB7B,aAA0B,IAAPxK,OAAgB,EAASA,EAAGE,UAA2C,QAAhC6I,EAAKsD,EAAgB7B,aAA0B,IAAPzB,OAAgB,EAASA,EAAGvE,UAEnM,MACAzG,EAAIyB,SAAS,sBACbzB,EAAIyI,UAAU,sBACd,MAAMiG,GAAW,IAAI/M,MAAOwK,WAC5B,EAAIpE,EAAMtG,UAAU,oBAAqBiN,EAAWxR,KAAKgP,SACzD,MAAM5J,EAAU,CACZD,GAAI4G,EACJ8D,QAASrN,EAAYsN,oBACrBC,OAAQvF,EAAWlL,8BACnB+J,OAAQ,CACJ2a,OAAQD,EACRE,kBAAkB,UAGpBjkB,KAAK6L,UAAU3F,MAAK,IAAM5E,EAAUtB,UAAM,OAAQ,GAAQ,YAC5D8C,EAAIyB,SAAS,wCACPvE,KAAK6L,UAAUtD,SACzB,KAAInD,EACR,GACJ,CACAqM,UAAAA,GACI,OAAOnQ,EAAUtB,UAAM,OAAQ,GAAQ,YACnCA,KAAKiL,eAAe0B,YACxB,GACJ,CACA+E,kBAAAA,CAAmBC,EAAKrN,GACfA,GACDtE,KAAKiL,eAAe0B,WAAWlK,EAAmBmP,gCAAkCD,GAExF,IAAIE,GAAW,EAAIjH,EAAWZ,mBAAmB1F,GACjDtE,KAAKiL,eAAeqB,gBAAgBuF,EAAUpP,EAAmBmP,gCAAkCD,EACvG,CACAG,iBAAAA,CAAkBH,GACd,IAAII,EAAU/R,KAAKiL,eAAewB,cAAchK,EAAmBmP,gCAAkCD,GACrG,GAAII,EAAS,CACT,IAAIC,GAAS,EAAIpH,EAAWxB,eAAe2I,GAC3C,OAAOC,CACX,CAEJ,CAEAgR,eAAAA,CAAgBe,GACZ,OAAOziB,EAAUtB,UAAM,OAAQ,GAAQ,aACnC,EAAI6K,EAAMtG,UAAU,kBAAmBwf,GACvCjhB,EAAIyI,UAAU,mBACdvL,KAAKkM,mBACL,MAAMuD,GAAQ,IAAIhL,MAAOwK,UAEzB,OADA,EAAIpE,EAAMtG,UAAU,oCAAqCkL,EAAQzP,KAAKgP,SAC/D,IAAInN,SAAQ,CAACD,EAASE,IAAWR,EAAUtB,UAAM,OAAQ,GAAQ,YACpE,IAAIkkB,EAAc,EAElB,IAAK,IAAIC,EAAM,EAAGA,EAAMJ,EAAY1c,SAAU8c,EAAK,CAC/C,IAAI7D,EAAUyD,EAAYI,GAC1BnkB,KAAKkM,iBAAiBiY,GACtBnkB,KAAKoD,OAAO8E,KAAKlI,KAAK+L,UAAUpH,YAAaH,GAAQlD,EAAUtB,UAAM,OAAQ,GAAQ,YAEjF,GAAIwE,GAAOA,EAAI+K,MAAO,CAClBzM,EAAIwD,SAAS,+BACPtG,KAAK6L,UAAUnD,aACrB,IAAI6G,EAAQ,IAAI1L,MAChB0L,EAAMhG,QAAU/E,EAAI+K,MAAMhG,QAC1BgG,EAAMC,KAAOhL,EAAI+K,MAAMtK,KAAKN,WAE5Buf,GAAe,EACXA,GAAeH,EAAY1c,QAC3BzF,GAER,CACA5B,KAAKkM,iBAAiBiY,GACtB,MAAM1U,GAAQ,IAAIhL,MAAOwK,WACzB,EAAIpE,EAAMtG,UAAU,oCAAqCkL,EAAQzP,KAAKgP,SACtEkV,GAAe,EACXA,GAAeH,EAAY1c,SAE3BvE,EAAIyB,SAAS,sBAAsBvE,KAAK+L,cAAcuU,WAChDtgB,KAAK8jB,iCAAiC9jB,KAAK+L,UAAUpH,WAAYof,GACvEniB,IAER,MACAkB,EAAIyB,SAAS,0CAA0CvE,KAAK+L,cAAcuU,KAC1Exd,EAAIyI,UAAU,yCACd,MAAMoE,GAAS,IAAIlL,MAAOwK,WAC1B,EAAIpE,EAAMtG,UAAU,iCAAkCoL,EAAS3P,KAAKgP,eAC9DhP,KAAK6L,UAAU3F,MAAK,IAAM5E,EAAUtB,UAAM,OAAQ,GAAQ,YAE5D,OADA8C,EAAIyB,SAAS,wCACAvE,KAAK6L,UAAUtD,SAChC,KAAI,CACApD,GAAInF,KAAK+L,UAAUpH,WACnBkL,QAASrN,EAAYsN,oBACrBC,OAAQvF,EAAW9K,mBACnB2J,OAAQ,CACJiE,MAAOgT,IAGnB,CACJ,KACJ,GACJ,EAEJlhB,EAAQ0Y,wBAA0BA,C,qCCrwBlC,IAAII,EAAmBlY,MAAQA,KAAKkY,iBAAoB,SAAUjX,GAC9D,OAAQA,GAAOA,EAAIR,WAAcQ,EAAM,CAAE,QAAWA,EACxD,EACA/B,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQgM,mBAAgB,EACxB,MAAM0O,EAAc5B,EAAgBpY,EAAQ,QACtC6C,EAAU7C,EAAQ,OACxB,MAAMsL,EACFlI,WAAAA,CAAYkJ,OAAU9L,GAClBN,KAAKokB,YAAc,GACnBpkB,KAAKqkB,eAAiBjY,EAAUpM,KAAKskB,wBAAwBlY,GAAWpM,KAAKukB,eACjF,CACAA,aAAAA,GACI,OAAOzK,EAAYE,QAAQwK,IAAIpY,SACnC,CACAkY,uBAAAA,CAAwBlY,GACpB,MAAO,CACHS,WAAW,EAAIlK,EAAQuK,gBAAgBd,EAAQS,WAC/CE,WAAW,EAAIpK,EAAQuK,gBAAgBd,EAAQW,WAEvD,CACA0X,WAAAA,GACI,OAAO3K,EAAYE,QAAQiF,YAAYjf,KAAKokB,YAChD,CACA,WAAIhY,GACA,OAAOpM,KAAKqkB,cAChB,CAGA1T,OAAAA,CAAQpH,EAASmb,GACb,MAAMC,GAAiB,IAAIrP,aAAcC,OAAOhM,GAC1Cqb,EAAQ5kB,KAAKykB,cACbI,EAAY/K,EAAYE,QAAQwK,IAAIG,EAAgBC,GAAO,EAAIjiB,EAAQuK,gBAAgBwX,GAAoB1kB,KAAKoM,QAAQW,WAC9H,IAAI+X,GAAa,EAAIniB,EAAQoiB,mBAAmBH,EAAOC,GACvD,IAAIG,GAAY,EAAIriB,EAAQmK,aAAagY,GACrCG,GAAgB,IAAI3P,aAAcC,OAAOyP,GAC7C,OAAO,EAAIriB,EAAQuiB,cAAcD,GAAe,EACpD,CAIArB,aAAAA,CAAcra,EAASmb,GACnB,MAAMC,GAAiB,IAAIrP,aAAcC,OAAOhM,GAC1Cqb,EAAQ5kB,KAAKykB,cACbI,EAAY/K,EAAYE,QAAQwK,IAAIG,EAAgBC,GAAO,EAAIjiB,EAAQuK,gBAAgBwX,GAAoB1kB,KAAKoM,QAAQW,WAC9H,IAAI+X,GAAa,EAAIniB,EAAQoiB,mBAAmBH,EAAOC,GACvD,OAAO,EAAIliB,EAAQuiB,cAAcJ,GAAY,EACjD,CAGAhc,OAAAA,CAAQS,EAAS4b,GACb,IAAIlD,GAAgB,EAAItf,EAAQme,cAAcvX,GAAS,GACnD6b,EAAmBnD,EAAcoD,eACrC,MAAOT,EAAOU,IAAmB,EAAI3iB,EAAQ4iB,oBAAoBH,EAAkBplB,KAAKokB,aAClFoB,EAAY1L,EAAYE,QAAQwK,IAAIiB,KAAKH,EAAiBV,GAAO,EAAIjiB,EAAQuK,gBAAgBiY,GAAkBnlB,KAAKoM,QAAQW,WAClI,IAAKyY,EACD,MAAM,IAAI3hB,MAAM,iCAAiC0F,EAAQ5E,gCAAgCwgB,EAAgBxgB,kCAAiC,EAAIhC,EAAQmK,aAAa9M,KAAKoM,QAAQS,qCAAoC,EAAIlK,EAAQmK,aAAa9M,KAAKoM,QAAQW,cAE9P,OAAO,IAAI2Y,aAAcC,OAAOH,EACpC,CAGApD,aAAAA,CAAc7Y,EAAS4b,GACnB,IAAIlD,GAAgB,EAAItf,EAAQme,cAAcvX,GAAS,GACnD6b,GAAmB,EAAIziB,EAAQuK,gBAAgB+U,EAActd,YACjE,MAAOigB,EAAOU,IAAmB,EAAI3iB,EAAQ4iB,oBAAoBH,EAAkBplB,KAAKokB,aAClFoB,EAAY1L,EAAYE,QAAQwK,IAAIiB,KAAKH,EAAiBV,GAAO,EAAIjiB,EAAQuK,gBAAgBiY,GAAkBnlB,KAAKoM,QAAQW,WAClI,IAAKyY,EACD,MAAM,IAAI3hB,MAAM,iCAAiC0F,EAAQ5E,gCAAgCwgB,EAAgBxgB,kCAAiC,EAAIhC,EAAQmK,aAAa9M,KAAKoM,QAAQS,qCAAoC,EAAIlK,EAAQmK,aAAa9M,KAAKoM,QAAQW,cAE9P,OAAO,IAAI2Y,aAAcC,OAAOH,EACpC,CACA1W,gBAAAA,GACI,MAAO,CACHjC,WAAW,EAAIlK,EAAQmK,aAAa9M,KAAKoM,QAAQS,WACjDE,WAAW,EAAIpK,EAAQmK,aAAa9M,KAAKoM,QAAQW,WAEzD,EAEJ3N,EAAQgM,cAAgBA,C,qCC/ExB,IAAIrL,EAAmBC,MAAQA,KAAKD,kBAAqBb,OAAOe,OAAU,SAASC,EAAGC,EAAGC,EAAGC,QAC7EC,IAAPD,IAAkBA,EAAKD,GAC3B,IAAIG,EAAOrB,OAAOsB,yBAAyBL,EAAGC,GACzCG,KAAS,QAASA,GAAQJ,EAAEM,WAAaF,EAAKG,UAAYH,EAAKI,gBAClEJ,EAAO,CAAEK,YAAY,EAAMC,IAAK,WAAa,OAAOV,EAAEC,EAAI,IAE5DlB,OAAOC,eAAee,EAAGG,EAAIE,EACjC,EAAM,SAASL,EAAGC,EAAGC,EAAGC,QACTC,IAAPD,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,EACd,GACIwlB,EAAgB5lB,MAAQA,KAAK4lB,cAAiB,SAASzlB,EAAGf,GAC1D,IAAK,IAAIymB,KAAK1lB,EAAa,YAAN0lB,GAAoB3mB,OAAOiC,UAAUC,eAAeC,KAAKjC,EAASymB,IAAI9lB,EAAgBX,EAASe,EAAG0lB,EAC3H,EACA3mB,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDumB,EAAa9lB,EAAQ,OAAcV,GACnCwmB,EAAa9lB,EAAQ,OAAeV,GACpCwmB,EAAa9lB,EAAQ,OAAYV,E,qCCjBjC,IAAI8Y,EAAmBlY,MAAQA,KAAKkY,iBAAoB,SAAUjX,GAC9D,OAAQA,GAAOA,EAAIR,WAAcQ,EAAM,CAAE,QAAWA,EACxD,EACA/B,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ0mB,QAAU1mB,EAAQ2mB,YAAc3mB,EAAQ4mB,kBAAoB5mB,EAAQ6mB,mBAAgB,EAC5F,MAAMpjB,EAAkBqV,EAAgBpY,EAAQ,QAChD,MAAMmmB,UAAsBpjB,EAAgBmX,QACxC9W,WAAAA,GACIgjB,OACJ,EAEJ9mB,EAAQ6mB,cAAgBA,EACxB,MAAMD,UAA0BnjB,EAAgBmX,QAC5C9W,WAAAA,GACIgjB,OACJ,EAEJ9mB,EAAQ4mB,kBAAoBA,EAC5B,MAAMD,EACF7iB,WAAAA,CAAYoB,GACRtE,KAAKsE,KAAOA,CAChB,EAEJlF,EAAQ2mB,YAAcA,EACtB,MAAMD,EACF5iB,WAAAA,CAAYijB,GACRnmB,KAAKmmB,OAASA,CAClB,EAEJ/mB,EAAQ0mB,QAAUA,C,qCC7BlB,IAAI/lB,EAAmBC,MAAQA,KAAKD,kBAAqBb,OAAOe,OAAU,SAASC,EAAGC,EAAGC,EAAGC,QAC7EC,IAAPD,IAAkBA,EAAKD,GAC3B,IAAIG,EAAOrB,OAAOsB,yBAAyBL,EAAGC,GACzCG,KAAS,QAASA,GAAQJ,EAAEM,WAAaF,EAAKG,UAAYH,EAAKI,gBAClEJ,EAAO,CAAEK,YAAY,EAAMC,IAAK,WAAa,OAAOV,EAAEC,EAAI,IAE5DlB,OAAOC,eAAee,EAAGG,EAAIE,EACjC,EAAM,SAASL,EAAGC,EAAGC,EAAGC,QACTC,IAAPD,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,EACd,GACIwlB,EAAgB5lB,MAAQA,KAAK4lB,cAAiB,SAASzlB,EAAGf,GAC1D,IAAK,IAAIymB,KAAK1lB,EAAa,YAAN0lB,GAAoB3mB,OAAOiC,UAAUC,eAAeC,KAAKjC,EAASymB,IAAI9lB,EAAgBX,EAASe,EAAG0lB,EAC3H,EACA3mB,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQgnB,0BAA4BhnB,EAAQinB,mBAAqBjnB,EAAQ4mB,kBAAoB5mB,EAAQ0mB,QAAU1mB,EAAQ6mB,cAAgB7mB,EAAQ2mB,YAAc3mB,EAAQknB,eAAiBlnB,EAAQmnB,qBAAuBnnB,EAAQonB,eAAiBpnB,EAAQqnB,kBAAoBrnB,EAAQsnB,qBAAuBtnB,EAAQunB,UAAYvnB,EAAQwnB,wBAAqB,EAC1V,IAAIC,EAAa/mB,EAAQ,OACzBZ,OAAOC,eAAeC,EAAS,qBAAsB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOgmB,EAAWD,kBAAoB,IAClI1nB,OAAOC,eAAeC,EAAS,YAAa,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOgmB,EAAWF,SAAW,IAChHznB,OAAOC,eAAeC,EAAS,uBAAwB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOgmB,EAAWH,oBAAsB,IACtIxnB,OAAOC,eAAeC,EAAS,oBAAqB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOgmB,EAAWJ,iBAAmB,IAChIvnB,OAAOC,eAAeC,EAAS,iBAAkB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOgmB,EAAWL,cAAgB,IAC1HtnB,OAAOC,eAAeC,EAAS,uBAAwB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOgmB,EAAWN,oBAAsB,IACtIrnB,OAAOC,eAAeC,EAAS,iBAAkB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOgmB,EAAWP,cAAgB,IAC1H,IAAIrO,EAAWnY,EAAQ,OACvBZ,OAAOC,eAAeC,EAAS,cAAe,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOoX,EAAS8N,WAAa,IAClH7mB,OAAOC,eAAeC,EAAS,gBAAiB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOoX,EAASgO,aAAe,IACtH/mB,OAAOC,eAAeC,EAAS,UAAW,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOoX,EAAS6N,OAAS,IAC1G5mB,OAAOC,eAAeC,EAAS,oBAAqB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOoX,EAAS+N,iBAAmB,IAC9HJ,EAAa9lB,EAAQ,OAAUV,GAC/B,IAAI0nB,EAAgBhnB,EAAQ,OAC5BZ,OAAOC,eAAeC,EAAS,qBAAsB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOimB,EAAcT,kBAAoB,IACrInnB,OAAOC,eAAeC,EAAS,4BAA6B,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOimB,EAAcV,yBAA2B,G,qCCjCvItmB,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACb,IAAIoY,EAAmBlY,MAAQA,KAAKkY,iBAAoB,SAAUjX,GAC9D,OAAQA,GAAOA,EAAIR,WAAcQ,EAAM,CAAE,QAAWA,EACxD,EAmBA,SAAS8lB,EAAiB3hB,GACtB,MAA2B,kBAAZA,GACX,OAAQA,GACR,YAAaA,GACO,QAApBA,EAAQyK,OAChB,CACA,SAASmX,EAAiB5hB,GACtB,OAAO2hB,EAAiB3hB,IAAY,WAAYA,CACpD,CACA,SAASqhB,EAAkBrhB,GACvB,OAAO2hB,EAAiB3hB,KAAa6hB,EAAgB7hB,IAAYohB,EAAephB,GACpF,CACA,SAAS6hB,EAAgB7hB,GACrB,MAAO,WAAYA,CACvB,CACA,SAASohB,EAAephB,GACpB,MAAO,UAAWA,CACtB,CAnCAlG,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ2nB,iBAAmBA,EAC3B3nB,EAAQ4nB,iBAAmBA,EAC3B5nB,EAAQqnB,kBAAoBA,EAC5BrnB,EAAQ6nB,gBAAkBA,EAC1B7nB,EAAQonB,eAAiBA,EACzBpnB,EAAQ8nB,UAAYA,EACpB9nB,EAAQknB,eAAiBA,EACzBlnB,EAAQmnB,qBAAuBA,EAC/BnnB,EAAQ+nB,oBAAsBA,EAC9B/nB,EAAQwnB,mBAAqBA,EAC7BxnB,EAAQgoB,oBAAsBA,EAC9BhoB,EAAQioB,SAAWA,EACnBjoB,EAAQkoB,eAAiBA,EACzBloB,EAAQmoB,mBAAqBA,EAC7BnoB,EAAQunB,UAAYA,EACpBvnB,EAAQooB,QAAUA,EAClBpoB,EAAQsnB,qBAAuBA,EAmB/B,MAAMe,EAAsB3nB,EAAQ,OAC9Bga,EAAc5B,EAAgBpY,EAAQ,QAC5C,MAAM4nB,EACFxkB,WAAAA,CAAYykB,GACR3nB,KAAKuR,EAAI,EACmB,IAAToW,EAAa,IAAIC,WAAW,GAAc,KAATD,EAAc,IAAIE,YAAY,GAAK,IAAIC,YAAY,GAEnG9nB,KAAK+nB,aADLJ,EACoB7N,EAAYE,QAAQiF,YAAY0I,EAAO,GAAG,GAG1C,CAE5B,CACAK,YAAAA,GACI,OAAOhoB,KAAK+nB,aAAe/nB,KAAKuR,GACpC,EAEJ,MAAM0W,EAAiB,IAAIP,EAA2B,GAChDQ,EAAkB,IAAIR,EAA2B,IACvD,SAASR,IACL,MAAMiB,EAAoB,IAAb1jB,KAAKC,MACZsY,EAAQiL,EAAeD,eAC7B,OAAOG,EAAOnL,CAClB,CACA,SAASsJ,IACL,MAAM6B,EAAOC,OAAO3jB,KAAKC,OAAS0jB,OAAO,KACnCpL,EAAQoL,OAAOF,EAAgBF,gBACrC,OAAOG,EAAOnL,CAClB,CACA,SAASuJ,EAAqBxW,EAAQ1G,EAAQlE,GAC1C,MAAO,CACHA,GAAIA,GAAM+hB,IACVrX,QAAS,MACTE,SACA1G,SAER,CACA,SAAS8d,EAAoBhiB,EAAIjE,GAC7B,MAAO,CACHiE,KACA0K,QAAS,MACT3O,SAER,CACA,SAAS0lB,EAAmBzhB,EAAIoK,EAAOjL,GACnC,MAAO,CACHa,KACA0K,QAAS,MACTN,MAAOgY,EAAmBhY,EAAOjL,GAEzC,CACA,SAAS8iB,EAAoBniB,GACzB,OAAOwiB,EAAoBY,qBAAqBxF,SAAS5d,EAC7D,CACA,SAASoiB,EAASiB,GACd,OAAKppB,OAAOmkB,KAAKoE,EAAoBc,oBAAoB1F,SAASyF,GAG3Db,EAAoBc,mBAAmBD,GAFnCb,EAAoBc,mBAAmBd,EAAoBe,cAG1E,CACA,SAASlB,EAAeriB,GACpB,MAAMwjB,EAAQvpB,OAAOwpB,OAAOjB,EAAoBc,oBAAoB5Q,MAAMzV,GAAMA,EAAE+C,OAASA,IAC3F,OAAKwjB,GACMhB,EAAoBc,mBAAmBd,EAAoBe,cAG1E,CACA,SAASjB,EAAmBhY,EAAOjL,GAC/B,MAAqB,qBAAViL,EACA8X,EAASI,EAAoBkB,iBAEnB,kBAAVpZ,IACPA,EAAQrQ,OAAO6U,OAAO7U,OAAO6U,OAAO,CAAC,EAAGsT,EAASI,EAAoBmB,eAAgB,CAAErf,QAASgG,KAEhF,qBAATjL,IACPiL,EAAMjL,KAAOA,GAEb8iB,EAAoB7X,EAAMtK,QAC1BsK,EAAQ+X,EAAe/X,EAAMtK,OAE1BsK,EACX,CACA,SAASsZ,EAAe1lB,GACpB,MAAM2lB,EAAU3lB,EAAIslB,MAAM,IAAIM,OAAO,QAAS,OAC9C,GAAKD,GAAYA,EAAQzhB,OAEzB,OAAOyhB,EAAQ,EACnB,CACA,SAASE,EAAmB7lB,EAAK8lB,GAC7B,MAAMC,EAAWL,EAAe1lB,GAChC,MAAwB,qBAAb+lB,GAEJ,IAAIH,OAAOE,GAAOE,KAAKD,EAClC,CACA,SAASvC,EAAUxjB,GACf,OAAO6lB,EAAmB7lB,EAAK,WACnC,CACA,SAASqkB,EAAQrkB,GACb,OAAO6lB,EAAmB7lB,EAAK,SACnC,CACA,SAASujB,EAAqBxkB,EAAGiB,EAAKmlB,GAClC,OAAOpmB,EAAEqH,QAAQsZ,SAAS,0BAA4B3gB,EAAEqH,QAAQsZ,SAAS,wBACnE,IAAIhf,MAAM,eAAeykB,gBAAmBnlB,KAC5CjB,CACV,C,mCC7IA,IAAIknB,EAFJlqB,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQgqB,8BAA2B,EAEnC,SAAWA,GACPA,EAAyBA,EAAyB,iBAAmB,GAAK,gBAC1EA,EAAyBA,EAAyB,wBAA0B,KAAO,sBACtF,CAHD,CAGGA,IAA6BhqB,EAAQgqB,yBAA2BA,EAA2B,CAAC,G,kCCJ/F,IAAIC,EAFJnqB,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQiqB,cAAW,EAEnB,SAAWA,GACPA,EAAS,WAAa,MACzB,CAFD,CAEGA,IAAajqB,EAAQiqB,SAAWA,EAAW,CAAC,G,qCCL/CnqB,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQgqB,yBAA2BhqB,EAAQiqB,cAAW,EACtD,IAAIC,EAAmBxpB,EAAQ,MAC/BZ,OAAOC,eAAeC,EAAS,WAAY,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOyoB,EAAiBD,QAAU,IACpH,IAAIE,EAAkBzpB,EAAQ,OAC9BZ,OAAOC,eAAeC,EAAS,2BAA4B,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO0oB,EAAgBH,wBAA0B,G,qCCLnJlqB,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQinB,mBAAqBA,EAC7BjnB,EAAQgnB,0BAA4BA,EACpC,MAAM5jB,EAAc1C,EAAQ,MAC5B,SAASumB,IACL,MAAO,CACH,QAAW,eACX,KAAQ,aACR,SAAY,kEACZ,SAAY7jB,EAAYgnB,YACxB,cAAiBhnB,EAAYinB,sBAC7B,SAAYjnB,EAAYqT,iBACxB,UAAa,CAAC,MAAO,WAE7B,CACA,SAASuQ,IACL,MAAO,CACH,QAAW,aACX,KAAQ,kBACR,SAAY,kEACZ,SAAY5jB,EAAYgnB,YACxB,cAAiB,gBAAgBhnB,EAAYknB,qBAC7C,SAAY,GACZ,UAAa,CAAC,MAAO,UAAW,QAAS,WAEjD,C,kCCPA,SAASC,IACL,OAAOC,OAAOC,aAClB,CACA,SAASC,IACL,OAAOF,OAAOG,eAClB,CAvBA7qB,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ4qB,gBAAkB5qB,EAAQsqB,aAAetqB,EAAQ4V,qBAAuB5V,EAAQ6qB,mBAAqB7qB,EAAQyW,iBAAmBzW,EAAQoqB,YAAcpqB,EAAQqqB,sBAAwBrqB,EAAQ8qB,iBAAc,EACpN9qB,EAAQuqB,cAAgBA,EACxBvqB,EAAQ0qB,gBAAkBA,EAC1B1qB,EAAQ8qB,YAAc,aACtB9qB,EAAQqqB,sBAA0C,qBAAXG,QAA0BA,OAAOO,SAASC,SAASvH,SAAS,WAC7F,gCACA,+BACNzjB,EAAQoqB,YAAc,+BAEtBpqB,EAAQyW,iBAAmB,GAAGzW,EAAQ8qB,6BACtC9qB,EAAQ6qB,mBAAqB,iCAE7B7qB,EAAQ4V,qBAAuB,IAE/B5V,EAAQsqB,aAAe,iBACvBtqB,EAAQ4qB,gBAAkB,O,qCChB1B9qB,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQiJ,wBAA0BjJ,EAAQgJ,qBAAkB,EAC5D,IAAIqf,EAAsB3nB,EAAQ,OAClCZ,OAAOC,eAAeC,EAAS,kBAAmB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO4mB,EAAoBrf,eAAiB,IACrIlJ,OAAOC,eAAeC,EAAS,0BAA2B,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO4mB,EAAoBpf,uBAAyB,G,mCCJrJnJ,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQopB,cAAgBppB,EAAQmpB,mBAAqBnpB,EAAQirB,wBAA0BjrB,EAAQipB,qBAAuBjpB,EAAQwpB,aAAexpB,EAAQupB,eAAiBvpB,EAAQkrB,eAAiBlrB,EAAQmrB,iBAAmBnrB,EAAQorB,gBAAkBprB,EAAQqrB,YAAcrrB,EAAQiJ,wBAA0BjJ,EAAQgJ,qBAAkB,EACtU,MAAMA,UAAwBvE,MAC1BX,WAAAA,CAAY+B,EAAMsE,QACCjJ,GAAXiJ,IACAA,EAAUmhB,EAAwBzlB,IAEtCihB,MAAM3c,GACNvJ,KAAKiF,KAAOA,EACZjF,KAAKuJ,QAAU,GAAGnB,EAAgBqS,UAAUlR,EAAU,KAAOA,EAAU,KACvErK,OAAOyrB,eAAe3qB,KAAMoI,EAAgBjH,UAChD,CACAypB,MAAAA,GACI,MAAO,CACHrhB,QAASvJ,KAAKuJ,QACdtE,KAAMjF,KAAKiF,KAEnB,EAIJ,SAASylB,EAAwBzlB,GAC7B,OAAIA,GAAQoD,EAAwBiP,cACzB,gBAEFrS,GAAQoD,EAAwBwiB,kBAC9B,oBAEF5lB,GAAQoD,EAAwByiB,wBAC9B,0BAEF7lB,GAAQoD,EAAwB0iB,oBAC9B,sBAEF9lB,GAAQoD,EAAwB2iB,kBAC9B,oBAEF/lB,GAAQoD,EAAwB4iB,mBAC9B,qBAEFhmB,GAAQoD,EAAwB6iB,kCAC9B,iCAEFjmB,GAAQoD,EAAwB8iB,qBAC9B,uBAEFlmB,GAAQoD,EAAwBC,iBAC9B,gBAEFrD,GAAQoD,EAAwB+iB,oBAC9B,sBAEJ,eACX,CACA,IAAI/iB,EAnCJjJ,EAAQgJ,gBAAkBA,EAC1BA,EAAgBqS,OAAS,0BAmCzB,SAAWpS,GACPA,EAAwBA,EAAwB,iBAAmB,GAAK,gBACxEA,EAAwBA,EAAwB,qBAAuB,GAAK,oBAC5EA,EAAwBA,EAAwB,2BAA6B,IAAM,0BACnFA,EAAwBA,EAAwB,uBAAyB,IAAM,sBAC/EA,EAAwBA,EAAwB,qBAAuB,KAAO,oBAC9EA,EAAwBA,EAAwB,sBAAwB,KAAO,qBAC/EA,EAAwBA,EAAwB,qCAAuC,KAAO,oCAC9FA,EAAwBA,EAAwB,wBAA0B,KAAO,uBACjFA,EAAwBA,EAAwB,uBAAyB,KAAO,sBAChFA,EAAwBA,EAAwB,wBAA0B,KAAO,uBACjFA,EAAwBA,EAAwB,oBAAsB,KAAO,kBAChF,CAZD,CAYGA,IAA4BjJ,EAAQiJ,wBAA0BA,EAA0B,CAAC,IAC5FjJ,EAAQqrB,YAAc,cACtBrrB,EAAQorB,gBAAkB,kBAC1BprB,EAAQmrB,iBAAmB,mBAC3BnrB,EAAQkrB,eAAiB,iBACzBlrB,EAAQupB,eAAiB,iBACzBvpB,EAAQwpB,aAAe,eACvBxpB,EAAQipB,qBAAuB,EAAE,OAAQ,OAAQ,OAAQ,OAAQ,OACjEjpB,EAAQirB,wBAA0B,EAAE,MAAQ,OAC5CjrB,EAAQmpB,mBAAqB,CACzB,CAACnpB,EAAQqrB,aAAc,CAAExlB,MAAO,MAAOsE,QAAS,eAChD,CAACnK,EAAQorB,iBAAkB,CAAEvlB,MAAO,MAAOsE,QAAS,mBACpD,CAACnK,EAAQmrB,kBAAmB,CAAEtlB,MAAO,MAAOsE,QAAS,oBACrD,CAACnK,EAAQkrB,gBAAiB,CAAErlB,MAAO,MAAOsE,QAAS,kBACnD,CAACnK,EAAQupB,gBAAiB,CAAE1jB,MAAO,MAAOsE,QAAS,kBACnD,CAACnK,EAAQwpB,cAAe,CAAE3jB,MAAO,KAAOsE,QAAS,iBAErDnK,EAAQopB,cAAgBppB,EAAQwpB,Y,qCCpFhC,IAAI7oB,EAAmBC,MAAQA,KAAKD,kBAAqBb,OAAOe,OAAU,SAASC,EAAGC,EAAGC,EAAGC,QAC7EC,IAAPD,IAAkBA,EAAKD,GAC3B,IAAIG,EAAOrB,OAAOsB,yBAAyBL,EAAGC,GACzCG,KAAS,QAASA,GAAQJ,EAAEM,WAAaF,EAAKG,UAAYH,EAAKI,gBAClEJ,EAAO,CAAEK,YAAY,EAAMC,IAAK,WAAa,OAAOV,EAAEC,EAAI,IAE5DlB,OAAOC,eAAee,EAAGG,EAAIE,EACjC,EAAM,SAASL,EAAGC,EAAGC,EAAGC,QACTC,IAAPD,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,EACd,GACIwlB,EAAgB5lB,MAAQA,KAAK4lB,cAAiB,SAASzlB,EAAGf,GAC1D,IAAK,IAAIymB,KAAK1lB,EAAa,YAAN0lB,GAAoB3mB,OAAOiC,UAAUC,eAAeC,KAAKjC,EAASymB,IAAI9lB,EAAgBX,EAASe,EAAG0lB,EAC3H,EACA3mB,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQoqB,YAAcpqB,EAAQ8qB,YAAc9qB,EAAQ4V,qBAAuB5V,EAAQyW,iBAAmBzW,EAAQqqB,sBAAwBrqB,EAAQisB,qBAAuBjsB,EAAQksB,iBAAmBlsB,EAAQmsB,mBAAqBnsB,EAAQosB,kBAAoBpsB,EAAQqsB,gBAAkBrsB,EAAQssB,gBAAkBtsB,EAAQusB,gBAAkBvsB,EAAQwsB,gBAAkBxsB,EAAQysB,wBAAqB,EAC9XjG,EAAa9lB,EAAQ,OAAYV,GACjC,IAAI0sB,EAAShsB,EAAQ,OACrBZ,OAAOC,eAAeC,EAAS,qBAAsB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOirB,EAAOD,kBAAoB,IAC9H3sB,OAAOC,eAAeC,EAAS,kBAAmB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOirB,EAAOF,eAAiB,IACxH1sB,OAAOC,eAAeC,EAAS,kBAAmB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOirB,EAAOH,eAAiB,IACxHzsB,OAAOC,eAAeC,EAAS,kBAAmB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOirB,EAAOJ,eAAiB,IACxHxsB,OAAOC,eAAeC,EAAS,kBAAmB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOirB,EAAOL,eAAiB,IACxHvsB,OAAOC,eAAeC,EAAS,oBAAqB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOirB,EAAON,iBAAmB,IAC5HtsB,OAAOC,eAAeC,EAAS,qBAAsB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOirB,EAAOP,kBAAoB,IAC9HrsB,OAAOC,eAAeC,EAAS,mBAAoB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOirB,EAAOR,gBAAkB,IAC1HpsB,OAAOC,eAAeC,EAAS,uBAAwB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOirB,EAAOT,oBAAsB,IAClI,IAAI7oB,EAAc1C,EAAQ,MAC1BZ,OAAOC,eAAeC,EAAS,wBAAyB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO2B,EAAYinB,qBAAuB,IACzIvqB,OAAOC,eAAeC,EAAS,mBAAoB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO2B,EAAYqT,gBAAkB,IAC/H3W,OAAOC,eAAeC,EAAS,uBAAwB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO2B,EAAYwS,oBAAsB,IACvI9V,OAAOC,eAAeC,EAAS,cAAe,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO2B,EAAY0nB,WAAa,IACrHhrB,OAAOC,eAAeC,EAAS,cAAe,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO2B,EAAYgnB,WAAa,IACrH5D,EAAa9lB,EAAQ,OAAcV,E,mCCjCnCF,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQisB,qBAAuBjsB,EAAQksB,iBAAmBlsB,EAAQmsB,mBAAqBnsB,EAAQosB,kBAAoBpsB,EAAQqsB,gBAAkBrsB,EAAQssB,gBAAkBtsB,EAAQusB,gBAAkBvsB,EAAQwsB,gBAAkBxsB,EAAQysB,wBAAqB,EACxPzsB,EAAQysB,mBAAqB,SAC7BzsB,EAAQwsB,gBAAkB,SAC1BxsB,EAAQusB,gBAAkB,MAC1BvsB,EAAQssB,gBAAkB,MAC1BtsB,EAAQqsB,gBAAkB,MAC1BrsB,EAAQosB,kBAAoB,QAC5BpsB,EAAQmsB,mBAAqB,SAC7BnsB,EAAQksB,iBAAmB,OAC3BlsB,EAAQisB,qBAAuB,U,mCCV/B,IAAI/pB,EAAatB,MAAQA,KAAKsB,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMtC,GAAS,OAAOA,aAAiBoC,EAAIpC,EAAQ,IAAIoC,GAAE,SAAUG,GAAWA,EAAQvC,EAAQ,GAAI,CAC3G,OAAO,IAAKoC,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU1C,GAAS,IAAM2C,EAAKN,EAAUO,KAAK5C,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAS9C,GAAS,IAAM2C,EAAKN,EAAU,SAASrC,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKd,GAAUA,EAAOkB,KAAOR,EAAQV,EAAO7B,OAASsC,EAAMT,EAAO7B,OAAOgD,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EAUA,SAAS8pB,EAAeC,EAAIC,GACxB,OAAO3qB,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,IAAI+E,EAAI+I,EACR,MAAMoe,EAAyF,QAA7EnnB,EAAiB,OAAZknB,QAAgC,IAAZA,OAAqB,EAASA,EAAQC,gBAA6B,IAAPnnB,EAAgBA,EAAK,EACtHonB,EAAuF,QAA5Ere,EAAiB,OAAZme,QAAgC,IAAZA,OAAqB,EAASA,EAAQE,eAA4B,IAAPre,EAAgBA,EAAK,IAC1H,GAAkB,oBAAPke,EACP,MAAM,IAAInoB,MAAM,mCAAmCmoB,GAEvD,IACII,EADA7a,EAAI,EAER,MAAOA,EAAI2a,EACP,IACI,aAAaF,GACjB,CACA,MAAO7jB,GACHikB,EAAYjkB,EACZoJ,IACIA,EAAI2a,UACEG,EAAMF,GAEpB,CAEJ,MAAMC,CACV,GACJ,CAOA,SAASC,EAAMC,EAASL,GACpB,OAAO3qB,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,OAAO,IAAI6B,SAAQ,CAACD,EAASE,KACzB,IAAIiD,EAAI+I,EACR,GAAgF,QAA3E/I,EAAiB,OAAZknB,QAAgC,IAAZA,OAAqB,EAASA,EAAQM,cAA2B,IAAPxnB,OAAgB,EAASA,EAAGynB,QAEhH,YADA1qB,EAAO,IAAI+B,MAAM,kBAGrB,MAAM4oB,EAAYtmB,YAAW,IAAMvE,KAAW0qB,GAC8B,QAA3Exe,EAAiB,OAAZme,QAAgC,IAAZA,OAAqB,EAASA,EAAQM,cAA2B,IAAPze,GAAyBA,EAAGrF,iBAAiB,SAAS,KACtI5C,aAAa4mB,GACb3qB,EAAO,IAAI+B,MAAM,iBAAiB,GACpC,GAEV,GACJ,CAvDA3E,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ2sB,eAAiBA,EACzB3sB,EAAQitB,MAAQA,C,qCCXhB,IAAItsB,EAAmBC,MAAQA,KAAKD,kBAAqBb,OAAOe,OAAU,SAASC,EAAGC,EAAGC,EAAGC,QAC7EC,IAAPD,IAAkBA,EAAKD,GAC3B,IAAIG,EAAOrB,OAAOsB,yBAAyBL,EAAGC,GACzCG,KAAS,QAASA,GAAQJ,EAAEM,WAAaF,EAAKG,UAAYH,EAAKI,gBAClEJ,EAAO,CAAEK,YAAY,EAAMC,IAAK,WAAa,OAAOV,EAAEC,EAAI,IAE5DlB,OAAOC,eAAee,EAAGG,EAAIE,EACjC,EAAM,SAASL,EAAGC,EAAGC,EAAGC,QACTC,IAAPD,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,EACd,GACIwlB,EAAgB5lB,MAAQA,KAAK4lB,cAAiB,SAASzlB,EAAGf,GAC1D,IAAK,IAAIymB,KAAK1lB,EAAa,YAAN0lB,GAAoB3mB,OAAOiC,UAAUC,eAAeC,KAAKjC,EAASymB,IAAI9lB,EAAgBX,EAASe,EAAG0lB,EAC3H,EACA3mB,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQstB,cAAgBttB,EAAQutB,eAAiBvtB,EAAQwtB,UAAYxtB,EAAQytB,KAAOztB,EAAQ0tB,kBAAoB1tB,EAAQ2tB,yBAA2B3tB,EAAQ4tB,cAAgB5tB,EAAQ6tB,SAAW7tB,EAAQgY,aAAehY,EAAQ8tB,uBAAyB9tB,EAAQ+tB,cAAgB/tB,EAAQ2W,MAAQ3W,EAAQ0hB,aAAe1hB,EAAQ8lB,aAAe9lB,EAAQmmB,mBAAqBnmB,EAAQ2lB,kBAAoB3lB,EAAQ0N,YAAc1N,EAAQ8N,eAAiB9N,EAAQ2X,WAAa3X,EAAQiY,qBAAuBjY,EAAQguB,0BAA4BhuB,EAAQiuB,0BAA4BjuB,EAAQyX,oBAAsBzX,EAAQ+X,iCAAmC/X,EAAQkuB,wBAA0BluB,EAAQmuB,qBAAuBnuB,EAAQouB,4BAA8BpuB,EAAQquB,cAAgBruB,EAAQ4W,4BAA8B5W,EAAQsuB,gBAAkBtuB,EAAQ+W,iBAAmB/W,EAAQ4K,kBAAoB5K,EAAQgK,cAAgBhK,EAAQwT,mBAAqBxT,EAAQwR,YAAcxR,EAAQmM,UAAYnM,EAAQuuB,WAAavuB,EAAQkH,SAAWlH,EAAQmF,SAAWnF,EAAQ2sB,oBAAiB,EACliC,IAAI6B,EAAqB9tB,EAAQ,OACjCZ,OAAOC,eAAeC,EAAS,iBAAkB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO+sB,EAAmB7B,cAAgB,IAClI,IAAIlhB,EAAQ/K,EAAQ,OACpBZ,OAAOC,eAAeC,EAAS,WAAY,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOgK,EAAMtG,QAAU,IACzGrF,OAAOC,eAAeC,EAAS,WAAY,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOgK,EAAMvE,QAAU,IACzGpH,OAAOC,eAAeC,EAAS,aAAc,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOgK,EAAM8iB,UAAY,IAC7GzuB,OAAOC,eAAeC,EAAS,YAAa,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOgK,EAAMU,SAAW,IAC3GrM,OAAOC,eAAeC,EAAS,cAAe,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOgK,EAAM+F,WAAa,IAC/G1R,OAAOC,eAAeC,EAAS,qBAAsB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOgK,EAAM+H,kBAAoB,IAC7HgT,EAAa9lB,EAAQ,OAAsBV,GAC3CwmB,EAAa9lB,EAAQ,OAAaV,GAClC,IAAIwL,EAAa9K,EAAQ,OACzBZ,OAAOC,eAAeC,EAAS,gBAAiB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO+J,EAAWxB,aAAe,IACxHlK,OAAOC,eAAeC,EAAS,oBAAqB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO+J,EAAWZ,iBAAmB,IAChI,IAAIe,EAAQjL,EAAQ,OACpBZ,OAAOC,eAAeC,EAAS,mBAAoB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOkK,EAAMoL,gBAAkB,IACzHjX,OAAOC,eAAeC,EAAS,kBAAmB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOkK,EAAM2iB,eAAiB,IACvHxuB,OAAOC,eAAeC,EAAS,8BAA+B,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOkK,EAAMiL,2BAA6B,IAC/I9W,OAAOC,eAAeC,EAAS,gBAAiB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOkK,EAAM0iB,aAAe,IACnHvuB,OAAOC,eAAeC,EAAS,8BAA+B,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOkK,EAAMyiB,2BAA6B,IAC/ItuB,OAAOC,eAAeC,EAAS,uBAAwB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOkK,EAAMwiB,oBAAsB,IACjIruB,OAAOC,eAAeC,EAAS,0BAA2B,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOkK,EAAMuiB,uBAAyB,IACvIpuB,OAAOC,eAAeC,EAAS,mCAAoC,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOkK,EAAMoM,gCAAkC,IACzJjY,OAAOC,eAAeC,EAAS,sBAAuB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOkK,EAAM8L,mBAAqB,IAC/H3X,OAAOC,eAAeC,EAAS,4BAA6B,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOkK,EAAMsiB,yBAA2B,IAC3InuB,OAAOC,eAAeC,EAAS,4BAA6B,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOkK,EAAMqiB,yBAA2B,IAC3IluB,OAAOC,eAAeC,EAAS,uBAAwB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOkK,EAAMsM,oBAAsB,IACjInY,OAAOC,eAAeC,EAAS,aAAc,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOkK,EAAMgM,UAAY,IAC7G,IAAIpU,EAAU7C,EAAQ,OACtBZ,OAAOC,eAAeC,EAAS,iBAAkB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO8B,EAAQuK,cAAgB,IACvHhO,OAAOC,eAAeC,EAAS,cAAe,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO8B,EAAQmK,WAAa,IACjH5N,OAAOC,eAAeC,EAAS,oBAAqB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO8B,EAAQoiB,iBAAmB,IAC7H7lB,OAAOC,eAAeC,EAAS,qBAAsB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO8B,EAAQ4iB,kBAAoB,IAC/HrmB,OAAOC,eAAeC,EAAS,eAAgB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO8B,EAAQuiB,YAAc,IACnHhmB,OAAOC,eAAeC,EAAS,eAAgB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO8B,EAAQme,YAAc,IACnH5hB,OAAOC,eAAeC,EAAS,QAAS,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO8B,EAAQoT,KAAO,IACrG7W,OAAOC,eAAeC,EAAS,gBAAiB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO8B,EAAQwqB,aAAe,IACrHjuB,OAAOC,eAAeC,EAAS,yBAA0B,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO8B,EAAQuqB,sBAAwB,IACvIhuB,OAAOC,eAAeC,EAAS,eAAgB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO8B,EAAQyU,YAAc,IACnH,IAAIyW,EAAY/tB,EAAQ,MACxBZ,OAAOC,eAAeC,EAAS,WAAY,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOgtB,EAAUZ,QAAU,IAC7G/tB,OAAOC,eAAeC,EAAS,gBAAiB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOgtB,EAAUb,aAAe,IACvH9tB,OAAOC,eAAeC,EAAS,2BAA4B,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOgtB,EAAUd,wBAA0B,IAC7I7tB,OAAOC,eAAeC,EAAS,oBAAqB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOgtB,EAAUf,iBAAmB,IAC/H5tB,OAAOC,eAAeC,EAAS,OAAQ,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOgtB,EAAUhB,IAAM,IACrG3tB,OAAOC,eAAeC,EAAS,YAAa,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOgtB,EAAUjB,SAAW,IAC/G,IAAIkB,EAAYhuB,EAAQ,OACxBZ,OAAOC,eAAeC,EAAS,iBAAkB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOitB,EAAUnB,cAAgB,IACzH,IAAIoB,EAAYjuB,EAAQ,MACxBZ,OAAOC,eAAeC,EAAS,gBAAiB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOktB,EAAUrB,aAAe,G,qCClE3G5sB,EAAA,OAAAA,EAAA,MAACA,EAAA,OAAAA,EAAA,MACb,IAAIwB,EAAatB,MAAQA,KAAKsB,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMtC,GAAS,OAAOA,aAAiBoC,EAAIpC,EAAQ,IAAIoC,GAAE,SAAUG,GAAWA,EAAQvC,EAAQ,GAAI,CAC3G,OAAO,IAAKoC,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU1C,GAAS,IAAM2C,EAAKN,EAAUO,KAAK5C,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAS9C,GAAS,IAAM2C,EAAKN,EAAU,SAASrC,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKd,GAAUA,EAAOkB,KAAOR,EAAQV,EAAO7B,OAASsC,EAAMT,EAAO7B,OAAOgD,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACA/C,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQwT,mBAAqBA,EAC7BxT,EAAQmF,SAAWA,EACnBnF,EAAQkH,SAAWA,EACnBlH,EAAQuuB,WAAaA,EACrBvuB,EAAQwR,YAAcA,EACtBxR,EAAQmM,UAAYA,EACpB,MAAMyiB,GAAQ,EACRC,GAAc,EACdnjB,EAAWhL,EAAQ,OACnBouB,EAAkB,IAAIpjB,EAASqjB,YACrC,SAASvb,IACL,OAAOsb,CACX,CACA,MAAME,EAActuB,EAAQ,OACtBuuB,EAAUD,EAAYC,QAC5B,SAAS9pB,KAAY+pB,GACjB,GAAsB,oBAAXC,QACP,KACQP,IAAqB,OAAXpE,aAA8B,IAAXA,YAAoB,EAASA,OAAO4E,eACjED,QAAQzrB,IAAI,qBAAqBurB,QAAeC,EAExD,CACA,MAAOvpB,GAAM,CAErB,CACA,SAASuB,KAAYgoB,GACjB,GAAsB,oBAAXC,QACP,IAII,IAHIP,IAAqB,OAAXpE,aAA8B,IAAXA,YAAoB,EAASA,OAAO4E,eACjED,QAAQhf,MAAM,qBAAqB8e,QAAeC,GAElDL,IAAgBD,EAAO,CACvB,IAAIthB,EAAU,GACdA,GAAW,IAAI4hB,GAAMG,QAAO,CAACvtB,EAAQwV,KACd,iBAARA,EACG,IAAMA,EAEI,iBAARA,GACF7C,KAAKC,UAAU4C,EAC7B,IAEJwX,EAAgBQ,kBAAkBhiB,EAAS5B,EAAS+F,cAAcC,IAAK,GAC3E,CACJ,CACA,MAAO/L,GAAM,CAErB,CACA,SAAS4oB,KAAcW,GACnB,GAAsB,oBAAXC,QACP,KACQP,IAAqB,OAAXpE,aAA8B,IAAXA,YAAoB,EAASA,OAAO4E,eACjED,QAAQI,KAAK,qBAAqBN,QAAeC,EAEzD,CACA,MAAOvpB,GAAM,CAErB,CACA,SAAS6L,EAAY0X,EAAMsG,EAAQliB,GAC/B,OAAOpL,EAAUtB,UAAM,OAAQ,GAAQ,kBAC7BkuB,EAAgBQ,kBAAkBhiB,EAAS4b,EAAMsG,EAC3D,GACJ,CACA,SAASrjB,EAAUsjB,GACf,OAAOvtB,EAAUtB,KAAMiI,eAAW,GAAQ,UAAWyE,EAASkiB,EAAS,WACnE,GAER,C,qCC7EY9uB,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACb,IAAIwB,EAAatB,MAAQA,KAAKsB,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMtC,GAAS,OAAOA,aAAiBoC,EAAIpC,EAAQ,IAAIoC,GAAE,SAAUG,GAAWA,EAAQvC,EAAQ,GAAI,CAC3G,OAAO,IAAKoC,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU1C,GAAS,IAAM2C,EAAKN,EAAUO,KAAK5C,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAS9C,GAAS,IAAM2C,EAAKN,EAAU,SAASrC,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKd,GAAUA,EAAOkB,KAAOR,EAAQV,EAAO7B,OAASsC,EAAMT,EAAO7B,OAAOgD,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACIiW,EAAmBlY,MAAQA,KAAKkY,iBAAoB,SAAUjX,GAC9D,OAAQA,GAAOA,EAAIR,WAAcQ,EAAM,CAAE,QAAWA,EACxD,EACA/B,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ+uB,YAAc/uB,EAAQ0vB,cAAgB1vB,EAAQyR,cAAgBzR,EAAQ2vB,gBAAa,EAC3F,MAAMC,EAAgB9W,EAAgBpY,EAAQ,QACxC+K,EAAQ/K,EAAQ,OAChBiL,EAAQjL,EAAQ,OAChB6C,EAAU7C,EAAQ,OAClBmvB,EAAgB/W,EAAgBpY,EAAQ,QACxCga,EAAc5B,EAAgBpY,EAAQ,QAC5CV,EAAQ2vB,WAAa,QACrB,MAAMG,EAAgB,CAClB,8CACA,8CAEEC,EAAiB,YACjBC,EAAgB,iBAChBC,EAAwB,IACxBC,EAAuB,CACzBC,OAAQ,MACR,eAAgB,cAEdC,EAAsB,OACtBC,EAAqB,CACvBC,QAASJ,EACTvf,OAAQyf,GAEZpwB,EAAQyR,cAAgB,CACpB8e,QAAS,UACTC,SAAU,WACVC,MAAO,QACP/e,IAAK,OAET1R,EAAQ0vB,cAAgB,CACpBgB,KAAM,OACNC,OAAQ,UAIZ,MAUMC,EAAuBA,CAACC,KAAWC,IAAW5uB,OAAU,EAAQ,CAAC2uB,KAAWC,QAAS,GAAQ,UAAWC,EAAMlE,EAAU,CAAC,EAAGK,EAAU,KACxI,IAAK,MAAMnpB,KAAOgtB,EACd,IACI,MAAMC,EAAa,IAAIC,gBACjB9D,EAAS6D,EAAW7D,OACpB+D,GAAe,EAAItB,EAAchV,SAAS7W,EAAKjE,OAAO6U,OAAO7U,OAAO6U,OAAO,CAAC,EAAGkY,GAAU,CAAEM,YAC3FgE,EAAiB,IAAI1uB,SAAQ,CAAC2uB,EAAG1uB,IAAWqE,YAAW,KACzDiqB,EAAWK,QACX3uB,EAAO,IAAI+B,MAAM,qBAAqB,GACvCyoB,KACGnY,QAAiBtS,QAAQ6uB,KAAK,CAACJ,EAAcC,IACnD,GAAIpc,EAASwc,GACT,OAAOxc,EAEX,GAAuB,KAAnBA,EAASyc,OAET,OADArC,QAAQhf,MAAM,yBAA0BpM,GACjCgR,CAEf,CACA,MAAO5E,GACHgf,QAAQhf,MAAM,mBAAmBpM,KAAQoM,EAC7C,CAGJ,MADAgf,QAAQhf,MAAM,gCACR,IAAI1L,MAAM,6BACpB,IACA,MAAMsqB,EACFjrB,WAAAA,GACIlD,KAAK6wB,YAAczxB,EAAQ0vB,cAAcgB,KACzC9vB,KAAK8wB,eAAiB1xB,EAAQ2vB,WAC9B/uB,KAAK+wB,QAAU9B,EAAcjV,QAAQgX,eAAe,CAChDxhB,KAAM,gBAEVxP,KAAKixB,WAAa,IAAIhO,MACtBjjB,KAAKkxB,aAAc,EAAIvuB,EAAQmK,aAAagN,EAAYE,QAAQiF,YAAY,IAChF,CACAkS,oBAAAA,CAAqB9C,EAAS+C,EAAMpmB,GAChChL,KAAK8wB,eAAiBzC,EACtBruB,KAAK6wB,YAAcO,EACnBpxB,KAAKqxB,QAAUrmB,CACnB,CACA,kBAAIsmB,GACA,OAAOnC,EAAiB,IAAMnvB,KAAKqxB,OACvC,CACA,kBAAIE,GACA,OAAI,EAAI5uB,EAAQmqB,sBACR,EAAInqB,EAAQoT,SACL,MAGA,UAIJ,IAEf,CACAlD,WAAAA,GACI,OAAOvR,EAAUtB,UAAM,OAAQ,GAAQ,YACnCA,KAAKwxB,qBACL,IAAIC,QAAgBzxB,KAAK+wB,QAAQ5iB,QAAQnO,KAAKsxB,gBAC1CI,QAAa1xB,KAAK+wB,QAAQ5iB,QAAQihB,GAClCsC,EACA1xB,KAAKkxB,YAAcQ,EAGnB1xB,KAAK+wB,QAAQ3S,QAAQgR,EAAepvB,KAAKkxB,aAEzCO,IACAzxB,KAAKixB,WAAaQ,GAClB,EAAI5mB,EAAMtG,UAAU,qCAAsCvE,KAAKixB,WAAW5pB,cACpErH,KAAK2xB,oBAEnB,GACJ,CACAH,kBAAAA,GACI,IAAI5H,GAAS,EAAI7e,EAAM6mB,aACnBhI,IACA,EAAI/e,EAAMtG,UAAU,8BAM5B,CACAstB,YAAAA,GACI,OAAO7xB,KAAKixB,UAChB,CACAa,UAAAA,CAAWC,GACP,OAAOzwB,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,OAAO,IAAI6B,SAAQ,CAACD,EAASE,IAAWR,EAAUtB,UAAM,OAAQ,GAAQ,YACpE,IACI,MAAMgyB,EAAOne,KAAKC,UAAUie,IAC5B,EAAIlnB,EAAMtG,UAAU,oBAAqBytB,GACzC,MAAMC,QAAYjC,EAAqBd,EAAehwB,OAAO6U,OAAO7U,OAAO6U,OAAO,CAAC,EAAG0b,GAAqB,CAAEuC,KAAMA,MACnH,EAAInnB,EAAMtG,UAAU,oBAAqB0tB,GACrCA,GAAOA,EAAIrB,QAAwB,KAAdqB,EAAIrB,QACzB5wB,KAAKixB,WAAajxB,KAAKixB,WAAWiB,QAAQxb,GAC/BA,EAAK4H,WAAayT,EAAOzT,WAAa5H,EAAKhK,SAAWqlB,EAAOrlB,gBAElE1M,KAAK+wB,QAAQ3S,QAAQpe,KAAKsxB,eAAgBtxB,KAAKixB,YACrDrvB,GAAQ,IAGRE,GAAO,EAEf,CACA,MAAOI,IACH,EAAI2I,EAAMtG,UAAU,qBAAsBrC,GAC1CN,GAAQ,EAEZ,CACJ,KACJ,GACJ,CACA8sB,iBAAAA,CAAkBhiB,EAAS4b,EAAMsG,GAC7B,OAAOttB,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,IAAI+E,EAAI+I,EAAIC,EAAIC,EAChB,IAAImkB,EAAyC,QAAjCptB,GAAK,EAAIgG,EAAM6mB,oBAAiC,IAAP7sB,OAAgB,EAASA,EAAGolB,SAASiI,SACtFjI,EAA6C,QAAjCrc,GAAK,EAAI/C,EAAM6mB,oBAAiC,IAAP9jB,OAAgB,EAASA,EAAGqc,SAASvJ,OAC1FuR,GAAQhI,IACRA,GAAsBgI,GAE1B,IAAIE,EAA6C,QAAjCtkB,GAAK,EAAIhD,EAAM6mB,oBAAiC,IAAP7jB,OAAgB,EAASA,EAAGukB,UAAUD,SAC3FE,EAAuC,QAAjCvkB,GAAK,EAAIjD,EAAM6mB,oBAAiC,IAAP5jB,OAAgB,EAASA,EAAGskB,UAAUE,UACrFC,EAAWzyB,KAAKuxB,eAChBmB,EAAa,CACbhB,KAAM1xB,KAAKkxB,YACX7C,QAASruB,KAAK8wB,eACdpkB,QAASA,EACTkiB,OAAQA,EACRwC,KAAMpxB,KAAK6wB,YACXvS,WAAW,IAAI7Z,MAAOwK,UACtB9L,IAAKgnB,EACLwI,KAAMN,EACN/J,KAAMA,EACNmK,SAAUA,EACV,aAAcF,SAEZvyB,KAAK4yB,eAAeF,SACpB1yB,KAAK8xB,WAAWY,EAC1B,GACJ,CACAf,iBAAAA,GACI,OAAOrwB,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,OAAO,IAAI6B,SAAQ,CAACD,EAASE,IAAWR,EAAUtB,UAAM,OAAQ,GAAQ,YACpE,IAAI6yB,EAAW7yB,KAAKixB,WAAW6B,KAAIf,GAAU/xB,KAAK8xB,WAAWC,MAC7D,EAAIlnB,EAAMtG,UAAU,mDAAmD,IAAIE,MAAOgC,eAClF5E,QAAQkxB,WAAWF,GAAUxwB,MAAM2wB,KAC/B,EAAInoB,EAAMtG,UAAU,kDAAkD,IAAIE,MAAOgC,eACjF,IAAIwsB,EAAY,GAChBD,EAAQ3e,SAAQ,CAACnT,EAAQgyB,KACA,YAAjBhyB,EAAO0vB,QACPqC,EAAU/f,KAAKggB,EACnB,IAEJlzB,KAAKixB,WAAajxB,KAAKixB,WAAWiB,QAAO,CAAC1B,EAAG0C,KAAWD,EAAUpQ,SAASqQ,KAC3ElzB,KAAK+wB,QAAQ3S,QAAQpe,KAAKsxB,eAAgBtxB,KAAKixB,YAAY5uB,MAAK,SAAUhD,GACtEuC,GACJ,IAAGgO,OAAM,SAAUzH,GACfrG,EAAOqG,EACX,GAAE,GAEV,KACJ,GACJ,CACAyqB,cAAAA,CAAelc,GACX,OAAOpV,EAAUtB,UAAM,OAAQ,GAAQ,YAEnC,GADAA,KAAKixB,WAAW/d,KAAKwD,GACjB1W,KAAKixB,WAAW5pB,OAASgoB,EAAuB,CAChD,IAAIhP,EAASrgB,KAAKixB,WAAW5pB,OAASgoB,EACtCrvB,KAAKixB,WAAWkC,OAAO,EAAG9S,EAC9B,CACA,OAAO,IAAIxe,SAAQ,CAACD,EAASE,KACzB9B,KAAK+wB,QAAQ3S,QAAQpe,KAAKsxB,eAAgBtxB,KAAKixB,YAAY5uB,MAAK,SAAUhD,GACtEuC,EAAQ8U,EACZ,IAAG9G,OAAM,SAAUzH,GACfrG,EAAOqG,EACX,GAAE,GAEV,GACJ,CACAirB,UAAAA,CAAW1mB,EAAS4b,EAAMsG,EAAQwC,GAC9B,OAAO9vB,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,IAAI+E,EAAI+I,EAAIC,EAAIC,EAChB,IAAImkB,EAAyC,QAAjCptB,GAAK,EAAIgG,EAAM6mB,oBAAiC,IAAP7sB,OAAgB,EAASA,EAAGolB,SAASiI,SACtFjI,EAA6C,QAAjCrc,GAAK,EAAI/C,EAAM6mB,oBAAiC,IAAP9jB,OAAgB,EAASA,EAAGqc,SAASvJ,OAC1FuR,GAAQhI,IACRA,GAAsBgI,GAE1B,IAAIE,EAA6C,QAAjCtkB,GAAK,EAAIhD,EAAM6mB,oBAAiC,IAAP7jB,OAAgB,EAASA,EAAGukB,UAAUD,SAC3FI,EAAWzyB,KAAKuxB,eAChBgB,EAAuC,QAAjCvkB,GAAK,EAAIjD,EAAM6mB,oBAAiC,IAAP5jB,OAAgB,EAASA,EAAGskB,UAAUE,UACrFE,EAAa,CACbhB,KAAM1xB,KAAKkxB,YACX7C,QAASruB,KAAK8wB,eACdpkB,QAASA,EACTkiB,OAAQA,EACRwC,KAAMA,EACN9S,WAAW,IAAI7Z,MAAOwK,UACtB9L,IAAKgnB,EACLwI,KAAMN,EACN/J,KAAMA,EACNmK,SAAUA,EACV,aAAcF,GAElB,aAAavyB,KAAK4yB,eAAeF,EACrC,GACJ,EAEJtzB,EAAQ+uB,YAAcA,C,mCC7QtBjvB,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQi0B,sBAAwBj0B,EAAQk0B,4BAA8Bl0B,EAAQm0B,iCAAmCn0B,EAAQo0B,sCAAwCp0B,EAAQq0B,2BAA6Br0B,EAAQs0B,qCAAuCt0B,EAAQu0B,kCAAoCv0B,EAAQw0B,2BAA6Bx0B,EAAQy0B,iCAA8B,EAC5Wz0B,EAAQy0B,4BAA8B,qCACtCz0B,EAAQw0B,2BAA6B,oCACrCx0B,EAAQu0B,kCAAoC,2CAC5Cv0B,EAAQs0B,qCAAuC,8CAC/Ct0B,EAAQq0B,2BAA6B,oCACrCr0B,EAAQo0B,sCAAwC,+CAChDp0B,EAAQm0B,iCAAmC,0CAC3Cn0B,EAAQk0B,4BAA8B,qCACtCl0B,EAAQi0B,sBAAwB,a,oCCVhCn0B,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQstB,cAAgBA,EACxB,MAAM3pB,EAAajD,EAAQ,OAC3B,SAAS4sB,EAAcoH,GACnB,IAAKA,EACD,MAAM,IAAI/wB,EAAWqF,gBAAgBrF,EAAWsF,wBAAwBwiB,kBAAmB,uDAE/F,IAAKiJ,EAAatkB,KACd,MAAM,IAAIzM,EAAWqF,gBAAgBrF,EAAWsF,wBAAwBwiB,kBAAmB,wBAE/F,IAAKiJ,EAAaC,KACd,MAAM,IAAIhxB,EAAWqF,gBAAgBrF,EAAWsF,wBAAwBwiB,kBAAmB,oBAE/F,OAAO,CACX,C,qCCdA3rB,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQgK,cAAgBA,EACxBhK,EAAQ4K,kBAAoBA,EAC5B,MAAMa,EAAQ/K,EAAQ,OAChBk0B,EAAiB1vB,GAASuP,KAAKC,UAAUxP,GAAM,CAACksB,EAAGnxB,IAA4B,kBAAVA,EAAqBA,EAAMsF,WAAa,IAAMtF,IAQnH40B,EAAaC,IAQf,MAAMC,EAA0B,sQAC1BC,EAAiBF,EAAKjkB,QAAQkkB,GAAyB,CAAC1L,EAAO4L,IAAU,KAAKA,QACpF,IACI,OAAOxgB,KAAKygB,MAAMF,GAAgB,CAAC5D,EAAGnxB,KAClC,MAAMk1B,EAAwC,kBAAVl1B,GAAsBA,EAAMopB,MAAM,UACtE,OAAI8L,EACOnM,OAAO/oB,EAAMm1B,UAAU,EAAGn1B,EAAMgI,OAAS,IAC7ChI,CAAK,GAEpB,CACA,MAAO6C,GACH,OAAO2R,KAAKygB,MAAMJ,EACtB,GAEJ,SAAS9qB,EAAc/J,GACnB,GAAqB,kBAAVA,EAEP,MADA,EAAIwL,EAAMtG,UAAUlF,GACd,IAAIwE,MAAM,+CAA+CxE,GAEnE,IACI,OAAO40B,EAAU50B,EACrB,CACA,MAAO6C,GAGH,OADAqsB,QAAQhf,MAAM,uBAAwBrN,GAC/B7C,CACX,CACJ,CACA,SAAS2K,EAAkB3K,GACvB,MAAwB,kBAAVA,EAAqBA,EAAQ20B,EAAc30B,IAAU,EACvE,C,qCCnDYS,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACbZ,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQgb,cAAgBA,EACxBhb,EAAQ+a,YAAcA,EACtB/a,EAAQq1B,MAAQA,EAChBr1B,EAAQs1B,YAAcA,EACtB,MAAMC,EAAW70B,EAAQ,MACnB+K,EAAQ/K,EAAQ,OACtB,SAASsa,EAAcwa,EAAQC,EAAW,QACtC,MAAMC,EAAOC,EAAMF,GAEnB,IADA,EAAIhqB,EAAMtG,UAAU,yBACfuwB,EACD,MAAM,IAAIjxB,MAAM,yBAAyBgxB,MAE7C,OAAOC,EAAKE,QAAQrP,OAAO,GAAGmP,EAAKra,SAASma,IAChD,CACA,SAASza,EAAY8a,EAAOJ,EAAW,QACnC,MAAMC,EAAOC,EAAMF,GAEnB,IADA,EAAIhqB,EAAMtG,UAAU,uBACfuwB,EACD,MAAM,IAAIjxB,MAAM,yBAAyBgxB,MAE7C,OAAOC,EAAKI,QAAQ3f,OAAO0f,GAAOT,UAAU,EAChD,CACA,SAASC,EAAMrR,EAAO,GAClB,OAAO,IAAIwE,WAAWxE,EAC1B,CACA,SAASsR,EAAYtR,EAAO,GACxB,OAAO,IAAIwE,WAAWxE,EAC1B,CACA,SAAS+R,EAAY3lB,EAAMiL,EAAQlF,EAAQoQ,GACvC,MAAO,CACHnW,OACAiL,SACAya,QAAS,CACL1lB,OACAiL,SACAlF,UAEJyf,QAAS,CAAErP,UAEnB,CACA,MAAMiP,EAASO,EAAY,OAAQ,KAAKC,IACpC,MAAMJ,EAAU,IAAItP,YAAY,QAChC,MAAO,IAAMsP,EAAQrP,OAAOyP,EAAI,IACjClb,IACC,MAAMgb,EAAU,IAAI5f,YACpB,OAAO4f,EAAQ3f,OAAO2E,EAAIsa,UAAU,GAAG,IAErCa,EAAQF,EAAY,QAAS,KAAKC,IACpC,IAAIl0B,EAAS,IACb,IAAK,IAAIqQ,EAAI,EAAGA,EAAI6jB,EAAI/tB,OAAQkK,IAAK,CACjC,IAAI+jB,EAASF,EAAI7jB,GACb+jB,GAAU5f,OAAOC,aAAa2f,KAC9Bp0B,GAAUwU,OAAOC,aAAa2f,GAEtC,CACA,OAAOp0B,CAAM,IACdgZ,IACCA,EAAMA,EAAIsa,UAAU,GACpB,MAAMY,EAAMV,EAAYxa,EAAI7S,QAC5B,IAAK,IAAIkK,EAAI,EAAGA,EAAI2I,EAAI7S,OAAQkK,IAC5B6jB,EAAI7jB,GAAK2I,EAAIqb,WAAWhkB,GAE5B,OAAO6jB,CAAG,IAERL,EAAQ71B,OAAO6U,OAAO,CAAEyhB,KAAMZ,EAAQ,QAASA,EAAQa,IAAKd,EAASe,MAAMC,OAAQC,OAAQP,EAAOA,MAAOA,EAAOQ,OAAQR,GAASV,EAASe,M,qCCjEhJ,IAAI3wB,EAAI+I,EAAIC,EAAIC,EAAIC,EAAIqT,EAAIC,EADhBzhB,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAEbZ,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ02B,cAAgBA,EACxB12B,EAAQkM,QAAUA,EAClBlM,EAAQ22B,oBAAsBA,EAC9B32B,EAAQ42B,WAAaA,EACrB52B,EAAQ62B,qBAAuBA,EAC/B72B,EAAQutB,eAAiBA,EACzB,MAAM5hB,EAAQjL,EAAQ,OAChB+K,EAAQ/K,EAAQ,OAChBiD,EAAajD,EAAQ,OACrB+tB,EAAY/tB,EAAQ,MAC1B,IAAIo2B,EAAa,CAAC,EAClB,IACI,IAAIC,EAAehM,SAASiM,KAAKzxB,WACjCuxB,EAAaG,EAAmBF,EACpC,CACA,MAAOj0B,GAAK,CACZ,IAAIo0B,EAAc,UAIlB,IAHmB,OAAfJ,QAAsC,IAAfA,OAAwB,EAASA,EAAWK,oBACnED,EAAqD,QAAtCvxB,EAAKmxB,EAAWK,wBAAqC,IAAPxxB,EAAgBA,EAAK,WAElE,YAAhBuxB,EAA2B,CAC3B,MAAM1M,GAAS,EAAI7e,EAAM6mB,aACzB0E,EAAuM,QAAxLtoB,EAAsI,QAAhID,EAAgF,QAA1ED,EAAgB,OAAX8b,QAA8B,IAAXA,OAAoB,EAASA,EAAO4M,gBAA6B,IAAP1oB,OAAgB,EAASA,EAAG2oB,cAA2B,IAAP1oB,OAAgB,EAASA,EAAG0kB,gBAA6B,IAAPzkB,EAAgBA,EAAK,SACxO,CACA,IAAI0oB,EAAgB,MAIpB,IAHmB,OAAfR,QAAsC,IAAfA,OAAwB,EAASA,EAAWS,mBACnED,EAAgBR,EAAWS,kBAE1BD,EAAe,CAChB,MAAM9M,GAAS,EAAI7e,EAAM6mB,aACzB8E,EAAwM,QAAvLnV,EAAsI,QAAhID,EAAgF,QAA1ErT,EAAgB,OAAX2b,QAA8B,IAAXA,OAAoB,EAASA,EAAO4M,gBAA6B,IAAPvoB,OAAgB,EAASA,EAAGwoB,cAA2B,IAAPnV,OAAgB,EAASA,EAAG+M,eAA4B,IAAP9M,EAAgBA,EAAK,KACzO,CAKA,SAASuU,KAAiBc,GACtB,OAAOA,EAAU/T,SAASyT,EAC9B,CAIA,SAAShrB,IACL,IAAIvG,EACJ,MAAuB,YAAhBuxB,MAAkE,QAAjCvxB,GAAK,EAAIgG,EAAM6mB,oBAAiC,IAAP7sB,OAAgB,EAASA,EAAG8xB,qBACjH,CAIA,SAASd,IACL,IAAIhxB,EACJ,MAAM+xB,KAAyD,QAAjC/xB,GAAK,EAAIgG,EAAM6mB,oBAAiC,IAAP7sB,OAAgB,EAASA,EAAGgyB,iBACnG,OAAQzrB,KAAawrB,IAAsC,YAAhBR,CAC/C,CAIA,SAASN,IACLgB,EAAU,iBAAkB,CAAC,EACjC,CAMA,SAASf,EAAqBgB,EAAMC,GAChC,MAAM/zB,EAAM,IAAIg0B,IAAIF,GACpB,GAAqB,UAAjB9zB,EAAI+lB,UAAyC,WAAjB/lB,EAAI+lB,SAAuB,CACvD,GAAIgO,EACA,OAAOA,IAEX,MAAM,IAAIn0B,EAAWqF,gBAAgBrF,EAAWsF,wBAAwBiP,cAAe,kCAAkCnU,IAC7H,CACA,GAAqB,SAAjBA,EAAIinB,SAAqB,CACzB,GAAI8M,EACA,OAAOA,IAEX,MAAM,IAAIn0B,EAAWqF,gBAAgBrF,EAAWsF,wBAAwBiP,cAAe,8BAA8BnU,IACzH,CACA,MAAMi0B,EAAWj0B,EAAIivB,SAAWjvB,EAAIk0B,OAChCC,KAAcC,EAAe,OAC7BP,EAAU,uBAAwB,CAAEQ,UAAWJ,KAG/C,EAAIvJ,EAAUb,eAAe,eAAiBoK,EAEtD,CACA,SAASE,IACL,IACI,MAAM1N,GAAS,EAAI7e,EAAM6mB,aACzB,QAAKhI,IAGmB,MAAjBA,EAAO6N,QAAkB7N,IAAWA,EAAO6N,OACtD,CACA,MAAOv1B,GACH,OAAO,CACX,CACJ,CACA,SAAS80B,EAAUU,EAAWC,GAC1B,IACI,MAAM/N,GAAS,EAAI7e,EAAM6mB,aACzB,IAAKhI,EACD,MAAM,IAAI7mB,EAAWqF,gBAAgBrF,EAAWsF,wBAAwBiP,cAAe,4DAE3F,QAAoChX,IAAhCspB,EAAOiN,sBACP,EAAIhsB,EAAMtG,UAAU,YAAamzB,EAAWC,GAC5C/N,EAAOiN,qBAAqBG,UAAUU,EAAW7jB,KAAKC,UAAU6jB,SAE/D,GAAI/N,EAAOgO,UAAY,WAAYhO,EAAOgO,UAC3C,EAAI/sB,EAAMtG,UAAU,YAAamzB,EAAWC,GAC5C/N,EAAOgO,SAASC,OAAOhkB,KAAKC,UAAU,CAAE4jB,UAAWA,EAAWC,UAAWA,SAExE,KAAIL,IAOL,MAAM,IAAIv0B,EAAWqF,gBAAgBrF,EAAWsF,wBAAwBiP,cAAe,2BAPtE,CACjB,MAAMwgB,EAAgB,IAChBvuB,EAAUsK,KAAKC,UAAU,CAAE4jB,UAAWA,EAAWC,UAAWA,KAClE,EAAI9sB,EAAMtG,UAAU,YAAamzB,EAAWC,GAC5C/N,EAAO6N,OAAOM,YAAYxuB,EAASuuB,EACvC,CAGA,CACJ,CACA,MAAO51B,IACH,EAAI2I,EAAMvE,UAAU,sCAAsCpE,IAC9D,CACJ,CACA,SAASm0B,EAAmBF,GACxBA,EAAeA,EAAalmB,QAAQ,KAAM,IAC1C,IAAI5G,EAAS,CAAC,EACd,IAAK8sB,EAAa9uB,OACd,OAAOgC,EAEX,GAAI8sB,EAAa6B,QAAQ,KAAO,GAAK7B,EAAa6B,QAAQ,KAAO,EAE7D,OADA3uB,EAAO4uB,MAAQC,EAAc/B,GACtB9sB,EAEX,IAAI8uB,EAAShC,EAAa6B,QAAQ,KAClC,GAAIG,GAAU,EAAG,CACb,IAAIC,EAAYjC,EAAakC,OAAO,EAAGF,GACvC9uB,EAAO4uB,MAAQC,EAAcE,GAC7BjC,EAAeA,EAAakC,OAAOF,EAAS,EAChD,CACA,IAAIG,EAAeC,EAAoBpC,GACvC,IAAK,IAAI/1B,KAAKk4B,EACVjvB,EAAOjJ,GAAKk4B,EAAal4B,GAE7B,OAAOiJ,CACX,CACA,SAAS6uB,EAAcM,GACnB,IAEI,OADAA,EAAaA,EAAWvoB,QAAQ,MAAO,OAChCwoB,mBAAmBD,EAC9B,CACA,MAAOt2B,GACH,OAAOs2B,CACX,CACJ,CACA,SAASD,EAAoBG,GACzB,IAAIrvB,EAAS,CAAC,EACd,IAAKqvB,EAAYrxB,OACb,OAAOgC,EAEX,IACIkI,EAAG3H,EAAO+uB,EAAWC,EADrBC,EAAoBH,EAAY/d,MAAM,KAE1C,IAAKpJ,EAAI,EAAGA,EAAIsnB,EAAkBxxB,OAAQkK,IACtC3H,EAAQivB,EAAkBtnB,GAAGoJ,MAAM,KACnCge,EAAYT,EAActuB,EAAM,IAChCgvB,EAAyB,MAAZhvB,EAAM,GAAa,KAAOsuB,EAActuB,EAAM,IAC3DP,EAAOsvB,GAAaC,EAExB,OAAOvvB,CACX,CACA,SAASsjB,EAAemM,EAAIC,GACN,kBAAPD,IACPA,EAAK,IACS,kBAAPC,IACPA,EAAK,IACT,IAEIC,EAAGznB,EAAG0nB,EAAIC,EAFVC,EAASL,EAAG7oB,QAAQ,aAAc,IAAI0K,MAAM,KAC5Cye,EAASL,EAAG9oB,QAAQ,aAAc,IAAI0K,MAAM,KAGhD,IADAqe,EAAIvd,KAAK4d,IAAIF,EAAO9xB,OAAQ+xB,EAAO/xB,QAC9BkK,EAAI,EAAGA,EAAIynB,EAAGznB,IAGf,GAFA0nB,EAAKK,SAASH,EAAO5nB,KAAO,EAC5B2nB,EAAKI,SAASF,EAAO7nB,KAAO,EACxB0nB,IAAOC,EAEX,OAAID,EAAKC,EACE,GACH,EAEZ,OAAO,CACX,CACA,SAAS3B,EAAegC,GACpB,OAAO5M,EAAe+J,EAAe6C,IAAQ,CACjD,C,qCCrMA,IAAIx0B,EAAI+I,EAAIC,EAAIC,EADJlO,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAEbZ,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQo6B,mBAAqBA,EAC7Bp6B,EAAQq6B,aAAeA,EACvBr6B,EAAQ+W,iBAAmBA,EAC3B/W,EAAQsuB,gBAAkBA,EAC1BtuB,EAAQiY,qBAAuBA,EAC/BjY,EAAQ4W,4BAA8BA,EACtC5W,EAAQwyB,UAAYA,EACpBxyB,EAAQquB,cAAgBA,EACxBruB,EAAQouB,4BAA8BA,EACtCpuB,EAAQyX,oBAAsBA,EAC9BzX,EAAQiuB,0BAA4BA,EACpCjuB,EAAQmuB,qBAAuBA,EAC/BnuB,EAAQguB,0BAA4BA,EACpChuB,EAAQkuB,wBAA0BA,EAClCluB,EAAQ+X,iCAAmCA,EAC3C/X,EAAQkM,QAAUA,EAClBlM,EAAQ22B,oBAAsBA,EAC9B32B,EAAQ2X,WAAaA,EACrB,MAAMhU,EAAajD,EAAQ,OACrB+K,EAAQ/K,EAAQ,OAChB0C,EAAc1C,EAAQ,MACtB6C,EAAU7C,EAAQ,OAClBguB,EAAYhuB,EAAQ,OAC1B,SAAS05B,EAAmBr2B,GACxB,MAAsB,MAAlBA,EAAI8X,OAAO,GACJ9X,EAAI8X,MAAM,GAAI,GAElB9X,CACX,CACA,SAASs2B,EAAat2B,EAAKgvB,GACvB,OAAOqH,EAAmBr2B,GAAO,IAAMgvB,CAC3C,CACA,SAAShc,EAAiBP,EAAa8jB,GAA2B,GAC9DnL,QAAQzrB,IAAI,gCAAiC8S,EAAa,8BAA+B8jB,GACzF,MAAMC,EAAsB,GAAG52B,EAAW8S,0BAC1C,IAAK6jB,GAA4B9jB,EAAYtF,WAAWqpB,GAAsB,CAC1E,MAAMC,EAAWhkB,EAAY3F,QAAQ0pB,EAAqB,KAC1D,EAAI9uB,EAAMtG,UAAU,6BAA8Bq1B,GAClD,MAAMC,EAAoBC,mBAAmBF,GAG7C,OAFA,EAAI/uB,EAAMtG,UAAU,0CAA2CxB,EAAW0mB,wBAC1E,EAAI5e,EAAMtG,UAAU,uEAAwE,GAAG/B,EAAYynB,4BAA4B4P,KAChI,GAAGr3B,EAAYynB,4BAA4B4P,GACtD,CACK,GAAKH,GAA4B9jB,GAAe7S,EAAW8S,iBAI3D,CACD,MAAMgkB,EAAoBC,mBAAmBlkB,GAE7C,OADA2Y,QAAQzrB,IAAI,0CAA2CC,EAAW0mB,uBAC3D,GAAG1mB,EAAW0mB,kCAAkCoQ,GAC3D,CANI,OADA,EAAIhvB,EAAMtG,UAAU,uCAAwC/B,EAAYynB,oBACjEznB,EAAYynB,kBAO3B,CACA,SAASyD,EAAgB9X,GACrB,IAAI7Q,EACJ,MAAMg1B,EAAU5jB,EAAiBP,GAC3BokB,KAAuC,QAAtBj1B,EAAK6sB,WAAgC,IAAP7sB,OAAgB,EAASA,EAAG8xB,sBAEjF,GADAtI,QAAQzrB,IAAI,2BAA4Bi3B,IACnC,EAAIp3B,EAAQoT,SAUbsB,EAAqB0iB,OAVE,CACvB,IAAIE,EAAY,KACZD,EACAC,EAAYrQ,OAAOnE,KAAK7P,EAAa,UAGrCgU,OAAOO,SAAS+P,KAAOtkB,CAE/B,CAIJ,CACA,SAASyB,EAAqB0iB,IACrB,EAAIp3B,EAAQoT,SAQTzK,IACAse,OAAOnE,KAAKsU,EAAS,WAGrBxL,QAAQzrB,IAAI,uBAAwB2B,KAAKC,QAC1B,OAAXklB,aAA8B,IAAXA,YAAoB,EAASA,OAAO4E,aACvD5E,OAAOnE,KAAKsU,EAAS,UAGrBnQ,OAAOnE,KAAKsU,EAAS,SAEzBxL,QAAQzrB,IAAI,sBAAuB2B,KAAKC,QAjB5CklB,OAAOnE,KAAKsU,EAAS,SAoB7B,CACA,SAAS/jB,EAA4BJ,GACjC,IAAI7Q,EACJ,MAAMg1B,EAAU5jB,EAAiBP,GAC3BokB,KAAuC,QAAtBj1B,EAAK6sB,WAAgC,IAAP7sB,OAAgB,EAASA,EAAG8xB,sBACjFtI,QAAQzrB,IAAI,uCAAwCi3B,GACpD,IAAII,GAAiB,EACrB,MAAMC,EAAkB,IACJr3B,EAAW0mB,sBAE/B,GADA8E,QAAQzrB,IAAI,qDAAsDC,EAAW0mB,wBACxE,EAAI9mB,EAAQoT,SA6BTikB,EACApQ,OAAOnE,KAAKsU,EAAS,WAGrBxL,QAAQzrB,IAAI,uBAAwB2B,KAAKC,QAC1B,OAAXklB,aAA8B,IAAXA,YAAoB,EAASA,OAAO4E,aACvD5E,OAAOnE,KAAKsU,EAAS,UAGrBnQ,OAAOnE,KAAKsU,EAAS,SAEzBxL,QAAQzrB,IAAI,sBAAuB2B,KAAKC,YAxCrB,CACvB,IAAIu1B,EAAY,KAChB,IAAII,EAAyBA,KACpBF,IACGF,EACAA,EAAUxU,KAAKsU,EAAS,SAGxBnQ,OAAOnE,KAAKsU,EAAS,UAE7B,EAEAC,EACAC,EAAYrQ,OAAOnE,KAAK7P,EAAa,UAGrCgU,OAAOO,SAAS+P,KAAOtkB,EAE3BzP,WAAWk0B,EAAwBD,GACnCxQ,OAAOnhB,iBAAiB,QAAQ,KAC5B0xB,GAAiB,CAAI,GACtB,CAAEjyB,MAAM,IACXH,SAASU,iBAAiB,oBAAoB,KACT,WAA7BV,SAASC,kBACTmyB,GAAiB,EACrB,GAER,CAgBJ,CACA,SAASvI,IACL,GAAsB,qBAAXhI,OACP,OAAOA,MAGf,CACA,SAAS6D,EAAcwJ,GACnB,IAAKA,EACD,OAAO,EAEX,MAAM9zB,EAAM,IAAIg0B,IAAIF,GACpB,MAAwB,QAAjB9zB,EAAI+lB,UAAuC,SAAjB/lB,EAAIinB,QACzC,CACA,SAASoD,EAA4B8M,GACjC,IAAIC,EAAoBD,EAOxB,OANAC,EAAoBA,EAAkBtqB,QAAQ,MAAO,OACrDsqB,EAAoBA,EAAkBtqB,QAAQ,KAAM,OACpDsqB,EAAoBA,EAAkBtqB,QAAQ,KAAM,OACpDsqB,EAAoBA,EAAkBtqB,QAAQ,KAAM,KACpDsqB,EAAoBA,EAAkBtqB,QAAQ,KAAM,MACpDsqB,EAAoBA,EAAkBtqB,QAAQ,KAAM,MAC7CsqB,CACX,CACA,SAAS1jB,EAAoBhC,GACzB,MAAMO,EAAoBvB,KAAKC,UAAUe,IACzC,EAAIhK,EAAMtG,UAAU,6CAA8C6Q,GAClE,MAAMC,GAAY,IAAIC,aAAcC,OAAOH,GACrCI,EAAgBC,KAAKC,OAAOC,gBAAgBN,IAKlD,OADA,EAAIxK,EAAMtG,UAAU,yCAA0CiR,GACvDA,CACX,CACA,SAAS6X,EAA0BxY,GAC/B,MAAMO,EAAoBvB,KAAKC,UAAU,CAAExG,MAAOuH,EAAevH,MAAOuB,SAAUgG,EAAehG,YACjG,EAAIhE,EAAMtG,UAAU,4CAA6C6Q,GACjE,MAAMC,GAAY,IAAIC,aAAcC,OAAOH,GACrCI,EAAgBC,KAAKC,OAAOC,gBAAgBN,IAClD,OAAOG,CACX,CACA,SAAS+X,EAAqBiN,GAC1B,MAAO,GAAGz3B,EAAW8S,0BAA0B2kB,GACnD,CACA,SAASpN,EAA0B9f,EAAOuB,GACtC,MAAO,GAAGrM,EAAYynB,4BAA4B3c,KAAQ,EAAI3K,EAAQue,mBAAmBrS,IAC7F,CAEA,SAASye,EAAwBkN,EAAcC,GAC3C,IAAIxY,EAAgB,CAAEyY,WAAY,GAAI9jB,SAAU,GAAI+jB,YAAa,IAC7DH,IACAvY,EAAcyY,WAAaF,GAE3BC,IACAxY,EAAcrL,SAAW6jB,GAE7B,IAAIG,EAAmB/mB,KAAKC,UAAUmO,GACtC,MAAM5M,GAAY,IAAIC,aAAcC,OAAOqlB,GACrCplB,EAAgBC,KAAKC,OAAOC,gBAAgBN,IAC5CwlB,GAAgB,EAAIl4B,EAAQuqB,wBAAwB1X,GAE1D,OADA,EAAI3K,EAAMtG,UAAU,mBAAoB0d,EAAezM,GACnDglB,GAAgBC,EACXnvB,KAUG,EAAI9I,EAAYsnB,mBACT,IAAG,EAAItnB,EAAYsnB,+BAA+B+Q,IAGlD,gBAAgBr4B,EAAYknB,+BAA+BmR,KAZlE,EAAIr4B,EAAYmnB,iBACT,IAAG,EAAInnB,EAAYmnB,uCAAuCkR,IAG1D,uBAAuBr4B,EAAYknB,wBAAwBlnB,EAAYwnB,4BAA4B6Q,IAYjHvvB,KAUG,EAAI9I,EAAYsnB,mBACT,IAAG,EAAItnB,EAAYsnB,qBAGnB,gBAAgBtnB,EAAYknB,sBAZnC,EAAIlnB,EAAYmnB,iBACT,IAAG,EAAInnB,EAAYmnB,mBAGnB,uBAAuBnnB,EAAYknB,wBAAwBlnB,EAAYwnB,iBAW1F,CAEA,SAAS7S,EAAiC2jB,GACtC,IAAI/1B,EAAI+I,EAAIC,EAAIC,EAAIC,GACpB,EAAIpD,EAAMtG,UAAU,mBAAoBu2B,EAAa,eAAgBxvB,KAChEA,KASkF,QAA9EwC,EAA4B,QAAtB/I,EAAK6sB,WAAgC,IAAP7sB,OAAgB,EAASA,EAAGyxB,gBAA6B,IAAP1oB,OAAgB,EAASA,EAAG2oB,QACkB,QAApIxoB,EAAoF,QAA9ED,EAA4B,QAAtBD,EAAK6jB,WAAgC,IAAP7jB,OAAgB,EAASA,EAAGyoB,gBAA6B,IAAPxoB,OAAgB,EAASA,EAAGyoB,cAA2B,IAAPxoB,GAAyBA,EAAG8sB,iBAAiBD,IAG1L,EAAIhN,EAAUmI,sBAAsB6E,IAZpC,EAAIt4B,EAAYmnB,iBAChBC,OAAOnE,KAAKqV,EAAa,UAGzBlR,OAAOnE,KAAKqV,EAAa,QAWrC,CAIA,SAAS5C,EAAcM,GACnB,IAEI,OADAA,EAAaA,EAAWvoB,QAAQ,MAAO,OAChCwoB,mBAAmBD,EAC9B,CACA,MAAOt2B,GACH,OAAOs2B,CACX,CACJ,CACA,SAASD,EAAoBG,GACzB,IAAIrvB,EAAS,CAAC,EACd,IAAKqvB,EAAYrxB,OACb,OAAOgC,EAEX,IACIkI,EAAG3H,EAAO+uB,EAAWC,EADrBC,EAAoBH,EAAY/d,MAAM,KAE1C,IAAKpJ,EAAI,EAAGA,EAAIsnB,EAAkBxxB,OAAQkK,IACtC3H,EAAQivB,EAAkBtnB,GAAGoJ,MAAM,KACnCge,EAAYT,EAActuB,EAAM,IAChCgvB,EAAyB,MAAZhvB,EAAM,GAAa,KAAOsuB,EAActuB,EAAM,IAC3DP,EAAOsvB,GAAaC,EAExB,OAAOvvB,CACX,CACA,SAASgtB,EAAmBF,GACxBA,EAAeA,EAAalmB,QAAQ,KAAM,IAC1C,IAAI5G,EAAS,CAAC,EACd,IAAK8sB,EAAa9uB,OACd,OAAOgC,EAEX,GAAI8sB,EAAa6B,QAAQ,KAAO,GAAK7B,EAAa6B,QAAQ,KAAO,EAE7D,OADA3uB,EAAO4uB,MAAQC,EAAc/B,GACtB9sB,EAEX,IAAI8uB,EAAShC,EAAa6B,QAAQ,KAClC,GAAIG,GAAU,EAAG,CACb,IAAIC,EAAYjC,EAAakC,OAAO,EAAGF,GACvC9uB,EAAO4uB,MAAQC,EAAcE,GAC7BjC,EAAeA,EAAakC,OAAOF,EAAS,EAChD,CACA,IAAIG,EAAeC,EAAoBpC,GACvC,IAAK,IAAI/1B,KAAKk4B,EACVjvB,EAAOjJ,GAAKk4B,EAAal4B,GAE7B,OAAOiJ,CACX,CACA,IAAI6sB,EAAa,CAAC,EAClB,IACI,IAAIC,EAAehM,SAASiM,KAAKzxB,WACjCuxB,EAAaG,EAAmBF,EACpC,CACA,MAAOj0B,GAAK,CACZ,IAAIo0B,EAAc,UAIlB,IAHmB,OAAfJ,QAAsC,IAAfA,OAAwB,EAASA,EAAWK,oBACnED,EAAqD,QAAtCvxB,EAAKmxB,EAAWK,wBAAqC,IAAPxxB,EAAgBA,EAAK,WAElE,YAAhBuxB,EAA2B,CAC3B,MAAM1M,EAASgI,IACf0E,EAAuM,QAAxLtoB,EAAsI,QAAhID,EAAgF,QAA1ED,EAAgB,OAAX8b,QAA8B,IAAXA,OAAoB,EAASA,EAAO4M,gBAA6B,IAAP1oB,OAAgB,EAASA,EAAG2oB,cAA2B,IAAP1oB,OAAgB,EAASA,EAAG0kB,gBAA6B,IAAPzkB,EAAgBA,EAAK,SACxO,CACA,SAAS1C,IACL,IAAIvG,EACJ,MAAuB,YAAhBuxB,MAAuD,QAAtBvxB,EAAK6sB,WAAgC,IAAP7sB,OAAgB,EAASA,EAAG8xB,qBACtG,CAIA,SAASd,IACL,IAAIhxB,EACJ,MAAM+xB,KAA8C,QAAtB/xB,EAAK6sB,WAAgC,IAAP7sB,OAAgB,EAASA,EAAGgyB,iBACxF,OAAQzrB,KAAawrB,IAAsC,YAAhBR,CAC/C,CACA,SAASvf,EAAWlC,EAAgBmC,GAAU,EAAOC,GAEjD,IADA,EAAIpM,EAAMtG,UAAU,8CAA8CsP,KAAKC,UAAUe,iBAA8BmC,sBAA4BC,KACvID,EAAS,CACT,IAAIgkB,EAAiB3N,EAA0BxY,GAC/C,OAAOyY,EAAwB0N,EAAiC,OAAjB/jB,QAA0C,IAAjBA,EAA0BA,EAAe,OACrH,CAEI,IAAI,EAAItU,EAAQyU,gBACZ,OAAOgW,EAA0BvY,EAAevH,MAAOuH,EAAehG,UAErE,CACD,MAAM2G,EAAgBqB,EAAoBhC,GAC1C,MAAO,GAAG9R,EAAW8S,0BAA0BL,GACnD,CAER,C,qCCxWY1V,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACb,IAAIoY,EAAmBlY,MAAQA,KAAKkY,iBAAoB,SAAUjX,GAC9D,OAAQA,GAAOA,EAAIR,WAAcQ,EAAM,CAAE,QAAWA,EACxD,EACA/B,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ+tB,cAAgB/tB,EAAQ67B,cAAgB77B,EAAQwtB,UAAYxtB,EAAQse,oBAAsBte,EAAQ87B,gBAAkB97B,EAAQwH,oBAAsBxH,EAAQ6D,oCAAiC,EACnM7D,EAAQ8N,eAAiBA,EACzB9N,EAAQ0N,YAAcA,EACtB1N,EAAQ2lB,kBAAoBA,EAC5B3lB,EAAQmmB,mBAAqBA,EAC7BnmB,EAAQ8lB,aAAeA,EACvB9lB,EAAQ0hB,aAAeA,EACvB1hB,EAAQwE,WAAaA,EACrBxE,EAAQ+7B,QAAUA,EAClB/7B,EAAQg8B,sBAAwBA,EAChCh8B,EAAQsP,cAAgBA,EACxBtP,EAAQ2W,MAAQA,EAChB3W,EAAQ8hB,kBAAoBA,EAC5B9hB,EAAQ8tB,uBAAyBA,EACjC9tB,EAAQgY,aAAeA,EACvB,MAAM0C,EAAc5B,EAAgBpY,EAAQ,QACtCu7B,EAAmBnjB,EAAgBpY,EAAQ,QAC3Cw7B,EAAcx7B,EAAQ,MACtBy7B,EAAWz7B,EAAQ,OACnB8K,EAAa9K,EAAQ,OACrB+K,EAAQ/K,EAAQ,OAChBia,EAAgBja,EAAQ,OACxBwd,EAAcpF,EAAgBpY,EAAQ,QACtC07B,EAAS,SACf,SAAStuB,EAAeuuB,GACpB,GAAIA,EAAUp0B,OAAS,IAAM,EACzB,MAAM,IAAIxD,MAAM,kBAAkB43B,mBAEtC,MAAMv6B,EAAS,IAAI0mB,WAAW6T,EAAUp0B,OAAS,GACjD,IAAK,IAAIkK,EAAI,EAAGA,EAAIkqB,EAAUp0B,OAAQkK,GAAK,EACvCrQ,EAAOqQ,EAAI,GAAK+nB,SAASmC,EAAUxgB,MAAM1J,EAAGA,EAAI,GAAI,IAExD,OAAOrQ,CACX,CACA,SAAS4L,EAAY4uB,GACjB,IAAID,EAAY,GAIhB,OAHAC,EAAUrnB,SAAQsnB,IACdF,IAAc,KAAc,IAAPE,GAAah3B,SAAS,KAAKsW,OAAO,EAAE,IAEtDwgB,CACX,CACA,SAAS1W,EAAkB6W,EAASC,GAChC,MAAMC,EAAc,IAAIlU,WAAWgU,EAAQv0B,OAASw0B,EAAQx0B,QAG5D,OAFAy0B,EAAYroB,IAAImoB,GAChBE,EAAYroB,IAAIooB,EAASD,EAAQv0B,QAC1By0B,CACX,CACA,SAASvW,EAAmB0P,EAAO/B,GAC/B,GAAIA,GAAS+B,EAAM5tB,OACf,MAAM,IAAIxD,MAAM,0BAEpB,MAAMk4B,EAAY9G,EAAMha,MAAM,EAAGiY,GAC3B8I,EAAY/G,EAAMha,MAAMiY,GAC9B,MAAO,CAAC6I,EAAWC,EACvB,CACA,SAASC,EAAiB58B,EAAO68B,GAC7B,MAAMrhB,EAAUwgB,EAAiBrhB,QAAQmiB,aAAa98B,GACtD,OAAK68B,EAGEpC,mBAAmBjf,GAFfA,CAGf,CACA,SAASuhB,EAAmB/8B,EAAO68B,GAI/B,OAHIA,IACA78B,EAAQo5B,mBAAmBp5B,IAExBg8B,EAAiBrhB,QAAQqiB,aAAah9B,EACjD,CACA,SAAS6lB,EAAa7lB,EAAO68B,GACzB,IAAII,EAUJ,OATIj9B,aAAiBuoB,WACjB0U,EAAaj9B,GAGQ,kBAAVA,IACPA,GAAQ,EAAIuL,EAAWZ,mBAAmB3K,IAE9Ci9B,EAAajB,EAAiBrhB,QAAQuiB,WAAWl9B,IAE9C48B,EAAiBK,EAAYJ,EACxC,CACA,SAASpb,EAAazhB,EAAO68B,GACzB,MAAMM,EAAoBJ,EAAmB/8B,EAAO68B,GACpD,MAAO,CACHv3B,QAAAA,GACI,OAAO02B,EAAiBrhB,QAAQyiB,WAAWD,EAC/C,EACAra,QAAAA,GACI,IACI,OAAO,EAAIvX,EAAWxB,eAAeiyB,EAAiBrhB,QAAQyiB,WAAWD,GAC7E,CACA,MAAOt6B,GACH,OAAO,IACX,CACJ,EACAmjB,YAAAA,GACI,OAAOmX,CACX,EAER,CACA,SAAS54B,EAAWT,GAChB,MAAMslB,EAAQtlB,EAAIslB,MAAM,IAAIM,OAAO,QAAS,OAC5C,IAAKN,IAAUA,EAAMphB,OACjB,OAAO,EAEX,IAAIq1B,EAASjU,EAAM,GACnB,YAAenoB,IAAXo8B,GAGG,IAAI3T,OAAO,UAAUI,KAAKuT,EACrC,CACA,MAAMz5B,EAAiCA,IACV,qBAAd+C,UACAA,UAEgB,qBAAX22B,EAAAA,GAAsD,qBAArBA,EAAAA,EAAO32B,UAC7C22B,EAAAA,EAAO32B,UAES,qBAAX4jB,QAAsD,qBAArBA,OAAO5jB,UAC7C4jB,OAAO5jB,UAEO,qBAAT42B,MAAkD,qBAAnBA,KAAK52B,UACzC42B,KAAK52B,UAETA,UAIX5G,EAAQ6D,+BAAiCA,EACzC,MAAM2D,EAAsBA,IAA2B,qBAAdZ,WAClB,qBAAX22B,EAAAA,GAAsD,qBAArBA,EAAAA,EAAO32B,WAC7B,qBAAX4jB,QAAsD,qBAArBA,OAAO5jB,WAC/B,qBAAT42B,MAAkD,qBAAnBA,KAAK52B,UAChD5G,EAAQwH,oBAAsBA,EAC9B,MAAMs0B,EAAkBA,IAAyB,qBAAXyB,EAAAA,GAA0D,qBAAxBA,EAAAA,EAAOlf,cACxD,qBAAXmM,QAAyD,qBAAxBA,OAAOnM,aACpDre,EAAQ87B,gBAAkBA,EAC1B,MAAMxd,EAAsBA,IACF,qBAAXif,EAAAA,GAAyD,qBAAxBA,EAAAA,EAAOlf,aACxCkf,EAAAA,EAAOlf,aAES,qBAAXmM,QAAyD,qBAAxBA,OAAOnM,aAC7CmM,OAAOnM,aAEXA,aAEXre,EAAQse,oBAAsBA,EAC9B,MAAMkP,EAAYA,IAAwB,qBAAXhD,OAG/B,SAASuR,EAAQxpB,EAAK4D,EAASimB,IAC3B,EAAI3wB,EAAMtG,UAAU,mBAAmBoN,KACvC,MAAMzQ,GAAS,EAAIq6B,EAASnF,OAAM,EAAIrc,EAAcK,eAAezI,EAAK4D,IACxE,OAAO,EAAI+lB,EAAY32B,UAAUzD,EAAQqU,EAC7C,CACA,SAAS6lB,IACL,OAAOthB,EAAYE,QAAQiF,YAAY7f,EAAQ67B,cACnD,CACA,SAASvsB,IACL,IAAImuB,EAAgBzB,IAEpB,OADA,EAAIvwB,EAAMtG,UAAU,yBAAyBs4B,KACtC1B,GAAQ,EAAIG,EAAY32B,UAAUk4B,EAAerB,GAC5D,CAdAp8B,EAAQwtB,UAAYA,EACpBxtB,EAAQ67B,cAAgB,GAcxB,MAAM9N,EAAiB2P,GAAQ59B,OAAO69B,eAAeD,KAAS59B,OAAOiC,WAAajC,OAAOmkB,KAAKyZ,GAAKz1B,OAEnG,SAAS0O,IACL,MAAMyc,EAAYF,UAAUE,UACtBwK,EAAiB1K,UAAU0K,gBAAkB,EAE7CC,EAAc,mBAAmB9T,KAAKqJ,KAAe5I,OAAOsT,SAE5DC,EAAY3K,EAAU3P,SAAS,QAAUma,EAAiB,EAGhE,OAFA,EAAInyB,EAAMtG,UAAU,+BAA+B04B,qBAA+BE,KAE3EF,GAAeE,CAC1B,CACA,SAASjc,EAAkBtT,GAEvB,MAAMwoB,EAAO9Y,EAAYtD,QAAQojB,IAAIxvB,GAAOjJ,WAE5C,OAAOyxB,EAAKnb,OAAO,EACvB,CACA,SAASiS,EAAuBmQ,GAC5B,OAAOA,EACFptB,QAAQ,KAAM,IACdA,QAAQ,MAAO,KACfA,QAAQ,MAAO,IACxB,CACA,SAASmH,IACL,QAASwS,OAAOxS,YACpB,CA1BAhY,EAAQ+tB,cAAgBA,C,oCCxKxB,IAAIjV,EAAmBlY,MAAQA,KAAKkY,iBAAoB,SAAUjX,GAC9D,OAAQA,GAAOA,EAAIR,WAAcQ,EAAM,CAAE,QAAWA,EACxD,EACA/B,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ6tB,SAAWA,EACnB7tB,EAAQ4tB,cAAgBA,EACxB5tB,EAAQ2tB,yBAA2BA,EACnC3tB,EAAQ0tB,kBAAoBA,EAC5B1tB,EAAQk+B,aAAeA,EACvBl+B,EAAQytB,KAAOA,EACfztB,EAAQwtB,UAAYA,EACpB,MAAM2Q,EAAiBrlB,EAAgBpY,EAAQ,QACzC+K,EAAQ/K,EAAQ,OACtB,SAASmtB,EAASiN,EAAMsD,EAAS,UAC7B,EAAI3yB,EAAMtG,UAAU,WAAY21B,EAAMsD,GACtC5T,OAAOnE,KAAKyU,EAAMsD,EAAQ,sBAC9B,CACA,SAASxQ,EAAckN,GACnBjN,EAASiN,EAAM,SACnB,CACA,SAASnN,EAAyBmN,EAAMhD,GACpC,MAAMuG,EAAaA,KACX7Q,EAAU,WAAcC,EAAK,YAAcD,EAAU,YAIzDsK,GAAU,EAERwG,EAAkBv3B,YAAW,IAAMs3B,KAAc,KACvD7T,OAAOnhB,iBAAiB,QAAQ,IAAM5C,aAAa63B,IAAkB,CAAEx1B,MAAM,IAC7E+kB,EAASiN,EAAM,QACnB,CACA,SAASpN,IACL,IAAI6Q,GAAQ,EAQZ,OAPA,SAAW3E,IACH,2TAA2T7P,KAAK6P,IAChU,0kDAA0kD7P,KAAK6P,EAAE/d,MAAM,EAAG,OAC1lD0iB,GAAQ,EACf,CAJD,CAIGrL,UAAUE,WACTF,UAAUsL,QACVhU,OAAOiU,OACJF,CACX,CACA,SAASL,IACL,IAAIv4B,EAAI+I,EAAIC,EACZ,MAAMilB,GAAU,IAAIuK,EAAevjB,SAAU8jB,YACvCC,EAAoC,QAA1Bh5B,EAAKiuB,EAAQgL,GAAGxuB,YAAyB,IAAPzK,OAAgB,EAASA,EAAGk5B,cACxEC,EAA8C,QAA/BpwB,EAAKklB,EAAQmL,OAAOC,aAA0B,IAAPtwB,OAAgB,EAASA,EAAGmwB,cACxF,IAAID,EACJ,QAAQ,GACJ,IAAqB,SAAhBE,EACDF,EAAK,OACL,MACJ,IAAgB,QAAXD,EACDC,EAAK,MACL,MACJ,IAAgB,YAAXD,EACDC,EAAK,UACL,MACJ,IAAgB,WAAXD,EACDC,EAAK,QACL,MACJ,IAAgB,UAAXD,EACDC,EAAK,QACL,MACJ,KAAgB,OAAXD,QAA8B,IAAXA,OAAoB,EAASA,EAAOlb,SAAS,WACjEmb,EAAK,UACL,MAER,MAAMK,EAA8C,QAA/BtwB,EAAKilB,EAAQsL,QAAQ9uB,YAAyB,IAAPzB,OAAgB,EAASA,EAAGkwB,cACxF,IAAIK,EACJ,QAAQ,GACJ,IAAqB,WAAhBD,EACDC,EAAU,SACV,MACJ,IAAqB,YAAhBD,EACDC,EAAU,UACV,MACJ,KAAqB,OAAhBD,QAAwC,IAAhBA,OAAyB,EAASA,EAAYxb,SAAS,UAChFyb,EAAU,SACV,MACJ,KAAqB,OAAhBD,QAAwC,IAAhBA,OAAyB,EAASA,EAAYxb,SAAS,SAChFyb,EAAU,QACV,MAER,MAAO,CACHN,KACAM,UAER,CACA,SAASzR,KAAQmR,GACb,OAAOA,EAAGnb,SAASya,IAAeU,GACtC,CACA,SAASpR,KAAa0R,GAClB,OAAOA,EAAQzb,SAASya,IAAegB,QAC3C,C,qCChGYx+B,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACb,IAAIwB,EAAatB,MAAQA,KAAKsB,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMtC,GAAS,OAAOA,aAAiBoC,EAAIpC,EAAQ,IAAIoC,GAAE,SAAUG,GAAWA,EAAQvC,EAAQ,GAAI,CAC3G,OAAO,IAAKoC,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU1C,GAAS,IAAM2C,EAAKN,EAAUO,KAAK5C,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAS9C,GAAS,IAAM2C,EAAKN,EAAU,SAASrC,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKd,GAAUA,EAAOkB,KAAOR,EAAQV,EAAO7B,OAASsC,EAAMT,EAAO7B,OAAOgD,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACA/C,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQm/B,oBAAiB,EACzB,MAAMC,EAAK1+B,EAAQ,MACnB,MAAMy+B,EACFr7B,WAAAA,CAAYu7B,GACRz+B,KAAK0+B,KAAO,CACR,cACA,mBAEJ1+B,KAAKy+B,SAAWA,CACpB,CACAE,oBAAAA,CAAqBC,GACjB,IAAI75B,EAAI+I,EACR,IAAI+wB,EAAK7+B,KAAK8+B,aAAaF,GAC3B,QAAUt+B,GAANu+B,EACA,MAAM,IAAIL,EAAGp2B,gBAAgBo2B,EAAGn2B,wBAAwBiP,cAAe,mBAE3E,IAAIsF,EAA6G,QAAjG9O,EAAsC,QAAhC/I,EAAK/E,KAAKy+B,SAASxoB,eAA4B,IAAPlR,OAAgB,EAASA,EAAGsR,WAAW,cAA2B,IAAPvI,OAAgB,EAASA,EAAG8O,SAASsV,QAAO,SAAU6M,GAC3K,OAAOA,EAAQzuB,WAAWsuB,EAC9B,IACA,QAAgBt+B,GAAZsc,GAAyBA,EAASvV,OAAS,EAC3C,MAAM,IAAIm3B,EAAGp2B,gBAAgBo2B,EAAGn2B,wBAAwBiP,cAAe,wBAE3E,IAAIynB,EAAUniB,EAAS,GACvB,MAAMJ,EAAUuiB,EAAQpkB,MAAM,KAAK,GACnC,OAAO6B,CACX,CACAwiB,UAAAA,CAAWJ,GACP,IAAI75B,EAAI+I,EAAIC,EACZ,IAAI8wB,EAAK7+B,KAAK8+B,aAAaF,GAC3B,QAAUt+B,GAANu+B,EACA,MAAM,IAAIL,EAAGp2B,gBAAgBo2B,EAAGn2B,wBAAwBiP,cAAe,mBAE3E,IAAI0F,EAA+J,QAAtJjP,EAAuG,QAAjGD,EAAsC,QAAhC/I,EAAK/E,KAAKy+B,SAASxoB,eAA4B,IAAPlR,OAAgB,EAASA,EAAGsR,WAAW,cAA2B,IAAPvI,OAAgB,EAASA,EAAGkP,aAA0B,IAAPjP,OAAgB,EAASA,EAAG6wB,GACnM/xB,EAAY,GAIhB,YAHavM,GAAT0c,IACAnQ,EAAYmQ,EAAM,wBAEf,CACHR,QAASxc,KAAK2+B,qBAAqBC,GACnC/xB,UAAWA,EAEnB,CAQAoyB,WAAAA,CAAYL,EAASM,EAAS5W,GAC1B,OAAOhnB,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,IAAI6+B,EAAK7+B,KAAK8+B,aAAaF,GAC3B,QAAUt+B,GAANu+B,EACA,MAAM,IAAIL,EAAGp2B,gBAAgBo2B,EAAGn2B,wBAAwBiP,cAAe,mBAE3E,GAAgB,cAAZ4nB,EACA,MAAM,IAAIV,EAAGp2B,gBAAgBo2B,EAAGn2B,wBAAwBiP,cAAe,uCAE3E,IAAIjO,EAAS,CACT61B,QAASA,EACThc,KAAMljB,KAAK2+B,qBAAqBC,IAEhCtW,IACAjf,EAAOif,KAAOA,GAElB,IACI,MAAM6W,QAAYn/B,KAAKy+B,SAAS/qB,QAAQ,CACpC3D,OAAQ,kBACR1G,OAAQA,GACTu1B,GACH,GAAI,WAAYO,EACZ,OAAOA,EAAIj+B,OAEV,CACD,IAAIk+B,EAAYD,EAChB,OAAOC,EAAU7vB,KACrB,CACJ,CACA,MAAOA,GACH,GAAIA,aAAiBivB,EAAGp2B,gBACpB,MAAMmH,EAEV,MAAM,IAAIivB,EAAGp2B,gBAAgBo2B,EAAGn2B,wBAAwBiP,cAAe,2CAC3E,CACJ,GACJ,CASA+nB,WAAAA,CAAYT,EAASU,EAAWC,EAAUtT,GACtC,OAAO3qB,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,IAAI6+B,EAAK7+B,KAAK8+B,aAAaF,GAC3B,QAAUt+B,GAANu+B,EACA,MAAM,IAAIL,EAAGp2B,gBAAgBo2B,EAAGn2B,wBAAwBiP,cAAe,mBAE3E,IAAIjO,EAAS,CACT6Z,KAAMljB,KAAK2+B,qBAAqBC,GAChCY,GAAIF,EACJjgC,OAAQkgC,EAAW,KAAW56B,aAElB,OAAZsnB,QAAgC,IAAZA,OAAqB,EAASA,EAAQwT,WAC1Dp2B,EAAO,YAAc4iB,EAAQwT,QAAQ96B,YAEzC,IAAIzD,QAAelB,KAAKkG,KAAK04B,EAASv1B,GACtC,YAAe/I,IAAXY,GAAyB,WAAYA,EAE9BA,EAAOw+B,OAGXx+B,CACX,GACJ,CAOAgF,IAAAA,CAAK04B,EAAShxB,GACV,OAAOtM,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,IAAI6+B,EAAK7+B,KAAK8+B,aAAaF,GAC3B,QAAUt+B,GAANu+B,EACA,MAAM,IAAIL,EAAGp2B,gBAAgBo2B,EAAGn2B,wBAAwBiP,cAAe,mBAE3E,IAAKtX,KAAK2/B,gBAAgB/xB,EAAO,KAAM,SACnC,MAAM,IAAI4wB,EAAGp2B,gBAAgBo2B,EAAGn2B,wBAAwBiP,cAAe,iCAE3E1J,EAAM,QAAU5N,KAAK2+B,qBAAqBC,GAC1C,IACI,MAAMO,QAAYn/B,KAAKy+B,SAAS/qB,QAAQ,CACpC3D,OAAQ,WACR1G,OAAQuE,GACTgxB,GACH,GAAI,WAAYO,EACZ,MAAO,CACHO,OAAQP,EAAIj+B,QAGf,CACD,IAAIk+B,EAAYD,EAChB,OAAOC,EAAU7vB,KACrB,CACJ,CACA,MAAOA,GACH,GAAIA,aAAiBivB,EAAGp2B,gBACpB,MAAMmH,EAEV,MAAM,IAAIivB,EAAGp2B,gBAAgBo2B,EAAGn2B,wBAAwBiP,cAAe,kCAAkC/H,IAC7G,CACJ,GACJ,CAMAqwB,QAAAA,CAAShB,EAASiB,EAAS5T,GACvB,OAAO3qB,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,OAAO,IAAI6B,SAAQ,CAACD,EAASE,KACzB9B,KAAK8/B,UAAUlB,EAAS,CAACiB,GAAU,CAAC5T,IAAU5pB,MAAK09B,IAC/C,IAAI/M,EAAUnf,KAAKygB,MAAMyL,GACzBn+B,EAAQoxB,EAAQ,GAAG,IACpBpjB,OAAML,IACLzN,EAAOyN,EAAM,GACf,GAEV,GACJ,CAQAuwB,SAAAA,CAAUlB,EAASoB,EAAU/T,GACzB,OAAO3qB,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,IAAI6+B,EAAK7+B,KAAK8+B,aAAaF,GAC3B,QAAUt+B,GAANu+B,EACA,MAAM,IAAIL,EAAGp2B,gBAAgBo2B,EAAGn2B,wBAAwBiP,cAAe,mBAE3E,QAAiBhX,IAAb0/B,EACA,MAAM,IAAIxB,EAAGp2B,gBAAgBo2B,EAAGn2B,wBAAwBiP,cAAe,qCAE3E,IAAIjO,EAAS,CACT22B,SAAUA,EACV/T,QAASA,GAEb5iB,EAAO6Z,KAAOljB,KAAK2+B,qBAAqBC,GACxC,IACI,MAAMO,QAAYn/B,KAAKy+B,SAAS/qB,QAAQ,CACpC3D,OAAQ,gBACR1G,OAAQA,GACTu1B,GACH,GAAI,WAAYO,EACZ,OAAOA,EAAIj+B,MAEnB,CACA,MAAOqO,GACH,GAAIA,aAAiBivB,EAAGp2B,gBACpB,MAAMmH,EAEV,MAAM,IAAIivB,EAAGp2B,gBAAgBo2B,EAAGn2B,wBAAwBiP,cAAe,kCAAkC/H,IAC7G,CACJ,GACJ,CAQA0wB,eAAAA,CAAgBrB,EAASiB,EAAS5T,GAC9B,OAAO3qB,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,IAAI6+B,EAAK7+B,KAAK8+B,aAAaF,GAC3B,QAAUt+B,GAANu+B,EACA,MAAM,IAAIL,EAAGp2B,gBAAgBo2B,EAAGn2B,wBAAwBiP,cAAe,mBAE3E,QAAgBhX,IAAZu/B,EACA,MAAM,IAAIrB,EAAGp2B,gBAAgBo2B,EAAGn2B,wBAAwBiP,cAAe,qCAE3E,IAAIjO,EAAS,CACTw2B,QAASA,EACT5T,QAASA,GAEb5iB,EAAO6Z,KAAOljB,KAAK2+B,qBAAqBC,GACxC,IACI,MAAMO,QAAYn/B,KAAKy+B,SAAS/qB,QAAQ,CACpC3D,OAAQ,sBACR1G,OAAQA,GACTu1B,GACH,GAAI,WAAYO,EACZ,OAAOtrB,KAAKygB,MAAM6K,EAAIj+B,QAErB,CACD,IAAIk+B,EAAYD,EAChB,OAAOC,EAAU7vB,KACrB,CACJ,CACA,MAAOA,GACH,GAAIA,aAAiBivB,EAAGp2B,gBACpB,MAAMmH,EAEV,MAAM,IAAIivB,EAAGp2B,gBAAgBo2B,EAAGn2B,wBAAwBiP,cAAe,kCAAkC/H,IAC7G,CACJ,GACJ,CAOA2wB,eAAAA,CAAgBtB,EAASpiB,EAAS2jB,EAAelU,GAC7C,OAAO3qB,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,IAAIogC,EAAY,CACZ5jB,QAASA,EACT2jB,cAAeA,EACflU,QAASA,GAET4S,EAAK7+B,KAAK8+B,aAAaF,GAC3B,QAAUt+B,GAANu+B,EACA,MAAM,IAAIL,EAAGp2B,gBAAgBo2B,EAAGn2B,wBAAwBiP,cAAe,mBAE3E,GAAgB,cAAZkF,EACA,MAAM,IAAIgiB,EAAGp2B,gBAAgBo2B,EAAGn2B,wBAAwBiP,cAAe,2CAE3E,IAAImoB,EAAU,EACVxT,GAAY,YAAaA,IACzBwT,EAAUxT,EAAQwT,SAEtB,IAAIY,EAAS,GACTnd,EAAOljB,KAAK2+B,qBAAqBC,GACrC,IAAI0B,EAAa,EACjB,GAAsB,cAAlBH,EAA+B,CAC/B,IAAII,EAAe,aACfC,EAAiB,aACC,OAAlBL,QAA4C,IAAlBA,OAA2B,EAASA,EAAclC,cAAcwC,SAASF,EAAatC,iBAChHqC,EAAa,EACbH,EAAgBngC,KAAK0gC,aAAaP,EAAeI,KAE1B,OAAlBJ,QAA4C,IAAlBA,OAA2B,EAASA,EAAclC,cAAcwC,SAASD,EAAevC,kBACvHkC,EAAgBngC,KAAK0gC,aAAaP,EAAeK,GAEzD,CACA,IAAIn3B,EAAS,CACTs3B,SAAU,EACVlB,QAASA,EACTmB,OAAQ,KACRpB,GAAIhjB,EACJqkB,UAAW,CACP,CACIC,WAAY,IACZC,MAAOZ,EACPG,WAAYA,EACZD,OAAQA,EACRF,cAAe,GACfjd,KAAMA,IAGdkd,UAAWA,GAEf,IACI,MAAMjB,QAAYn/B,KAAKy+B,SAAS/qB,QAAQ,CACpC3D,OAAQ,sBACR1G,OAAQA,GACTu1B,GACH,GAAI,WAAYO,EACZ,OAAOA,EAAIj+B,OAEV,CACD,IAAIk+B,EAAYD,EAChB,OAAOC,EAAU7vB,KACrB,CACJ,CACA,MAAOA,GACH,GAAIA,aAAiBivB,EAAGp2B,gBACpB,MAAMmH,EAEV,MAAM,IAAIivB,EAAGp2B,gBAAgBo2B,EAAGn2B,wBAAwBiP,cAAe,2CAC3E,CACJ,GACJ,CACAopB,YAAAA,CAAaxmB,EAAK8mB,GACd,OAAI9mB,EAAIumB,SAASO,GACN9mB,EAAIe,MAAM,EAAGf,EAAI7S,OAAS25B,EAAO35B,QAErC6S,CACX,CACAylB,eAAAA,CAAgBt2B,KAAWga,GACvB,IAAI4d,EAAc,GAMlB,OALA5d,EAAKhP,SAAQ1C,IACH,GAAGA,MAAStI,GACd43B,EAAY/tB,KAAKvB,EACrB,MAEAsvB,EAAY55B,OAAS,KACrBknB,QAAQzrB,IAAI,iBAAkBm+B,EAAY1mB,KAAK,OACxC,EAGf,CAMAukB,YAAAA,CAAaF,GACT,GAAI5+B,KAAK0+B,KAAK7b,SAAS+b,GAAU,CAC7B,IAAKsC,EAAc1Q,GAAKoO,EAAQjkB,MAAM,KACtC,OAAOumB,CACX,CAEJ,EAEJ9hC,EAAQm/B,eAAiBA,EACzBn/B,EAAAA,WAAkBm/B,C,qCCrXNz+B,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACb,IAAIwB,EAAatB,MAAQA,KAAKsB,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMtC,GAAS,OAAOA,aAAiBoC,EAAIpC,EAAQ,IAAIoC,GAAE,SAAUG,GAAWA,EAAQvC,EAAQ,GAAI,CAC3G,OAAO,IAAKoC,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU1C,GAAS,IAAM2C,EAAKN,EAAUO,KAAK5C,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAS9C,GAAS,IAAM2C,EAAKN,EAAU,SAASrC,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKd,GAAUA,EAAOkB,KAAOR,EAAQV,EAAO7B,OAASsC,EAAMT,EAAO7B,OAAOgD,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACA/C,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ+hC,uBAAoB,EAC5B,MAAMC,EAASthC,EAAQ,OACvB,MAAMqhC,EACFj+B,WAAAA,CAAYu7B,GACRz+B,KAAKy+B,SAAWA,CACpB,CACAO,UAAAA,CAAWJ,GACP,IAAI75B,EAAI+I,EAAIC,EAAIC,EAAIC,EAAIqT,GACxB,EAAI8f,EAAO78B,UAAU,wCAAyCq6B,IAC9D,EAAIwC,EAAO78B,UAAU,2CAA4CsP,KAAKC,UAA2C,QAAhC/O,EAAK/E,KAAKy+B,SAASxoB,eAA4B,IAAPlR,OAAgB,EAASA,EAAGsR,aACrJ,IAAI0oB,EAAgI,QAArHhxB,EAAsC,QAAhCD,EAAK9N,KAAKy+B,SAASxoB,eAA4B,IAAPnI,OAAgB,EAASA,EAAGuI,WAAW+qB,EAAO7V,2BAAwC,IAAPxd,OAAgB,EAASA,EAAG6O,SAASsV,QAAO,SAAU6M,GAC9L,OAAOA,EAAQzuB,WAAWsuB,EAC9B,IAAG,GAEH,IADA,EAAIwC,EAAO78B,UAAU,wCAAyCsP,KAAKC,UAAUirB,KACxEA,EAID,OAEJ,MAAMsC,EAAetC,EAAQpkB,MAAM,KAC7B6B,EAAUuiB,EAAQpkB,MAAM,KAAK,IACnC,EAAIymB,EAAO78B,UAAU,wCAAyCiY,GAC9D,IAAIQ,EAAmL,QAA1KsE,EAA2H,QAArHrT,EAAsC,QAAhCD,EAAKhO,KAAKy+B,SAASxoB,eAA4B,IAAPjI,OAAgB,EAASA,EAAGqI,WAAW+qB,EAAO7V,2BAAwC,IAAPtd,OAAgB,EAASA,EAAG+O,aAA0B,IAAPsE,OAAgB,EAASA,EAAI,GAAG+f,EAAa,MAAMA,EAAa,MAC3Px0B,EAAY,GAKhB,YAJavM,GAAT0c,IACAnQ,EAAYmQ,EAAM,aAClBuR,QAAQzrB,IAAI,kBAAmB+J,IAE9B2P,EAME,CACH8kB,KAAM,YACN9kB,QAASA,EACT+kB,cAAe/kB,EACfglB,OAAQxhC,KAAKyhC,gBAAgB50B,SAVjC,CAYJ,CACA60B,aAAAA,CAAc9C,EAAS+C,EAAer9B,GAClC,OAAOhD,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,MAAMwV,EAAgBoU,OAAOnU,KAAKnR,GAC5Bs9B,EAAU,CACZC,SAAU,GACVC,eAAgB,IAChBC,SAAU,IACVC,IAAK,CACDC,IAAK,IACLC,OAAQ,IAEZC,KAAM,CAAC,CACC,KAAQ,mBACR,MAAS,CACL,OAAUR,EACV,KAAQnsB,KAGpB4sB,KAAM,IAEV,IAAIC,EAAW,CACX,QAAWzD,EACX,OAAU,uBACV,OAAU,CACN,OAAU+C,EACV,SAAY/C,EAAQjkB,MAAM,KAAK,GAC/B,KAAQinB,IAGhB,IACI,MAAMzC,QAAYn/B,KAAKy+B,SAAS/qB,QAAQ2uB,EAAUzD,GAClD,GAAI,WAAYO,EACZ,MAAyB,iBAAdA,EAAIj+B,OACJ2S,KAAKygB,MAAM6K,EAAIj+B,QAGfi+B,EAAIj+B,OAGd,CACD,IAAIk+B,EAAYD,EAChB,OAAOC,EAAU7vB,KACrB,CACJ,CACA,MAAOA,GACH,OAAOA,CAEX,CACJ,GACJ,CACA+yB,SAAAA,CAAU1D,EAAS+C,EAAeC,EAASW,GACvC,OAAOjhC,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,GAA4B,oBAAxB4hC,EAAQO,KAAK,GAAG7Z,KAA4B,CAC5C,IAAI+Z,EAAW,CACX,QAAWzD,EACX,OAAU,uBACV,OAAU,CACN,OAAU+C,EACV,SAAY/C,EAAQjkB,MAAM,KAAK,GAC/B,KAAQinB,IAGhB,IACI,MAAMzC,QAAYn/B,KAAKy+B,SAAS/qB,QAAQ2uB,EAAUzD,GAClD,GAAI,WAAYO,EACZ,OAAOA,EAAIj+B,OAEV,CACD,IAAIk+B,EAAYD,EAChB,OAAOC,EAAU7vB,KACrB,CACJ,CACA,MAAOA,GACH,OAAOA,CAEX,CACJ,KACK,CACD,IAAI8yB,EAAW,CACX,QAAWzD,EACX,OAAU,mBACV,OAAU,CACN,OAAU+C,EACV,QAAW/C,EAAQjkB,MAAM,KAAK,GAC9B,SAAYinB,EACZ,YAAeW,IAGvB,IACI,MAAMpD,QAAYn/B,KAAKy+B,SAAS/qB,QAAQ2uB,EAAUzD,GAClD,GAAI,WAAYO,EAAK,CACjB,MAAMqD,EAAU3uB,KAAKygB,MAAM6K,EAAIj+B,QAG/B,OAFAqtB,QAAQzrB,IAAI,UAAW8+B,EAASY,EAAQZ,SACxCA,EAAQI,IAAMQ,EAAQZ,QAAQI,IACvB,CAAES,OAAQb,EAAS7mB,UAAWynB,EAAQznB,UACjD,CACK,CACD,IAAIqkB,EAAYD,EAChB,OAAOC,EAAU7vB,KACrB,CACJ,CACA,MAAOA,GAEH,OAAOA,CACX,CACJ,CACJ,GACJ,CACAmzB,UAAAA,CAAW9D,EAAS+C,EAAeC,EAASW,GACxC,OAAOjhC,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,MAAMgS,EAAS,CACX2wB,UAAW3iC,KAAK4iC,YAAYhB,EAAQe,WACpCE,cAAe7iC,KAAK4iC,YAAYhB,EAAQiB,eACxCjE,QAASgD,EAAQhD,QACjBkE,cAAelB,EAAQkB,cAAgBlB,EAAQkB,cAAcn+B,WAAa,KAC1E49B,YAAaA,GAA4B,MAE7C,IAAIj+B,EAAO,CACP,QAAWs6B,EACX,OAAU,oBACV,OAAU,CACN,OAAU+C,EACV,QAAW/C,EAAQjkB,MAAM,KAAK,GAC9B,SAAY3I,IAGpB,IACI,MAAMmtB,QAAYn/B,KAAKy+B,SAAS/qB,QAAQpP,EAAMs6B,GAC9C,GAAI,WAAYO,EAAK,CACjB,MAAMlN,EAAMpe,KAAKygB,MAAM6K,EAAIj+B,QAG3B,OAFAqtB,QAAQzrB,IAAI,oBAAqBmvB,GACjC2P,EAAQiB,cAAgB7iC,KAAK+iC,gBAAgB9Q,EAAI2P,QAAQiB,eAClD,CAAEJ,OAAQb,EAAS7mB,UAAWkX,EAAIlX,UAC7C,CACJ,CACA,MAAOxL,GACH,OAAOA,CAEX,CACJ,GACJ,CACAwzB,eAAAA,CAAgBx5B,GACZ,IAAIy5B,EAASpb,WAAW1E,KAAK,IAC7B,IAEQ8f,EADmB,kBAAZz5B,EACEvJ,KAAKyhC,gBAAgBl4B,EAAQ0G,QAAQ,KAAM,KAG3C2X,WAAW1E,KAAK3Z,EAEjC,CACA,MAAOpB,GACHomB,QAAQzrB,IAAI,0BAA0BqF,IAC1C,CACA,OAAO66B,CACX,CACAJ,WAAAA,CAAYK,GACR,IAAIC,EAAS,IAAI,IAAItb,WAAWqb,IAC3BnQ,KAAIqQ,GAAKA,EAAEx+B,SAAS,IAAIy+B,SAAS,EAAG,OACpC7oB,KAAK,IACV,MAAO,KAAO2oB,CAClB,CACAzB,eAAAA,CAAgBhG,GACZ,GAAIA,EAAUp0B,OAAS,IAAM,EACzB,KAAM,oBAGV,IADA,IAAIg8B,EAAc,IAAIzb,WAAW6T,EAAUp0B,OAAS,GAC3CkK,EAAI,EAAGA,EAAIkqB,EAAUp0B,OAAQkK,GAAK,EAAG,CAC1C,IAAI+xB,EAAYhK,SAASmC,EAAUpD,OAAO9mB,EAAG,GAAI,IACjD,GAAIgyB,MAAMD,GACN,KAAM,oBAEVD,EAAY9xB,EAAI,GAAK+xB,CACzB,CACA,OAAOD,CACX,EAEJjkC,EAAQ+hC,kBAAoBA,C,oCCtOhBrhC,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OACb,IAAIwB,EAAatB,MAAQA,KAAKsB,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMtC,GAAS,OAAOA,aAAiBoC,EAAIpC,EAAQ,IAAIoC,GAAE,SAAUG,GAAWA,EAAQvC,EAAQ,GAAI,CAC3G,OAAO,IAAKoC,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU1C,GAAS,IAAM2C,EAAKN,EAAUO,KAAK5C,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAS9C,GAAS,IAAM2C,EAAKN,EAAU,SAASrC,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKd,GAAUA,EAAOkB,KAAOR,EAAQV,EAAO7B,OAASsC,EAAMT,EAAO7B,OAAOgD,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACA/C,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQokC,yBAAsB,EAC9B,MAAMpC,EAASthC,EAAQ,OACvB,MAAM0jC,EACFtgC,WAAAA,CAAYu7B,GACRz+B,KAAKyjC,kBAAoB,mBACzBzjC,KAAKy+B,SAAWA,CACpB,CACAiF,QAAAA,CAAS9E,GAIL,GAHe,MAAXA,IACAA,EAAU5+B,KAAKyjC,mBAEf7E,GAAW5+B,KAAKyjC,kBAChB,MAAM,IAAIrC,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwB+iB,oBAAqB,eAAiBwT,EAAU,oCAEpH,OAAOA,CACX,CACAI,UAAAA,CAAWJ,GACP,IAAI75B,EAAI+I,EAAIC,EAAIC,EAAIC,EACpB,IAAI8wB,EAAkI,QAAvHjxB,EAAsC,QAAhC/I,EAAK/E,KAAKy+B,SAASxoB,eAA4B,IAAPlR,OAAgB,EAASA,EAAGsR,WAAW+qB,EAAO/V,6BAA0C,IAAPvd,OAAgB,EAASA,EAAG8O,SAASsV,QAAO,SAAU6M,GAChM,OAAOA,EAAQzuB,WAAWsuB,EAC9B,IAAG,GACH,IAAKG,EAID,OAEJ,MAAMsC,EAAetC,EAAQpkB,MAAM,KAC7B6B,EAAUuiB,EAAQpkB,MAAM,KAAK,GACnC,IAAIqC,EAAqL,QAA5K/O,EAA6H,QAAvHD,EAAsC,QAAhCD,EAAK/N,KAAKy+B,SAASxoB,eAA4B,IAAPlI,OAAgB,EAASA,EAAGsI,WAAW+qB,EAAO/V,6BAA0C,IAAPrd,OAAgB,EAASA,EAAGgP,aAA0B,IAAP/O,OAAgB,EAASA,EAAI,GAAGozB,EAAa,MAAMA,EAAa,MAC7Px0B,EAAY,GAIhB,YAHavM,GAAT0c,IACAnQ,EAAYmQ,EAAM,cAEjBR,EAME,CACHA,QAASA,EACTglB,OAAQ30B,QARZ,CAUJ,CAQAoyB,WAAAA,CAAY0C,EAAegC,EAAW/E,GAClC,OAAOt9B,EAAUtB,UAAM,OAAQ,GAAQ,YACnC4+B,EAAU5+B,KAAK0jC,SAAS9E,GACI,GAAxB+C,EAAct6B,SACds6B,EAAgB3hC,KAAKg/B,WAAWJ,GAAS,YAE7C,IAAIyD,EAAW,CACX,QAAWzD,EACX,OAAU,uBACV,OAAU,CACN,eAAkB+C,EAClB,UAAagC,IAGrB,IACI,MAAMxE,QAAYn/B,KAAKy+B,SAAS/qB,QAAQ2uB,EAAUzD,GAClD,GAAI,WAAYO,EAAK,CACjB,IAAInM,EAAUmM,EAAIj+B,OAIlB,MAHsB,iBAAX8xB,IACPA,EAAUnf,KAAKygB,MAAMtB,IAElB,CAACA,EAAQ,eAAgBA,EAAQ,eAC5C,CACK,CACD,IAAIoM,EAAYD,EAChB,OAAOC,EAAU7vB,KACrB,CACJ,CACA,MAAOA,GACH,OAAOA,CAEX,CACJ,GACJ,CAQAq0B,eAAAA,CAAgBjC,EAAekC,EAAajF,GACxC,OAAOt9B,EAAUtB,UAAM,OAAQ,GAAQ,YACnC4+B,EAAU5+B,KAAK0jC,SAAS9E,GACxB,IAAIkF,EAAkB,CAClB,eAAkBnC,EAClB,iBAAoBkC,GAEpBv/B,EAAO,CACP,OAAU,2BACV,OAAU,CACN,KAAQuP,KAAKC,UAAUgwB,GACvB,KAAQnC,IAGhB,IACI,MAAMxC,QAAYn/B,KAAKy+B,SAAS/qB,QAAQpP,EAAMs6B,GAC9C,GAAI,WAAYO,EACZ,MAAO,CAAE4E,iBAAkB5E,EAAIj+B,QAE9B,CACD,IAAIk+B,EAAYD,EAChB,OAAOC,EAAU7vB,KACrB,CACJ,CACA,MAAOA,GACH,OAAOA,CAEX,CACJ,GACJ,CAQAy0B,iCAAAA,CAAkC5+B,EAASw5B,GACvC,OAAOt9B,EAAUtB,UAAM,OAAQ,GAAQ,YACnC4+B,EAAU5+B,KAAK0jC,SAAS9E,GACxB,IACI,IAAIt6B,EAAO,CACP,OAAU,uBACV,OAAUc,GAEd,MAAM+5B,QAAYn/B,KAAKy+B,SAAS/qB,QAAQpP,EAAMs6B,GAC9C,GAAI,WAAYO,EACZ,MAAO,CACH,iBAAoBA,EAAIj+B,OAAO,UAC/B,WAAci+B,EAAIj+B,OAAO,cAG5B,CACD,IAAIk+B,EAAYD,EAChB,OAAOC,EAAU7vB,KACrB,CACJ,CACA,MAAOA,GACH,OAAOA,CAEX,CACJ,GACJ,CAaA00B,mCAAAA,CAAoCtC,EAAeuC,EAAOC,EAAMC,EAAoBxF,GAChF,OAAOt9B,EAAUtB,UAAM,OAAQ,GAAQ,YACnC4+B,EAAU5+B,KAAK0jC,SAAS9E,GACxB,MAAMyF,EAAephB,MAAMqhB,QAAQJ,GAASA,EAAQ,CAACA,GAC/CK,EAAmB,CACrB,MAASF,EACT,KAAQF,EACR,mBAAsB,CAClB,MAAgC,OAAvBC,QAAsD,IAAvBA,OAAgC,EAASA,EAAmBxf,MACpG,OAAiC,OAAvBwf,QAAsD,IAAvBA,OAAgC,EAASA,EAAmBxf,MACrG,QAAkC,OAAvBwf,QAAsD,IAAvBA,OAAgC,EAASA,EAAmB/V,UAG9G,OAAOruB,KAAK4jC,gBAAgBjC,EAAe4C,EAAkB3F,EACjE,GACJ,EAEJx/B,EAAQokC,oBAAsBA,C,qCCpMlB1jC,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACb,IAAIwB,EAAatB,MAAQA,KAAKsB,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMtC,GAAS,OAAOA,aAAiBoC,EAAIpC,EAAQ,IAAIoC,GAAE,SAAUG,GAAWA,EAAQvC,EAAQ,GAAI,CAC3G,OAAO,IAAKoC,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU1C,GAAS,IAAM2C,EAAKN,EAAUO,KAAK5C,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAS9C,GAAS,IAAM2C,EAAKN,EAAU,SAASrC,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKd,GAAUA,EAAOkB,KAAOR,EAAQV,EAAO7B,OAASsC,EAAMT,EAAO7B,OAAOgD,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACA/C,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQolC,oBAAiB,EACzB,MAAMhG,EAAK1+B,EAAQ,MACbshC,EAASthC,EAAQ,OACvB,MAAM0kC,EACFthC,WAAAA,CAAYxB,GACR1B,KAAKykC,0BAA4B,GACjCzkC,KAAK0kC,+BAAiC,GACtC1kC,KAAKy+B,SAAW/8B,EAChB1B,KAAKy+B,SAAS13B,GAAG,WAAW,KACxB,IAAI49B,EAAY3kC,KAAKyX,UACrB,EAAI2pB,EAAO78B,UAAU,gCAAiCsP,KAAKC,UAAU6wB,IACrE3kC,KAAKykC,0BAA0BpwB,SAAQ3K,GAAYA,EAASi7B,IAAW,IAE3E3kC,KAAKy+B,SAAS13B,GAAG,aAAa,KAC1B,IAAI49B,EAAY3kC,KAAKyX,UACrB,EAAI2pB,EAAO78B,UAAU,kCAAmCsP,KAAKC,UAAU6wB,IACvE3kC,KAAKykC,0BAA0BpwB,SAAQ3K,GAAYA,EAASi7B,IAAW,IAE3E3kC,KAAKy+B,SAAS13B,GAAG,cAAc,MAC3B,EAAIq6B,EAAO78B,UAAU,oCACrBvE,KAAKykC,0BAA0BpwB,SAAQ3K,GAAYA,EAAS,OAAM,IAEtE1J,KAAKy+B,SAAS13B,GAAG,iBAAkBwI,KAC/B,EAAI6xB,EAAO78B,UAAU,sCAAuCsP,KAAKC,UAAUvE,IAC3EvP,KAAK0kC,+BAA+BrwB,SAAQuwB,GAAiBA,EAAcr1B,IAAO,GAE1F,CACAs1B,SAAAA,GACI,QAAI7kC,KAAKy+B,SAASoG,eACL7kC,KAAKy+B,SAASxoB,QAAQI,WAAW,MAGlD,CACA0oB,OAAAA,GACI,IACI,IAAK/+B,KAAKy+B,SAASxoB,QACf,OAAO,KAEX,IAAI6uB,EAAe9kC,KAAKy+B,SAASxoB,QAAQI,WAAW,OACpD,IAAKyuB,IAAiBA,EAAa1/B,UAAY0/B,EAAa1/B,QAAQsX,SAChE,OAAO,KAEX,IAAIA,EAAWooB,EAAa1/B,QAAQsX,SACpC,MAAO,CACHF,QAASE,EAASF,QAClBY,MAAOV,EAASD,QAChBsoB,gBAAiBroB,EAASqoB,gBAC1Bl4B,UAAW6P,EAAS7P,UAE5B,CACA,MAAO3K,GAEH,OADA,EAAIk/B,EAAO78B,UAAU,iCAAkCsP,KAAKC,UAAU5R,IAC/D,IACX,CACJ,CACAuV,MAAAA,GACI,GAAIzX,KAAK6kC,YACL,IACI,IAAIG,EAAgBhlC,KAAKy+B,SAASxoB,QAAQwB,OACtCwtB,EAAgB,CAChBxS,SAAUuS,EAAcvS,SACxBpB,QAAS2T,EAAc3T,QACvB6T,WAAYF,EAAcE,WAC1BC,mBAAoBH,EAAcG,mBAClCC,SAAU,CAAC,wBAEf,MAAM3tB,EAAS,CACX0mB,OAAQ8G,EACRxG,SAAU,OACVM,QAAS/+B,KAAK++B,WAElB,IAAI+F,EAAe9kC,KAAKy+B,SAASxoB,QAAQI,WAAW,OAOpD,OANIyuB,GAAgBA,EAAa1/B,SAAW0/B,EAAa1/B,QAAQuX,YAC7DlF,EAAO4tB,aAAe,CAClB9oB,SAAUuoB,EAAa1/B,QAAQuX,aAGvC,EAAIykB,EAAO78B,UAAU,0BAA2BsP,KAAKC,UAAU2D,IACxDA,CACX,CACA,MAAOvV,GAEH,OADA,EAAIk/B,EAAO78B,UAAU,gCAAiCsP,KAAKC,UAAU5R,IAC9D,IACX,CAEJ,OAAO,IACX,CACAojC,cAAAA,CAAe57B,EAAUk7B,GAKrB,OAJA5kC,KAAKykC,0BAA0BvxB,KAAKxJ,GAChCk7B,GACA5kC,KAAK0kC,+BAA+BxxB,KAAK0xB,GAEtC,KACH5kC,KAAKykC,0BAA4BzkC,KAAKykC,0BAA0BvS,QAAOxb,GAAQA,IAAShN,IACpFk7B,IACA5kC,KAAK0kC,+BAAiC1kC,KAAK0kC,+BAA+BxS,QAAOxb,GAAQA,IAASkuB,IACtG,CAER,CACAhB,eAAAA,CAAgBC,GACZ,OAAOviC,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,GAAI6jC,EAAYpnB,SAAWonB,EAAYpnB,UAAY2kB,EAAO/X,SAASkc,QAC/D,MAAM,IAAI/G,EAAGp2B,gBAAgBo2B,EAAGn2B,wBAAwBiP,cAAe,gDAK3E,GAHKusB,EAAYpnB,UACbonB,EAAYpnB,QAAU2kB,EAAO/X,SAASkc,SAEtCvlC,KAAKy+B,SAASxoB,UACT4tB,EAAY3gB,KAAM,CACnB,MAAMtG,EAAW5c,KAAKy+B,SAAS+G,6BAA6B,OAC5D3B,EAAY3gB,KAAOtG,EAAS,EAChC,CAEJ,MAAM6oB,EAAgB,CAClB11B,OAAQ,sBACR1G,OAAQw6B,GAEZ,IAAIzmB,EAAQ,OAASgkB,EAAO/X,SAASkc,QAErC,OADA,EAAInE,EAAO78B,UAAU,kDAAmD6Y,EAAOvJ,KAAKC,UAAU2xB,IACvFzlC,KAAKy+B,SAAS/qB,QAAQ+xB,EAAeroB,EAChD,GACJ,EAEJhe,EAAQolC,eAAiBA,EACzBplC,EAAAA,WAAkBolC,C,qCCvIN1kC,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OACb,IAAIwB,EAAatB,MAAQA,KAAKsB,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMtC,GAAS,OAAOA,aAAiBoC,EAAIpC,EAAQ,IAAIoC,GAAE,SAAUG,GAAWA,EAAQvC,EAAQ,GAAI,CAC3G,OAAO,IAAKoC,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU1C,GAAS,IAAM2C,EAAKN,EAAUO,KAAK5C,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAS9C,GAAS,IAAM2C,EAAKN,EAAU,SAASrC,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKd,GAAUA,EAAOkB,KAAOR,EAAQV,EAAO7B,OAASsC,EAAMT,EAAO7B,OAAOgD,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACA/C,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQsmC,qBAAkB,EAC1B,MAAMtE,EAASthC,EAAQ,OACvB,MAAM4lC,EACFxiC,WAAAA,CAAYu7B,GACRz+B,KAAK2lC,cAAgB,eACrB3lC,KAAKy+B,SAAWA,CACpB,CACAiF,QAAAA,CAAS9E,GAIL,GAHe,MAAXA,IACAA,EAAU5+B,KAAK2lC,eAEf/G,GAAW5+B,KAAK2lC,cAChB,MAAM,IAAIvE,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwB+iB,oBAAqB,eAAiBwT,EAAU,gCAEpH,OAAOA,CACX,CACAI,UAAAA,CAAWJ,GACP,IAAI75B,EAAI+I,EAAIC,EAAIC,EAAIC,EACpB2wB,EAAU5+B,KAAK0jC,SAAS9E,GACxB,IAAIG,EAA8H,QAAnHjxB,EAAsC,QAAhC/I,EAAK/E,KAAKy+B,SAASxoB,eAA4B,IAAPlR,OAAgB,EAASA,EAAGsR,WAAW+qB,EAAO9V,yBAAsC,IAAPxd,OAAgB,EAASA,EAAG8O,SAASsV,QAAO,SAAU6M,GAC5L,OAAOA,EAAQzuB,WAAWsuB,EAC9B,IAAG,GACH,IAAKG,EAID,OAEJ,MAAMsC,EAAetC,EAAQpkB,MAAM,KAC7B6B,EAAUuiB,EAAQpkB,MAAM,KAAK,GACnC,IAAIqC,EAAiL,QAAxK/O,EAAyH,QAAnHD,EAAsC,QAAhCD,EAAK/N,KAAKy+B,SAASxoB,eAA4B,IAAPlI,OAAgB,EAASA,EAAGsI,WAAW+qB,EAAO9V,yBAAsC,IAAPtd,OAAgB,EAASA,EAAGgP,aAA0B,IAAP/O,OAAgB,EAASA,EAAI,GAAGozB,EAAa,MAAMA,EAAa,MACzPx0B,EAAY,GAIhB,YAHavM,GAAT0c,IACAnQ,EAAYmQ,EAAM,cAEjBR,EAME,CACHA,QAASA,QAPb,CASJ,CACAopB,WAAAA,CAAY1rB,GACR,IAAIub,EAAM,GACV,IAAK,IAAIlkB,EAAI,EAAGA,EAAI2I,EAAI7S,OAAQkK,IAC5BkkB,GAAOvb,EAAIqb,WAAWhkB,GAAG5M,SAAS,IAAIy+B,SAAS,EAAG,KAEtD,OAAO3N,CACX,CACAwJ,WAAAA,CAAY36B,EAAMs6B,GACd,OAAOt9B,EAAUtB,UAAM,OAAQ,GAAQ,YACnC4+B,EAAU5+B,KAAK0jC,SAAS9E,GACxB,IAAIyD,EAAW,CACX,QAAWzD,EACX,OAAU,mBACV,OAAU,CACN,QAAW5+B,KAAK4lC,YAAYthC,KAGpC,IACI,MAAM66B,QAAYn/B,KAAKy+B,SAAS/qB,QAAQ2uB,EAAUzD,GAClD,GAAI,WAAYO,EACZ,OAAOA,EAAIj+B,OAEV,CACD,IAAIk+B,EAAYD,EAChB,OAAOC,EAAU7vB,KACrB,CACJ,CACA,MAAOA,GACH,OAAOA,CAEX,CACJ,GACJ,CACAs2B,aAAAA,CAAcvhC,EAAMs6B,GAChB,OAAOt9B,EAAUtB,UAAM,OAAQ,GAAQ,YACnC4+B,EAAU5+B,KAAK0jC,SAAS9E,GACxB,IAAIyD,EAAW,CACX,QAAWzD,EACX,OAAU,qBACV,OAAU,CACN,QAAWt6B,IAGnB,IACI,MAAM66B,QAAYn/B,KAAKy+B,SAAS/qB,QAAQ2uB,EAAUzD,GAClD,GAAI,WAAYO,EACZ,OAAOA,EAAIj+B,OAEV,CACD,IAAIk+B,EAAYD,EAChB,OAAOC,EAAU7vB,KACrB,CACJ,CACA,MAAOA,GACH,OAAOA,CAEX,CACJ,GACJ,CACAu2B,eAAAA,CAAgBjC,EAAajF,GACzB,OAAOt9B,EAAUtB,UAAM,OAAQ,GAAQ,YACnC4+B,EAAU5+B,KAAK0jC,SAAS9E,GACxB,IAAIt6B,EAAO,CACP,OAAU,uBACV,OAAUu/B,GAEd,IACI,MAAM1E,QAAYn/B,KAAKy+B,SAAS/qB,QAAQpP,EAAMs6B,GAC9C,GAAI,WAAYO,EAAK,CACjB,IAAI4G,EAEAA,EADqB,iBAAd5G,EAAIj+B,OACA2S,KAAKygB,MAAM6K,EAAIj+B,QAGfi+B,EAAIj+B,OAEnB,IAAI8kC,EAAa,CAAC,EAClBA,EAAWC,QAAUF,EAASE,QAC9BD,EAAWE,KAAOH,EAASG,KAC3B,IAAIC,EAAU,CAAC,EAUf,OATAA,EAAQC,SAAWL,EAASM,SAASD,SACrCD,EAAQG,WAAaP,EAASM,SAASC,WACvCH,EAAQI,gBAAkBR,EAASM,SAASE,gBAC5CJ,EAAQK,UAAYT,EAASM,SAASG,UACtCL,EAAQM,eAAiBV,EAASM,SAASI,eAC3CN,EAAQ7nB,UAAYynB,EAASM,SAAS/nB,UACtC0nB,EAAWK,SAAWF,EACtBH,EAAWU,aAAeX,EAASW,aACnCV,EAAWjrB,UAAYgrB,EAAShrB,UACzBirB,CACX,CACJ,CACA,MAAOz2B,GACH,OAAOA,CAEX,CACJ,GACJ,CACAo3B,sBAAAA,CAAuB9C,EAAajF,GAChC,OAAOt9B,EAAUtB,UAAM,OAAQ,GAAQ,YACnC4+B,EAAU5+B,KAAK0jC,SAAS9E,GACxB,IAAIt6B,EAAO,CACP,OAAU,8BACV,OAAUu/B,GAEd,IACI,MAAM1E,QAAYn/B,KAAKy+B,SAAS/qB,QAAQpP,EAAMs6B,GAC9C,GAAI,WAAYO,EACZ,OAAOA,EAAIj+B,MAEnB,CACA,MAAOqO,GACH,OAAOA,CAEX,CACJ,GACJ,EAEJnQ,EAAQsmC,gBAAkBA,C,qCC9Kd5lC,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACb,IAAIwB,EAAatB,MAAQA,KAAKsB,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMtC,GAAS,OAAOA,aAAiBoC,EAAIpC,EAAQ,IAAIoC,GAAE,SAAUG,GAAWA,EAAQvC,EAAQ,GAAI,CAC3G,OAAO,IAAKoC,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU1C,GAAS,IAAM2C,EAAKN,EAAUO,KAAK5C,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAS9C,GAAS,IAAM2C,EAAKN,EAAU,SAASrC,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKd,GAAUA,EAAOkB,KAAOR,EAAQV,EAAO7B,OAASsC,EAAMT,EAAO7B,OAAOgD,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACIiW,EAAmBlY,MAAQA,KAAKkY,iBAAoB,SAAUjX,GAC9D,OAAQA,GAAOA,EAAIR,WAAcQ,EAAM,CAAE,QAAWA,EACxD,EACA/B,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQwnC,0BAAuB,EAC/B,MAAMC,EAAW/mC,EAAQ,OACnBgnC,EAAQhnC,EAAQ,OAChB0C,EAAc1C,EAAQ,OACtB+C,EAAkBqV,EAAgBpY,EAAQ,QAC1CinC,EAAWjnC,EAAQ,OACnBshC,EAASthC,EAAQ,OACjBknC,EAAelnC,EAAQ,OACvBmnC,EAAW/uB,EAAgBpY,EAAQ,QACnConC,EAAQhvB,EAAgBpY,EAAQ,QAChCqnC,EAAUjvB,EAAgBpY,EAAQ,QAClCsnC,EAAQlvB,EAAgBpY,EAAQ,QAChCunC,EAAWnvB,EAAgBpY,EAAQ,QACnCwnC,EAASpvB,EAAgBpY,EAAQ,QACjC6C,EAAU7C,EAAQ,OAClBynC,EAAaznC,EAAQ,OACrB0nC,EAAa1nC,EAAQ,OACrB2nC,EAAavvB,EAAgBpY,EAAQ,QAC3C,MAAM8mC,EACF,WAAOc,CAAKC,GACR,OAAOrmC,EAAUtB,UAAM,OAAQ,GAAQ,YAKnC,IAAIy+B,EAcJ,OAlBA,EAAI2C,EAAO78B,UAAU,uCACrB,EAAI68B,EAAO1U,eAAeib,EAAK7T,eAE/B,EAAInxB,EAAQilC,WAAW,uBAAuB,GAE1Che,QAAUA,OAAOie,6BAA+Bje,OAAOie,uCAAuCjB,IAC9F,EAAIxF,EAAO78B,UAAU,yCACrBk6B,EAAW7U,OAAOie,+BAGlB,EAAIzG,EAAO78B,UAAU,yCACrBk6B,EAAW,IAAImI,EAAqBe,GAChC/d,SACAA,OAAOie,4BAA8BpJ,SAEnCA,EAASqJ,eAEnB,EAAI1G,EAAOxuB,sBAAsBue,qBAAqB,0BAA2B,OAAQsN,EAASsJ,aAAajU,aAAatkB,MACrHivB,CACX,GACJ,CACAv7B,WAAAA,CAAYykC,GACR3nC,KAAKgoC,aAAe,CAAC,EACrBhoC,KAAKoD,OAAS,IAAIP,EAAgBmX,QAClCha,KAAK+nC,aAAeJ,CACxB,CACAj0B,OAAAA,CAAQ4a,EAAMlR,GACV,OAAO9b,EAAUtB,UAAM,OAAQ,GAAQ,YAGnC,IAFA,EAAIohC,EAAO78B,UAAU,0CACrB,EAAI68B,EAAO71B,WAAW,0CACjBvL,KAAK6kC,YACN,MAAM,IAAIzD,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwB0iB,qBAEpE,MAAM,UAAElO,EAAS,aAAEorB,GAAiBjoC,KAAKkoC,6BAA6B5Z,EAAMlR,GAC5E,aAAapd,KAAKmoC,YAAYtrB,GAAWnJ,QAAQu0B,EACrD,GACJ,CACAC,4BAAAA,CAA6B5Z,EAAMlR,GAC/B,IAAIrY,GACJ,EAAIq8B,EAAO78B,UAAU,2CAA4C6Y,EAAOvJ,KAAKC,UAAUwa,IACvF,IAAKzR,EAAW+hB,GAAW5+B,KAAKooC,cAAchrB,GAC9C,IAAKpd,KAAKiW,QACN,MAAM,IAAImrB,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwBiP,cAAe,0CAEnF,IAAI+wB,EAASnpC,OAAOmkB,KAAKrjB,KAAKiW,QAAQI,YACtC,IAAK+G,GAASirB,GAAUA,EAAOhhC,OAAS,EACpC,MAAM,IAAI+5B,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwB0iB,oBAAqB,uEAExE,SAAblO,GAAmC,WAAX+hB,IACxB/hB,EAAY,QACZ+hB,EAAU,OAEG,YAAb/hB,GAAsC,WAAX+hB,IAC3B/hB,EAAY,QACZ+hB,EAAU,YAEd,MAAMqJ,EAAe/oC,OAAO6U,OAAO7U,OAAO6U,OAAO,CAAC,EAAGua,GAAO,CAAEsQ,QAAS,GAAG/hB,KAAa+hB,IAAWhoB,SAAmC,QAAxB7R,EAAKupB,EAAK1X,gBAA6B,IAAP7R,EAAgBA,EAAK/E,KAAKyU,cAAcmC,WACrL,MAAO,CAAEiG,YAAWorB,eACxB,CACAK,MAAAA,GACI,OAAOhnC,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,IAAKA,KAAKmmB,OACN,MAAM,IAAIib,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwBiP,cAAe,+BAEnF,IAAKtX,KAAKiW,QAAS,CACf,IAAIjW,KAAKuoC,YAIL,MAAM,IAAInH,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwBiP,cAAe,qCAHzEtX,KAAKuI,QAAQvI,KAAKuoC,YAKhC,CACA,MAAM3rB,QAAiB5c,KAAKwoC,kBAC5B,OAAO5rB,CACX,GACJ,CACAlU,UAAAA,GACI,OAAOpH,EAAUtB,UAAM,OAAQ,GAAQ,YAGnC,IAFA,EAAIohC,EAAO78B,UAAU,6CACrB,EAAI68B,EAAO71B,WAAW,+BACjBvL,KAAKiW,QACN,MAAM,IAAImrB,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwB0iB,qBAEpE,OAAO,IAAIlpB,SAASD,GAAYN,EAAUtB,UAAM,OAAQ,GAAQ,YAC5D,IAAIyoC,GAAS,EACb,MAAMC,EAAgBA,IAAMpnC,EAAUtB,UAAM,OAAQ,GAAQ,YACnDyoC,IACDA,GAAS,QACHzoC,KAAK2oC,0BACL3oC,KAAK4oC,UACXhnC,KACA,EAAIw/B,EAAO78B,UAAU,8CACrB,EAAI68B,EAAO71B,WAAW,oCAE9B,IACA,UACUvL,KAAKmmB,OAAOzd,mBACZggC,GACV,CACA,MAAOxmC,SACGwmC,GACV,CACJ,KACJ,GACJ,CACAC,iBAAAA,GACI,IAAI5jC,EAAI+I,EACR9N,KAAKmmB,OAAO0iB,OAAOr2B,kBAAkB9J,aACrC1I,KAAKoD,OAAOwB,KAAK,aAAc,CAAE0I,MAA+B,QAAvBvI,EAAK/E,KAAKiW,eAA4B,IAAPlR,OAAgB,EAASA,EAAGuI,QACpGtN,KAAKoD,OAAOwB,KAAK,iBAAkB,CAAE0I,MAA+B,QAAvBQ,EAAK9N,KAAKiW,eAA4B,IAAPnI,OAAgB,EAASA,EAAGR,OAC5G,CACAw7B,yBAAAA,CAA0BlK,GACtB,MAAe,iBAAXA,EACO,YAES,oBAAXA,EACE,iBAGAA,CAEf,CACAmK,YAAAA,CAAapB,GACT,IAAI5iC,EAAI+I,EACR,IAAIk7B,EAA4C,QAA1BjkC,EAAK4iC,EAAKtxB,kBAA+B,IAAPtR,OAAgB,EAASA,EAAG,SACpF,QAAsBzE,GAAlB0oC,EAA6B,CAC7B,IAAIC,EAASjpC,KAAKkpC,kBAAkBF,QACb1oC,GAAnBqnC,EAAKtxB,YAA2B,UAAWsxB,EAAKtxB,iBAAwB/V,GAAV2oC,IAC9DtB,EAAKtxB,WAAW8yB,MAAQF,EAEhC,CACA,IAAIG,EAA0D,QAAlCt7B,EAAK65B,EAAK0B,0BAAuC,IAAPv7B,OAAgB,EAASA,EAAG,SAClG,QAA4BxN,GAAxB8oC,EAAmC,CACnC,IAAIE,EAAetpC,KAAKkpC,kBAAkBE,QACX9oC,GAA3BqnC,EAAK0B,oBAAmC,UAAW1B,EAAK0B,yBAAsC/oC,GAAhBgpC,IAC9E3B,EAAK0B,mBAAmBF,MAAQG,EAExC,CACA,OAAO3B,CACX,CACAuB,iBAAAA,CAAkBF,GACd,IAAIjkC,EASJ,YARsBzE,GAAlB0oC,IACAA,EAAe/rB,OAA0C,QAAhClY,EAAKikC,EAAe/rB,cAA2B,IAAPlY,OAAgB,EAASA,EAAG+tB,KAAI8L,GACtF5+B,KAAK8oC,0BAA0BlK,UAEPt+B,GAA/B0oC,EAAeO,eACfP,EAAeO,aAAevpC,KAAK8oC,0BAA0BE,EAAeO,gBAG7EP,CACX,CACAQ,gCAAAA,CAAiC5K,GAO7B,OANIA,EAAQ/b,SAAS,aACjB+b,EAAUA,EAAQ3uB,QAAQ,YAAa,iBAElC2uB,EAAQ/b,SAAS,oBACtB+b,EAAUA,EAAQ3uB,QAAQ,iBAAkB,qBAEzC2uB,CACX,CACA6K,mBAAAA,CAAoBxzB,GAChB,IAAIlR,EACJ,IAAIsR,EAA6F,QAA/EtR,EAAiB,OAAZkR,QAAgC,IAAZA,OAAqB,EAASA,EAAQI,kBAA+B,IAAPtR,OAAgB,EAASA,EAAG,SACrI,QAAkBzE,GAAd+V,QAAgD/V,GAArB+V,EAAW4G,OAAqB,CAC3D5G,EAAW4G,OAAS5G,EAAW4G,OAAO6V,KAAI1V,GAC/Bpd,KAAKwpC,iCAAiCpsB,KAEjD/G,EAAWuG,SAAWvG,EAAWuG,SAASkW,KAAKiM,GACpC/+B,KAAKwpC,iCAAiCzK,KAEjD,IAAI/hB,EAAQ,CAAC,EACb9d,OAAOmkB,KAAKhN,EAAW2G,OAAS,CAAC,GAAG3I,SAAQ,CAAC1C,EAAKuhB,KACjClzB,KAAKwpC,iCAAiC73B,GACnDqL,EAAMhd,KAAKwpC,iCAAiC73B,IAAQzS,OAAOwpB,QAAoB,OAAZzS,QAAgC,IAAZA,OAAqB,EAASA,EAAQI,WAAW,SAAS2G,QAAU,CAAC,GAAGkW,EAAM,IAEzK7c,EAAW2G,MAAQA,CACvB,EACA,EAAIokB,EAAO78B,UAAU,sBAAuB0R,EAChD,CACA4uB,SAAAA,IACI,EAAIzD,EAAO78B,UAAU,4CACrB,EAAI68B,EAAO71B,WAAW,6BACtB,IAAIm+B,EAAkBA,KAClB,IACI1pC,KAAK4oC,UACL5oC,KAAKmmB,OAAO0iB,OAAOr2B,kBAAkB9J,YACzC,CACA,MAAOxG,IACH,EAAIk/B,EAAO78B,UAAU,2BAA4BrC,EACrD,GAEJ,IACI,QAAKlC,KAAKiW,YAELjW,KAAKmmB,OAAO0iB,OAAOr2B,kBAAkBP,8BACtCy3B,KACO,GAGf,CACA,MAAOxnC,GAEH,OADAwnC,KACO,CACX,CACJ,CACAC,cAAAA,CAAehC,EAAMiC,GACjB,OAAOtoC,EAAUtB,UAAM,OAAQ,GAAQ,aACnC,EAAIohC,EAAO78B,UAAU,gDACrB,MAAMslC,EAAc3qC,OAAO6U,OAAO7U,OAAO6U,OAAO,CAAC,EAAG4zB,GAAO,CAAEiC,gBAG7D,OAFA,EAAIxI,EAAO78B,UAAU,8CAA+CsP,KAAKC,UAAU6zB,KACnF,EAAIvG,EAAO78B,UAAU,qDAAsDsP,KAAKC,UAAU81B,UAC7E5pC,KAAKuI,QAAQshC,EAC9B,GACJ,CACAthC,OAAAA,CAAQo/B,GACJ,OAAOrmC,EAAUtB,UAAM,OAAQ,GAAQ,YAGnC,IAFA,EAAIohC,EAAO78B,UAAU,0CACrB,EAAI68B,EAAO71B,WAAW,4BACjBvL,KAAKmmB,OACN,MAAM,IAAIib,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwBiP,cAAe,+BAEnF,GAAItX,KAAK6kC,YACL,OAAO7kC,KAAKiW,QAEhB0xB,EAAO3nC,KAAK+oC,aAAapB,IACzB,EAAIvG,EAAO78B,UAAU,oCAAqCsP,KAAKC,UAAU6zB,SAC9CrnC,IAAvBqnC,EAAKlzB,gBACLkzB,EAAKlzB,cAAgB,CAAC,QAEkBnU,IAAxCqnC,EAAKlzB,cAAcG,mBACnB+yB,EAAKlzB,cAAcG,kBAAmB,EAAIwsB,EAAOtU,sBAErD9sB,KAAK8pC,cAAcnC,GACnB,KACI,EAAIvG,EAAO78B,UAAU,kDAAkDsP,KAAKC,UAAU6zB,MACtF,IAAI1xB,QAAgBjW,KAAKmmB,OAAO5d,QAAQo/B,GAGxC,GAFA3nC,KAAKypC,oBAAoBxzB,IACzB,EAAImrB,EAAO78B,UAAU,2CAA2CsP,KAAKC,UAAUmC,MAC3EA,EAAS,CAKT,GAJAjW,KAAKiW,QAAUA,EACfjW,KAAKmmB,OAAOlQ,QAAUA,GACtB,EAAImrB,EAAO78B,UAAU,gDAAiDsP,KAAKC,UAAU6zB,IACrF3nC,KAAKkW,YACDyxB,EAAKiC,aAAejC,EAAKiC,YAAYviC,OAAS,EAAG,CACjD,IAAI0iC,EAAcpC,EAAKiC,YAAY,GAC/BI,EAAmB,GACD,qBAAXpgB,QAA0BA,QAAUA,OAAOqgB,gCAClD,EAAI7I,EAAO78B,UAAU,uDACjBvE,KAAKiW,QAAQ4B,cAAgB7X,KAAKiW,QAAQ4B,aAAaxQ,OAAS,IAChE2iC,EAAmBhqC,KAAKiW,QAAQ4B,iBAIpC,EAAIupB,EAAO78B,UAAU,8DACjBvE,KAAKiW,QAAQ4B,cAAgB7X,KAAKiW,QAAQ4B,aAAaxQ,OAAS,EAChE2iC,EAAmBhqC,KAAKiW,QAAQ4B,aAGhCmyB,EAAiB92B,MAAK,EAAIq0B,EAAW2C,iCAAiCH,MAG9E,EAAI3I,EAAO78B,UAAU,+DAA+DsP,KAAKC,UAAUk2B,MACnG7jC,YAAW,KACPnG,KAAKoD,OAAOwB,KAAK,uBAAwBolC,EAAiB,GAC3D,IACP,CACA,OAAO/zB,CACX,CACA,MACJ,CACA,MAAO1G,GAEH,MADA,EAAI6xB,EAAO78B,UAAU,yCAA0CsP,KAAKC,UAAUvE,IACxEA,CACV,CACJ,GACJ,CACA46B,gBAAAA,GACI,OAAO7oC,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,IAAI,EAAIwnC,EAAW4C,sBAAsBpqC,KAAKiW,QAAQwB,QAClD,OAAOzX,KAAKmmB,OAAOkkB,iBAGnB,MAAM,IAAIjJ,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwB8iB,qBAExE,GACJ,CACApkB,EAAAA,CAAGjC,EAAO+E,GACN7J,KAAKoD,OAAO2D,GAAGjC,EAAO+E,EAC1B,CACA3B,IAAAA,CAAKpD,EAAO+E,GACR7J,KAAKoD,OAAO8E,KAAKpD,EAAO+E,EAC5B,CACAX,cAAAA,CAAepE,EAAO+E,GAClB7J,KAAKoD,OAAO8F,eAAepE,EAAO+E,EACtC,CACAC,GAAAA,CAAIhF,EAAO+E,GACP7J,KAAKoD,OAAO0G,IAAIhF,EAAO+E,EAC3B,CACAygC,eAAAA,CAAgBltB,EAAOmtB,IACnB,EAAInJ,EAAO78B,UAAU,iDAErB,IAEI,IAAKvE,KAAK6kC,YACN,OACJ,MAAOhoB,EAAW+hB,GAAW5+B,KAAKooC,cAAchrB,GAC1CqhB,EAAWz+B,KAAKmoC,YAAYtrB,GAClC4hB,EAAS6L,gBAAgB1L,EAAS2L,EACtC,CACA,MAAOh7B,GAEH,IAAK,sBAAsB4Z,KAAK5Z,EAAMhG,SAClC,MAAMgG,CACd,CACJ,CACAi7B,YAAAA,GACI,OAAOlpC,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,IAAIyqC,QAAuBzqC,KAAK0qC,aAAa,kBAE7C,IADA,EAAItJ,EAAO78B,UAAUkmC,GACjBA,EAAgB,CAChB,IAAIv2B,EAAcu2B,EAClBzqC,KAAKiW,QAAU/B,EACflU,KAAKmmB,OAAOlQ,QAAUjW,KAAKiW,QAC3BjW,KAAKyU,cAAgBP,EAAYO,cACjCzU,KAAKmmB,OAAO1R,cAAgBzU,KAAKyU,eACjC,EAAI2sB,EAAO78B,UAAU,mCAAoCvE,KAAKiW,eACxDjW,KAAKmmB,OAAO7R,eAAeJ,GACjClU,KAAK2qC,kBACL3qC,KAAK4qC,yBACLzkC,YAAW,KACPnG,KAAKoD,OAAOwB,KAAK,YAAa,CAAEqR,QAASjW,KAAKiW,SAAU,GACzD,KACHjW,KAAK4qC,wBACT,CACJ,GACJ,CACA9C,UAAAA,GACI,OAAOxmC,EAAUtB,UAAM,OAAQ,GAAQ,aACnC,EAAIohC,EAAO78B,UAAU,6CACrB,EAAI68B,EAAO71B,WAAW,8BACtB,MAAMjH,EAAOpF,OAAO6U,OAAO,CAAE5Q,IAAKymB,OAAOO,SAASC,SAAUxJ,OAAQgJ,OAAOO,SAASvJ,QAAU5gB,KAAK+nC,aAAajU,cAChH9zB,KAAKmmB,OAAS,IAAI4gB,EAAS8D,WAAWvmC,EAAMtE,KAAKoD,cAC3CpD,KAAKwqC,cACf,GACJ,CACAG,eAAAA,GACI,IAAK3qC,KAAKmmB,OACN,MAAM,IAAIib,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwBiP,cAAe,+BAEnF,IAAKtX,KAAK6kC,YACN,MAAM,IAAIzD,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwBiP,cAAe,kEAEnF,MAAMwzB,EAAoB,IACnB,IAAIC,IAAI7rC,OAAOmkB,KAAKrjB,KAAKiW,QAAQI,YAC/B6b,QAAQrV,IAAgB,IAAI9X,EAAI+I,EAAI,OAA8G,QAArGA,EAAmD,QAA7C/I,EAAK/E,KAAKiW,QAAQI,WAAWwG,UAA+B,IAAP9X,OAAgB,EAASA,EAAG6X,gBAA6B,IAAP9O,OAAgB,EAASA,EAAGzG,QAAU,CAAC,IACjMyrB,KAAKjW,IAAc,EAAImqB,EAAagE,mBAAmBnuB,OAEhEiuB,EAAkBz2B,SAASwI,IACvB,IAAK7c,KAAKiW,QACN,OACJ,MAAMg1B,EAAkBjrC,KAAKiW,QAAQI,WAC/B60B,EAAmBD,EAAgBpuB,GAEzC,QADA,EAAIukB,EAAO78B,UAAU,kBAAmB2mC,GAChCruB,GACJ,IAAK,SACD,MAAM8qB,EAAO,CACT9qB,UAAWquB,GAEflrC,KAAKgoC,aAAanrB,GAAa,IAAIgqB,EAASsE,eAAexD,EAAM3nC,KAAKmmB,OAAQnmB,KAAKoD,QACnF,MACJ,IAAK,SACD,MAAMgoC,EAAQ,CACVvuB,UAAWquB,GAEf,IAAIG,EAAiB,IAAIpE,EAASjtB,QAAQoxB,EAAO,SAAUprC,KAAKmmB,OAAQnmB,KAAKoD,QAC7EpD,KAAKgoC,aAAanrB,GAAawuB,EAC/B,IAAIC,EAAgB,IAAIrE,EAASjtB,QAAQoxB,EAAO,QAASprC,KAAKmmB,OAAQnmB,KAAKoD,QAC3EpD,KAAKgoC,aAAa,SAAWsD,EAC7B,IAAIC,EAAc,IAAItE,EAASjtB,QAAQoxB,EAAO,MAAOprC,KAAKmmB,OAAQnmB,KAAKoD,QACvEpD,KAAKgoC,aAAa,OAASuD,EAE3B,MACJ,IAAK,MACD,MAAMC,EAAU,CACZ3uB,UAAWquB,GAEf,IAAIO,EAAc,IAAIrE,EAAMptB,QAAQwxB,EAASxrC,KAAKmmB,OAAQnmB,KAAKoD,QAC/DpD,KAAKgoC,aAAanrB,GAAa4uB,EAC/B,MACJ,IAAK,MACD,MAAMC,EAAU,CACZ7uB,UAAWquB,GAEf,IAAIS,EAAc,IAAI7E,EAAM8E,YAAYF,EAAS1rC,KAAKmmB,OAAQnmB,KAAKoD,QACnEuoC,EAAYn8B,KAAO,MACnBxP,KAAKgoC,aAAanrB,GAAa8uB,EAC/B,MACJ,IAAK,MACD,MAAME,EAAU,CACZhvB,UAAWquB,GAEf,IAAIY,EAAc,IAAI5E,EAAMltB,QAAQ6xB,EAAS,MAAO7rC,KAAKmmB,OAAQnmB,KAAKoD,QACtEpD,KAAKgoC,aAAa,OAAS8D,EAC3B,IAAIC,EAAa,IAAI7E,EAAMltB,QAAQ6xB,EAAS,UAAW7rC,KAAKmmB,OAAQnmB,KAAKoD,QACzEpD,KAAKgoC,aAAa,WAAa+D,EAC/B,MACJ,IAAK,QACD,IAAIC,EAAgB,IAAI7E,EAAQntB,QAAQ,CACpC6C,UAAWquB,GACZ,QAASlrC,KAAKmmB,OAAQnmB,KAAKoD,QAC9BpD,KAAKgoC,aAAanrB,GAAamvB,EAC/B,IAAIC,EAAe,IAAI9E,EAAQntB,QAAQ,CACnC6C,UAAWquB,GACZ,WAAYlrC,KAAKmmB,OAAQnmB,KAAKoD,QACjCpD,KAAKgoC,aAAa,YAAciE,EAChC,MACJ,IAAK,SACD,IAAIC,EAAiB,IAAI7E,EAASrtB,QAAQ,CACtC6C,UAAWquB,GACZlrC,KAAKmmB,OAAQnmB,KAAKoD,QACrBpD,KAAKgoC,aAAanrB,GAAaqvB,EAC/B,MACJ,IAAK,OACD,IAAIC,EAAe,IAAI7E,EAAOttB,QAAQ,CAClC6C,UAAWquB,GACZlrC,KAAKmmB,OAAQnmB,KAAKoD,QACrBpD,KAAKgoC,aAAanrB,GAAasvB,EAC/B,MACJ,IAAK,WACD,IAAIC,EAAmB,IAAI3E,EAAWztB,QAAQ,CAC1C6C,UAAWquB,GACZ,WAAYlrC,KAAKmmB,OAAQnmB,KAAKoD,QACjCpD,KAAKgoC,aAAanrB,GAAauvB,EAC/B,MACR,GAER,CACAxB,sBAAAA,GACI,GAA2B,qBAAhB5qC,KAAKmmB,OACZ,MAAM,IAAIib,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwBiP,cAAe,kCAEnFtX,KAAKmmB,OAAO0iB,OAAO71B,uBAAsB,KACrChT,KAAK2oC,oBACL3oC,KAAK4oC,SAAS,IAElB5oC,KAAK+G,GAAGvE,EAAY6pC,gBAAgBC,uBAAwBC,IACxDvsC,KAAKwsC,eAAeD,EAAa,IAErCvsC,KAAK+G,GAAGvE,EAAY6pC,gBAAgBI,mBAAoBC,IACpD,GAAIA,EAAY,CACZ,MAAMC,EAAeztC,OAAOmkB,KAAKqpB,GAAY,GACzC1sC,KAAKiW,UACLjW,KAAKiW,QAAQI,WAAWs2B,GAAgBD,EAAWC,GAC/C3sC,KAAKiW,UACLjW,KAAK4sC,QAAQ,iBAAkB5sC,KAAKiW,SACpCjW,KAAKoD,OAAOwB,KAAK,iBAAkB5E,KAAKiW,WAE5C,EAAImrB,EAAO78B,UAAU,yDAA0DsP,KAAKC,UAAU9T,KAAKiW,UAE3G,IAER,CACAkyB,WAAAA,CAAYtrB,GAGR,OAFA,EAAIukB,EAAO78B,UAAU,wBAAyBvE,KAAKgoC,eACnD,EAAI5G,EAAO78B,UAAU,oBAAqBsY,GACnC7c,KAAKgoC,aAAanrB,EAC7B,CACAitB,aAAAA,CAAczgC,GACVrJ,KAAKuoC,YAAcl/B,EACnB,MAAM,WAAEgN,EAAU,cAAE5B,GAAkBpL,EAChC/E,EAAO,CACTsc,OAAQgJ,OAAOO,SAASvJ,OACxBzd,IAAKymB,OAAOO,SAASC,SACrB5a,KAAMxP,KAAK+nC,aAAajU,aAAatkB,KACrCukB,KAAM/zB,KAAK+nC,aAAajU,aAAaC,MAEzC/zB,KAAKyU,cAAgBvV,OAAO6U,OAAO,CAAEmB,SAAU5Q,GAAQmQ,IACvD,EAAI2sB,EAAO78B,UAAU,iCAAkCvE,KAAKyU,eAC5DzU,KAAKmmB,OAAO1R,cAAgBzU,KAAKyU,cACjCzU,KAAK4sC,QAAQ,gBAAiBn4B,EAClC,CACA2zB,aAAAA,CAAchrB,GACV,IAAIrY,EACJ,IAAK8X,EAAW+hB,IAAsB,OAAVxhB,QAA4B,IAAVA,OAAmB,EAASA,EAAMzC,MAAM,OAAS,CAAC,GAAI,IACpG,IAAK3a,KAAKiW,UAAYjW,KAAKiW,QAAQI,aAAenX,OAAOmkB,KAAKrjB,KAAKiW,QAAQI,YAAYhP,OAEnF,OADA,EAAI+5B,EAAO78B,UAAU,mBAAoBsY,EAAW+hB,GAC7C,CAAC/hB,EAAW+hB,GAEvB,GAAI/hB,EAAW,CACX,IAAK7c,KAAK6sC,0BAA0BhwB,GAChC,MAAM,IAAIukB,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwB0iB,oBAAqB,cAAclO,4EAEvG,GAAI+hB,GAAWxhB,EAAO,EAClB,EAAIgkB,EAAO78B,UAAU,mCAAiCsY,EAAWhJ,KAAKC,UAAU9T,KAAKiW,QAAQI,aAC7F,MAAMy2B,EAA0D,QAA7C/nC,EAAK/E,KAAKiW,QAAQI,WAAWwG,UAA+B,IAAP9X,OAAgB,EAASA,EAAGkY,OAEpG,IADA,EAAImkB,EAAO78B,UAAU,wBAAyBsP,KAAKC,UAAUg5B,GAAY1vB,GACrE0vB,IAAcA,EAAUjqB,SAASzF,GACjC,MAAM,IAAIgkB,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwB0iB,oBAAqB,oCAAoC3N,KAEjI,CACJ,CACA,GAAIP,GAAa+hB,EAEb,OADA,EAAIwC,EAAO78B,UAAU,mBAAoBsY,EAAW+hB,GAC7C,CAAC/hB,EAAW+hB,GAEvB,IAAImO,GAAmB,EAAI/F,EAAagE,mBAAmB9rC,OAAOmkB,KAAKrjB,KAAKiW,QAAQI,YAAY,IAChG,MAAMkzB,EAAevpC,KAAKgoC,aAAa+E,GAAkBC,kBAEzD,OADA,EAAI5L,EAAO78B,UAAU,qBAAsBglC,GACpC,CAACwD,EAAkBxD,EAC9B,CACAsD,yBAAAA,CAA0BI,GACtB,IAAIloC,EAAI+I,EACR,GAAI5O,OAAOmkB,MAA8B,QAAvBte,EAAK/E,KAAKiW,eAA4B,IAAPlR,OAAgB,EAASA,EAAGsR,aAAe,CAAC,GACxFyc,KAAKnhB,IAAQ,EAAIq1B,EAAagE,mBAAmBr5B,KACjDkR,SAASoqB,GACV,OAAO,EAEX,IAAIJ,GAA4B,EAShC,OARA3tC,OAAOwpB,QAAgC,QAAvB5a,EAAK9N,KAAKiW,eAA4B,IAAPnI,OAAgB,EAASA,EAAGuI,aAAe,CAAC,GACtFhC,SAAQwI,IACTA,EAAUI,OAAO5I,SAAQ+I,IACjBA,EAAMzC,MAAM,KAAK,IAAMsyB,IACvBJ,GAA4B,EAChC,GACF,IAECA,CACX,CACArH,4BAAAA,CAA6B3oB,GACzB,OAAO7c,KAAKmoC,YAAYtrB,GAAW2rB,iBACvC,CACA0E,gCAAAA,CAAiCrwB,GAC7B,OAAO7c,KAAKmoC,YAAYtrB,GAAWmwB,iBACvC,CACAxE,eAAAA,GACI,OAAOlnC,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,MAAO6c,GAAa7c,KAAKooC,gBACzB,aAAapoC,KAAKmoC,YAAYtrB,GAAW2rB,iBAC7C,GACJ,CACAgE,cAAAA,CAAeW,GACX,IAAIpoC,EACJ,KAA8B,QAAvBA,EAAK/E,KAAKiW,eAA4B,IAAPlR,OAAgB,EAASA,EAAGsR,YAC9D,OACJ,MAAOwG,EAAW+hB,GAAW5+B,KAAKooC,cAAc+E,GAC3CvO,IAED5+B,KAAKiW,QAAQI,WAAWwG,KACxB7c,KAAKiW,QAAQI,WAAWwG,GAAW0sB,aAAe3K,EAClD5+B,KAAK4sC,QAAQ,iBAAkB5sC,KAAKiW,UAExCjW,KAAKoD,OAAOwB,KAAK,eAAgBg6B,GACrC,CACA1oB,SAAAA,GACIlW,KAAK2qC,kBACD3qC,KAAKiW,SACLjW,KAAK4sC,QAAQ,iBAAkB5sC,KAAKiW,SAExCjW,KAAKoD,OAAOwB,KAAK,UAAW,CAAEqR,QAASjW,KAAKiW,UAC5CjW,KAAK4qC,wBACT,CACAhC,OAAAA,GACI,OAAOtnC,EAAUtB,UAAM,OAAQ,GAAQ,YACnCA,KAAKiW,aAAU3V,EACfN,KAAKmmB,OAAOlQ,aAAU3V,EACtBN,KAAKotC,uBAAoB9sC,EACzBN,KAAK4sC,QAAQ,0BAAsBtsC,GACnCN,KAAK4sC,QAAQ,yBAAqBtsC,GAClCN,KAAK4sC,QAAQ,sBAAkBtsC,EACnC,GACJ,CACAssC,OAAAA,CAAQj7B,EAAKrN,GAET,OADA,EAAI88B,EAAO78B,UAAU,iCAAkCoN,EAAKrN,GACrDtE,KAAKmmB,OAAO0iB,OAAOr2B,kBAAkBd,mBAAmBC,EAAKrN,EACxE,CACAomC,YAAAA,CAAa/4B,GACT,OAAOrQ,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,OAAOA,KAAKmmB,OAAO0iB,OAAOr2B,kBAAkBV,kBAAkBH,EAClE,GACJ,CACA07B,gBAAAA,CAAiB/e,EAAMlR,GACnB,IACI,MAAM,UAAEP,EAAS,aAAEorB,GAAiBjoC,KAAKkoC,6BAA6B5Z,EAAMlR,GAC5E,OAAOpd,KAAKmoC,YAAYtrB,GAAWwwB,iBAAiBpF,EACxD,CACA,MAAO/lC,GACH,OAAO,CACX,CACJ,EAEJ9C,EAAQwnC,qBAAuBA,EAC/BxnC,EAAAA,WAAkBwnC,C,oCClnBlB,IAAI7mC,EAAmBC,MAAQA,KAAKD,kBAAqBb,OAAOe,OAAU,SAASC,EAAGC,EAAGC,EAAGC,QAC7EC,IAAPD,IAAkBA,EAAKD,GAC3B,IAAIG,EAAOrB,OAAOsB,yBAAyBL,EAAGC,GACzCG,KAAS,QAASA,GAAQJ,EAAEM,WAAaF,EAAKG,UAAYH,EAAKI,gBAClEJ,EAAO,CAAEK,YAAY,EAAMC,IAAK,WAAa,OAAOV,EAAEC,EAAI,IAE5DlB,OAAOC,eAAee,EAAGG,EAAIE,EACjC,EAAM,SAASL,EAAGC,EAAGC,EAAGC,QACTC,IAAPD,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,EACd,GACIwlB,EAAgB5lB,MAAQA,KAAK4lB,cAAiB,SAASzlB,EAAGf,GAC1D,IAAK,IAAIymB,KAAK1lB,EAAa,YAAN0lB,GAAoB3mB,OAAOiC,UAAUC,eAAeC,KAAKjC,EAASymB,IAAI9lB,EAAgBX,EAASe,EAAG0lB,EAC3H,EACA3mB,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQokC,oBAAsBpkC,EAAQsmC,gBAAkBtmC,EAAQolC,eAAiBplC,EAAQ+hC,kBAAoB/hC,EAAQm/B,eAAiBn/B,EAAQwnC,0BAAuB,EACrKhhB,EAAa9lB,EAAQ,OAAqBV,GAC1CwmB,EAAa9lB,EAAQ,OAAeV,GACpC,IAAIkuC,EAAyBxtC,EAAQ,OACrCZ,OAAOC,eAAeC,EAAS,uBAAwB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOysC,EAAuB1G,oBAAsB,IAClJ,IAAI2G,EAAmBztC,EAAQ,OAC/BZ,OAAOC,eAAeC,EAAS,iBAAkB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO0sC,EAAiBhP,cAAgB,IAChI,IAAIiP,EAAsB1tC,EAAQ,OAClCZ,OAAOC,eAAeC,EAAS,oBAAqB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO2sC,EAAoBrM,iBAAmB,IACzI,IAAIsM,EAAmB3tC,EAAQ,OAC/BZ,OAAOC,eAAeC,EAAS,iBAAkB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO4sC,EAAiBjJ,cAAgB,IAChI,IAAIkJ,EAAoB5tC,EAAQ,OAChCZ,OAAOC,eAAeC,EAAS,kBAAmB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO6sC,EAAkBhI,eAAiB,IACnI,IAAIiI,EAAwB7tC,EAAQ,MACpCZ,OAAOC,eAAeC,EAAS,sBAAuB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO8sC,EAAsBnK,mBAAqB,IAC/I5d,EAAa9lB,EAAQ,OAAqBV,E,qCC9B1C,IAAIW,EAAmBC,MAAQA,KAAKD,kBAAqBb,OAAOe,OAAU,SAASC,EAAGC,EAAGC,EAAGC,QAC7EC,IAAPD,IAAkBA,EAAKD,GAC3B,IAAIG,EAAOrB,OAAOsB,yBAAyBL,EAAGC,GACzCG,KAAS,QAASA,GAAQJ,EAAEM,WAAaF,EAAKG,UAAYH,EAAKI,gBAClEJ,EAAO,CAAEK,YAAY,EAAMC,IAAK,WAAa,OAAOV,EAAEC,EAAI,IAE5DlB,OAAOC,eAAee,EAAGG,EAAIE,EACjC,EAAM,SAASL,EAAGC,EAAGC,EAAGC,QACTC,IAAPD,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,EACd,GACIwlB,EAAgB5lB,MAAQA,KAAK4lB,cAAiB,SAASzlB,EAAGf,GAC1D,IAAK,IAAIymB,KAAK1lB,EAAa,YAAN0lB,GAAoB3mB,OAAOiC,UAAUC,eAAeC,KAAKjC,EAASymB,IAAI9lB,EAAgBX,EAASe,EAAG0lB,EAC3H,EACA3mB,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDumB,EAAa9lB,EAAQ,OAAYV,E,qCChBrBU,EAAA,OAACA,EAAA,OACb,IAAIwB,EAAatB,MAAQA,KAAKsB,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMtC,GAAS,OAAOA,aAAiBoC,EAAIpC,EAAQ,IAAIoC,GAAE,SAAUG,GAAWA,EAAQvC,EAAQ,GAAI,CAC3G,OAAO,IAAKoC,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU1C,GAAS,IAAM2C,EAAKN,EAAUO,KAAK5C,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAS9C,GAAS,IAAM2C,EAAKN,EAAU,SAASrC,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKd,GAAUA,EAAOkB,KAAOR,EAAQV,EAAO7B,OAASsC,EAAMT,EAAO7B,OAAOgD,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACA/C,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQyrC,gBAAa,EACrB,MAAMzJ,EAASthC,EAAQ,OACjBknC,EAAelnC,EAAQ,OACvB8tC,EAAuB9tC,EAAQ,OAC/B0C,EAAc1C,EAAQ,OAC5B,MAAM+qC,UAAmBzJ,EAAOrb,YAC5B7iB,WAAAA,CAAY2qC,EAAUzqC,GAClB8iB,MAAM2nB,GAEN7tC,KAAKuI,QAAWc,GAAW/H,EAAUtB,UAAM,OAAQ,GAAQ,YACvD,OAAO,IAAI6B,SAAQ,CAACD,EAASE,IAAWR,EAAUtB,UAAM,OAAQ,GAAQ,YACpE,IACI,IAAI6U,EAAiB,IACrB,EAAIusB,EAAO78B,UAAU,4BAA6BsP,KAAKC,UAAUzK,IACjE,IAAIykC,EAAqB,CACrBt+B,KAAM,kBACNu+B,oBAAoB,EAAI/G,EAAagH,mCAAmC3kC,EAAOgN,YAC/EgzB,oBAAoB,EAAIrC,EAAagH,mCAAmC3kC,EAAOggC,qBAEnFrpC,KAAK6oC,OAAO11B,8BAA6B,MACrC,EAAIiuB,EAAO78B,UAAU,iCACrBvE,KAAKoD,OAAOwB,KAAKpC,EAAY6pC,gBAAgB4B,mBAAmB,IAEhE5kC,EAAOugC,cACPkE,EAAmBl2B,4BAA8B,EAAIg2B,EAAqBM,sCAAsC7kC,EAAOugC,YAAakE,EAAmBC,qBAE3Jl5B,EAAe3B,KAAK46B,IACpB,EAAI1M,EAAO78B,UAAU,oCAAqCsP,KAAKC,UAAUe,IACzE7U,KAAK6oC,OAAOtyB,iBAAiB1B,EAAgB3V,OAAO6U,OAAO,CAAEmB,SAAUlV,KAAKmuC,UAAY9kC,EAAOoL,gBAAiB9F,IACxGA,GAAQA,EAAKkG,kBACb,EAAIusB,EAAO78B,UAAU,wCAAyCoK,EAAKkG,iBACnE,EAAIusB,EAAO78B,UAAU,wBAAwB,EAAI68B,EAAOrqB,YAAYpI,EAAKkG,eAAgB7U,KAAKyU,cAAcuC,UAC5GhX,KAAKoD,OAAOwB,KAAK,eAAe,EAAIw8B,EAAOrqB,YAAYpI,EAAKkG,eAAgB7U,KAAKyU,cAAcuC,UAC/FhX,KAAKoD,OAAOwB,KAAK,qBAAqB,EAAIw8B,EAAOhU,2BAA2Bze,EAAKkG,eAAevH,MAAOqB,EAAKkG,eAAehG,YAC3H,EAAIuyB,EAAO78B,UAAU,sCAAsCsP,KAAKC,UAAUnF,MAC1E3O,KAAKoD,OAAOwB,KAAK,4BAA6B+J,GAClD,IACDtM,MAAM4T,GAAY3U,EAAUtB,UAAM,OAAQ,GAAQ,aACjD,EAAIgnC,EAAaoH,qBAAqBn4B,EAAS5M,EAAOgN,WAAYhN,EAAOggC,mBAAoBrpC,KAAKyU,gBAClG,EAAI2sB,EAAO78B,UAAU,gCAAgCsP,KAAKC,UAAUmC,MAChE5M,EAAOugC,oBACD,EAAIgE,EAAqBS,8BAA8Bp4B,EAAS5M,EAAOugC,cAEjFhoC,EAAQqU,EACZ,MAAIrG,OAAO1N,KACP,EAAIk/B,EAAO78B,UAAU,8BAA8BsP,KAAKC,UAAU5R,MAClElC,KAAKoD,OAAOwB,KAAK,gBAAiB1C,GAClCJ,EAAOI,EAAE,GAEjB,CACA,MAAOqN,IACH,EAAI6xB,EAAO78B,UAAU,yBAAyBsP,KAAKC,UAAUvE,MAC7DzN,EAAOyN,EACX,CACJ,KACJ,IACAvP,KAAKsU,eAAkBG,GAAkBnT,EAAUtB,UAAM,OAAQ,GAAQ,YACrE,OAAO,IAAI6B,SAAQ,CAACD,EAASE,KACzB9B,KAAK6oC,OAAOv0B,eAAeG,GAAgBwB,IACvCrU,EAAQqU,EAAQ,GAClB,GAEV,IACAjW,KAAK8B,OAAUuH,GAAW/H,EAAUtB,UAAM,OAAQ,GAAQ,YAMtD,IAYJA,KAAK0T,QAAWrK,GAAW/H,EAAUtB,UAAM,OAAQ,GAAQ,YACvD,OAAO,IAAI6B,SAAQ,CAACD,EAASE,IAAWR,EAAUtB,UAAM,OAAQ,GAAQ,YACpE,IAAI+E,EAAI+I,GACR,EAAIszB,EAAO78B,UAAU,+BAAgCvE,KAAK6oC,OAAOr2B,kBAAkBP,4BAA2D,QAA7BlN,EAAK/E,KAAKyU,qBAAkC,IAAP1P,OAAgB,EAASA,EAAG6P,iBAAkBf,KAAKC,UAAUzK,IACnN,KAEuC,QAA7ByE,EAAK9N,KAAKyU,qBAAkC,IAAP3G,OAAgB,EAASA,EAAG8G,oBAAqB,EAAIwsB,EAAOrrB,UACnG/V,KAAKsuC,sBAEHtuC,KAAK6oC,OAAO3iC,KAAKmD,EAAQ,CAC3BzH,QAAUuS,IAGN,UAFOA,EAASZ,WAChB,EAAI6tB,EAAO78B,UAAU,6BAA8BsP,KAAKC,UAAUK,IAC7D,UAAWA,GAAaA,EAAS5E,MAAO,CACzC,IAAIA,EAAQ4E,EAAS5E,MACrBzN,EAAO,IAAIs/B,EAAOh5B,gBAAgB+L,EAAS5E,MAAMtK,KAAMkP,EAASpE,OAAS,IAAMR,EAAMhG,SACzF,MAEI3H,EAAQuS,EACZ,EAEJH,MAAOA,KACH,IAAIjP,IACC,EAAIq8B,EAAOrrB,WAA2C,QAA7BhR,EAAK/E,KAAKyU,qBAAkC,IAAP1P,OAAgB,EAASA,EAAG6P,mBAC3F5U,KAAKsuC,eACT,GAGZ,CACA,MAAOpsC,GACHJ,EAAOI,EACX,CACJ,KACJ,IAQAlC,KAAK0I,WAAa,IAAMpH,EAAUtB,UAAM,OAAQ,GAAQ,YACpD,OAAO,IAAI6B,SAAQ,CAACD,EAASE,KACzB9B,KAAK6oC,OAAO3iC,KAAK,CACb6J,OAAQ,cACT,CACCiE,MAAOA,KACHpS,GAAS,QAEdtB,EAAW,OAAUsP,OAAOL,IAC3Bgf,QAAQzrB,IAAI,gBAAgB+Q,KAAKC,UAAUvE,MAC3CzN,EAAOyN,EAAM,GACf,GAEV,IACAvP,KAAK6oC,OAAS,IAAIzH,EAAO9uB,OAAO,IAAI8uB,EAAO92B,kBAAkBujC,EAASr+B,OACtExP,KAAKoD,OAASA,EACdpD,KAAKmuC,SAAWN,CACpB,CACAS,aAAAA,GACI,IAAIvpC,EAGJ,IADA,EAAIq8B,EAAO78B,UAAU,kCACa,QAA7BQ,EAAK/E,KAAKyU,qBAAkC,IAAP1P,OAAgB,EAASA,EAAGiS,QAAS,CAC3E,IAAI7T,GAAM,EAAIi+B,EAAO9T,8BAAyBhtB,EAAWN,KAAKyU,cAAcwC,eAC5E,EAAImqB,EAAOjqB,kCAAkChU,EACjD,MAEI,EAAIi+B,EAAO1T,iBAAiB0T,EAAOvrB,iBAG3C,CACAw0B,cAAAA,GACI,OAAO/oC,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,OAAO,IAAI6B,SAAQ,CAACD,EAASE,KACzB9B,KAAK6oC,OAAO3iC,KAAK,CACb6J,OAAQ,sBACT,CACCnO,QAAUuS,IAGN,UAFOA,EAASZ,WAChB,EAAI6tB,EAAO78B,UAAU,oCAAqCsP,KAAKC,UAAUK,IACpE,UAAWA,GAAaA,EAAS5E,MAAO,CACzC,IAAIA,EAAQ4E,EAAS5E,MACrBzN,EAAO,IAAIs/B,EAAOh5B,gBAAgB+L,EAAS5E,MAAMtK,KAAMkP,EAASpE,OAAS,IAAMR,EAAMhG,SACzF,KACK,CACD,IAAIglC,EAAgBp6B,EAASjT,OAC7BU,GAAQ,EAAIgsC,EAAqBY,uBAAuBD,GAC5D,KAEL3+B,OAAOL,IACNgf,QAAQzrB,IAAI,gBAAgB+Q,KAAKC,UAAUvE,MAC3CzN,EAAOyN,EAAM,GACf,GAEV,GACJ,EAEJnQ,EAAQyrC,WAAaA,C,qCC9LT/qC,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACb,IAAIwB,EAAatB,MAAQA,KAAKsB,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMtC,GAAS,OAAOA,aAAiBoC,EAAIpC,EAAQ,IAAIoC,GAAE,SAAUG,GAAWA,EAAQvC,EAAQ,GAAI,CAC3G,OAAO,IAAKoC,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU1C,GAAS,IAAM2C,EAAKN,EAAUO,KAAK5C,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAS9C,GAAS,IAAM2C,EAAKN,EAAU,SAASrC,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKd,GAAUA,EAAOkB,KAAOR,EAAQV,EAAO7B,OAASsC,EAAMT,EAAO7B,OAAOgD,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACIiW,EAAmBlY,MAAQA,KAAKkY,iBAAoB,SAAUjX,GAC9D,OAAQA,GAAOA,EAAIR,WAAcQ,EAAM,CAAE,QAAWA,EACxD,EACA/B,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQqvC,2BAAwB,EAChCrvC,EAAQ8qC,gCAAkCA,EAC1C9qC,EAAQsvC,8BAAgCA,EACxCtvC,EAAQivC,6BAA+BA,EACvCjvC,EAAQ8uC,qCAAuCA,EAC/C9uC,EAAQovC,sBAAwBA,EAChC,MAAMpN,EAASthC,EAAQ,OACjB6uC,EAASz2B,EAAgBpY,EAAQ,QACjC8uC,EAAsB9uC,EAAQ,OAC9B0nC,EAAa1nC,EAAQ,OAC3B,SAASwkC,EAAQjlC,GACb,MAAwB,kBAAVA,GAAgC,OAAVA,GAAkB4jB,MAAMqhB,QAAQjlC,EACxE,CACA,SAASwvC,EAASxvC,GACd,MAAwB,kBAAVA,GAAgC,OAAVA,IAAmB4jB,MAAMqhB,QAAQjlC,EACzE,CAeA,SAAS6qC,EAAgCzE,GACrC,IAAIqJ,EAAkB,IAAI1N,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwB8iB,sBAChF,IAAI4jB,EAAY,CACZh/B,OAAQ01B,EAAc11B,OACtB6uB,QAAS6G,EAAc7G,QACvBrvB,MAAO,CACHtK,KAAM6pC,EAAgB7pC,KACtBsE,QAASulC,EAAgBvlC,UAGjC,OAAOwlC,CACX,CACA,SAASL,EAA8BjJ,EAAexvB,GAClD,OAAO3U,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,IAAI+E,EAAI+I,EAAIC,EAAIC,EAAIC,EACpB,KACI,EAAImzB,EAAO78B,UAAU,+CAAgDsP,KAAKC,UAAU2xB,IACpF,IAAIuJ,EAAiB,CAAC,EACtB,GAA6B,uBAAzBvJ,EAAc11B,OAAiC,CAC/C,IAAIk/B,EAAmE,QAArDlqC,EAAKkR,EAAQI,WAAW+qB,EAAOxV,wBAAqC,IAAP7mB,OAAgB,EAASA,EAAG6X,SAASsV,QAAO,SAAUgd,GACjI,OAAOA,EAAS5+B,WAAWm1B,EAAc7G,QAC7C,IAAG,GACH,MAAMuQ,GAAa,EAAI3H,EAAW4H,sBAAsBH,GACxD,GAAIxJ,EAAcp8B,QAAU8lC,GAAc,YAAa1J,EAAcp8B,OAAQ,CACzE,IAAIgmC,EAAc5J,EAAcp8B,OAAOE,QAavC,MAZ+E,eAAhD,QAAzBuE,EAAKmI,EAAQwB,cAA2B,IAAP3J,OAAgB,EAASA,EAAGujB,WAC/Dge,EAAcV,EAAO30B,QAAQzE,QAAO,EAAIq5B,EAAoBU,oBAAoBD,KAEpF5J,EAAcp8B,OAAS,CACnBE,QAAS8lC,EACT,OAAUF,GAEdH,EAAiB,CACbniC,UAAWsiC,IAEf,EAAI/N,EAAO78B,UAAU,0CAA2CsP,KAAKC,UAAUm7B,GAAaE,IAC5F,EAAI/N,EAAO78B,UAAU,qCAAsCsP,KAAKC,UAAUk7B,IACnEA,CACX,CAEI,MAAM,IAAI5N,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwB8iB,qBAExE,CACK,GAA6B,oBAAzBsa,EAAc11B,QAAyD,4BAAzB01B,EAAc11B,OAAsC,CACvG,GAAI,YAAa01B,EAAcp8B,QAAUo8B,EAAcp8B,OAAOE,QAAS,CACnE,IAAIgmC,EAAa17B,KAAKygB,MAAMzgB,KAAKC,UAAU2xB,EAAcp8B,OAAOE,UAC5DimC,EAAiBtwC,OAAOwpB,OAAO6mB,GAC/BjT,EAAa,IAAI1U,WAAW4nB,GAC5Bxa,EAAU,IAAItP,YAAY,QAC1B+pB,EAAah6B,KAAKuf,EAAQrP,OAAO2W,IAkBrC,OAjBAmJ,EAAcp8B,OAAS,CACnBE,QAASmmC,KAAKD,IAElBlhB,QAAQzrB,IAAI,gDAAiD+Q,KAAKC,UAAU2xB,EAAcp8B,QAASomC,GACtE,oBAAzBhK,EAAc11B,OACdi/B,EAAiB,CACb,aAAgBS,EAChB,UAAa,IAGa,4BAAzBhK,EAAc11B,SACnBi/B,EAAiB,CACb,MAASS,EACT,UAAa,MAGrB,EAAIrO,EAAO78B,UAAU,0DAA2DsP,KAAKC,UAAUk7B,IACxFA,CACX,CAEI,MAAM,IAAI5N,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwB8iB,qBAExE,CACK,GAA6B,oBAAzBsa,EAAc11B,OAA8B,CACjD,IAAI4/B,EAAoE,QAArD5hC,EAAKkI,EAAQI,WAAW+qB,EAAO3V,wBAAqC,IAAP1d,OAAgB,EAASA,EAAG6O,SAASsV,QAAO,SAAU0d,GAClI,OAAOA,EAASt/B,WAAWm1B,EAAc7G,QAC7C,IACIiR,EAAaF,EAAY,GAC7B,MAAMG,GAAa,EAAItI,EAAW4H,sBAAsBS,GAExD,IADA,EAAIzO,EAAO78B,UAAU,uCAAwCsP,KAAKC,UAAU+7B,GAAaC,GACrFA,EAAY,CACZ,KAAI,YAAarK,EAAcp8B,UAAUo8B,EAAcp8B,OAAOE,SAAmD,kBAAjCk8B,EAAcp8B,OAAOE,QAOjG,MAAM,IAAI63B,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwB8iB,sBAIpE,OAVIsa,EAAcp8B,OAAS,CACnB6Z,KAAM4sB,EACN5Q,QAASuG,EAAcp8B,OAAOE,SAMtCk8B,EAAcp8B,OAAO,QAAUymC,GAC/B,EAAI1O,EAAO78B,UAAU,kCAAmCsP,KAAKC,UAAUk7B,IAChEA,CACX,CAEI,MAAM,IAAI5N,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwB8iB,qBAExE,CACK,GAA6B,sBAAzBsa,EAAc11B,OAAgC,CACnD,IAAIggC,EAAYtK,EAAcp8B,OAC1B2mC,EAAuE,QAAvDhiC,EAAKiI,EAAQI,WAAW+qB,EAAO5V,0BAAuC,IAAPxd,OAAgB,EAASA,EAAG4O,SAASsV,QAAO,SAAU+d,GACrI,OAAOA,EAAS3/B,WAAWm1B,EAAc7G,QAC7C,IAAG,GACCsR,GAAe,EAAI1I,EAAW4H,sBAAsBY,GACxD,GAAID,GAAaG,EAAc,CAC3B,IAAIz1B,EAAS,QACTlR,EAAU,GAAIqb,EAAQ,GAC1B,IAAIurB,EAAc11B,EAClB,IAAI21B,EAAcxmB,OAAOO,SAASjB,SAAW,KAAOU,OAAOO,SAASC,SAChE,YAAa2lB,GAAaA,EAAUvzB,UACpC2zB,GAAe,cAAgBD,GAE/B,gBAAiBH,GAAaA,EAAUK,cACxCD,GAAe,kBAAoBC,GAEvC,IAAIC,EAAe,EACf,YAAaN,GAAaA,EAAUnR,UACX,iBAArBmR,EAAUnR,QACVyR,EAAe,EAEW,oBAArBN,EAAUnR,UACfyR,EAAe,GAEnBF,GAAe,cAAgBE,GAE/B,YAAaN,IACbI,GAAe,cAAgBJ,EAAUxmC,QACzCA,EAAUwmC,EAAUxmC,SAEpB,UAAWwmC,IACXI,GAAe,YAAcJ,EAAUnrB,MACvCA,EAAQmrB,EAAUnrB,OAEtB,MAAMvP,GAAY,IAAIC,aAAcC,OAAO46B,GACrC1a,EAAMxS,MAAMC,KAAK7N,GAClByd,KAAI6I,GAAQA,EAAKh3B,SAAS,IAAIy+B,SAAS,EAAG,OAC1C7oB,KAAK,IAgBV,OAfAkrB,EAAcp8B,OAAS,CACnB,QAAWosB,IAEf,EAAI2L,EAAO78B,UAAU,mCAAoCsP,KAAKC,UAAU2xB,IACxEuJ,EAAiB,CACbxyB,QAAS0zB,EACTE,YAAaA,EACbxR,QAASyR,EACTF,YAAaA,EACb5mC,QAASA,EACTqb,MAAOA,EACPnK,OAAQA,EACRM,UAAW,KAEf,EAAIqmB,EAAO78B,UAAU,oCAAqCsP,KAAKC,UAAUk7B,IAClEA,CACX,CAEI,MAAM,IAAI5N,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwB8iB,qBAExE,CACK,GAA6B,yBAAzBsa,EAAc11B,OAAmC,CACtD,IAAIugC,EAA2H,QAA1GriC,EAAiB,OAAZgI,QAAgC,IAAZA,OAAqB,EAASA,EAAQI,WAAW+qB,EAAO7V,2BAAwC,IAAPtd,OAAgB,EAASA,EAAG2O,SAASsV,QAAO,SAAUqe,GACzL,OAAOA,EAAejgC,WAAWm1B,EAAc7G,QACnD,IAAG,GACH,MAAM4R,GAAgB,EAAIhJ,EAAW4H,sBAAsBkB,GAC3D,IAAIG,EAAahL,EAAcp8B,OAAO,WACtC,MAAMqnC,GAAsB,EAAI9B,EAAoB+B,gBAAgBF,GAGpE,IAFA,EAAIrP,EAAO78B,UAAU,4CAA6CsP,KAAKC,UAAUw8B,GAAgBE,IACjG,EAAIpP,EAAO78B,UAAU,4CAA6CmsC,GAC9DD,GAAcD,EAAe,CAC7B,MAAM5O,EAAU,CACZC,SAAU,GACVC,eAAgB,IAChBC,SAAU,IACVC,IAAK,CACDC,IAAK,IACLC,OAAQ,IAEZC,KAAM,CAAC,CACC,KAAQ,mBACR,MAAS,CACL,OAAUqO,EACV,KAAQE,KAGpBtO,KAAM,IAQV,OANAqD,EAAcp8B,OAAS,CACnB,OAAUmnC,EACV,SAAY/K,EAAc7G,QAAQjkB,MAAM,KAAK,GAC7C,KAAQinB,IAEZ,EAAIR,EAAO78B,UAAU,uCAAwCsP,KAAKC,UAAUk7B,IACrEA,CACX,CAEI,MAAM,IAAI5N,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwB8iB,qBAExE,EACA,EAAIiW,EAAO78B,UAAU,sCAAuCsP,KAAKC,UAAU2xB,GAC/E,CACA,MAAOl2B,GACH,MAAMA,CACV,CACJ,GACJ,CACA,SAAS8+B,EAA6Bp4B,EAASwvB,GAC3C,OAAOnkC,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,IAAI+E,EACJ,IACI,GAAIkR,EAAQ4B,aAAc,EACtB,EAAIupB,EAAO78B,UAAU,6CAA8CsP,KAAKC,UAAUmC,EAAQ4B,gBAC1F,EAAIupB,EAAO78B,UAAU,mDAAoDsP,KAAKC,UAAUmC,EAAQI,aAChG,IAAK,MAAMu6B,KAAc36B,EAAQ4B,aAE7B,IADA,EAAIupB,EAAO78B,UAAU,2CAA4CsP,KAAKC,UAAU88B,IAC5E,WAAYA,EACZ,GAA0B,uBAAtBA,EAAW7gC,OAAiC,CAC5C,IAAI8gC,EAAoBD,EAAW1vC,QACnC,EAAIkgC,EAAO78B,UAAU,yCAA0CqsC,EAAWhS,SAC1E,IAAIG,EAAgE,QAArDh6B,EAAKkR,EAAQI,WAAW+qB,EAAOxV,wBAAqC,IAAP7mB,OAAgB,EAASA,EAAG6X,SAASsV,QAAO,SAAU6M,GAE9H,OADA,EAAIqC,EAAO78B,UAAU,8BAA+Bw6B,GAC7CA,EAAQzuB,WAAWsgC,EAAWhS,QACzC,IAAG,IACH,EAAIwC,EAAO78B,UAAU,qCAAsCssC,EAAmB9R,GAC1E8R,GAAqB9R,IACrB6R,EAAW1vC,OAAS,CAChB,UAAaytC,EAAO30B,QAAQ2L,OAAOkrB,GACnC,WAAa,EAAIrJ,EAAW4H,sBAAsBrQ,IAG9D,MACK,GAA0B,oBAAtB6R,EAAW7gC,QAAsD,4BAAtB6gC,EAAW7gC,OAAsC,CACjG,IAAI+gC,EAAYrL,EAAcvT,QAAO,SAAU6e,GAC3C,OAAOA,EAAchhC,SAAW6gC,EAAW7gC,MAC/C,IAAG,GACH,GAAI+gC,GAAaA,EAAUznC,QAAU,YAAaynC,EAAUznC,OAAQ,CAChE,IAAIkmC,EAAauB,EAAUznC,OAAOE,QAC9BynC,EAAgBv7B,KAAK85B,GACzBhhB,QAAQzrB,IAAI,gDAAiDysC,EAAYyB,GAC/C,oBAAtBJ,EAAW7gC,OACX6gC,EAAW1vC,OAAS,CAChB,aAAgB8vC,EAChB,UAAaJ,EAAW1vC,QAGD,4BAAtB0vC,EAAW7gC,SAChB6gC,EAAW1vC,OAAS,CAChB,MAAS8vC,EACT,UAAaJ,EAAW1vC,QAGpC,CACJ,MACK,GAA0B,sBAAtB0vC,EAAW7gC,OAAgC,CAShD,GAR2B,cAAvB6gC,EAAWhS,QACXgS,EAAWhS,QAAU,gBAEO,mBAAvBgS,EAAWhS,UAChBgS,EAAWhS,QAAU,oBAEzBgS,EAAW1vC,OAAS2S,KAAKygB,MAAMsc,EAAW1vC,QAC1CqtB,QAAQzrB,IAAI,yDAA0D+Q,KAAKC,UAAU88B,EAAW1vC,SAC5F0vC,EAAW1vC,QAAU,cAAe0vC,EAAW1vC,OAAQ,CACvD,IAAI+vC,EAAiBL,EAAW1vC,OAAO6Z,UACnCk2B,GAAkBA,EAAe3gC,WAAW,QAC5C2gC,EAAiBA,EAAeh2B,MAAM,EAAGg2B,EAAe5pC,QACxDupC,EAAW1vC,OAAO6Z,UAAYk2B,EAEtC,CACA1iB,QAAQzrB,IAAI,wDAAyD+Q,KAAKC,UAAU88B,EAAW1vC,QACnG,MACK,GAA0B,yBAAtB0vC,EAAW7gC,OAChB6gC,EAAW1vC,OAAS2S,KAAKygB,MAAMsc,EAAW1vC,aAEzC,GAAyB,wBAArB0vC,EAAW7gC,OAAkC,CAClD,IAAIijB,EAAU4d,EAAW1vC,OACH,iBAAX8xB,IACPA,EAAUnf,KAAKygB,MAAMtB,IAEzB4d,EAAW1vC,OAAS,CAAC8xB,EAAQ,eAAgBA,EAAQ,eACzD,KAC8B,sBAArB4d,EAAW7gC,SAChB6gC,EAAW1vC,OAASstC,EAAsBoC,EAAW1vC,QAIrE,CACJ,CACA,MAAOqO,GAEH,MADA,EAAI6xB,EAAO78B,UAAU,mDAAoDsP,KAAKC,UAAUvE,IAClFA,CACV,CACJ,GACJ,CACA,SAAS2+B,EAAqC7kC,EAAQ6nC,GAClD,OAAO5vC,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,KACI,EAAIohC,EAAO78B,UAAU,uDAAwDsP,KAAKC,UAAUzK,IAC5F,MAAMnI,EAAS,GAEf,GAAImI,GAAUA,EAAOhC,OAAS,EAC1B,MAAM,IAAI+5B,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwBiP,cAAe,qEAEnF,IAAK45B,GAAoB7nC,GAAUA,EAAOhC,OAAS,EAC/C,MAAM,IAAI+5B,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwBiP,cAAe,6FAGnF,IAAK,MAAMs5B,KAAcvnC,EAUrB,GAT0B,sBAAtBunC,EAAW7gC,SACgB,kBAAvB6gC,EAAWhS,QACXgS,EAAWhS,QAAU,YAEO,qBAAvBgS,EAAWhS,UAChBgS,EAAWhS,QAAU,mBAIH,4BAAtBgS,EAAW7gC,OAAsC,CACjD,IAAIohC,EAAqC,OAArBD,QAAkD,IAArBA,OAA8B,EAASA,EAAiBE,MAAKC,GAASA,EAAMx0B,UAAUgG,SAAS,YAChJ,IAAKsuB,EACD,MAAM,IAAI/P,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwBiP,cAAe,6CAA6Cs5B,EAAW7gC,+DAE/I,MACK,GAA0B,uBAAtB6gC,EAAW7gC,OAAiC,CACjD,KAAI,EAAIy3B,EAAW8J,4BAIf,MAAM,IAAIlQ,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwB8iB,sBAHhEylB,EAAWhS,QAAU,EAK7B,KACK,CACD,MAAM2S,KAAuC,OAArBL,QAAkD,IAArBA,OAA8B,EAASA,EAAiBE,MAAKC,GAASA,EAAMp0B,OAAOm0B,MAAKh0B,GAASA,EAAMyF,SAAS,GAAG+tB,EAAWhS,gBACnL,IAAK2S,EACD,MAAM,IAAInQ,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwBiP,cAAe,6CAA6Cs5B,EAAW7gC,oCAAoC6gC,EAAWhS,WAE9L,CAEJ,IAAK,MAAMloB,KAAQrN,EAAQ,CACvB,IAAKjK,EAAQqvC,sBAAsB5rB,SAASnM,EAAK3G,QAC7C,MAAM,IAAIqxB,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwBiP,cAAe,uDAAuDZ,EAAK3G,WAE/I,GAAoB,4BAAhB2G,EAAK3G,QACL,GAAIkT,MAAMqhB,QAAQ5tB,EAAKrN,QAAS,CAC5B,MAAMmoC,EAAY96B,EAAKrN,OACvB,IAAImoC,GAAkC,IAArBA,EAAUnqC,OAMtB,MAAImqC,GAAaA,EAAUnqC,OAAS,EAC/B,IAAI+5B,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwBiP,cAAe,0DAA0DZ,EAAK3G,WAGxI,IAAIqxB,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwBiP,cAAe,2CAA2CZ,EAAK3G,WAV1F,CACrC,MAAM0hC,EAAaD,EAAU,GACzB3C,EAAS4C,KACT/6B,EAAKrN,OAASooC,EAEtB,CAOJ,OAEC,GAAoB,kBAAhB/6B,EAAK3G,QACV,GAAIu0B,EAAQ5tB,EAAKrN,QAAS,CACtB,GAAIqN,EAAKrN,QAAiC,IAAvBqN,EAAKrN,OAAOhC,OAC3B,MAAM,IAAI+5B,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwBiP,cAAe,2CAA2CZ,EAAK3G,YAEnI,IAAI2hC,EAAWh7B,EAAKrN,OAAO,GAC3B,IAAIqoC,GAAgC,kBAAbA,EAMnB,MAAM,IAAItQ,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwBiP,cAAe,8CAA8CZ,EAAK3G,YALlI2G,EAAKrN,OAAS,CACVE,QAASmoC,EAMrB,OAEC,GAAoB,oBAAhBh7B,EAAK3G,QAAgD,4BAAhB2G,EAAK3G,OAAsC,CACrF,IAAI8+B,EAASn4B,EAAKrN,WAAW,YAAaqN,EAAKrN,QAe3C,MAAM,IAAI+3B,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwBiP,cAAe,8CAA8CZ,EAAK3G,YAdlI,IAAI2G,EAAKrN,OAAOE,QAUZ,MAAM,IAAI63B,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwBiP,cAAe,8CAA8CZ,EAAK3G,YAV7G,EACrB,EAAIqxB,EAAO78B,UAAU,wCAAyCmS,EAAKrN,OAAOE,SAC1E,IAAIA,EAAUsK,KAAKygB,MAAMzgB,KAAKC,UAAU4C,EAAKrN,OAAOE,UAChDimC,EAAiBtwC,OAAOwpB,OAAOnf,GAC/B+yB,EAAa,IAAI1U,WAAW4nB,GAC5Bxa,EAAU,IAAItP,YAAY,QAC1B+pB,EAAah6B,KAAKuf,EAAQrP,OAAO2W,IACrC5lB,EAAKrN,OAAOE,QAAUmmC,KAAKD,EAC/B,CAQR,MACK,GAAoB,uBAAhB/4B,EAAK3G,OAAiC,CAC3C,IAAI8+B,EAASn4B,EAAKrN,WAAW,YAAaqN,EAAKrN,QAS3C,MAAM,IAAI+3B,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwBiP,cAAe,8CAA8CZ,EAAK3G,YARlI,IAAI2G,EAAKrN,OAAOE,SAA0C,kBAAxBmN,EAAKrN,OAAOE,QAI1C,MAAM,IAAI63B,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwBiP,cAAe,8CAA8CZ,EAAK3G,YAHlI2G,EAAKrN,OAAO,eAAiBslC,EAAO30B,QAAQzE,QAAO,EAAIq5B,EAAoBU,oBAAoB54B,EAAKrN,OAAOE,SASvH,MACK,GAAoB,sBAAhBmN,EAAK3G,OAAgC,CAC1C,IAAI8+B,EAASn4B,EAAKrN,QAsBd,MAAM,IAAI+3B,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwBiP,cAAe,8CAA8CZ,EAAK3G,YArBlI,IAAI2G,EAAKkoB,SAA6B,cAAjBloB,EAAKkoB,SAA4C,mBAAjBloB,EAAKkoB,QAiBtD,MAAM,IAAIwC,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwBiP,cAAe,sDAAsDZ,EAAK3G,YAjBrD,CACrF,IAAI4hC,EAAcj7B,EAAKrN,OACnBuoC,EAAahoB,OAAOO,SAASjB,SAAW,KAAOU,OAAOO,SAASC,SACnE,IAAIynB,EAAc,EACG,cAAjBn7B,EAAKkoB,SAEiB,mBAAjBloB,EAAKkoB,UACViT,EAAc,GAElBn7B,EAAKrN,OAAS,CACV/E,KAAMqtC,EACNG,eAAgBF,EAChBn3B,OAAQ,QACR41B,aAAcwB,EAEtB,CAQR,MACK,GAAoB,yBAAhBn7B,EAAK3G,OAAmC,CAC7C,IAAI8+B,EAASn4B,EAAKrN,QAmCd,MAAM,IAAI+3B,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwBiP,cAAe,8CAA8CZ,EAAK3G,YAlClI,IAAI2G,EAAKrN,OAAOE,SAA0C,kBAAxBmN,EAAKrN,OAAOE,QA8B1C,MAAM,IAAI63B,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwBiP,cAAe,sDAAsDZ,EAAK3G,YA9B1E,CAChE,MAAMyF,GAAgB,EAAIo5B,EAAoB+B,gBAAgBj6B,EAAKrN,OAAOE,SAC1E,IAAIwoC,EAAcr7B,EAAKkoB,QAAQjkB,MAAM,KAAK,GAC1C,IAAIo3B,EAuBA,MAAM,IAAI3Q,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwBiP,cAAe,sDAAsDZ,EAAK3G,YAtB1I2G,EAAKrN,OAAS,CACVw4B,SAAUkQ,EACVztC,KAAM,CACFu9B,SAAU,GACVC,eAAgB,IAChBC,SAAU,IACVC,IAAK,CACDC,IAAK,IACLC,OAAQ,IAEZC,KAAM,CAAC,CACC,KAAQ,mBACR,MAAS,CACL,OAAU,GACV,KAAQ3sB,KAGpB4sB,KAAM,IAOtB,CAQR,MACK,GAAmB,oBAAf1rB,EAAK3G,OAA8B,CACxC,IAAI8+B,EAASn4B,EAAKrN,QASd,MAAM,IAAI+3B,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwBiP,cAAe,8CAA8CZ,EAAK3G,YARlI,KAAI,YAAa2G,EAAKrN,UAAUqN,EAAKrN,OAAOE,SAA0C,kBAAxBmN,EAAKrN,OAAOE,QAItE,MAAM,IAAI63B,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwBiP,cAAe,8CAA8CZ,EAAK3G,YAHlI2G,EAAKrN,OAAOE,QAAUq8B,EAAYlvB,EAAKrN,OAAOE,QAS1D,MACK,GAAmB,mBAAfmN,EAAK3G,OAA6B,CACvC,IAAI8+B,EAASn4B,EAAKrN,QAWd,MAAM,IAAI+3B,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwBiP,cAAe,8CAA8CZ,EAAK3G,YAVlI,KAAI,YAAa2G,EAAKrN,UAAUqN,EAAKrN,OAAOE,SAA0C,kBAAxBmN,EAAKrN,OAAOE,QAMtE,MAAM,IAAI63B,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwBiP,cAAe,8CAA8CZ,EAAK3G,YALlI2G,EAAKrN,OAAS,CACV61B,QAASxoB,EAAKrN,OAAOE,QAUrC,EACA,EAAI63B,EAAO78B,UAAU,6CAA8CsP,KAAKC,UAAU4C,IAClFxV,EAAOgS,KAAKwD,EAChB,CACA,OAAOxV,CACX,CACA,MAAOqO,GACH,MAAMA,CACV,CACJ,GACJ,CACA,SAASq2B,EAAY1rB,GACjB,IAAIub,EAAM,GACV,IAAK,IAAIlkB,EAAI,EAAGA,EAAI2I,EAAI7S,OAAQkK,IAC5BkkB,GAAOvb,EAAIqb,WAAWhkB,GAAG5M,SAAS,IAAIy+B,SAAS,EAAG,KAEtD,OAAO3N,CACX,CACA,SAAS+Y,EAAsBwD,GAC3B,MAAMC,EAAap+B,KAAKygB,MAAM0d,GACxB9wC,EAAS,CACXonB,KAAM2pB,EAAW3pB,KACjB4pB,MAAOD,EAAWC,MAClB36B,WAAY06B,EAAW16B,WACvB46B,WAAYF,EAAWE,WACvBr1B,UAAWm1B,EAAWn1B,UAAUgW,KAAKsf,IAAI,CACrC/R,OAAQ+R,EAAKC,GACb71B,QAAS41B,EAAKpZ,GAAgB,SAAXoZ,EAAKpZ,EAAeoZ,EAAKpZ,EAAIiZ,EAAWK,gBAGnE,OAAOpxC,CACX,CA7hBA9B,EAAQqvC,sBAAwBvvC,OAAOqzC,OAAO,CAC1C,gBACA,qBACA,kBACA,0BACA,kBACA,oBACA,uBACA,mBACA,qBACA,uBACA,sB,qCCzCJrzC,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ8qC,gCAAkC9qC,EAAQsvC,mCAAgC,EAClF,IAAId,EAAuB9tC,EAAQ,OACnCZ,OAAOC,eAAeC,EAAS,gCAAiC,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO+sC,EAAqBc,6BAA+B,IAClKxvC,OAAOC,eAAeC,EAAS,kCAAmC,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO+sC,EAAqB1D,+BAAiC,G,qCCL1JpqC,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACbZ,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQozC,kBAAoBA,EAC5BpzC,EAAQ4uC,kCAAoCA,EAC5C5uC,EAAQgvC,oBAAsBA,EAC9BhvC,EAAQqzC,gBAAkBA,EAC1BrzC,EAAQ4rC,kBAAoBA,EAC5B,MAAM5J,EAASthC,EAAQ,OACvB,SAAS0yC,EAAkB51B,GACvB,MAAMK,EAAS,GAKf,OAJAL,EAASvI,SAAS0qB,IACd,MAAO3hB,EAAOwhB,GAAWG,EAAQpkB,MAAM,KACvCsC,EAAO/J,KAAK,GAAGkK,KAASwhB,IAAU,IAE/B3hB,CACX,CACA,SAAS+wB,EAAkC33B,GACvC,IAAInV,EAAS,GACb,OAAKmV,GAGLnX,OAAOmkB,KAAKhN,GAAYhC,SAAS1C,IACzBA,IAAQyvB,EAAOvV,oBAAsBla,IAAQyvB,EAAOxV,iBAAmBja,IAAQyvB,EAAO1V,iBAAmB/Z,IAAQyvB,EAAO5V,mBACrH7Z,GAAOyvB,EAAO3V,iBAAmB9Z,IAAQyvB,EAAOzV,iBAAmBha,IAAQyvB,EAAO7V,oBAAsB5Z,IAAQyvB,EAAO9V,kBAAoB3Z,IAAQyvB,EAAO/V,sBACzJhV,EAAW1E,GAAKsL,QAChB/b,EAAOgS,KAAK,CACR2J,UAAWlL,EACXsL,OAAQ5G,EAAW1E,GAAKsL,OACxB5T,OAAQgN,EAAW1E,GAAKtI,QAGpC,IAEGnI,GAdIA,CAef,CACA,SAASktC,EAAoBn4B,EAASI,EAAYgzB,EAAoB50B,GAElE,MAAMi+B,EAAcA,CAACC,EAAcC,KAC/B1zC,OAAO6U,OAAO4+B,EAAcC,EAAa,EAGvCC,EAAkBA,CAACrV,EAAQsV,KAC7B,IAAK,MAAMnhC,KAAOmhC,EACVA,EAAO1xC,eAAeuQ,IAAQmhC,EAAOnhC,GAAKohC,SACtCD,EAAOnhC,GAAKohC,SACPvV,EAAO7rB,GAAKohC,SACbvV,EAAO7rB,GAAKohC,OAAS,CAAC,GAG1BL,EAAYlV,EAAO7rB,GAAKohC,OAAQD,EAAOnhC,GAAKohC,SAE5CD,EAAOnhC,GAAK43B,mBAA6CjpC,IAA7Bk9B,EAAO7rB,GAAK43B,cAEpC/L,EAAO7rB,GAAKsL,OAAOm0B,MAAKh0B,GAASA,EAAMzC,MAAM,KAAK,KAAOm4B,EAAOnhC,GAAK43B,iBACrE/L,EAAO7rB,GAAK43B,aAAeuJ,EAAOnhC,GAAK43B,cAIvD,EAGAlzB,GACAw8B,EAAgB58B,EAAQI,WAAYA,GAGpCgzB,GACAwJ,EAAgB58B,EAAQI,WAAYgzB,GAExC,IAAK,MAAM13B,KAAOsE,EAAQI,WAAY,CAClC,MAAMwG,EAAY5G,EAAQI,WAAW1E,IACjB,OAAdkL,QAAoC,IAAdA,OAAuB,EAASA,EAAUD,WAA2C,IAA9BC,EAAUD,SAASvV,eAC3F4O,EAAQI,WAAW1E,EAElC,CACAsE,EAAQxB,cAAgBA,CAC5B,CA8GA,SAASg+B,EAAgB51B,GACrB,OAAOA,EAAUgG,SAAS,IAC9B,CACA,SAASmoB,EAAkBnuB,GACvB,OAAO41B,EAAgB51B,GAAaA,EAAUlC,MAAM,KAAK,GAAKkC,CAClE,C,mCC7LA3d,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQitC,qBAAkB,EAC1BjtC,EAAQitC,gBAAkB,CACtBC,sBAAuB,wBACvBG,kBAAmB,qBACnBwB,mBAAoB,qB,qCCLxB,IAAIluC,EAAmBC,MAAQA,KAAKD,kBAAqBb,OAAOe,OAAU,SAASC,EAAGC,EAAGC,EAAGC,QAC7EC,IAAPD,IAAkBA,EAAKD,GAC3B,IAAIG,EAAOrB,OAAOsB,yBAAyBL,EAAGC,GACzCG,KAAS,QAASA,GAAQJ,EAAEM,WAAaF,EAAKG,UAAYH,EAAKI,gBAClEJ,EAAO,CAAEK,YAAY,EAAMC,IAAK,WAAa,OAAOV,EAAEC,EAAI,IAE5DlB,OAAOC,eAAee,EAAGG,EAAIE,EACjC,EAAM,SAASL,EAAGC,EAAGC,EAAGC,QACTC,IAAPD,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,EACd,GACIwlB,EAAgB5lB,MAAQA,KAAK4lB,cAAiB,SAASzlB,EAAGf,GAC1D,IAAK,IAAIymB,KAAK1lB,EAAa,YAAN0lB,GAAoB3mB,OAAOiC,UAAUC,eAAeC,KAAKjC,EAASymB,IAAI9lB,EAAgBX,EAASe,EAAG0lB,EAC3H,EACA3mB,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDumB,EAAa9lB,EAAQ,OAAaV,GAClCwmB,EAAa9lB,EAAQ,OAAaV,E,mCChBlCF,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ4zC,yBAA2B5zC,EAAQ6zC,QAAU7zC,EAAQ8zC,QAAU9zC,EAAQ+zC,QAAU/zC,EAAQg0C,WAAah0C,EAAQi0C,SAAWj0C,EAAQk0C,UAAYl0C,EAAQm0C,YAAS,EACtKn0C,EAAQm0C,OAAS,QACjBn0C,EAAQk0C,UAAY,gCACpBl0C,EAAQi0C,SAAW,KACnBj0C,EAAQg0C,WAAa,EACrBh0C,EAAQ+zC,QAAU,qBAClB/zC,EAAQ8zC,QAAU,GAAG9zC,EAAQi0C,YAAYj0C,EAAQg0C,cAAch0C,EAAQ+zC,WACvE/zC,EAAQ6zC,QAAU,oCAClB7zC,EAAQ4zC,yBAA2B,S,qCCTnC,IAAIjzC,EAAmBC,MAAQA,KAAKD,kBAAqBb,OAAOe,OAAU,SAASC,EAAGC,EAAGC,EAAGC,QAC7EC,IAAPD,IAAkBA,EAAKD,GAC3B,IAAIG,EAAOrB,OAAOsB,yBAAyBL,EAAGC,GACzCG,KAAS,QAASA,GAAQJ,EAAEM,WAAaF,EAAKG,UAAYH,EAAKI,gBAClEJ,EAAO,CAAEK,YAAY,EAAMC,IAAK,WAAa,OAAOV,EAAEC,EAAI,IAE5DlB,OAAOC,eAAee,EAAGG,EAAIE,EACjC,EAAM,SAASL,EAAGC,EAAGC,EAAGC,QACTC,IAAPD,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,EACd,GACIwlB,EAAgB5lB,MAAQA,KAAK4lB,cAAiB,SAASzlB,EAAGf,GAC1D,IAAK,IAAIymB,KAAK1lB,EAAa,YAAN0lB,GAAoB3mB,OAAOiC,UAAUC,eAAeC,KAAKjC,EAASymB,IAAI9lB,EAAgBX,EAASe,EAAG0lB,EAC3H,EACA3mB,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDumB,EAAa9lB,EAAQ,OAAYV,GACjCwmB,EAAa9lB,EAAQ,OAAYV,E,qCCjBrBU,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACb,IAAIwB,EAAatB,MAAQA,KAAKsB,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMtC,GAAS,OAAOA,aAAiBoC,EAAIpC,EAAQ,IAAIoC,GAAE,SAAUG,GAAWA,EAAQvC,EAAQ,GAAI,CAC3G,OAAO,IAAKoC,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU1C,GAAS,IAAM2C,EAAKN,EAAUO,KAAK5C,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAS9C,GAAS,IAAM2C,EAAKN,EAAU,SAASrC,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKd,GAAUA,EAAOkB,KAAOR,EAAQV,EAAO7B,OAASsC,EAAMT,EAAO7B,OAAOgD,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACA/C,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,MAAMmD,EAAc1C,EAAQ,OACtBshC,EAASthC,EAAQ,OACjB6C,EAAU7C,EAAQ,OAClB0zC,EAAsB1zC,EAAQ,OAC9B2zC,EAAoB3zC,EAAQ,OAClC,MAAM4zC,EACFxwC,WAAAA,CAAYykC,EAAMn4B,EAAM2W,EAAQ/iB,GAC5BpD,KAAKwP,KAAO,QACZxP,KAAK6c,UAAY8qB,EAAK9qB,UACtB7c,KAAKoD,OAASA,EACdpD,KAAKmmB,OAASA,EACdnmB,KAAK4+B,QAAU5+B,KAAKgtC,kBACpBhtC,KAAK2zC,cAAgB3zC,KAAK4zC,sBAC1B5zC,KAAKwP,KAAOA,CAChB,CACAqkC,eAAAA,CAAgBh3B,GACZ7c,KAAK6c,UAAY3d,OAAO6U,OAAO/T,KAAK6c,UAAWA,EACnD,CACA2rB,eAAAA,GACI,OAAOxoC,KAAK8zC,aAChB,CACApgC,OAAAA,CAAQ4a,GACJ,OAAOhtB,EAAUtB,UAAM,OAAQ,GAAQ,YAGnC,IAFA,EAAIohC,EAAO78B,UAAU,iCAAkCsP,KAAKC,UAAUwa,KACtE,EAAI8S,EAAO78B,UAAU,8BAA+BvE,KAAK6c,WACrD7c,KAAK6c,UAAUE,QAAQ8F,SAASyL,EAAKve,QACrC,OAAO/P,KAAKmmB,OAAOzS,QAAQ4a,GAG3B,MAAM,IAAI8S,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwB8iB,qBAAsB,yBAE9F,GACJ,CACAmf,eAAAA,CAAgB1L,EAAS2L,GAEhBvqC,KAAK2zC,cAAc/U,IACpB5+B,KAAK+zC,gBAAgBnV,EAAS2L,GAElCvqC,KAAK4+B,QAAUA,EACf5+B,KAAKoD,OAAOwB,KAAKpC,EAAY6pC,gBAAgBC,sBAAuB,GAAGtsC,KAAKwP,QAAQovB,IACxF,CACAoO,eAAAA,GACI,GAAIhtC,KAAK4+B,QACL,OAAO5+B,KAAK4+B,QAChB,GAAI5+B,KAAK6c,UAAU0sB,aACf,OAAOvpC,KAAK6c,UAAU0sB,aAC1B,MAAM3K,EAAU5+B,KAAK6c,UAAUI,OAAO,GACtC,IAAK2hB,EACD,MAAM,IAAI/6B,MAAM,qBACpB,OAAO+6B,EAAQjkB,MAAM,KAAK,EAC9B,CAEAm5B,WAAAA,GACI,MAAMl3B,EAAW5c,KAAK6c,UAAUD,SAChC,OAAKA,EAGE,IACA,IAAImuB,IAAInuB,EAENsV,QAAQ6M,GAAYA,EAAQpkB,MAAM,KAAK,KAAO3a,KAAK4+B,QAAQj6B,aAE3DmuB,KAAKiM,GAAYA,EAAQpkB,MAAM,KAAK,OAPlC,EASf,CACAi5B,mBAAAA,GACI,MAAMI,EAAO,CAAC,EASd,OARAh0C,KAAK6c,UAAUI,OAAO5I,SAAS+I,IAC3B,MAAM62B,GAAgB,EAAItxC,EAAQuxC,YAAY92B,GACxC+2B,GAAY,EAAIxxC,EAAQyxC,WAAWh3B,EAAOpd,KAAK6c,WACrD,IAAIw3B,EAAer0C,KAAKs0C,mBAAmBL,EAAeE,GACtDE,IACAL,EAAKC,GAAiBI,EAC1B,IAEGL,CACX,CACAO,eAAAA,GACI,MAAMn3B,EAAQ,GAAGpd,KAAK4+B,UAChBoV,EAAOh0C,KAAK2zC,cAAcv2B,GAChC,GAAoB,qBAAT42B,EACP,MAAM,IAAInwC,MAAM,yBAAyBuZ,eAE7C,OAAO42B,CACX,CACAD,eAAAA,CAAgBnV,EAAS2L,GACrB,MAAMyJ,EAAOh0C,KAAKs0C,mBAAmB1V,EAAS2L,GAC1CyJ,IACAh0C,KAAK2zC,cAAc/U,GAAWoV,EAEtC,CACAM,kBAAAA,CAAmB1V,EAAS2L,GAExB,MAAMiK,EAAMjK,EACZ,GAAKiK,EAIA,CACD,MAAMR,EAAO,IAAIP,EAAkBgB,gBAAgB,IAAIjB,EAAoBkB,kBAAkBF,GAAK,EAAI7xC,EAAQgyC,WAAW,yBACzH,OAAOX,CACX,CACJ,CACA3G,gBAAAA,CAAiB/e,GACb,OAAO,CACX,EAEJlvB,EAAAA,WAAkBs0C,C,qCCtHN5zC,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACb,IAAIwB,EAAatB,MAAQA,KAAKsB,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMtC,GAAS,OAAOA,aAAiBoC,EAAIpC,EAAQ,IAAIoC,GAAE,SAAUG,GAAWA,EAAQvC,EAAQ,GAAI,CAC3G,OAAO,IAAKoC,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU1C,GAAS,IAAM2C,EAAKN,EAAUO,KAAK5C,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAS9C,GAAS,IAAM2C,EAAKN,EAAU,SAASrC,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKd,GAAUA,EAAOkB,KAAOR,EAAQV,EAAO7B,OAASsC,EAAMT,EAAO7B,OAAOgD,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACA/C,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,MAAMmD,EAAc1C,EAAQ,OACtBshC,EAASthC,EAAQ,OACjB6C,EAAU7C,EAAQ,OAClB0zC,EAAsB1zC,EAAQ,OAC9B2zC,EAAoB3zC,EAAQ,OAClC,MAAM80C,EACF1xC,WAAAA,CAAYykC,EAAMn4B,EAAM2W,EAAQ/iB,GAC5BpD,KAAKwP,KAAO4xB,EAAO3V,gBACnBzrB,KAAK6c,UAAY8qB,EAAK9qB,UACtB7c,KAAKoD,OAASA,EACdpD,KAAKmmB,OAASA,EACdnmB,KAAK4+B,QAAU5+B,KAAKgtC,kBACpBhtC,KAAK2zC,cAAgB3zC,KAAK4zC,sBAC1B5zC,KAAKwP,KAAOA,CAChB,CACAqkC,eAAAA,CAAgBh3B,GACZ7c,KAAK6c,UAAY3d,OAAO6U,OAAO/T,KAAK6c,UAAWA,EACnD,CACA2rB,eAAAA,GACI,OAAOxoC,KAAK8zC,aAChB,CACApgC,OAAAA,CAAQ4a,GACJ,OAAOhtB,EAAUtB,UAAM,OAAQ,GAAQ,YAGnC,OAFA,EAAIohC,EAAO78B,UAAU,8BAA+BsP,KAAKC,UAAUwa,KACnE,EAAI8S,EAAO78B,UAAU,2BAA4BsP,KAAKC,UAAU9T,KAAK6c,YACjE7c,KAAK6c,UAAUE,QAAQ8F,SAASyL,EAAKve,QAC9B/P,KAAKmmB,OAAOzS,QAAQ4a,GAExBtuB,KAAKu0C,kBAAkB7gC,QAAQ4a,EAC1C,GACJ,CACAgc,eAAAA,CAAgB1L,EAAS2L,GAEhBvqC,KAAK2zC,cAAc/U,IACpB5+B,KAAK+zC,gBAAgBnV,EAAS2L,GAElCvqC,KAAK4+B,QAAUA,EACf5+B,KAAKoD,OAAOwB,KAAKpC,EAAY6pC,gBAAgBC,sBAAuB,GAAGtsC,KAAKwP,QAAQovB,IACxF,CACAoO,eAAAA,GACI,GAAIhtC,KAAK4+B,QACL,OAAO5+B,KAAK4+B,QAChB,GAAI5+B,KAAK6c,UAAU0sB,aACf,OAAOvpC,KAAK6c,UAAU0sB,aAC1B,MAAM3K,EAAU5+B,KAAK6c,UAAUI,OAAO,GACtC,IAAK2hB,EACD,MAAM,IAAI/6B,MAAM,qBACpB,OAAO+6B,EAAQjkB,MAAM,KAAK,EAC9B,CAEAm5B,WAAAA,GACI,MAAMl3B,EAAW5c,KAAK6c,UAAUD,SAChC,OAAKA,EAGE,IACA,IAAImuB,IAAInuB,EAENsV,QAAQ6M,GAAYA,EAAQpkB,MAAM,KAAK,KAAO3a,KAAK4+B,QAAQj6B,aAE3DmuB,KAAKiM,GAAYA,EAAQpkB,MAAM,KAAK,OAPlC,EASf,CACAi5B,mBAAAA,GACI,MAAMI,EAAO,CAAC,EASd,OARAh0C,KAAK6c,UAAUI,OAAO5I,SAAS+I,IAC3B,MAAM62B,GAAgB,EAAItxC,EAAQuxC,YAAY92B,GACxC+2B,GAAY,EAAIxxC,EAAQyxC,WAAWh3B,EAAOpd,KAAK6c,WACrD,IAAIw3B,EAAer0C,KAAKs0C,mBAAmBL,EAAeE,GACtDE,IACAL,EAAKC,GAAiBI,EAC1B,IAEGL,CACX,CACAO,eAAAA,GACI,MAAMn3B,EAAQ,GAAGpd,KAAK4+B,UAChBoV,EAAOh0C,KAAK2zC,cAAcv2B,GAChC,GAAoB,qBAAT42B,EACP,MAAM,IAAInwC,MAAM,yBAAyBuZ,eAE7C,OAAO42B,CACX,CACAD,eAAAA,CAAgBnV,EAAS2L,GACrB,MAAMyJ,EAAOh0C,KAAKs0C,mBAAmB1V,EAAS2L,GAC1CyJ,IACAh0C,KAAK2zC,cAAc/U,GAAWoV,EAEtC,CACAM,kBAAAA,CAAmB1V,EAAS2L,GAExB,MAAMiK,EAAMjK,EACZ,GAAKiK,EAIA,CACD,MAAMR,EAAO,IAAIP,EAAkBgB,gBAAgB,IAAIjB,EAAoBkB,kBAAkBF,GAAK,EAAI7xC,EAAQgyC,WAAW,yBACzH,OAAOX,CACX,EANI,EAAI5S,EAAO96B,UAAU,oCAAoCs4B,IAOjE,CACAyO,gBAAAA,CAAiB/e,GACb,OAAO,CACX,EAEJlvB,EAAAA,WAAkBw1C,C,qCCpHN90C,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACb,IAAIwB,EAAatB,MAAQA,KAAKsB,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMtC,GAAS,OAAOA,aAAiBoC,EAAIpC,EAAQ,IAAIoC,GAAE,SAAUG,GAAWA,EAAQvC,EAAQ,GAAI,CAC3G,OAAO,IAAKoC,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU1C,GAAS,IAAM2C,EAAKN,EAAUO,KAAK5C,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAS9C,GAAS,IAAM2C,EAAKN,EAAU,SAASrC,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKd,GAAUA,EAAOkB,KAAOR,EAAQV,EAAO7B,OAASsC,EAAMT,EAAO7B,OAAOgD,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACA/C,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,MAAMmD,EAAc1C,EAAQ,OACtBshC,EAASthC,EAAQ,OACjB6C,EAAU7C,EAAQ,OAClB0zC,EAAsB1zC,EAAQ,OAC9B2zC,EAAoB3zC,EAAQ,OAClC,MAAM+0C,EACF3xC,WAAAA,CAAYykC,EAAMxhB,EAAQ/iB,GACtBpD,KAAKwP,KAAO4xB,EAAO7V,mBACnBvrB,KAAK6c,UAAY8qB,EAAK9qB,UACtB7c,KAAKoD,OAASA,EACdpD,KAAKmmB,OAASA,EACdnmB,KAAK4+B,QAAU5+B,KAAKgtC,kBACpBhtC,KAAK2zC,cAAgB3zC,KAAK4zC,qBAC9B,CACAC,eAAAA,CAAgBh3B,GACZ7c,KAAK6c,UAAY3d,OAAO6U,OAAO/T,KAAK6c,UAAWA,EACnD,CACA2rB,eAAAA,GACI,OAAOxoC,KAAK8zC,aAChB,CACApgC,OAAAA,CAAQ4a,GACJ,OAAOhtB,EAAUtB,UAAM,OAAQ,GAAQ,YAGnC,IAFA,EAAIohC,EAAO78B,UAAU,iCAAkCsP,KAAKC,UAAUwa,KACtE,EAAI8S,EAAO78B,UAAU,8BAA+BsP,KAAKC,UAAU9T,KAAK6c,YACpE7c,KAAK6c,UAAUE,QAAQ8F,SAASyL,EAAKve,QACrC,OAAO/P,KAAKmmB,OAAOzS,QAAQ4a,GAG3B,MAAM,IAAI8S,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwB8iB,qBAAsB,yBAE9F,GACJ,CACAmf,eAAAA,CAAgB1L,EAAS2L,GAEhBvqC,KAAK2zC,cAAc/U,IACpB5+B,KAAK+zC,gBAAgBnV,EAAS2L,GAElCvqC,KAAK4+B,QAAUA,EACf5+B,KAAKoD,OAAOwB,KAAKpC,EAAY6pC,gBAAgBC,sBAAuB,GAAGtsC,KAAKwP,QAAQovB,IACxF,CACAoO,eAAAA,GACI,GAAIhtC,KAAK4+B,QACL,OAAO5+B,KAAK4+B,QAChB,GAAI5+B,KAAK6c,UAAU0sB,aACf,OAAOvpC,KAAK6c,UAAU0sB,aAC1B,MAAM3K,EAAU5+B,KAAK6c,UAAUI,OAAO,GACtC,IAAK2hB,EACD,MAAM,IAAI/6B,MAAM,qBACpB,OAAO+6B,EAAQjkB,MAAM,KAAK,EAC9B,CAEAm5B,WAAAA,GACI,MAAMl3B,EAAW5c,KAAK6c,UAAUD,SAChC,OAAKA,EAGE,IACA,IAAImuB,IAAInuB,EAENsV,QAAQ6M,GAAYA,EAAQpkB,MAAM,KAAK,KAAO3a,KAAK4+B,QAAQj6B,aAE3DmuB,KAAKiM,GAAYA,EAAQpkB,MAAM,KAAK,OAPlC,EASf,CACAi5B,mBAAAA,GACI,MAAMI,EAAO,CAAC,EASd,OARAh0C,KAAK6c,UAAUI,OAAO5I,SAAS+I,IAC3B,MAAM62B,GAAgB,EAAItxC,EAAQuxC,YAAY92B,GACxC+2B,GAAY,EAAIxxC,EAAQyxC,WAAWh3B,EAAOpd,KAAK6c,WACrD,IAAIw3B,EAAer0C,KAAKs0C,mBAAmBL,EAAeE,GACtDE,IACAL,EAAKC,GAAiBI,EAC1B,IAEGL,CACX,CACAO,eAAAA,GACI,MAAMn3B,EAAQ,GAAGpd,KAAK4+B,UAChBoV,EAAOh0C,KAAK2zC,cAAcv2B,GAChC,GAAoB,qBAAT42B,EACP,MAAM,IAAInwC,MAAM,yBAAyBuZ,eAE7C,OAAO42B,CACX,CACAD,eAAAA,CAAgBnV,EAAS2L,GACrB,MAAMyJ,EAAOh0C,KAAKs0C,mBAAmB1V,EAAS2L,GAC1CyJ,IACAh0C,KAAK2zC,cAAc/U,GAAWoV,EAEtC,CACAM,kBAAAA,CAAmB1V,EAAS2L,GAExB,MAAMiK,EAAMjK,EACZ,GAAKiK,EAIA,CACD,MAAMR,EAAO,IAAIP,EAAkBgB,gBAAgB,IAAIjB,EAAoBkB,kBAAkBF,GAAK,EAAI7xC,EAAQgyC,WAAW,yBACzH,OAAOX,CACX,CACJ,CACA3G,gBAAAA,CAAiB/e,GACb,OAAO,CACX,EAEJlvB,EAAAA,WAAkBy1C,C,qCCrHN/0C,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACb,IAAIwB,EAAatB,MAAQA,KAAKsB,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMtC,GAAS,OAAOA,aAAiBoC,EAAIpC,EAAQ,IAAIoC,GAAE,SAAUG,GAAWA,EAAQvC,EAAQ,GAAI,CAC3G,OAAO,IAAKoC,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU1C,GAAS,IAAM2C,EAAKN,EAAUO,KAAK5C,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAS9C,GAAS,IAAM2C,EAAKN,EAAU,SAASrC,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKd,GAAUA,EAAOkB,KAAOR,EAAQV,EAAO7B,OAASsC,EAAMT,EAAO7B,OAAOgD,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACA/C,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ+rC,oBAAiB,EACzB,MAAMxoC,EAAU7C,EAAQ,OAClB0C,EAAc1C,EAAQ,OACtBshC,EAASthC,EAAQ,OACjB2zC,EAAoB3zC,EAAQ,OAC5B0zC,EAAsB1zC,EAAQ,OACpC,MAAMqrC,EACFjoC,WAAAA,CAAYykC,EAAMxhB,EAAQ/iB,GACtBpD,KAAKwP,KAAO,SACZxP,KAAK6c,UAAY8qB,EAAK9qB,UACtB7c,KAAKoD,OAASA,EACdpD,KAAKmmB,OAASA,EACdnmB,KAAK4+B,QAAUtF,SAASt5B,KAAKgtC,mBAE7BhtC,KAAK2zC,cAAgB3zC,KAAK4zC,uBAC1B,EAAIxS,EAAO78B,UAAU,4CAA0CojC,EAAK9qB,UACxE,CACAgyB,QAAAA,CAASxvC,GACL,MAAwB,kBAAVA,GAAgC,OAAVA,IAAmB4jB,MAAMqhB,QAAQjlC,EACzE,CACAilC,OAAAA,CAAQjlC,GACJ,MAAwB,kBAAVA,GAAgC,OAAVA,GAAkB4jB,MAAMqhB,QAAQjlC,EACxE,CACAy1C,mBAAAA,CAAoBxmB,GAChB,IAAIymB,EAAQzmB,EAAKjlB,QAAiC,kBAAhBilB,EAAKjlB,SAAwB4Z,MAAMqhB,QAAQhW,EAAKjlB,QAClF,GAAoB,+BAAhBilB,EAAKve,OAAyC,CAC9C,MAAMilC,EAAgB1mB,EAAKsQ,QAAQjkB,MAAM,KAAK,GAExCs6B,EAAgB3b,SAAS0b,EAAe,IAC9C,GAAIzR,MAAM0R,GACN,MAAM,IAAI7T,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwB0iB,oBAAqB,sCAAsCiqB,OAE/H,GAAK1mB,EAAKjlB,OAGL,KAAI0rC,EAQL,MAAM,IAAI3T,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwB0iB,oBAAqB,oCAAoCuD,EAAKve,YARlH,CACZ,IAAI1G,EAASilB,EAAKjlB,OACZ,YAAaA,IACfA,EAAO,WAAa,KAAO4rC,EAActwC,SAAS,IAClD2pB,EAAKjlB,OAASA,EAEtB,CAGA,MAXIilB,EAAKjlB,OAAS,CAAEu1B,QAAS,KAAOqW,EAActwC,SAAS,IAY/D,MACK,GAAoB,kBAAhB2pB,EAAKve,QACS,yBAAhBue,EAAKve,QACW,wBAAhBue,EAAKve,QACW,sBAAhBue,EAAKve,OAAgC,CACxC,IAAKue,EAAKjlB,OACN,MAAM,IAAI+3B,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwB0iB,oBAAqB,mCAAmCuD,EAAKve,WAEjI,IAAI/P,KAAK6uC,SAASvgB,EAAKjlB,QA0BnB,MAAM,IAAI+3B,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwB0iB,oBAAqB,yCAAyCuD,EAAKve,WA1BvG,CAC5B,IAAI1G,EAASilB,EAAKjlB,OAElB,IADA,EAAI+3B,EAAO78B,UAAU,qCAAsCsP,KAAKC,UAAUzK,IACtE,YAAaA,EAAQ,CACrB,MAAM6rC,EAAkB5mB,EAAKsQ,QAAQjkB,MAAM,KAAK,GAC1Cw6B,EAAW7b,SAAS4b,EAAiB,IAC3C,IACIE,EADAC,EAAoB3/B,OAAOrM,EAAOu1B,SAEtC,GAAIyW,EAAkB/kC,WAAWtQ,KAAKwP,OAAS8e,EAAKsQ,UAAYyW,EAC5DD,EAAgBD,OAEf,GAAIE,EAAkB/kC,WAAW,MAClC8kC,EAAgB9b,SAAS+b,EAAmB,QAE3C,IAAK9R,MAAMxuB,OAAOsgC,IAInB,MAAM,IAAIjU,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwB0iB,oBAAqB,2CAA2CuD,EAAKve,WAHrIqlC,EAAgB9b,SAAS+b,EAAmB,GAIhD,CACA,GAAIF,IAAaC,EACb,MAAM,IAAIhU,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwB0iB,oBAAqB,qDAAqDuD,EAAKve,WAEvJ,CACJ,CAIJ,CACJ,CAEAulC,UAAAA,CAAWhnB,GACP,GAAoB,+BAAhBA,EAAKve,QACc,4BAAhBue,EAAKve,QACW,sBAAhBue,EAAKve,QACW,wBAAhBue,EAAKve,QACR,GAAI/P,KAAKskC,QAAQhW,EAAKjlB,QAAS,CAC3B,IAAImoC,EAAYljB,EAAKjlB,OACrB,GAAImoC,EAAW,CACX,GAAyB,IAArBA,EAAUnqC,OAMT,MAAImqC,EAAUnqC,OAAS,EAClB,IAAI+5B,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwBiP,cAAe,mDAAmDgX,EAAKve,YAGjI,IAAIqxB,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwBiP,cAAe,oCAAoCgX,EAAKve,YAVhG,CACxB,IAAI0hC,EAAanjB,EAAKjlB,OAAO,GACzBrJ,KAAK6uC,SAAS4C,KACdnjB,EAAKjlB,OAASooC,EAEtB,CAOJ,CACJ,OAEC,GAAoB,yBAAhBnjB,EAAKve,QACV,GAAI/P,KAAKskC,QAAQhW,EAAKjlB,QAAS,CAC3B,IAAImoC,EAAYljB,EAAKjlB,OACrB,GAAImoC,GAAaA,EAAUnqC,OAAS,EAChC,MAAM,IAAI+5B,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwBiP,cAAe,mDAAmDgX,EAAKve,YAEtI,GAAIyhC,GAAkC,IAArBA,EAAUnqC,OAC5B,MAAM,IAAI+5B,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwBiP,cAAe,oCAAoCgX,EAAKve,YAE5H,IAAIgS,EAAa,CAAC,EAClB,GAAIyvB,GAAkC,IAArBA,EAAUnqC,OAAc,CACrC,IAAIkuC,EAAajnB,EAAKjlB,OAAO,GAC7B,IAAIksC,GAAoC,kBAAfA,EAoBrB,MAAM,IAAInU,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwBiP,cAAe,wDAAwDgX,EAAKve,YApB9F,CAC9C,IAAIylC,GAAU,EAQd,GAPAx1C,KAAK6c,UAAUD,SAASvI,SAAS0qB,IAC7B,IAAI0W,GAAe,EAAI9yC,EAAQysC,sBAAsBrQ,GACjD0W,EAAaxX,gBAAkBsX,EAAWtX,gBAC1CuX,GAAU,EACd,KAEJ,EAAIpU,EAAO78B,UAAU,sDAAuDixC,IACvEA,EACD,MAAM,IAAIpU,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwBiP,cAAe,sDAAsDgX,EAAKve,YAE9I,IAAI/P,KAAK6uC,SAASvgB,EAAKjlB,OAAO,IAI1B,MAAM,IAAI+3B,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwBiP,cAAe,gDAAgDgX,EAAKve,YAHpIgS,EAAauM,EAAKjlB,OAAO,EAKjC,CAIJ,MACK,GAAImoC,GAAkC,IAArBA,EAAUnqC,OAAc,CAC1C,IAAIrH,KAAK6uC,SAASvgB,EAAKjlB,OAAO,IAI1B,MAAM,IAAI+3B,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwBiP,cAAe,gDAAgDgX,EAAKve,YAHpIgS,EAAauM,EAAKjlB,OAAO,EAKjC,CACA,IACI,IAAIqsC,EAAW7hC,KAAKC,UAAUiO,GAC9BuM,EAAKjlB,OAAS,CACVssC,cAAeD,EAEvB,CACA,MAAOvtC,GACH,MAAM,IAAIi5B,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwBiP,cAAe,0DAA0DgX,EAAKve,WAClJ,CACJ,OAEC,GAAoB,kBAAhBue,EAAKve,QACN/P,KAAKskC,QAAQhW,EAAKjlB,QAAS,CAC3B,GAAIilB,EAAKjlB,QAAUilB,EAAKjlB,OAAOhC,OAAS,EACpC,MAAM,IAAI+5B,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwBiP,cAAe,mCAAmCgX,EAAKve,YAEtH,GAAIue,EAAKjlB,QAAiC,IAAvBilB,EAAKjlB,OAAOhC,OAChC,MAAM,IAAI+5B,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwBiP,cAAe,oCAAoCgX,EAAKve,YAE5H,IAAI2hC,EAAWpjB,EAAKjlB,OAAO,GACvBusC,EAAYtnB,EAAKjlB,OAAO,GAC5B,GAAIusC,GAAkC,kBAAdA,EAAwB,CAC5C,IAAIJ,GAAU,EAQd,GAPAx1C,KAAK6c,UAAUD,SAASvI,SAAS0qB,IAC7B,IAAI0W,GAAe,EAAI9yC,EAAQysC,sBAAsBrQ,GACjD0W,EAAaxX,gBAAkB2X,EAAU3X,gBACzCuX,GAAU,EACd,KAEJ,EAAIpU,EAAO78B,UAAU,+CAAgDixC,IAChEA,EACD,MAAM,IAAIpU,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwBiP,cAAe,2CAA2CgX,EAAKve,WAEvI,CACA,IAAI2hC,GAAgC,kBAAbA,EAMnB,MAAM,IAAItQ,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwBiP,cAAe,sCAAsCgX,EAAKve,YAL1Hue,EAAKjlB,OAAS,CACVE,QAASmoC,EAMrB,CAER,CACArE,gBAAAA,CAAiB/e,GACb,OAAQA,EAAKve,QACT,IAAK,sBACL,IAAK,eACL,IAAK,cACD,OAAO,EACX,IAAK,sBACL,IAAK,sBACL,IAAK,WACL,IAAK,gBACL,IAAK,oBACL,IAAK,0BACL,IAAK,oBACL,IAAK,uBACD,OAAO,EACX,IAAK,6BAA8B,CAC/B/P,KAAKs1C,WAAWhnB,GAChBtuB,KAAK80C,oBAAoBxmB,GACzB,MAAM,cAAE2lB,EAAa,WAAE4B,GAAe71C,KAAK81C,yBAAyBxnB,GACpE,OAAQtuB,KAAK+1C,gBAAgB9B,EACjC,CACA,QACI,OAAO,EAEf,OAAO,CACX,CACAvgC,OAAAA,CAAQ4a,GACJ,OAAOhtB,EAAUtB,UAAM,OAAQ,GAAQ,YAKnC,OAJAA,KAAKs1C,WAAWhnB,IAChB,EAAI8S,EAAO78B,UAAU,iCAAkCsP,KAAKC,UAAUwa,IACtEtuB,KAAK80C,oBAAoBxmB,IACzB,EAAI8S,EAAO78B,UAAU,mCAAoCsP,KAAKC,UAAUwa,IAChEA,EAAKve,QACT,IAAK,sBACD,OAAO/P,KAAK8zC,cAChB,IAAK,eACD,OAAO9zC,KAAK8zC,cAChB,IAAK,cACD,OAAOxa,SAASt5B,KAAKgtC,mBACzB,IAAK,6BACD,aAAchtC,KAAKg2C,kBAAkB1nB,GAEzC,IAAK,0BACD,OAAOtuB,KAAKi2C,iBAAiB3nB,GACjC,QACI,MAER,IAAItuB,KAAK6c,UAAUE,QAAQ8F,SAASyL,EAAKve,QA2BrC,OADA,EAAIqxB,EAAO78B,UAAU,6BACRvE,KAAKu0C,kBAAkB7gC,QAAQ4a,GAtB5C,IACI,MAAMna,QAAiBnU,KAAKmmB,OAAOzS,QAAQ4a,GAE3C,IADA,EAAI8S,EAAO78B,UAAU,uCAAwCsP,KAAKC,UAAUK,IACxEnU,KAAK6uC,SAAS16B,IACV,WAAYA,EAAU,CACtB,IAAIjT,EAASiT,EAASjT,OACtB,OAAIA,GAA4B,kBAAXA,GAAmC,SAAXA,GAAgC,UAAXA,EAI3DiT,EAASjT,SAHZ,EAAIkgC,EAAO78B,UAAU,yCAAqD,SAAXrD,GAC5C,SAAXA,EAGhB,CAEJ,OAAOiT,CACX,CACA,MAAOjS,GAEH,MADA,EAAIk/B,EAAO78B,UAAU,2EAA2ErC,aAAak/B,EAAOh5B,kBAAmByL,KAAKC,UAAU5R,IAChJA,CACV,CAMR,GACJ,CACA+zC,gBAAAA,CAAiB3nB,GACb,OAAOhtB,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,IAAIk2C,QAAoBl2C,KAAKmmB,OAAOzS,QAAQ4a,GAC5C,IACI,GAAI,WAAY4nB,EAAY,CACxB,IACInX,EAAUmX,EAAWh1C,OACzB,GAAI69B,EAAS,CACT,MAAMoX,EAAYpX,EAAQpkB,MAAM,KAAK,GAC/BikB,EAAUG,EAAQpkB,MAAM,KAAK,GAC7ByC,EAAQ+4B,EAAY,IAAMvX,EACb5+B,KAAK6c,UAGxB,GAFA7c,KAAK6c,UAAUD,SAAS1J,KAAK6rB,GAC7B/+B,KAAK6c,UAAUI,OAAO/J,KAAKkK,GACvBpd,KAAK6uC,SAASvgB,EAAKjlB,SACf,YAAailB,EAAKjlB,OAAQ,CAC1B,IAAI+sC,EAAU9nB,EAAKjlB,OAAO+sC,QACtB7L,EAAS6L,EAAUA,EAAQ,QAAK91C,EAChCiqC,IACIvqC,KAAK6c,UAAUk2B,OACf/yC,KAAK6c,UAAUk2B,OAAOnU,GAAW2L,EAGjCvqC,KAAK6c,UAAUk2B,OAAS,CACpB,CAACnU,GAAU2L,GAGnBvqC,KAAK+zC,gBAAgBnV,EAAS2L,GAEtC,CAEJvqC,KAAKoD,OAAOwB,KAAKpC,EAAY6pC,gBAAgBI,kBAAmB,CAC5D4J,OAAQr2C,KAAK6c,WAErB,CACJ,MAEI,IAAIukB,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwBiP,cAAe,cAAcgX,EAAKve,uBAEpG,CACA,MAAOR,GACH,MAAM,IAAI6xB,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwBiP,cAAe,cAAcgX,EAAKve,wBACtG,CACA,OAAO,IACX,GACJ,CACA8jC,eAAAA,CAAgBh3B,GACZ7c,KAAK6c,UAAY3d,OAAO6U,OAAO/T,KAAK6c,UAAWA,EACnD,CACAytB,eAAAA,CAAgB1L,EAAS2L,GAGrB,GAFAvqC,KAAK4+B,QAAUtF,SAASsF,IAEnB5+B,KAAK2zC,cAAc/U,GAAU,CAC9B,MAAM4V,EAAMjK,IAAU,EAAI5nC,EAAQyxC,WAAW,GAAGp0C,KAAKwP,QAAQovB,IAAW5+B,KAAK6c,WACxE23B,EAKDx0C,KAAK+zC,gBAAgBnV,EAAS4V,IAH9B,EAAIpT,EAAO96B,UAAU,oCAAoCs4B,IAKjE,CACA5+B,KAAKoD,OAAOwB,KAAKpC,EAAY6pC,gBAAgBC,sBAAuB,GAAGtsC,KAAKwP,QAAQovB,IACxF,CACA4J,eAAAA,GACI,OAAOxoC,KAAK8zC,aAChB,CACA9G,eAAAA,GACI,GAAIhtC,KAAK4+B,QACL,OAAO5+B,KAAK4+B,QAAQj6B,WACxB,GAAI3E,KAAK6c,UAAU0sB,aACf,OAAOvpC,KAAK6c,UAAU0sB,aAC1B,MAAM3K,EAAU5+B,KAAK6c,UAAUI,OAAO,GACtC,IAAK2hB,EACD,MAAM,IAAI/6B,MAAM,qBACpB,OAAO+6B,EAAQjkB,MAAM,KAAK,EAC9B,CAEAm5B,WAAAA,GACI,MAAMl3B,EAAW5c,KAAK6c,UAAUD,SAEhC,OADA,EAAIwkB,EAAO78B,UAAU,sBAAuBqY,EAAU5c,KAAK4+B,SACtDhiB,EAGE,IACA,IAAImuB,IAAInuB,EAENsV,QAAQ6M,GAAYA,EAAQpkB,MAAM,KAAK,KAAO3a,KAAK4+B,QAAQj6B,aAE3DmuB,KAAKiM,IACC,EAAIp8B,EAAQysC,sBAAsBrQ,OARtC,EAWf,CACA+W,wBAAAA,CAAyBxnB,GACrB,IAAIjlB,EAASilB,EAAKjlB,OACdwsC,EAAa,MACbxsC,GAAU,YAAaA,IACvBwsC,EAAaxsC,EAAOu1B,SAExBiX,EAAaA,EAAWvlC,WAAW,MAAQulC,EAAa,KAAKA,KAC7D,EAAIzU,EAAO78B,UAAU,gCAA8B+pB,IACnD,EAAI8S,EAAO78B,UAAU,sCAAoCsxC,GACzD,MAAM5B,EAAgB3a,SAASuc,EAAY,IAE3C,OADA,EAAIzU,EAAO78B,UAAU,yCAAuC0vC,GACrD,CAAEA,gBAAe4B,aAC5B,CACAG,iBAAAA,CAAkB1nB,GACd,OAAOhtB,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,MAAM,cAAEi0C,EAAa,WAAE4B,GAAe71C,KAAK81C,yBAAyBxnB,GACpE,GAAItuB,KAAK+1C,gBAAgB9B,GACrBj0C,KAAKsqC,gBAAgB,GAAG2J,SAEvB,CACD,MAAMiC,QAAoBl2C,KAAKmmB,OAAOzS,QAAQ,CAC1C3D,OAAQ,6BACR6uB,QAAStQ,EAAKsQ,QACdv1B,OAAQ,CACJu1B,QAASiX,KAGjB,IACI,GAAI,WAAYK,EAAY,CACxB,IACInX,EAAUmX,EAAWh1C,OACzB,GAAI69B,EAAS,CACT,MAAMoX,EAAYpX,EAAQpkB,MAAM,KAAK,GAC/BikB,EAAUG,EAAQpkB,MAAM,KAAK,GAC7ByC,EAAQ+4B,EAAY,IAAMvX,EACb5+B,KAAK6c,UACxB7c,KAAK6c,UAAUD,SAAS1J,KAAK6rB,GAC7B/+B,KAAK6c,UAAUI,OAAO/J,KAAKkK,IAC3B,EAAIgkB,EAAO78B,UAAU,sDAAoD2xC,GACzEl2C,KAAKsqC,gBAAgB,GAAG2J,KACxBj0C,KAAKoD,OAAOwB,KAAKpC,EAAY6pC,gBAAgBI,kBAAmB,CAC5D4J,OAAQr2C,KAAK6c,WAErB,CACJ,MAEI,IAAIukB,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwBiP,cAAe,cAAcgX,EAAKve,uBAEpG,CACA,MAAOR,GACH,MAAM,IAAI6xB,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwBiP,cAAe,cAAcgX,EAAKve,wBACtG,CACJ,CACA,OAAO,IACX,GACJ,CACAgmC,eAAAA,CAAgBnX,GACZ,OAAO5+B,KAAK6c,UAAUI,OAAO4F,SAAS,GAAG7iB,KAAKwP,QAAQovB,IAC1D,CAEA0V,kBAAAA,CAAmB1V,EAAS2L,GAExB,MAAMiK,EAAMjK,EACZ,GAAKiK,EAIA,CACD,MAAMR,EAAO,IAAIP,EAAkBgB,gBAAgB,IAAIjB,EAAoBkB,kBAAkBF,GAAK,EAAI7xC,EAAQgyC,WAAW,yBACzH,OAAOX,CACX,EANI,EAAI5S,EAAO96B,UAAU,oCAAoCs4B,IAOjE,CACAgV,mBAAAA,GACI,MAAMI,EAAO,CAAC,EAWd,OAVAh0C,KAAK6c,UAAUI,OAAO5I,SAAS+I,IAC3B,MAAM62B,GAAgB,EAAItxC,EAAQuxC,YAAY92B,GACxC+2B,GAAY,EAAIxxC,EAAQyxC,WAAWh3B,EAAOpd,KAAK6c,YACrD,EAAIukB,EAAO78B,UAAU,4BAA6B0vC,EAAeE,GACjE,IAAIE,EAAer0C,KAAKs0C,mBAAmBL,EAAeE,GACtDE,IACAL,EAAKC,GAAiBI,EAC1B,KAEJ,EAAIjT,EAAO78B,UAAU,wBAAyByvC,GACvCA,CACX,CACAD,eAAAA,CAAgBnV,EAAS2L,GACrB,MAAMyJ,EAAOh0C,KAAKs0C,mBAAmB1V,EAAS2L,GAC1CyJ,IACAh0C,KAAK2zC,cAAc/U,GAAWoV,EAEtC,CACAO,eAAAA,GACI,MAAMn3B,EAAQ,GAAGpd,KAAK4+B,UAChBoV,EAAOh0C,KAAK2zC,cAAcv2B,GAEhC,IADA,EAAIgkB,EAAO78B,UAAU,2BAA4B6Y,EAAO42B,GACpC,qBAATA,EACP,MAAM,IAAInwC,MAAM,yBAAyBuZ,eAE7C,OAAO42B,CACX,EAEJ50C,EAAQ+rC,eAAiBA,EACzB/rC,EAAAA,WAAkB+rC,C,qCChelB,IAAI7pC,EAAatB,MAAQA,KAAKsB,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMtC,GAAS,OAAOA,aAAiBoC,EAAIpC,EAAQ,IAAIoC,GAAE,SAAUG,GAAWA,EAAQvC,EAAQ,GAAI,CAC3G,OAAO,IAAKoC,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU1C,GAAS,IAAM2C,EAAKN,EAAUO,KAAK5C,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAS9C,GAAS,IAAM2C,EAAKN,EAAU,SAASrC,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKd,GAAUA,EAAOkB,KAAOR,EAAQV,EAAO7B,OAASsC,EAAMT,EAAO7B,OAAOgD,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACIiW,EAAmBlY,MAAQA,KAAKkY,iBAAoB,SAAUjX,GAC9D,OAAQA,GAAOA,EAAIR,WAAcQ,EAAM,CAAE,QAAWA,EACxD,EACA/B,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQs1C,uBAAoB,EAC5B,MAAM7xC,EAAkB/C,EAAQ,OAC1BkvB,EAAgB9W,EAAgBpY,EAAQ,QACxCshC,EAASthC,EAAQ,OACjBw2C,EAASx2C,EAAQ,OACjBwvB,EAAuB,CACzBC,OAAQ,mBACR,eAAgB,oBAEdC,EAAsB,OACtBC,EAAqB,CACvBC,QAASJ,EACTvf,OAAQyf,GAIZ,MAAMklB,EACFxxC,WAAAA,CAAYC,EAAKozC,GAAsB,GAMnC,GALAv2C,KAAKmD,IAAMA,EACXnD,KAAKu2C,oBAAsBA,EAC3Bv2C,KAAKoD,OAAS,IAAIP,EAAgBQ,aAClCrD,KAAKw2C,aAAc,EACnBx2C,KAAKy2C,aAAc,IACd,EAAIH,EAAO3vB,WAAWxjB,GACvB,MAAM,IAAIU,MAAM,wDAAwDV,KAE5EnD,KAAKmD,IAAMA,EACXnD,KAAKu2C,oBAAsBA,CAC/B,CACA,aAAI1R,GACA,OAAO7kC,KAAKw2C,WAChB,CACA,cAAIryC,GACA,OAAOnE,KAAKy2C,WAChB,CACA1vC,EAAAA,CAAGjC,EAAO+E,GACN7J,KAAKoD,OAAO2D,GAAGjC,EAAO+E,EAC1B,CACA3B,IAAAA,CAAKpD,EAAO+E,GACR7J,KAAKoD,OAAO8E,KAAKpD,EAAO+E,EAC5B,CACAC,GAAAA,CAAIhF,EAAO+E,GACP7J,KAAKoD,OAAO0G,IAAIhF,EAAO+E,EAC3B,CACAX,cAAAA,CAAepE,EAAO+E,GAClB7J,KAAKoD,OAAO8F,eAAepE,EAAO+E,EACtC,CACA4b,IAAAA,GACI,OAAOnkB,EAAUtB,KAAMiI,eAAW,GAAQ,UAAW9E,EAAMnD,KAAKmD,WACtDnD,KAAK02C,SAASvzC,EACxB,GACJ,CACA2D,KAAAA,GACI,OAAOxF,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,IAAKA,KAAKw2C,YACN,MAAM,IAAI3yC,MAAM,6BAEpB7D,KAAK6E,SACT,GACJ,CACAqB,IAAAA,CAAKd,GACD,OAAO9D,EAAUtB,UAAM,OAAQ,GAAQ,YAC9BA,KAAKw2C,oBACAx2C,KAAK02C,YAEf,IACI,MAAM1kB,GAAO,EAAIoP,EAAOp3B,mBAAmB5E,GACrC6sB,QAAY,EAAIjD,EAAchV,SAASha,KAAKmD,IAAKjE,OAAO6U,OAAO7U,OAAO6U,OAAO,CAAC,EAAG0b,GAAqB,CAAEuC,UACxG1tB,QAAa2tB,EAAIiC,OACvBl0B,KAAKqE,UAAU,CAAEC,QACrB,CACA,MAAOpC,GACHlC,KAAKkF,QAAQE,EAAQD,GAAIjD,EAC7B,CACJ,GACJ,CAEAw0C,QAAAA,GACI,OAAOp1C,EAAUtB,KAAMiI,eAAW,GAAQ,UAAW9E,EAAMnD,KAAKmD,KAC5D,KAAK,EAAImzC,EAAO3vB,WAAWxjB,GACvB,MAAM,IAAIU,MAAM,wDAAwDV,KAE5E,GAAInD,KAAKy2C,YACL,OAAO,IAAI50C,SAAQ,CAACD,EAASE,KACzB9B,KAAKoD,OAAO8E,KAAK,kBAAmBqH,IAChCzN,EAAOyN,EAAM,IAEjBvP,KAAKoD,OAAO8E,KAAK,QAAQ,KACrB,GAAgC,qBAArBlI,KAAKw2C,YACZ,OAAO10C,EAAO,IAAI+B,MAAM,0CAE5BjC,GAAS,GACX,IAGV5B,KAAKmD,IAAMA,EACXnD,KAAKy2C,aAAc,EACnB,IACI,IAAKz2C,KAAKu2C,oBAAqB,CAC3B,MAAMvkB,GAAO,EAAIoP,EAAOp3B,mBAAmB,CAAE7E,GAAI,EAAG0K,QAAS,MAAOE,OAAQ,OAAQ1G,OAAQ,WACtF,EAAI2lB,EAAchV,SAAS7W,EAAKjE,OAAO6U,OAAO7U,OAAO6U,OAAO,CAAC,EAAG0b,GAAqB,CAAEuC,SACjG,CACAhyB,KAAKoK,QACT,CACA,MAAOlI,GACH,MAAMqN,EAAQvP,KAAK22C,WAAWz0C,GAG9B,MAFAlC,KAAKoD,OAAOwB,KAAK,iBAAkB2K,GACnCvP,KAAK6E,UACC0K,CACV,CACJ,GACJ,CACAnF,MAAAA,GACIpK,KAAKw2C,aAAc,EACnBx2C,KAAKy2C,aAAc,EACnBz2C,KAAKoD,OAAOwB,KAAK,OACrB,CACAC,OAAAA,GACI7E,KAAKw2C,aAAc,EACnBx2C,KAAKy2C,aAAc,EACnBz2C,KAAKoD,OAAOwB,KAAK,QACrB,CACAP,SAAAA,CAAUnC,GACN,GAAsB,qBAAXA,EAAEoC,KACT,OACJ,MAAMc,EAA4B,kBAAXlD,EAAEoC,MAAoB,EAAI88B,EAAOh4B,eAAelH,EAAEoC,MAAQpC,EAAEoC,KACnFtE,KAAKoD,OAAOwB,KAAK,UAAWQ,EAChC,CACAF,OAAAA,CAAQC,EAAIjD,GACR,MAAMqN,EAAQvP,KAAK22C,WAAWz0C,GACxBqH,EAAUgG,EAAMhG,SAAWgG,EAAM5K,WACjCS,GAAU,EAAIkxC,EAAO1vB,oBAAoBzhB,EAAIoE,GACnDvJ,KAAKoD,OAAOwB,KAAK,UAAWQ,EAChC,CACAuxC,UAAAA,CAAWz0C,EAAGiB,EAAMnD,KAAKmD,KACrB,OAAO,EAAImzC,EAAO5vB,sBAAsBxkB,EAAGiB,EAAK,OACpD,EAEJ/D,EAAQs1C,kBAAoBA,C,qCCvJ5B,IAAIpzC,EAAatB,MAAQA,KAAKsB,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMtC,GAAS,OAAOA,aAAiBoC,EAAIpC,EAAQ,IAAIoC,GAAE,SAAUG,GAAWA,EAAQvC,EAAQ,GAAI,CAC3G,OAAO,IAAKoC,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU1C,GAAS,IAAM2C,EAAKN,EAAUO,KAAK5C,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAS9C,GAAS,IAAM2C,EAAKN,EAAU,SAASrC,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKd,GAAUA,EAAOkB,KAAOR,EAAQV,EAAO7B,OAASsC,EAAMT,EAAO7B,OAAOgD,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACA/C,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQq1C,qBAAkB,EAC1B,MAAM5xC,EAAkB/C,EAAQ,OAC1B82C,EAAU92C,EAAQ,OAClBshC,EAASthC,EAAQ,OACjBw2C,EAASx2C,EAAQ,OACvB,MAAM20C,UAAwBmC,EAAQC,iBAClC3zC,WAAAA,CAAY4zC,GACR5wB,MAAM4wB,GACN92C,KAAKoD,OAAS,IAAIP,EAAgBQ,aAClCrD,KAAK6kC,WAAY,EACjB7kC,KAAKmE,YAAa,EAClBnE,KAAK+2C,6BAA8B,EACnC/2C,KAAK82C,WAAa92C,KAAKg3C,cAAcF,GACjC92C,KAAK82C,WAAWjS,WAChB7kC,KAAK4qC,wBAEb,CACAriC,OAAAA,GACI,OAAOjH,EAAUtB,KAAMiI,eAAW,GAAQ,UAAW6uC,EAAa92C,KAAK82C,kBAC7D92C,KAAKylB,KAAKqxB,EACpB,GACJ,CACApuC,UAAAA,GACI,OAAOpH,EAAUtB,UAAM,OAAQ,GAAQ,kBAC7BA,KAAK8G,OACf,GACJ,CACAC,EAAAA,CAAGjC,EAAO+E,GACN7J,KAAKoD,OAAO2D,GAAGjC,EAAO+E,EAC1B,CACA3B,IAAAA,CAAKpD,EAAO+E,GACR7J,KAAKoD,OAAO8E,KAAKpD,EAAO+E,EAC5B,CACAC,GAAAA,CAAIhF,EAAO+E,GACP7J,KAAKoD,OAAO0G,IAAIhF,EAAO+E,EAC3B,CACAX,cAAAA,CAAepE,EAAO+E,GAClB7J,KAAKoD,OAAO8F,eAAepE,EAAO+E,EACtC,CACA6J,OAAAA,CAAQA,EAASujC,GACb,OAAO31C,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,OAAOA,KAAKk3C,eAAc,EAAI9V,EAAO7a,sBAAsB7S,EAAQ3D,OAAQ2D,EAAQrK,QAAU,IAAI,EAAI+3B,EAAO9a,kBAAkB3hB,YAC9HsyC,EACJ,GACJ,CAEAC,aAAAA,CAAcxjC,EAASujC,GACnB,OAAO31C,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,OAAO,IAAI6B,SAAQ,CAACD,EAASE,IAAWR,EAAUtB,UAAM,OAAQ,GAAQ,YACpE,IAAKA,KAAK82C,WAAWjS,UACjB,UACU7kC,KAAKylB,MACf,CACA,MAAOvjB,GACHJ,EAAOI,EACX,CAEJlC,KAAKoD,OAAO2D,GAAG,GAAG2M,EAAQvO,MAAOgP,KACzB,EAAIitB,EAAO5a,gBAAgBrS,GAC3BrS,EAAOqS,EAAS5E,OAGhB3N,EAAQuS,EAASjT,OACrB,IAEJ,KACI,EAAIo1C,EAAO/xC,UAAU,yBAA0BmP,EAASujC,SAClDj3C,KAAK82C,WAAW5wC,KAAKwN,EAASujC,EACxC,CACA,MAAO/0C,GACHJ,EAAOI,EACX,CACJ,KACJ,GACJ,CACA80C,aAAAA,CAAcF,EAAa92C,KAAK82C,YAC5B,OAAOA,CACX,CACAzyC,SAAAA,CAAUe,GACNpF,KAAKoD,OAAOwB,KAAK,UAAWQ,IACxB,EAAIg8B,EAAO3a,mBAAmBrhB,GAC9BpF,KAAKoD,OAAOwB,KAAK,GAAGQ,EAAQD,KAAMC,GAGlCpF,KAAKoD,OAAOwB,KAAK,UAAW,CACxB0jB,KAAMljB,EAAQ2K,OACdzL,KAAMc,EAAQiE,QAG1B,CACAxE,OAAAA,CAAQC,GAEAA,GAAwB,MAAfA,EAAMG,MACfjF,KAAKoD,OAAOwB,KAAK,QAAS,IAAIf,MAAM,qDAAqDiB,EAAMG,QAAQH,EAAMoM,OAAS,IAAIpM,EAAMoM,UAAY,OAEhJlR,KAAKoD,OAAOwB,KAAK,aACrB,CACA6gB,IAAAA,GACI,OAAOnkB,EAAUtB,KAAMiI,eAAW,GAAQ,UAAW6uC,EAAa92C,KAAK82C,YAC/D92C,KAAK82C,aAAeA,GAAc92C,KAAK82C,WAAWjS,YAElD7kC,KAAK82C,WAAWjS,WAChB7kC,KAAK8G,QACiB,kBAAfgwC,UACD92C,KAAK82C,WAAWrxB,KAAKqxB,GAC3BA,EAAa92C,KAAK82C,YAEtB92C,KAAK82C,WAAa92C,KAAKg3C,cAAcF,SAC/B92C,KAAK82C,WAAWrxB,OACtBzlB,KAAK4qC,yBACL5qC,KAAKoD,OAAOwB,KAAK,WACrB,GACJ,CACAkC,KAAAA,GACI,OAAOxF,EAAUtB,UAAM,OAAQ,GAAQ,kBAC7BA,KAAK82C,WAAWhwC,OAC1B,GACJ,CAEA8jC,sBAAAA,GACQ5qC,KAAK+2C,8BAET/2C,KAAK82C,WAAW/vC,GAAG,WAAY3B,GAAYpF,KAAKqE,UAAUe,KAC1DpF,KAAK82C,WAAW/vC,GAAG,SAAUjC,GAAU9E,KAAK6E,QAAQC,KACpD9E,KAAK82C,WAAW/vC,GAAG,SAAUwI,GAAUvP,KAAKoD,OAAOwB,KAAK,QAAS2K,KACjEvP,KAAK82C,WAAW/vC,GAAG,kBAAmBowC,GAAWn3C,KAAK6E,YACtD7E,KAAK+2C,6BAA8B,EACvC,EAEJ33C,EAAQq1C,gBAAkBA,C,qCC5Id30C,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACb,IAAIwB,EAAatB,MAAQA,KAAKsB,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMtC,GAAS,OAAOA,aAAiBoC,EAAIpC,EAAQ,IAAIoC,GAAE,SAAUG,GAAWA,EAAQvC,EAAQ,GAAI,CAC3G,OAAO,IAAKoC,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU1C,GAAS,IAAM2C,EAAKN,EAAUO,KAAK5C,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAS9C,GAAS,IAAM2C,EAAKN,EAAU,SAASrC,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKd,GAAUA,EAAOkB,KAAOR,EAAQV,EAAO7B,OAASsC,EAAMT,EAAO7B,OAAOgD,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACA/C,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQg4C,oBAAiB,EACzB,MAAM50C,EAAc1C,EAAQ,OACtBshC,EAASthC,EAAQ,OACjB6C,EAAU7C,EAAQ,OAClB0zC,EAAsB1zC,EAAQ,OAC9B2zC,EAAoB3zC,EAAQ,OAClC,MAAMs3C,EACFl0C,WAAAA,CAAYykC,EAAMn4B,EAAM2W,EAAQ/iB,GAC5BpD,KAAKwP,KAAO,SACZxP,KAAK6c,UAAY8qB,EAAK9qB,UACtB7c,KAAKoD,OAASA,EACdpD,KAAKmmB,OAASA,EACdnmB,KAAK4+B,QAAU5+B,KAAKgtC,kBACpBhtC,KAAK2zC,cAAgB3zC,KAAK4zC,sBAC1B5zC,KAAKwP,KAAOA,CAChB,CACAqkC,eAAAA,CAAgBh3B,GACZ7c,KAAK6c,UAAY3d,OAAO6U,OAAO/T,KAAK6c,UAAWA,EACnD,CACA2rB,eAAAA,GACI,OAAOxoC,KAAK8zC,aAChB,CACApgC,OAAAA,CAAQ4a,GACJ,OAAOhtB,EAAUtB,UAAM,OAAQ,GAAQ,YAGnC,IAFA,EAAIohC,EAAO78B,UAAU,iCAAkCsP,KAAKC,UAAUwa,KACtE,EAAI8S,EAAO78B,UAAU,8BAA+BvE,KAAK6c,WACrD7c,KAAK6c,UAAUE,QAAQ8F,SAASyL,EAAKve,QACrC,OAAO/P,KAAKmmB,OAAOzS,QAAQ4a,GAG3B,MAAM,IAAI8S,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwB8iB,qBAAsB,yBAE9F,GACJ,CACAmf,eAAAA,CAAgB1L,EAAS2L,GAEhBvqC,KAAK2zC,cAAc/U,IACpB5+B,KAAK+zC,gBAAgBnV,EAAS2L,GAElCvqC,KAAK4+B,QAAUA,EACf5+B,KAAKoD,OAAOwB,KAAKpC,EAAY6pC,gBAAgBC,sBAAuB,GAAGtsC,KAAKwP,QAAQovB,IACxF,CACAoO,eAAAA,GACI,GAAIhtC,KAAK4+B,QACL,OAAO5+B,KAAK4+B,QAChB,GAAI5+B,KAAK6c,UAAU0sB,aACf,OAAOvpC,KAAK6c,UAAU0sB,aAC1B,MAAM3K,EAAU5+B,KAAK6c,UAAUI,OAAO,GACtC,IAAK2hB,EACD,MAAM,IAAI/6B,MAAM,qBACpB,OAAO+6B,EAAQjkB,MAAM,KAAK,EAC9B,CAEAm5B,WAAAA,GACI,MAAMl3B,EAAW5c,KAAK6c,UAAUD,SAChC,OAAKA,EAGE,IACA,IAAImuB,IAAInuB,EAENsV,QAAQ6M,GAAYA,EAAQpkB,MAAM,KAAK,KAAO3a,KAAK4+B,QAAQj6B,aAE3DmuB,KAAKiM,GAAYA,EAAQpkB,MAAM,KAAK,OAPlC,EASf,CACAi5B,mBAAAA,GACI,MAAMI,EAAO,CAAC,EASd,OARAh0C,KAAK6c,UAAUI,OAAO5I,SAAS+I,IAC3B,MAAM62B,GAAgB,EAAItxC,EAAQuxC,YAAY92B,GACxC+2B,GAAY,EAAIxxC,EAAQyxC,WAAWh3B,EAAOpd,KAAK6c,WACrD,IAAIw3B,EAAer0C,KAAKs0C,mBAAmBL,EAAeE,GACtDE,IACAL,EAAKC,GAAiBI,EAC1B,IAEGL,CACX,CACAO,eAAAA,GACI,MAAMn3B,EAAQ,GAAGpd,KAAK4+B,UAChBoV,EAAOh0C,KAAK2zC,cAAcv2B,GAChC,GAAoB,qBAAT42B,EACP,MAAM,IAAInwC,MAAM,yBAAyBuZ,eAE7C,OAAO42B,CACX,CACAD,eAAAA,CAAgBnV,EAAS2L,GACrB,MAAMyJ,EAAOh0C,KAAKs0C,mBAAmB1V,EAAS2L,GAC1CyJ,IACAh0C,KAAK2zC,cAAc/U,GAAWoV,EAEtC,CACAM,kBAAAA,CAAmB1V,EAAS2L,GAExB,MAAMiK,EAAMjK,EACZ,GAAKiK,EAIA,CACD,MAAMR,EAAO,IAAIP,EAAkBgB,gBAAgB,IAAIjB,EAAoBkB,kBAAkBF,GAAK,EAAI7xC,EAAQgyC,WAAW,yBACzH,OAAOX,CACX,CACJ,CACAqD,SAAAA,CAAUzY,GACN,OAAO5+B,KAAKs3C,iBAAiB1Y,EACjC,CAWA0Y,gBAAAA,CAAiB1Y,GAOb,OANKA,IACDA,EAAU5+B,KAAK6c,UAAU0sB,cACP,OAAZ3K,QAAgC,IAAZA,OAAqB,EAASA,EAAQtuB,WAAW,aACvEsuB,EAAU,UAAUA,MAGrB5+B,KAAK6c,UAAUD,SAASsV,QAAO,SAAU6M,GAC5C,IAAIwY,EAAaxY,EAAQpkB,MAAM,KAC/B,OAAO48B,EAAWlwC,OAAS,GAAK03B,EAAQzuB,WAAWsuB,EACvD,IAAG9L,KAAI,SAAUiM,GACb,IAAIwY,EAAaxY,EAAQpkB,MAAM,KAC/B,OAAO48B,EAAW,EACtB,IAAG,EACP,CACAlK,gBAAAA,CAAiB/e,GACb,OAAO,CACX,EAEJlvB,EAAQg4C,eAAiBA,EACzBh4C,EAAAA,WAAkBg4C,C,qCCpJNt3C,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACb,IAAIwB,EAAatB,MAAQA,KAAKsB,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMtC,GAAS,OAAOA,aAAiBoC,EAAIpC,EAAQ,IAAIoC,GAAE,SAAUG,GAAWA,EAAQvC,EAAQ,GAAI,CAC3G,OAAO,IAAKoC,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU1C,GAAS,IAAM2C,EAAKN,EAAUO,KAAK5C,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAS9C,GAAS,IAAM2C,EAAKN,EAAU,SAASrC,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKd,GAAUA,EAAOkB,KAAOR,EAAQV,EAAO7B,OAASsC,EAAMT,EAAO7B,OAAOgD,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACA/C,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,MAAMmD,EAAc1C,EAAQ,OACtBshC,EAASthC,EAAQ,OACjB6C,EAAU7C,EAAQ,OAClB0zC,EAAsB1zC,EAAQ,OAC9B2zC,EAAoB3zC,EAAQ,OAClC,MAAM03C,EACFt0C,WAAAA,CAAYykC,EAAMn4B,EAAM2W,EAAQ/iB,GAC5BpD,KAAKwP,KAAO,WACZxP,KAAK6c,UAAY8qB,EAAK9qB,UACtB7c,KAAKoD,OAASA,EACdpD,KAAKmmB,OAASA,EACdnmB,KAAK4+B,QAAU5+B,KAAKgtC,kBACpBhtC,KAAK2zC,cAAgB3zC,KAAK4zC,sBAC1B5zC,KAAKwP,KAAOA,CAChB,CACAqkC,eAAAA,CAAgBh3B,GACZ7c,KAAK6c,UAAY3d,OAAO6U,OAAO/T,KAAK6c,UAAWA,EACnD,CACA2rB,eAAAA,GACI,OAAOxoC,KAAK8zC,aAChB,CACApgC,OAAAA,CAAQ4a,GACJ,OAAOhtB,EAAUtB,UAAM,OAAQ,GAAQ,YAGnC,IAFA,EAAIohC,EAAO78B,UAAU,mCAAoCsP,KAAKC,UAAUwa,KACxE,EAAI8S,EAAO78B,UAAU,gCAAiCvE,KAAK6c,WACvD7c,KAAK6c,UAAUE,QAAQ8F,SAASyL,EAAKve,QACrC,OAAO/P,KAAKmmB,OAAOzS,QAAQ4a,GAG3B,MAAM,IAAI8S,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwB8iB,qBAAsB,yBAA2BmD,EAAKve,OAE9H,GACJ,CACAu6B,eAAAA,CAAgB1L,EAAS2L,GAEhBvqC,KAAK2zC,cAAc/U,IACpB5+B,KAAK+zC,gBAAgBnV,EAAS2L,GAElCvqC,KAAK4+B,QAAUA,EACf5+B,KAAKoD,OAAOwB,KAAKpC,EAAY6pC,gBAAgBC,sBAAuB,GAAGtsC,KAAKwP,QAAQovB,IACxF,CACAoO,eAAAA,GACI,GAAIhtC,KAAK4+B,QACL,OAAO5+B,KAAK4+B,QAChB,GAAI5+B,KAAK6c,UAAU0sB,aACf,OAAOvpC,KAAK6c,UAAU0sB,aAC1B,MAAM3K,EAAU5+B,KAAK6c,UAAUI,OAAO,GACtC,IAAK2hB,EACD,MAAM,IAAI/6B,MAAM,qBACpB,OAAO+6B,EAAQjkB,MAAM,KAAK,EAC9B,CAEAm5B,WAAAA,GACI,MAAMl3B,EAAW5c,KAAK6c,UAAUD,SAChC,OAAKA,EAGE,IACA,IAAImuB,IAAInuB,EAENsV,QAAQ6M,GAAYA,EAAQpkB,MAAM,KAAK,KAAO3a,KAAK4+B,QAAQj6B,aAE3DmuB,KAAKiM,GAAYA,EAAQpkB,MAAM,KAAK,OAPlC,EASf,CACAi5B,mBAAAA,GACI,MAAMI,EAAO,CAAC,EASd,OARAh0C,KAAK6c,UAAUI,OAAO5I,SAAS+I,IAC3B,MAAM62B,GAAgB,EAAItxC,EAAQuxC,YAAY92B,GACxC+2B,GAAY,EAAIxxC,EAAQyxC,WAAWh3B,EAAOpd,KAAK6c,WACrD,IAAIw3B,EAAer0C,KAAKs0C,mBAAmBL,EAAeE,GACtDE,IACAL,EAAKC,GAAiBI,EAC1B,IAEGL,CACX,CACAO,eAAAA,GACI,MAAMn3B,EAAQ,GAAGpd,KAAK4+B,UAChBoV,EAAOh0C,KAAK2zC,cAAcv2B,GAChC,GAAoB,qBAAT42B,EACP,MAAM,IAAInwC,MAAM,yBAAyBuZ,eAE7C,OAAO42B,CACX,CACAD,eAAAA,CAAgBnV,EAAS2L,GACrB,MAAMyJ,EAAOh0C,KAAKs0C,mBAAmB1V,EAAS2L,GAC1CyJ,IACAh0C,KAAK2zC,cAAc/U,GAAWoV,EAEtC,CACAM,kBAAAA,CAAmB1V,EAAS2L,GAExB,MAAMiK,EAAMjK,EACZ,GAAKiK,EAIA,CACD,MAAMR,EAAO,IAAIP,EAAkBgB,gBAAgB,IAAIjB,EAAoBkB,kBAAkBF,GAAK,EAAI7xC,EAAQgyC,WAAW,yBACzH,OAAOX,CACX,CACJ,CACA3G,gBAAAA,CAAiB/e,GACb,OAAO,CACX,EAEJlvB,EAAAA,WAAkBo4C,C,qCCtHN13C,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACb,IAAIwB,EAAatB,MAAQA,KAAKsB,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMtC,GAAS,OAAOA,aAAiBoC,EAAIpC,EAAQ,IAAIoC,GAAE,SAAUG,GAAWA,EAAQvC,EAAQ,GAAI,CAC3G,OAAO,IAAKoC,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU1C,GAAS,IAAM2C,EAAKN,EAAUO,KAAK5C,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAS9C,GAAS,IAAM2C,EAAKN,EAAU,SAASrC,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKd,GAAUA,EAAOkB,KAAOR,EAAQV,EAAO7B,OAASsC,EAAMT,EAAO7B,OAAOgD,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACA/C,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQwsC,iBAAc,EACtB,MAAMppC,EAAc1C,EAAQ,OACtBshC,EAASthC,EAAQ,OACjB6C,EAAU7C,EAAQ,OAClB0zC,EAAsB1zC,EAAQ,OAC9B2zC,EAAoB3zC,EAAQ,OAClC,MAAM8rC,EACF1oC,WAAAA,CAAYykC,EAAMxhB,EAAQ/iB,GACtBpD,KAAKwP,KAAO4xB,EAAO1V,gBACnB1rB,KAAK6c,UAAY8qB,EAAK9qB,UACtB7c,KAAKoD,OAASA,EACdpD,KAAKmmB,OAASA,EACdnmB,KAAK4+B,QAAU5+B,KAAKgtC,kBACpBhtC,KAAK2zC,cAAgB3zC,KAAK4zC,qBAC9B,CACAC,eAAAA,CAAgBh3B,GACZ7c,KAAK6c,UAAY3d,OAAO6U,OAAO/T,KAAK6c,UAAWA,EACnD,CACAnJ,OAAAA,CAAQ4a,GACJ,OAAOhtB,EAAUtB,UAAM,OAAQ,GAAQ,YAGnC,OAFA,EAAIohC,EAAO78B,UAAU,8BAA+BsP,KAAKC,UAAUwa,KACnE,EAAI8S,EAAO78B,UAAU,2BAA4BvE,KAAK6c,WAClD7c,KAAK6c,UAAUE,QAAQ8F,SAASyL,EAAKve,QAC9B/P,KAAKmmB,OAAOzS,QAAQ4a,GAExBtuB,KAAKu0C,kBAAkB7gC,QAAQ4a,EAC1C,GACJ,CACAka,eAAAA,GACI,OAAOxoC,KAAK8zC,aAChB,CACAxJ,eAAAA,CAAgB1L,EAAS2L,GAChBvqC,KAAK2zC,cAAc/U,IACpB5+B,KAAK+zC,gBAAgBnV,EAAS2L,GAElCvqC,KAAK4+B,QAAUA,EACf5+B,KAAKoD,OAAOwB,KAAKpC,EAAY6pC,gBAAgBC,sBAAuB,GAAGtsC,KAAKwP,QAAQovB,IACxF,CACAoO,eAAAA,GACI,GAAIhtC,KAAK4+B,QACL,OAAO5+B,KAAK4+B,QAChB,GAAI5+B,KAAK6c,UAAU0sB,aACf,OAAOvpC,KAAK6c,UAAU0sB,aAC1B,MAAM3K,EAAU5+B,KAAK6c,UAAUI,OAAO,GACtC,IAAK2hB,EACD,MAAM,IAAI/6B,MAAM,qBACpB,OAAO+6B,EAAQjkB,MAAM,KAAK,EAC9B,CAEAm5B,WAAAA,GACI,MAAMl3B,EAAW5c,KAAK6c,UAAUD,SAChC,OAAKA,EAGE,IACA,IAAImuB,IAAInuB,EAENsV,QAAQ6M,GAAYA,EAAQpkB,MAAM,KAAK,KAAO3a,KAAK4+B,QAAQj6B,aAE3DmuB,KAAKiM,GAAYA,EAAQpkB,MAAM,KAAK,OAPlC,EASf,CACAi5B,mBAAAA,GACI,MAAMI,EAAO,CAAC,EASd,OARAh0C,KAAK6c,UAAUI,OAAO5I,SAAS+I,IAC3B,MAAM62B,GAAgB,EAAItxC,EAAQuxC,YAAY92B,GACxC+2B,GAAY,EAAIxxC,EAAQyxC,WAAWh3B,EAAOpd,KAAK6c,WACrD,IAAIw3B,EAAer0C,KAAKs0C,mBAAmBL,EAAeE,GACtDE,IACAL,EAAKC,GAAiBI,EAC1B,IAEGL,CACX,CACAO,eAAAA,GACI,MAAMn3B,EAAQ,GAAGpd,KAAK4+B,UAChBoV,EAAOh0C,KAAK2zC,cAAcv2B,GAEhC,IADA,EAAIgkB,EAAO78B,UAAU,2BAA4B6Y,EAAO42B,GACpC,qBAATA,EACP,MAAM,IAAInwC,MAAM,yBAAyBuZ,eAE7C,OAAO42B,CACX,CACAD,eAAAA,CAAgBnV,EAAS2L,GACrB,MAAMyJ,EAAOh0C,KAAKs0C,mBAAmB1V,EAAS2L,GAC1CyJ,KACA,EAAI5S,EAAO78B,UAAU,kBAAmBq6B,EAAS2L,GACjDvqC,KAAK2zC,cAAc/U,GAAWoV,EAEtC,CACAM,kBAAAA,CAAmB1V,EAAS2L,GAExB,MAAMiK,EAAMjK,EACZ,GAAKiK,EAIA,CACD,MAAMR,EAAO,IAAIP,EAAkBgB,gBAAgB,IAAIjB,EAAoBkB,kBAAkBF,GAAK,EAAI7xC,EAAQgyC,WAAW,yBACzH,OAAOX,CACX,EANI,EAAI5S,EAAO96B,UAAU,oCAAoCs4B,IAOjE,CACAyY,SAAAA,CAAUzY,GACN,OAAO5+B,KAAKs3C,iBAAiB1Y,EACjC,CACA0Y,gBAAAA,CAAiB1Y,GAOb,OANKA,IACDA,EAAU5+B,KAAK6c,UAAU0sB,cACP,OAAZ3K,QAAgC,IAAZA,OAAqB,EAASA,EAAQtuB,WAAW,UACvEsuB,EAAU,OAAOA,MAGlB5+B,KAAK6c,UAAUD,SAASsV,QAAO,SAAU6M,GAC5C,IAAIwY,EAAaxY,EAAQpkB,MAAM,KAC/B,OAAO48B,EAAWlwC,OAAS,GAAK03B,EAAQzuB,WAAWsuB,EACvD,IAAG9L,KAAI,SAAUiM,GACb,IAAIwY,EAAaxY,EAAQpkB,MAAM,KAC/B,OAAO48B,EAAW,EACtB,IAAG,EACP,CACAlK,gBAAAA,CAAiB/e,GACb,OAAQA,EAAKve,QACT,IAAK,kBACL,IAAK,0BACL,IAAK,2BACL,IAAK,qCACD,OAAO,EACX,QACI,OAAO,EAEf,OAAO,CACX,EAEJ3Q,EAAQwsC,YAAcA,EACtBxsC,EAAAA,WAAkBwsC,C,qCCjJN9rC,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OACb,IAAIwB,EAAatB,MAAQA,KAAKsB,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMtC,GAAS,OAAOA,aAAiBoC,EAAIpC,EAAQ,IAAIoC,GAAE,SAAUG,GAAWA,EAAQvC,EAAQ,GAAI,CAC3G,OAAO,IAAKoC,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU1C,GAAS,IAAM2C,EAAKN,EAAUO,KAAK5C,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAS9C,GAAS,IAAM2C,EAAKN,EAAU,SAASrC,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKd,GAAUA,EAAOkB,KAAOR,EAAQV,EAAO7B,OAASsC,EAAMT,EAAO7B,OAAOgD,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACIw1C,EAAUz3C,MAAQA,KAAKy3C,QAAW,SAAUC,EAAGx1C,GAC/C,IAAIy1C,EAAI,CAAC,EACT,IAAK,IAAI9xB,KAAK6xB,EAAOx4C,OAAOiC,UAAUC,eAAeC,KAAKq2C,EAAG7xB,IAAM3jB,EAAE81B,QAAQnS,GAAK,IAC9E8xB,EAAE9xB,GAAK6xB,EAAE7xB,IACb,GAAS,MAAL6xB,GAAqD,oBAAjCx4C,OAAO04C,sBACtB,KAAIrmC,EAAI,EAAb,IAAgBsU,EAAI3mB,OAAO04C,sBAAsBF,GAAInmC,EAAIsU,EAAExe,OAAQkK,IAC3DrP,EAAE81B,QAAQnS,EAAEtU,IAAM,GAAKrS,OAAOiC,UAAU02C,qBAAqBx2C,KAAKq2C,EAAG7xB,EAAEtU,MACvEomC,EAAE9xB,EAAEtU,IAAMmmC,EAAE7xB,EAAEtU,IAF4B,CAItD,OAAOomC,CACX,EACAz4C,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,MAAMmD,EAAc1C,EAAQ,OACtBshC,EAASthC,EAAQ,OACjB6C,EAAU7C,EAAQ,OAClB0zC,EAAsB1zC,EAAQ,OAC9B2zC,EAAoB3zC,EAAQ,OAClC,MAAMg4C,EACF50C,WAAAA,CAAYykC,EAAMxhB,EAAQ/iB,GACtBpD,KAAKwP,KAAO4xB,EAAOzV,gBACnB3rB,KAAK6c,UAAY8qB,EAAK9qB,UACtB7c,KAAKoD,OAASA,EACdpD,KAAKmmB,OAASA,EACdnmB,KAAK4+B,QAAU5+B,KAAKgtC,kBACpBhtC,KAAK2zC,cAAgB3zC,KAAK4zC,qBAC9B,CACAC,eAAAA,CAAgBh3B,GACZ7c,KAAK6c,UAAY3d,OAAO6U,OAAO/T,KAAK6c,UAAWA,EACnD,CACAgyB,QAAAA,CAASxvC,GACL,MAAwB,kBAAVA,GAAgC,OAAVA,IAAmB4jB,MAAMqhB,QAAQjlC,EACzE,CACAqU,OAAAA,CAAQ4a,GACJ,OAAOhtB,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,IAAI+E,EAAI+I,EAAIC,EAAIC,EAGhB,IAFA,EAAIozB,EAAO78B,UAAU,sCAAuCsP,KAAKC,UAAUwa,KAC3E,EAAI8S,EAAO78B,UAAU,2CAA4CvE,KAAK6c,WAClE7c,KAAK6c,UAAUE,QAAQ8F,SAASyL,EAAKve,QAAS,CAC9C,IAAKue,EAAKjlB,OACN,MAAM,IAAI+3B,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwBiP,cAAe,6BAEnF,GAAItX,KAAK6uC,SAASvgB,EAAKjlB,QAAS,CAC5B,MAAM4E,EAAKqgB,EAAKjlB,QAAQ,WAAE0uC,GAAe9pC,EAAI+pC,EAAYP,EAAOxpC,EAAI,CAAC,eACrE,IAAIgqC,EAAwG,QAAzFnqC,EAAuC,QAAjC/I,EAAK/E,KAAK6c,UAAUzX,eAA4B,IAAPL,OAAgB,EAASA,EAAG2X,gBAA6B,IAAP5O,OAAgB,EAASA,EAAG0O,QAC5I,SAAUw7B,IACVC,EAAcD,EAAU90B,OAAmG,QAAzFlV,EAAuC,QAAjCD,EAAK/N,KAAK6c,UAAUzX,eAA4B,IAAP2I,OAAgB,EAASA,EAAG2O,gBAA6B,IAAP1O,OAAgB,EAASA,EAAGwO,UAEnK8R,EAAKjlB,OAAO,QAAU4uC,EACtB3pB,EAAKjlB,OAAO,WAAarJ,KAAKgtC,kBAC9B1e,EAAKjlB,OAAO,eAAiB0uC,EAC7B,IAAI5jC,QAAiBnU,KAAKmmB,OAAOzS,QAAQ4a,GACzC,GAAItuB,KAAK6uC,SAAS16B,IAAa,WAAYA,EAAU,CACjD,MAAMjT,EAAS,CACXg3C,IAAK/jC,EAASjT,OAAOyD,YAIzB,OAFA,EAAIy8B,EAAO78B,UAAU,0CAA2CsP,KAAKC,UAAUK,KAC/E,EAAIitB,EAAO78B,UAAU,wCAAyCsP,KAAKC,UAAU5S,IACtEA,CACX,CACA,MAAM,IAAIkgC,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwBiP,cAAe,mCACnF,CAEI,MAAM,IAAI8pB,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwBiP,cAAe,kCAEvF,CACA,OAAOtX,KAAKu0C,kBAAkB7gC,QAAQ4a,EAC1C,GACJ,CACAka,eAAAA,GACI,OAAOxoC,KAAK8zC,aAChB,CACAxJ,eAAAA,CAAgB1L,EAAS2L,GAChBvqC,KAAK2zC,cAAc/U,IACpB5+B,KAAK+zC,gBAAgBnV,EAAS2L,GAElCvqC,KAAK4+B,QAAUA,EACf5+B,KAAKoD,OAAOwB,KAAKpC,EAAY6pC,gBAAgBC,sBAAuB,GAAGtsC,KAAKwP,QAAQovB,IACxF,CACAoO,eAAAA,GACI,GAAIhtC,KAAK4+B,QACL,OAAO5+B,KAAK4+B,QAChB,GAAI5+B,KAAK6c,UAAU0sB,aACf,OAAOvpC,KAAK6c,UAAU0sB,aAC1B,MAAM3K,EAAU5+B,KAAK6c,UAAUI,OAAO,GACtC,IAAK2hB,EACD,MAAM,IAAI/6B,MAAM,qBACpB,OAAO+6B,EAAQjkB,MAAM,KAAK,EAC9B,CAEAm5B,WAAAA,GACI,IAAI/uC,EAAI+I,EACR,MAAM8O,EAAW5c,KAAK6c,UAAUD,SAGhC,IAFA,EAAIwkB,EAAO78B,UAAU,6BAA8BqY,IACnD,EAAIwkB,EAAO78B,UAAU,+BAAgCsP,KAAKC,UAAU9T,KAAK6c,aACpED,EACD,MAAO,GAEX,IAAIJ,EAAoG,QAAzF1O,EAAuC,QAAjC/I,EAAK/E,KAAK6c,UAAUzX,eAA4B,IAAPL,OAAgB,EAASA,EAAG2X,gBAA6B,IAAP5O,OAAgB,EAASA,EAAG0O,QAE5I,OADA,EAAI4kB,EAAO78B,UAAU,4BAA6BiY,GAC9CA,EACO,CACHA,GAGD,EACX,CACAo3B,mBAAAA,GACI,MAAMI,EAAO,CAAC,EASd,OARAh0C,KAAK6c,UAAUI,OAAO5I,SAAS+I,IAC3B,MAAM62B,GAAgB,EAAItxC,EAAQuxC,YAAY92B,GACxC+2B,GAAY,EAAIxxC,EAAQyxC,WAAWh3B,EAAOpd,KAAK6c,WACrD,IAAIw3B,EAAer0C,KAAKs0C,mBAAmBL,EAAeE,GACtDE,IACAL,EAAKC,GAAiBI,EAC1B,IAEGL,CACX,CACAO,eAAAA,GACI,MAAMn3B,EAAQ,GAAGpd,KAAK4+B,UAChBoV,EAAOh0C,KAAK2zC,cAAcv2B,GAEhC,IADA,EAAIgkB,EAAO78B,UAAU,2BAA4B6Y,EAAO42B,GACpC,qBAATA,EACP,MAAM,IAAInwC,MAAM,yBAAyBuZ,eAE7C,OAAO42B,CACX,CACAD,eAAAA,CAAgBnV,EAAS2L,GACrB,MAAMyJ,EAAOh0C,KAAKs0C,mBAAmB1V,EAAS2L,GAC1CyJ,KACA,EAAI5S,EAAO78B,UAAU,kBAAmBq6B,EAAS2L,GACjDvqC,KAAK2zC,cAAc/U,GAAWoV,EAEtC,CACAM,kBAAAA,CAAmB1V,EAAS2L,GAExB,MAAMiK,EAAMjK,EACZ,GAAKiK,EAIA,CACD,MAAMR,EAAO,IAAIP,EAAkBgB,gBAAgB,IAAIjB,EAAoBkB,kBAAkBF,GAAK,EAAI7xC,EAAQgyC,WAAW,yBACzH,OAAOX,CACX,EANI,EAAI5S,EAAO96B,UAAU,oCAAoCs4B,IAOjE,CACAyO,gBAAAA,CAAiB/e,GACb,OAAQA,EAAKve,QACT,IAAK,sBACD,OAAO,EACX,QACI,OAAO,EAEf,OAAO,CACX,EAEJ3Q,EAAAA,WAAkB04C,C,qCCtKNh4C,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACb,IAAIwB,EAAatB,MAAQA,KAAKsB,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMtC,GAAS,OAAOA,aAAiBoC,EAAIpC,EAAQ,IAAIoC,GAAE,SAAUG,GAAWA,EAAQvC,EAAQ,GAAI,CAC3G,OAAO,IAAKoC,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU1C,GAAS,IAAM2C,EAAKN,EAAUO,KAAK5C,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAS9C,GAAS,IAAM2C,EAAKN,EAAU,SAASrC,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKd,GAAUA,EAAOkB,KAAOR,EAAQV,EAAO7B,OAASsC,EAAMT,EAAO7B,OAAOgD,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACA/C,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,MAAMmD,EAAc1C,EAAQ,OACtBshC,EAASthC,EAAQ,OACjB6C,EAAU7C,EAAQ,OAClB0zC,EAAsB1zC,EAAQ,OAC9B2zC,EAAoB3zC,EAAQ,OAClC,MAAMq4C,EACFj1C,WAAAA,CAAYykC,EAAMxhB,EAAQ/iB,GACtBpD,KAAKwP,KAAO4xB,EAAO9V,iBACnBtrB,KAAK6c,UAAY8qB,EAAK9qB,UACtB7c,KAAKoD,OAASA,EACdpD,KAAKmmB,OAASA,EACdnmB,KAAK4+B,QAAU5+B,KAAKgtC,kBACpBhtC,KAAK2zC,cAAgB3zC,KAAK4zC,qBAC9B,CACAC,eAAAA,CAAgBh3B,GACZ7c,KAAK6c,UAAY3d,OAAO6U,OAAO/T,KAAK6c,UAAWA,EACnD,CACA2rB,eAAAA,GACI,OAAOxoC,KAAK8zC,aAChB,CACApgC,OAAAA,CAAQ4a,GACJ,OAAOhtB,EAAUtB,UAAM,OAAQ,GAAQ,YAGnC,IAFA,EAAIohC,EAAO78B,UAAU,+BAAgCsP,KAAKC,UAAUwa,KACpE,EAAI8S,EAAO78B,UAAU,4BAA6BsP,KAAKC,UAAU9T,KAAK6c,YAClE7c,KAAK6c,UAAUE,QAAQ8F,SAASyL,EAAKve,QACrC,OAAO/P,KAAKmmB,OAAOzS,QAAQ4a,GAG3B,MAAM,IAAI8S,EAAOh5B,gBAAgBg5B,EAAO/4B,wBAAwB8iB,qBAAsB,yBAE9F,GACJ,CACAmf,eAAAA,CAAgB1L,EAAS2L,GAEhBvqC,KAAK2zC,cAAc/U,IACpB5+B,KAAK+zC,gBAAgBnV,EAAS2L,GAElCvqC,KAAK4+B,QAAUA,EACf5+B,KAAKoD,OAAOwB,KAAKpC,EAAY6pC,gBAAgBC,sBAAuB,GAAGtsC,KAAKwP,QAAQovB,IACxF,CACAoO,eAAAA,GACI,GAAIhtC,KAAK4+B,QACL,OAAO5+B,KAAK4+B,QAChB,GAAI5+B,KAAK6c,UAAU0sB,aACf,OAAOvpC,KAAK6c,UAAU0sB,aAC1B,MAAM3K,EAAU5+B,KAAK6c,UAAUI,OAAO,GACtC,IAAK2hB,EACD,MAAM,IAAI/6B,MAAM,qBACpB,OAAO+6B,EAAQjkB,MAAM,KAAK,EAC9B,CAEAm5B,WAAAA,GACI,MAAMl3B,EAAW5c,KAAK6c,UAAUD,SAChC,OAAKA,EAGE,IACA,IAAImuB,IAAInuB,EAENsV,QAAQ6M,GAAYA,EAAQpkB,MAAM,KAAK,KAAO3a,KAAK4+B,QAAQj6B,aAE3DmuB,KAAKiM,GAAYA,EAAQpkB,MAAM,KAAK,OAPlC,EASf,CACAi5B,mBAAAA,GACI,MAAMI,EAAO,CAAC,EASd,OARAh0C,KAAK6c,UAAUI,OAAO5I,SAAS+I,IAC3B,MAAM62B,GAAgB,EAAItxC,EAAQuxC,YAAY92B,GACxC+2B,GAAY,EAAIxxC,EAAQyxC,WAAWh3B,EAAOpd,KAAK6c,WACrD,IAAIw3B,EAAer0C,KAAKs0C,mBAAmBL,EAAeE,GACtDE,IACAL,EAAKC,GAAiBI,EAC1B,IAEGL,CACX,CACAO,eAAAA,GACI,MAAMn3B,EAAQ,GAAGpd,KAAK4+B,UAChBoV,EAAOh0C,KAAK2zC,cAAcv2B,GAChC,GAAoB,qBAAT42B,EACP,MAAM,IAAInwC,MAAM,yBAAyBuZ,eAE7C,OAAO42B,CACX,CACAD,eAAAA,CAAgBnV,EAAS2L,GACrB,MAAMyJ,EAAOh0C,KAAKs0C,mBAAmB1V,EAAS2L,GAC1CyJ,IACAh0C,KAAK2zC,cAAc/U,GAAWoV,EAEtC,CACAM,kBAAAA,CAAmB1V,EAAS2L,GAExB,MAAMiK,EAAMjK,EACZ,GAAKiK,EAIA,CACD,MAAMR,EAAO,IAAIP,EAAkBgB,gBAAgB,IAAIjB,EAAoBkB,kBAAkBF,GAAK,EAAI7xC,EAAQgyC,WAAW,yBACzH,OAAOX,CACX,CACJ,CACA3G,gBAAAA,CAAiB/e,GACb,OAAO,CACX,EAEJlvB,EAAAA,WAAkB+4C,C,qCCpHlB,IAAIp4C,EAAmBC,MAAQA,KAAKD,kBAAqBb,OAAOe,OAAU,SAASC,EAAGC,EAAGC,EAAGC,QAC7EC,IAAPD,IAAkBA,EAAKD,GAC3B,IAAIG,EAAOrB,OAAOsB,yBAAyBL,EAAGC,GACzCG,KAAS,QAASA,GAAQJ,EAAEM,WAAaF,EAAKG,UAAYH,EAAKI,gBAClEJ,EAAO,CAAEK,YAAY,EAAMC,IAAK,WAAa,OAAOV,EAAEC,EAAI,IAE5DlB,OAAOC,eAAee,EAAGG,EAAIE,EACjC,EAAM,SAASL,EAAGC,EAAGC,EAAGC,QACTC,IAAPD,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,EACd,GACIwlB,EAAgB5lB,MAAQA,KAAK4lB,cAAiB,SAASzlB,EAAGf,GAC1D,IAAK,IAAIymB,KAAK1lB,EAAa,YAAN0lB,GAAoB3mB,OAAOiC,UAAUC,eAAeC,KAAKjC,EAASymB,IAAI9lB,EAAgBX,EAASe,EAAG0lB,EAC3H,EACA3mB,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDumB,EAAa9lB,EAAQ,OAAgBV,GACrCwmB,EAAa9lB,EAAQ,OAAWV,E,mCChBhCF,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,G,mCCAtDH,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQy3C,iBAAmBz3C,EAAQg5C,wBAAqB,EACxD,MAAMA,GAENh5C,EAAQg5C,mBAAqBA,EAC7B,MAAMvB,EACF3zC,WAAAA,CAAYm1C,GACZ,EAEJj5C,EAAQy3C,iBAAmBA,C,mCCT3B33C,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQwoC,UAAYxoC,EAAQu1C,eAAY,EACxC,MAAM2D,EAAU,CAAC,EACX3D,EAAahjC,GACR2mC,EAAQ3mC,GAEnBvS,EAAQu1C,UAAYA,EACpB,MAAM/M,EAAYA,CAACj2B,EAAKtS,KACpBi5C,EAAQ3mC,GAAOtS,CAAK,EAExBD,EAAQwoC,UAAYA,C,qCCVpB,IAAI7nC,EAAmBC,MAAQA,KAAKD,kBAAqBb,OAAOe,OAAU,SAASC,EAAGC,EAAGC,EAAGC,QAC7EC,IAAPD,IAAkBA,EAAKD,GAC3B,IAAIG,EAAOrB,OAAOsB,yBAAyBL,EAAGC,GACzCG,KAAS,QAASA,GAAQJ,EAAEM,WAAaF,EAAKG,UAAYH,EAAKI,gBAClEJ,EAAO,CAAEK,YAAY,EAAMC,IAAK,WAAa,OAAOV,EAAEC,EAAI,IAE5DlB,OAAOC,eAAee,EAAGG,EAAIE,EACjC,EAAM,SAASL,EAAGC,EAAGC,EAAGC,QACTC,IAAPD,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,EACd,GACIwlB,EAAgB5lB,MAAQA,KAAK4lB,cAAiB,SAASzlB,EAAGf,GAC1D,IAAK,IAAIymB,KAAK1lB,EAAa,YAAN0lB,GAAoB3mB,OAAOiC,UAAUC,eAAeC,KAAKjC,EAASymB,IAAI9lB,EAAgBX,EAASe,EAAG0lB,EAC3H,EACA3mB,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDumB,EAAa9lB,EAAQ,OAAWV,GAChCwmB,EAAa9lB,EAAQ,OAAcV,E,qCCjBvBU,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACbZ,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQg1C,UAAYA,EACpBh1C,EAAQ80C,WAAaA,EACrB90C,EAAQgwC,qBAAuBA,EAC/BhwC,EAAQm5C,uBAAyBA,EACjCn5C,EAAQo5C,aAAeA,EACvBp5C,EAAQq5C,YAAcA,EACtBr5C,EAAQgrC,qBAAuBA,EAC/BhrC,EAAQkyC,yBAA2BA,EACnC,MAAMlQ,EAASthC,EAAQ,OACvB,SAASs0C,EAAUxV,EAAS4V,EAAKkE,GAC7B,IAAI3zC,EACJ,MAAMqY,EAAQo7B,EAAa5Z,GAE3B,OAA+B,QAArB75B,EAAKyvC,EAAIzB,cAA2B,IAAPhuC,OAAgB,EAASA,EAAGqY,EAAMu7B,aACrE,EACR,CACA,SAASzE,EAAW92B,GAChB,OAAOA,EAAMyF,SAAS,KAAOzF,EAAMzC,MAAM,KAAK,GAAKyC,CACvD,CACA,SAASgyB,EAAqBrQ,GAC1B,IAAKA,EACD,MAAO,GAEX,IACI,IAAI5hB,EAAa4hB,EAAQpkB,MAAM,KAAKM,MAAM,GACtCuB,EAAUW,EAAW9V,OAAS,EAAI8V,EAAW5C,KAAK,KAAO,GAE7D,OADA,EAAI6mB,EAAO78B,UAAU,4CAA6CiY,EAASuiB,GACpEviB,CACX,CACA,MAAOta,GAEH,OADA,EAAIk/B,EAAO96B,UAAU,8BAA+By4B,GAC7C,EACX,CACJ,CA8FA,SAASwZ,EAAuB3Z,GAC5B,MAAuB,kBAAZA,EACAA,EACPA,EAAQ/b,SAAS,MACVyW,SAASsF,EAAS,KAE7BA,EAAUA,EAAQ/b,SAAS,KAAO+b,EAAQjkB,MAAM,KAAK,GAAKikB,EACnD2E,MAAMxuB,OAAO6pB,IAAYA,EAAU7pB,OAAO6pB,GACrD,CACA,MAAMga,EAAiB,IACvB,SAASJ,EAAap7B,GAClB,MAAOP,EAAW87B,GAAav7B,EAAMzC,MAAMi+B,GAC3C,MAAO,CAAE/7B,YAAW87B,YACxB,CACA,SAASF,EAAYzf,EAAI,GAAI6f,EAAI,IAC7B,MAAO,IAAI,IAAI9N,IAAI,IAAI/R,KAAM6f,IACjC,CACA,SAASzO,EAAqB3yB,GAC1B,QAAKA,IAGkB,eAAnBA,EAAO4Z,aAGP,EAAI+P,EAAOzU,gBAAgB,SAAUlV,EAAOytB,YAAc,IAGvDoM,KACX,CACA,SAASA,IACL,IACI,QAAU1nB,OAAOkvB,SACrB,CACA,MAAO52C,GACH,OAAO,CACX,CACJ,C,uGCpKOiD,GAAG,O,mgBAAR4zC,EAAAA,EAAAA,IA6xBM,MA7xBNC,EA6xBM,EA5xBJC,EAAAA,EAAAA,IA2xBeC,EAAA,MA7xBnBl/B,SAAAm/B,EAAAA,EAAAA,KAGM,IAAkC,EAAlCF,EAAAA,EAAAA,IAAkCG,EAAA,MAHxCp/B,SAAAm/B,EAAAA,EAAAA,KAGiB,IAAWE,EAAA,MAAAA,EAAA,MAH5BC,EAAAA,EAAAA,IAGiB,mBAHjB9oB,EAAA,KAIMyoB,EAAAA,EAAAA,IAwxBUM,EAAA,MA5xBhBv/B,SAAAm/B,EAAAA,EAAAA,KAKQ,IAgBU,EAhBVF,EAAAA,EAAAA,IAgBUO,EAAA,CAhBDC,MAAM,eAAa,CACf3+B,QAAMq+B,EAAAA,EAAAA,KACf,IAAiDE,EAAA,MAAAA,EAAA,MAAjDK,EAAAA,EAAAA,IAAiD,OAA5CC,MAAA,wBAA2B,eAAW,OAPvD3/B,SAAAm/B,EAAAA,EAAAA,KASU,IAIS,EAJTF,EAAAA,EAAAA,IAISW,EAAA,CAJDH,MAAM,YAAU,CATlCz/B,SAAAm/B,EAAAA,EAAAA,KAUY,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAV7B9/B,SAAAm/B,EAAAA,EAAAA,KAWc,IAAgC,gBAAhCO,EAAAA,EAAAA,IAAgC,cAAxB,mBAAe,KAXrCJ,EAAAA,EAAAA,IAW8C,KAACS,EAAAA,EAAAA,IAAGC,EAAA1C,kBAAgB,MAXlE9mB,EAAA,OAAAA,EAAA,KAeUyoB,EAAAA,EAAAA,IAISW,EAAA,CAJDH,MAAM,YAAU,CAflCz/B,SAAAm/B,EAAAA,EAAAA,KAgBY,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAhB7B9/B,SAAAm/B,EAAAA,EAAAA,KAiBc,IAAyB,gBAAzBO,EAAAA,EAAAA,IAAyB,cAAjB,YAAQ,KAjB9BJ,EAAAA,EAAAA,IAiBuC,KAACS,EAAAA,EAAAA,IAAGE,EAAArxC,eAAa,MAjBxD4nB,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAuBQyoB,EAAAA,EAAAA,IA4OUO,EAAA,CA5ODC,MAAM,kBAAgB,CAClB3+B,QAAMq+B,EAAAA,EAAAA,KACf,IAAoDE,EAAA,MAAAA,EAAA,MAApDK,EAAAA,EAAAA,IAAoD,OAA/CC,MAAA,wBAA2B,kBAAc,OAzB1D3/B,SAAAm/B,EAAAA,EAAAA,KA4BU,IAUS,EAVTF,EAAAA,EAAAA,IAUSW,EAAA,CAVDH,MAAM,YAAU,CA5BlCz/B,SAAAm/B,EAAAA,EAAAA,KA6BY,IAGS,EAHTF,EAAAA,EAAAA,IAGSY,EAAA,CAHAC,KAAM,IAAE,CA7B7B9/B,SAAAm/B,EAAAA,EAAAA,KA8Bc,IACuB,EADvBF,EAAAA,EAAAA,IACuBiB,EAAA,CA/BrCC,WA8BoCF,EAAAG,OA9BpC,sBAAAf,EAAA,KAAAA,EAAA,GAAAgB,GA8BoCJ,EAAAG,OAAMC,GAAGC,SAAQL,EAAAM,c,CA9BrDvgC,SAAAm/B,EAAAA,EAAAA,KA8BmE,IAC5CE,EAAA,MAAAA,EAAA,MA/BvBC,EAAAA,EAAAA,IA8BmE,gBA9BnE9oB,EAAA,G,gCAAAA,EAAA,KAkCYyoB,EAAAA,EAAAA,IAGSY,EAAA,CAHAC,KAAM,IAAE,CAlC7B9/B,SAAAm/B,EAAAA,EAAAA,KAmCc,IAC+B,EAD/BF,EAAAA,EAAAA,IAC+BiB,EAAA,CApC7CC,WAmCoCF,EAAAO,cAnCpC,sBAAAnB,EAAA,KAAAA,EAAA,GAAAgB,GAmCoCJ,EAAAO,cAAaH,GAAGC,SAAQL,EAAAQ,qB,CAnC5DzgC,SAAAm/B,EAAAA,EAAAA,KAmCiF,IAClDE,EAAA,MAAAA,EAAA,MApC/BC,EAAAA,EAAAA,IAmCiF,wBAnCjF9oB,EAAA,G,gCAAAA,EAAA,OAAAA,EAAA,KAyCUyoB,EAAAA,EAAAA,IAWSW,EAAA,CAXDD,MAAA,0BAA2B,CAzC7C3/B,SAAAm/B,EAAAA,EAAAA,KA0CY,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,GAAC,CA1C5B9/B,SAAAm/B,EAAAA,EAAAA,KA2Cc,IAAqCE,EAAA,MAAAA,EAAA,MAArCK,EAAAA,EAAAA,IAAqC,KAAlCC,MAAA,sBAAwB,UAAM,OA3C/CnpB,EAAA,KA6CYyoB,EAAAA,EAAAA,IAMSY,EAAA,CANAC,KAAM,IAAE,CA7C7B9/B,SAAAm/B,EAAAA,EAAAA,KA8Cc,IAIY,EAJZF,EAAAA,EAAAA,IAIYyB,EAAA,CAlD1BP,WA8CkCF,EAAAU,OA9ClC,sBAAAtB,EAAA,KAAAA,EAAA,GAAAgB,GA8CkCJ,EAAAU,OAAMN,GAAEO,YAAY,SAAUN,SAAQN,EAAAa,mBAAoBC,SAAA,I,CA9C5F9gC,SAAAm/B,EAAAA,EAAAA,KA+CgB,IAA2C,EAA3CF,EAAAA,EAAAA,IAA2C8B,EAAA,CAAhCC,MAAM,SAAS37C,MAAM,YAChC45C,EAAAA,EAAAA,IAA6C8B,EAAA,CAAlCC,MAAM,UAAU37C,MAAM,aACjC45C,EAAAA,EAAAA,IAAyC8B,EAAA,CAA9BC,MAAM,QAAQ37C,MAAM,aAjD/CmxB,EAAA,G,gCAAAA,EAAA,OAAAA,EAAA,KAsDUyoB,EAAAA,EAAAA,IA6BSW,EAAA,CA7BDD,MAAA,4DAA4D,CAtD9E3/B,SAAAm/B,EAAAA,EAAAA,KAuDY,IAGS,EAHTF,EAAAA,EAAAA,IAGSY,EAAA,CAHAC,KAAM,EAAGH,MAAA,a,CAvD9B3/B,SAAAm/B,EAAAA,EAAAA,KAwDc,IAA2DE,EAAA,MAAAA,EAAA,MAA3DK,EAAAA,EAAAA,IAA2D,KAAxDC,MAAA,mCAAqC,mBAAe,IACvDD,EAAAA,EAAAA,IAAwD,KAArDC,MAAA,kCAAoC,iBAAa,OAzDlEnpB,EAAA,KA2DYyoB,EAAAA,EAAAA,IAaSY,EAAA,CAbAC,KAAM,IAAE,CA3D7B9/B,SAAAm/B,EAAAA,EAAAA,KA4Dc,IAWY,EAXZF,EAAAA,EAAAA,IAWYyB,EAAA,CAvE1BP,WA6DyBF,EAAAgB,eA7DzB,sBAAA5B,EAAA,KAAAA,EAAA,GAAAgB,GA6DyBJ,EAAAgB,eAAcZ,GACtBC,SAAQN,EAAAkB,2BACTN,YAAY,mB,CA/D5B5gC,SAAAm/B,EAAAA,EAAAA,KAkEkB,IAAoC,gBADtCJ,EAAAA,EAAAA,IAKEoC,EAAAA,GAAA,MAtElBC,EAAAA,EAAAA,IAkEqCnB,EAAAoB,kBAAZC,K,WADTC,EAAAA,EAAAA,IAKER,EAAA,CAHCppC,IAAG,iCAAmC2pC,IACtCN,MAAOM,EACPj8C,MAAOi8C,G,sCArE1B9qB,EAAA,G,gCAAAA,EAAA,KAyEYyoB,EAAAA,EAAAA,IASSY,EAAA,CATAC,KAAM,IAAE,CAzE7B9/B,SAAAm/B,EAAAA,EAAAA,KA0Ec,IAOE,CANyB,aAAnBc,EAAAgB,iBAAc,WADtBM,EAAAA,EAAAA,IAOEC,EAAA,CAjFhB7pC,IAAA,EAAAwoC,WA4EyBF,EAAAwB,SA5EzB,sBAAApC,EAAA,KAAAA,EAAA,GAAAgB,GA4EyBJ,EAAAwB,SAAQpB,GAChBC,SAAQN,EAAA0B,6BACTd,YAAY,WACXe,SAA6B,aAAnB1B,EAAAgB,eACXtB,MAAA,gB,+CAhFhBiC,EAAAA,EAAAA,IAAA,UAAAprB,EAAA,OAAAA,EAAA,KAqFUyoB,EAAAA,EAAAA,IAUSW,EAAA,CAVDD,MAAA,0BAA2B,CArF7C3/B,SAAAm/B,EAAAA,EAAAA,KAsFY,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,GAAC,CAtF5B9/B,SAAAm/B,EAAAA,EAAAA,KAuFc,IAAmCE,EAAA,MAAAA,EAAA,MAAnCK,EAAAA,EAAAA,IAAmC,KAAhCC,MAAA,sBAAwB,QAAI,OAvF7CnpB,EAAA,KAyFYyoB,EAAAA,EAAAA,IAKSY,EAAA,CALAC,KAAM,IAAE,CAzF7B9/B,SAAAm/B,EAAAA,EAAAA,KA0Fc,IAGY,EAHZF,EAAAA,EAAAA,IAGYyB,EAAA,CA7F1BP,WA0FkCF,EAAA5nB,SA1FlC,sBAAAgnB,EAAA,KAAAA,EAAA,GAAAgB,GA0FkCJ,EAAA5nB,SAAQgoB,GAAGC,SAAQN,EAAA6B,qBAAsBjB,YAAY,Y,CA1FvF5gC,SAAAm/B,EAAAA,EAAAA,KA2F2B,IAAyB,gBAApCJ,EAAAA,EAAAA,IACoBoC,EAAAA,GAAA,MA5FpCC,EAAAA,EAAAA,IA2F4CnB,EAAA6B,SAAVC,K,WAAlBR,EAAAA,EAAAA,IACoBR,EAAA,CADkBppC,IAAG,0BAA4BoqC,IAAWf,MAAOe,EACpF18C,MAAO08C,G,sCA5F1BvrB,EAAA,G,gCAAAA,EAAA,OAAAA,EAAA,KAiGUyoB,EAAAA,EAAAA,IAUSW,EAAA,CAVDD,MAAA,0BAA2B,CAjG7C3/B,SAAAm/B,EAAAA,EAAAA,KAkGY,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,GAAC,CAlG5B9/B,SAAAm/B,EAAAA,EAAAA,KAmGc,IAAoCE,EAAA,MAAAA,EAAA,MAApCK,EAAAA,EAAAA,IAAoC,KAAjCC,MAAA,sBAAwB,SAAK,OAnG9CnpB,EAAA,KAqGYyoB,EAAAA,EAAAA,IAKSY,EAAA,CALAC,KAAM,IAAE,CArG7B9/B,SAAAm/B,EAAAA,EAAAA,KAsGc,IAGY,EAHZF,EAAAA,EAAAA,IAGYyB,EAAA,CAzG1BP,WAsGkCF,EAAA+B,MAtGlC,sBAAA3C,EAAA,KAAAA,EAAA,GAAAgB,GAsGkCJ,EAAA+B,MAAK3B,GAAGC,SAAQN,EAAAiC,kBAAmBrB,YAAY,S,CAtGjF5gC,SAAAm/B,EAAAA,EAAAA,KAuGgB,IAAgD,EAAhDF,EAAAA,EAAAA,IAAgD8B,EAAA,CAArCC,MAAM,QAAS37C,MAAO46C,EAAAiC,MAAMC,O,mBACvClD,EAAAA,EAAAA,IAA8C8B,EAAA,CAAnCC,MAAM,OAAQ37C,MAAO46C,EAAAiC,MAAME,M,qBAxGtD5rB,EAAA,G,gCAAAA,EAAA,OAAAA,EAAA,KA4HUyoB,EAAAA,EAAAA,IAqBSW,EAAA,CArBDD,MAAA,0BAA2B,CA5H7C3/B,SAAAm/B,EAAAA,EAAAA,KA6HY,IAGS,EAHTF,EAAAA,EAAAA,IAGSY,EAAA,CAHAC,KAAM,GAAC,CA7H5B9/B,SAAAm/B,EAAAA,EAAAA,KA8Hc,IAAsCE,EAAA,MAAAA,EAAA,MAAtCK,EAAAA,EAAAA,IAAsC,KAAnCC,MAAA,sBAAwB,WAAO,IAClCD,EAAAA,EAAAA,IAAsC,KAAnCC,MAAA,sBAAwB,WAAO,OA/HhDnpB,EAAA,KAiIYyoB,EAAAA,EAAAA,IAeSY,EAAA,CAfAC,KAAM,IAAE,CAjI7B9/B,SAAAm/B,EAAAA,EAAAA,KAkIc,IAOY,EAPZF,EAAAA,EAAAA,IAOYyB,EAAA,CAzI1BP,WAkIkCF,EAAAoC,eAlIlC,sBAAAhD,EAAA,KAAAA,EAAA,GAAAgB,GAkIkCJ,EAAAoC,eAAchC,GAAGC,SAAQN,EAAAsC,2BAA4BxB,SAAA,GAASF,YAAY,W,CAlI5G5gC,SAAAm/B,EAAAA,EAAAA,KAoIoB,IAA8B,gBADlCJ,EAAAA,EAAAA,IAKYoC,EAAAA,GAAA,MAxI5BC,EAAAA,EAAAA,IAoImCnB,EAAAsC,gBAAR7lC,K,WADX6kC,EAAAA,EAAAA,IAKYR,EAAA,CAHPppC,IAAK+E,EACLskC,MAAOtkC,EACPrX,MAAOqX,G,sCAvI5B8Z,EAAA,G,gCAAAA,EAAA,OAAAA,EAAA,KAmJUyoB,EAAAA,EAAAA,IAOSW,EAAA,CAPDD,MAAA,0BAA2B,CAnJ7C3/B,SAAAm/B,EAAAA,EAAAA,KAoJY,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,GAAC,CApJ5B9/B,SAAAm/B,EAAAA,EAAAA,KAqJc,IAAwCE,EAAA,MAAAA,EAAA,MAAxCK,EAAAA,EAAAA,IAAwC,KAArCC,MAAA,sBAAwB,aAAS,OArJlDnpB,EAAA,KAuJYyoB,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAvJ7B9/B,SAAAm/B,EAAAA,EAAAA,KAwJc,IAA4E,EAA5EF,EAAAA,EAAAA,IAA4EuC,EAAA,CAxJ1FrB,WAwJiCF,EAAAuC,cAxJjC,sBAAAnD,EAAA,KAAAA,EAAA,GAAAgB,GAwJiCJ,EAAAuC,cAAanC,GAAGO,YAAY,mB,0BAxJ7DpqB,EAAA,OAAAA,EAAA,KA6JUyoB,EAAAA,EAAAA,IAeSW,EAAA,CAfA6C,OAAQ,GAAIC,MAAM,U,CA7JrC1iC,SAAAm/B,EAAAA,EAAAA,KA8JY,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CA9J7B9/B,SAAAm/B,EAAAA,EAAAA,KA+Jc,IAA4DE,EAAA,MAAAA,EAAA,MAA5DK,EAAAA,EAAAA,IAA4D,OAAvDC,MAAA,wBAA2B,0BAAsB,OA/JpEnpB,EAAA,M,aAiKYuoB,EAAAA,EAAAA,IAUSoC,EAAAA,GAAA,MA3KrBC,EAAAA,EAAAA,IAmK6Bl8C,OAAOmkB,KAAK42B,EAAA0C,kBAApBjmC,K,WAFT6kC,EAAAA,EAAAA,IAUS1B,EAAA,CATNC,KAAM,EAENnoC,IAAK+E,G,CApKpBsD,SAAAm/B,EAAAA,EAAAA,KAsKc,IAIC,EAJDF,EAAAA,EAAAA,IAICiB,EAAA,CA1KfC,WAuKyBF,EAAA0C,gBAAgBjmC,GAAMkmC,QAvK/C,sBAAAvC,GAuKyBJ,EAAA0C,gBAAgBjmC,GAAMkmC,QAAOvC,EACrCsB,UAAW1B,EAAA4C,e,CAxK5B7iC,SAAAm/B,EAAAA,EAAAA,KAyKiB,IAAgC,EAzKjDG,EAAAA,EAAAA,KAAAS,EAAAA,EAAAA,IAyKoBE,EAAA0C,gBAAgBjmC,GAAMlH,MAAI,MAzK9CghB,EAAA,G,yDAAAA,EAAA,G,kBAAAA,EAAA,KA8KUyoB,EAAAA,EAAAA,IAuBSW,EAAA,CAvBA6C,OAAQ,GAAIC,MAAM,SAAS/C,MAAA,uB,CA9K9C3/B,SAAAm/B,EAAAA,EAAAA,KA+KY,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CA/K7B9/B,SAAAm/B,EAAAA,EAAAA,KAgLc,IAA4DE,EAAA,MAAAA,EAAA,MAA5DK,EAAAA,EAAAA,IAA4D,OAAvDC,MAAA,wBAA2B,0BAAsB,OAhLpEnpB,EAAA,KAkLYyoB,EAAAA,EAAAA,IAGSY,EAAA,CAHAC,KAAM,GAAC,CAlL5B9/B,SAAAm/B,EAAAA,EAAAA,KAmLc,IACoB,EADpBF,EAAAA,EAAAA,IACoBiB,EAAA,CADN0C,QAAS3C,EAAA6C,kBAAkB,OAASxC,SAAMjB,EAAA,KAAAA,EAAA,OAAQY,EAAA8C,mBAAmB,S,CAnLjG/iC,SAAAm/B,EAAAA,EAAAA,KAmLyG,IACrFE,EAAA,MAAAA,EAAA,MApLpBC,EAAAA,EAAAA,IAmLyG,aAnLzG9oB,EAAA,G,kBAAAA,EAAA,KAsLYyoB,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,GAAC,CAtL5B9/B,SAAAm/B,EAAAA,EAAAA,KAuLc,IAAqG,EAArGF,EAAAA,EAAAA,IAAqGiB,EAAA,CAAvF0C,QAAS3C,EAAA6C,kBAAkB,IAAMxC,SAAMjB,EAAA,MAAAA,EAAA,QAAQY,EAAA8C,mBAAmB,M,CAvL9F/iC,SAAAm/B,EAAAA,EAAAA,KAuLmG,IAAEE,EAAA,MAAAA,EAAA,MAvLrGC,EAAAA,EAAAA,IAuLmG,UAvLnG9oB,EAAA,G,kBAAAA,EAAA,KAyLYyoB,EAAAA,EAAAA,IAGSY,EAAA,CAHAC,KAAM,GAAC,CAzL5B9/B,SAAAm/B,EAAAA,EAAAA,KA0Lc,IACoB,EADpBF,EAAAA,EAAAA,IACoBiB,EAAA,CADN0C,QAAS3C,EAAA6C,kBAAkB,MAAQxC,SAAMjB,EAAA,MAAAA,EAAA,QAAQY,EAAA8C,mBAAmB,Q,CA1LhG/iC,SAAAm/B,EAAAA,EAAAA,KA0LuG,IACnFE,EAAA,MAAAA,EAAA,MA3LpBC,EAAAA,EAAAA,IA0LuG,aA1LvG9oB,EAAA,G,kBAAAA,EAAA,KA6LYyoB,EAAAA,EAAAA,IAGSY,EAAA,CAHAC,KAAM,GAAC,CA7L5B9/B,SAAAm/B,EAAAA,EAAAA,KA8Lc,IACqE,EADrEF,EAAAA,EAAAA,IACqEiB,EAAA,CADvD0C,QAAS3C,EAAA6C,kBAAkB,UACtCxC,SAAMjB,EAAA,MAAAA,EAAA,QAAQY,EAAA8C,mBAAmB,Y,CA/LlD/iC,SAAAm/B,EAAAA,EAAAA,KA+L6D,IAAQE,EAAA,MAAAA,EAAA,MA/LrEC,EAAAA,EAAAA,IA+L6D,gBA/L7D9oB,EAAA,G,kBAAAA,EAAA,KAkMYyoB,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,GAAC,CAlM5B9/B,SAAAm/B,EAAAA,EAAAA,KAmMc,IAAuL,EAAvLF,EAAAA,EAAAA,IAAuLiB,EAAA,CAAzK0C,QAAS3C,EAAA6C,kBAAkB,2CAA6CxC,SAAMjB,EAAA,MAAAA,EAAA,QAAQY,EAAA8C,mBAAmB,6C,CAnMrI/iC,SAAAm/B,EAAAA,EAAAA,KAmMiL,IAAME,EAAA,MAAAA,EAAA,MAnMvLC,EAAAA,EAAAA,IAmMiL,cAnMjL9oB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAuMUyoB,EAAAA,EAAAA,IAUSW,EAAA,CAVA6C,OAAQ,GAAIhD,MAAM,c,CAvMrCz/B,SAAAm/B,EAAAA,EAAAA,KAwMY,IAQS,EARTF,EAAAA,EAAAA,IAQSY,EAAA,CARAC,KAAM,IAAE,CAxM7B9/B,SAAAm/B,EAAAA,EAAAA,KAyMc,IAMC,EANDF,EAAAA,EAAAA,IAMC+D,EAAA,CALG10B,KAAK,UACJ20B,QAAOjD,EAAAkD,eACRnpB,KAAK,qBACJ4nB,UAAW1B,EAAA4C,e,CA7M9B7iC,SAAAm/B,EAAAA,EAAAA,KA8Me,IAAoB,EA9MnCG,EAAAA,EAAAA,KAAAS,EAAAA,EAAAA,IA8MkBE,EAAAkD,gBAAc,MA9MhC3sB,EAAA,G,6BAAAA,EAAA,OAAAA,EAAA,KAmNUyoB,EAAAA,EAAAA,IAUSW,EAAA,CAVA6C,OAAQ,GAAIhD,MAAM,c,CAnNrCz/B,SAAAm/B,EAAAA,EAAAA,KAoNY,IAQS,EARTF,EAAAA,EAAAA,IAQSY,EAAA,CARAC,KAAM,IAAE,CApN7B9/B,SAAAm/B,EAAAA,EAAAA,KAqNc,IAMC,EANDF,EAAAA,EAAAA,IAMC+D,EAAA,CALC10B,KAAK,UACJ20B,QAAOjD,EAAAoD,kBACRrpB,KAAK,qBACJ4nB,UAAW1B,EAAA4C,e,CAzN5B7iC,SAAAm/B,EAAAA,EAAAA,KA0NiB,IAAsB,EA1NvCG,EAAAA,EAAAA,KAAAS,EAAAA,EAAAA,IA0NoBE,EAAAoD,kBAAgB,MA1NpC7sB,EAAA,G,6BAAAA,EAAA,OAAAA,EAAA,KAgOUyoB,EAAAA,EAAAA,IAUSW,EAAA,CAVA6C,OAAQ,GAAIhD,MAAM,c,CAhOrCz/B,SAAAm/B,EAAAA,EAAAA,KAiOY,IAQS,EARTF,EAAAA,EAAAA,IAQSY,EAAA,CARAC,KAAM,IAAE,CAjO7B9/B,SAAAm/B,EAAAA,EAAAA,KAkOc,IAMC,EANDF,EAAAA,EAAAA,IAMC+D,EAAA,CALG10B,KAAK,UACJ20B,QAAOjD,EAAAsD,oBACRvpB,KAAK,qBACJ4nB,UAAW1B,EAAA4C,e,CAtO9B7iC,SAAAm/B,EAAAA,EAAAA,KAuOe,IAAuB,EAvOtCG,EAAAA,EAAAA,KAAAS,EAAAA,EAAAA,IAuOkBE,EAAAsD,mBAAiB,MAvOnC/sB,EAAA,G,6BAAAA,EAAA,OAAAA,EAAA,KA4OUyoB,EAAAA,EAAAA,IAUSW,EAAA,CAVA6C,OAAQ,GAAIhD,MAAM,c,CA5OrCz/B,SAAAm/B,EAAAA,EAAAA,KA6OY,IAQS,EARTF,EAAAA,EAAAA,IAQSY,EAAA,CARAC,KAAM,IAAE,CA7O7B9/B,SAAAm/B,EAAAA,EAAAA,KA8Oc,IAMC,EANDF,EAAAA,EAAAA,IAMC+D,EAAA,CALC10B,KAAK,SACJ20B,QAAOjD,EAAAwD,iBACRzpB,KAAK,wBACJ4nB,UAAW1B,EAAA4C,eAAyC,GAAxB5C,EAAAwD,cAAcp2C,Q,CAlP3D2S,SAAAm/B,EAAAA,EAAAA,KAmPiB,IAAyB,EAnP1CG,EAAAA,EAAAA,KAAAS,EAAAA,EAAAA,IAmPoBE,EAAAyD,qBAAmB,MAnPvCltB,EAAA,G,6BAAAA,EAAA,OAAAA,EAAA,M,WAwPU+qB,EAAAA,EAAAA,IAUWoC,EAAAA,GAAA,CAVDne,GAAG,QAAM,CACNya,EAAA2D,YAAS,WAApB7E,EAAAA,EAAAA,IAQM,OAjQlBpnC,IAAA,EAyPkC8nC,MAAM,gBAAiBwD,QAAK5D,EAAA,MAAAA,EAAA,QAAA/qB,IAAE0rB,EAAA6D,YAAA7D,EAAA6D,cAAAvvB,K,EAClDorB,EAAAA,EAAAA,IAMM,OANDD,MAAM,gBAAiBwD,QAAK5D,EAAA,MAAAA,EAAA,KA1P/CyE,EAAAA,EAAAA,KA0PyC,QAAW,Y,EACpCpE,EAAAA,EAAAA,IAES,UAFDD,MAAM,eAAgBwD,QAAK5D,EAAA,MAAAA,EAAA,QAAA/qB,IAAE0rB,EAAA6D,YAAA7D,EAAA6D,cAAAvvB,KAAY,OAEjD,eACAorB,EAAAA,EAAAA,IAAwB,UAApB,mBAAe,KACnBT,EAAAA,EAAAA,IAAqD8E,EAAA,CAAxC1+C,MAAO46C,EAAA+D,QAAU56B,KAAM,IAAK66B,MAAM,K,wBA/P/DrC,EAAAA,EAAAA,IAAA,aAAAprB,EAAA,KAsQQyoB,EAAAA,EAAAA,IAqhBUO,EAAA,CArhBDC,MAAM,kBAAgB,CAClB3+B,QAAMq+B,EAAAA,EAAAA,KACf,IAAkDE,EAAA,MAAAA,EAAA,MAAlDK,EAAAA,EAAAA,IAAkD,OAA7CC,MAAA,wBAA2B,gBAAY,OAxQxD3/B,SAAAm/B,EAAAA,EAAAA,KA2QU,IAwdU,EAxdVF,EAAAA,EAAAA,IAwdUiF,EAAA,CAnuBpB/D,WA2Q4BF,EAAAkE,UA3Q5B,sBAAA9E,EAAA,MAAAA,EAAA,IAAAgB,GA2Q4BJ,EAAAkE,UAAS9D,GAAE/xB,KAAK,cAAe81B,WAAWpE,EAAAqE,gB,CA3QtErkC,SAAAm/B,EAAAA,EAAAA,KA6QY,IA4Dc,EA5DdF,EAAAA,EAAAA,IA4DcqF,EAAA,CA5DDtD,MAAM,MAAMxrC,KAAK,Y,CA7Q1CwK,SAAAm/B,EAAAA,EAAAA,KA8Qc,IAIS,EAJTF,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CA9QzCz/B,SAAAm/B,EAAAA,EAAAA,KA+QgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CA/QjC9/B,SAAAm/B,EAAAA,EAAAA,KAgRkB,IAA2F,EAA3FF,EAAAA,EAAAA,IAA2F+D,EAAA,CAAhF10B,KAAK,UAAW20B,QAAOjD,EAAAuE,qB,CAhRpDvkC,SAAAm/B,EAAAA,EAAAA,KAgRyE,IAAwBE,EAAA,MAAAA,EAAA,MAhRjGC,EAAAA,EAAAA,IAgRyE,gCAhRzE9oB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAoRcyoB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CApRzCz/B,SAAAm/B,EAAAA,EAAAA,KAqRgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CArRjC9/B,SAAAm/B,EAAAA,EAAAA,KAsRkB,IAA6E,EAA7EF,EAAAA,EAAAA,IAA6E+D,EAAA,CAAlE10B,KAAK,UAAW20B,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAAwE,gB,CAtRpDxkC,SAAAm/B,EAAAA,EAAAA,KAsRmE,IAAgBE,EAAA,MAAAA,EAAA,MAtRnFC,EAAAA,EAAAA,IAsRmE,wBAtRnE9oB,EAAA,OAAAA,EAAA,OAAAA,EAAA,KA0RcyoB,EAAAA,EAAAA,IAKSW,EAAA,CALA6C,OAAQ,GAAIhD,MAAM,c,CA1RzCz/B,SAAAm/B,EAAAA,EAAAA,KA2RgB,IAGS,EAHTF,EAAAA,EAAAA,IAGSY,EAAA,CAHAC,KAAM,IAAE,CA3RjC9/B,SAAAm/B,EAAAA,EAAAA,KA4RkB,IAC6F,EAD7FF,EAAAA,EAAAA,IAC6F+D,EAAA,CADlF10B,KAAK,UACb20B,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAAyE,+B,CA7R5BzkC,SAAAm/B,EAAAA,EAAAA,KA6R0D,IAAyCE,EAAA,MAAAA,EAAA,MA7RnGC,EAAAA,EAAAA,IA6R0D,iDA7R1D9oB,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAgScyoB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAhSzCz/B,SAAAm/B,EAAAA,EAAAA,KAiSgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAjSjC9/B,SAAAm/B,EAAAA,EAAAA,KAkSkB,IAAgG,EAAhGF,EAAAA,EAAAA,IAAgG+D,EAAA,CAArF10B,KAAK,UAAW20B,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAA0E,4B,CAlSpD1kC,SAAAm/B,EAAAA,EAAAA,KAkS+E,IAAuBE,EAAA,MAAAA,EAAA,MAlStGC,EAAAA,EAAAA,IAkS+E,+BAlS/E9oB,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAqScyoB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CArSzCz/B,SAAAm/B,EAAAA,EAAAA,KAsSgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAtSjC9/B,SAAAm/B,EAAAA,EAAAA,KAuSkB,IAA4E,EAA5EF,EAAAA,EAAAA,IAA4E+D,EAAA,CAAjE10B,KAAK,UAAW20B,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAA2E,kB,CAvSpD3kC,SAAAm/B,EAAAA,EAAAA,KAuSqE,IAAaE,EAAA,MAAAA,EAAA,MAvSlFC,EAAAA,EAAAA,IAuSqE,qBAvSrE9oB,EAAA,OAAAA,EAAA,OAAAA,EAAA,KA0ScyoB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CA1SzCz/B,SAAAm/B,EAAAA,EAAAA,KA2SgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CA3SjC9/B,SAAAm/B,EAAAA,EAAAA,KA4SkB,IAA0F,EAA1FF,EAAAA,EAAAA,IAA0F+D,EAAA,CAA/E10B,KAAK,UAAW20B,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAA4E,yB,CA5SpD5kC,SAAAm/B,EAAAA,EAAAA,KA4S4E,IAAoBE,EAAA,MAAAA,EAAA,MA5ShGC,EAAAA,EAAAA,IA4S4E,4BA5S5E9oB,EAAA,OAAAA,EAAA,OAAAA,EAAA,KA+ScyoB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CA/SzCz/B,SAAAm/B,EAAAA,EAAAA,KAgTgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAhTjC9/B,SAAAm/B,EAAAA,EAAAA,KAiTkB,IAAyG,EAAzGF,EAAAA,EAAAA,IAAyG+D,EAAA,CAA9F10B,KAAK,UAAW20B,QAAOjD,EAAA6E,8B,CAjTpD7kC,SAAAm/B,EAAAA,EAAAA,KAiTkF,IAA6BE,EAAA,MAAAA,EAAA,MAjT/GC,EAAAA,EAAAA,IAiTkF,qCAjTlF9oB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAqTcyoB,EAAAA,EAAAA,IAKSW,EAAA,CALA6C,OAAQ,GAAIhD,MAAM,c,CArTzCz/B,SAAAm/B,EAAAA,EAAAA,KAsTgB,IAGS,EAHTF,EAAAA,EAAAA,IAGSY,EAAA,CAHAC,KAAM,IAAE,CAtTjC9/B,SAAAm/B,EAAAA,EAAAA,KAuTkB,IACuF,EADvFF,EAAAA,EAAAA,IACuF+D,EAAA,CAD5E10B,KAAK,UACb20B,QAAOjD,EAAA8E,6B,CAxT5B9kC,SAAAm/B,EAAAA,EAAAA,KAwTyD,IAAoCE,EAAA,MAAAA,EAAA,MAxT7FC,EAAAA,EAAAA,IAwTyD,4CAxTzD9oB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KA4TcyoB,EAAAA,EAAAA,IAKSW,EAAA,CALA6C,OAAQ,GAAIhD,MAAM,c,CA5TzCz/B,SAAAm/B,EAAAA,EAAAA,KA6TgB,IAGS,EAHTF,EAAAA,EAAAA,IAGSY,EAAA,CAHAC,KAAM,IAAE,CA7TjC9/B,SAAAm/B,EAAAA,EAAAA,KA8TkB,IACkB,EADlBF,EAAAA,EAAAA,IACkB+D,EAAA,CADP10B,KAAK,UAAW20B,QAAOjD,EAAA+E,0B,CA9TpD/kC,SAAAm/B,EAAAA,EAAAA,KA8T8E,IACtDE,EAAA,MAAAA,EAAA,MA/TxBC,EAAAA,EAAAA,IA8T8E,yCA9T9E9oB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAmUcyoB,EAAAA,EAAAA,IAKSW,EAAA,CALA6C,OAAQ,GAAIhD,MAAM,c,CAnUzCz/B,SAAAm/B,EAAAA,EAAAA,KAoUgB,IAGS,EAHTF,EAAAA,EAAAA,IAGSY,EAAA,CAHAC,KAAM,IAAE,CApUjC9/B,SAAAm/B,EAAAA,EAAAA,KAqUkB,IACY,EADZF,EAAAA,EAAAA,IACY+D,EAAA,CADD10B,KAAK,UAAW20B,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAAgF,sB,CArUpDhlC,SAAAm/B,EAAAA,EAAAA,KAqUyE,IACvDE,EAAA,MAAAA,EAAA,MAtUlBC,EAAAA,EAAAA,IAqUyE,uCArUzE9oB,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,KA2UYyoB,EAAAA,EAAAA,IAWcqF,EAAA,CAXDtD,MAAM,MAAMxrC,KAAK,Y,CA3U1CwK,SAAAm/B,EAAAA,EAAAA,KA4Uc,IAIS,EAJTF,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CA5UzCz/B,SAAAm/B,EAAAA,EAAAA,KA6UgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CA7UjC9/B,SAAAm/B,EAAAA,EAAAA,KA8UkB,IAA4E,EAA5EF,EAAAA,EAAAA,IAA4E+D,EAAA,CAAjE10B,KAAK,UAAW20B,QAAOjD,EAAAiF,gB,CA9UpDjlC,SAAAm/B,EAAAA,EAAAA,KA8UoE,IAAcE,EAAA,MAAAA,EAAA,MA9UlFC,EAAAA,EAAAA,IA8UoE,sBA9UpE9oB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAiVcyoB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAjVzCz/B,SAAAm/B,EAAAA,EAAAA,KAkVgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAlVjC9/B,SAAAm/B,EAAAA,EAAAA,KAmVkB,IAAsF,EAAtFF,EAAAA,EAAAA,IAAsF+D,EAAA,CAA3E10B,KAAK,UAAW20B,QAAOjD,EAAAkF,qB,CAnVpDllC,SAAAm/B,EAAAA,EAAAA,KAmVyE,IAAmBE,EAAA,MAAAA,EAAA,MAnV5FC,EAAAA,EAAAA,IAmVyE,2BAnVzE9oB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAyVYyoB,EAAAA,EAAAA,IA6CcqF,EAAA,CA7CDtD,MAAM,MAAMxrC,KAAK,2C,CAzV1CwK,SAAAm/B,EAAAA,EAAAA,KA0Vc,IAIS,EAJTF,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CA1VzCz/B,SAAAm/B,EAAAA,EAAAA,KA2VgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CA3VjC9/B,SAAAm/B,EAAAA,EAAAA,KA4VkB,IAAiF,EAAjFF,EAAAA,EAAAA,IAAiF+D,EAAA,CAAtE10B,KAAK,UAAW20B,QAAOjD,EAAAmF,iB,CA5VpDnlC,SAAAm/B,EAAAA,EAAAA,KA4VqE,IAAkBE,EAAA,MAAAA,EAAA,MA5VvFC,EAAAA,EAAAA,IA4VqE,0BA5VrE9oB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAgWcyoB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAhWzCz/B,SAAAm/B,EAAAA,EAAAA,KAiWgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAjWjC9/B,SAAAm/B,EAAAA,EAAAA,KAkWkB,IAAyF,EAAzFF,EAAAA,EAAAA,IAAyF+D,EAAA,CAA9E10B,KAAK,UAAW20B,QAAOjD,EAAAoF,qB,CAlWpDplC,SAAAm/B,EAAAA,EAAAA,KAkWyE,IAAsBE,EAAA,MAAAA,EAAA,MAlW/FC,EAAAA,EAAAA,IAkWyE,8BAlWzE9oB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAsWcyoB,EAAAA,EAAAA,IAKSW,EAAA,CALA6C,OAAQ,GAAIhD,MAAM,c,CAtWzCz/B,SAAAm/B,EAAAA,EAAAA,KAuWgB,IAGS,EAHTF,EAAAA,EAAAA,IAGSY,EAAA,CAHAC,KAAM,IAAE,CAvWjC9/B,SAAAm/B,EAAAA,EAAAA,KAwWkB,IAC4F,EAD5FF,EAAAA,EAAAA,IAC4F+D,EAAA,CADjF10B,KAAK,UACJ20B,QAAOjD,EAAAqF,8B,CAzWrCrlC,SAAAm/B,EAAAA,EAAAA,KAyWmE,IAA+BE,EAAA,MAAAA,EAAA,MAzWlGC,EAAAA,EAAAA,IAyWmE,uCAzWnE9oB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KA6WcyoB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CA7WzCz/B,SAAAm/B,EAAAA,EAAAA,KA8WgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CA9WjC9/B,SAAAm/B,EAAAA,EAAAA,KA+WkB,IAA8F,EAA9FF,EAAAA,EAAAA,IAA8F+D,EAAA,CAAnF10B,KAAK,UAAW20B,QAAOjD,EAAAsF,yB,CA/WpDtlC,SAAAm/B,EAAAA,EAAAA,KA+W6E,IAAuBE,EAAA,MAAAA,EAAA,MA/WpGC,EAAAA,EAAAA,IA+W6E,+BA/W7E9oB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAmXcyoB,EAAAA,EAAAA,IAKSW,EAAA,CALA6C,OAAQ,GAAIhD,MAAM,c,CAnXzCz/B,SAAAm/B,EAAAA,EAAAA,KAoXgB,IAGS,EAHTF,EAAAA,EAAAA,IAGSY,EAAA,CAHAC,KAAM,IAAE,CApXjC9/B,SAAAm/B,EAAAA,EAAAA,KAqXkB,IACiG,EADjGF,EAAAA,EAAAA,IACiG+D,EAAA,CADtF10B,KAAK,UACJ20B,QAAOjD,EAAAuF,kC,CAtXrCvlC,SAAAm/B,EAAAA,EAAAA,KAsXuE,IAAgCE,EAAA,MAAAA,EAAA,MAtXvGC,EAAAA,EAAAA,IAsXuE,wCAtXvE9oB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KA0XcyoB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CA1XzCz/B,SAAAm/B,EAAAA,EAAAA,KA2XgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CA3XjC9/B,SAAAm/B,EAAAA,EAAAA,KA4XkB,IAAoG,EAApGF,EAAAA,EAAAA,IAAoG+D,EAAA,CAAzF10B,KAAK,UAAW20B,QAAOjD,EAAAwF,4B,CA5XpDxlC,SAAAm/B,EAAAA,EAAAA,KA4XgF,IAA0BE,EAAA,MAAAA,EAAA,MA5X1GC,EAAAA,EAAAA,IA4XgF,kCA5XhF9oB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAgYcyoB,EAAAA,EAAAA,IAKSW,EAAA,CALA6C,OAAQ,GAAIhD,MAAM,c,CAhYzCz/B,SAAAm/B,EAAAA,EAAAA,KAiYgB,IAGS,EAHTF,EAAAA,EAAAA,IAGSY,EAAA,CAHAC,KAAM,IAAE,CAjYjC9/B,SAAAm/B,EAAAA,EAAAA,KAkYkB,IACmG,EADnGF,EAAAA,EAAAA,IACmG+D,EAAA,CADxF10B,KAAK,UACJ20B,QAAOjD,EAAAyF,qC,CAnYrCzlC,SAAAm/B,EAAAA,EAAAA,KAmY0E,IAA+BE,EAAA,MAAAA,EAAA,MAnYzGC,EAAAA,EAAAA,IAmY0E,uCAnY1E9oB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAyYYyoB,EAAAA,EAAAA,IAEcqF,EAAA,CAFDtD,MAAM,MAAMxrC,KAAK,e,CAzY1CwK,SAAAm/B,EAAAA,EAAAA,KA0Yc,IAAuE,EAAvEF,EAAAA,EAAAA,IAAuEyG,EAAA,CAA5DC,4BAA2B3F,EAAA4F,+BAA6B,2CA1YjFpvB,EAAA,KA6YYyoB,EAAAA,EAAAA,IAEcqF,EAAA,CAFDtD,MAAM,MAAMxrC,KAAK,e,CA7Y1CwK,SAAAm/B,EAAAA,EAAAA,KA8Yc,IAAuE,EAAvEF,EAAAA,EAAAA,IAAuE4G,EAAA,CAA5DF,4BAA2B3F,EAAA8F,+BAA6B,2CA9YjFtvB,EAAA,KAkZYyoB,EAAAA,EAAAA,IAEcqF,EAAA,CAFDtD,MAAM,UAAUxrC,KAAK,mB,CAlZ9CwK,SAAAm/B,EAAAA,EAAAA,KAmZc,IAA+E,EAA/EF,EAAAA,EAAAA,IAA+E8G,EAAA,CAAhEJ,4BAA2B3F,EAAAgG,mCAAiC,2CAnZzFxvB,EAAA,KAsZYyoB,EAAAA,EAAAA,IAIcqF,EAAA,CAJDtD,MAAM,OAAOxrC,KAAK,gB,CAtZ3CwK,SAAAm/B,EAAAA,EAAAA,KAuZc,IAE6D,EAF7DF,EAAAA,EAAAA,IAE6DgH,EAAA,CADxDN,4BAA2B3F,EAAAkG,+BAC3BC,4BAA2BnG,EAAAoG,2B,yEAzZ9C5vB,EAAA,KA4ZYyoB,EAAAA,EAAAA,IAoBcqF,EAAA,CApBDtD,MAAM,QAAQxrC,KAAK,iB,CA5Z5CwK,SAAAm/B,EAAAA,EAAAA,KA6Zc,IAIS,EAJTF,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CA7ZzCz/B,SAAAm/B,EAAAA,EAAAA,KA8ZgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CA9ZjC9/B,SAAAm/B,EAAAA,EAAAA,KA+ZkB,IAAkF,EAAlFF,EAAAA,EAAAA,IAAkF+D,EAAA,CAAvE10B,KAAK,UAAW20B,QAAOjD,EAAAqG,mB,CA/ZpDrmC,SAAAm/B,EAAAA,EAAAA,KA+ZuE,IAAiBE,EAAA,MAAAA,EAAA,MA/ZxFC,EAAAA,EAAAA,IA+ZuE,yBA/ZvE9oB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAmacyoB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAnazCz/B,SAAAm/B,EAAAA,EAAAA,KAoagB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CApajC9/B,SAAAm/B,EAAAA,EAAAA,KAqakB,IAA0F,EAA1FF,EAAAA,EAAAA,IAA0F+D,EAAA,CAA/E10B,KAAK,UAAW20B,QAAOjD,EAAAsG,uB,CArapDtmC,SAAAm/B,EAAAA,EAAAA,KAqa2E,IAAqBE,EAAA,MAAAA,EAAA,MArahGC,EAAAA,EAAAA,IAqa2E,6BAra3E9oB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAyacyoB,EAAAA,EAAAA,IAKSW,EAAA,CALA6C,OAAQ,GAAIhD,MAAM,c,CAzazCz/B,SAAAm/B,EAAAA,EAAAA,KA0agB,IAGS,EAHTF,EAAAA,EAAAA,IAGSY,EAAA,CAHAC,KAAM,IAAE,CA1ajC9/B,SAAAm/B,EAAAA,EAAAA,KA2akB,IAC6F,EAD7FF,EAAAA,EAAAA,IAC6F+D,EAAA,CADlF10B,KAAK,UACJ20B,QAAOjD,EAAAuG,gC,CA5arCvmC,SAAAm/B,EAAAA,EAAAA,KA4aqE,IAA8BE,EAAA,MAAAA,EAAA,MA5anGC,EAAAA,EAAAA,IA4aqE,sCA5arE9oB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAkbYyoB,EAAAA,EAAAA,IAmBcqF,EAAA,CAnBDtD,MAAM,SAASxrC,KAAK,sB,CAlb7CwK,SAAAm/B,EAAAA,EAAAA,KAmbc,IAIS,EAJTF,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAnbzCz/B,SAAAm/B,EAAAA,EAAAA,KAobgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CApbjC9/B,SAAAm/B,EAAAA,EAAAA,KAqbkB,IAAwF,EAAxFF,EAAAA,EAAAA,IAAwF+D,EAAA,CAA7E10B,KAAK,UAAW20B,QAAOjD,EAAAwG,sB,CArbpDxmC,SAAAm/B,EAAAA,EAAAA,KAqb0E,IAAoBE,EAAA,MAAAA,EAAA,MArb9FC,EAAAA,EAAAA,IAqb0E,4BArb1E9oB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAybcyoB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAzbzCz/B,SAAAm/B,EAAAA,EAAAA,KA0bgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CA1bjC9/B,SAAAm/B,EAAAA,EAAAA,KA2bkB,IAAgF,EAAhFF,EAAAA,EAAAA,IAAgF+D,EAAA,CAArE10B,KAAK,UAAW20B,QAAOjD,EAAAyG,kB,CA3bpDzmC,SAAAm/B,EAAAA,EAAAA,KA2bsE,IAAgBE,EAAA,MAAAA,EAAA,MA3btFC,EAAAA,EAAAA,IA2bsE,wBA3btE9oB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KA+bcyoB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CA/bzCz/B,SAAAm/B,EAAAA,EAAAA,KAgcgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAhcjC9/B,SAAAm/B,EAAAA,EAAAA,KAickB,IAAkF,EAAlFF,EAAAA,EAAAA,IAAkF+D,EAAA,CAAvE10B,KAAK,UAAW20B,QAAOjD,EAAA0G,mB,CAjcpD1mC,SAAAm/B,EAAAA,EAAAA,KAicuE,IAAiBE,EAAA,MAAAA,EAAA,MAjcxFC,EAAAA,EAAAA,IAicuE,yBAjcvE9oB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAwcYyoB,EAAAA,EAAAA,IAgFcqF,EAAA,CAhFDtD,MAAM,UAAUxrC,KAAK,c,CAxc9CwK,SAAAm/B,EAAAA,EAAAA,KAycc,IAIS,EAJTF,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAzczCz/B,SAAAm/B,EAAAA,EAAAA,KA0cgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CA1cjC9/B,SAAAm/B,EAAAA,EAAAA,KA2ckB,IAAsF,EAAtFF,EAAAA,EAAAA,IAAsF+D,EAAA,CAA3E10B,KAAK,UAAW20B,QAAOjD,EAAAuE,qB,CA3cpDvkC,SAAAm/B,EAAAA,EAAAA,KA2cyE,IAAmBE,EAAA,MAAAA,EAAA,MA3c5FC,EAAAA,EAAAA,IA2cyE,2BA3czE9oB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KA+ccyoB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CA/czCz/B,SAAAm/B,EAAAA,EAAAA,KAgdgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAhdjC9/B,SAAAm/B,EAAAA,EAAAA,KAidkB,IAAwE,EAAxEF,EAAAA,EAAAA,IAAwE+D,EAAA,CAA7D10B,KAAK,UAAW20B,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAAwE,gB,CAjdpDxkC,SAAAm/B,EAAAA,EAAAA,KAidmE,IAAWE,EAAA,MAAAA,EAAA,MAjd9EC,EAAAA,EAAAA,IAidmE,mBAjdnE9oB,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAqdcyoB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CArdzCz/B,SAAAm/B,EAAAA,EAAAA,KAsdgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAtdjC9/B,SAAAm/B,EAAAA,EAAAA,KAudkB,IAAsG,EAAtGF,EAAAA,EAAAA,IAAsG+D,EAAA,CAA3F10B,KAAK,UAAW20B,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAAyE,+B,CAvdpDzkC,SAAAm/B,EAAAA,EAAAA,KAudkF,IAA0BE,EAAA,MAAAA,EAAA,MAvd5GC,EAAAA,EAAAA,IAudkF,kCAvdlF9oB,EAAA,OAAAA,EAAA,OAAAA,EAAA,KA0dcyoB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CA1dzCz/B,SAAAm/B,EAAAA,EAAAA,KA2dgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CA3djC9/B,SAAAm/B,EAAAA,EAAAA,KA4dkB,IAAgG,EAAhGF,EAAAA,EAAAA,IAAgG+D,EAAA,CAArF10B,KAAK,UAAW20B,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAA0E,4B,CA5dpD1kC,SAAAm/B,EAAAA,EAAAA,KA4d+E,IAAuBE,EAAA,MAAAA,EAAA,MA5dtGC,EAAAA,EAAAA,IA4d+E,+BA5d/E9oB,EAAA,OAAAA,EAAA,OAAAA,EAAA,KA+dcyoB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CA/dzCz/B,SAAAm/B,EAAAA,EAAAA,KAgegB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAhejC9/B,SAAAm/B,EAAAA,EAAAA,KAiekB,IAA4E,EAA5EF,EAAAA,EAAAA,IAA4E+D,EAAA,CAAjE10B,KAAK,UAAW20B,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAA2E,kB,CAjepD3kC,SAAAm/B,EAAAA,EAAAA,KAieqE,IAAaE,EAAA,MAAAA,EAAA,MAjelFC,EAAAA,EAAAA,IAieqE,qBAjerE9oB,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAoecyoB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CApezCz/B,SAAAm/B,EAAAA,EAAAA,KAqegB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CArejC9/B,SAAAm/B,EAAAA,EAAAA,KAsekB,IAA0F,EAA1FF,EAAAA,EAAAA,IAA0F+D,EAAA,CAA/E10B,KAAK,UAAW20B,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAA4E,yB,CAtepD5kC,SAAAm/B,EAAAA,EAAAA,KAse4E,IAAoBE,EAAA,MAAAA,EAAA,MAtehGC,EAAAA,EAAAA,IAse4E,4BAte5E9oB,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAyecyoB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAzezCz/B,SAAAm/B,EAAAA,EAAAA,KA0egB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CA1ejC9/B,SAAAm/B,EAAAA,EAAAA,KA2ekB,IAAyG,EAAzGF,EAAAA,EAAAA,IAAyG+D,EAAA,CAA9F10B,KAAK,UAAW20B,QAAOjD,EAAA6E,8B,CA3epD7kC,SAAAm/B,EAAAA,EAAAA,KA2ekF,IAA6BE,EAAA,OAAAA,EAAA,OA3e/GC,EAAAA,EAAAA,IA2ekF,qCA3elF9oB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KA+ecyoB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CA/ezCz/B,SAAAm/B,EAAAA,EAAAA,KAgfgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAhfjC9/B,SAAAm/B,EAAAA,EAAAA,KAifkB,IAA6G,EAA7GF,EAAAA,EAAAA,IAA6G+D,EAAA,CAAlG10B,KAAK,UAAW20B,QAAOjD,EAAA8E,6B,CAjfpD9kC,SAAAm/B,EAAAA,EAAAA,KAifiF,IAAkCE,EAAA,OAAAA,EAAA,OAjfnHC,EAAAA,EAAAA,IAifiF,0CAjfjF9oB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAqfcyoB,EAAAA,EAAAA,IAKSW,EAAA,CALA6C,OAAQ,GAAIhD,MAAM,c,CArfzCz/B,SAAAm/B,EAAAA,EAAAA,KAsfgB,IAGS,EAHTF,EAAAA,EAAAA,IAGSY,EAAA,CAHAC,KAAM,IAAE,CAtfjC9/B,SAAAm/B,EAAAA,EAAAA,KAufkB,IACkB,EADlBF,EAAAA,EAAAA,IACkB+D,EAAA,CADP10B,KAAK,UAAW20B,QAAOjD,EAAA+E,0B,CAvfpD/kC,SAAAm/B,EAAAA,EAAAA,KAuf8E,IACtDE,EAAA,OAAAA,EAAA,OAxfxBC,EAAAA,EAAAA,IAuf8E,6CAvf9E9oB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KA4fcyoB,EAAAA,EAAAA,IAKSW,EAAA,CALA6C,OAAQ,GAAIhD,MAAM,c,CA5fzCz/B,SAAAm/B,EAAAA,EAAAA,KA6fgB,IAGS,EAHTF,EAAAA,EAAAA,IAGSY,EAAA,CAHAC,KAAM,IAAE,CA7fjC9/B,SAAAm/B,EAAAA,EAAAA,KA8fkB,IACY,EADZF,EAAAA,EAAAA,IACY+D,EAAA,CADD10B,KAAK,UAAW20B,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAAgF,sB,CA9fpDhlC,SAAAm/B,EAAAA,EAAAA,KA8fyE,IACvDE,EAAA,OAAAA,EAAA,OA/flBC,EAAAA,EAAAA,IA8fyE,oCA9fzE9oB,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAmgBcyoB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAngBzCz/B,SAAAm/B,EAAAA,EAAAA,KAogBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CApgBjC9/B,SAAAm/B,EAAAA,EAAAA,KAqgBkB,IAAuF,EAAvFF,EAAAA,EAAAA,IAAuF+D,EAAA,CAA5E10B,KAAK,UAAW20B,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAA2G,mB,CArgBpD3mC,SAAAm/B,EAAAA,EAAAA,KAqgBsE,IAAuBE,EAAA,OAAAA,EAAA,OArgB7FC,EAAAA,EAAAA,IAqgBsE,+BArgBtE9oB,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAygBcyoB,EAAAA,EAAAA,IAMSW,EAAA,CANA6C,OAAQ,GAAIhD,MAAM,c,CAzgBzCz/B,SAAAm/B,EAAAA,EAAAA,KA0gBgB,IAIS,EAJTF,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,IAAE,CA1gBjC9/B,SAAAm/B,EAAAA,EAAAA,KA2gBkB,IAEC,EAFDF,EAAAA,EAAAA,IAEC+D,EAAA,CAFU10B,KAAK,UAAW20B,QAAOjD,EAAA6E,8B,CA3gBpD7kC,SAAAm/B,EAAAA,EAAAA,KA4gBmB,IAA2BE,EAAA,OAAAA,EAAA,OA5gB9CC,EAAAA,EAAAA,IA4gBmB,mCA5gBnB9oB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAihBcyoB,EAAAA,EAAAA,IAMSW,EAAA,CANA6C,OAAQ,GAAIhD,MAAM,c,CAjhBzCz/B,SAAAm/B,EAAAA,EAAAA,KAkhBgB,IAIS,EAJTF,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,IAAE,CAlhBjC9/B,SAAAm/B,EAAAA,EAAAA,KAmhBkB,IAEC,EAFDF,EAAAA,EAAAA,IAEC+D,EAAA,CAFU10B,KAAK,UAAW20B,QAAOjD,EAAA8E,6B,CAnhBpD9kC,SAAAm/B,EAAAA,EAAAA,KAohBmB,IAA2BE,EAAA,OAAAA,EAAA,OAphB9CC,EAAAA,EAAAA,IAohBmB,mCAphBnB9oB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,KA2hBYyoB,EAAAA,EAAAA,IA2DcqF,EAAA,CA3DDtD,MAAM,MAAMxrC,KAAK,a,CA3hB1CwK,SAAAm/B,EAAAA,EAAAA,KA4hBc,IAIS,EAJTF,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CA5hBzCz/B,SAAAm/B,EAAAA,EAAAA,KA6hBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CA7hBjC9/B,SAAAm/B,EAAAA,EAAAA,KA8hBkB,IAA2F,EAA3FF,EAAAA,EAAAA,IAA2F+D,EAAA,CAAhF10B,KAAK,UAAW20B,QAAOjD,EAAAuE,qB,CA9hBpDvkC,SAAAm/B,EAAAA,EAAAA,KA8hByE,IAAwBE,EAAA,OAAAA,EAAA,OA9hBjGC,EAAAA,EAAAA,IA8hByE,gCA9hBzE9oB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAkiBcyoB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAliBzCz/B,SAAAm/B,EAAAA,EAAAA,KAmiBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAniBjC9/B,SAAAm/B,EAAAA,EAAAA,KAoiBkB,IAA6E,EAA7EF,EAAAA,EAAAA,IAA6E+D,EAAA,CAAlE10B,KAAK,UAAW20B,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAAwE,gB,CApiBpDxkC,SAAAm/B,EAAAA,EAAAA,KAoiBmE,IAAgBE,EAAA,OAAAA,EAAA,OApiBnFC,EAAAA,EAAAA,IAoiBmE,wBApiBnE9oB,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAwiBcyoB,EAAAA,EAAAA,IAKSW,EAAA,CALA6C,OAAQ,GAAIhD,MAAM,c,CAxiBzCz/B,SAAAm/B,EAAAA,EAAAA,KAyiBgB,IAGS,EAHTF,EAAAA,EAAAA,IAGSY,EAAA,CAHAC,KAAM,IAAE,CAziBjC9/B,SAAAm/B,EAAAA,EAAAA,KA0iBkB,IAC6F,EAD7FF,EAAAA,EAAAA,IAC6F+D,EAAA,CADlF10B,KAAK,UACb20B,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAAyE,+B,CA3iB5BzkC,SAAAm/B,EAAAA,EAAAA,KA2iB0D,IAAyCE,EAAA,OAAAA,EAAA,OA3iBnGC,EAAAA,EAAAA,IA2iB0D,iDA3iB1D9oB,EAAA,OAAAA,EAAA,OAAAA,EAAA,KA8iBcyoB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CA9iBzCz/B,SAAAm/B,EAAAA,EAAAA,KA+iBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CA/iBjC9/B,SAAAm/B,EAAAA,EAAAA,KAgjBkB,IAAgG,EAAhGF,EAAAA,EAAAA,IAAgG+D,EAAA,CAArF10B,KAAK,UAAW20B,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAA0E,4B,CAhjBpD1kC,SAAAm/B,EAAAA,EAAAA,KAgjB+E,IAAuBE,EAAA,OAAAA,EAAA,OAhjBtGC,EAAAA,EAAAA,IAgjB+E,+BAhjB/E9oB,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAmjBcyoB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAnjBzCz/B,SAAAm/B,EAAAA,EAAAA,KAojBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CApjBjC9/B,SAAAm/B,EAAAA,EAAAA,KAqjBkB,IAA4E,EAA5EF,EAAAA,EAAAA,IAA4E+D,EAAA,CAAjE10B,KAAK,UAAW20B,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAA2E,kB,CArjBpD3kC,SAAAm/B,EAAAA,EAAAA,KAqjBqE,IAAaE,EAAA,OAAAA,EAAA,OArjBlFC,EAAAA,EAAAA,IAqjBqE,qBArjBrE9oB,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAwjBcyoB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAxjBzCz/B,SAAAm/B,EAAAA,EAAAA,KAyjBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAzjBjC9/B,SAAAm/B,EAAAA,EAAAA,KA0jBkB,IAA0F,EAA1FF,EAAAA,EAAAA,IAA0F+D,EAAA,CAA/E10B,KAAK,UAAW20B,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAA4E,yB,CA1jBpD5kC,SAAAm/B,EAAAA,EAAAA,KA0jB4E,IAAoBE,EAAA,OAAAA,EAAA,OA1jBhGC,EAAAA,EAAAA,IA0jB4E,4BA1jB5E9oB,EAAA,OAAAA,EAAA,OAAAA,EAAA,KA6jBcyoB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CA7jBzCz/B,SAAAm/B,EAAAA,EAAAA,KA8jBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CA9jBjC9/B,SAAAm/B,EAAAA,EAAAA,KA+jBkB,IAAyG,EAAzGF,EAAAA,EAAAA,IAAyG+D,EAAA,CAA9F10B,KAAK,UAAW20B,QAAOjD,EAAA6E,8B,CA/jBpD7kC,SAAAm/B,EAAAA,EAAAA,KA+jBkF,IAA6BE,EAAA,OAAAA,EAAA,OA/jB/GC,EAAAA,EAAAA,IA+jBkF,qCA/jBlF9oB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAmkBcyoB,EAAAA,EAAAA,IAKSW,EAAA,CALA6C,OAAQ,GAAIhD,MAAM,c,CAnkBzCz/B,SAAAm/B,EAAAA,EAAAA,KAokBgB,IAGS,EAHTF,EAAAA,EAAAA,IAGSY,EAAA,CAHAC,KAAM,IAAE,CApkBjC9/B,SAAAm/B,EAAAA,EAAAA,KAqkBkB,IACoF,EADpFF,EAAAA,EAAAA,IACoF+D,EAAA,CADzE10B,KAAK,UACb20B,QAAOjD,EAAA8E,6B,CAtkB5B9kC,SAAAm/B,EAAAA,EAAAA,KAskByD,IAAiCE,EAAA,OAAAA,EAAA,OAtkB1FC,EAAAA,EAAAA,IAskByD,yCAtkBzD9oB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KA0kBcyoB,EAAAA,EAAAA,IAKSW,EAAA,CALA6C,OAAQ,GAAIhD,MAAM,c,CA1kBzCz/B,SAAAm/B,EAAAA,EAAAA,KA2kBgB,IAGS,EAHTF,EAAAA,EAAAA,IAGSY,EAAA,CAHAC,KAAM,IAAE,CA3kBjC9/B,SAAAm/B,EAAAA,EAAAA,KA4kBkB,IACY,EADZF,EAAAA,EAAAA,IACY+D,EAAA,CADD10B,KAAK,UAAW20B,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAAgF,sB,CA5kBpDhlC,SAAAm/B,EAAAA,EAAAA,KA4kByE,IACvDE,EAAA,OAAAA,EAAA,OA7kBlBC,EAAAA,EAAAA,IA4kByE,mCA5kBzE9oB,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAilBcyoB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAjlBzCz/B,SAAAm/B,EAAAA,EAAAA,KAklBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAllBjC9/B,SAAAm/B,EAAAA,EAAAA,KAmlBkB,IAAoG,EAApGF,EAAAA,EAAAA,IAAoG+D,EAAA,CAAzF10B,KAAK,UAAW20B,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAA2G,mB,CAnlBpD3mC,SAAAm/B,EAAAA,EAAAA,KAmlBsE,IAAoCE,EAAA,OAAAA,EAAA,OAnlB1GC,EAAAA,EAAAA,IAmlBsE,4CAnlBtE9oB,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAwlBYyoB,EAAAA,EAAAA,IA4BcqF,EAAA,CA5BDtD,MAAM,OAAOxrC,KAAK,c,CAxlB3CwK,SAAAm/B,EAAAA,EAAAA,KAylBc,IAIS,EAJTF,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAzlBzCz/B,SAAAm/B,EAAAA,EAAAA,KA0lBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CA1lBjC9/B,SAAAm/B,EAAAA,EAAAA,KA2lBkB,IAAsF,EAAtFF,EAAAA,EAAAA,IAAsF+D,EAAA,CAA3E10B,KAAK,UAAW20B,QAAOjD,EAAAuE,qB,CA3lBpDvkC,SAAAm/B,EAAAA,EAAAA,KA2lByE,IAAmBE,EAAA,OAAAA,EAAA,OA3lB5FC,EAAAA,EAAAA,IA2lByE,2BA3lBzE9oB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KA+lBcyoB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CA/lBzCz/B,SAAAm/B,EAAAA,EAAAA,KAgmBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAhmBjC9/B,SAAAm/B,EAAAA,EAAAA,KAimBkB,IAAwE,EAAxEF,EAAAA,EAAAA,IAAwE+D,EAAA,CAA7D10B,KAAK,UAAW20B,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAAwE,gB,CAjmBpDxkC,SAAAm/B,EAAAA,EAAAA,KAimBmE,IAAWE,EAAA,OAAAA,EAAA,OAjmB9EC,EAAAA,EAAAA,IAimBmE,mBAjmBnE9oB,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAqmBcyoB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CArmBzCz/B,SAAAm/B,EAAAA,EAAAA,KAsmBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAtmBjC9/B,SAAAm/B,EAAAA,EAAAA,KAumBkB,IAA4E,EAA5EF,EAAAA,EAAAA,IAA4E+D,EAAA,CAAjE10B,KAAK,UAAW20B,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAA2E,kB,CAvmBpD3kC,SAAAm/B,EAAAA,EAAAA,KAumBqE,IAAaE,EAAA,OAAAA,EAAA,OAvmBlFC,EAAAA,EAAAA,IAumBqE,qBAvmBrE9oB,EAAA,OAAAA,EAAA,OAAAA,EAAA,KA0mBcyoB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CA1mBzCz/B,SAAAm/B,EAAAA,EAAAA,KA2mBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CA3mBjC9/B,SAAAm/B,EAAAA,EAAAA,KA4mBkB,IAA0F,EAA1FF,EAAAA,EAAAA,IAA0F+D,EAAA,CAA/E10B,KAAK,UAAW20B,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAA4E,yB,CA5mBpD5kC,SAAAm/B,EAAAA,EAAAA,KA4mB4E,IAAoBE,EAAA,OAAAA,EAAA,OA5mBhGC,EAAAA,EAAAA,IA4mB4E,4BA5mB5E9oB,EAAA,OAAAA,EAAA,OAAAA,EAAA,KA+mBcyoB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CA/mBzCz/B,SAAAm/B,EAAAA,EAAAA,KAgnBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAhnBjC9/B,SAAAm/B,EAAAA,EAAAA,KAinBkB,IAAiG,EAAjGF,EAAAA,EAAAA,IAAiG+D,EAAA,CAAtF10B,KAAK,UAAW20B,QAAOjD,EAAA4G,0B,CAjnBpD5mC,SAAAm/B,EAAAA,EAAAA,KAinB8E,IAAyBE,EAAA,OAAAA,EAAA,OAjnBvGC,EAAAA,EAAAA,IAinB8E,iCAjnB9E9oB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAsnBYyoB,EAAAA,EAAAA,IA+BcqF,EAAA,CA/BDtD,MAAM,gBAAgBxrC,KAAK,gB,CAtnBpDwK,SAAAm/B,EAAAA,EAAAA,KAunBc,IAIS,EAJTF,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAvnBzCz/B,SAAAm/B,EAAAA,EAAAA,KAwnBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAxnBjC9/B,SAAAm/B,EAAAA,EAAAA,KAynBkB,IAAiF,EAAjFF,EAAAA,EAAAA,IAAiF+D,EAAA,CAAtE10B,KAAK,UAAW20B,QAAOjD,EAAAmF,iB,CAznBpDnlC,SAAAm/B,EAAAA,EAAAA,KAynBqE,IAAkBE,EAAA,OAAAA,EAAA,OAznBvFC,EAAAA,EAAAA,IAynBqE,0BAznBrE9oB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KA6nBcyoB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CA7nBzCz/B,SAAAm/B,EAAAA,EAAAA,KA8nBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CA9nBjC9/B,SAAAm/B,EAAAA,EAAAA,KA+nBkB,IAAyF,EAAzFF,EAAAA,EAAAA,IAAyF+D,EAAA,CAA9E10B,KAAK,UAAW20B,QAAOjD,EAAAoF,qB,CA/nBpDplC,SAAAm/B,EAAAA,EAAAA,KA+nByE,IAAsBE,EAAA,OAAAA,EAAA,OA/nB/FC,EAAAA,EAAAA,IA+nByE,8BA/nBzE9oB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAmoBcyoB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAnoBzCz/B,SAAAm/B,EAAAA,EAAAA,KAooBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CApoBjC9/B,SAAAm/B,EAAAA,EAAAA,KAqoBkB,IAA8F,EAA9FF,EAAAA,EAAAA,IAA8F+D,EAAA,CAAnF10B,KAAK,UAAW20B,QAAOjD,EAAAsF,yB,CAroBpDtlC,SAAAm/B,EAAAA,EAAAA,KAqoB6E,IAAuBE,EAAA,OAAAA,EAAA,OAroBpGC,EAAAA,EAAAA,IAqoB6E,+BAroB7E9oB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAyoBcyoB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAzoBzCz/B,SAAAm/B,EAAAA,EAAAA,KA0oBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CA1oBjC9/B,SAAAm/B,EAAAA,EAAAA,KA2oBkB,IAAoG,EAApGF,EAAAA,EAAAA,IAAoG+D,EAAA,CAAzF10B,KAAK,UAAW20B,QAAOjD,EAAAwF,4B,CA3oBpDxlC,SAAAm/B,EAAAA,EAAAA,KA2oBgF,IAA0BE,EAAA,OAAAA,EAAA,OA3oB1GC,EAAAA,EAAAA,IA2oBgF,kCA3oBhF9oB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KA+oBcyoB,EAAAA,EAAAA,IAKSW,EAAA,CALA6C,OAAQ,GAAIhD,MAAM,c,CA/oBzCz/B,SAAAm/B,EAAAA,EAAAA,KAgpBgB,IAGS,EAHTF,EAAAA,EAAAA,IAGSY,EAAA,CAHAC,KAAM,IAAE,CAhpBjC9/B,SAAAm/B,EAAAA,EAAAA,KAipBkB,IACmG,EADnGF,EAAAA,EAAAA,IACmG+D,EAAA,CADxF10B,KAAK,UACJ20B,QAAOjD,EAAAyF,qC,CAlpBrCzlC,SAAAm/B,EAAAA,EAAAA,KAkpB0E,IAA+BE,EAAA,OAAAA,EAAA,OAlpBzGC,EAAAA,EAAAA,IAkpB0E,uCAlpB1E9oB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAupBYyoB,EAAAA,EAAAA,IAoBcqF,EAAA,CApBDtD,MAAM,WAAWxrC,KAAK,oB,CAvpB/CwK,SAAAm/B,EAAAA,EAAAA,KAwpBc,IAIS,EAJTF,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAxpBzCz/B,SAAAm/B,EAAAA,EAAAA,KAypBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAzpBjC9/B,SAAAm/B,EAAAA,EAAAA,KA0pBkB,IAAkF,EAAlFF,EAAAA,EAAAA,IAAkF+D,EAAA,CAAvE10B,KAAK,UAAW20B,QAAOjD,EAAAqG,mB,CA1pBpDrmC,SAAAm/B,EAAAA,EAAAA,KA0pBuE,IAAiBE,EAAA,OAAAA,EAAA,OA1pBxFC,EAAAA,EAAAA,IA0pBuE,yBA1pBvE9oB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KA8pBcyoB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CA9pBzCz/B,SAAAm/B,EAAAA,EAAAA,KA+pBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CA/pBjC9/B,SAAAm/B,EAAAA,EAAAA,KAgqBkB,IAAwF,EAAxFF,EAAAA,EAAAA,IAAwF+D,EAAA,CAA7E10B,KAAK,UAAW20B,QAAOjD,EAAA6G,sB,CAhqBpD7mC,SAAAm/B,EAAAA,EAAAA,KAgqB0E,IAAoBE,EAAA,OAAAA,EAAA,OAhqB9FC,EAAAA,EAAAA,IAgqB0E,4BAhqB1E9oB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAoqBcyoB,EAAAA,EAAAA,IAKSW,EAAA,CALA6C,OAAQ,GAAIhD,MAAM,c,CApqBzCz/B,SAAAm/B,EAAAA,EAAAA,KAqqBgB,IAGS,EAHTF,EAAAA,EAAAA,IAGSY,EAAA,CAHAC,KAAM,IAAE,CArqBjC9/B,SAAAm/B,EAAAA,EAAAA,KAsqBkB,IACkF,EADlFF,EAAAA,EAAAA,IACkF+D,EAAA,CADvE10B,KAAK,UACb20B,QAAOjD,EAAA8G,+B,CAvqB5B9mC,SAAAm/B,EAAAA,EAAAA,KAuqB2D,IAA6BE,EAAA,OAAAA,EAAA,OAvqBxFC,EAAAA,EAAAA,IAuqB2D,qCAvqB3D9oB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,KA8qBYyoB,EAAAA,EAAAA,IAmBcqF,EAAA,CAnBDtD,MAAM,QAAQxrC,KAAK,oB,CA9qB5CwK,SAAAm/B,EAAAA,EAAAA,KA+qBc,IAIS,EAJTF,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CA/qBzCz/B,SAAAm/B,EAAAA,EAAAA,KAgrBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAhrBjC9/B,SAAAm/B,EAAAA,EAAAA,KAirBkB,IAAwF,EAAxFF,EAAAA,EAAAA,IAAwF+D,EAAA,CAA7E10B,KAAK,UAAW20B,QAAOjD,EAAAwG,sB,CAjrBpDxmC,SAAAm/B,EAAAA,EAAAA,KAirB0E,IAAoBE,EAAA,OAAAA,EAAA,OAjrB9FC,EAAAA,EAAAA,IAirB0E,4BAjrB1E9oB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAqrBcyoB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CArrBzCz/B,SAAAm/B,EAAAA,EAAAA,KAsrBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAtrBjC9/B,SAAAm/B,EAAAA,EAAAA,KAurBkB,IAAgF,EAAhFF,EAAAA,EAAAA,IAAgF+D,EAAA,CAArE10B,KAAK,UAAW20B,QAAOjD,EAAAyG,kB,CAvrBpDzmC,SAAAm/B,EAAAA,EAAAA,KAurBsE,IAAgBE,EAAA,OAAAA,EAAA,OAvrBtFC,EAAAA,EAAAA,IAurBsE,wBAvrBtE9oB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KA2rBcyoB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CA3rBzCz/B,SAAAm/B,EAAAA,EAAAA,KA4rBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CA5rBjC9/B,SAAAm/B,EAAAA,EAAAA,KA6rBkB,IAAkF,EAAlFF,EAAAA,EAAAA,IAAkF+D,EAAA,CAAvE10B,KAAK,UAAW20B,QAAOjD,EAAA0G,mB,CA7rBpD1mC,SAAAm/B,EAAAA,EAAAA,KA6rBuE,IAAiBE,EAAA,OAAAA,EAAA,OA7rBxFC,EAAAA,EAAAA,IA6rBuE,yBA7rBvE9oB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAmsBYyoB,EAAAA,EAAAA,IAmBcqF,EAAA,CAnBDtD,MAAM,MAAMxrC,KAAK,oB,CAnsB1CwK,SAAAm/B,EAAAA,EAAAA,KAosBc,IAIS,EAJTF,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CApsBzCz/B,SAAAm/B,EAAAA,EAAAA,KAqsBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CArsBjC9/B,SAAAm/B,EAAAA,EAAAA,KAssBkB,IAAwF,EAAxFF,EAAAA,EAAAA,IAAwF+D,EAAA,CAA7E10B,KAAK,UAAW20B,QAAOjD,EAAAwG,sB,CAtsBpDxmC,SAAAm/B,EAAAA,EAAAA,KAssB0E,IAAoBE,EAAA,OAAAA,EAAA,OAtsB9FC,EAAAA,EAAAA,IAssB0E,4BAtsB1E9oB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KA0sBcyoB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CA1sBzCz/B,SAAAm/B,EAAAA,EAAAA,KA2sBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CA3sBjC9/B,SAAAm/B,EAAAA,EAAAA,KA4sBkB,IAAgF,EAAhFF,EAAAA,EAAAA,IAAgF+D,EAAA,CAArE10B,KAAK,UAAW20B,QAAOjD,EAAAyG,kB,CA5sBpDzmC,SAAAm/B,EAAAA,EAAAA,KA4sBsE,IAAgBE,EAAA,OAAAA,EAAA,OA5sBtFC,EAAAA,EAAAA,IA4sBsE,wBA5sBtE9oB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAgtBcyoB,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAhtBzCz/B,SAAAm/B,EAAAA,EAAAA,KAitBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAjtBjC9/B,SAAAm/B,EAAAA,EAAAA,KAktBkB,IAAkF,EAAlFF,EAAAA,EAAAA,IAAkF+D,EAAA,CAAvE10B,KAAK,UAAW20B,QAAOjD,EAAA0G,mB,CAltBpD1mC,SAAAm/B,EAAAA,EAAAA,KAktBuE,IAAiBE,EAAA,OAAAA,EAAA,OAltBxFC,EAAAA,EAAAA,IAktBuE,yBAltBvE9oB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAwtBYyoB,EAAAA,EAAAA,IAEcqF,EAAA,CAFDtD,MAAM,WAAWxrC,KAAK,oB,CAxtB/CwK,SAAAm/B,EAAAA,EAAAA,KAytBc,IAAmK,EAAnKF,EAAAA,EAAAA,IAAmK8H,EAAA,CAApJC,IAAI,mBAAoBrB,4BAA2B3F,EAAAiH,mCAAqCd,4BAA2BnG,EAAAkH,+B,yEAztBhJ1wB,EAAA,KA4tBYyoB,EAAAA,EAAAA,IAMcqF,EAAA,CANDtD,MAAM,QAAQxrC,KAAK,U,CA5tB5CwK,SAAAm/B,EAAAA,EAAAA,KA6tBc,IAIS,EAJTF,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CA7tBzCz/B,SAAAm/B,EAAAA,EAAAA,KA8tBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CA9tBjC9/B,SAAAm/B,EAAAA,EAAAA,KA+tBkB,IAAkF,EAAlFF,EAAAA,EAAAA,IAAkF+D,EAAA,CAAvE10B,KAAK,UAAW20B,QAAOjD,EAAAmH,mB,CA/tBpDnnC,SAAAm/B,EAAAA,EAAAA,KA+tBuE,IAAiBE,EAAA,OAAAA,EAAA,OA/tBxFC,EAAAA,EAAAA,IA+tBuE,yBA/tBvE9oB,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,G,gCAquBUyoB,EAAAA,EAAAA,IAqCSY,EAAA,CArCAuH,GAAI,GAAKC,GAAI,GAAI1H,MAAA,qB,CAruBpC3/B,SAAAm/B,EAAAA,EAAAA,KAsuBY,IA6BS,EA7BTF,EAAAA,EAAAA,IA6BSW,EAAA,CA7BDD,MAAA,kFAAgF,CAtuBpG3/B,SAAAm/B,EAAAA,EAAAA,KAuuBc,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,GAAC,CAvuB9B9/B,SAAAm/B,EAAAA,EAAAA,KAwuBgB,IAAgHE,EAAA,OAAAA,EAAA,OAAhHK,EAAAA,EAAAA,IAAgH,KAA7GC,MAAA,wDAAwD,qDAAiD,OAxuB5HnpB,EAAA,KA0uBcyoB,EAAAA,EAAAA,IAcSY,EAAA,CAdAC,KAAM,GAAC,CA1uB9B9/B,SAAAm/B,EAAAA,EAAAA,KA2uBgB,IAYY,EAZZF,EAAAA,EAAAA,IAYYyB,EAAA,CAvvB5BP,WA4uB2BF,EAAArjC,SA5uB3B,sBAAAyiC,EAAA,MAAAA,EAAA,IAAAgB,GA4uB2BJ,EAAArjC,SAAQyjC,GAChBC,SAAQN,EAAAsH,qBACT1G,YAAY,kBACXe,UAAW3B,EAAAuH,4B,CA/uB9BvnC,SAAAm/B,EAAAA,EAAAA,KAkvBoB,IAAoC,gBADtCJ,EAAAA,EAAAA,IAKEoC,EAAAA,GAAA,MAtvBpBC,EAAAA,EAAAA,IAkvBuCnB,EAAAoB,kBAAZC,K,WADTC,EAAAA,EAAAA,IAKER,EAAA,CAHCppC,IAAG,iCAAmC2pC,IACtCN,MAAOM,EACPj8C,MAAOi8C,G,sCArvB5B9qB,EAAA,G,2CAAAA,EAAA,KAyvBcyoB,EAAAA,EAAAA,IASSY,EAAA,CATAC,KAAM,IAAE,CAzvB/B9/B,SAAAm/B,EAAAA,EAAAA,KA0vBgB,IAOE,CANmB,aAAbc,EAAArjC,WAAQ,WADhB2kC,EAAAA,EAAAA,IAOEC,EAAA,CAjwBlB7pC,IAAA,EAAAwoC,WA4vB2BF,EAAAuH,iBA5vB3B,sBAAAnI,EAAA,MAAAA,EAAA,IAAAgB,GA4vB2BJ,EAAAuH,iBAAgBnH,GACxBC,SAAQN,EAAAyH,uBACT7G,YAAY,WACXe,UAAW3B,EAAAuH,4BAA2C,aAAbtH,EAAArjC,SAC1C+iC,MAAA,gB,+CAhwBlBiC,EAAAA,EAAAA,IAAA,UAAAprB,EAAA,OAAAA,EAAA,KAowBYyoB,EAAAA,EAAAA,IAKY+D,EAAA,CAJV10B,KAAK,UAAW20B,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAA0H,oBACtB/F,UAAW3B,EAAAuH,6BAA+BtH,EAAA0H,iB,CAtwBzD3nC,SAAAm/B,EAAAA,EAAAA,KAuwBa,IAEDE,EAAA,OAAAA,EAAA,OAzwBZC,EAAAA,EAAAA,IAuwBa,oCAvwBb9oB,EAAA,G,mBAAAA,EAAA,KA4wBUyoB,EAAAA,EAAAA,IAGSY,EAAA,CAHAuH,GAAI,GAAKC,GAAI,I,CA5wBhCrnC,SAAAm/B,EAAAA,EAAAA,KA6wBY,IAAoC,kBAApCO,EAAAA,EAAAA,IAAoC,OAA/BD,MAAM,eAAc,SAAK,KAC9BR,EAAAA,EAAAA,IAAwGuC,EAAA,CA9wBpHrB,WA8wB+BF,EAAA0H,gBA9wB/B,sBAAAtI,EAAA,MAAAA,EAAA,IAAAgB,GA8wB+BJ,EAAA0H,gBAAetH,GAAE/xB,KAAK,WAAYs5B,KAAM,EAAGhH,YAAY,oB,0BA9wBtFpqB,EAAA,KAgxBUyoB,EAAAA,EAAAA,IAGSY,EAAA,CAHAuH,GAAI,GAAKC,GAAI,I,CAhxBhCrnC,SAAAm/B,EAAAA,EAAAA,KAixBY,IAAuC,kBAAvCO,EAAAA,EAAAA,IAAuC,OAAlCD,MAAM,eAAc,YAAQ,KACjCR,EAAAA,EAAAA,IAAmFuC,EAAA,CAlxB/FrB,WAkxB+BF,EAAA4H,QAlxB/B,sBAAAxI,EAAA,MAAAA,EAAA,IAAAgB,GAkxB+BJ,EAAA4H,QAAOxH,GAAE/xB,KAAK,WAAYs5B,KAAM,EAAGhH,YAAY,O,0BAlxB9EpqB,EAAA,KAoxBUyoB,EAAAA,EAAAA,IAMSW,EAAA,CANA6C,OAAQ,GAAIhD,MAAM,c,CApxBrCz/B,SAAAm/B,EAAAA,EAAAA,KAqxBY,IAIS,EAJTF,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,IAAE,CArxB7B9/B,SAAAm/B,EAAAA,EAAAA,KAsxBc,IAEgB,EAFhBF,EAAAA,EAAAA,IAEgB+D,EAAA,CAFL10B,KAAK,UAAWqzB,SAAUmG,EAAAC,gBAAkB9E,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAApW,oB,CAtxB5E5pB,SAAAm/B,EAAAA,EAAAA,KAsxB+F,IAE7E,EAxxBlBG,EAAAA,EAAAA,KAAAS,EAAAA,EAAAA,IAuxBgBE,EAAA+H,oBAAkB,MAvxBlCxxB,EAAA,G,mBAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,K,gZCCE+qB,EAAAA,EAAAA,IAwDS3B,EAAA,CAxDA6C,OAAQ,IAAE,CADrBziC,SAAAm/B,EAAAA,EAAAA,KAEI,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAFrB9/B,SAAAm/B,EAAAA,EAAAA,KAGM,IAAoG,EAApGF,EAAAA,EAAAA,IAAoG+D,EAAA,CAAzFvD,MAAM,eAAenxB,KAAK,UAAW20B,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAAiI,mB,CAH7DjoC,SAAAm/B,EAAAA,EAAAA,KAG+E,IAAeE,EAAA,MAAAA,EAAA,MAH9FC,EAAAA,EAAAA,IAG+E,uBAH/E9oB,EAAA,OAAAA,EAAA,KAKIyoB,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CALrB9/B,SAAAm/B,EAAAA,EAAAA,KAMM,IAAsG,EAAtGF,EAAAA,EAAAA,IAAsG+D,EAAA,CAA3FvD,MAAM,eAAenxB,KAAK,UAAW20B,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAAkI,oB,CAN7DloC,SAAAm/B,EAAAA,EAAAA,KAMgF,IAAgBE,EAAA,MAAAA,EAAA,MANhGC,EAAAA,EAAAA,IAMgF,wBANhF9oB,EAAA,OAAAA,EAAA,I,eAQIkpB,EAAAA,EAAAA,IAAwB,OAAnBD,MAAM,QAAM,WACjBR,EAAAA,EAAAA,IAOSY,EAAA,CAPAC,KAAM,IAAE,CATrB9/B,SAAAm/B,EAAAA,EAAAA,KAUM,IAA0E,gBAA1EO,EAAAA,EAAAA,IAA0E,OAArEC,MAAA,mCAAsC,6BAAyB,KACpEV,EAAAA,EAAAA,IAAwFuC,EAAA,CAA9E/B,MAAM,eAXtBU,WAW8C2H,EAAAK,WAX9C,sBAAA9I,EAAA,KAAAA,EAAA,GAAAgB,GAW8CyH,EAAAK,WAAU9H,GAAE+H,UAAA,GAAUxH,YAAY,a,wBAC1E3B,EAAAA,EAAAA,IAAwF+D,EAAA,CAA7EvD,MAAM,eAAenxB,KAAK,UAAW20B,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAAqI,a,CAZ7DroC,SAAAm/B,EAAAA,EAAAA,KAYyE,IAASE,EAAA,MAAAA,EAAA,MAZlFC,EAAAA,EAAAA,IAYyE,iBAZzE9oB,EAAA,I,eAaMkpB,EAAAA,EAAAA,IAAI,qBACJT,EAAAA,EAAAA,IAAuGuC,EAAA,CAA7F/B,MAAM,eAdtBU,WAc8C2H,EAAAQ,mBAd9C,sBAAAjJ,EAAA,KAAAA,EAAA,GAAAgB,GAc8CyH,EAAAQ,mBAAkBjI,GAAE+H,UAAA,GAAUxH,YAAY,oB,wBAClF3B,EAAAA,EAAAA,IAAsG+D,EAAA,CAA3FvD,MAAM,eAAenxB,KAAK,UAAW20B,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAAuI,oB,CAf7DvoC,SAAAm/B,EAAAA,EAAAA,KAegF,IAAgBE,EAAA,MAAAA,EAAA,MAfhGC,EAAAA,EAAAA,IAegF,wBAfhF9oB,EAAA,OAAAA,EAAA,I,eAiBIkpB,EAAAA,EAAAA,IAAwB,OAAnBD,MAAM,QAAM,WACjBR,EAAAA,EAAAA,IAqBSY,EAAA,CArBAC,KAAM,IAAE,CAlBrB9/B,SAAAm/B,EAAAA,EAAAA,KAmBM,IAAuF,EAAvFF,EAAAA,EAAAA,IAAuFuC,EAAA,CAA7E/B,MAAM,eAnBtBU,WAmB8C2H,EAAAjiB,QAnB9C,sBAAAwZ,EAAA,KAAAA,EAAA,GAAAgB,GAmB8CyH,EAAAjiB,QAAOwa,GAAE+H,UAAA,GAAUxH,YAAY,e,wBACvE3B,EAAAA,EAAAA,IAAqG+D,EAAA,CAA1FvD,MAAM,eAAenxB,KAAK,UAAW20B,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAAwI,oB,CApB7DxoC,SAAAm/B,EAAAA,EAAAA,KAoBgF,IAAeE,EAAA,MAAAA,EAAA,MApB/FC,EAAAA,EAAAA,IAoBgF,uBApBhF9oB,EAAA,I,eAqBMkpB,EAAAA,EAAAA,IAAI,qBACJT,EAAAA,EAAAA,IACsE+D,EAAA,CAD3DvD,MAAM,eAAenxB,KAAK,UAClC20B,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAAyI,2B,CAvBhBzoC,SAAAm/B,EAAAA,EAAAA,KAuB0C,IAAsBE,EAAA,MAAAA,EAAA,MAvBhEC,EAAAA,EAAAA,IAuB0C,8BAvB1C9oB,EAAA,I,eAwBMkpB,EAAAA,EAAAA,IAAI,mCACJA,EAAAA,EAAAA,IAaM,OAbDC,MAAA,+FAA0F,EAC7FD,EAAAA,EAAAA,IAEK,UAFD,sCAGJA,EAAAA,EAAAA,IAEK,UAFD,0BAGJA,EAAAA,EAAAA,IAEK,UAFD,kCAGJA,EAAAA,EAAAA,IAEK,UAFD,2DAEJ,OArCRlpB,EAAA,I,eAwCIkpB,EAAAA,EAAAA,IAAwB,OAAnBD,MAAM,QAAM,WACjBR,EAAAA,EAAAA,IAeSY,EAAA,CAfAC,KAAM,IAAE,CAzCrB9/B,SAAAm/B,EAAAA,EAAAA,KA0CM,IAAuF,EAAvFF,EAAAA,EAAAA,IAAuFuC,EAAA,CAA7E/B,MAAM,eA1CtBU,WA0C8C2H,EAAA/gB,MA1C9C,sBAAAsY,EAAA,KAAAA,EAAA,GAAAgB,GA0C8CyH,EAAA/gB,MAAKsZ,GAAE+H,UAAA,GAAUxH,YAAY,iB,wBACrE3B,EAAAA,EAAAA,IAAoFuC,EAAA,CAA1E/B,MAAM,eA3CtBU,WA2C8C2H,EAAAY,SA3C9C,sBAAArJ,EAAA,MAAAA,EAAA,IAAAgB,GA2C8CyH,EAAAY,SAAQrI,GAAE+H,UAAA,GAAUxH,YAAY,W,wBACxE3B,EAAAA,EAAAA,IAA8G+D,EAAA,CAAnGvD,MAAM,eAAenxB,KAAK,UAAW20B,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAA2I,wB,CA5C7D3oC,SAAAm/B,EAAAA,EAAAA,KA4CoF,IAAoBE,EAAA,MAAAA,EAAA,MA5CxGC,EAAAA,EAAAA,IA4CoF,4BA5CpF9oB,EAAA,I,eA6CMkpB,EAAAA,EAAAA,IAUM,OAVDC,MAAA,+FAA0F,EAC7FD,EAAAA,EAAAA,IAEK,UAFD,uCAGJA,EAAAA,EAAAA,IAEK,UAFD,uCAGJA,EAAAA,EAAAA,IAEK,UAFD,yCAEJ,OAtDRlpB,EAAA,OAAAA,EAAA,G,gBA+DA,GACEhhB,KAAM,sBACNozC,MAAO,CACLv9C,IAAKqQ,QAEPmtC,KAAAA,GACE,MAAM9hB,GAAQigB,EAAAA,EAAAA,IAAI,IACZmB,GAAanB,EAAAA,EAAAA,IAAI,OACjBsB,GAAqBtB,EAAAA,EAAAA,IAAI,OACzBnhB,GAAUmhB,EAAAA,EAAAA,IAAI,IACd0B,GAAW1B,EAAAA,EAAAA,IAAI,IACrB,MAAO,CACLjgB,QACA2hB,WACA7iB,UACAsiB,aACAG,qBAEJ,EACAvlC,QAAS,CAEPklC,cAAAA,GACEjiD,KAAK8iD,MAAM,4BAA6B,CAAC,EAAG,iBAC9C,EAEAZ,eAAAA,GACE,IAAI74C,EAAS,CACX6Z,KAAM,iEACNgc,QAAS,kBAEXl/B,KAAK8iD,MAAM,4BAA6Bz5C,EAAQ,kBAClD,EAEAg5C,QAAAA,GACE,GAAuB,GAAnBriD,KAAKmiD,WAEP,YADAY,MAAM,QAGR,IAAI15C,EAAS,CACX6Z,KAAM,GACNsc,GAAI,qCACJngC,MAAO,GAAGW,KAAKmiD,cAEjBniD,KAAK8iD,MAAM,4BAA6Bz5C,EAAQ,WAClD,EAEAk5C,eAAAA,GACE,GAAuB,GAAnBviD,KAAKmiD,WAEP,YADAY,MAAM,QAIR,IAAI15C,EAAS,CACX6Z,KAAM,GACNoc,UAAW,qCACXC,SAAU,GAAGv/B,KAAKsiD,qBAClBr2B,QAAS,CACPwT,QAAS,KAGbz/B,KAAK8iD,MAAM,4BAA6Bz5C,EAAQ,kBAClD,EAEAm5C,eAAAA,GACOxiD,KAAK6/B,QAIV7/B,KAAK8iD,MAAM,4BAA6B,CACtCjjB,QAAS7/B,KAAK6/B,QACd5T,QAAS,CACP+2B,eAAe,IAEhB,gBARDD,MAAM,UASV,EAEAN,sBAAAA,GACOziD,KAAK6/B,QAIV7/B,KAAK8iD,MAAM,4BAA6B,CACtCjjB,QAAS7/B,KAAK6/B,QACd5T,QAAS,CACP+2B,eAAe,IAEhB,uBARDD,MAAM,UASV,EAEAJ,mBAAAA,GACO3iD,KAAK+gC,MAKL/gC,KAAK0iD,SAKV1iD,KAAK8iD,MAAM,4BAA6B,CACtCtmC,QAASxc,KAAK0iD,SACdviB,cAAengC,KAAK+gC,MACpB9U,QAAS,CACPwT,QAAS,OAEV,uBAVDsjB,MAAM,YALNA,MAAM,YAgBV,I,WCnKJ,MAAME,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAS,GAAQ,CAAC,YAAY,qBAEzF,Q,yICRE1H,EAAAA,EAAAA,IA0DS3B,EAAA,CA1DA6C,OAAQ,IAAE,CADrBziC,SAAAm/B,EAAAA,EAAAA,KAEI,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAFrB9/B,SAAAm/B,EAAAA,EAAAA,KAGM,IAA4G,EAA5GF,EAAAA,EAAAA,IAA4G+D,EAAA,CAAjGvD,MAAM,eAAenxB,KAAK,UAAW20B,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAAkJ,uB,CAH7DlpC,SAAAm/B,EAAAA,EAAAA,KAGmF,IAAmBE,EAAA,MAAAA,EAAA,MAHtGC,EAAAA,EAAAA,IAGmF,2BAHnF9oB,EAAA,OAAAA,EAAA,KAKIyoB,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CALrB9/B,SAAAm/B,EAAAA,EAAAA,KAMM,IAA8G,EAA9GF,EAAAA,EAAAA,IAA8G+D,EAAA,CAAnGvD,MAAM,eAAenxB,KAAK,UAAW20B,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAAmJ,wB,CAN7DnpC,SAAAm/B,EAAAA,EAAAA,KAMoF,IAAoBE,EAAA,MAAAA,EAAA,MANxGC,EAAAA,EAAAA,IAMoF,4BANpF9oB,EAAA,OAAAA,EAAA,I,eAQIkpB,EAAAA,EAAAA,IAAwB,OAAnBD,MAAM,QAAM,WACjBR,EAAAA,EAAAA,IAQSY,EAAA,CARAC,KAAM,IAAE,CATrB9/B,SAAAm/B,EAAAA,EAAAA,KAUM,IAA0E,gBAA1EO,EAAAA,EAAAA,IAA0E,OAArEC,MAAA,mCAAsC,6BAAyB,KACpEV,EAAAA,EAAAA,IAAwFuC,EAAA,CAA9E/B,MAAM,eAXtBU,WAW8C2H,EAAAK,WAX9C,sBAAA9I,EAAA,KAAAA,EAAA,GAAAgB,GAW8CyH,EAAAK,WAAU9H,GAAE+H,UAAA,GAAUxH,YAAY,a,wBAC1E3B,EAAAA,EAAAA,IAAgG+D,EAAA,CAArFvD,MAAM,eAAenxB,KAAK,UAAW20B,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAAoJ,iB,CAZ7DppC,SAAAm/B,EAAAA,EAAAA,KAY6E,IAAaE,EAAA,MAAAA,EAAA,MAZ1FC,EAAAA,EAAAA,IAY6E,qBAZ7E9oB,EAAA,I,eAaMkpB,EAAAA,EAAAA,IAAI,qBACJT,EAAAA,EAAAA,IAAuGuC,EAAA,CAA7F/B,MAAM,eAdtBU,WAc8C2H,EAAAQ,mBAd9C,sBAAAjJ,EAAA,KAAAA,EAAA,GAAAgB,GAc8CyH,EAAAQ,mBAAkBjI,GAAE+H,UAAA,GAAUxH,YAAY,oB,wBAClF3B,EAAAA,EAAAA,IAA8G+D,EAAA,CAAnGvD,MAAM,eAAenxB,KAAK,UAAW20B,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAAqJ,wB,CAf7DrpC,SAAAm/B,EAAAA,EAAAA,KAeoF,IAAoBE,EAAA,MAAAA,EAAA,MAfxGC,EAAAA,EAAAA,IAeoF,4BAfpF9oB,EAAA,OAAAA,EAAA,I,eAkBIkpB,EAAAA,EAAAA,IAAwB,OAAnBD,MAAM,QAAM,WACjBR,EAAAA,EAAAA,IAqBSY,EAAA,CArBAC,KAAM,IAAE,CAnBrB9/B,SAAAm/B,EAAAA,EAAAA,KAoBM,IAAuF,EAAvFF,EAAAA,EAAAA,IAAuFuC,EAAA,CAA7E/B,MAAM,eApBtBU,WAoB8C2H,EAAAjiB,QApB9C,sBAAAwZ,EAAA,KAAAA,EAAA,GAAAgB,GAoB8CyH,EAAAjiB,QAAOwa,GAAE+H,UAAA,GAAUxH,YAAY,e,wBACvE3B,EAAAA,EAAAA,IAAyG+D,EAAA,CAA9FvD,MAAM,eAAenxB,KAAK,UAAW20B,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAAsJ,wB,CArB7DtpC,SAAAm/B,EAAAA,EAAAA,KAqBoF,IAAeE,EAAA,MAAAA,EAAA,MArBnGC,EAAAA,EAAAA,IAqBoF,uBArBpF9oB,EAAA,I,eAsBMkpB,EAAAA,EAAAA,IAAI,qBACJT,EAAAA,EAAAA,IAC0E+D,EAAA,CAD/DvD,MAAM,eAAenxB,KAAK,UAClC20B,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAAuJ,+B,CAxBhBvpC,SAAAm/B,EAAAA,EAAAA,KAwB8C,IAAsBE,EAAA,MAAAA,EAAA,MAxBpEC,EAAAA,EAAAA,IAwB8C,8BAxB9C9oB,EAAA,I,eAyBMkpB,EAAAA,EAAAA,IAAI,mCACJA,EAAAA,EAAAA,IAaM,OAbDC,MAAA,+FAA0F,EAC7FD,EAAAA,EAAAA,IAEK,UAFD,0CAGJA,EAAAA,EAAAA,IAEK,UAFD,0BAGJA,EAAAA,EAAAA,IAEK,UAFD,kCAGJA,EAAAA,EAAAA,IAEK,UAFD,2DAEJ,OAtCRlpB,EAAA,I,eAyCIkpB,EAAAA,EAAAA,IAAwB,OAAnBD,MAAM,QAAM,WACjBR,EAAAA,EAAAA,IAgBSY,EAAA,CAhBAC,KAAM,IAAE,CA1CrB9/B,SAAAm/B,EAAAA,EAAAA,KA2CM,IAAuF,EAAvFF,EAAAA,EAAAA,IAAuFuC,EAAA,CAA7E/B,MAAM,eA3CtBU,WA2C8C2H,EAAA/gB,MA3C9C,sBAAAsY,EAAA,KAAAA,EAAA,GAAAgB,GA2C8CyH,EAAA/gB,MAAKsZ,GAAE+H,UAAA,GAAUxH,YAAY,iB,wBACrE3B,EAAAA,EAAAA,IAAoFuC,EAAA,CAA1E/B,MAAM,eA5CtBU,WA4C8C2H,EAAAY,SA5C9C,sBAAArJ,EAAA,MAAAA,EAAA,IAAAgB,GA4C8CyH,EAAAY,SAAQrI,GAAE+H,UAAA,GAAUxH,YAAY,W,wBACxE3B,EAAAA,EAAAA,IACyE+D,EAAA,CAD9DvD,MAAM,eAAenxB,KAAK,UAClC20B,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAAwJ,4B,CA9ChBxpC,SAAAm/B,EAAAA,EAAAA,KA8C2C,IAAwBE,EAAA,MAAAA,EAAA,MA9CnEC,EAAAA,EAAAA,IA8C2C,gCA9C3C9oB,EAAA,I,eA+CMkpB,EAAAA,EAAAA,IAUM,OAVDC,MAAA,+FAA0F,EAC7FD,EAAAA,EAAAA,IAEK,UAFD,2CAGJA,EAAAA,EAAAA,IAEK,UAFD,uCAGJA,EAAAA,EAAAA,IAEK,UAFD,yCAEJ,OAxDRlpB,EAAA,OAAAA,EAAA,G,CAiEA,OACEhhB,KAAM,sBACNozC,MAAO,CACLv9C,IAAKqQ,QAEPmtC,KAAAA,GACE,MAAM9hB,GAAQigB,EAAAA,EAAAA,IAAI,IACZmB,GAAanB,EAAAA,EAAAA,IAAI,OACjBsB,GAAqBtB,EAAAA,EAAAA,IAAI,OACzBnhB,GAAUmhB,EAAAA,EAAAA,IAAI,IACd0B,GAAW1B,EAAAA,EAAAA,IAAI,IACrB,MAAO,CACLjgB,QACA2hB,WACA7iB,UACAsiB,aACAG,qBAEJ,EACAvlC,QAAS,CAEPmmC,kBAAAA,GACEljD,KAAK8iD,MAAM,4BAA6B,CAAC,EAAG,qBAC9C,EAEAK,mBAAAA,GACE,IAAI95C,EAAS,CACX6Z,KAAM,iEACNgc,QAAS,gcAEXl/B,KAAK8iD,MAAM,4BAA6Bz5C,EAAQ,sBAClD,EAEA+5C,YAAAA,GACE,GAAuB,GAAnBpjD,KAAKmiD,WAEP,YADAY,MAAM,QAGR,IAAI15C,EAAS,CACX6Z,KAAM,GACNsc,GAAI,qCACJngC,MAAO,GAAGW,KAAKmiD,cAEjBniD,KAAK8iD,MAAM,4BAA6Bz5C,EAAQ,eAClD,EAEAg6C,mBAAAA,GACE,GAAuB,GAAnBrjD,KAAKmiD,WAEP,YADAY,MAAM,QAIR,IAAI15C,EAAS,CACX6Z,KAAM,GACNoc,UAAW,qCACXC,SAAU,GAAGv/B,KAAKsiD,qBAClBr2B,QAAS,CACPwT,QAAS,KAGbz/B,KAAK8iD,MAAM,4BAA6Bz5C,EAAQ,sBAClD,EAEAi6C,mBAAAA,GACOtjD,KAAK6/B,QAIV7/B,KAAK8iD,MAAM,4BAA6B,CACtCjjB,QAAS7/B,KAAK6/B,QACd5T,QAAS,CACP+2B,eAAe,IAEhB,oBARDD,MAAM,UASV,EAEAQ,0BAAAA,GACOvjD,KAAK6/B,QAIV7/B,KAAK8iD,MAAM,4BAA6B,CACtCjjB,QAAS7/B,KAAK6/B,QACd5T,QAAS,CACP+2B,eAAe,IAEhB,2BARDD,MAAM,UASV,EAEAS,uBAAAA,GACOxjD,KAAK+gC,MAKL/gC,KAAK0iD,SAKV1iD,KAAK8iD,MAAM,4BAA6B,CACtCtmC,QAASxc,KAAK0iD,SACdviB,cAAengC,KAAK+gC,MACpB9U,QAAS,CACPwT,QAAS,OAEV,2BAVDsjB,MAAM,YALNA,MAAM,YAgBV,ICrKJ,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAS,GAAQ,CAAC,YAAY,qBAEzF,Q,kHCsNExH,EAAAA,EAAAA,IAmCS3B,EAAA,CAnCA6C,OAAQ,GAAIhD,MAAM,c,CA/N7Bz/B,SAAAm/B,EAAAA,EAAAA,KAgOI,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAhOrB9/B,SAAAm/B,EAAAA,EAAAA,KAiOM,IAAoG,EAApGF,EAAAA,EAAAA,IAAoG+D,EAAA,CAAzFvD,MAAM,eAAenxB,KAAK,UAAW20B,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAAyJ,mB,CAjO7DzpC,SAAAm/B,EAAAA,EAAAA,KAiO+E,IAAeE,EAAA,KAAAA,EAAA,KAjO9FC,EAAAA,EAAAA,IAiO+E,uBAjO/E9oB,EAAA,OAAAA,EAAA,KAmOIyoB,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAnOrB9/B,SAAAm/B,EAAAA,EAAAA,KAoOM,IAAsG,EAAtGF,EAAAA,EAAAA,IAAsG+D,EAAA,CAA3FvD,MAAM,eAAenxB,KAAK,UAAW20B,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAA0J,oB,CApO7D1pC,SAAAm/B,EAAAA,EAAAA,KAoOgF,IAAgBE,EAAA,KAAAA,EAAA,KApOhGC,EAAAA,EAAAA,IAoOgF,wBApOhF9oB,EAAA,OAAAA,EAAA,KAsOIyoB,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAtOrB9/B,SAAAm/B,EAAAA,EAAAA,KAuOM,IAAsH,EAAtHF,EAAAA,EAAAA,IAAsH+D,EAAA,CAA3GvD,MAAM,eAAenxB,KAAK,UAAW20B,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAA2J,4B,CAvO7D3pC,SAAAm/B,EAAAA,EAAAA,KAuOwF,IAAwBE,EAAA,MAAAA,EAAA,MAvOhHC,EAAAA,EAAAA,IAuOwF,gCAvOxF9oB,EAAA,OAAAA,EAAA,KAyOIyoB,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAzOrB9/B,SAAAm/B,EAAAA,EAAAA,KA0OM,IAA+G,EAA/GF,EAAAA,EAAAA,IAA+G+D,EAAA,CAApGvD,MAAM,eAAenxB,KAAK,UAAW20B,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAA4J,yB,CA1O7D5pC,SAAAm/B,EAAAA,EAAAA,KA0OqF,IAAoBE,EAAA,MAAAA,EAAA,MA1OzGC,EAAAA,EAAAA,IA0OqF,4BA1OrF9oB,EAAA,OAAAA,EAAA,KA6OIyoB,EAAAA,EAAAA,IAGSY,EAAA,CAHAC,KAAM,IAAE,CA7OrB9/B,SAAAm/B,EAAAA,EAAAA,KA8OM,IAAwH,EAAxHF,EAAAA,EAAAA,IAAwH+D,EAAA,CAA7GvD,MAAM,eAAenxB,KAAK,UAAW20B,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAA6J,kC,CA9O7D7pC,SAAAm/B,EAAAA,EAAAA,KA8O8F,IAAoBE,EAAA,MAAAA,EAAA,MA9OlHC,EAAAA,EAAAA,IA8O8F,4BA9O9F9oB,EAAA,I,eA+OMkpB,EAAAA,EAAAA,IAA8E,OAAzEC,MAAA,mCAAsC,iCAA6B,OA/O9EnpB,EAAA,KAkPIyoB,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,IAAE,CAlPrB9/B,SAAAm/B,EAAAA,EAAAA,KAmPM,IAAmG,EAAnGF,EAAAA,EAAAA,IAAmG+D,EAAA,CAAxFvD,MAAM,eAAenxB,KAAK,UAAW20B,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAA8J,mB,CAnP7D9pC,SAAAm/B,EAAAA,EAAAA,KAmP+E,IAAcE,EAAA,MAAAA,EAAA,MAnP7FC,EAAAA,EAAAA,IAmP+E,sBAnP/E9oB,EAAA,I,eAoPMkpB,EAAAA,EAAAA,IAA6E,OAAxEC,MAAA,mCAAsC,gCAA4B,mBACvED,EAAAA,EAAAA,IAAkH,OAA7GC,MAAA,mCAAqC,sEAAkE,OArPlHnpB,EAAA,I,eAwPIkpB,EAAAA,EAAAA,IAAwB,OAAnBD,MAAM,QAAM,WACjBR,EAAAA,EAAAA,IAGSY,EAAA,CAHAC,KAAM,IAAE,CAzPrB9/B,SAAAm/B,EAAAA,EAAAA,KA0PM,IACkG,EADlGF,EAAAA,EAAAA,IACkG+D,EAAA,CADvFvD,MAAM,eAAenxB,KAAK,UACzB20B,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAA+J,sC,CA3PzB/pC,SAAAm/B,EAAAA,EAAAA,KA2P8D,IAA8BE,EAAA,MAAAA,EAAA,MA3P5FC,EAAAA,EAAAA,IA2P8D,sCA3P9D9oB,EAAA,OAAAA,EAAA,KA8PIyoB,EAAAA,EAAAA,IAGSY,EAAA,CAHAC,KAAM,IAAE,CA9PrB9/B,SAAAm/B,EAAAA,EAAAA,KA+PM,IAC4G,EAD5GF,EAAAA,EAAAA,IAC4G+D,EAAA,CADjGvD,MAAM,eAAenxB,KAAK,UACzB20B,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAAgK,gD,CAhQzBhqC,SAAAm/B,EAAAA,EAAAA,KAgQwE,IAA8BE,EAAA,MAAAA,EAAA,MAhQtGC,EAAAA,EAAAA,IAgQwE,sCAhQxE9oB,EAAA,OAAAA,EAAA,OAAAA,EAAA,G,2DAKA,GACEhhB,KAAM,sBACNuN,QAAS,CACP0mC,cAAAA,GACEzjD,KAAK8iD,MAAM,4BAA6B,GAAI,iBAC9C,EAGA,qBAAMY,GACJ,MAAMp/C,EAAO,CACX,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAClE,IAAK,IAAK,IAAK,KAEXg4B,EAAa,IAAI1U,WAAWtjB,GAClC,IAAIsJ,EAAQ,CACVrE,QAAS+yB,GAEXt8B,KAAK8iD,MAAM,4BAA6Bl1C,EAAO,kBACjD,EAEA,6BAAM+1C,GACJ,MAAMr/C,EAAO,CACX,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAClE,IAAK,IAAK,IAAK,KAEXg4B,EAAa,IAAI1U,WAAWtjB,GAClC,IAAIsJ,EAAQ,CACVrE,QAAS+yB,GAEXt8B,KAAK8iD,MAAM,4BAA6Bl1C,EAAO,0BACjD,EAEAg2C,oBAAAA,GAEE,MAAM1hB,EAAS,IAET+hB,EACF,qEAGEC,EAAK,IAAIC,EAAAA,GACRC,GAAQF,EAAGG,WAAWH,EAAGjiB,IAAK,CAACC,IACtCgiB,EAAGI,gBAAgB,CAACF,GAAOH,GAC3B,MAAMr2C,EAAQ,CACZ22C,iBAAkBL,EAClBnlB,QAAS,CAAC,EACV3hB,MAAO,cACP6O,QAAS,CACPu4B,aAAa,IAIjBxkD,KAAK8iD,MAAM,4BAA6Bl1C,EAAO,sBACjD,EAEA,oBAAMk2C,GACJ,IAAIrlB,EAAW7U,OAAO6U,SACtBA,EAAS6L,gBACL,cACA,uCAEJ,IAAIhmC,EAAO,CACTyL,OAAQ,kBACR1G,OAAQ,CACN,qEACA,2DAIJrJ,KAAK8iD,MAAM,4BAA6Bx+C,EAAM,cAChD,EAGA,uCAAMy/C,GAEJ,MAAM7hB,EAAS,IAET+hB,EACF,qEAGEC,EAAK,IAAIC,EAAAA,GACRC,GAAQF,EAAGG,WAAWH,EAAGjiB,IAAK,CAACC,IACtCgiB,EAAGI,gBAAgB,CAACF,GAAOH,GAC3B,MAAMr2C,EAAQ,CACZ22C,iBAAkBL,EAClBj4B,QAAS,CACPu4B,aAAa,KAKVC,EAASC,SAAqB1kD,KAAK2kD,4BACtC/2C,GAEJA,EAAM62C,QAAUA,EAChB72C,EAAM82C,YAAcA,EAEpB1kD,KAAK8iD,MAAM,4BAA6Bl1C,EAAO,sBACjD,EAGA,iDAAMo2C,GAEJ,MAAM9hB,EAAS,IAET+hB,EACF,qEAGEC,EAAK,IAAIC,EAAAA,GACRC,GAAQF,EAAGG,WAAWH,EAAGjiB,IAAK,CAACC,IACtCgiB,EAAGI,gBAAgB,CAACF,GAAOH,GAE3B,MAAMr2C,EAAQ,CACZ22C,iBAAkBL,EAClBj4B,QAAS,CACPu4B,aAAa,KAKVC,EAASC,SAAqB1kD,KAAK2kD,4BACtC/2C,GAEJA,EAAM62C,QAAUA,EAChB72C,EAAM82C,YAAcA,EACpB1kD,KAAK8iD,MAAM,4BAA6Bl1C,EAAO,gCACjD,EAGA,iCAAM+2C,CAA4B/2C,GAEhC,IAAIg3C,EAAc,CAAC,GAAI,IAWvB,GATI,YAAah3C,GACbA,EAAM62C,QAAQp9C,OAAS,GACvB,gBAAiBuG,GACjBA,EAAM82C,YAAYr9C,OAAS,IAE7Bu9C,EAAc,CAACh3C,EAAM62C,QAAS72C,EAAM82C,gBAIhC,qBAAsB92C,GAC1B,OAAO,IAAI/L,SAASD,IAClBA,EAAQgjD,EAAY,IAWxB,IAAIC,EAAiBj7B,OAAO6U,SAAS+G,6BAA6B,OAClE,GAA6B,GAAzBqf,EAAex9C,OACjB,OAAO,IAAIxF,SAASD,IAClBA,EAAQgjD,EAAY,IAIxB,IACE,IAAIra,GAASua,EAAAA,EAAAA,GAAe,WAC5Bva,EAAS,gDACT,MAAMwa,EAAY,IAAIC,EAAAA,EAAU,CAAE7hD,IAAKonC,IAGvC38B,EAAM22C,iBAAiBU,UAAUJ,EAAe,IAChD,MAAM3jD,QAAe0M,EAAM22C,iBAAiBW,MAAM,CAChD/+B,OAAQ4+B,IAEJN,EAAUU,EAAOjkD,GAAQyD,SAAS,UAClC+/C,QAAoBP,EAAAA,EAAejhC,KAAKuhC,GAAS75B,SACvDg6B,EAAc,CAACH,EAASC,EAC1B,CAAE,MAAOn1C,GACP,OAAO,IAAI1N,SAASD,IAClBA,EAAQgjD,EAAY,GAExB,CAEA,OAAO,IAAI/iD,SAASD,IAClBA,EAAQgjD,EAAY,GAExB,EAGAf,6BAAAA,GAEE,MAAM3hB,EAAS,IAET+hB,EACJ,qEAGIC,EAAK,IAAIC,EAAAA,GACRC,GAAQF,EAAGG,WAAWH,EAAGjiB,IAAK,CAACC,IACtCgiB,EAAGI,gBAAgB,CAACF,GAAOH,GAC3B,MAAMr2C,EAAQ,CACZ22C,iBAAkBL,EAClBnlB,QAAS,CAAC,EACV3hB,MAAO,cACP6O,QAAS,CACPu4B,aAAa,IAIjBxkD,KAAK2hD,gBAAkB9tC,KAAKC,UAAUlG,GACtC5N,KAAKolD,sBAAwBx3C,EAC7B5N,KAAKqlD,iBAAmB,+BAC1B,IClNJ,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAS,GAAQ,CAAC,YAAY,qBAEzF,Q,kHC2IE9J,EAAAA,EAAAA,IAyBS3B,EAAA,CAzBA6C,OAAQ,GAAIhD,MAAM,c,CApJ7Bz/B,SAAAm/B,EAAAA,EAAAA,KAqJI,IAOS,EAPTF,EAAAA,EAAAA,IAOSY,EAAA,CAPAC,KAAM,IAAE,CArJrB9/B,SAAAm/B,EAAAA,EAAAA,KAsJM,IAAsG,EAAtGF,EAAAA,EAAAA,IAAsG+D,EAAA,CAA3FvD,MAAM,eAAenxB,KAAK,UAAW20B,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAAsL,yB,CAtJ7DtrC,SAAAm/B,EAAAA,EAAAA,KAsJqF,IAAWE,EAAA,KAAAA,EAAA,KAtJhGC,EAAAA,EAAAA,IAsJqF,mBAtJrF9oB,EAAA,I,aAuJMkpB,EAAAA,EAAAA,IAIM,OAJDC,MAAA,+FAA0F,EAC7FD,EAAAA,EAAAA,IAEK,UAFD,2BAEJ,OA1JRlpB,EAAA,I,aA6JIkpB,EAAAA,EAAAA,IAAwB,OAAnBD,MAAM,QAAM,WAEjBR,EAAAA,EAAAA,IAaSY,EAAA,CAbAC,KAAM,IAAE,CA/JrB9/B,SAAAm/B,EAAAA,EAAAA,KAgKM,IAEY,EAFZF,EAAAA,EAAAA,IAEY+D,EAAA,CAFDvD,MAAM,eAAenxB,KAAK,UAAW20B,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAAuL,0BAAyB,K,CAhKtFvrC,SAAAm/B,EAAAA,EAAAA,KAgK6F,IAEvFE,EAAA,KAAAA,EAAA,KAlKNC,EAAAA,EAAAA,IAgK6F,yBAhK7F9oB,EAAA,I,aAoKMkpB,EAAAA,EAAAA,IAOM,OAPDC,MAAA,+FAA0F,EAC7FD,EAAAA,EAAAA,IAEK,UAFD,sCAGJA,EAAAA,EAAAA,IAEK,UAFD,yBAEJ,OA1KRlpB,EAAA,OAAAA,EAAA,G,gBAIA,GACEhhB,KAAM,2BACNuN,QAAS,CACP,0BAAMuoC,GAEJ,GADAtlD,KAAKwc,QAAUxc,KAAKwlD,oBACC,KAAjBxlD,KAAKwc,QAEP,YADAumC,MAAM,uBAIR,IAAI1gB,EAAWriC,KAAKqiC,SACpBriC,KAAK8iD,MAAM,4BAA6BjvC,KAAKC,UAAUuuB,IACvD,IAAI5D,EAAW,IAAI+E,EAAAA,oBAAoB5Z,OAAO6U,UAC1CxM,QAAYwM,EAASQ,YAAYj/B,KAAKwc,QAAS6lB,EAAU,oBAC7D,GAAIpQ,EAAIhtB,KAAM,CACZ,GAAgB,KAAZgtB,EAAIhtB,KAAa,CACnB,IAAII,EAAM,yDACV09C,MAAM19C,GACNrF,KAAK8iD,MAAM,4BAA6Bz9C,EAAK,uBAC/C,CAEA,YADArF,KAAK8iD,MAAM,4BAA6B7wB,EAAK,uBAE/C,CACA1D,QAAQzrB,IAAImvB,GAEZ,MAAMwzB,EAAc,IAAIC,EAAAA,GAAY,CAAEC,QAAS,qDAC/C,IAAIC,EAAK,QACT,MAAM7mB,EAAU,IAAI8mB,EAAAA,GAAQJ,EAAazlD,KAAKwc,QAASopC,GACvD,IAAIE,EAAO9lD,KACX++B,EAAQgnB,cAAc1jB,EAAUpQ,GAAK5vB,MAAK,SAAU2jD,GAClDF,EAAKhD,MAAM,4BAA6B,UAAYkD,EAAU,KAAO/zB,EAAK,uBAC5E,IAAGriB,OAAM,SAAUL,GACjBu2C,EAAKhD,MAAM,4BAA6B,UAAYvzC,EAAQ,KAAO0iB,EAAK,uBAC1E,GACF,EAEA,8BAAMszB,GAEJ,GADAvlD,KAAKwc,QAAUxc,KAAKwlD,oBACC,KAAjBxlD,KAAKwc,QAEP,YADAumC,MAAM,uBAIR,IAAI1oC,EAAM4rC,EAAAA,GAAQC,YAAY,OAC9B,MAAMC,EAAmBC,EAAAA,GAASC,QAAQ,CACxC7mB,GAAI,qEACJngC,MAAOgb,IAKHisC,EAAkB,qEAElBC,EAAe,CACnBriB,MAAO,CACL,CACEsiB,iBAAkBF,EAClBG,YAAa,WACbC,SAAUP,KAKhBnmD,KAAK8iD,MAAM,4BAA6BjvC,KAAKC,UAAUyyC,IACvD,IAAI9nB,EAAW,IAAI+E,EAAAA,oBAAoB5Z,OAAO6U,UAE1CqnB,EAAO9lD,KACXy+B,EAASmF,gBAAgB5jC,KAAKwc,QAAS+pC,EAAc,oBAAoBlkD,MAAK,SAAS4vB,GACrF1D,QAAQzrB,IAAI,mCAAoCmvB,GAChD6zB,EAAKhD,MAAM,4BAA6B7wB,EAAK,2BAC/C,IAAGriB,OAAM,SAASL,GAChB,GAAkB,KAAdA,EAAMtK,KAAa,CACrB,IAAII,EAAM,yDACV09C,MAAM19C,GACNygD,EAAKhD,MAAM,4BAA6Bz9C,EAAK,2BAC/C,MACEygD,EAAKhD,MAAM,4BAA6BvzC,EAAO,2BAEnD,GACF,EAEAi2C,iBAAAA,GACE,IAAI/mB,EAAW,IAAI+E,EAAAA,oBAAoB5Z,OAAO6U,UAC9C,MAAMjiB,EAAUiiB,EAASO,WAAW,qBAAqBxiB,QACzD,OAAOA,CACT,EAEAmqC,YAAAA,GACE,IAAIloB,EAAW,IAAI+E,EAAAA,oBAAoB5Z,OAAO6U,UAC9C,MAAMM,EAAUN,EAASO,WAAW,oBAGpC,OAFAzQ,QAAQzrB,IAAI,iBACZyrB,QAAQzrB,IAAIi8B,GACL,kEACT,GAGFz6B,IAAAA,GACE,MAAM+9B,EAAW,CACb,OAAU,CACR,QAAW,mBACX,KAAQ,WACR,QAAW,KAEb,QAAW,CACT,SAAY,0BACZ,QAAW,sBAEb,YAAe,MACf,MAAS,CACP,eAAkB,CAChB,CACE,KAAQ,OACR,KAAQ,QAEV,CACE,KAAQ,UACR,KAAQ,QAEV,CACE,KAAQ,UACR,KAAQ,SAGZ,IAAO,CACL,CACE,KAAQ,UACR,KAAQ,QAEV,CACE,KAAQ,WACR,KAAQ,WAMlB,MAAO,CACLA,WAEJ,GCxIF,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAS,GAAQ,CAAC,YAAY,qBAEzF,Q,2LC0IEkZ,EAAAA,EAAAA,IAmDS3B,EAAA,CAnDA6C,OAAQ,GAAIhD,MAAM,c,CAnJ7Bz/B,SAAAm/B,EAAAA,EAAAA,KAoJI,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CApJrB9/B,SAAAm/B,EAAAA,EAAAA,KAqJM,IAAuG,EAAvGF,EAAAA,EAAAA,IAAuG+D,EAAA,CAA5FvD,MAAM,eAAenxB,KAAK,UAAW20B,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAA4M,qB,CArJ7D5sC,SAAAm/B,EAAAA,EAAAA,KAqJiF,IAAgBE,EAAA,KAAAA,EAAA,KArJjGC,EAAAA,EAAAA,IAqJiF,wBArJjF9oB,EAAA,OAAAA,EAAA,KAuJIyoB,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAvJrB9/B,SAAAm/B,EAAAA,EAAAA,KAwJM,IAA2G,EAA3GF,EAAAA,EAAAA,IAA2G+D,EAAA,CAAhGvD,MAAM,eAAenxB,KAAK,UAAW20B,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAA6M,uB,CAxJ7D7sC,SAAAm/B,EAAAA,EAAAA,KAwJmF,IAAkBE,EAAA,KAAAA,EAAA,KAxJrGC,EAAAA,EAAAA,IAwJmF,0BAxJnF9oB,EAAA,OAAAA,EAAA,I,eA2JIkpB,EAAAA,EAAAA,IAAwB,OAAnBD,MAAM,QAAM,WAGjBR,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,IAAE,CA9JrB9/B,SAAAm/B,EAAAA,EAAAA,KA+JM,IAEY,EAFZF,EAAAA,EAAAA,IAEY+D,EAAA,CAFDvD,MAAM,eAAenxB,KAAK,UAAW20B,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAA8M,sBAAqB,K,CA/JlF9sC,SAAAm/B,EAAAA,EAAAA,KA+JyF,IAEnFE,EAAA,MAAAA,EAAA,MAjKNC,EAAAA,EAAAA,IA+JyF,wCA/JzF9oB,EAAA,OAAAA,EAAA,KAoKIyoB,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,IAAE,CApKrB9/B,SAAAm/B,EAAAA,EAAAA,KAqKM,IAEY,EAFZF,EAAAA,EAAAA,IAEY+D,EAAA,CAFDvD,MAAM,eAAenxB,KAAK,UAAW20B,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAA+M,qCAAoC,K,CArKjG/sC,SAAAm/B,EAAAA,EAAAA,KAqKwG,IAElGE,EAAA,MAAAA,EAAA,MAvKNC,EAAAA,EAAAA,IAqKwG,wCArKxG9oB,EAAA,OAAAA,EAAA,KA0KIyoB,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,IAAE,CA1KrB9/B,SAAAm/B,EAAAA,EAAAA,KA2KM,IAEY,EAFZF,EAAAA,EAAAA,IAEY+D,EAAA,CAFDvD,MAAM,eAAenxB,KAAK,UAAW20B,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAAgN,oCAAmC,K,CA3KhGhtC,SAAAm/B,EAAAA,EAAAA,KA2KuG,IAEjGE,EAAA,MAAAA,EAAA,MA7KNC,EAAAA,EAAAA,IA2KuG,uCA3KvG9oB,EAAA,OAAAA,EAAA,I,eAgLIkpB,EAAAA,EAAAA,IAAwB,OAAnBD,MAAM,QAAM,WAGjBR,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,IAAE,CAnLrB9/B,SAAAm/B,EAAAA,EAAAA,KAoLM,IAEY,EAFZF,EAAAA,EAAAA,IAEY+D,EAAA,CAFDvD,MAAM,eAAenxB,KAAK,UAAW20B,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAA8M,sBAAqB,K,CApLlF9sC,SAAAm/B,EAAAA,EAAAA,KAoL0F,IAEpFE,EAAA,MAAAA,EAAA,MAtLNC,EAAAA,EAAAA,IAoL0F,+CApL1F9oB,EAAA,OAAAA,EAAA,KAyLIyoB,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,IAAE,CAzLrB9/B,SAAAm/B,EAAAA,EAAAA,KA0LM,IAEY,EAFZF,EAAAA,EAAAA,IAEY+D,EAAA,CAFDvD,MAAM,eAAenxB,KAAK,UAAW20B,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAA+M,qCAAoC,K,CA1LjG/sC,SAAAm/B,EAAAA,EAAAA,KA0LyG,IAEnGE,EAAA,MAAAA,EAAA,MA5LNC,EAAAA,EAAAA,IA0LyG,+CA1LzG9oB,EAAA,OAAAA,EAAA,KA+LIyoB,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,IAAE,CA/LrB9/B,SAAAm/B,EAAAA,EAAAA,KAgMM,IAEY,EAFZF,EAAAA,EAAAA,IAEY+D,EAAA,CAFDvD,MAAM,eAAenxB,KAAK,UAAW20B,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAAgN,oCAAmC,K,CAhMhGhtC,SAAAm/B,EAAAA,EAAAA,KAgMwG,IAElGE,EAAA,MAAAA,EAAA,MAlMNC,EAAAA,EAAAA,IAgMwG,8CAhMxG9oB,EAAA,OAAAA,EAAA,OAAAA,EAAA,G,qCAMA,GACEhhB,KAAM,uBACNuN,QAAS,CAEP,sBAAM6pC,GACJ5mD,KAAK8iD,MAAM,4BAA6B,cACxC,IAAIrkB,EAAW,IAAIiH,EAAAA,gBAAgB9b,OAAO6U,UACtCxM,QAAYwM,EAASQ,YAAY,aAAc,gBACnD,GAAIhN,EAAIhtB,KAEN,YADAjF,KAAK8iD,MAAM,4BAA6B7wB,EAAK,oBAG/C,IAAIg1B,EAAU,IAAIC,EAAAA,GAAQ,CACxB,SAAY,0BACZ,QAAW,CAAC,EACZ,WAAc,KAGhB,MAAMjrC,QAAegrC,EAAQE,IAAIpB,cAAc,KAAOZ,EAAOjiC,KAAK,cAAcve,SAAS,OAAQstB,EAAKwM,EAASO,WAAW,gBAAgBxiB,SAC1Ixc,KAAK8iD,MAAM,4BAA6B,UAAY7mC,EAAS,KAAOgW,EAAK,mBAC3E,EAEA,wBAAM40B,GACJ7mD,KAAK8iD,MAAM,4BAA6B,cACxC,IAAIrkB,EAAW,IAAIiH,EAAAA,gBAAgB9b,OAAO6U,UACtCxM,QAAYwM,EAASoH,cAAc,aAAc,gBACrD,GAAI5T,EAAIhtB,KAEN,YADAjF,KAAK8iD,MAAM,4BAA6B7wB,EAAK,oBAG/C,IAAIg1B,EAAU,IAAIC,EAAAA,GAAQ,CACxB,SAAY,0BACZ,QAAW,CAAC,EACZ,WAAc,KAEhB,MAAME,QAAsBH,EAAQE,IAAIE,gBAAgB,aAAcp1B,GACtE1D,QAAQzrB,IAAI,mCAAoCskD,GAChD74B,QAAQzrB,IAAI,6BAA8B27B,EAASO,WAAW,gBAAgBxiB,SAC9E,MAAMP,EAASmrC,IAAkB3oB,EAASO,WAAW,gBAAgBxiB,QACrExc,KAAK8iD,MAAM,4BAA6B,UAAY7mC,EAAS,KAAQgW,EAAK,mBAC5E,EAEA,0BAAM60B,CAAqBQ,GACzB,IAAI7oB,EAAW,IAAIiH,EAAAA,gBAAgB9b,OAAO6U,UACpCwoB,EAAU,IAAIC,EAAAA,GAAQ,CACxB,SAAY,0BACZ,QAAW,CAAC,EACZ,WAAc,KAEd1qC,EAAUiiB,EAASO,WAAW,gBAAgBxiB,QAClD,MAAMqnB,QAAoBojB,EAAQM,mBAAmBC,QAAQ,qCAAsC,IAAMhrC,GAGzG,GAFAxc,KAAK8iD,MAAM,4BAA6Bjf,GAEpCyjB,EAAY,CACd,IAAIr1B,QAAYwM,EAASqH,gBAAiBjC,EAAa,gBACvD7jC,KAAK8iD,MAAM,4BAA6B7wB,EAAK,uBAC/C,KAAO,CACL,IAAIiyB,QAAWzlB,EAASkI,uBAAuB9C,EAAY,gBAC3D7jC,KAAK8iD,MAAM,4BAA6BoB,EAAI,0BAC9C,CACF,EAEA,iBAAMuD,GACJ,IAAIR,EAAU,IAAIC,EAAAA,GAAQ,CACxB,SAAY,0BACZ,QAAW,CAAC,EACZ,WAAc,KAEZQ,EAAkB,6CAEtB,IACE,MAAMthB,QAAiB6gB,EAAQE,IAAIM,YAAYC,GACzCC,EAAMvhB,EAASuhB,IAAIC,OACzBr5B,QAAQzrB,IAAI,WACZyrB,QAAQzrB,IAAI6kD,EACd,CAAE,MAAOp4C,GACPgf,QAAQzrB,IAAI,8BAA+ByM,EAC7C,CACF,EAEA,yCAAMw3C,CAAoCO,GAExC,IAAIL,EAAU,IAAIC,EAAAA,GAAQ,CACxB,SAAY,0BACZ,QAAW,CAAC,EACZ,WAAc,KAEZQ,EAAkB,6CAClBjpB,EAAW,IAAIiH,EAAAA,gBAAgB9b,OAAO6U,UACtCjiB,EAAUiiB,EAASO,WAAW,gBAAgBxiB,QAClD,MAAMqrC,EAAY,CAChB,CAACv/B,KAAM,UAAWjpB,MAAO,GACzB,CAACipB,KAAM,UAAWjpB,MAAO,GACzB,CAACipB,KAAM,UAAWjpB,MAAO,IAErB8/B,QAAY8nB,EAAQM,mBAAmBO,qBAAqBJ,EAAiB,iCAAkC,CAAC,EAAGG,EAAWrrC,GAIpI,GAHA+R,QAAQzrB,IAAI,uBACZyrB,QAAQzrB,IAAIq8B,GACZn/B,KAAK8iD,MAAM,4BAA6B3jB,EAAI0E,aACxCyjB,EAAY,CACd,IAAIpD,QAAWzlB,EAASqH,gBAAiB3G,EAAI0E,YAAY,gBACzD7jC,KAAK8iD,MAAM,4BAA6BoB,EAAI,0BAC9C,KAAO,CACL,IAAIA,QAAWzlB,EAASkI,uBAAuBxH,EAAI0E,YAAY,gBAC/D7jC,KAAK8iD,MAAM,4BAA6BoB,EAAI,0BAC9C,CACF,EAEA,wCAAM8C,CAAmCM,GACvC,IAAII,EAAkB,6CAClBjpB,EAAW,IAAIiH,EAAAA,gBAAgB9b,OAAO6U,UACtCjiB,EAAUiiB,EAASO,WAAW,gBAAgBxiB,QAClD,MAAMqrC,EAAY,CAChB,CAACv/B,KAAM,UAAWjpB,MAAOqoD,GACzB,CAACp/B,KAAM,UAAWjpB,MAAO,MAE3B,IAAI4nD,EAAU,IAAIC,EAAAA,GAAQ,CACxB,SAAY,0BACZ,QAAW,CAAC,EACZ,WAAc,KAEhB,MAAM/nB,QAAY8nB,EAAQM,mBAAmBO,qBAAqBJ,EAAiB,2BAA4B,CAAC,EAAGG,EAAWrrC,GAE9H,IAAIqnB,EAAc1E,EAAI0E,YAGtB,GAFA7jC,KAAK8iD,MAAM,4BAA6Bjf,GAEpCyjB,EAAY,CACd,IAAIpD,QAAWzlB,EAASqH,gBAAgBjC,EAAY,gBACpD7jC,KAAK8iD,MAAM,4BAA6BoB,EAAI,0BAC9C,KAAO,CACL,IAAIA,QAAWzlB,EAASkI,uBAAuB9C,EAAY,gBAC3D7jC,KAAK8iD,MAAM,4BAA6BoB,EAAI,0BAC9C,CAEF,ICrIJ,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAS,GAAQ,CAAC,YAAY,qBAEzF,Q,qBVy9BA,MAAM,iBAAE6D,IAAqBjoD,EAAQ,QAC/B,WAAEkoD,IAAeloD,EAAQ,OAO/B,IAAImoD,KAEJ,MAAMC,GAAY,CAChB,EAAG,CAAE14C,KAAM,MAAOotC,SAAS,GAC3B,GAAI,CAAEptC,KAAM,MAAOotC,SAAS,GAC5B,IAAK,CAAEptC,KAAM,UAAWotC,SAAS,GACjC,IAAK,CAAEptC,KAAM,OAAQotC,SAAS,GAC9B,WAAW,CAACptC,KAAM,MAAMotC,SAAS,GACjC,cAAe,CAAEptC,KAAM,MAAOotC,SAAS,GACvC,cAAe,CAAEptC,KAAM,MAAOotC,SAAS,GACvC,gBAAiB,CAAEptC,KAAM,QAASotC,SAAS,GAC3C,0CAA2C,CACzCptC,KAAM,SACNotC,SAAS,GAEX,0CAA2C,CACzCptC,KAAM,cACNotC,SAAS,GAEX,eAAgB,CACdptC,KAAM,gBACNotC,SAAS,GAEX,mBAAoB,CAAEptC,KAAM,WAAYotC,SAAS,GACjD,kBAAmB,CAAEptC,KAAM,UAAWotC,SAAS,GAC/C,mBAAoB,CAACptC,KAAM,QAASotC,SAAS,GAC7C,qBAAsB,CAACptC,KAAM,SAAUotC,SAAS,GAChD,mBAAoB,CAACptC,KAAM,MAAOotC,SAAS,GAC3C,iBAAkB,CAACptC,KAAM,iBAAkBotC,SAAS,GACpD,eAAgB,CAACptC,KAAM,OAAQotC,SAAS,GACxC,OAAQ,CAAEptC,KAAM,kBAAmBotC,SAAS,GAC5C,KAAM,CAAEptC,KAAM,QAASotC,SAAS,GAChC,QAAY,CAAEptC,KAAM,UAAWotC,SAAS,GACxC,mBAAoB,CAAEptC,KAAM,WAAYotC,SAAS,IAG7CuL,GAAgC,CACpC,OAGF,IAAIC,GAAe,IAAIrd,IAAI,IACvBsd,GAAiB,CAAC,SAAU,UAAW,SACvCC,GAAyB,OACzBC,GAAmB,eACnBC,GAAmB,QACnBC,GAAgBvM,EAAAA,MAAMC,MAG1B,IACE3sC,KAAM,MACN+nC,WAAY,CACVmR,qBAAoB,EACpBC,UAAS,KACTC,SAAQ,EACRC,aAAY,EACZC,SAAQ,EACRC,cAAaA,GAGflG,KAAAA,GACE,MAAMd,GAAkBf,EAAAA,EAAAA,KAAI,GAE5B,MAAO,CACLe,kBAEJ,EACAz9C,KAAMA,KACG,CACL65C,UAAW,WACX6K,UAAW,GACXC,cAAe,GACfC,iBAAkB,GAClB1M,cAAc,GACd2M,gBAAiB,IACjBC,QAAS,GACTC,cAAc,EACdhM,iBAAkB,UAClBE,kBAAmB,iBACnBJ,eAAgB,YAChBO,oBAAqB,aACrB4L,YAAa,GACbC,YAAa,GACb5H,gBAAiB,GACjB6H,cAAe,WACfxH,mBAAoB,OACpBvE,cAAe,GACfoE,QAAS,GACT4H,mBAAoB,GACpB7L,WAAW,EACX8L,eAAe,EACf1L,QAAS,+BACTp1C,cAAe,GACfi0C,eAAe,EACfF,gBAAiBuL,GACjBpL,kBAAoBle,GACXwpB,GAAauB,IAAI/qB,GAE1Bwb,OAA+C,SAAvC38B,aAAatP,QAAQ,eAC7BqsC,cAAwD,SAAzC/8B,aAAatP,QAAQ,iBACpCwsC,OAAQ0N,GACRhN,iBAAkB,CAAC,OAAQ,OAAQ,YACnCJ,eAAgBqN,GAChB7M,SAAU8M,GACVzM,QAAS,CACP,QACA,QACA,QACA,KACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SAEFO,eAAe,GACfuN,mBAAmB,GACnBrN,eAAe,CACb,+BACA,qBACA,kCACA,+BACA,uCACA,uBACA,mCACA,kCACA,0BACA,mBACA,qBACA,uBACA,sBAGFlqB,SAAUm2B,GACVxM,MAAOyM,GACPvM,MAAOA,EAAAA,MACPtlC,SAAU0xC,GACV9G,iBAAkB+G,GAClBhO,aAAesP,IACbpsC,aAAaW,QAAQ,cAAe,GAAGyrC,KACvC1/B,SAAS2/B,QAAQ,EAEnBrP,oBAAsBoP,IACpBpsC,aAAaW,QAAQ,gBAAiB,GAAGyrC,IAAY,EAEvD9M,mBAAqBne,IACfwpB,GAAauB,IAAI/qB,GACnBwpB,GAAah0C,OAAOwqB,GAEpBwpB,GAAa2B,IAAInrB,EACnB,EAEForB,uBAAwB,KAG5BC,SAAU,CACR3S,iBAAkB,WAChB,OAAOt3C,KAAKy9C,aACd,GAEF1gC,QAAS,CACP8sC,SAAAA,CAAUjrB,GACR,OAAO5+B,KAAKkqD,eAAeP,IAAI/qB,EACjC,EAEAurB,UAAAA,CAAWC,GACT,GAAIA,EAAU/iD,OAAS,EAAG,CACxB,MAAMgjD,EAAgBnrD,OAAO6U,OAAO,CAAC,EAAG/T,KAAK28C,iBAC7C,IAAK,MAAM/d,KAAWwrB,EAChBC,EAAczrB,KAChByrB,EAAczrB,GAASge,SAAWyN,EAAczrB,GAASge,SAG7D58C,KAAK28C,gBAAkB0N,CACzB,CAEArqD,KAAK68C,eAAgB,CACvB,EAEA,oBAAMwB,CAAeiM,GACnB,MAAMC,EAAUD,EAAI1H,MAAQ0H,EAAI1H,MAAMpzC,KAAO86C,EAAI96C,KACjDxP,KAAKwpD,cAAgBe,EACrBh8B,QAAQzrB,IAAI,UAAWynD,GAElB3gC,OAAO6U,UACVlQ,QAAQhf,MAAM,aAIdvP,KAAK+hD,gBADQ,oBAAXwI,EAMJ3gC,OAAO6U,SAAS6L,gBAAgBtqC,KAAKwpD,cACvC,EAEA,oBAAMtM,GACJ,IAAIsN,EASFA,EARGxqD,KAAKo6C,OAQGqQ,EAAAA,sBAAsB/iB,KAAK,CACpC5T,aAAc,CACZC,KAAM,kEACNvkB,KAAM,6BAERk7C,qBAAsB,CACpBzP,eAAgBqN,GAChB3N,OAAQ,OAEVtoB,SAAUm2B,GACVmC,cAAe,CACb3O,MAAOyM,MAlBA7hB,EAAAA,qBAAqBc,KAAK,CACnC5T,aAAc,CACZtkB,KAAM,mBACNukB,KAAM,sDAoBZy2B,EAASnoD,MAAMo8B,IAmBb,GAlBA7U,OAAO6U,SAAWA,EAClB7U,OAAO6hB,YAAc,IAAIjH,EAAAA,eAAe5a,OAAO6U,UAC/C7U,OAAO6hB,YAAYnG,gBAAgBslB,IAC7Br8B,QAAQzrB,IAAI,gCAAiC+Q,KAAKC,UAAU82C,GAAY,IACtEziD,IACFomB,QAAQzrB,IAAI,sCAAuCqF,EAAI,IAIzDyhB,OAAO6U,oBAAoBgsB,EAAAA,uBAC7B7gC,OAAO6U,SAASosB,oBAAoBvnD,IAClCirB,QAAQzrB,IAAI,wBAAwB+Q,KAAKC,UAAUxQ,KAAS,IAIhEirB,QAAQzrB,IAAI,iBAAkB27B,GAC9BlQ,QAAQzrB,IAAI,yBAA0B+Q,KAAKC,UAAU2qB,EAASxoB,UAE1DwoB,EAASxoB,SAASI,WAAY,CAChC,MAAM+zC,EAAY,GAClB77B,QAAQzrB,IAAI,aAAc27B,EAASxoB,QAAQI,YAC3CnX,OAAO4rD,QAAQrsB,EAASxoB,QAAQI,YAAYhC,SAAQ,EAAE1C,EAAKtS,MAC7C,WAARsS,EACFtS,EAAM4d,OAAO5I,SAAS+I,IACpBgtC,EAAUl3C,KAAKomB,SAASlc,EAAMoX,UAAU,IAAI,IAI9Cn1B,EAAM4d,OAAO5I,SAAS+I,IACpBgtC,EAAUl3C,KAAKkK,EAAM,GAEzB,IAGFmR,QAAQzrB,IAAI,mBAAoBsnD,GAChCpqD,KAAKmqD,WAAWC,EAClB,MACEpqD,KAAKmqD,WAAW,IAGlB1rB,EAAS13B,GAAG,eAAgBgkD,KACrB3zC,EAAAA,EAAAA,iBACCpX,KAAKgrD,UACHD,GAAQ/qD,KAAKo6C,QAAWp6C,KAAKw6C,gBAC/Bx6C,KAAKg+C,QAAU+M,EACf/qD,KAAK49C,WAAY,IAIvBrvB,QAAQzrB,IAAI,yBAA0BioD,EAAI,IAG5CtsB,EAAS13B,GAAG,wBAAyBkkD,IACnC18B,QAAQzrB,IAAI,kCAAmC+Q,KAAKC,UAAUm3C,IAC9DjrD,KAAK+lD,cAAckF,EAAM,IAG3BxsB,EAAS13B,GAAG,qBAAsBgkD,KAC5B3zC,EAAAA,EAAAA,iBACEpX,KAAKgrD,UACHD,GAAQ/qD,KAAKo6C,QAAWp6C,KAAKw6C,gBAC/Bx6C,KAAKg+C,QAAU+M,EACf/qD,KAAK49C,WAAY,IAIvBrvB,QAAQzrB,IAAI,+BAAgCioD,EAAI,IAIlDtsB,EAAS13B,GAAG,sBAAsB,MAC5BqQ,EAAAA,EAAAA,iBACF2rC,MAAM,sBAERx0B,QAAQzrB,IAAI,gCAAgC,IAG9C27B,EAAS13B,GAAG,WAAYkP,IACtBsY,QAAQzrB,IAAI,2BAA4BmT,EAAQ,IAElDwoB,EAAS13B,GAAG,aAAckP,IACxBsY,QAAQzrB,IAAI,6BAA8BmT,GAC1CjW,KAAKy9C,cAAgB,WAAW,IAElChf,EAAS13B,GAAG,cAAc,EAAGuG,YAC3BihB,QAAQzrB,IAAI,wBAAwBwK,KACpCtN,KAAKy9C,cAAgB,kBAAkB,IAEzChf,EAAS13B,GAAG,kBAAkB,EAAGuG,YAC/BihB,QAAQzrB,IAAI,4BAA4BwK,IAAQ,IAElDmxB,EAAS13B,GAAG,kBAAmBkP,IAC7BsY,QAAQzrB,IAAI,2BAA4B+Q,KAAKC,UAAUmC,GAAS,GAChE,GAEN,EAEA,uBAAMmnC,GACJ7uB,QAAQzrB,IAAI,wCAAwC2B,KAAKC,SACrDklB,OAAO6U,SACTz+B,KAAKkrD,aAEL38B,QAAQzrB,IAAI,6CAEhB,EAEA,yBAAMw6C,GAEJ,GADA/uB,QAAQzrB,IAAI,wCAAwC2B,KAAKC,SACrDklB,OAAO6U,UACT,GAAI7U,OAAO6U,oBAAoBmI,EAAAA,qBAC7B,GAAIhd,OAAO6U,SAASoG,YAClB,IACE,IAAIt7B,QAAgBqgB,OAAO6U,SAAS0L,mBAElCnqC,KAAK6hD,QADe,iBAAXt4C,EACMA,EAEAsK,KAAKC,UAAUvK,EAElC,CAAC,MAAOrH,GACNlC,KAAK6hD,QAAUhuC,KAAKC,UAAU5R,EAChC,MAEAlC,KAAK6hD,QAAU,qBAKnBtzB,QAAQzrB,IAAI,0CAEhB,EAEA,sBAAM06C,GACJ,IACEjvB,QAAQzrB,IAAI,qCAEZ,IAAI27B,EAAW7U,OAAO6U,eAChBA,EAAS/1B,aACf1I,KAAKy9C,cAAgB,cACvB,CAAE,MAAOluC,GACPgf,QAAQzrB,IAAI,0BAA2ByM,EAAMhG,SAC7CvJ,KAAK4I,cAAgB2G,EAAMhG,OAC7B,CACF,EAEA,yBAAMg1C,GACJ,IAAIj6C,EAAO,CAAEyL,OAAQ,uBACrB/P,KAAK2hD,gBAAkB9tC,KAAKC,UAAUxP,EACxC,EACA,iBAAMk6C,GACJ,IAAIl6C,EAAO,CAAEyL,OAAQ,eACrB/P,KAAK2hD,gBAAkB9tC,KAAKC,UAAUxP,EACxC,EACA,gCAAMm6C,GACJ,IAAIn6C,EAAO,CAAEyL,OAAQ,8BACrB/P,KAAK2hD,gBAAkB9tC,KAAKC,UAAUxP,EACxC,EAEA,6BAAMo6C,GACJ,IAAIp6C,EAAO,CACTyL,OAAQ,0BACR1G,OAAQ,CACN8hD,kBAAmB,CAAC,4BACpBvsB,QAAS,OACTwsB,UAAW,OACXC,eAAgB,CAAE77C,KAAM,OAAQ87C,OAAQ,OAAQC,SAAU,IAC1DnV,QAAS,CAAC,yBAIdp2C,KAAK2hD,gBAAkB9tC,KAAKC,UAAUxP,EACxC,EACA,mBAAMq6C,GACJ,GAA2B,aAAvB3+C,KAAKwpD,cAA8B,CASrC,IAAI5sC,QAAiBgN,OAAO6U,SAAS/qB,QACnC,CAAE3D,OAAQ,uBACV,YAEEyM,EAAUI,EAAS,GACvB2R,QAAQzrB,IAAI,UAAW0Z,EAAS3I,KAAKC,UAAU8I,IAE/C,IAAI4uC,EAAU,CACZz7C,OAAQ,gBACR1G,OAAQ,CACN,qFACAmT,IAIJxc,KAAK2hD,gBAAkB9tC,KAAKC,UAAU03C,EACxC,MAAO,GACkB,eAAvBxrD,KAAKwpD,eACkB,eAAvBxpD,KAAKwpD,cACL,CAUA,IAAIiC,EAAc,CAChB17C,OAAQ,gBACR1G,OAAQ,CACNE,QACE,uFAGNvJ,KAAK2hD,gBAAkB9tC,KAAKC,UAAU23C,EACxC,MAAO,GAA2B,cAAvBzrD,KAAKwpD,cAA+B,CAC7C,IAAIllD,EAAO,CACTyL,OAAQ,gBACR1G,OAAQ,CACNE,QACE,uFAINvJ,KAAK2hD,gBAAkB9tC,KAAKC,UAAUxP,EACxC,CACF,EAEA,8BAAMs8C,GACJ,IAAIt8C,EAAO,CACTyL,OAAQ,sBACR6uB,QAAS,aACTv1B,OAAQ,CACNhK,MAAO,kBACP4iC,IAAK,UACLzC,GAAI,6CACJtc,KAAM,6CACN5e,KAAM,+sBAGVtE,KAAK2hD,gBAAkB9tC,KAAKC,UAAUxP,EACxC,EAEA,0BAAMs6C,GAiBJ,IAAIhiC,QAAiBgN,OAAO6U,SAAS/qB,QACnC,CAAE3D,OAAQ,uBACV/P,KAAKwpD,eAEHhtC,EAAUI,EAAS,GACvB2R,QAAQzrB,IAAI,UAAW0Z,EAAS3I,KAAKC,UAAU8I,IAE/C,IAAItY,EAAO,CACTyL,OAAQ,uBACR1G,OAAQ,CACNmT,EACA,CACEkvC,MAAO,CACLC,aAAc,CACZ,CACEn8C,KAAM,OACN8Y,KAAM,UAER,CACE9Y,KAAM,UACN8Y,KAAM,UAER,CACE9Y,KAAM,UACN8Y,KAAM,WAER,CACE9Y,KAAM,oBACN8Y,KAAM,YAGVsjC,OAAQ,CACN,CACEp8C,KAAM,OACN8Y,KAAM,UAER,CACE9Y,KAAM,SACN8Y,KAAM,YAGVujC,KAAM,CACJ,CACEr8C,KAAM,OACN8Y,KAAM,UAER,CACE9Y,KAAM,KACN8Y,KAAM,UAER,CACE9Y,KAAM,WACN8Y,KAAM,YAIZwjC,YAAa,OACbC,OAAQ,CACNv8C,KAAM,aACN6e,QAAS,IACTuQ,QAAS,EACTotB,kBAAmB,8CAErBziD,QAAS,CACP2Z,KAAM,CACJ1T,KAAM,MACNiI,OAAQ,8CAEV+nB,GAAI,CACFhwB,KAAM,MACNiI,OAAQ,8CAEVw0C,SAAU,kBAMlBjsD,KAAK2hD,gBAAkB9tC,KAAKC,UAAUxP,EACxC,EACA,kCAAMu6C,GACJ,IAAIv6C,EAAO,CAAC,EACe,aAAvBtE,KAAKwpD,cACPllD,EAAO,CACLyL,OAAQ,sBACR1G,OAAQ,CACN6Z,KAAM,6CACN0b,QAAS,MACTY,GAAI,6CACJngC,MAAO,iBACP6sD,qBAAsB,aACtBjqB,IAAK,SACLkqB,aAAc,gBAGc,eAAvBnsD,KAAKwpD,cACdllD,EAAO,CACLyL,OAAQ,sBACR1G,OAAQ,CACN+iD,SAAU,eACVxnC,MAAO,SACPtgB,KAAM,KACNjF,MAAO,OACPmgC,GAAI,6CACJ6sB,SAAU,SACVnpC,KAAM,+CAGsB,cAAvBljB,KAAKwpD,cACdllD,EAAO,CACLyL,OAAQ,sBACR1G,OAAQ,CACN44B,IAAK,SACL5iC,MAAO,iBACP6jB,KAAM,6CACNkpC,SAAU,aACV5sB,GAAI,6CACJZ,QAAS,SAGiB,eAAvB5+B,KAAKwpD,gBACXllD,EAAS,CACRyL,OAAQ,sBACR1G,OAAQ,CACN6Z,KAAM,6CACNsc,GAAI,6CACJngC,MAAO,MACPu/B,QAAS,UAKf,IAAIhiB,QAAiBgN,OAAO6U,SAAS/qB,QACnC,CAAE3D,OAAQ,uBACV/P,KAAKwpD,eAEHhtC,EAAUI,EAAS,GACvB2R,QAAQzrB,IAAI,eAAgB0Z,GAC5BlY,EAAK+E,OAAO,MAAQmT,EACpBlY,EAAK+E,OAAO,QAAUmT,EACtBxc,KAAK2hD,gBAAkB9tC,KAAKC,UAAUxP,EACxC,EAEA,iCAAMw6C,GACJ,IAAIx6C,EAAO,CAAC,EAEe,aAAvBtE,KAAKwpD,cACPllD,EAAO,CACLyL,OAAQ,sBACR1G,OAAQ,CACN6Z,KAAM,6CACN5e,KAAM,6IACNk7B,GAAI,+CAGwB,eAAvBx/B,KAAKwpD,cACdllD,EAAO,CACLyL,OAAQ,sBACR1G,OAAQ,CACN6Z,KAAM,6CACN5e,KAAM,6IACNk7B,GAAI,+CAGwB,cAAvBx/B,KAAKwpD,cACdllD,EAAO,CACLyL,OAAQ,sBACR1G,OAAQ,CACN6Z,KAAM,6CACN7jB,MAAO,MACP4iC,IAAK,SACLmqB,SAAU,aACV9nD,KAAM,6IACNk7B,GAAI,+CAGuB,eAAvBx/B,KAAKwpD,gBACbllD,EAAO,CACLyL,OAAQ,sBACR1G,OAAQ,CACN6Z,KAAM,6CACN5e,KAAM,6IACNk7B,GAAI,gDAKV,IAAI5iB,QAAiBgN,OAAO6U,SAAS/qB,QACnC,CAAE3D,OAAQ,uBACV/P,KAAKwpD,eAEHhtC,EAAUI,EAAS,GACvB2R,QAAQzrB,IAAI,eAAgB0Z,GAC5BlY,EAAK+E,OAAO,QAAUmT,EACtBxc,KAAK2hD,gBAAkB9tC,KAAKC,UAAUxP,EACxC,EAEA,8BAAMy6C,GACJ,IAAIz6C,EAAO,CAAC,EACe,aAAvBtE,KAAKwpD,cACPllD,EAAO,CACLyL,OAAQ,sBACR1G,OAAQ,CACN44B,IAAK,UACL39B,KAAM,60GACNk7B,GAAI,6CACJngC,MAAO,MACP6jB,KAAM,+CAGsB,eAAvBljB,KAAKwpD,gBACdllD,EAAO,CACLyL,OAAQ,sBACR1G,OAAQ,CACN44B,IAAK,UACL39B,KAAM,60GACNk7B,GAAI,6CACJngC,MAAO,MACP6jB,KAAM,gDAKZ,IAAIhJ,EAAMrG,KAAKC,UAAUxP,GACzBiqB,QAAQzrB,IAAI,iBAAeoX,EAAI7S,QAC/B,IAAIuV,QAAiBgN,OAAO6U,SAAS/qB,QACnC,CAAE3D,OAAQ,uBACR/P,KAAKwpD,eAELhtC,EAAUI,EAAS,GACvB2R,QAAQzrB,IAAI,eAAgB0Z,GAC5BlY,EAAK+E,OAAO,QAAUmT,EACtBxc,KAAK2hD,gBAAkB9tC,KAAKC,UAAUxP,EACxC,EAEA,oBAAMq8C,GACJ,IAAIliB,EAAW7U,OAAO6U,SACtBA,EAAS6L,gBACP,YACA,yEAEF,IAAIhmC,EAAO,CACTyL,OAAQ,iBACR1G,OAAQ,CAAC,6CAA8C,WAEzDrJ,KAAK2hD,gBAAkB9tC,KAAKC,UAAUxP,EACxC,EACA,uBAAM06C,GACJ,IAAI16C,EAAO,CAAC,EACe,aAAvBtE,KAAKwpD,cACPllD,EAAO,CACLyL,OAAQ,oBACR1G,OAAQ,CACNif,KAAM,QACN2D,QAAS,CACPzP,QAAS,6CACT8uC,OAAQ,UACRgB,MACE,0FACFf,SAAU,KAIgB,eAAvBvrD,KAAKwpD,cACdllD,EAAO,CACLyL,OAAQ,oBACR1G,OAAQ,CACNif,KAAM,QACN2D,QAAS,CACPzP,QAAS,6CACT8uC,OAAQ,OACRgB,MAAO,yDACPf,SAAU,KAIgB,cAAvBvrD,KAAKwpD,gBACdllD,EAAO,CACLyL,OAAQ,oBACR1G,OAAQ,CACNif,KAAM,QACN2D,QAAS,CACPzP,QAAS,6CACT8uC,OAAQ,MACRgB,MAAO,gDACPf,SAAU,OAMlBvrD,KAAK2hD,gBAAkB9tC,KAAKC,UAAUxP,EACxC,EAEA,yBAAM46C,GACJ,IAAI56C,EAAQ,CACV,SAAW,CAAC,CAAC,QAAU,mDAAmD,OAAS,YAAY,QAAU,6MACzG,WAAa,WACb,QAAU,QACZtE,KAAK2hD,gBAAkB9tC,KAAKC,UAAUxP,EACxC,EACA26C,cAAAA,GACEj/C,KAAK2hD,gBAAkB,0BACvB,IAAIzgD,EAAW0oB,OAAO6hB,YAAY1M,UAEhC/+B,KAAK6hD,QADH3gD,EACa2S,KAAKC,UAAU5S,GAEf,MAEnB,EAEA,qBAAMqrD,GACJh+B,QAAQzrB,IAAI,kCAAkC8mB,OAAO6hB,YAAY5G,aACjEtW,QAAQzrB,IAAI,gCAAgC+Q,KAAKC,UAAU8V,OAAO6hB,YAAY1M,YAC9ExQ,QAAQzrB,IAAI,+BAA+B+Q,KAAKC,UAAU8V,OAAO6hB,YAAYh0B,UAC/E,EAEA,0BAAM+0C,GAEJ,MAAMr4C,QAAiBs4C,MAAM,4GACvBnoD,QAAa6P,EAAS+f,OAC5B3F,QAAQzrB,IAAI,WAAW+Q,KAAKC,UAAUxP,UAChCtE,KAAK2+C,gBACP+N,QAAQ,kCACV1sD,KAAK4jC,iBAIT,EAEA,qBAAMA,GACJ,KAAI5jC,KAAKwpD,cAAcl5C,WAAW,UAC3BtQ,KAAKwpD,cAAcl5C,WAAW,aAC9BtQ,KAAKwpD,cAAcl5C,WAAW,WAC9BtQ,KAAKwpD,cAAcl5C,WAAW,UAC9BtQ,KAAKwpD,cAAcl5C,WAAW,WASrC,GANAie,QAAQzrB,IAAI,kBAAmB8mB,OAAO6U,UACtClQ,QAAQzrB,IAAI,4BAA6B9C,KAAK2hD,iBACzC/3B,OAAO6U,UACVlQ,QAAQhf,MAAM,aAGZvP,KAAK2hD,iBAAmB/3B,OAAO6U,SAAU,CAE3C,MAAMkuB,EAAW94C,KAAKygB,MAAMt0B,KAAK2hD,iBACjC,IACEpzB,QAAQzrB,IAAI,iCAAkC6pD,EAAS58C,QAEvD,IAAI6uB,EAAU,WASd,GARI5+B,KAAKwpD,gBACP5qB,EAAU5+B,KAAKwpD,cACfj7B,QAAQzrB,IACN,2CACA9C,KAAKwpD,gBAGTj7B,QAAQzrB,IAAI,wBAAyB2B,KAAKC,OAC3B,eAAXk6B,EAA0B,CAC5B,MAAMguB,EAAU,IAAIC,EAAAA,EAAWjjC,OAAO6U,UACtC,IAAIquB,EAAY,iBAChB,GAA6B,kBAAzB9sD,KAAKqlD,iBAAsC,CAC7C,IAAInkD,EAAS0rD,EAAQ5tB,aAEnBh/B,KAAK6hD,QADc,iBAAV3gD,EACMA,EAEA2S,KAAKC,UAAU5S,EAElC,CACA,GAA6B,uBAAzBlB,KAAKqlD,iBACPyH,QAAkBF,EAAQ9mB,gBACxB9lC,KAAKolD,uBAEPplD,KAAK6hD,QAAUhuC,KAAKC,UAAUg5C,QACzB,GAA6B,iCAAzB9sD,KAAKqlD,iBACdyH,QAAkBF,EAAQG,0BACxB/sD,KAAKolD,uBAEPplD,KAAK6hD,QAAUhuC,KAAKC,UAAUg5C,QACzB,GAA6B,mBAAzB9sD,KAAKqlD,iBACd92B,QAAQzrB,IAAI,kBAAmB9C,KAAKolD,uBACpC0H,QAAkBF,EAAQ3tB,YAAYj/B,KAAKolD,uBAC3CplD,KAAK6hD,QAAUhuC,KAAKC,UAAUg5C,GAE9B9sD,KAAKgtD,oBAAoBF,GAAWzqD,MAAK88B,IACvCn/B,KAAK6hD,QAAU,qBAAqB1iB,EAAIj+B,WAAWi+B,EAAI95B,UAAUrF,KAAK6hD,SAAQ,SAE3E,GAA6B,2BAAzB7hD,KAAKqlD,iBACd92B,QAAQzrB,IACN,0BACA9C,KAAKolD,uBAEP0H,QAAkBF,EAAQK,oBACxBjtD,KAAKolD,uBAEPplD,KAAK6hD,QAAUhuC,KAAKC,UAAUg5C,GAE9B9sD,KAAKgtD,oBAAoBF,GAAWzqD,MAAK88B,IACvCn/B,KAAK6hD,QAAU,qBAAqB1iB,EAAIj+B,WAAWi+B,EAAI95B,UAAUrF,KAAK6hD,SAAQ,SAE3E,GAA6B,eAAzB7hD,KAAKqlD,iBAAmC,CACjD92B,QAAQzrB,IAAI,eAAgB9C,KAAKolD,uBACjC72B,QAAQzrB,IACN,yBAAsB+Q,KAAKC,UAAU64C,MAEvC,MAAM16B,QAAYrI,OAAO6U,SAAS/qB,QAAQi5C,EAAU/tB,GACpDrQ,QAAQzrB,IAAI,yBAAsB+Q,KAAKC,UAAU5S,MAE/ClB,KAAK6hD,QADW,iBAAP5vB,EACMA,EAEApe,KAAKC,UAAUme,EAElC,CAEA,YADA1D,QAAQzrB,IAAI,wBAAyB2B,KAAKC,MAE5C,CAAM,GAAe,aAAZk6B,EAAuB,CAC9BrQ,QAAQzrB,IACJ,wCAAqC+Q,KAAKC,UAAU64C,MAExD,IAAIzrD,QAAgB0oB,OAAO6hB,YAAY7H,gBAAgB+oB,GASvD,OARAp+B,QAAQzrB,IACJ,qCAAkC+Q,KAAKC,UAAU5S,WAGnDlB,KAAK6hD,QADc,iBAAV3gD,EACMA,EAEA2S,KAAKC,UAAU5S,GAGlC,CAEA,GAAe,eAAX09B,EAA0B,CAC5B,MAAMsuB,EAAa,IAAI3uB,EAAAA,eAAe3U,OAAO6U,UAC7C,IAAI0uB,EAAY,iBAiChB,YA/B6B,mBAAzBntD,KAAKotD,kBACPD,QAAkBD,EAAWjuB,YAAYL,EAAS5+B,KAAKqtD,sBAAsB,YAC7ErtD,KAAK6hD,QAAUhuC,KAAKC,UAAUq5C,IACI,YAAzBntD,KAAKotD,kBACdD,QAAkBD,EAAWhnD,KAAK04B,EAAS5+B,KAAKqtD,uBAChDrtD,KAAK6hD,QAAUhuC,KAAKC,UAAUq5C,IACI,gBAAzBntD,KAAKotD,kBACdD,QAAkBD,EAAWttB,SAAShB,EAAS5+B,KAAKqtD,sBAAsBxtB,QAAS7/B,KAAKqtD,sBAAsBphC,SAE9GjsB,KAAKstD,YAAYH,GAAW9qD,MAAKkrD,IAC/BvtD,KAAK6hD,QAAUhuC,KAAKC,UAAUy5C,EAAQ,IACrC39C,OAAML,IACPvP,KAAK6hD,QAAUtyC,CAAI,KAEa,iBAAzBvP,KAAKotD,kBACdD,QAAkBD,EAAWptB,UAAUlB,EAAS5+B,KAAKqtD,sBAAsBrtB,SAAUhgC,KAAKqtD,sBAAsBphC,SAChHjsB,KAAK6hD,QAAUhuC,KAAKC,UAAUq5C,IACI,uBAAzBntD,KAAKotD,kBACdD,QAAkBD,EAAWhtB,gBAAgBtB,EAAS5+B,KAAKqtD,sBAAsB7wC,QAASxc,KAAKqtD,sBAAsBltB,cAAengC,KAAKqtD,sBAAsBphC,SAC/JjsB,KAAK6hD,QAAUhuC,KAAKC,UAAUq5C,IACI,uBAAzBntD,KAAKotD,kBACdD,QAAkBD,EAAWjtB,gBAAgBrB,EAAS5+B,KAAKqtD,sBAAsBxtB,QAAS7/B,KAAKqtD,sBAAsBphC,SACrHjsB,KAAK6hD,QAAUhuC,KAAKC,UAAUq5C,IACG,mBAAzBntD,KAAKotD,kBACbD,QAAkBD,EAAW7tB,YAAYT,EAAS5+B,KAAKqtD,sBAAsB/tB,UAAWt/B,KAAKqtD,sBAAsB9tB,SAAUv/B,KAAKqtD,sBAAsBphC,SACxJjsB,KAAK6hD,QAAUhuC,KAAKC,UAAUq5C,IACG,kBAAzBntD,KAAKotD,mBACbD,EAAYD,EAAWluB,WAAWJ,GAClC5+B,KAAK6hD,QAAUhuC,KAAKC,UAAUq5C,IAIlC,CAEA,GAAe,mBAAXvuB,EAA8B,CAChC,MAAMsuB,EAAa,IAAI3uB,EAAAA,eAAe3U,OAAO6U,UAC7C,IAAI+uB,EAAgB,iBAiCpB,YA/BiC,uBAA7BxtD,KAAKytD,sBACPD,QAAsBN,EAAWjuB,YAAYL,EAAS5+B,KAAK0tD,0BAA0B,YACrF1tD,KAAK6hD,QAAUhuC,KAAKC,UAAU05C,IACQ,gBAA7BxtD,KAAKytD,sBACdD,QAAsBN,EAAWhnD,KAAK04B,EAAS5+B,KAAK0tD,2BACpD1tD,KAAK6hD,QAAUhuC,KAAKC,UAAU05C,IACQ,oBAA7BxtD,KAAKytD,sBACdD,QAAsBN,EAAWttB,SAAShB,EAAS5+B,KAAK0tD,0BAA0B7tB,QAAS7/B,KAAK0tD,0BAA0BzhC,SAC1HjsB,KAAKstD,YAAYE,GAAenrD,MAAKkrD,IACnCvtD,KAAK6hD,QAAUhuC,KAAKC,UAAUy5C,EAAQ,IACrC39C,OAAML,IACPvP,KAAK6hD,QAAUtyC,CAAI,KAEiB,qBAA7BvP,KAAKytD,sBACdD,QAAsBN,EAAWptB,UAAUlB,EAAS5+B,KAAK0tD,0BAA0B1tB,SAAUhgC,KAAK0tD,0BAA0BzhC,SAC5HjsB,KAAK6hD,QAAUhuC,KAAKC,UAAU05C,IACQ,2BAA7BxtD,KAAKytD,sBACdD,QAAsBN,EAAWhtB,gBAAgBtB,EAAS5+B,KAAK0tD,0BAA0BlxC,QAASxc,KAAK0tD,0BAA0BvtB,cAAengC,KAAK0tD,0BAA0BzhC,SAC/KjsB,KAAK6hD,QAAUhuC,KAAKC,UAAU05C,IACQ,2BAA7BxtD,KAAKytD,sBACdD,QAAsBN,EAAWjtB,gBAAgBrB,EAAS5+B,KAAK0tD,0BAA0B7tB,QAAS7/B,KAAK0tD,0BAA0BzhC,SACjIjsB,KAAK6hD,QAAUhuC,KAAKC,UAAU05C,IACO,uBAA7BxtD,KAAKytD,sBACbD,QAAsBN,EAAW7tB,YAAYT,EAAS5+B,KAAK0tD,0BAA0BpuB,UAAWt/B,KAAK0tD,0BAA0BnuB,SAAUv/B,KAAK0tD,0BAA0BzhC,SAExKjsB,KAAK6hD,QAAUhuC,KAAKC,UAAU05C,IACO,sBAA7BxtD,KAAKytD,uBACbD,EAAgBN,EAAWluB,WAAWJ,GACtC5+B,KAAK6hD,QAAUhuC,KAAKC,UAAU05C,IAIlC,CAEAj/B,QAAQzrB,IAAI,qCAAkC+Q,KAAKC,UAAU64C,MAC7D,IAAIzrD,QAAe0oB,OAAO6U,SAAS/qB,QAAQi5C,EAAU/tB,GACrDrQ,QAAQzrB,IAAI,qCAAkC+Q,KAAKC,UAAU5S,MAE7DqtB,QAAQzrB,IAAI,wBAAyB2B,KAAKC,OAExC1E,KAAK6hD,QADc,iBAAV3gD,EACMA,EAEA2S,KAAKC,UAAU5S,GAEhCqtB,QAAQzrB,IAAI,0BAA2B9C,KAAK6hD,QAC9C,CAAE,MAAOtyC,GACPgf,QAAQhf,MAAM,qBAAsBA,EAAMhG,SAEtCgG,EAAMtK,OAASoD,EAAAA,wBAAwB4iB,mBACzCjrB,KAAK6hD,QAAUtyC,EAAMhG,QAErBvJ,KAAK6hD,QAAU,mBAAqBtyC,EAAMhG,OAE9C,CACF,MACEw5C,MAAM,gCAEV,EAEAuK,WAAAA,CAAYK,GAEV,IADA,IAAI/yC,EAAQ,GACHrJ,EAAI,EAAGA,EAAIo8C,EAAOtmD,OAAQkK,GAAK,EACtCqJ,EAAM1H,KAAKomB,SAASq0B,EAAOt1B,OAAO9mB,EAAG,GAAI,KAE3C,MAAMyxB,EAAS,IAAIpb,WAAWhN,GACxBgzC,EAAO,IAAIC,KAAK,CAAC7qB,IACvB,OAAO,IAAInhC,SAAQ,CAACD,EAASE,KAC3B,MAAMgsD,EAAS,IAAIC,WACnBD,EAAOE,OAAS,SAAU9rD,GACxB,IAAI+rD,EAAa/rD,EAAEs7B,OAAOt8B,OAAOyZ,MAAM,KAAK,GAC5C/Y,EAAQqsD,EACV,EACAH,EAAOjnD,QAAU,SAAU3E,GACzBJ,EAAOI,EACT,EACA4rD,EAAOI,cAAcN,EAAK,GAE9B,EACAzM,iBAAAA,GACE,IAAIgN,EAAW,CAAC,YAAc,EAAE,MAAQ,mEAAmE,SAAW,mEAAmE,UAAY,gBAAgB,SAAW,CAAC,IAAM,mBAAmB,OAAS,2BAA2B,KAAO,mBAAmB,KAAO,oDAAoD,SAAW,CAAC,CAAC,KAAO,kBAAkB,mBAAqB,CAAC,CAAC,UAAY,QAAQ,OAAS,CAAC,eAAe,mBAAqB,GAAG,sBAAwB,CAAC,CAAC,QAAU,YAAY,OAAS,oBAAoB,OAAS,CAAC,KAAO,CAAC,SAAU,EAAK,aAAc,EAAK,SAAU,EAAK,QAAU,YAAY,MAAQ,QAAQ,eAAiB,2BAA2B,OAAS,QAAQ,aAAe,SAAS,SAAW,QACvwBj6B,EAAOrgB,KAAKC,UAAUq6C,GAC1B,MAAM94C,GAAY,IAAIC,aAAcC,OAAO2e,GAC3C,IAAI2B,EAAS,GACbxgB,EAAUhB,SAAQsnB,IAChB9F,GAAUngB,OAAOC,aAAagmB,EAAK,IAGrC,IAAIyyB,EAAY34C,KAAKogB,GACrBtH,QAAQzrB,IAAI,aAAasrD,GACzBA,EAAWA,EAASn+C,QAAQ,MAAO,KACnCse,QAAQzrB,IAAI,aAAasrD,GACzBA,EAAWA,EAASn+C,QAAQ,MAAO,KACnCse,QAAQzrB,IAAI,aAAasrD,GACzBA,EAAWA,EAASn+C,QAAQ,MAAO,IACnCse,QAAQzrB,IAAI,aAAasrD,GAEzB,IAAIC,GAAWl4C,EAAAA,EAAAA,mBAAiBoX,EAAAA,EAAAA,sBAAqB6gC,IACrD7/B,QAAQzrB,IAAI,aAAaurD,GACzBruD,KAAKg+C,QAAUqQ,EACfruD,KAAK49C,WAAY,CACnB,EAGA,gBAAMsN,GAGJ,IAQIoD,EAAWC,EAAWC,EAAQC,EAAQC,EAAUC,EAAQC,EAAWC,EARnEC,EAAmB,GACnBC,EAAiB,GAEjBC,EAAe,CACjB,0CACA,0CACA,gBAE8EC,GAAc,EAE1FC,EAAY,CACd,eAGEC,EAAY,CACd,cACA,mBAGF,MAAMlyC,EAAS/d,OAAO4rD,QAAQ9qD,KAAK28C,iBAC9BzqB,QAAQ9U,GAAUA,EAAM,GAAGw/B,UAC3B9pB,KAAK1V,GAAUA,EAAM,KAC1BmR,QAAQzrB,IAAI,gBAAgBma,EAAOyL,YACnCzL,EAAO5I,SAAQ,SAAUuqB,GAGvB,OAFArQ,QAAQzrB,IAAI,gCAAgC87B,KAExCowB,EAAansC,SAAS+b,IACxBkwB,EAAiB57C,KAAK0rB,QACtB2vB,GAAY,IAGQ,iBAAX3vB,GAAuBA,EAAQtuB,WAAW,QACnDw+C,EAAiB57C,KAAK0rB,QACtB+vB,GAAS,IAGW,iBAAX/vB,IAAwBA,EAAQtuB,WAAW,UAAYsuB,EAAQtuB,WAAW,cACnFw+C,EAAiB57C,KAAK0rB,QACtB8vB,GAAW,IAGS,iBAAX9vB,GAAuBA,EAAQtuB,WAAW,QACnDw+C,EAAiB57C,KAAK0rB,QACtB2vB,GAAY,IAGQ,iBAAX3vB,GAAuBA,EAAQtuB,WAAW,WACnDw+C,EAAiB57C,KAAK0rB,QACtBgwB,GAAY,IAGQ,iBAAXhwB,GAAuBA,EAAQtuB,WAAW,SACnDw+C,EAAiB57C,KAAK0rB,QACtBiwB,GAAU,IAIU,iBAAXjwB,GAAuBA,EAAQtuB,WAAW,aACnDw+C,EAAiB57C,KAAK0rB,QACtBqwB,GAAc,IAIZC,EAAUrsC,SAAS+b,IACrBrQ,QAAQzrB,IAAI,+BAA+B87B,KAC3CkwB,EAAiB57C,KAAK0rB,QACtB4vB,GAAS,IAIPW,EAAUtsC,SAAS+b,IACrBrQ,QAAQzrB,IAAI,+BAA+B87B,KAC3CkwB,EAAiB57C,KAAK0rB,QACtB6vB,GAAS,KAIXH,GAAY,OACZQ,EAAiB57C,KAAK,UAAU0rB,KAClC,IAGAwpB,GAAa/zC,SAAQ,SAAUuqB,GAC7B,IAAIowB,EAAansC,SAAS+b,GAI1B,MAAsB,iBAAXA,GAAuBA,EAAQtuB,WAAW,QACnDw+C,EAAiB57C,KAAK0rB,QACtB2vB,GAAY,SAGVW,EAAUrsC,SAAS+b,IAKnBuwB,EAAUtsC,SAAS+b,GAJrBmwB,EAAe77C,KAAK0rB,GAStBmwB,EAAe77C,KAAK,UAAU0rB,MAlB5BmwB,EAAe77C,KAAK0rB,EAmBxB,IAEArQ,QAAQzrB,IAAI,yBAAyB+Q,KAAKC,UAAUg7C,MACpD,IA2JIM,EA3JAC,EAAc,CAAC,EACnB,GAAIP,GAAoBA,EAAiBznD,OAAS,EAAG,CACnD,IAAIioD,EAAc,CAAC,EAiEnB,GA/DIhB,IACFgB,EAAYjZ,OAAS,CACnBp5B,OAAQ6xC,EAAiB58B,QAAQxb,GAC/BA,EAAKpG,WAAW,YAElBi5B,aAAculB,EAAiB58B,QAAQxb,GACrCA,EAAKpG,WAAW,YAChB,KAGFi+C,IACFe,EAAYC,OAAS,CACnBtyC,OAAQ6xC,EAAiB58B,QACtBxb,GACCA,EAAKpG,WAAW,WAChBoG,EAAKpG,WAAW,UAChBoG,EAAKpG,WAAW,SAEpBi5B,aAAculB,EAAiB58B,QAC5Bxb,GACCA,EAAKpG,WAAW,WAChBoG,EAAKpG,WAAW,UAChBoG,EAAKpG,WAAW,SAClB,KAIFs+C,IACFU,EAAYE,OAAS,CACnBvyC,OAAQ6xC,EAAiB58B,QACpBxb,GACGA,EAAKpG,WAAW,YAExBi5B,aAAculB,EAAiB58B,QAC1Bxb,GACGA,EAAKpG,WAAW,YACtB,KAGFu+C,IACFS,EAAYG,KAAO,CACjBxyC,OAAQ6xC,EAAiB58B,QACpBxb,GACGA,EAAKpG,WAAW,UAExBi5B,aAAculB,EAAiB58B,QAC1Bxb,GACGA,EAAKpG,WAAW,UACtB,KAGF2+C,IACFK,EAAYI,SAAW,CACrBzyC,OAAQ6xC,EAAiB58B,QACpBxb,GACGA,EAAKpG,WAAW,cAExBi5B,aAAculB,EAAiB58B,QAC1Bxb,GACGA,EAAKpG,WAAW,cACtB,KAGFq+C,EAAQ,CAGV,IAAIgB,EAAY,CACdjzC,SAAS,CACPlN,KAAM,aAGNxP,KAAKw8C,gBACPmT,EAAY,CACVjzC,SAAS,CACPlN,KAAM,YAERmN,UAAU,CACRnN,KAAM,YACNpK,QAASpF,KAAKw8C,iBAMpB8S,EAAYM,IAAM,CAChB3yC,OAAQ6xC,EAAiB58B,QAAOxb,GAAQA,EAAKpG,WAAW,SACxDi5B,aAAculB,EAAiB58B,QAAOxb,GAAQA,EAAKpG,WAAW,SAAQ,GACtEjH,OAAOsmD,EAEX,CAoBA,GAlBInB,IACFc,EAAYO,IAAM,CAChB5yC,OAAQ6xC,EAAiB58B,QAAQxb,GAASA,EAAKpG,WAAW,SAC1Di5B,aAAculB,EAAiB58B,QAAQxb,GACrCA,EAAKpG,WAAW,SAChB,GACFyiC,OAAQ,CACN,cAAe,mDAIjB2b,IACFY,EAAYnmB,MAAQ,CAClBlsB,OAAQ6xC,EAAiB58B,QAAOxb,GAAQA,EAAKpG,WAAW,UAAYoG,EAAKpG,WAAW,cACpFi5B,aAAculB,EAAiB58B,QAAOxb,GAAQA,EAAKpG,WAAW,UAAYoG,EAAKpG,WAAW,cAAa,KAIvGm+C,EAAQ,CACV,IAAIU,EAAYL,EAAiB58B,QAAOxb,GAAQA,EAAKpG,WAAW,QAAUoG,EAAKpG,WAAW,aAC1Fg/C,EAAYQ,IAAM,CAChB7yC,OAAQkyC,EACR5lB,aAAc4lB,EAAU,GAE5B,CACA5gC,QAAQzrB,IAAI,qBAAqB+Q,KAAKC,UAAUw7C,MAChDD,EAAY,cAAgBC,EAC5B/gC,QAAQzrB,IAAI+Q,KAAKC,UAAUu7C,GAC7B,CAEA,GAAIN,GAAkBA,EAAe1nD,OAAS,EAAG,CAC/C,MAAM0oD,EAAU,CAAC,EAEXC,EAAejB,EAAe78B,QAAQxb,GAASA,EAAKpG,WAAW,YACjE0/C,EAAa3oD,OAAS,IACxB0oD,EAAQ,UAAY,CAClB9yC,OAAQ+yC,EACRzmB,aAAcymB,EAAa,KAI/B,MAAMhB,EAAeD,EAAe78B,QAAQxb,GAASA,EAAKpG,WAAW,YACjE0+C,EAAa3nD,OAAS,IACxB0oD,EAAQ,UAAY,CAClB9yC,OAAQ+xC,EACRzlB,aAAcylB,EAAa,KAI/BK,EAAY,sBAAwBU,CACtC,CAEA,GAAgC,IAA5BjB,EAAiBznD,QAA0C,IAA1B0nD,EAAe1nD,OAGlD,YADA07C,MAAM,gDAGRx0B,QAAQzrB,IAAI,sBACZyrB,QAAQzrB,IAAIusD,GAGZ,IAAIY,EAAcjwD,KAAKkwD,+BACnBtmC,OAAO6U,oBAAoBgsB,EAAAA,sBAE3B2E,EADEa,GAAeA,EAAY5oD,OAAO,EACpBuiB,OAAO6U,SAAS0xB,iBAAiBd,EAAYx7C,KAAKygB,MAAMzgB,KAAKC,UAAUm8C,KAEvErmC,OAAO6U,SAAS2xB,UAAUf,IAGxCrvD,KAAKw6C,cACP6U,EAAY56C,cAAgB,CAC1BuC,SAAQ,EACRpC,kBAAiB,EACjBqC,aAAa,QAGfo4C,EAAY56C,cAAgB,CAC1BmC,SAAU0xC,IAIZ8G,EADEa,GAAeA,EAAY5oD,OAAO,EACpBuiB,OAAO6U,SAASkL,eAAe0lB,EAAYx7C,KAAKygB,MAAMzgB,KAAKC,UAAUm8C,KAErErmC,OAAO6U,SAASl2B,QAAQ8mD,UAItCD,EACH/sD,MAAMnB,IAUL,GARAlB,KAAKy9C,cAAgB,YACjBz9C,KAAKgrD,SACPhrD,KAAK49C,WAAY,GAEf18C,IACFlB,KAAK6hD,QAAUhuC,KAAKC,UAAU5S,IAG5B0oB,OAAO6U,SAASxoB,SAAW2T,OAAO6U,SAASxoB,QAAQI,WAAW,CAChE,IAAIu5C,EAAMhmC,OAAO6U,SAASxoB,QAAQI,WAAW,OAC/CkY,QAAQzrB,IAAI,UAAU8sD,GAChBA,GACF5vD,KAAKusD,iBAET,KAED38C,OAAOL,IACY,KAAdA,EAAMtK,KACRkB,YAAW,KACT48C,MAAMxzC,EAAMhG,QAAQ,GACnB,IACMgG,EAAMhG,SACfw5C,MAAMxzC,EAAMhG,SAEdglB,QAAQhf,MAAM,SAAUA,EAAM,GAEpC,EAEA2gD,4BAAAA,GACE,IAAIG,EAAa,GAqMjB,OApMArwD,KAAKq8C,eAAehoC,SAAQtE,IAC1B,OAAQA,GACN,IAAK,+BACHsgD,EAAWn9C,KAAK,CACdnD,OAAQ,0BACR6uB,QAAQ,WACRv1B,OAAQ,CACN8hD,kBAAmB,CAAC,4BACpBvsB,QAAS,OACTwsB,UAAW,OACXC,eAAgB,CAAE77C,KAAM,OAAQ87C,OAAQ,OAAQC,SAAU,IAC1DnV,QAAS,CAAC,0BAGd,MACF,IAAK,qBACHia,EAAWn9C,KACT,CACEnD,OAAQ,gBACR6uB,QAAS,WACTv1B,OAAQ,CACN,wFAGN,MACF,IAAK,kCACHgnD,EAAWn9C,KACT,CACE,QAAW,0CACX,OAAU,qBACV,OAAU,CACR,QAAW,kBAIjB,MACF,IAAK,+BACL,IAAK,uCAAwC,CAC3C,IAAIo9C,EAAU,CACZ,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAClE,IAAK,IAAK,IAAK,KAEbh0B,EAAa,IAAI1U,WAAW0oC,GAC5BC,EAAgB,kBACpBvwD,KAAKolD,sBAAwB,CAC3B77C,QAAQ+yB,GAGPvsB,EAAOO,WAAW,6BACnBigD,EAAgB,2BAElBF,EAAWn9C,KACP,CACEnD,OAAQwgD,EACR3xB,QAAS,cACTv1B,OAAQ,CACNE,QAAS+yB,KAIjB,KACF,CACA,IAAK,uBACH+zB,EAAWn9C,KACT,CACEnD,OAAQ,kBACR6uB,QAAS,cACTv1B,OAAQ,CACNE,QAAS,oBAIf,MACF,IAAK,mCACH8mD,EAAWn9C,KACT,CACE,QAAW,gBACX,OAAU,oBACV,OAAU,CACRsJ,SAAS,EACT4zB,aAAa,EACbxR,SAAS,EACTr1B,QAAS,cACTqb,MAAO,UAIb,MACF,IAAK,kCACHyrC,EAAWn9C,KACP,CACE,QAAW,qBACX,OAAU,uBACV,OAAU,CACR3J,QAAS,iBAKjB,MACF,IAAK,0BACH8mD,EAAWn9C,KACP,CACE0rB,QAAS,WACT7uB,OAAQ,qBACR1G,OAAQ,CACNE,QAAS,gBAIjB,MACF,IAAK,qBACH8mD,EAAWn9C,KACP,CACEnD,OAAQ,uBAEd,MACF,IAAK,mBACHsgD,EAAWn9C,KACP,CACE0rB,QAAQ,eACR7uB,OAAQ,mBACR1G,OAAQ,CACNE,QAAS,gBAIjB,MACF,IAAK,qBACH8mD,EAAWn9C,KACP,CACE0rB,QAAQ,eACR7uB,OAAQ,qBACR1G,OAAQ,CACNE,QAAS,gBAIjB,MAGF,IAAK,uBAAwB,CAC3B,MAAM84B,EAAW,CACf,OAAU,CACR,QAAW,mBACX,KAAQ,WACR,QAAW,KAEb,QAAW,CACT,SAAY,0BACZ,QAAW,sBAEb,YAAe,MACf,MAAS,CACP,eAAkB,CAChB,CACE,KAAQ,OACR,KAAQ,QAEV,CACE,KAAQ,UACR,KAAQ,QAEV,CACE,KAAQ,UACR,KAAQ,SAGZ,IAAO,CACL,CACE,KAAQ,UACR,KAAQ,QAEV,CACE,KAAQ,WACR,KAAQ,WAKhBguB,EAAWn9C,KAAK,CACd0rB,QAAQ,mBACR7uB,OAAQ,uBACR1G,OAAQ,CACNmnD,eAAgB,GAChB7sB,UAAWtB,IAGjB,CACE,MACF,QAEE,MACJ,IAEFriC,KAAK4pD,mBAAqByG,EACnBA,CAET,EAEAxS,UAAAA,GACE79C,KAAK49C,WAAY,CACnB,EAEAoN,IAAAA,GACE,MAAMyF,EAAgBn+B,UAAUE,UAChCjE,QAAQzrB,IAAI,4BAA6B2tD,GAEzC,MAAMC,EAAS,CACb,UACA,SACA,YACA,gBACA,OACA,QAEF,IAAIC,GAAO,EACX,IAAK,IAAI5vD,EAAI,EAAGA,EAAI2vD,EAAOrpD,OAAQtG,IACjC,GAAI0vD,EAAcz4B,QAAQ04B,EAAO3vD,IAAM,EAAG,CACxC4vD,GAAO,EACP,KACF,CAEF,OAAOA,CACT,EACAC,gBAAAA,GACE,MAAMH,EAAgBn+B,UAAUE,UAC1Bk+B,EAAS,CAAC,SAAU,UAC1B,IAAIC,GAAO,EACX,IAAK,IAAI5vD,EAAI,EAAGA,EAAI2vD,EAAOrpD,OAAQtG,IACjC,GAAI0vD,EAAcz4B,QAAQ04B,EAAO3vD,IAAM,EAAG,CACxC4vD,GAAO,EACP,KACF,CAEF,OAAOA,CACT,EAGA,qBAAMxR,GAEJ,IAAI76C,EAAO,CACTyL,OAAQ,qBACR1G,OAAQ,CACNE,QAAS,eACTsnD,OAAQ,KAGZ7wD,KAAK2hD,gBAAkB9tC,KAAKC,UAAUxP,GACtC,IAAIm6B,EAAW,IAAIqyB,EAAAA,EAAkBlnC,OAAO6U,UAExCl1B,QAAgBk1B,EAASQ,YACzB,eACAj/B,KAAKwpD,eAETj7B,QAAQzrB,IAAI,6BAA6B+Q,KAAKC,UAAUvK,IACxD,MAAMwnD,EAAUC,IAAAA,KAAUh1C,SAASC,QAC/B,IAAI3G,aAAcC,OAAO,gBACzBhM,EAAQwR,UACR,IAAIk2C,EAAAA,UAAU1nD,EAAQsD,WAAWqkD,WAErC3iC,QAAQzrB,IAAIiuD,GAGV/wD,KAAK6hD,QAAUkP,CAInB,EAEA,uBAAM1Q,GAEJ,IAAI/7C,EAAO,CACTkY,SAAS,EACT4zB,aAAa,EACbxR,SAAS,EACTr1B,QAAS,cACTqb,MAAO,QAGL6Z,EAAW,IAAI0yB,EAAAA,EAAiBvnC,OAAO6U,UACvCl1B,QAAgBk1B,EAASQ,YAAY36B,EAAMtE,KAAKwpD,eACpDxpD,KAAK2hD,gBAAkB9tC,KAAKC,UAAUxP,GAEpCtE,KAAK6hD,QADe,iBAAXt4C,EACMA,EAEAsK,KAAKC,UAAUvK,EAElC,EAEA,2BAAM+2C,GACJ,IAAI7hB,EAAW,IAAI0yB,EAAAA,EAAiBvnC,OAAO6U,UAC3C,MAAM2yB,EAAS,IAAIC,EAAAA,IAAY,CAAE50C,QAAS60C,EAAAA,IAAQ/rB,UAC5C4D,EAAQ,IAAIooB,EAAAA,IAAMH,GAmBlBvtB,QAAoBsF,EAAMtF,YAAYqhB,MAAMsM,OAAO,CACvDC,OAAQhzB,EAASO,WAAWh/B,KAAKwpD,eAAehtC,QAChDlY,KAAM,CAEJotD,SAAU,0GAEVC,cAAe,CAAC,6BAA8B,6FAA8F,2FAA4F,4FACxOC,kBAAmB,CAAC,QAAS,CAAC,QAAS,CAAC,KAAM,CAAC,YAInD5xD,KAAK2hD,iBAAkB33C,EAAAA,EAAAA,mBAAkB65B,GAEzC,IAAIt6B,QAAgBk1B,EAASqH,gBAAgBjC,EAAa7jC,KAAKwpD,eAE7DxpD,KAAK6hD,QADe,iBAAXt4C,EACMA,EAEAsK,KAAKC,UAAUvK,EAElC,EAEA,0BAAMs3C,GACJ,IAAIpiB,EAAW,IAAI0yB,EAAAA,EAAiBvnC,OAAO6U,UAC3C,MAAM2yB,EAAS,IAAIC,EAAAA,IAAY,CAAE50C,QAAS60C,EAAAA,IAAQ/rB,UAC5C4D,EAAQ,IAAIooB,EAAAA,IAAMH,GAmBlBvtB,QAAoBsF,EAAMtF,YAAYqhB,MAAMsM,OAAO,CACvDC,OAAQhzB,EAASO,WAAWh/B,KAAKwpD,eAAehtC,QAChDlY,KAAM,CAEJotD,SAAU,oFAEVC,cAAe,CAAC,6BAA8B,mFAAoF,4FAClIC,kBAAmB,CAAC,QAAS,SAIjC5xD,KAAK2hD,iBAAkB33C,EAAAA,EAAAA,mBAAkB65B,GAEzC,IAAIt6B,QAAgBk1B,EAASqH,gBAAgBjC,EAAa7jC,KAAKwpD,eAE7DxpD,KAAK6hD,QADe,iBAAXt4C,EACMA,EAEAsK,KAAKC,UAAUvK,EAElC,EAEA,mCAAMu3C,GACJ,IAAIriB,EAAW,IAAI0yB,EAAAA,EAAiBvnC,OAAO6U,UAC3C,MAAM2yB,EAAS,IAAIC,EAAAA,IAAY,CAAE50C,QAAS60C,EAAAA,IAAQ/rB,UAC5C4D,EAAQ,IAAIooB,EAAAA,IAAMH,GAmBlBvtB,QAAoBsF,EAAMtF,YAAYqhB,MAAMsM,OAAO,CACvDC,OAAQhzB,EAASO,WAAWh/B,KAAKwpD,eAAehtC,QAChDlY,KAAM,CAEJotD,SAAU,oFAEVC,cAAe,CAAC,6BAA8B,mFAAoF,4FAClIC,kBAAmB,CAAC,QAAS,SAIjC5xD,KAAK2hD,iBAAkB33C,EAAAA,EAAAA,mBAAkB65B,GAEzC,IAAIt6B,QAAgBk1B,EAASozB,yBAAyBhuB,EAAa7jC,KAAKwpD,eAEtExpD,KAAK6hD,QADe,iBAAXt4C,EACMA,EAEAsK,KAAKC,UAAUvK,EAElC,EAEA,oCAAMg3C,GACJ,IAAI9hB,EAAW,IAAI0yB,EAAAA,EAAiBvnC,OAAO6U,UAC3C,MAAM2yB,EAAS,IAAIC,EAAAA,IAAY,CAAE50C,QAAS60C,EAAAA,IAAQ/rB,UAC5C4D,EAAQ,IAAIooB,EAAAA,IAAMH,GAClBvtB,QAAoBsF,EAAMtF,YAAYqhB,MAAMsM,OAAO,CACvDC,OAAQhzB,EAASO,WAAWh/B,KAAKwpD,eAAehtC,QAChDlY,KAAM,CAEJotD,SAAU,0GAEVC,cAAe,CAAC,6BAA8B,6FAA8F,2FAA4F,4FACxOC,kBAAmB,CAAC,QAAS,CAAC,QAAS,CAAC,KAAM,CAAC,YAUnD5xD,KAAK2hD,iBAAkB33C,EAAAA,EAAAA,mBAAkB65B,GAEzC,IAAIt6B,QAAgBk1B,EAASozB,yBAAyBhuB,EAAa7jC,KAAKwpD,eAEtExpD,KAAK6hD,QADe,iBAAXt4C,EACMA,EAEAsK,KAAKC,UAAUvK,EAElC,EAEA,kCAAM81C,GACJ,IAAI5gB,EAAW,IAAIqyB,EAAAA,EAAkBlnC,OAAO6U,UAExCoyB,EAAS,IAAII,EAAAA,UACfxyB,EAASO,WAAW,2CAA2CxiB,SAEjE,MAAMs6B,EAAa,IAAIgb,EAAAA,WAAW9xD,KAAK+xD,kBACjC,UAAEC,SAAoBlb,EAAWmb,qBACjCC,EAA8B,IAAIC,EAAAA,mBAAmB,CACzDC,SAAUvB,EACTwB,gBAAiBL,EAClBM,aAAc,CACZC,EAAAA,cAAcC,SAAS,CACrBC,WAAY,IAAIxB,EAAAA,UAAUxyB,EAASO,aAAaxiB,SAChDk2C,SAAU,IAAIzB,EAAAA,UAAUxyB,EAASO,aAAaxiB,SAC9Cm2C,SAAU,WAGbC,qBAEH,IAAI/uB,EAAc,IAAIgvB,EAAAA,qBAAqBX,GAC3ClyD,KAAK2hD,iBAAkB33C,EAAAA,EAAAA,mBAAkB65B,GAEzC,IAAI3iC,QAAeu9B,EAASqH,gBAC1BjC,EACA7jC,KAAKwpD,eAEPj7B,QAAQzrB,IAAI,6BAA8B+Q,KAAKC,UAAU5S,IAEvDlB,KAAK6hD,QADc,iBAAV3gD,EACMA,EAEA2S,KAAKC,UAAU5S,EAElC,EAEA,yCAAMu+C,GACJ,IAAIhhB,EAAW,IAAIqyB,EAAAA,EAAkBlnC,OAAO6U,UAExCoyB,EAAS,IAAII,EAAAA,UAAUxyB,EAASO,aAAaxiB,SACjD,MAAMs6B,EAAa,IAAIgb,EAAAA,WAAW9xD,KAAK+xD,kBACjC,UAAEC,SAAoBlb,EAAWmb,qBACjCC,EAA8B,IAAIC,EAAAA,mBAAmB,CACzDC,SAAUvB,EACVwB,gBAAiBL,EACjBM,aAAc,CACZC,EAAAA,cAAcC,SAAS,CACrBC,WAAY,IAAIxB,EAAAA,UAAUxyB,EAASO,aAAaxiB,SAChDk2C,SAAU,IAAIzB,EAAAA,UAAUxyB,EAASO,aAAaxiB,SAC9Cm2C,SAAU,WAGbC,qBAEH,IAAI/uB,EAAc,IAAIgvB,EAAAA,qBAAqBX,GAC3ClyD,KAAK2hD,iBAAkB33C,EAAAA,EAAAA,mBAAkB65B,GAEzC,IAAI3iC,QAAeu9B,EAASkI,uBAC1B9C,EACA7jC,KAAKwpD,eAEPj7B,QAAQzrB,IAAI,6BAA8B+Q,KAAKC,UAAU5S,IAEvDlB,KAAK6hD,QADc,iBAAV3gD,EACMA,EAEA2S,KAAKC,UAAU5S,EAElC,EAEA,sCAAMq+C,GACJ,IAAI9gB,EAAW,IAAIqyB,EAAAA,EAAkBlnC,OAAO6U,UAC5C,MAAMqY,EAAa,IAAIgb,EAAAA,WAAW9xD,KAAK+xD,kBACjC,UAAEC,SAAoBlb,EAAWmb,qBACvC,IAAIpB,EAAS,IAAII,EAAAA,UAAUxyB,EAASO,aAAaxiB,SACjD,MAAM01C,EAA8B,IAAIC,EAAAA,mBAAmB,CACzDC,SAAUvB,EACVwB,gBAAiBL,EACjBM,aAAc,CACZC,EAAAA,cAAcC,SAAS,CACrBC,WAAY,IAAIxB,EAAAA,UAAUxyB,EAASO,aAAaxiB,SAChDk2C,SAAU,IAAIzB,EAAAA,UAAUxyB,EAASO,aAAaxiB,SAC9Cm2C,SAAU,WAGbC,qBAEH,IAAI/uB,EAAc,IAAIgvB,EAAAA,qBAAqBX,GAC3ClyD,KAAK2hD,iBAAkB33C,EAAAA,EAAAA,mBAAkB65B,GAEzC,IAAI3iC,QAAeu9B,EAASq0B,oBAC1B,CAACjvB,GACD7jC,KAAKwpD,eAEPj7B,QAAQzrB,IAAI,6BAA8B+Q,KAAKC,UAAU5S,IAEvDlB,KAAK6hD,QADc,iBAAV3gD,EACMA,EAEA2S,KAAKC,UAAU5S,EAElC,EAEA,yBAAMk+C,GACJ,MAAMtI,EAAa,IAAIgb,EAAAA,WAAW9xD,KAAK+xD,kBACjC,UAAEC,SAAoBlb,EAAWmb,qBACvC,IAAIxzB,EAAW,IAAIqyB,EAAAA,EAAkBlnC,OAAO6U,UAC5C,MAAMoF,EAAc,IAAIkvB,EAAAA,YAAY,CAClCC,SAAU,IAAI/B,EAAAA,UAAUxyB,EAASO,aAAaxiB,SAC7C61C,gBAAiBL,IACjBjI,IACDwI,EAAAA,cAAcC,SAAS,CACrBC,WAAY,IAAIxB,EAAAA,UAAUxyB,EAASO,aAAaxiB,SAChDk2C,SAAU,IAAIzB,EAAAA,UAAUxyB,EAASO,aAAaxiB,SAC9Cm2C,SAAU,OAId3yD,KAAK2hD,iBAAkB33C,EAAAA,EAAAA,mBAAkB65B,GACzC,IAAI3iC,QAAeu9B,EAASqH,gBAC1BjC,EACA7jC,KAAKwpD,eAEPj7B,QAAQzrB,IAAI,6BAA8B+Q,KAAKC,UAAU5S,IAEvDlB,KAAK6hD,QADc,iBAAV3gD,EACMA,EAEA2S,KAAKC,UAAU5S,EAElC,EAEA,6BAAMo+C,GACJ,MAAMxI,EAAa,IAAIgb,EAAAA,WAAW9xD,KAAK+xD,kBACjC,UAAEC,SAAoBlb,EAAWmb,qBAEvC,IAAIxzB,EAAW,IAAIqyB,EAAAA,EAAkBlnC,OAAO6U,UAC5C,MAAMoF,EAAc,IAAIkvB,EAAAA,YAAY,CAClCC,SAAU,IAAI/B,EAAAA,UAAUxyB,EAASO,aAAaxiB,SAC9C61C,gBAAiBL,IAChBjI,IACDwI,EAAAA,cAAcC,SAAS,CACrBC,WAAY,IAAIxB,EAAAA,UAAUxyB,EAASO,aAAaxiB,SAChDk2C,SAAU,IAAIzB,EAAAA,UAAUxyB,EAASO,aAAaxiB,SAC9Cm2C,SAAU,SAGd3yD,KAAK2hD,iBAAkB33C,EAAAA,EAAAA,mBAAkB65B,GAEzC,IAAI3iC,QAAeu9B,EAASq0B,oBAC1B,CAACjvB,GACD7jC,KAAKwpD,eAGLxpD,KAAK6hD,QADc,iBAAV3gD,EACMA,EAEA2S,KAAKC,UAAU5S,EAElC,EAEA6wD,aAAAA,GACE,IAAIvd,EAAM,gDAQV,MAP2B,4CAAvBx0C,KAAKwpD,cACPhV,EAAM,iDAC0B,4CAAvBx0C,KAAKwpD,cACdhV,EAAM,uDAC0B,iBAAvBx0C,KAAKwpD,gBACdhV,EAAM,2DAEDA,CACT,EAEA,gCAAMgL,GAEJ,MAAM1I,EAAa,IAAIgb,EAAAA,WAAW9xD,KAAK+xD,kBACjC,UAAEC,SAAoBlb,EAAWmb,qBAEvC,IAAIxzB,EAAW,IAAIqyB,EAAAA,EAAkBlnC,OAAO6U,UAC5C,MAAMoF,EAAc,IAAIkvB,EAAAA,YAAY,CAClCC,SAAU,IAAI/B,EAAAA,UAAUxyB,EAASO,aAAaxiB,SAC9C61C,gBAAiBL,IAChBjI,IACDwI,EAAAA,cAAcC,SAAS,CACrBC,WAAY,IAAIxB,EAAAA,UAAUxyB,EAASO,aAAaxiB,SAChDk2C,SAAU,IAAIzB,EAAAA,UAAUxyB,EAASO,aAAaxiB,SAC9Cm2C,SAAU,SAGd3yD,KAAK2hD,iBAAkB33C,EAAAA,EAAAA,mBAAkB65B,GAEzC,IAAI3iC,QAAeu9B,EAASkI,uBAC1B9C,EACA7jC,KAAKwpD,eAGLxpD,KAAK6hD,QADc,iBAAV3gD,EACMA,EAEA2S,KAAKC,UAAU5S,EAElC,EAEA,0BAAMs/C,GACJ,IAAI/hB,EAAW,IAAI0C,EAAAA,kBAAkBvX,OAAO6U,UACxCl1B,QAAgBk1B,EAASiD,cAAc1hC,KAAKwpD,cAAe/qB,EAASO,WAAWh/B,KAAKwpD,eAAehtC,QAAS,eAChH,GAAsB,iBAAXjT,EACTvJ,KAAK6hD,QAAUt4C,MACV,CACL,IAAIy8C,QAAiBhmD,KAAKizD,2BAA2Bx0B,EAASO,WAAWh/B,KAAKwpD,eAAehtC,QAAQ,cAAcjT,EAAQwR,UAAWxR,EAAQ2pD,QAAQ7zD,OACtJkvB,QAAQzrB,IAAI,SAASkjD,GACrBhmD,KAAK6hD,QAAU,UAAYmE,EAAUnyC,KAAKC,UAAUvK,EACtD,CACF,EAEA,gCAAM0pD,CAA2BE,EAAQ7uD,EAAMyW,EAAW81C,GACxD,IACEtiC,QAAQzrB,IAAI,qCAAqCqwD,GACjD5kC,QAAQzrB,IAAI,mCAAmC+Q,KAAKC,UAAUxP,IAC9DiqB,QAAQzrB,IAAI,wCAAwCiY,GACpDwT,QAAQzrB,IAAI,qCAAqC+tD,GAGjD,MAAOp2C,OAAQ24C,GAAapL,GAAWmL,GAEjCE,EAAkBlO,EAAOjiC,KAAKnI,EAAW,UAEzCu4C,EAAiB,IAAI1rC,WAAWyrC,GAEhCE,EAAoBpO,EAAOjiC,KAAK2tC,EAAQ,UAExC2C,EAAmB,IAAI5rC,WAAW2rC,GAGxC,aAAaxL,GACTqL,EACAD,EACA7uD,EACAkvD,EACAF,EAEN,CAAE,MAAOnrD,GAEP,OADAomB,QAAQhf,MAAM,uBAAwBpH,IAC/B,CACT,CACF,EAEA,sBAAMs4C,GACJ,IAAIhiB,EAAW,IAAI0C,EAAAA,kBAAkBvX,OAAO6U,UAgBxCmD,EAAU,CACZ,SAAY,YACZ,eAAkB,SAClB,SAAY,MACZ,IAAO,CAAC,IAAO,SAAU,OAAU,CAAC,CAAC,MAAS,QAAS,OAAU,UACjE,KAAQ,CAAC,CACP,KAAQ,2CACR,MAAS,CACP,OAAU,8CACV,OAAU,CAAC,CACT,QAAW,OACX,gBAAmB,wEAClB,CACD,QAAW,MACX,gBAAmB,yEAErB,SAAY,CAAC,MAAS,QAAS,OAAU,OACzC,qBAAwB,OAG5B,KAAQ,KACR,eAAkB,WAClB,YAAe,CACb,oBAAsB,EACtB,gBAAkB,EAClB,IAAO,CAAC,IAAO,SAAU,OAAU,CAAC,CAAC,MAAS,QAAS,OAAU,YAoBrE5hC,KAAK2hD,iBAAkB33C,EAAAA,EAAAA,mBAAkB43B,GACzC,IAAI3P,QAAYwM,EAAS6D,UAAUtiC,KAAKwpD,cAAe/qB,EAASO,WAAWh/B,KAAKwpD,eAAehtC,QAASolB,GAGtG5hC,KAAK6hD,QADW,iBAAP5vB,EACMA,EAKApe,KAAKC,UAAUme,EAElC,EAEA8Q,eAAAA,CAAgBx5B,GACd,IAAIy5B,EAASmiB,EAAOjiC,KAAK,IACzB,IAEI8f,EADqB,kBAAZz5B,EACA47C,EAAOjiC,KAAK3Z,EAAQ0G,QAAQ,KAAM,IAAK,OAEvCk1C,EAAOjiC,KAAK3Z,EAEzB,CAAE,MAAOpB,GACPomB,QAAQzrB,IAAI,0BAA0BqF,IACxC,CACA,OAAO66B,CACT,EAIA,uBAAM0d,GACJ,IAAIjiB,EAAW,IAAI0C,EAAAA,kBAAkBvX,OAAO6U,UAExCmD,EAAU,CACZ,UAAa5hC,KAAK+iC,gBAAgB,8YAClC,cAAiB/iC,KAAK+iC,gBAAgB,wNACtC,QAAW,YACX,cAAiB,UAInB/iC,KAAK2hD,iBAAkB33C,EAAAA,EAAAA,mBAAkB43B,GACzC,IAAI3P,QAAYwM,EAASiE,WAAW1iC,KAAKwpD,cAAe/qB,EAASO,WAAWh/B,KAAKwpD,eAAehtC,QAASolB,GAEvG5hC,KAAK6hD,QADW,iBAAP5vB,EACMA,EAIApe,KAAKC,UAAUme,EAElC,EAEA2tB,6BAAAA,CAA8Bv2C,EAAQsnD,GACpC3wD,KAAK2hD,gBAAkB9tC,KAAKC,UAAUzK,GACtCrJ,KAAKolD,sBAAwB/7C,EAC7BrJ,KAAKqlD,iBAAmBsL,CAC1B,EAEA7Q,6BAAAA,CAA8Bz2C,EAAQsnD,GACpC3wD,KAAK2hD,gBAAkB9tC,KAAKC,UAAUzK,GACtCrJ,KAAKqtD,sBAAwBhkD,EAC7BrJ,KAAKotD,iBAAmBuD,EACxBpiC,QAAQzrB,IAAI,QAASuG,GACrBklB,QAAQzrB,IAAI,SAAU6tD,EACxB,EAEA3Q,iCAAAA,CAAkC32C,EAAQsnD,GACxC3wD,KAAK2hD,gBAAkB9tC,KAAKC,UAAUzK,GACtCrJ,KAAK0tD,0BAA4BrkD,EACjCrJ,KAAKytD,qBAAuBkD,EAC5BpiC,QAAQzrB,IAAI,QAASuG,GACrBklB,QAAQzrB,IAAI,SAAU6tD,EACxB,EACAvQ,yBAAAA,CAA0Bl/C,GAEtBlB,KAAK6hD,QADc,iBAAV3gD,EACMA,EAEA2S,KAAKC,UAAU5S,EAElC,EACAg/C,8BAAAA,CAA+B72C,GAE3BrJ,KAAK2hD,gBADc,iBAAVt4C,EACcA,EAEAwK,KAAKC,UAAUzK,EAE1C,EAEA63C,6BAAAA,CAA8BhgD,GAE1BlB,KAAK6hD,QADc,iBAAV3gD,EACMA,EAEA2S,KAAKC,UAAU5S,EAElC,EAEA+/C,kCAAAA,CAAmC53C,GAE/BrJ,KAAK2hD,gBADc,iBAAVt4C,EACcA,EAEAwK,KAAKC,UAAUzK,EAE1C,EAEAwxC,kBAAAA,CAAmBF,GACjB0N,GAAiB1N,EACb36C,KAAKo6C,SACPxwB,OAAO6U,SAASg1B,UAAY,CAC1B/I,qBAAsB,CACpBzP,eAAgBqN,GAChB3N,OAA0B,IAAlBA,EAAOtzC,OAAe,MAAQszC,GAExCtoB,SAAUm2B,GACVmC,cAAe,CACb3O,MAAOyM,KAIf,EAEAvN,0BAAAA,CAA2BD,GACzBqN,GAA4C,aAAnBrN,EAAgCj7C,KAAKy7C,SAAWR,EAErEj7C,KAAKo6C,OACPxwB,OAAO6U,SAASg1B,UAAY,CAC1B/I,qBAAsB,CACpBzP,eAAgBqN,GAChB3N,OAAkC,IAA1B0N,GAAehhD,OAAe,MAAQghD,IAEhDh2B,SAAUm2B,GACVmC,cAAe,CACb3O,MAAOyM,KAIP7+B,OAAO6U,SAAShqB,cAClBmV,OAAO6U,SAAShqB,cAAcmC,SAAW0xC,GAEzC1+B,OAAO6U,SAAShqB,cAAgB,CAC9BmC,SAAU0xC,GAIlB,EAEA5M,4BAAAA,CAA6BD,GAC3BltB,QAAQzrB,IAAI,+BAAgC24C,GAC5C6M,GAAyB7M,EAErBz7C,KAAKo6C,OACPxwB,OAAO6U,SAASg1B,UAAY,CAC1B/I,qBAAsB,CACpBzP,eAAgBQ,EAChBd,OAAkC,IAA1B0N,GAAehhD,OAAe,MAAQghD,IAEhDh2B,SAAUm2B,GACVmC,cAAe,CACb3O,MAAOyM,KAIP7+B,OAAO6U,SAAShqB,cAClBmV,OAAO6U,SAAShqB,cAAcmC,SAAW6kC,EAEzC7xB,OAAO6U,SAAShqB,cAAgB,CAC9BmC,SAAU6kC,EAIlB,EAEAI,oBAAAA,CAAqBxpB,GACnBm2B,GAAmBn2B,EACfryB,KAAKo6C,SACPxwB,OAAO6U,SAASg1B,UAAY,CAC1B/I,qBAAsB,CACpBzP,eAAgBqN,GAChB3N,OAAkC,IAA1B0N,GAAehhD,OAAe,MAAQghD,IAEhDh2B,SAAUA,EACVs4B,cAAe,CACb3O,MAAOyM,KAIf,EACAnM,0BAAAA,GACE/tB,QAAQzrB,IAAI,gCAAgC9C,KAAKq8C,eACnD,EAEAqX,iBAAAA,CAAkBnqD,EAASwR,EAAU44C,GAInC,GAHAplC,QAAQzrB,IAAI,iCAAiCyG,GAC7CglB,QAAQzrB,IAAI,mCAAmCiY,GAC/CwT,QAAQzrB,IAAI,oCAAoC6wD,IAC3CpqD,IAAYwR,EACf,MAAO,GAET,IAAI64C,EAAkBrqD,EACtB,GAAIA,EAAQ+G,WAAW,MAAM,CAC3BsjD,EAAkBA,EAAgB3jD,QAAQ,MAAO,IACjD,IAAIiK,EAAM,GACV,IAAK,IAAI3I,EAAI,EAAGA,EAAIqiD,EAAgBvsD,OAAQkK,GAAK,EAAG,CAClD,MAAMoqB,EAAOi4B,EAAgB34C,MAAM1J,EAAGA,EAAI,GAC1C2I,GAAOxE,OAAOC,aAAa2jB,SAASqC,EAAM,IAC5C,CACAi4B,EAAkB15C,CACpB,CACAqU,QAAQzrB,IAAI,yCAAyC8wD,GAGrD,MAAMC,EAAmBC,EAAAA,GAA2BF,EAAiB74C,GAErE,OADAwT,QAAQzrB,IAAI,sCAAuC+wD,GAC5CA,EAAiB51B,gBAAkB01B,EAAW11B,aACvD,EAEA,mBAAM8nB,CAAcgO,GAEhB,GAAInqC,OAAO6U,UAAY7U,OAAO6U,SAASxoB,SAAW89C,GAAQA,EAAK1sD,OAAO,EAAE,CACtE,IAAI2sD,EAAa,CAAC,EAClB,IAAK,IAAIpjB,KAAcmjB,EACrB,GAAI,WAAYnjB,GAAc,WAAYA,EAAW,CACnD,IAAIqjB,EAAcj0D,KAAK4pD,mBAAmB13B,QAAOxb,GAAQA,EAAK3G,SAAW6gC,EAAW7gC,SAAQ,GAG5F,GAFAwe,QAAQzrB,IAAI,cAAe+Q,KAAKC,UAAUmgD,IAC1C1lC,QAAQzrB,IAAI,cAAe+Q,KAAKC,UAAU88B,IAChB,kBAAtBA,EAAW7gC,OAA2B,CACxC,IAAI4jD,QAAmB/pC,OAAO6U,SAAS/qB,QAAQ,CAAE3D,OAAQ,uBAAwB6gC,EAAWhS,SAC5F+0B,EAAaA,EAAW,GACxBplC,QAAQzrB,IAAI,iBAAkB6wD,GAC9B,IAAIO,EAAaD,EAAY5qD,OAAO,GACpCklB,QAAQzrB,IAAI,iBAAkB+Q,KAAKC,UAAUogD,IAC7CF,EAAWpjB,EAAW7gC,QAAU/P,KAAK0zD,kBAAkBQ,EAAWtjB,EAAW1vC,OAAOyyD,EACtF,MAAM,GAAyB,uBAAtB/iB,EAAW7gC,OAAgC,CAClD,IAAIokD,EAAgBvjB,EAAW1vC,OAC/B,GAAI,cAAeizD,GAAiB,cAAeA,EAAc,CAC/D,MAAMC,EAAYpD,IAAAA,KAAUh1C,SAASC,QACjC,IAAI3G,aAAcC,OAAO,gBACzB4+C,EAAcp5C,UACd,IAAIk2C,EAAAA,UAAUkD,EAActnD,WAAWqkD,WAE3C8C,EAAWpjB,EAAW7gC,QAAUqkD,CAClC,MACEJ,EAAWpjB,EAAW7gC,SAAU,CAEpC,MAAM,GAAyB,4BAAtB6gC,EAAW7gC,QAA8D,oBAAtB6gC,EAAW7gC,OAA6B,CAClG,IAAI+8C,EAAa9sD,KAAKgtD,oBAAoBpc,EAAW1vC,QACnD8yD,EAAWpjB,EAAW7gC,eAAiB+8C,GAAW5rD,MACtD,MAAM,GAAyB,oBAAtB0vC,EAAW7gC,OAElBikD,EAAWpjB,EAAW7gC,QAAU,wBAE5B,GAAyB,sBAAtB6gC,EAAW7gC,OAA+B,CACjD,IAAIskD,EAAezjB,EAAW1vC,OAC1B8qC,EAAgB,IAAImlB,EAAAA,EAAiBvnC,OAAO6U,UAC3C61B,EAAkBtoB,EAAchN,WAAW4R,EAAWhS,UAAU/xB,UAEjEqyB,EAAUm1B,EAAat5C,UACvBmkB,EAAQ5uB,WAAW,QACrB4uB,EAAUA,EAAQjkB,MAAM,EAAGikB,EAAQ73B,SAGrCknB,QAAQzrB,IAAI,+CAA+CwxD,EAAep1B,GAC1E80B,EAAWpjB,EAAW7gC,QAAUihD,IAAAA,KAAUh1C,SAASC,OAC/CkpC,EAAOjiC,KAAKmxC,EAAalkB,aACzBgV,EAAOjiC,KAAKgc,EAAS,OACrBimB,EAAOjiC,KAAKoxC,EAAgB,OAElC,MAAM,GAAyB,yBAAtB1jB,EAAW7gC,OAAkC,CACpD,IAAIm8B,EAAiB,IAAI/K,EAAAA,kBAAkBvX,OAAO6U,UAC9C+R,EAAgBtE,EAAelN,WAAW4R,EAAWhS,UAAUpiB,QAC/D+3C,EAAgB3jB,EAAW1vC,OAC3B8kD,QAAiBhmD,KAAKizD,2BAA2BziB,EAAc,cAAc+jB,EAAcx5C,UAAWw5C,EAAcrB,QAAQ7zD,OAChI20D,EAAWpjB,EAAW7gC,QAAUi2C,CAElC,MAAM,GAA0B,qBAAtBpV,EAAW7gC,OAA+B,CAClD,IAAIykD,EAAc5jB,EAAW1vC,OACzB+lD,EAAU,IAAIC,EAAAA,GAAQ,CACxB,SAAY,0BACZ,QAAW,CAAC,EACZ,WAAc,KAEZzoB,EAAW,IAAIiH,EAAAA,gBAAgB9b,OAAO6U,UAC1Cu1B,EAAWpjB,EAAW7gC,cAAgBk3C,EAAQE,IAAIpB,cAAc,KAAOZ,EAAOjiC,KAAK,cAAcve,SAAS,OAAQ6vD,EAAa/1B,EAASO,WAAW,gBAAgBxiB,QACrK,MAAO,GAA0B,uBAAtBo0B,EAAW7gC,OAAiC,CACrD,IAAIykD,EAAc5jB,EAAW1vC,OACzB+lD,EAAU,IAAIC,EAAAA,GAAQ,CACxB,SAAY,0BACZ,QAAW,CAAC,EACZ,WAAc,KAEhB,MAAME,QAAsBH,EAAQE,IAAIE,gBAAgB,aAAcmN,GACtE,IAAI/1B,EAAW,IAAIiH,EAAAA,gBAAgB9b,OAAO6U,UAE1Cu1B,EAAWpjB,EAAW7gC,QAAUq3C,IAAkB3oB,EAASO,WAAW,gBAAgBxiB,OACxF,MAAM,GAA0B,yBAAtBo0B,EAAW7gC,OAAmC,CACtD,IAAIkiB,EAAM2e,EAAW1vC,OACjBmhC,EAAWriC,KAAKgqD,uBAEpB,MAAMvE,EAAc,IAAIgP,EAAAA,GAAoB,CAAE9O,QAAS,qDAEvD,IAAIlnB,EAAW,IAAI+E,EAAAA,oBAAoB5Z,OAAO6U,UAC1CjiB,EAAUiiB,EAASO,WAAW,oBAAoBxiB,QAClDopC,EAAK,QACT,MAAM7mB,EAAU,IAAI21B,EAAAA,GAAgBjP,EAAajpC,EAASopC,GAE1D,IAAIE,EAAO9lD,KACX++B,EAAQgnB,cAAc1jB,EAAUpQ,GAAK5vB,MAAK,SAAU2jD,GAClDF,EAAKnE,gBAAkB,sBAAsBqE,GAC/C,IAAGp2C,OAAM,SAAUL,GACjBu2C,EAAKnE,gBAAkB,sBAAsBpyC,GAC/C,IACAykD,EAAWpjB,EAAW7gC,QAAU,oCAClC,MAEEikD,EAAWpjB,EAAW7gC,QAAU,kBAGpC,KAAS,WAAY6gC,GAAc,UAAWA,IAC5CojB,EAAWpjB,EAAW7gC,QAAU6gC,EAAWrhC,OAK/Cgf,QAAQzrB,IAAI,iBAAkB+Q,KAAKC,UAAUkgD,IAC7Ch0D,KAAK2hD,gBAAkB,eAAiB9tC,KAAKC,UAAUkgD,EACzD,MACEzlC,QAAQzrB,IAAI,uDAIlB,EAEAm5C,iBAAAA,CAAkBD,GAChByM,GAAgBzM,EACZh8C,KAAKo6C,SACPxwB,OAAO6U,SAASg1B,UAAY,CAC1B/I,qBAAsB,CACpBzP,eAAgBqN,GAChB3N,OAAkC,IAA1B0N,GAAehhD,OAAe,MAAQghD,IAEhDh2B,SAAUm2B,GACVmC,cAAe,CACb3O,MAAOA,IAIf,EAEA,yBAAMgR,CAAoB2H,GACxB,IAAIC,EAAYD,EACZzzD,GAAS,EACTmE,EAAM,GACV,IAEE,MAAMunD,EAAU,IAAIC,EAAAA,EAAWjjC,OAAO6U,UACtC,IAAIM,EAAU6tB,EAAQ5tB,aACtBzQ,QAAQzrB,IAAI,sBAAsBi8B,EAAQviB,WAG1C,IAAIglB,QAAeqzB,EAAAA,EAAAA,IAA+B70D,KAAKolD,sBAAsB77C,QAASqrD,EAAU75C,WAC5FyB,EAAUglB,EAAOszB,eACrBvmC,QAAQzrB,IAAI,mBAAmB0Z,KAG/B+R,QAAQzrB,IAAI,mBAAmBi8B,EAAQlyB,aACvC0hB,QAAQzrB,IAAI,kBAAkB0+B,EAAOuzB,cACrC7zD,EAAU69B,EAAQviB,UAAYA,GAAauiB,EAAQlyB,YAAc20B,EAAOuzB,WAExE1vD,EAAM,mBAAmB05B,EAAQviB,UAAYA,wBAA8BuiB,EAAQlyB,YAAc20B,EAAOuzB,aACxGxmC,QAAQzrB,IAAI,6BAA8B0+B,EAC5C,CAAE,MAAOt/B,GACPqsB,QAAQzrB,IAAI,4BAA6BZ,EAC3C,CACA,MAAO,CACLhB,SACAmE,MAEJ,EAGAi8C,oBAAAA,CAAqB1zC,GACnB5N,KAAK4W,SAAWhJ,CAClB,EAEA6zC,sBAAAA,CAAuB7zC,GACrB5N,KAAKwhD,iBAAmB5zC,CAC1B,EAEA8zC,gBAAAA,GACE,GAAI1hD,KAAK2hD,gBAAiB,CACxB,MAAMqT,EAAiBnhD,KAAKygB,MAAMt0B,KAAK2hD,iBACvCqT,EAAep+C,SAA6B,aAAlB5W,KAAK4W,SAA0B5W,KAAKwhD,iBAAmBxhD,KAAK4W,SACtF5W,KAAK2hD,gBAAkB9tC,KAAKC,UAAUkhD,EACxC,CACF,EAEAzT,wBAAAA,GACE,OAAO4G,GAA8B/W,MAAM6jB,GAAMj1D,KAAKwpD,cAAcl5C,WAAW2kD,IACjF,GAEFC,OAAAA,GAOE,EAGFC,OAAAA,GAEE,IAAIC,EAAYrtD,SAASstD,cAAc,UACvCD,EAAUE,IAAM,8CAChBF,EAAUjwD,GAAK,QACf4C,SAASwtD,qBAAqB,QAAQ,GAAGC,YAAYJ,GAErDp1D,KAAKqpD,cAAe,EACpBthD,SAAS0tD,MAAQ,cACjBz1D,KAAKk9C,iBAEL3uB,QAAQzrB,IAAI,SACR9C,KAAK01D,MAAMC,kBACb31D,KAAKgqD,wBAAyB4L,EAAAA,EAAAA,IAAM51D,KAAK01D,MAAMC,iBAAiBtzB,UAChE9T,QAAQzrB,IAAI,QAAS9C,KAAKgqD,yBAE1Bz7B,QAAQzrB,IAAI,MAEhB,GWr/GF,MAAM,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAAS+yD,GAAQ,CAAC,YAAY,qBAEzF,UCJA,MAAMC,IAAMC,EAAAA,EAAAA,IAAUC,IAEtBF,GAAIG,IAAIC,EAAAA,GACRJ,GAAIK,MAAM,O,mqCCPNC,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBh2D,IAAjBi2D,EACH,OAAOA,EAAan3D,QAGrB,IAAIo3D,EAASJ,EAAyBE,GAAY,CACjDnxD,GAAImxD,EACJG,QAAQ,EACRr3D,QAAS,CAAC,GAUX,OANAs3D,EAAoBJ,GAAUj1D,KAAKm1D,EAAOp3D,QAASo3D,EAAQA,EAAOp3D,QAASi3D,GAG3EG,EAAOC,QAAS,EAGTD,EAAOp3D,OACf,CAGAi3D,EAAoBl2D,EAAIu2D,E,WC5BxBL,EAAoBM,KAAO,CAAC,C,eCA5B,IAAIC,EAAW,GACfP,EAAoBQ,EAAI,SAAS31D,EAAQ41D,EAAU9qC,EAAI+qC,GACtD,IAAGD,EAAH,CAMA,IAAIE,EAAeC,IACnB,IAAS1lD,EAAI,EAAGA,EAAIqlD,EAASvvD,OAAQkK,IAAK,CACrCulD,EAAWF,EAASrlD,GAAG,GACvBya,EAAK4qC,EAASrlD,GAAG,GACjBwlD,EAAWH,EAASrlD,GAAG,GAE3B,IAJA,IAGIxP,GAAY,EACPm1D,EAAI,EAAGA,EAAIJ,EAASzvD,OAAQ6vD,MACpB,EAAXH,GAAsBC,GAAgBD,IAAa73D,OAAOmkB,KAAKgzC,EAAoBQ,GAAGM,OAAM,SAASxlD,GAAO,OAAO0kD,EAAoBQ,EAAEllD,GAAKmlD,EAASI,GAAK,IAChKJ,EAAS3jC,OAAO+jC,IAAK,IAErBn1D,GAAY,EACTg1D,EAAWC,IAAcA,EAAeD,IAG7C,GAAGh1D,EAAW,CACb60D,EAASzjC,OAAO5hB,IAAK,GACrB,IAAI6lD,EAAIprC,SACE1rB,IAAN82D,IAAiBl2D,EAASk2D,EAC/B,CACD,CACA,OAAOl2D,CArBP,CAJC61D,EAAWA,GAAY,EACvB,IAAI,IAAIxlD,EAAIqlD,EAASvvD,OAAQkK,EAAI,GAAKqlD,EAASrlD,EAAI,GAAG,GAAKwlD,EAAUxlD,IAAKqlD,EAASrlD,GAAKqlD,EAASrlD,EAAI,GACrGqlD,EAASrlD,GAAK,CAACulD,EAAU9qC,EAAI+qC,EAwB/B,C,eC5BAV,EAAoBgB,EAAI,SAASb,GAChC,IAAIc,EAASd,GAAUA,EAAO/1D,WAC7B,WAAa,OAAO+1D,EAAO,UAAY,EACvC,WAAa,OAAOA,CAAQ,EAE7B,OADAH,EAAoBkB,EAAED,EAAQ,CAAEt+B,EAAGs+B,IAC5BA,CACR,C,eCPA,IACIE,EADAC,EAAWv4D,OAAO69B,eAAiB,SAASD,GAAO,OAAO59B,OAAO69B,eAAeD,EAAM,EAAI,SAASA,GAAO,OAAOA,EAAI46B,SAAW,EAQpIrB,EAAoB1e,EAAI,SAASt4C,EAAOs4D,GAEvC,GADU,EAAPA,IAAUt4D,EAAQW,KAAKX,IAChB,EAAPs4D,EAAU,OAAOt4D,EACpB,GAAoB,kBAAVA,GAAsBA,EAAO,CACtC,GAAW,EAAPs4D,GAAat4D,EAAMoB,WAAY,OAAOpB,EAC1C,GAAW,GAAPs4D,GAAoC,oBAAft4D,EAAMgD,KAAqB,OAAOhD,CAC5D,CACA,IAAIw/B,EAAK3/B,OAAOe,OAAO,MACvBo2D,EAAoBe,EAAEv4B,GACtB,IAAI+4B,EAAM,CAAC,EACXJ,EAAiBA,GAAkB,CAAC,KAAMC,EAAS,CAAC,GAAIA,EAAS,IAAKA,EAASA,IAC/E,IAAI,IAAII,EAAiB,EAAPF,GAAYt4D,EAAyB,iBAAXw4D,KAAyBL,EAAex/B,QAAQ6/B,GAAUA,EAAUJ,EAASI,GACxH34D,OAAO44D,oBAAoBD,GAASxjD,SAAQ,SAAS1C,GAAOimD,EAAIjmD,GAAO,WAAa,OAAOtS,EAAMsS,EAAM,CAAG,IAI3G,OAFAimD,EAAI,WAAa,WAAa,OAAOv4D,CAAO,EAC5Cg3D,EAAoBkB,EAAE14B,EAAI+4B,GACnB/4B,CACR,C,eCxBAw3B,EAAoBkB,EAAI,SAASn4D,EAAS24D,GACzC,IAAI,IAAIpmD,KAAOomD,EACX1B,EAAoBn2D,EAAE63D,EAAYpmD,KAAS0kD,EAAoBn2D,EAAEd,EAASuS,IAC5EzS,OAAOC,eAAeC,EAASuS,EAAK,CAAE/Q,YAAY,EAAMC,IAAKk3D,EAAWpmD,IAG3E,C,eCPA0kD,EAAoB2B,EAAI,WACvB,GAA0B,kBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOj4D,MAAQ,IAAIk4D,SAAS,cAAb,EAChB,CAAE,MAAOh2D,GACR,GAAsB,kBAAX0nB,OAAqB,OAAOA,MACxC,CACA,CAPuB,E,eCAxBysC,EAAoBn2D,EAAI,SAAS48B,EAAKq7B,GAAQ,OAAOj5D,OAAOiC,UAAUC,eAAeC,KAAKy7B,EAAKq7B,EAAO,C,eCCtG9B,EAAoBe,EAAI,SAASh4D,GACX,qBAAXg5D,QAA0BA,OAAOC,aAC1Cn5D,OAAOC,eAAeC,EAASg5D,OAAOC,YAAa,CAAEh5D,MAAO,WAE7DH,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,GACvD,C,eCNAg3D,EAAoBiC,IAAM,SAAS9B,GAGlC,OAFAA,EAAO+B,MAAQ,GACV/B,EAAOgC,WAAUhC,EAAOgC,SAAW,IACjChC,CACR,C,eCCA,IAAIiC,EAAkB,CACrB,IAAK,GAaNpC,EAAoBQ,EAAEK,EAAI,SAASwB,GAAW,OAAoC,IAA7BD,EAAgBC,EAAgB,EAGrF,IAAIC,EAAuB,SAASC,EAA4Bt0D,GAC/D,IAKIgyD,EAAUoC,EALV5B,EAAWxyD,EAAK,GAChBu0D,EAAcv0D,EAAK,GACnBw0D,EAAUx0D,EAAK,GAGIiN,EAAI,EAC3B,GAAGulD,EAAS1lB,MAAK,SAASjsC,GAAM,OAA+B,IAAxBszD,EAAgBtzD,EAAW,IAAI,CACrE,IAAImxD,KAAYuC,EACZxC,EAAoBn2D,EAAE24D,EAAavC,KACrCD,EAAoBl2D,EAAEm2D,GAAYuC,EAAYvC,IAGhD,GAAGwC,EAAS,IAAI53D,EAAS43D,EAAQzC,EAClC,CAEA,IADGuC,GAA4BA,EAA2Bt0D,GACrDiN,EAAIulD,EAASzvD,OAAQkK,IACzBmnD,EAAU5B,EAASvlD,GAChB8kD,EAAoBn2D,EAAEu4D,EAAiBC,IAAYD,EAAgBC,IACrED,EAAgBC,GAAS,KAE1BD,EAAgBC,GAAW,EAE5B,OAAOrC,EAAoBQ,EAAE31D,EAC9B,EAEI63D,EAAqBn8B,KAAK,8BAAgCA,KAAK,+BAAiC,GACpGm8B,EAAmB1kD,QAAQskD,EAAqBvyD,KAAK,KAAM,IAC3D2yD,EAAmB7lD,KAAOylD,EAAqBvyD,KAAK,KAAM2yD,EAAmB7lD,KAAK9M,KAAK2yD,G,IC/CvF,IAAIC,EAAsB3C,EAAoBQ,OAAEv2D,EAAW,CAAC,MAAM,WAAa,OAAO+1D,EAAoB,MAAQ,IAClH2C,EAAsB3C,EAAoBQ,EAAEmC,E","sources":["webpack://okxconnectdemo/../packages/core/src/connect/commands.js","webpack://okxconnectdemo/../packages/core/src/connect/connect.js","webpack://okxconnectdemo/../packages/core/src/connect/connectionManager.js","webpack://okxconnectdemo/../packages/core/src/connect/constants.js","webpack://okxconnectdemo/../packages/core/src/connect/engine.js","webpack://okxconnectdemo/../packages/core/src/connect/index.js","webpack://okxconnectdemo/../packages/core/src/connect/jwt.js","webpack://okxconnectdemo/../packages/core/src/connect/jwtconstants.js","webpack://okxconnectdemo/../packages/core/src/connect/sessionUtils.js","webpack://okxconnectdemo/../packages/core/src/connect/storage.js","webpack://okxconnectdemo/../packages/core/src/connect/storageconstants.js","webpack://okxconnectdemo/../packages/core/src/connect/walletConnectionConstants.js","webpack://okxconnectdemo/../packages/core/src/connect/walletConnectionManager.js","webpack://okxconnectdemo/../packages/core/src/crypto/crypto.js","webpack://okxconnectdemo/../packages/core/src/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/engine.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/json-rpc.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/connect-event.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/connect-wallet.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/wallet-info.js","webpack://okxconnectdemo/../packages/core/src/protocol/constants.js","webpack://okxconnectdemo/../packages/core/src/protocol/error/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/error/okx-connect.error.js","webpack://okxconnectdemo/../packages/core/src/protocol/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/misc.js","webpack://okxconnectdemo/../packages/core/src/utils/call-for-success.js","webpack://okxconnectdemo/../packages/core/src/utils/index.js","webpack://okxconnectdemo/../packages/core/src/utils/log.js","webpack://okxconnectdemo/../packages/core/src/utils/report.js","webpack://okxconnectdemo/../packages/core/src/utils/reportconstants.js","webpack://okxconnectdemo/../packages/core/src/utils/request.js","webpack://okxconnectdemo/../packages/core/src/utils/safejson.js","webpack://okxconnectdemo/../packages/core/src/utils/stringUtils.js","webpack://okxconnectdemo/../packages/core/src/utils/tma-api.js","webpack://okxconnectdemo/../packages/core/src/utils/url.js","webpack://okxconnectdemo/../packages/core/src/utils/utils.js","webpack://okxconnectdemo/../packages/core/src/utils/web-api.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXBtcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXCosmosProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXStarknetProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTonProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTronProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXUniversalProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/sign-client/client.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/ConnectMethodUtils.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/namespaces.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/events.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/values.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/aptos.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/btc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/cosmos.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/eip155.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcConnection.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/solana.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/starknet.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/sui.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/ton.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/tron.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/misc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/providers.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/globals.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/misc.js","webpack://okxconnectdemo/./src/App.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue?1b44","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue?e4fb","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue?aa83","webpack://okxconnectdemo/./src/components/StarknetTransactionPanel.vue","webpack://okxconnectdemo/./src/components/StarknetTransactionPanel.vue?1a06","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue?089a","webpack://okxconnectdemo/./src/App.vue?7ccd","webpack://okxconnectdemo/./src/main.js","webpack://okxconnectdemo/webpack/bootstrap","webpack://okxconnectdemo/webpack/runtime/amd options","webpack://okxconnectdemo/webpack/runtime/chunk loaded","webpack://okxconnectdemo/webpack/runtime/compat get default export","webpack://okxconnectdemo/webpack/runtime/create fake namespace object","webpack://okxconnectdemo/webpack/runtime/define property getters","webpack://okxconnectdemo/webpack/runtime/global","webpack://okxconnectdemo/webpack/runtime/hasOwnProperty shorthand","webpack://okxconnectdemo/webpack/runtime/make namespace object","webpack://okxconnectdemo/webpack/runtime/node module decorator","webpack://okxconnectdemo/webpack/runtime/jsonp chunk loading","webpack://okxconnectdemo/webpack/startup"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_METHOD_BATCH_FETCHMSG = exports.CONNECT_METHOD_FETCHMSG = exports.CONNECT_METHOD_RECEIVE = exports.CONNECT_METHOD_UNSUB = exports.CONNECT_METHOD_SUB = exports.CONNECT_METHOD_PUBLISH = exports.CONNECT_METHOD_LOGIN = exports.CONNECT_METHOD_PUSH = void 0;\n// --------------- ws methods -------------\nexports.CONNECT_METHOD_PUSH = \"push\";\nexports.CONNECT_METHOD_LOGIN = \"login\";\nexports.CONNECT_METHOD_PUBLISH = \"publish\";\nexports.CONNECT_METHOD_SUB = \"subscribe\";\nexports.CONNECT_METHOD_UNSUB = \"unsubscribe\";\nexports.CONNECT_METHOD_RECEIVE = \"receive\";\nexports.CONNECT_METHOD_FETCHMSG = \"fetchMessages\";\nexports.CONNECT_METHOD_BATCH_FETCHMSG = \"batchFetchMessages\";\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXWalletConnector = void 0;\nconst constants_1 = require(\"./constants\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils\");\nconst utils_2 = require(\"../utils/utils\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst log = __importStar(require(\"../utils/log\"));\nconst protocol_1 = require(\"../protocol\");\nconst WS = (0, utils_2.resolveWebSocketImplementation)();\nclass OKXWalletConnector {\n    constructor(url) {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.state = constants_1.ConnectorState.InitState;\n        this.selectedUrlIndex = 0;\n        // reconnect\n        this.retryCount = 0;\n        // default timeout limit: 8 sec\n        this.timeOutLimit = 8000;\n        if (!(0, utils_2.checkWSUrl)(url)) {\n            throw new Error(`CONNECTOR: invalid url ${url}`);\n        }\n        this.url = url;\n        this.heartbeatTimer = null;\n        this.connectionTimeoutTimer = null;\n        this.connectURLStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY + storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n    }\n    get connecting() {\n        return this.state == constants_1.ConnectorState.Connecting;\n    }\n    // ------------------------------------------------------\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        log.logDebug('get received data');\n        log.logDebug(e);\n        if (typeof e.data === \"string\") {\n            let rsp = e.data;\n            if (rsp === \"pong\") {\n                log.logDebug(`CONNECT: receive pong ${Date.now().toString()}`);\n                return;\n            }\n        }\n        this.events.emit(\"payload\", e.data);\n    }\n    onClose(event) {\n        var _a;\n        log.logDebug('socket get closed: ', (_a = this.socket) === null || _a === void 0 ? void 0 : _a.url, event.code);\n        this.socket = undefined;\n        this.events.emit(\"close\", event);\n    }\n    onError(id, e) {\n        const payload = { id: id, msg: e.toString() };\n        this.events.emit(\"payload\", payload);\n    }\n    onopen(socket) {\n        socket.onmessage = (event) => this.onPayload(event);\n        socket.onclose = (event) => this.onClose(event);\n        this.socket = socket;\n        this.state = constants_1.ConnectorState.Connected;\n        this.events.emit(\"open\");\n    }\n    // ------------------------------------------------------\n    emitError(errorEvent) {\n        this.events.emit(\"fail\", errorEvent);\n    }\n    // ------------------------------------------------------\n    heartbeat() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.heartbeatTimer) {\n                clearTimeout(this.heartbeatTimer);\n            }\n            if (this.state != constants_1.ConnectorState.Connected && this.state != constants_1.ConnectorState.OnError) {\n                log.logDebug('heart beat close');\n                return;\n            }\n            if (!this.socket) {\n                log.logDebug('socket not exist');\n                if (this.state == constants_1.ConnectorState.Connected || this.state == constants_1.ConnectorState.OnError) {\n                    log.logDebug('socket reconnect by heartbeat');\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                        this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n                    }\n                }\n                return;\n            }\n            if (this.socket.readyState !== WebSocket.OPEN) {\n                log.logDebug('socket not ready');\n                if (this.state == constants_1.ConnectorState.Connected || this.state == constants_1.ConnectorState.OnError) {\n                    log.logDebug('socket reconnect by heartbeat with state', this.state, this.socket.readyState);\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                        this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n                    }\n                }\n                return;\n            }\n            log.logDebug(`send ping heart beat: ${Date.now().toString()}, ${this.socket}`);\n            this.socket.send(\"ping\");\n            this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n        });\n    }\n    registOpen(url = this.url, inRetry = false) {\n        if (!(0, utils_2.checkWSUrl)(url)) {\n            throw new Error(`CONNECTOR: invalid url ${url}`);\n        }\n        this.url = url;\n        if (!inRetry) {\n            log.logDebug('Connection connect:', this.url, new Date().toUTCString());\n        }\n        this.state = constants_1.ConnectorState.Connecting;\n        const origin = new URLSearchParams(url).get(\"origin\");\n        return new Promise((resolve, reject) => {\n            const socket = new WS(url, []);\n            log.logDebug('Connection connect Begin:', this.url, new Date().toUTCString());\n            this.startTimeOutTimer(socket);\n            if ((0, utils_2.hasBuiltInWebSocket)()) {\n                log.logDebug('Add socket error handler');\n                socket.onerror = () => {\n                    reject(new Error('socket error'));\n                    socket.close();\n                };\n            }\n            else {\n                log.logDebug('Add socket error handler');\n                socket.on(\"error\", () => {\n                    reject(new Error('socket error'));\n                    socket.close();\n                });\n            }\n            socket.onopen = () => {\n                log.logDebug('socket opened');\n                this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.FINISHED);\n                this.onopen(socket);\n                this.heartbeat();\n                resolve(socket);\n            };\n        });\n    }\n    checkMaxRetry() {\n        log.logDebug('current retry count:', this.retryCount, 'of', constants_1.OKXCONNECTOR_WS_URL_LIST.length);\n        return this.retryCount > constants_1.OKXCONNECTOR_WS_URL_LIST.length;\n    }\n    connectionTryNext() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.checkMaxRetry()) {\n                //TODO: mark descent\n                this.retryCount += 1;\n                let nextUrl = this.getNextSelectUrl();\n                log.logDebug('Connection retry:', nextUrl, new Date().toUTCString());\n                return this.registOpen(nextUrl, true);\n            }\n            else {\n                log.logDebug('Max Connection retry ', this.retryCount, new Date().toUTCString());\n            }\n        });\n    }\n    startTimeOutTimer(socket) {\n        if (this.connectionTimeoutTimer) {\n            this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.CANCELED);\n        }\n        this.pendingSocket = socket;\n        this.connectionTimeoutTimer = setTimeout(() => {\n            if (this.pendingSocket) {\n                this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.TIME_OUT);\n            }\n        }, this.timeOutLimit);\n    }\n    resetTimeOutTimer(code) {\n        var _a;\n        // 1. cancel connecting pending sockets\n        if (code != constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.FINISHED) {\n            (_a = this.pendingSocket) === null || _a === void 0 ? void 0 : _a.close(code);\n        }\n        this.pendingSocket = undefined;\n        // 2. remove timer\n        clearTimeout(this.connectionTimeoutTimer);\n    }\n    cacheSuccessUrlSelect() {\n        this.connectURLStorage.saveContent(this.selectedUrlIndex.toString(), storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n    }\n    // private getSuccessUrlSelect(): string {\n    //     let selectIndex = this.connectURLStorage.getItem(OKXCONNECTOR_CACHE_KEY)?.content\n    //     let index = 0\n    //     if (selectIndex) {\n    //         index = Number(selectIndex)\n    //     }\n    //     this.selectedUrlIndex = index\n    //     return OKXCONNECTOR_WS_URL_LIST[index]\n    // }\n    getNextSelectUrl() {\n        this.selectedUrlIndex += 1;\n        this.selectedUrlIndex = this.selectedUrlIndex % constants_1.OKXCONNECTOR_WS_URL_LIST.length;\n        return constants_1.OKXCONNECTOR_WS_URL_LIST[this.selectedUrlIndex];\n    }\n    // ------------------------------------------------------\n    onVisibleChanged() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (document.visibilityState === 'visible') {\n                // check and restore\n                log.logDebug(`get changed ${this.state}, ${this.socket}`);\n                if (this.state == constants_1.ConnectorState.Connected && typeof this.socket === \"undefined\") {\n                    log.logDebug('CONNECTION need reopen');\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                    }\n                    return;\n                }\n            }\n        });\n    }\n    tryRegistOpen() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (this.connecting) {\n                log.logDebug('tryRegistOpen => connecting state');\n                return new Promise((resolve, reject) => {\n                    this.events.once('fail', (e) => {\n                        log.logDebug('tryRegistOpen => connecting fail listener', e);\n                        return reject(e);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.socket == \"undefined\") {\n                            return reject(new Error(\"Connect lost\"));\n                        }\n                        return resolve(this.socket);\n                    });\n                });\n            }\n            log.logDebug('tryRegistOpen => try registOpen until retry limit is hit');\n            let inRetry = false;\n            while (!this.checkMaxRetry() && !this.socket) {\n                try {\n                    log.logDebug('tryRegistOpen => call registOpen, try count:', this.retryCount, inRetry);\n                    yield this.registOpen(url, inRetry);\n                }\n                catch (err) {\n                    log.logDebug('tryRegistOpen => registOpen failed', err);\n                    this.retryCount += 1;\n                    url = this.getNextSelectUrl();\n                    inRetry = true;\n                }\n            }\n            log.logDebug('tryRegistOpen => exit while loop', this.retryCount, this.socket);\n            if (!this.socket && this.checkMaxRetry()) {\n                log.logDebug('tryRegistOpen => failed to open a socket', this.retryCount, this.socket);\n                this.retryCount = 0;\n                this.state = constants_1.ConnectorState.OnError;\n                this.emitError(new Error('tryRegistOpen failed'));\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CONNECTION_ERROR, \"Failed to connect\");\n            }\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.tryRegistOpen();\n                // listener for reconnect\n                document.removeEventListener('visibilitychange', this.onVisibleChanged.bind(this));\n                document.addEventListener('visibilitychange', this.onVisibleChanged.bind(this));\n            }\n            catch (e) {\n                log.logDebug('connect => failed to connect', e);\n                throw e;\n            }\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.state = constants_1.ConnectorState.Disconnected;\n            return new Promise((resolve, reject) => {\n                if (typeof this.socket === \"undefined\") {\n                    // reject(new Error(\"CONNECTION closed\"))\n                    resolve();\n                    return;\n                }\n                this.socket.onclose = (event) => {\n                    this.onClose(event);\n                    resolve();\n                };\n                this.socket.close();\n                if (this.heartbeatTimer) {\n                    clearTimeout(this.heartbeatTimer);\n                }\n            });\n        });\n    }\n    currentStatus() {\n        return {\n            state: this.state,\n            url: this.url\n        };\n    }\n    // event will be jsonstr\n    /// @params Promise\n    /// @params success/failed callback\n    addListener(event, decrypt, success, failed) {\n        if (this.listenPayloadHandler) {\n            this.events.removeListener(\"payload\", this.listenPayloadHandler);\n        }\n        this.listenPayloadHandler = (e) => {\n            var _a;\n            log.logDebug(`<<< get payload ${e}`);\n            let parsedEvent = (0, utils_1.safeJsonParse)(e);\n            // parse the data to chose success or failed\n            if (parsedEvent.params && parsedEvent.params.data) {\n                let rawMsg = (_a = parsedEvent.params.data) === null || _a === void 0 ? void 0 : _a.message;\n                if (rawMsg) {\n                    try {\n                        let msg = decrypt(rawMsg);\n                        if (msg === undefined) {\n                            log.logDebug(`CONNECT: decrypt undefined`);\n                            failed(event, 'Decrypt undefined');\n                        }\n                        else {\n                            success(event, msg);\n                        }\n                    }\n                    catch (e) {\n                        log.logDebug(`CONNECT: decrypt failed: ${e}`);\n                        failed(event, e.message);\n                    }\n                }\n            }\n        };\n        this.events.on(\"payload\", this.listenPayloadHandler);\n        if (this.failHandler) {\n            this.events.removeListener(\"fail\", this.failHandler);\n        }\n        this.failHandler = (e) => {\n            if (e) {\n                log.logDebug(`CONNECT failed: ${e}`);\n                failed(event, e.message);\n            }\n            else {\n                failed(event, \"Unkonow error\");\n            }\n        };\n        this.events.on(\"fail\", this.failHandler);\n    }\n    addPackageParse(callback) {\n        if (this.payloadHandler) {\n            this.events.removeListener(\"payload\", this.payloadHandler);\n        }\n        this.payloadHandler = (e) => __awaiter(this, void 0, void 0, function* () {\n            // parse the data to chose success or failed\n            log.logDebug(`CONNECTION @[${new Date().toUTCString()}] <<<< received e:${e}`);\n            let param = (0, utils_1.safeJsonParse)(e);\n            yield callback(param);\n        });\n        this.events.on(\"payload\", this.payloadHandler);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    send(doLogin, payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (typeof this.socket === \"undefined\") {\n                    log.logDebug(`>>> send payload undefined ${payload}`);\n                    // this.socket = await this.registOpen();\n                    yield doLogin();\n                }\n                log.logDebug(`CONNECTION @[${new Date().toUTCString()}]>>> send payload ${(0, utils_1.safeJsonStringify)(payload)}`);\n                if (this.socket) {\n                    this.socket.send((0, utils_1.safeJsonStringify)(payload));\n                }\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    getMsgPayloadFromHistory(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof msg === \"undefined\")\n                return;\n            let tmpMsg = {\n                params: {\n                    data: msg\n                }\n            };\n            let jsonstr = (0, utils_1.safeJsonStringify)(msg);\n            log.logDebug('get received data from history');\n            log.logDebug(jsonstr);\n            jsonstr = (0, utils_1.safeJsonStringify)(tmpMsg);\n            this.events.emit(\"payload\", jsonstr);\n        });\n    }\n    onOpen(callback) {\n        if (this.openHandler) {\n            this.events.removeListener(\"open\", this.openHandler);\n        }\n        this.openHandler = () => __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> ws opened: `);\n            yield callback();\n        });\n        this.events.on(\"open\", this.openHandler);\n        this.cacheSuccessUrlSelect();\n    }\n}\nexports.OKXWalletConnector = OKXWalletConnector;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionManager = void 0;\nconst connect_1 = require(\"./connect\");\nconst commands_1 = require(\"./commands\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst jwtconstants_1 = require(\"./jwtconstants\");\nconst constants_1 = require(\"./constants\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils/utils\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst jwt_1 = require(\"./jwt\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst report_1 = require(\"../utils/report\");\nconst url_1 = require(\"../utils/url\");\nclass ConnectionManager {\n    constructor(appname = undefined) {\n        this.events = new eventemitter3_1.EventEmitter();\n        // local storage\n        this.connectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY_DAPP + appname, storageconstants_1.OKXCONNECTOR_CACHE_KEY_DAPP);\n        this.crypto = new crypto_1.SessionCrypto();\n        let inTMA = (0, url_1.isInTMA)();\n        (0, log_1.logDebug)('do init:', inTMA);\n        log.reportLog('connection manager do init');\n        if (inTMA) {\n            // recovery from cache\n            const keyPairInfo = this.getCachedCryptoKeyPair();\n            (0, log_1.logDebug)('use same pk:', keyPairInfo);\n            this.crypto = new crypto_1.SessionCrypto(keyPairInfo);\n        }\n        this.jwtKeyPair = this.getCachedJWTKeyPair();\n        this.saveJWTKeyPair(this.jwtKeyPair);\n        // wss connection\n        this.connector = new connect_1.OKXWalletConnector(constants_1.OKXCONNECTOR_WS_URL_1);\n        this.packageId = Date.now();\n        // connection state\n        this.connectedWalletPK = '';\n        this.currentTopic = '';\n        log.logDebug(`this.connectedWalletPK  constructor   ${this.connectedWalletPK}`);\n    }\n    refreshPackageId() {\n        this.packageId = Date.now();\n    }\n    saveCryptoKeyPair(keyPair) {\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(keyPair);\n        // encrypt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_CRYPTO_KEY);\n    }\n    getCachedCryptoKeyPair() {\n        // decrypt kp\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_CRYPTO_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            log.logDebug('get cached crypto key:');\n            log.logDebug(content);\n            let keyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            return keyPairInfo;\n        }\n        else {\n            this.connectStorage.clearCache();\n        }\n        return null;\n    }\n    saveJWTKeyPair(keyPair) {\n        var strkeyPair = {\n            publicKey: (0, utils_1.toHexString)(keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(keyPair.secretKey)\n        };\n        log.logDebug('save jwt kp');\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(strkeyPair);\n        log.logDebug(cacheInfo);\n        // encrypt jwt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_JWT_KEY);\n    }\n    getCachedJWTKeyPair() {\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            // TODO: decrypt jwt kp\n            log.logDebug('get cached jwt kp:');\n            log.logDebug(content);\n            let strKeyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            log.logDebug('save jwt kp');\n            log.logDebug(strKeyPairInfo);\n            var keyPair = {\n                publicKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.publicKey),\n                secretKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.secretKey)\n            };\n            return keyPair;\n        }\n        else {\n            return (0, jwt_1.generateKeyPair)();\n        }\n    }\n    isWalletPKReady() {\n        log.logDebug(`isWalletPKReady  ===> ${this.connectedWalletPK}`);\n        return this.connectedWalletPK.length > 0;\n    }\n    makeJWT(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, jwt_1.signJWT)(topic, jwtconstants_1.OKXCONNECTOR_JWT_SIDE, jwtconstants_1.OKXCONNECTOR_JWT_TTL, // 24h\n            this.jwtKeyPair);\n        });\n    }\n    parsePackage(input_1) {\n        return __awaiter(this, arguments, void 0, function* (input, ignoreACK = false) {\n            var _a, _b, _c, _d, _e;\n            this.events.emit(input.id, input);\n            // send back ACK\n            if (!ignoreACK) {\n                yield this.sendACK(input.id, true);\n                let topic = (_a = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE)) === null || _a === void 0 ? void 0 : _a.content;\n                if (topic) {\n                    let inputObj = input;\n                    if ((_c = (_b = inputObj.params) === null || _b === void 0 ? void 0 : _b.data) === null || _c === void 0 ? void 0 : _c.messageId) {\n                        this.refreshPackageId();\n                        yield this.sendReceive(this.packageId.toString(), (_e = (_d = inputObj.params) === null || _d === void 0 ? void 0 : _d.data) === null || _e === void 0 ? void 0 : _e.messageId, topic);\n                    }\n                }\n            }\n        });\n    }\n    restoreConnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.reportLog('connection manager restore connection');\n            log.logDebug(`connectionManager  restoreConenct   ${topic}`);\n            if ((typeof topic !== 'string') || topic.length === 0) {\n                throw new Error('CONNECTION: invalid topic');\n            }\n            log.logDebug(`connectionManager  restoreConenct   disconnect`);\n            yield this.disconnect(true);\n            this.connectStorage.saveContent(topic, storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`connectionManager  restoreConenct   conect`);\n            yield this.connect(true);\n        });\n    }\n    getConnectInfo() {\n        var topic = (0, utils_1.generateTopic)();\n        log.logDebug(`generate topic token: ${topic}`);\n        log.reportLog('connection manager generate connection info');\n        this.currentTopic = topic;\n        const info = {\n            channelId: topic,\n            clientId: this.crypto.stringifyKeypair().publicKey,\n        };\n        return info;\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            this.timeLog = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---enter->\", this.timeLog);\n            log.reportLog('connection manager begin connect');\n            let lastConnectId = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            //1. generate topic & jwt\n            var topic = this.currentTopic;\n            log.logDebug(`generate topic token: ${topic}`);\n            // crypto keypair\n            if (fromRestore) {\n                if (typeof lastConnectId !== 'undefined' && lastConnectId !== null) {\n                    log.logDebug(`read last connect id: ${lastConnectId}`);\n                    topic = lastConnectId.content;\n                }\n                var cachedSenderPublicKey = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                if (cachedSenderPublicKey) {\n                    this.connectedWalletPK = cachedSenderPublicKey.content;\n                    (0, log_1.logDebug)(`connectionManager connect() this.connectedWalletPK : ${this.connectedWalletPK}`);\n                }\n                log.reportLog('connection manager do restore connection');\n            }\n            if (fromRestore) {\n                // recovery from cache\n                const keyPairInfo = this.getCachedCryptoKeyPair();\n                if (keyPairInfo) {\n                    this.crypto = new crypto_1.SessionCrypto(keyPairInfo);\n                }\n            }\n            log.logDebug(`use crypto client id: ${this.crypto.stringifyKeypair().publicKey}`);\n            // cache topic\n            this.connectStorage.saveContent(topic, storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            var jwtToken = yield this.makeJWT(topic);\n            log.logDebug(`generate jwt token: ${jwtToken}`);\n            this.connectStorage.saveContent(jwtToken, 'jwt');\n            return new Promise((resolve, reject) => {\n                // 1. when websocket opened\n                this.connector.onOpen(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug(`1. connector on open`);\n                    log.reportLog('1. connect ws open');\n                    const timeOne = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---open->\", timeOne - this.timeLog);\n                    //2. send jwt to login\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when login');\n                            log.reportLog('2. connect login failed');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // throw error\n                            reject(error);\n                        }\n                        //3. send subscribe\n                        this.refreshPackageId();\n                        this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                            // ack\n                            if (rsp && rsp.error) {\n                                log.logError('failed when subscribe');\n                                log.reportLog('3. connect subscribe failed');\n                                yield this.connector.disconnect();\n                                var error = new Error();\n                                error.message = rsp.error.message;\n                                error.name = rsp.error.code.toString();\n                                // throw error\n                                reject(error);\n                            }\n                            this.refreshPackageId();\n                            log.logDebug(`4. subscribe callback then send fetch: ${this.packageId}`);\n                            log.reportLog('4. subscribe callback then send fetch');\n                            const timeF = new Date().getTime();\n                            (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n                            // 4. fetch messages\n                            yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                            resolve();\n                        }));\n                        log.logDebug(`3. login callback then send subscribe: ${this.packageId}`);\n                        log.reportLog('3. connect subscribe failed');\n                        const timeTh = new Date().getTime();\n                        (0, log_1.logDebug)(\"ConnectTime---login callback->\", timeTh - this.timeLog);\n                        yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                            log.logDebug('CONNECT: reconnect before send');\n                            yield this.connector.connect()\n                                .catch((err) => {\n                                (0, log_1.logDebug)('ConnectionManager connect error', err);\n                                reject(err);\n                            });\n                        }), {\n                            id: this.packageId.toString(),\n                            jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                            method: commands_1.CONNECT_METHOD_SUB,\n                            params: {\n                                topic: topic\n                            }\n                        });\n                    }));\n                    log.logDebug(`2. login called`);\n                    log.reportLog('2. connection manager connect call login');\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        yield this.connector.connect()\n                            .catch((err) => {\n                            (0, log_1.logDebug)('ConnectionManager connect error', err);\n                            reject(err);\n                        });\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_LOGIN,\n                        params: {\n                            token: jwtToken\n                        }\n                    });\n                    // 4. listen when dapp back to front, receive wallet public key\n                    this.connector.addPackageParse((event) => {\n                        var _a;\n                        log.logDebug(`connect: parse package`);\n                        log.logDebug(event);\n                        if (!(\"params\" in event) || !(\"data\" in event[\"params\"])) {\n                            this.parsePackage(event, true);\n                            return;\n                        }\n                        let rawMsg = (_a = event.params.data) === null || _a === void 0 ? void 0 : _a.message;\n                        if (typeof rawMsg !== 'undefined') {\n                            rawMsg = rawMsg.replace(/'/g, '\"');\n                            let parsedMessage = (0, safejson_1.safeJsonParse)(rawMsg);\n                            if (typeof parsedMessage !== 'string' && \"clientId\" in parsedMessage && parsedMessage.clientId && parsedMessage.clientId.length > 0) {\n                                this.connectedWalletPK = parsedMessage.clientId;\n                                log.logDebug(`this.connectedWalletPK  addPackageParse   ${this.connectedWalletPK}`);\n                                // exchange sender public key\n                                // cache wallet public key\n                                this.connectStorage.saveContent(this.connectedWalletPK, storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                                // cache crypto keypair\n                                this.saveCryptoKeyPair(this.crypto.stringifyKeypair());\n                            }\n                        }\n                        // ignore receive echo\n                        this.parsePackage(event, event.method === commands_1.CONNECT_METHOD_RECEIVE);\n                    });\n                }));\n                this.connector.connect().catch((err) => {\n                    (0, log_1.logDebug)('ConnectionManager connect error', err);\n                    reject(err);\n                });\n            });\n        });\n    }\n    disconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            yield this.connector.disconnect();\n            log.reportLog('connect disconnect');\n            //clean cached topic\n            //如果是恢复连接，就不清理解密public key\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            if (!fromRestore) {\n                this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                this.connectedWalletPK = '';\n                (0, log_1.logDebug)(`connectionManager disconnect() this.connectedWalletPK : ${this.connectedWalletPK}`);\n            }\n        });\n    }\n    addListener(event, success, fail) {\n        this.connector.addListener((0, safejson_1.safeJsonStringify)(event), (rawMsg) => {\n            rawMsg = rawMsg.replace(/'/g, '\"');\n            log.logDebug(`addListener ===> ${rawMsg}`);\n            if (typeof rawMsg !== 'undefined') {\n                var msgObj = (0, safejson_1.safeJsonParse)(rawMsg);\n                var msg = msgObj.message;\n                let result;\n                if (msg.trimStart().startsWith('{')) {\n                    result = msg;\n                }\n                else {\n                    if (msgObj.clientId && msgObj.clientId.length > 0) {\n                        this.connectedWalletPK = msgObj.clientId;\n                        this.connectStorage.saveContent(this.connectedWalletPK, storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                        log.logDebug(`this.connectedWalletPK  addListener   ${this.connectedWalletPK}`);\n                        log.logDebug(`this.cryptoKey  addListener   ${(0, utils_1.toHexString)(this.crypto.keyPair.publicKey)}`);\n                        // cache crypto keypair\n                        this.saveCryptoKeyPair(this.crypto.stringifyKeypair());\n                    }\n                    result = this.crypto.decrypt(msg, this.connectedWalletPK);\n                }\n                log.logDebug(`addListener ===> ${result}`);\n                return result;\n            }\n            return undefined;\n        }, success, fail);\n    }\n    sendRaw(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`message send =====> ${msg}`);\n            log.reportLog('connect send raw msg');\n            let message = msg;\n            log.logDebug(`message send =====encrypt message.length>>>> ${message.length}`);\n            // only one topic\n            let topic = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`message send =====topic>>>> ${topic === null || topic === void 0 ? void 0 : topic.content}`);\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                method: commands_1.CONNECT_METHOD_PUBLISH,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                params: {\n                    message: {\n                        topic: topic === null || topic === void 0 ? void 0 : topic.content,\n                        message: message,\n                        ttl: constants_1.OKXCONNECTOR_MESSAGE_TTL\n                    }\n                } // crypted\n            };\n            this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                // ack\n                if (rsp && rsp.error) {\n                    log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                }\n                else if (rsp && !rsp.error) {\n                    log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                }\n            }));\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n            return this.packageId;\n        });\n    }\n    send(msg_1) {\n        return __awaiter(this, arguments, void 0, function* (msg, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL) {\n            // make send msg payload\n            log.logDebug(`message send =====> ${msg}`);\n            log.reportLog('connect send msg');\n            if (!this.isWalletPKReady()) {\n                // channel not ready\n                throw new Error('connection not finish');\n            }\n            let message = this.crypto.encrypt(msg, this.connectedWalletPK);\n            log.logDebug(`message send =====encrypt message.length>>>> ${message.length}`);\n            log.reportEvent(report_1.OKXReportType.LOG, 'msg_size', message.length.toString());\n            // only one topic\n            let topic = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`message send =====topic>>>> ${topic === null || topic === void 0 ? void 0 : topic.content}`);\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                method: commands_1.CONNECT_METHOD_PUBLISH,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                params: {\n                    message: {\n                        topic: topic === null || topic === void 0 ? void 0 : topic.content,\n                        message: message,\n                        ttl: ttl\n                    }\n                } // crypted\n            };\n            this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                // ack\n                if (rsp && rsp.error) {\n                    log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                }\n                else if (rsp && !rsp.error) {\n                    log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                }\n            }));\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n            return this.packageId;\n        });\n    }\n    sendACK(msgId_1, success_1) {\n        return __awaiter(this, arguments, void 0, function* (msgId, success, reason = undefined) {\n            if (success === true) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    result: true\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n            else if (reason) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    error: {\n                        code: reason.code, //int\n                        message: reason.message\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    // send receive\n    sendReceive(msgId, messageId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECEIVE,\n                params: {\n                    data: {\n                        messageId: messageId,\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendConnectSessionInfo(msgId, messageId, topic, params) {\n        return __awaiter(this, void 0, void 0, function* () {\n        });\n    }\n    // send receive\n    // 1. fetch all \n    // 2. send back receive\n    // 3. check has more, if so, repeat from 1st step\n    sendFetchAndConsumeMessages(msgId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(msgId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic == topic) {\n                                let messageId = msg.messageId;\n                                log.reportLog('5. get fetch result');\n                                yield this.connector.getMsgPayloadFromHistory(msg);\n                                // send receive command to relay server\n                                this.refreshPackageId();\n                                yield this.sendReceive(this.packageId.toString(), messageId, topic);\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            log.reportLog('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_FETCHMSG,\n                params: {\n                    data: {\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    cleanCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.reportLog('connection cache clean called');\n            this.connectStorage.clearCache();\n        });\n    }\n    saveSessionContent(key, data) {\n        if (!data) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(data);\n        this.connectStorage.encryptStoreMsg(jsonData, storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n    }\n    getSessionContent(key) {\n        let jsonStr = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        if (jsonStr) {\n            let object = (0, safejson_1.safeJsonParse)(jsonStr);\n            return object;\n        }\n        return undefined;\n    }\n    getCurrentConnectionReady() {\n        return this.isWalletPKReady();\n    }\n}\nexports.ConnectionManager = ConnectionManager;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectorState = exports.CONNECT_JSONRPC_VER = exports.OKXCONNECTOR_MESSAGE_TTL = exports.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE = exports.OKXCONNECTOR_WS_URL_LIST = exports.OKXCONNECTOR_WS_URL_IDX_KEY = exports.OKXCONNECTOR_WS_URL_3 = exports.OKXCONNECTOR_WS_URL_2 = exports.OKXCONNECTOR_WS_URL_1 = exports.EVENT_EMITTER_MAX_LISTENERS = void 0;\nexports.EVENT_EMITTER_MAX_LISTENERS = 10;\nexports.OKXCONNECTOR_WS_URL_1 = \"wss://wsdexpri.okx.com/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_2 = \"wss://wsdexpri.okx.ac/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_3 = \"wss://wsdexpri.coinall.ltd/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_IDX_KEY = \"wuik\";\nexports.OKXCONNECTOR_WS_URL_LIST = [\n    exports.OKXCONNECTOR_WS_URL_1,\n    exports.OKXCONNECTOR_WS_URL_2,\n    exports.OKXCONNECTOR_WS_URL_3,\n];\nexports.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE = {\n    TIME_OUT: 3990,\n    CANCELED: 3991,\n    FINISHED: 3992,\n};\nexports.OKXCONNECTOR_MESSAGE_TTL = 300000;\n// --------------- JSON RPC ---------------\nexports.CONNECT_JSONRPC_VER = \"2.0\";\nexports.ConnectorState = {\n    InitState: 0,\n    Connecting: 1,\n    Connected: 2,\n    Disconnected: 3,\n    OnError: 4,\n};\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Engine = void 0;\nconst safejson_1 = require(\"../utils/safejson\");\nconst log_1 = require(\"../utils/log\");\nconst protocol_1 = require(\"../protocol\");\n// import {standardDeeplink, tonConnectSdkVersion} from \"../../ton/tonsdk/constants/version\";\nconst utils_1 = require(\"../utils\");\nconst utils_2 = require(\"../utils\");\nconst sessionUtils_1 = require(\"./sessionUtils\");\nconst url_1 = require(\"../utils/url\");\nclass Engine {\n    constructor(connectionManager) {\n        this.pendingRequests = new Map();\n        this.disconnectListener = [];\n        this.connectionManager = connectionManager;\n        // report api begin\n        (0, log_1.getDefaultReporter)().beginReport();\n        this.connectionManager.addListener(\"sdk_response\", (event, msg) => {\n            var jsonResponse = (0, safejson_1.safeJsonParse)(msg);\n            (0, log_1.logDebug)(`Engine ==>> addListener ==> success ==> ${jsonResponse}`);\n            this.handleResponse(event, jsonResponse);\n        }, function () {\n        });\n    }\n    addDisconnectListener(disconnecter) {\n        this.disconnectListener.push(disconnecter);\n    }\n    setSessionConnectingListener(sessionConnectingListener) {\n        this.sessionConnectingListener = sessionConnectingListener;\n    }\n    disconnect() {\n        (0, log_1.logDebug)('Engine ==>> disconnect');\n        this.pendingRequests.clear();\n    }\n    getRequestId() {\n        const requestId = Date.now().toString();\n        (0, log_1.logDebug)('Engine ==>> getRequestId ==>', requestId);\n        return requestId;\n    }\n    bindRequestForPromise(requestId, resolve) {\n        this.pendingRequests.set(requestId, resolve);\n    }\n    send(request, requestAnswer, option, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('Engine ==>> send  request==>', JSON.stringify(request));\n            const requestId = this.getRequestId();\n            try {\n                let packageId = yield this.connectionManager.send(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId })), ttl);\n                this.connectionManager.events.once(packageId.toString(), (event) => {\n                    var _a;\n                    (0, log_1.logDebug)(`Engine ==> send => onAck => ${(0, safejson_1.safeJsonStringify)(event)}`);\n                    if (event && event.result) {\n                        (_a = requestAnswer.onAck) === null || _a === void 0 ? void 0 : _a.call(requestAnswer);\n                    }\n                });\n                if (requestAnswer.resolve) {\n                    this.bindRequestForPromise(requestId, requestAnswer.resolve);\n                }\n            }\n            catch (e) {\n                return Promise.reject(e);\n            }\n        });\n    }\n    sendSession(sessionInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('[Connect] sendSession called:', sessionInfo);\n            const requestId = this.getRequestId();\n            let request = {\n                method: 'session_info',\n                params: { sessionInfo: sessionInfo }\n            };\n            yield this.connectionManager.sendRaw(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId })));\n            // try {\n            //     let packageId = await callForSuccess(() =>\n            //         , option)\n            //     this.connectionManager.events.once(packageId.toString(),(event)=>{\n            //         logDebug(`Engine ==> send => onAck => ${safeJsonStringify(event)}`)\n            //         if (event && event.result){\n            //             requestAnswer.onAck?.()\n            //         }\n            //     })\n            //     if (requestAnswer.resolve){\n            //         this.bindRequestForPromise(requestId, requestAnswer.resolve)\n            //     }\n            // }catch (e) {\n            //     return Promise.reject(e)\n            // }\n        });\n    }\n    handleResponse(event, response) {\n        (0, log_1.logDebug)(`Engine ==>> handleResponse_1  ======>response: ${(0, safejson_1.safeJsonStringify)(response)}`, event);\n        if (\"requestId\" in response) {\n            (0, log_1.logDebug)(\"Engine ==>> handleResponse_2  ===> in response\");\n            let requestId = response.requestId;\n            const resolve = this.pendingRequests.get(requestId);\n            if (resolve) {\n                (0, log_1.logDebug)(\"Engine ==>> handleResponse_3  ===> find resolve:\", resolve);\n                resolve(response);\n                // 从pendingRequests中删除这个Promise\n                this.pendingRequests.delete(requestId);\n            }\n            else {\n                (0, log_1.logDebug)(\"Engine ==>> handleResponse_3  ===> not find resolve:\");\n                if (response.method === \"disconnect\") {\n                    this.disconnectListener.forEach(listener => listener());\n                    this.disconnectListener = [];\n                    this.disconnect();\n                }\n                else if (response.method === \"session_connecting\") {\n                    (0, log_1.logDebug)(\"Engine ==>> handleResponse_4  ===> sessionConnectingListener\");\n                    if (this.sessionConnectingListener) {\n                        (0, log_1.logDebug)(\"Engine ==>> handleResponse_4  ===> sessionConnectingListener not null\");\n                        this.sessionConnectingListener();\n                        this.sessionConnectingListener = undefined;\n                    }\n                }\n            }\n        }\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.restoreConnect(sessionInfo.topic));\n            onConnectResult(sessionInfo);\n        });\n    }\n    conect(request, sessionConfig, onConnectResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            const connectInfo = this.connectionManager.getConnectInfo();\n            const requestId = this.getRequestId();\n            let openUniversalLink = (_a = sessionConfig.openUniversalUrl) !== null && _a !== void 0 ? _a : false;\n            const connectRequest = {\n                protocolVer: Number(protocol_1.tonConnectSdkVersion),\n                topic: connectInfo.channelId,\n                clientId: connectInfo.clientId,\n                requestId: requestId,\n                dAppInfo: sessionConfig.dappInfo,\n                requests: request,\n            };\n            const connectRequestStr = JSON.stringify(connectRequest);\n            const utf8Array = new TextEncoder().encode(connectRequestStr);\n            const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n            const deeplinkUrl = `${protocol_1.standardDeeplink}?param=${base64Encoded}`;\n            (0, log_1.logDebug)('engine ==>> connect ==>>deeplinkUrl:', deeplinkUrl);\n            const isIOS = (0, utils_2.isIos)();\n            (0, log_1.logDebug)(`engine ==>> connect ==>>isIOS: ${isIOS}   openUniversalLink: ${openUniversalLink}`);\n            if (isIOS && openUniversalLink) {\n                (0, log_1.logDebug)('bridge-provider ==>> connect_3');\n                (0, utils_1.openOKXDeeplinkWithFallback)(deeplinkUrl);\n            }\n            yield ((_b = this.connectionManager) === null || _b === void 0 ? void 0 : _b.disconnect(false));\n            this.bindRequestForPromise(requestId, (response) => {\n                let session = this.onConnect(response, sessionConfig, connectInfo.channelId);\n                onConnectResult(session, response);\n            });\n            try {\n                yield this.connectionManager.connect();\n            }\n            catch (e) {\n                (0, log_1.logDebug)('Engine conect error', e);\n                throw e;\n            }\n            if (!isIOS && openUniversalLink) {\n                (0, log_1.logDebug)('bridge-provider ==>> connect_4');\n                (0, utils_1.openOKXDeeplinkWithFallback)(deeplinkUrl);\n            }\n            return {\n                connectInfo: connectInfo,\n                deeplinkUrl: (0, utils_1.getUniversalLink)(deeplinkUrl)\n            };\n        });\n    }\n    onConnect(connectResponse, sessionConfig, topic) {\n        if (connectResponse.method == \"connect\") {\n            let namespaces = (0, sessionUtils_1.buildNameSpacesByConnectResponse)(connectResponse);\n            if (namespaces) {\n                let session = {\n                    topic: topic,\n                    sessionConfig: sessionConfig,\n                    namespaces: namespaces\n                };\n                return session;\n            }\n        }\n        return null;\n    }\n    universalConnect(request, sessionConfig, connectInfoAndUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b, _c, _d;\n                try {\n                    (0, log_1.logDebug)(\"engine universalConnect request :\", JSON.stringify(request));\n                    (0, log_1.logDebug)(\"engine universalConnect sessionConfig :\", JSON.stringify(sessionConfig));\n                    let universalRequest = [];\n                    request.forEach((item) => {\n                        let name = item.name;\n                        if (name.startsWith(\"requestAccounts\") || name.startsWith(\"ton\")) {\n                            universalRequest.push(item);\n                        }\n                    });\n                    (0, log_1.logDebug)(\"engine universalConnect universalRequest :\", JSON.stringify(universalRequest));\n                    const connectInfo = this.connectionManager.getConnectInfo();\n                    const requestId = this.getRequestId();\n                    let openUniversalLink = (_a = sessionConfig.openUniversalUrl) !== null && _a !== void 0 ? _a : false;\n                    const universalConnectRequest = {\n                        protocolVer: Number(protocol_1.tonConnectSdkVersion),\n                        topic: connectInfo.channelId,\n                        clientId: connectInfo.clientId,\n                        requestId: requestId,\n                        dAppInfo: sessionConfig.dappInfo,\n                        requests: universalRequest,\n                        redirect: (_b = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _b !== void 0 ? _b : \"none\"\n                    };\n                    const base64Encoded = (0, url_1.encodeConnectParams)(universalConnectRequest);\n                    universalConnectRequest.redirect = (_c = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _c !== void 0 ? _c : \"none\";\n                    (0, log_1.logDebug)('engine universalConnect ==>>universalConnectRequest:', JSON.stringify(universalConnectRequest));\n                    var openOKXLink = \"\";\n                    // open app wallet\n                    if (openUniversalLink) {\n                        openOKXLink = (0, url_1.getOKXLink)(universalConnectRequest, sessionConfig.useMini, sessionConfig.tmaReturnUrl);\n                        (0, log_1.logDebug)('engine universalConnect ==>>openOKXLink:', openOKXLink);\n                    }\n                    const openMethod = () => sessionConfig.useMini ? (0, url_1.openOKXTMAWalletlinkWithFallback)(openOKXLink) :\n                        (0, utils_1.useShortLink)() ? (0, utils_1.openOKXUniversalLink)(openOKXLink) : (0, utils_1.openOKXDeeplinkWithFallback)(openOKXLink);\n                    (0, log_1.logDebug)('engine universalConnect ==>>openOKXLink:', openOKXLink);\n                    const isIOS = (0, utils_2.isIos)();\n                    if (isIOS && openUniversalLink) {\n                        (0, log_1.logDebug)(`engine universalConnect ==>>isIOS: ${isIOS}   openUniversalLink: ${openUniversalLink}`);\n                        openMethod();\n                    }\n                    yield ((_d = this.connectionManager) === null || _d === void 0 ? void 0 : _d.disconnect(false));\n                    this.bindRequestForPromise(requestId, (response) => {\n                        var _a, _b, _c, _d;\n                        try {\n                            let connectResponse = response;\n                            if (connectResponse.method == \"connect\") {\n                                (0, log_1.logDebug)(\"engin  universalConnect success connectResponse:>>>\", JSON.stringify(connectResponse));\n                                let namespaces = (0, sessionUtils_1.buildNameSpacesByConnectResponse)(connectResponse);\n                                if (namespaces) {\n                                    let walletName = undefined;\n                                    if (((_b = (_a = connectResponse.payload) === null || _a === void 0 ? void 0 : _a.responses) === null || _b === void 0 ? void 0 : _b[0]) && \"walletName\" in connectResponse.payload.responses[0]) {\n                                        walletName = connectResponse.payload.responses[0]['walletName'];\n                                    }\n                                    let session = {\n                                        topic: connectInfo.channelId,\n                                        sessionConfig: sessionConfig,\n                                        namespaces: namespaces,\n                                        wallet: Object.assign(Object.assign({}, (_c = connectResponse.payload) === null || _c === void 0 ? void 0 : _c.wallet), { walletName: walletName }),\n                                    };\n                                    let methodsResponse = connectResponse.payload.responses.find(item => item.name === 'requestAccounts');\n                                    if (methodsResponse && methodsResponse.connectRequestMethods) {\n                                        session.signResponse = methodsResponse.connectRequestMethods;\n                                    }\n                                    (0, log_1.logDebug)(\"engin  universalConnect success session:>>>\", JSON.stringify(session));\n                                    resolve(session);\n                                }\n                                else {\n                                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n                                }\n                            }\n                            else if (connectResponse.method == \"connect_error\" && ((_d = connectResponse.payload) === null || _d === void 0 ? void 0 : _d.code)) {\n                                throw new protocol_1.OKXConnectError(connectResponse.payload.code);\n                            }\n                        }\n                        catch (e) {\n                            reject(e);\n                        }\n                    });\n                    try {\n                        yield this.connectionManager.connect();\n                    }\n                    catch (e) {\n                        (0, log_1.logDebug)('Engine universalConnect error', e);\n                        throw e;\n                    }\n                    if (!isIOS && openUniversalLink) {\n                        openMethod();\n                    }\n                    (0, log_1.logDebug)('engin  universalConnect ==>> connectInfoAndUrl:', connectInfoAndUrl);\n                    this.sendSession(base64Encoded);\n                    if (connectInfoAndUrl) {\n                        const info = {\n                            connectRequest: universalConnectRequest,\n                            redirect: sessionConfig.redirect,\n                            tmaReturnUrl: sessionConfig.tmaReturnUrl,\n                        };\n                        (0, log_1.logDebug)(\"universalConnect connectInfoAndUrl info :\", JSON.stringify(info));\n                        connectInfoAndUrl(info);\n                    }\n                }\n                catch (error) {\n                    (0, log_1.logDebug)(\"Engine universalConnect catch error\", error);\n                    reject(error);\n                }\n            }));\n        });\n    }\n}\nexports.Engine = Engine;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = exports.Engine = exports.WalletConnectionManager = exports.ConnectionManager = exports.OKXWalletConnector = void 0;\nvar connect_1 = require(\"./connect\");\nObject.defineProperty(exports, \"OKXWalletConnector\", { enumerable: true, get: function () { return connect_1.OKXWalletConnector; } });\nvar connectionManager_1 = require(\"./connectionManager\");\nObject.defineProperty(exports, \"ConnectionManager\", { enumerable: true, get: function () { return connectionManager_1.ConnectionManager; } });\nvar walletConnectionManager_1 = require(\"./walletConnectionManager\");\nObject.defineProperty(exports, \"WalletConnectionManager\", { enumerable: true, get: function () { return walletConnectionManager_1.WalletConnectionManager; } });\nvar engine_1 = require(\"./engine\");\nObject.defineProperty(exports, \"Engine\", { enumerable: true, get: function () { return engine_1.Engine; } });\nvar storage_1 = require(\"./storage\");\nObject.defineProperty(exports, \"Storage\", { enumerable: true, get: function () { return storage_1.Storage; } });\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MULTICODEC_ED25519_LENGTH = exports.MULTICODEC_ED25519_HEADER = exports.MULTICODEC_ED25519_BASE = exports.MULTICODEC_ED25519_ENCODING = exports.DID_METHOD = exports.DID_PREFIX = exports.DID_DELIMITER = exports.KEY_PAIR_SEED_LENGTH = exports.DATA_ENCODING = exports.JSON_ENCODING = exports.JWT_ENCODING = exports.JWT_DELIMITER = exports.JWT_IRIDIUM_TYP = exports.JWT_IRIDIUM_ALG = exports.JWTHeaderType = void 0;\nexports.generateKeyPair = generateKeyPair;\nexports.decodeJSON = decodeJSON;\nexports.encodeJSON = encodeJSON;\nexports.encodeIss = encodeIss;\nexports.decodeIss = decodeIss;\nexports.encodeSig = encodeSig;\nexports.decodeSig = decodeSig;\nexports.encodeData = encodeData;\nexports.decodeData = decodeData;\nexports.encodeJWT = encodeJWT;\nexports.decodeJWT = decodeJWT;\nexports.signJWT = signJWT;\nexports.verifyJWT = verifyJWT;\nconst ed25519 = __importStar(require(\"@stablelib/ed25519\"));\nconst safejson_1 = require(\"../utils/safejson\");\nconst utils_1 = require(\"../utils/utils\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst log = __importStar(require(\"../utils/log\"));\nconst stringUtils_1 = require(\"../utils/stringUtils\");\nexports.JWTHeaderType = \"dapp\";\nexports.JWT_IRIDIUM_ALG = \"EdDSA\";\nexports.JWT_IRIDIUM_TYP = \"JWT\";\nexports.JWT_DELIMITER = \".\";\nexports.JWT_ENCODING = \"base64url\";\nexports.JSON_ENCODING = \"utf8\";\nexports.DATA_ENCODING = \"utf8\";\nexports.KEY_PAIR_SEED_LENGTH = 32;\nexports.DID_DELIMITER = \":\";\nexports.DID_PREFIX = \"did\";\nexports.DID_METHOD = \"key\";\nexports.MULTICODEC_ED25519_ENCODING = \"base58btc\";\nexports.MULTICODEC_ED25519_BASE = \"z\";\nexports.MULTICODEC_ED25519_HEADER = \"K36\";\nexports.MULTICODEC_ED25519_LENGTH = 32;\nfunction generateKeyPair() {\n    // let local_seed = randomBytes(KEY_PAIR_SEED_LENGTH)\n    // return ed25519.generateKeyPairFromSeed(local_seed);\n    return tweetnacl_1.default.sign.keyPair();\n}\nfunction decodeJSON(str) {\n    return (0, safejson_1.safeJsonParse)((0, stringUtils_1.okxtoString)((0, stringUtils_1.okxfromString)(str, exports.JWT_ENCODING), exports.JSON_ENCODING));\n}\nfunction encodeJSON(val) {\n    return (0, stringUtils_1.okxtoString)((0, stringUtils_1.okxfromString)((0, safejson_1.safeJsonStringify)(val), exports.JSON_ENCODING), exports.JWT_ENCODING);\n}\nfunction encodeIss(publicKey) {\n    log.logDebug(`publicKey: ${(0, utils_1.toHexString)(publicKey)}`);\n    var publicKeyStr = (0, stringUtils_1.okxtoString)(publicKey, exports.MULTICODEC_ED25519_ENCODING);\n    return [exports.DID_PREFIX, exports.DID_METHOD, publicKeyStr].join(exports.DID_DELIMITER);\n}\nfunction decodeIss(issuer) {\n    const [prefix, method, multicodec] = issuer.split(exports.DID_DELIMITER);\n    if (prefix !== exports.DID_PREFIX || method !== exports.DID_METHOD) {\n        throw new Error(`Issuer must be a DID with method \"key\"`);\n    }\n    if (multicodec === undefined) {\n        throw new Error('multicodec is undefined');\n    }\n    const publicKey = (0, stringUtils_1.okxfromString)(multicodec, exports.MULTICODEC_ED25519_ENCODING);\n    if (publicKey === undefined || publicKey.length !== exports.MULTICODEC_ED25519_LENGTH) {\n        throw new Error(`Issuer must be a public key with length 32 bytes`);\n    }\n    return publicKey;\n}\n// ---------- Signature ----------------------------------------------- //\nfunction encodeSig(bytes) {\n    return (0, stringUtils_1.okxtoString)(bytes, exports.JWT_ENCODING);\n}\nfunction decodeSig(encoded) {\n    return (0, stringUtils_1.okxfromString)(encoded, exports.JWT_ENCODING);\n}\n// ---------- Data ----------------------------------------------- //\nfunction encodeData(params) {\n    return (0, stringUtils_1.okxfromString)([encodeJSON(params.header), encodeJSON(params.payload)].join(exports.JWT_DELIMITER), exports.DATA_ENCODING);\n}\nfunction decodeData(data) {\n    var _a, _b;\n    const params = (0, stringUtils_1.okxtoString)(data, exports.DATA_ENCODING).split(exports.JWT_DELIMITER);\n    const header = decodeJSON((_a = params[0]) !== null && _a !== void 0 ? _a : '{}');\n    const payload = decodeJSON((_b = params[1]) !== null && _b !== void 0 ? _b : '{}');\n    return { header, payload };\n}\n// ---------- JWT ----------------------------------------------- //\nfunction encodeJWT(params) {\n    return [encodeJSON(params.header), encodeJSON(params.payload), encodeSig(params.signature)].join(exports.JWT_DELIMITER);\n}\nfunction decodeJWT(jwt) {\n    var _a, _b, _c;\n    const params = jwt.split(exports.JWT_DELIMITER);\n    const header = decodeJSON((_a = params[0]) !== null && _a !== void 0 ? _a : '{}');\n    const payload = decodeJSON((_b = params[1]) !== null && _b !== void 0 ? _b : '{}');\n    const signature = decodeSig((_c = params[2]) !== null && _c !== void 0 ? _c : '{}');\n    const data = (0, stringUtils_1.okxfromString)(params.slice(0, 2).join(exports.JWT_DELIMITER), exports.DATA_ENCODING);\n    return { header, payload, signature, data };\n}\nfunction signJWT(sub_1, aud_1, ttl_1, keyPair_1) {\n    return __awaiter(this, arguments, void 0, function* (sub, aud, ttl, keyPair, iat = Math.floor(Date.now())) {\n        const header = { alg: exports.JWT_IRIDIUM_ALG, typ: exports.JWT_IRIDIUM_TYP };\n        const iss = encodeIss(keyPair.publicKey);\n        const exp = iat + ttl;\n        const act = \"authenticate user\";\n        const payload = { iss, sub, aud, act, iat, exp };\n        const data = encodeData({ header, payload });\n        // const signature = ed25519.sign(keyPair.secretKey, data);\n        log.logDebug(`get sec kp: ${keyPair.secretKey} {${keyPair.secretKey.length}}`);\n        const signature = tweetnacl_1.default.sign.detached(data, keyPair.secretKey);\n        return encodeJWT({ header, payload, signature });\n    });\n}\nfunction verifyJWT(jwt) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { header, payload, data, signature } = decodeJWT(jwt);\n        if (header.alg !== exports.JWT_IRIDIUM_ALG || header.typ !== exports.JWT_IRIDIUM_TYP) {\n            throw new Error(\"JWT must use EdDSA algorithm\");\n        }\n        const publicKey = decodeIss(payload.iss);\n        return ed25519.verify(publicKey, data, signature);\n    });\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCONNECTOR_JWT_TTL = exports.OKXCONNECTOR_JWT_WALLET_SIDE = exports.OKXCONNECTOR_JWT_SIDE = void 0;\nexports.OKXCONNECTOR_JWT_SIDE = \"wallet\";\nexports.OKXCONNECTOR_JWT_WALLET_SIDE = \"dapp\";\nexports.OKXCONNECTOR_JWT_TTL = 86400000;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildNameSpacesByConnectResponse = buildNameSpacesByConnectResponse;\nexports.buildRequestAccountNameSpacesByConnectResponse = buildRequestAccountNameSpacesByConnectResponse;\nconst log_1 = require(\"../utils/log\");\nfunction buildNameSpacesByConnectResponse(connectResponse) {\n    let requestAccountNameSpaces = buildRequestAccountNameSpacesByConnectResponse(connectResponse);\n    return requestAccountNameSpaces;\n}\nfunction buildRequestAccountNameSpacesByConnectResponse(connectResponse) {\n    let result = {};\n    (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start connectResponse>>', JSON.stringify(connectResponse));\n    let universalResponse = connectResponse.payload.responses.find(item => item.name === 'requestAccounts');\n    const tonAddress = connectResponse.payload.responses.find(item => item.name === 'ton_addr');\n    const tonProof = connectResponse.payload.responses.find(item => item.name === 'ton_proof');\n    if (tonAddress && !universalResponse) { //adapt tonsdk\n        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse adapt ton data >>');\n        let address = tonAddress.address;\n        address = 'ton:' + tonAddress.network + \":\" + address;\n        let data = {\n            ton_addr: tonAddress\n        };\n        if (tonProof) {\n            data.ton_proof = tonProof;\n        }\n        universalResponse = {\n            name: \"requestAccounts\",\n            accounts: [{\n                    namespace: 'ton',\n                    addresses: [address],\n                    methods: ['ton_sendTransaction'],\n                    extra: {},\n                    data: data,\n                }]\n        };\n    }\n    (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse end universalResponse>>>', JSON.stringify(universalResponse));\n    universalResponse.accounts.forEach(item => {\n        var chains = [];\n        var accounts = [];\n        item.addresses.forEach(addressItem => {\n            var addressArr = addressItem.split(\":\");\n            (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse addressArr>>', addressArr.length);\n            if (addressArr.length >= 3) {\n                let chain = addressArr.slice(0, 2).join(\":\");\n                chains.push(chain);\n                accounts.push(addressItem);\n                (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse chain:>>', chain, \"addressItem:\", addressItem);\n            }\n        });\n        if (item.data && item.data.ton_addr) {\n            item.data.ton_addr.name = 'ton_addr';\n        }\n        if (item.data && item.data.ton_proof) {\n            item.data.ton_proof.name = 'ton_proof';\n        }\n        result[item.namespace] = {\n            chains: chains,\n            accounts: accounts,\n            methods: item.methods,\n            extra: item.extra,\n            payload: item.data\n        };\n        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse result>>', JSON.stringify(result));\n    });\n    return result;\n}\n/*export function buildTonNameSpaceByConnectResponse(connectResponse: ConnectResponseSuccess): Namespaces | undefined {\n    const tonAddrItem: TonAddressItemReply = connectResponse.payload.responses.find(\n        item => item.name === 'ton_addr'\n    ) as TonAddressItemReply;\n\n    const tonProfItem: TonProofItemReply = connectResponse.payload.responses.find(\n        item => item.name === 'ton_proof'\n    ) as TonProofItemReply;\n\n    if (!tonAddrItem) {\n        return undefined\n    }\n\n    return {\n        NameSpaceKeyTON: {\n            chains: [tonAddrItem.network],\n            accounts: [],\n            methods: connectResponse.payload.wallet.features?.ton,\n            payload: {\n                tonAccount: {\n                    address: tonAddrItem.address,\n                    chain: tonAddrItem.network,\n                    walletStateInit: tonAddrItem.walletStateInit,\n                    publicKey: tonAddrItem.publicKey\n                },\n                tonProof: tonProfItem\n            }\n        }\n    }\n}*/\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = void 0;\nconst storageconstants_1 = require(\"./storageconstants\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst utils_1 = require(\"../utils/utils\");\nconst utils_2 = require(\"../utils\");\nconst log = __importStar(require(\"../utils/log\"));\nconst utils_3 = require(\"../utils\");\nconst crypto_js_1 = require(\"crypto-js\");\nclass Storage {\n    constructor(subKey, beforeKey = undefined) {\n        const localStorage = (0, utils_1.resolveLocalStorage)();\n        // 0. check and upgrade beforeKey\n        log.logDebug('------ update before cache ------');\n        if (beforeKey) {\n            this.checkAndUpgradeCache(beforeKey, subKey);\n        }\n        // 1. load data from local storage\n        this.storeKey = '';\n        this.cipherIV = '';\n        this.subKey = subKey;\n        log.logDebug('--------get current local storage --------');\n        log.logDebug(localStorage);\n        const cacheStr = localStorage.getItem(Storage.cacheKey + subKey);\n        if (typeof cacheStr === \"undefined\" || cacheStr === null) {\n            log.logDebug(\"with no cache\");\n            this.cache = {};\n            return;\n        }\n        log.logDebug(cacheStr);\n        if ((cacheStr === null || cacheStr === void 0 ? void 0 : cacheStr.length) > 0) {\n            var cacheObj = (0, utils_2.safeJsonParse)(cacheStr);\n            this.cache = cacheObj;\n        }\n        log.logDebug(`get cache obj: ${this.cache}`);\n        if (typeof this.cache === 'undefined' || this.cache == null) {\n            this.cache = {};\n        }\n    }\n    checkAndUpgradeCache(fromCacheKey, toCacheKey) {\n        if (fromCacheKey && fromCacheKey.length > 0 && toCacheKey && toCacheKey.length > 0) {\n            // 1. get all infos from from-cache-key\n            log.logDebug('--------get current local storage --------');\n            log.logDebug(localStorage);\n            const cacheStr = localStorage.getItem(Storage.cacheKey + fromCacheKey);\n            if (typeof cacheStr === \"undefined\" || cacheStr === null) {\n                log.logDebug(\"no pre cache content\");\n                return;\n            }\n            log.logDebug(cacheStr);\n            if ((cacheStr === null || cacheStr === void 0 ? void 0 : cacheStr.length) > 0) {\n                // 2. save to to-cache-key\n                log.logDebug(\"write in cache content: \", fromCacheKey, '->', toCacheKey);\n                localStorage.setItem(Storage.cacheKey + toCacheKey, cacheStr);\n                // 3. clean from item\n                log.logDebug(\"clean in cache content: \", fromCacheKey);\n                localStorage.removeItem(Storage.cacheKey + fromCacheKey);\n            }\n        }\n        else {\n            log.logDebug('no pre cache key:', fromCacheKey);\n        }\n    }\n    saveContent(content, key, id = '-') {\n        let item = {\n            id: id,\n            timestamp: Date.now().toString(),\n            content: content\n        };\n        this.saveItem(item, key);\n    }\n    saveItem(item, key) {\n        let localKey = Storage.cacheKey + this.subKey;\n        const localStorage = (0, utils_1.resolveLocalStorage)();\n        log.logDebug(this.cache);\n        log.logDebug(`get cache obj: ${this.cache}, ${key}, ${item}`);\n        this.cache[key] = item;\n        let totalCacheStr = (0, utils_2.safeJsonStringify)(this.cache);\n        log.logDebug(`STORAGE: ${key} @ ${this.cache}`);\n        localStorage.setItem(localKey, totalCacheStr);\n    }\n    getItem(key) {\n        log.logDebug(`STORAGE >> getItem: ${key} @ ${this.cache}`);\n        return this.cache[key];\n    }\n    getCachedPBKDF2InfoKey() {\n        var _a, _b, _c, _d;\n        const pwLen = 32;\n        const saltLen = 24;\n        if (this.storeKey.length > 0 && ((_a = this.cipherIV) === null || _a === void 0 ? void 0 : _a.length) > 0) {\n            return {\n                pw: this.storeKey,\n                iv: this.cipherIV\n            };\n        }\n        let salt = (_b = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGER_CRYPTO_SALT)) === null || _b === void 0 ? void 0 : _b.content;\n        if (!salt) {\n            salt = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(saltLen));\n            this.saveContent(salt, storageconstants_1.OKXCONNECTOR_STORAGER_CRYPTO_SALT);\n        }\n        let pw = (_c = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD)) === null || _c === void 0 ? void 0 : _c.content;\n        if (!pw) {\n            pw = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(pwLen));\n            this.saveContent(pw, storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD);\n        }\n        let cipherIV = (_d = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV)) === null || _d === void 0 ? void 0 : _d.content;\n        if (!cipherIV) {\n            // let ivBuffer = Buffer.from(nacl.randomBytes(16))\n            let ivBuffer = tweetnacl_1.default.randomBytes(16);\n            cipherIV = (0, utils_1.toHexString)(ivBuffer);\n            this.saveContent(cipherIV, storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV);\n        }\n        this.cipherIV = cipherIV;\n        this.storeKey = (0, crypto_js_1.PBKDF2)(pw, salt, { iterations: 10 }).toString();\n        return {\n            pw: this.storeKey,\n            iv: this.cipherIV\n        };\n    }\n    encryptStoreMsg(msg, key) {\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg start ${Date.now()}`);\n        let storeInfo = this.getCachedPBKDF2InfoKey();\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg mid ${Date.now()}`);\n        var result = crypto_js_1.AES.encrypt(msg, storeInfo.pw).toString();\n        this.saveContent(result, key);\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg end ${Date.now()}`);\n    }\n    getAndDecrypt(key) {\n        (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt start ${Date.now()}`);\n        let item = this.getItem(key);\n        if (item && item.content) {\n            let storeInfo = this.getCachedPBKDF2InfoKey();\n            (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt mid ${Date.now()}`);\n            let result = crypto_js_1.AES.decrypt(item.content, storeInfo.pw).toString(crypto_js_1.enc.Utf8);\n            (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt end ${Date.now()}`);\n            return result;\n        }\n        return null;\n    }\n    clearCache(key = undefined) {\n        if (key === undefined) {\n            // clean all\n            this.cache = {};\n            let localKey = Storage.cacheKey + this.subKey;\n            localStorage.setItem(localKey, '');\n        }\n        else {\n            let localKey = Storage.cacheKey + this.subKey;\n            const localStorage = (0, utils_1.resolveLocalStorage)();\n            log.logDebug(this.cache);\n            this.cache[key] = null;\n            let totalCacheStr = (0, utils_2.safeJsonStringify)(this.cache);\n            log.logDebug(`STORAGE: clean key ${key} @ ${this.cache}`);\n            localStorage.setItem(localKey, totalCacheStr);\n        }\n    }\n}\nexports.Storage = Storage;\nStorage.cacheKey = 'OKXStorageKey';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCONNECTOR_STORAGE_CIPHER_METHOD = exports.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV = exports.OKXCONNECTOR_STORAGER_CRYPTO_SALT = exports.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD = exports.OKXCONNECTOR_TON_KEY = exports.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE = exports.OKXCONNECTOR_TOKEN_CACHE = exports.OKXCONNECTOR_JWT_KEY = exports.OKXCONNECTOR_SESSION_PREFIX_KEY = exports.OKXCONNECTOR_CRYPTO_KEY = exports.OKXCONNECTOR_CACHE_KEY_DAPP = exports.OKXCONNECTOR_CACHE_KEY = void 0;\nexports.OKXCONNECTOR_CACHE_KEY = \"ck\";\nexports.OKXCONNECTOR_CACHE_KEY_DAPP = \"ck_dapp\";\nexports.OKXCONNECTOR_CRYPTO_KEY = \"cck_k\";\nexports.OKXCONNECTOR_SESSION_PREFIX_KEY = \"cspk_\";\nexports.OKXCONNECTOR_JWT_KEY = \"cjk_k\";\nexports.OKXCONNECTOR_TOKEN_CACHE = \"ct\";\nexports.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE = \"csp\";\nexports.OKXCONNECTOR_TON_KEY = \"OKXStorage_ctc\";\nexports.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD = \"scp\";\nexports.OKXCONNECTOR_STORAGER_CRYPTO_SALT = \"scs\";\nexports.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV = \"scpc\";\nexports.OKXCONNECTOR_STORAGE_CIPHER_METHOD = \"aes-256-cbc\";\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnectionManagerEvent = exports.WalletConnectionManagerTopicInfoCacheKey = void 0;\nexports.WalletConnectionManagerTopicInfoCacheKey = \"wcmtic\";\nexports.WalletConnectionManagerEvent = {\n    RECEIVE_REQUEST: \"payload\"\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnectionManager = void 0;\nconst connect_1 = require(\"./connect\");\nconst commands_1 = require(\"./commands\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst jwtconstants_1 = require(\"./jwtconstants\");\nconst constants_1 = require(\"./constants\");\nconst walletConnectionConstants_1 = require(\"./walletConnectionConstants\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils/utils\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst jwt_1 = require(\"./jwt\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst utils_2 = require(\"../utils\");\nclass WalletConnectionManager {\n    constructor() {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.communicateEvents = new eventemitter3_1.EventEmitter();\n        log.logDebug('connect manager construct');\n        // local storage\n        this.connectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n        // this.crypto = new SessionCrypto()\n        this.jwtKeyPair = this.getCachedJWTKeyPair();\n        this.saveJWTKeyPair(this.jwtKeyPair);\n        // wss connection\n        this.connector = new connect_1.OKXWalletConnector(constants_1.OKXCONNECTOR_WS_URL_1);\n        this.packageId = Date.now();\n        // connection state\n        this.sessionCryptoInfoMap = new Map();\n        // log.logDebug(`this.connectedWalletPK  constructor   ${this.connectedWalletPK}`)\n        this.inLogin = false;\n        this.isLogined = false;\n    }\n    refreshPackageId(offset = 0) {\n        this.packageId = Date.now() + offset;\n    }\n    saveCryptoKeyPair(topicId, keyPair) {\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(keyPair);\n        // encrypt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_CRYPTO_KEY + topicId);\n    }\n    getCachedCryptoKeyPair(topicId) {\n        // decrypt kp\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_CRYPTO_KEY + topicId);\n        const content = kp;\n        if (typeof content == 'string') {\n            log.logDebug('get cached crypto key:');\n            log.logDebug(content);\n            let keyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            return keyPairInfo;\n        }\n        else {\n            this.connectStorage.clearCache();\n        }\n        return null;\n    }\n    saveJWTKeyPair(keyPair) {\n        var strkeyPair = {\n            publicKey: (0, utils_1.toHexString)(keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(keyPair.secretKey)\n        };\n        log.logDebug('save jwt kp');\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(strkeyPair);\n        log.logDebug(cacheInfo);\n        // encrypt jwt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        log.logDebug('after save jwt kp');\n    }\n    getCachedJWTKeyPair() {\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            // TODO: decrypt jwt kp\n            log.logDebug('get cached jwt kp:');\n            log.logDebug(content);\n            let strKeyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            log.logDebug('save jwt kp');\n            log.logDebug(strKeyPairInfo);\n            var keyPair = {\n                publicKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.publicKey),\n                secretKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.secretKey)\n            };\n            return keyPair;\n        }\n        else {\n            return (0, jwt_1.generateKeyPair)();\n        }\n    }\n    isTopicPublicKeyExist(topicId) {\n        log.logDebug(`isTopicPublicKeyExist  ===> ${topicId}`);\n        return this.sessionCryptoInfoMap.get(topicId);\n    }\n    makeJWT(timestampStr) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, jwt_1.signJWT)(timestampStr, jwtconstants_1.OKXCONNECTOR_JWT_WALLET_SIDE, jwtconstants_1.OKXCONNECTOR_JWT_TTL, // 24h\n            this.jwtKeyPair);\n        });\n    }\n    parseInternalMsg(internalMsg) {\n        try {\n            let internalObj = (0, safejson_1.safeJsonParse)(internalMsg);\n            let origin = internalObj['ivur-igbfft-ptjip'];\n            if (origin && origin.length > 0) {\n                let originContent = (0, utils_2.base64decode)(origin, true);\n                return originContent.toString();\n            }\n        }\n        catch (error) {\n            log.logError('parse internal msg', error);\n        }\n    }\n    updateClientId(topic, clientId) {\n        let sessionInfo = this.sessionCryptoInfoMap.get(topic);\n        (0, log_1.logDebug)('updateClientId', sessionInfo, topic, clientId);\n        if (sessionInfo && clientId && clientId.length > 0) {\n            if (sessionInfo.cid) {\n                // check\n                let lastCheck = (0, utils_1.getLastSixMd5Hash)(clientId);\n                if (sessionInfo.cid == lastCheck) {\n                    sessionInfo.dappPublicKey = clientId;\n                }\n                else {\n                    log.logError('cid check failed', sessionInfo, topic, clientId);\n                }\n            }\n            else {\n                sessionInfo.dappPublicKey = clientId;\n            }\n            // \n            this.syncCacheSessionInfo();\n        }\n        return false;\n    }\n    parsePackage(topic_1, input_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, input, ignoreACK = false) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;\n            this.events.emit(input.id, input);\n            // emit event\n            let sessionInfo = this.sessionCryptoInfoMap.get(topic);\n            log.logDebug('get sessionInfo for decrypt topic:', topic);\n            log.logDebug('get sessionInfo for decrypt:', input.id, topic, sessionInfo, this.sessionCryptoInfoMap);\n            if (sessionInfo && input.params.data) {\n                if ((_a = input.params.data) === null || _a === void 0 ? void 0 : _a.message) {\n                    // try parse internal message\n                    if ((_b = input.params.data) === null || _b === void 0 ? void 0 : _b.isInternalData) {\n                        let inner_message = (_c = input.params.data) === null || _c === void 0 ? void 0 : _c.message;\n                        let inner_topic = (_d = input.params.data) === null || _d === void 0 ? void 0 : _d.topic;\n                        let originContent = this.parseInternalMsg(inner_message);\n                        (0, log_1.logDebug)('parse internal origin: ', originContent);\n                        if (originContent && originContent.length > 0) {\n                            this.communicateEvents.emit(\"origin\", originContent, inner_topic);\n                        }\n                    }\n                    else {\n                        // try parse message base64\n                        try {\n                            let message = (_e = input.params.data) === null || _e === void 0 ? void 0 : _e.message;\n                            if (message.trimStart().startsWith('{')) {\n                                let messageObj = (0, safejson_1.safeJsonParse)(message);\n                                if (messageObj.method) {\n                                    if (messageObj.method == 'session_info') {\n                                        let sessionInfoString = messageObj.params.sessionInfo;\n                                        let base64Content = (0, utils_2.base64decode)(sessionInfoString, false);\n                                        (0, log_1.logDebug)(\"wallet connection manager requset base64Content:\", base64Content);\n                                        (0, log_1.logDebug)(\"base64Content:\" + base64Content);\n                                        let inner_connection = base64Content.toObject();\n                                        this.updateClientId(topic, inner_connection.clientId);\n                                    }\n                                    (0, log_1.logDebug)('<<< parse raw msg:', topic, messageObj);\n                                    this.communicateEvents.emit(topic, message);\n                                }\n                            }\n                            else {\n                                let message = sessionInfo.crypto.decryptWallet((_f = input.params.data) === null || _f === void 0 ? void 0 : _f.message, sessionInfo.dappPublicKey);\n                                (0, log_1.logDebug)('<<< receive msg:', topic, message);\n                                this.communicateEvents.emit(topic, message);\n                            }\n                        }\n                        catch (error) {\n                            let message = sessionInfo.crypto.decryptWallet((_g = input.params.data) === null || _g === void 0 ? void 0 : _g.message, sessionInfo.dappPublicKey);\n                            (0, log_1.logDebug)('<<< receive msg:', topic, message);\n                            this.communicateEvents.emit(topic, message);\n                        }\n                    }\n                }\n                else {\n                }\n            }\n            // send back ACK\n            if (!ignoreACK) {\n                yield this.sendACK(input.id, true);\n                if (topic) {\n                    let inputObj = input;\n                    if ((_j = (_h = inputObj.params) === null || _h === void 0 ? void 0 : _h.data) === null || _j === void 0 ? void 0 : _j.messageId) {\n                        this.refreshPackageId();\n                        yield this.sendReceive(this.packageId.toString(), (_l = (_k = inputObj.params) === null || _k === void 0 ? void 0 : _k.data) === null || _l === void 0 ? void 0 : _l.messageId, topic);\n                    }\n                }\n            }\n        });\n    }\n    recovrySessionInfoFromCache() {\n        // get topic ids and keys from session\n        // WalletConnectionCryptoCacheMap\n        // {[topicId]: {cryptoKeypair: {publicKey:string, secretKey:string}, dappPublicKey:clientId}}\n        let jsonStr = this.connectStorage.getAndDecrypt(walletConnectionConstants_1.WalletConnectionManagerTopicInfoCacheKey);\n        log.logDebug('get cached sessionInfos:', jsonStr);\n        if (jsonStr) {\n            let cacheMap = (0, safejson_1.safeJsonParse)(jsonStr);\n            for (let topicId in cacheMap) {\n                let topicItem = cacheMap[topicId];\n                log.logDebug('make topicItem:', topicItem);\n                let cryptoItem = {\n                    topic: topicId,\n                    crypto: new crypto_1.SessionCrypto({\n                        publicKey: topicItem.cryptoKeyPair.publicKey,\n                        secretKey: topicItem.cryptoKeyPair.secretKey\n                    }),\n                    dappPublicKey: topicItem.dappPublicKey,\n                    cid: topicItem.cid\n                };\n                this.sessionCryptoInfoMap.set(topicId, cryptoItem);\n            }\n        }\n        log.logDebug('get cached sessionInfos map:', this.sessionCryptoInfoMap);\n    }\n    syncCacheSessionInfo() {\n        let cacheMap = {};\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            log.logDebug('for each Keys', topicId);\n            if (cryptoItem) {\n                cacheMap[topicId] = {\n                    cryptoKeyPair: cryptoItem.crypto.stringifyKeypair(),\n                    dappPublicKey: cryptoItem.dappPublicKey,\n                    cid: cryptoItem.cid\n                };\n            }\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(cacheMap);\n        log.logDebug('sync cache sessionInfos:', jsonData);\n        this.connectStorage.encryptStoreMsg(jsonData, walletConnectionConstants_1.WalletConnectionManagerTopicInfoCacheKey);\n    }\n    cacheSessionInfo(topic, sessionInfo, sync = true) {\n        let dappPublicKey = sessionInfo.dappPublicKey;\n        // 1. search dapp public related topic ids\n        let duplicatedTopics = [];\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            log.logDebug('for each Keys', topicId);\n            if (cryptoItem.dappPublicKey == dappPublicKey) {\n                log.logDebug('duplicated dapp public key:', topicId, dappPublicKey);\n                duplicatedTopics.push(topicId);\n            }\n        }\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            if (duplicatedTopics.includes(topicId)) {\n                this.sessionCryptoInfoMap.delete(topicId);\n            }\n        }\n        // discard useless topics\n        log.logDebug('cleaned connect session cache:', this.sessionCryptoInfoMap);\n        // 2. remove previous connected topic ids\n        // 3. write in current topic\n        this.sessionCryptoInfoMap.set(topic, sessionInfo);\n        // TODO: search domain info and then delete \n        log.logDebug('cache sessionInfo:', topic, sessionInfo, this.sessionCryptoInfoMap);\n        if (sync) {\n            this.syncCacheSessionInfo();\n        }\n        return duplicatedTopics;\n    }\n    // add and subscribe topic\n    appendTopic(topic, sessionPublicKey, cid) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('4.1. get append Topic:', topic);\n            // 1. check if connected\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.isLogined) {\n                    var error = new Error();\n                    error.message = \"connection is not logined\";\n                    error.name = \"append error\";\n                    // throw error\n                    reject(error);\n                    return;\n                }\n                // 2. subscribe topic and session public key\n                let cryptoItem = {\n                    topic: topic,\n                    crypto: new crypto_1.SessionCrypto(),\n                    dappPublicKey: sessionPublicKey ? sessionPublicKey : \"\",\n                    cid: cid\n                };\n                let duplicatedTopics = this.cacheSessionInfo(topic, cryptoItem, false);\n                // make sure cache session info before subscribe\n                yield this.subscribeTopics(Array.from([topic]));\n                this.refreshPackageId();\n                log.logDebug(`5. subscribe callback then fetch append message: ${this.packageId}, ${topic}`);\n                log.reportLog(`5. subscribe callback then fetch append message`);\n                const timeF = new Date().getTime();\n                (0, log_1.logDebug)(\"Append --subscribe callback->\", timeF - this.timeLog);\n                resolve(duplicatedTopics);\n            }));\n        });\n    }\n    confirmAppendingTopics() {\n        this.syncCacheSessionInfo();\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.timeLog = new Date().getTime();\n            (0, log_1.logDebug)(\"[Wallet] ConnectTime---enter->\", this.timeLog);\n            log.reportLog('wallet connect connect called');\n            // 0. get cached topics and infos\n            let timestampStr = Date.now().toString();\n            var jwtToken = yield this.makeJWT(timestampStr);\n            log.logDebug(`generate jwt token: ${jwtToken}`);\n            this.connectStorage.saveContent(jwtToken, 'jwt');\n            this.recovrySessionInfoFromCache();\n            // 1.\n            return new Promise((resolve, reject) => {\n                // 1. when websocket opened\n                this.inLogin = true;\n                this.connector.onOpen(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug(`1. connector on open`);\n                    log.reportLog('1. wallet connect connect on open');\n                    const timeOne = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---open->\", timeOne - this.timeLog);\n                    //2. send jwt to login\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when login');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // throw error\n                            reject(error);\n                        }\n                        else {\n                            this.isLogined = true;\n                            resolve();\n                            // 3. subscribe cached topics\n                            log.logDebug('3. subscribe cached topics', this.sessionCryptoInfoMap);\n                            log.reportLog('3. wallet connect connect subscribe cached topics');\n                            if (this.sessionCryptoInfoMap.size > 0) {\n                                yield this.subscribeTopics(Array.from(this.sessionCryptoInfoMap.keys()));\n                            }\n                        }\n                    }));\n                    log.logDebug(`2. login called`);\n                    log.reportLog('2. wallet connect login called');\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        return yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_LOGIN,\n                        params: {\n                            token: jwtToken\n                        }\n                    });\n                }));\n                this.connector.connect().catch((err) => {\n                    (0, log_1.logDebug)('WalletConnectionManager connect error', err);\n                    reject(err);\n                });\n                // add callback\n                this.connector.addPackageParse((event) => {\n                    var _a, _b;\n                    log.logDebug(`connect: parse package`);\n                    log.logDebug(event);\n                    if (!(\"params\" in event) || !(\"data\" in event[\"params\"])) {\n                        this.parsePackage(\"\", event, true);\n                        return;\n                    }\n                    // ignore receive echo\n                    if ((_a = event.params.data) === null || _a === void 0 ? void 0 : _a.topic) {\n                        this.parsePackage((_b = event.params.data) === null || _b === void 0 ? void 0 : _b.topic, event, event.method === commands_1.CONNECT_METHOD_RECEIVE);\n                    }\n                });\n                // this.connector.addListener(safeJsonStringify(event), (rawMsg: string)=> {\n                //    rawMsg = rawMsg.replace(/'/g, '\"')\n                //    log.logDebug(`addListener ===> ${rawMsg}`)\n                //    if (typeof rawMsg !== 'undefined') {\n                //       var msgObj = safeJsonParse(rawMsg)\n                //       var msg = msgObj.message\n                //       let crypto = \n                //       var result = this.crypto.decrypt(msg, this.connectedWalletPK)\n                //       log.logDebug(`addListener ===> ${result}`)\n                //       return result\n                //    }\n                //    return undefined\n                // }, ()=>{\n                //    // emit success\n                // }, ()=>{\n                //    // emit fail\n                // })\n            });\n        });\n    }\n    // 获取对应topic session下的钱包公钥\n    // 在返回approve时需要填充到clientId字段中\n    getSessionPublicKey(topicId) {\n        if (this.isTopicPublicKeyExist(topicId)) {\n            let item = this.sessionCryptoInfoMap.get(topicId);\n            if (item) {\n                return (0, utils_1.toHexString)(item.crypto.keyPair.publicKey);\n            }\n        }\n        return undefined;\n    }\n    getCurrentCachedTopicIdList() {\n        return Array.from(this.sessionCryptoInfoMap.keys());\n    }\n    disconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            yield this.connector.disconnect();\n            //clean cached topic\n            //如果是恢复连接，就不清理解密public key\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            if (!fromRestore) {\n                this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n            }\n        });\n    }\n    send(topic_1, msg_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, msg, needPublicKey = false, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL, useRaw = false) {\n            var _a, _b;\n            // make send msg payload\n            log.logDebug(`message send =====> ${msg}`);\n            if (!this.isTopicPublicKeyExist(topic)) {\n                // channel not ready\n                throw new Error('connection not finish');\n            }\n            let connectedDappPK = (_a = this.sessionCryptoInfoMap.get(topic)) === null || _a === void 0 ? void 0 : _a.dappPublicKey;\n            let cryptoObject = (_b = this.sessionCryptoInfoMap.get(topic)) === null || _b === void 0 ? void 0 : _b.crypto;\n            let messageObj = undefined;\n            if (useRaw) {\n                messageObj = {\n                    message: msg,\n                };\n            }\n            if (cryptoObject && connectedDappPK && !useRaw) {\n                let message = cryptoObject.encryptWallet(msg, connectedDappPK);\n                messageObj = {\n                    message: message,\n                };\n            }\n            if (messageObj) {\n                if (needPublicKey && cryptoObject) {\n                    messageObj.clientId = (0, utils_1.toHexString)(cryptoObject.keyPair.publicKey);\n                    // let privateKey = toHexString(cryptoObject.keyPair.secretKey)\n                    // log.logDebug(`message send use dapp publicKey =====> ${connectedDappPK}`)\n                    // log.logDebug(`message send use publicKey =====> ${messageObj.clientId}`)\n                    // log.logDebug(`message send use secretKey =====> ${privateKey}`)\n                }\n                this.refreshPackageId();\n                const payload = {\n                    id: this.packageId.toString(),\n                    method: commands_1.CONNECT_METHOD_PUBLISH,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    params: {\n                        message: {\n                            topic: topic,\n                            message: (0, safejson_1.safeJsonStringify)(messageObj),\n                            ttl: ttl\n                        }\n                    } // crypted\n                };\n                this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                    // ack\n                    if (rsp && rsp.error) {\n                        log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                    }\n                    else if (rsp && !rsp.error) {\n                        log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                    }\n                }));\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n                return this.packageId;\n            }\n        });\n    }\n    sendACK(msgId_1, success_1) {\n        return __awaiter(this, arguments, void 0, function* (msgId, success, reason = undefined) {\n            if (success === true) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    result: true\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n            else if (reason) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    error: {\n                        code: reason.code, //int\n                        message: reason.message\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    // send receive\n    sendReceive(msgId, messageId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECEIVE,\n                params: {\n                    data: {\n                        messageId: messageId,\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendUnsubscribe(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: make disconnect payload\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), {\n                id: this.packageId.toString(),\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_UNSUB,\n                params: {\n                    topic: topic\n                }\n            });\n            // remove topicId\n            this.sessionCryptoInfoMap.delete(topic);\n            this.syncCacheSessionInfo();\n        });\n    }\n    // send receive\n    // 1. fetch all \n    // 2. send back receive\n    // 3. check has more, if so, repeat from 1st step\n    sendFetchAndConsumeMessages(msgId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(msgId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic == topic) {\n                                let messageId = msg.messageId;\n                                yield this.connector.getMsgPayloadFromHistory(msg);\n                                // send receive command to relay server\n                                this.refreshPackageId();\n                                yield this.sendReceive(this.packageId.toString(), messageId, topic);\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_FETCHMSG,\n                params: {\n                    data: {\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendBatchFetchAndConsumeMessages(packageId, topicIdList) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(packageId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic) {\n                                let messageId = msg.messageId;\n                                yield this.connector.getMsgPayloadFromHistory(msg);\n                                // send receive command to relay server\n                                this.refreshPackageId(i);\n                                yield this.sendReceive(this.packageId.toString(), messageId, msg.topic);\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendBatchFetchAndConsumeMessages(this.packageId.toString(), topicIdList);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            log.reportLog('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: packageId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_BATCH_FETCHMSG,\n                params: {\n                    topics: topicIdList,\n                    withInternalData: true\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                yield this.connector.connect();\n            }), payload);\n        });\n    }\n    cleanCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.connectStorage.clearCache();\n        });\n    }\n    saveSessionContent(key, data) {\n        if (!data) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(data);\n        this.connectStorage.encryptStoreMsg(jsonData, storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n    }\n    getSessionContent(key) {\n        let jsonStr = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        if (jsonStr) {\n            let object = (0, safejson_1.safeJsonParse)(jsonStr);\n            return object;\n        }\n        return undefined;\n    }\n    // subscribe then fetch messages for each topics\n    subscribeTopics(topicIdList) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)(\"4. topicid list\", topicIdList);\n            log.reportLog(\"4. topicid list\");\n            this.refreshPackageId();\n            const timeF = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let finishCount = 0;\n                //3. send subscribe\n                for (let idx = 0; idx < topicIdList.length; ++idx) {\n                    let topicId = topicIdList[idx];\n                    this.refreshPackageId(idx);\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when subscribe');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // reject(error)\n                            finishCount += 1;\n                            if (finishCount == topicIdList.length) {\n                                resolve();\n                            }\n                        }\n                        this.refreshPackageId(idx);\n                        const timeF = new Date().getTime();\n                        (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n                        finishCount += 1;\n                        if (finishCount == topicIdList.length) {\n                            // 4. fetch messages\n                            log.logDebug(`5. send fetch msg: ${this.packageId}, ${topicId}`);\n                            yield this.sendBatchFetchAndConsumeMessages(this.packageId.toString(), topicIdList);\n                            resolve();\n                        }\n                    }));\n                    log.logDebug(`3. login callback then send subscribe: ${this.packageId}, ${topicId}`);\n                    log.reportLog('3. login callback then send subscribe');\n                    const timeTh = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---login callback->\", timeTh - this.timeLog);\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        return yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_SUB,\n                        params: {\n                            topic: topicId\n                        }\n                    });\n                }\n            }));\n        });\n    }\n}\nexports.WalletConnectionManager = WalletConnectionManager;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SessionCrypto = void 0;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst utils_1 = require(\"../utils/utils\");\nclass SessionCrypto {\n    constructor(keyPair = undefined) {\n        this.nonceLength = 24;\n        this.sessionKeyPair = keyPair ? this.createKeypairFromString(keyPair) : this.createKeypair();\n    }\n    createKeypair() {\n        return tweetnacl_1.default.box.keyPair();\n    }\n    createKeypairFromString(keyPair) {\n        return {\n            publicKey: (0, utils_1.hexToByteArray)(keyPair.publicKey),\n            secretKey: (0, utils_1.hexToByteArray)(keyPair.secretKey),\n        };\n    }\n    createNonce() {\n        return tweetnacl_1.default.randomBytes(this.nonceLength);\n    }\n    get keyPair() {\n        return this.sessionKeyPair;\n    }\n    // dapp 加密:\n    // base64(hex（nonce+加密内容）)\n    encrypt(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl_1.default.box(encodedMessage, nonce, (0, utils_1.hexToByteArray)(receiverPublicKey), this.keyPair.secretKey);\n        let concatInfo = (0, utils_1.concatUint8Arrays)(nonce, encrypted);\n        var hexResult = (0, utils_1.toHexString)(concatInfo);\n        var encodedResult = new TextEncoder().encode(hexResult);\n        return (0, utils_1.base64encode)(encodedResult, false);\n    }\n    // 钱包加密内容\n    // 注意：没有中间hex的环节\n    // base64（nonce+加密内容)\n    encryptWallet(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl_1.default.box(encodedMessage, nonce, (0, utils_1.hexToByteArray)(receiverPublicKey), this.keyPair.secretKey);\n        let concatInfo = (0, utils_1.concatUint8Arrays)(nonce, encrypted);\n        return (0, utils_1.base64encode)(concatInfo, false);\n    }\n    // dapp 解密\n    // base64(split(nonce+加密内容))\n    decrypt(message, senderPublicKey) {\n        let base64Content = (0, utils_1.base64decode)(message, true);\n        let messageByteArray = base64Content.toUint8Array();\n        const [nonce, internalMessage] = (0, utils_1.splitToUint8Arrays)(messageByteArray, this.nonceLength);\n        const decrypted = tweetnacl_1.default.box.open(internalMessage, nonce, (0, utils_1.hexToByteArray)(senderPublicKey), this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${(0, utils_1.toHexString)(this.keyPair.publicKey)} \\n keypair secretkey: ${(0, utils_1.toHexString)(this.keyPair.secretKey)}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    // dapp 解密\n    // base64(hextoByte(split(nonce+加密内容)))\n    decryptWallet(message, senderPublicKey) {\n        let base64Content = (0, utils_1.base64decode)(message, true);\n        let messageByteArray = (0, utils_1.hexToByteArray)(base64Content.toString());\n        const [nonce, internalMessage] = (0, utils_1.splitToUint8Arrays)(messageByteArray, this.nonceLength);\n        const decrypted = tweetnacl_1.default.box.open(internalMessage, nonce, (0, utils_1.hexToByteArray)(senderPublicKey), this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${(0, utils_1.toHexString)(this.keyPair.publicKey)} \\n keypair secretkey: ${(0, utils_1.toHexString)(this.keyPair.secretKey)}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    stringifyKeypair() {\n        return {\n            publicKey: (0, utils_1.toHexString)(this.keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(this.keyPair.secretKey)\n        };\n    }\n}\nexports.SessionCrypto = SessionCrypto;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./connect\"), exports);\n__exportStar(require(\"./protocol\"), exports);\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IEngine = exports.ISignClient = exports.ISignClientEvents = exports.IEngineEvents = void 0;\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nclass IEngineEvents extends eventemitter3_1.default {\n    constructor() {\n        super();\n    }\n}\nexports.IEngineEvents = IEngineEvents;\nclass ISignClientEvents extends eventemitter3_1.default {\n    constructor() {\n        super();\n    }\n}\nexports.ISignClientEvents = ISignClientEvents;\nclass ISignClient {\n    constructor(data) {\n        this.data = data;\n    }\n}\nexports.ISignClient = ISignClient;\nclass IEngine {\n    constructor(client) {\n        this.client = client;\n    }\n}\nexports.IEngine = IEngine;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.creatOKXMiniAppWalletInfo = exports.creatOKXWalletInfo = exports.ISignClientEvents = exports.IEngine = exports.IEngineEvents = exports.ISignClient = exports.getBigIntRpcId = exports.formatJsonRpcRequest = exports.isJsonRpcError = exports.isJsonRpcResponse = exports.parseConnectionError = exports.isHttpUrl = exports.formatJsonRpcError = void 0;\nvar json_rpc_1 = require(\"./json-rpc\");\nObject.defineProperty(exports, \"formatJsonRpcError\", { enumerable: true, get: function () { return json_rpc_1.formatJsonRpcError; } });\nObject.defineProperty(exports, \"isHttpUrl\", { enumerable: true, get: function () { return json_rpc_1.isHttpUrl; } });\nObject.defineProperty(exports, \"parseConnectionError\", { enumerable: true, get: function () { return json_rpc_1.parseConnectionError; } });\nObject.defineProperty(exports, \"isJsonRpcResponse\", { enumerable: true, get: function () { return json_rpc_1.isJsonRpcResponse; } });\nObject.defineProperty(exports, \"isJsonRpcError\", { enumerable: true, get: function () { return json_rpc_1.isJsonRpcError; } });\nObject.defineProperty(exports, \"formatJsonRpcRequest\", { enumerable: true, get: function () { return json_rpc_1.formatJsonRpcRequest; } });\nObject.defineProperty(exports, \"getBigIntRpcId\", { enumerable: true, get: function () { return json_rpc_1.getBigIntRpcId; } });\nvar engine_1 = require(\"./engine\");\nObject.defineProperty(exports, \"ISignClient\", { enumerable: true, get: function () { return engine_1.ISignClient; } });\nObject.defineProperty(exports, \"IEngineEvents\", { enumerable: true, get: function () { return engine_1.IEngineEvents; } });\nObject.defineProperty(exports, \"IEngine\", { enumerable: true, get: function () { return engine_1.IEngine; } });\nObject.defineProperty(exports, \"ISignClientEvents\", { enumerable: true, get: function () { return engine_1.ISignClientEvents; } });\n__exportStar(require(\"./ton\"), exports);\nvar wallet_info_1 = require(\"./wallet-info\");\nObject.defineProperty(exports, \"creatOKXWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXWalletInfo; } });\nObject.defineProperty(exports, \"creatOKXMiniAppWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXMiniAppWalletInfo; } });\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isJsonRpcPayload = isJsonRpcPayload;\nexports.isJsonRpcRequest = isJsonRpcRequest;\nexports.isJsonRpcResponse = isJsonRpcResponse;\nexports.isJsonRpcResult = isJsonRpcResult;\nexports.isJsonRpcError = isJsonRpcError;\nexports.payloadId = payloadId;\nexports.getBigIntRpcId = getBigIntRpcId;\nexports.formatJsonRpcRequest = formatJsonRpcRequest;\nexports.formatJsonRpcResult = formatJsonRpcResult;\nexports.formatJsonRpcError = formatJsonRpcError;\nexports.isReservedErrorCode = isReservedErrorCode;\nexports.getError = getError;\nexports.getErrorByCode = getErrorByCode;\nexports.formatErrorMessage = formatErrorMessage;\nexports.isHttpUrl = isHttpUrl;\nexports.isWsUrl = isWsUrl;\nexports.parseConnectionError = parseConnectionError;\nfunction isJsonRpcPayload(payload) {\n    return (typeof payload === \"object\" &&\n        \"id\" in payload &&\n        \"jsonrpc\" in payload &&\n        payload.jsonrpc === \"2.0\");\n}\nfunction isJsonRpcRequest(payload) {\n    return isJsonRpcPayload(payload) && \"method\" in payload;\n}\nfunction isJsonRpcResponse(payload) {\n    return isJsonRpcPayload(payload) && (isJsonRpcResult(payload) || isJsonRpcError(payload));\n}\nfunction isJsonRpcResult(payload) {\n    return \"result\" in payload;\n}\nfunction isJsonRpcError(payload) {\n    return \"error\" in payload;\n}\nconst okx_connect_error_1 = require(\"../error/okx-connect.error\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nclass IncrementalRandomGenerator {\n    constructor(bits) {\n        this.i = 1;\n        const typedArray = bits === 8 ? new Uint8Array(1) : bits === 16 ? new Uint16Array(1) : new Uint32Array(1);\n        if (bits) {\n            this.initialValue = tweetnacl_1.default.randomBytes(bits / 8)[0];\n        }\n        else {\n            this.initialValue = 0;\n        }\n    }\n    getNextValue() {\n        return this.initialValue + this.i++;\n    }\n}\nconst uint8Generator = new IncrementalRandomGenerator(8);\nconst uint16Generator = new IncrementalRandomGenerator(16);\nfunction payloadId() {\n    const date = Date.now() * 1000;\n    const extra = uint8Generator.getNextValue();\n    return date + extra;\n}\nfunction getBigIntRpcId() {\n    const date = BigInt(Date.now()) * BigInt(1000000);\n    const extra = BigInt(uint16Generator.getNextValue());\n    return date + extra;\n}\nfunction formatJsonRpcRequest(method, params, id) {\n    return {\n        id: id || payloadId(),\n        jsonrpc: \"2.0\",\n        method,\n        params,\n    };\n}\nfunction formatJsonRpcResult(id, result) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        result,\n    };\n}\nfunction formatJsonRpcError(id, error, data) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        error: formatErrorMessage(error, data),\n    };\n}\nfunction isReservedErrorCode(code) {\n    return okx_connect_error_1.RESERVED_ERROR_CODES.includes(code);\n}\nfunction getError(type) {\n    if (!Object.keys(okx_connect_error_1.STANDARD_ERROR_MAP).includes(type)) {\n        return okx_connect_error_1.STANDARD_ERROR_MAP[okx_connect_error_1.DEFAULT_ERROR];\n    }\n    return okx_connect_error_1.STANDARD_ERROR_MAP[type];\n}\nfunction getErrorByCode(code) {\n    const match = Object.values(okx_connect_error_1.STANDARD_ERROR_MAP).find((e) => e.code === code);\n    if (!match) {\n        return okx_connect_error_1.STANDARD_ERROR_MAP[okx_connect_error_1.DEFAULT_ERROR];\n    }\n    return match;\n}\nfunction formatErrorMessage(error, data) {\n    if (typeof error === \"undefined\") {\n        return getError(okx_connect_error_1.INTERNAL_ERROR);\n    }\n    if (typeof error === \"string\") {\n        error = Object.assign(Object.assign({}, getError(okx_connect_error_1.SERVER_ERROR)), { message: error });\n    }\n    if (typeof data !== \"undefined\") {\n        error.data = data;\n    }\n    if (isReservedErrorCode(error.code)) {\n        error = getErrorByCode(error.code);\n    }\n    return error;\n}\nfunction getUrlProtocol(url) {\n    const matches = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!matches || !matches.length)\n        return;\n    return matches[0];\n}\nfunction matchRegexProtocol(url, regex) {\n    const protocol = getUrlProtocol(url);\n    if (typeof protocol === \"undefined\")\n        return false;\n    return new RegExp(regex).test(protocol);\n}\nfunction isHttpUrl(url) {\n    return matchRegexProtocol(url, \"^https?:\");\n}\nfunction isWsUrl(url) {\n    return matchRegexProtocol(url, \"^wss?:\");\n}\nfunction parseConnectionError(e, url, type) {\n    return e.message.includes(\"getaddrinfo ENOTFOUND\") || e.message.includes(\"connect ECONNREFUSED\")\n        ? new Error(`Unavailable ${type} RPC url at ${url}`)\n        : e;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_ITEM_ERROR_CODES = void 0;\nvar CONNECT_ITEM_ERROR_CODES;\n(function (CONNECT_ITEM_ERROR_CODES) {\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(CONNECT_ITEM_ERROR_CODES || (exports.CONNECT_ITEM_ERROR_CODES = CONNECT_ITEM_ERROR_CODES = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TONCHAIN = void 0;\nvar TONCHAIN;\n(function (TONCHAIN) {\n    TONCHAIN[\"MAINNET\"] = \"-239\";\n})(TONCHAIN || (exports.TONCHAIN = TONCHAIN = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_ITEM_ERROR_CODES = exports.TONCHAIN = void 0;\nvar connect_wallet_1 = require(\"./connect-wallet\");\nObject.defineProperty(exports, \"TONCHAIN\", { enumerable: true, get: function () { return connect_wallet_1.TONCHAIN; } });\nvar connect_event_1 = require(\"./connect-event\");\nObject.defineProperty(exports, \"CONNECT_ITEM_ERROR_CODES\", { enumerable: true, get: function () { return connect_event_1.CONNECT_ITEM_ERROR_CODES; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.creatOKXWalletInfo = creatOKXWalletInfo;\nexports.creatOKXMiniAppWalletInfo = creatOKXMiniAppWalletInfo;\nconst constants_1 = require(\"../constants\");\nfunction creatOKXWalletInfo() {\n    return {\n        \"appName\": \"okxAppWallet\",\n        \"name\": \"OKX Wallet\",\n        \"imageUrl\": \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\",\n        \"aboutUrl\": constants_1.downloadUrl,\n        \"universalLink\": constants_1.standardUniversalLink,\n        \"deepLink\": constants_1.standardDeeplink,\n        \"platforms\": [\"ios\", \"android\"]\n    };\n}\nfunction creatOKXMiniAppWalletInfo() {\n    return {\n        \"appName\": \"okxMiniApp\",\n        \"name\": \"OKX Mini Wallet\",\n        \"imageUrl\": \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\",\n        \"aboutUrl\": constants_1.downloadUrl,\n        \"universalLink\": `https://t.me/${constants_1.tgwalletName}/start`,\n        \"deepLink\": \"\",\n        \"platforms\": [\"ios\", \"android\", 'macos', 'windows']\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.tgwalletAppName = exports.tgwalletName = exports.tonConnectSdkVersion = exports.shortUniversalLink = exports.standardDeeplink = exports.downloadUrl = exports.standardUniversalLink = exports.okxDeeplink = void 0;\nexports.getTestTwaUrl = getTestTwaUrl;\nexports.getTestTgTwaUrl = getTestTgTwaUrl;\nexports.okxDeeplink = 'okx://web3';\nexports.standardUniversalLink = typeof window !== \"undefined\" && window.location.hostname.includes(\"okx.com\")\n    ? \"https://link.okx.com/download\"\n    : \"https://www.okx.com/download\";\nexports.downloadUrl = \"https://www.okx.com/download\";\n// export const standardUniversalLink = 'http://localhost:5173';\nexports.standardDeeplink = `${exports.okxDeeplink}/wallet/connect`;\nexports.shortUniversalLink = `https://www.okx.com/ul/connect`;\n// export const standardDeeplink = 'http://localhost:5173';\nexports.tonConnectSdkVersion = '1';\n// export const tgwalletName: string = \"TCTestqdqwdqwdqBot\"\nexports.tgwalletName = \"OKX_WALLET_BOT\";\nexports.tgwalletAppName = \"start\";\n// https://t.me/OKX_WALLET_BOT/start\nfunction getTestTwaUrl() {\n    return window.okxTesttwaUrl;\n}\nfunction getTestTgTwaUrl() {\n    return window.okxTestTgtwaUrl;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_CONNECT_ERROR_CODES = exports.OKXConnectError = void 0;\nvar okx_connect_error_1 = require(\"./okx-connect.error\");\nObject.defineProperty(exports, \"OKXConnectError\", { enumerable: true, get: function () { return okx_connect_error_1.OKXConnectError; } });\nObject.defineProperty(exports, \"OKX_CONNECT_ERROR_CODES\", { enumerable: true, get: function () { return okx_connect_error_1.OKX_CONNECT_ERROR_CODES; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_ERROR = exports.STANDARD_ERROR_MAP = exports.SERVER_ERROR_CODE_RANGE = exports.RESERVED_ERROR_CODES = exports.SERVER_ERROR = exports.INTERNAL_ERROR = exports.INVALID_PARAMS = exports.METHOD_NOT_FOUND = exports.INVALID_REQUEST = exports.PARSE_ERROR = exports.OKX_CONNECT_ERROR_CODES = exports.OKXConnectError = void 0;\nclass OKXConnectError extends Error {\n    constructor(code, message) {\n        if (message == undefined) {\n            message = getDefaultMessageByCode(code);\n        }\n        super(message);\n        this.code = code;\n        this.message = `${OKXConnectError.prefix} ${message ? '\\n' + message : ''}`;\n        Object.setPrototypeOf(this, OKXConnectError.prototype);\n    }\n    toJSON() {\n        return {\n            message: this.message,\n            code: this.code\n        };\n    }\n}\nexports.OKXConnectError = OKXConnectError;\nOKXConnectError.prefix = '[OKX_CONNECT_SDK_ERROR]';\nfunction getDefaultMessageByCode(code) {\n    if (code == OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR) {\n        return \"unknown error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR) {\n        return \"bad request error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.ALREADY_CONNECTED_ERROR) {\n        return \"already connected error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR) {\n        return \"not connected error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.UNKNOWN_APP_ERROR) {\n        return \"unknown app error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n        return \"user rejects error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR_CAUSE_REGISTER) {\n        return \"wallet address are registering\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED) {\n        return \"method not supported\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.CONNECTION_ERROR) {\n        return \"connect error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED) {\n        return \"chain not supported\";\n    }\n    return \"unknown error\";\n}\nvar OKX_CONNECT_ERROR_CODES;\n(function (OKX_CONNECT_ERROR_CODES) {\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"BAD_REQUEST_ERROR\"] = 1] = \"BAD_REQUEST_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"ALREADY_CONNECTED_ERROR\"] = 11] = \"ALREADY_CONNECTED_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"NOT_CONNECTED_ERROR\"] = 12] = \"NOT_CONNECTED_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"UNKNOWN_APP_ERROR\"] = 100] = \"UNKNOWN_APP_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"USER_REJECTS_ERROR\"] = 300] = \"USER_REJECTS_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"USER_REJECTS_ERROR_CAUSE_REGISTER\"] = 301] = \"USER_REJECTS_ERROR_CAUSE_REGISTER\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"CHAIN_NOT_SUPPORTED\"] = 500] = \"CHAIN_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"WALLET_NOT_SUPPORTED\"] = 600] = \"WALLET_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"CONNECTION_ERROR\"] = 700] = \"CONNECTION_ERROR\";\n})(OKX_CONNECT_ERROR_CODES || (exports.OKX_CONNECT_ERROR_CODES = OKX_CONNECT_ERROR_CODES = {}));\nexports.PARSE_ERROR = \"PARSE_ERROR\";\nexports.INVALID_REQUEST = \"INVALID_REQUEST\";\nexports.METHOD_NOT_FOUND = \"METHOD_NOT_FOUND\";\nexports.INVALID_PARAMS = \"INVALID_PARAMS\";\nexports.INTERNAL_ERROR = \"INTERNAL_ERROR\";\nexports.SERVER_ERROR = \"SERVER_ERROR\";\nexports.RESERVED_ERROR_CODES = [-32700, -32600, -32601, -32602, -32603];\nexports.SERVER_ERROR_CODE_RANGE = [-32000, -32099];\nexports.STANDARD_ERROR_MAP = {\n    [exports.PARSE_ERROR]: { code: -32700, message: \"Parse error\" },\n    [exports.INVALID_REQUEST]: { code: -32600, message: \"Invalid Request\" },\n    [exports.METHOD_NOT_FOUND]: { code: -32601, message: \"Method not found\" },\n    [exports.INVALID_PARAMS]: { code: -32602, message: \"Invalid params\" },\n    [exports.INTERNAL_ERROR]: { code: -32603, message: \"Internal error\" },\n    [exports.SERVER_ERROR]: { code: -32000, message: \"Server error\" },\n};\nexports.DEFAULT_ERROR = exports.SERVER_ERROR;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.downloadUrl = exports.okxDeeplink = exports.tonConnectSdkVersion = exports.standardDeeplink = exports.standardUniversalLink = exports.NameSpaceKeyStarknet = exports.NameSpaceKeyTron = exports.NameSpaceKeyCosmos = exports.NameSpaceKeyAptos = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.NameSpaceKeyTON = exports.NameSpaceKeySOL = exports.NameSpaceKeyEip155 = void 0;\n__exportStar(require(\"./error\"), exports);\nvar misc_1 = require(\"./misc\");\nObject.defineProperty(exports, \"NameSpaceKeyEip155\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyEip155; } });\nObject.defineProperty(exports, \"NameSpaceKeySOL\", { enumerable: true, get: function () { return misc_1.NameSpaceKeySOL; } });\nObject.defineProperty(exports, \"NameSpaceKeyTON\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyTON; } });\nObject.defineProperty(exports, \"NameSpaceKeySui\", { enumerable: true, get: function () { return misc_1.NameSpaceKeySui; } });\nObject.defineProperty(exports, \"NameSpaceKeyBtc\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyBtc; } });\nObject.defineProperty(exports, \"NameSpaceKeyAptos\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyAptos; } });\nObject.defineProperty(exports, \"NameSpaceKeyCosmos\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyCosmos; } });\nObject.defineProperty(exports, \"NameSpaceKeyTron\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyTron; } });\nObject.defineProperty(exports, \"NameSpaceKeyStarknet\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyStarknet; } });\nvar constants_1 = require(\"./constants\");\nObject.defineProperty(exports, \"standardUniversalLink\", { enumerable: true, get: function () { return constants_1.standardUniversalLink; } });\nObject.defineProperty(exports, \"standardDeeplink\", { enumerable: true, get: function () { return constants_1.standardDeeplink; } });\nObject.defineProperty(exports, \"tonConnectSdkVersion\", { enumerable: true, get: function () { return constants_1.tonConnectSdkVersion; } });\nObject.defineProperty(exports, \"okxDeeplink\", { enumerable: true, get: function () { return constants_1.okxDeeplink; } });\nObject.defineProperty(exports, \"downloadUrl\", { enumerable: true, get: function () { return constants_1.downloadUrl; } });\n__exportStar(require(\"./connect\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NameSpaceKeyStarknet = exports.NameSpaceKeyTron = exports.NameSpaceKeyCosmos = exports.NameSpaceKeyAptos = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.NameSpaceKeyTON = exports.NameSpaceKeySOL = exports.NameSpaceKeyEip155 = void 0;\nexports.NameSpaceKeyEip155 = \"eip155\";\nexports.NameSpaceKeySOL = \"solana\";\nexports.NameSpaceKeyTON = \"ton\";\nexports.NameSpaceKeySui = \"sui\";\nexports.NameSpaceKeyBtc = \"btc\";\nexports.NameSpaceKeyAptos = \"aptos\";\nexports.NameSpaceKeyCosmos = \"cosmos\";\nexports.NameSpaceKeyTron = \"tron\";\nexports.NameSpaceKeyStarknet = \"starknet\";\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.callForSuccess = callForSuccess;\nexports.delay = delay;\n/**\n * Function to call ton api until we get response.\n * Because ton network is pretty unstable we need to make sure response is final.\n * @param {T} fn - function to call\n * @param {CallForSuccessOptions} [options] - optional configuration options\n */\nfunction callForSuccess(fn, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b;\n        const attempts = (_a = options === null || options === void 0 ? void 0 : options.attempts) !== null && _a !== void 0 ? _a : 3;\n        const delayMs = (_b = options === null || options === void 0 ? void 0 : options.delayMs) !== null && _b !== void 0 ? _b : 800;\n        if (typeof fn !== 'function') {\n            throw new Error(`Expected a function, got ${typeof fn}`);\n        }\n        let i = 0;\n        let lastError;\n        while (i < attempts) {\n            try {\n                return yield fn();\n            }\n            catch (err) {\n                lastError = err;\n                i++;\n                if (i < attempts) {\n                    yield delay(delayMs);\n                }\n            }\n        }\n        throw lastError;\n    });\n}\n/**\n * Delays the execution of code for a specified number of milliseconds.\n * @param {number} timeout - The number of milliseconds to delay the execution.\n * @param {DelayOptions} [options] - Optional configuration options for the delay.\n * @return {Promise<void>} - A promise that resolves after the specified delay, or rejects if the delay is aborted.\n */\nfunction delay(timeout, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            var _a, _b;\n            if ((_a = options === null || options === void 0 ? void 0 : options.signal) === null || _a === void 0 ? void 0 : _a.aborted) {\n                reject(new Error('Delay aborted'));\n                return;\n            }\n            const timeoutId = setTimeout(() => resolve(), timeout);\n            (_b = options === null || options === void 0 ? void 0 : options.signal) === null || _b === void 0 ? void 0 : _b.addEventListener('abort', () => {\n                clearTimeout(timeoutId);\n                reject(new Error('Delay aborted'));\n            });\n        });\n    });\n}\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkMetaData = exports.versionCompare = exports.isBrowser = exports.isOS = exports.isMobileUserAgent = exports.openDeeplinkWithFallback = exports.openLinkBlank = exports.openLink = exports.useShortLink = exports.toSafeBase64FromBase64 = exports.isValidObject = exports.isIos = exports.base64decode = exports.base64encode = exports.splitToUint8Arrays = exports.concatUint8Arrays = exports.toHexString = exports.hexToByteArray = exports.getOKXLink = exports.openOKXUniversalLink = exports.getAppWalletShortDeepLink = exports.encodeTWAConnectURLParams = exports.encodeConnectParams = exports.openOKXTMAWalletlinkWithFallback = exports.getTelegramWalletTWAUrl = exports.getAppWalletDeepLink = exports.encodeTelegramUrlParameters = exports.isTelegramUrl = exports.openOKXDeeplinkWithFallback = exports.openOKXDeeplink = exports.getUniversalLink = exports.safeJsonStringify = exports.safeJsonParse = exports.getDefaultReporter = exports.reportEvent = exports.reportLog = exports.logWarning = exports.logError = exports.logDebug = exports.callForSuccess = void 0;\nvar call_for_success_1 = require(\"./call-for-success\");\nObject.defineProperty(exports, \"callForSuccess\", { enumerable: true, get: function () { return call_for_success_1.callForSuccess; } });\nvar log_1 = require(\"./log\");\nObject.defineProperty(exports, \"logDebug\", { enumerable: true, get: function () { return log_1.logDebug; } });\nObject.defineProperty(exports, \"logError\", { enumerable: true, get: function () { return log_1.logError; } });\nObject.defineProperty(exports, \"logWarning\", { enumerable: true, get: function () { return log_1.logWarning; } });\nObject.defineProperty(exports, \"reportLog\", { enumerable: true, get: function () { return log_1.reportLog; } });\nObject.defineProperty(exports, \"reportEvent\", { enumerable: true, get: function () { return log_1.reportEvent; } });\nObject.defineProperty(exports, \"getDefaultReporter\", { enumerable: true, get: function () { return log_1.getDefaultReporter; } });\n__exportStar(require(\"./reportconstants\"), exports);\n__exportStar(require(\"./report\"), exports);\nvar safejson_1 = require(\"./safejson\");\nObject.defineProperty(exports, \"safeJsonParse\", { enumerable: true, get: function () { return safejson_1.safeJsonParse; } });\nObject.defineProperty(exports, \"safeJsonStringify\", { enumerable: true, get: function () { return safejson_1.safeJsonStringify; } });\nvar url_1 = require(\"./url\");\nObject.defineProperty(exports, \"getUniversalLink\", { enumerable: true, get: function () { return url_1.getUniversalLink; } });\nObject.defineProperty(exports, \"openOKXDeeplink\", { enumerable: true, get: function () { return url_1.openOKXDeeplink; } });\nObject.defineProperty(exports, \"openOKXDeeplinkWithFallback\", { enumerable: true, get: function () { return url_1.openOKXDeeplinkWithFallback; } });\nObject.defineProperty(exports, \"isTelegramUrl\", { enumerable: true, get: function () { return url_1.isTelegramUrl; } });\nObject.defineProperty(exports, \"encodeTelegramUrlParameters\", { enumerable: true, get: function () { return url_1.encodeTelegramUrlParameters; } });\nObject.defineProperty(exports, \"getAppWalletDeepLink\", { enumerable: true, get: function () { return url_1.getAppWalletDeepLink; } });\nObject.defineProperty(exports, \"getTelegramWalletTWAUrl\", { enumerable: true, get: function () { return url_1.getTelegramWalletTWAUrl; } });\nObject.defineProperty(exports, \"openOKXTMAWalletlinkWithFallback\", { enumerable: true, get: function () { return url_1.openOKXTMAWalletlinkWithFallback; } });\nObject.defineProperty(exports, \"encodeConnectParams\", { enumerable: true, get: function () { return url_1.encodeConnectParams; } });\nObject.defineProperty(exports, \"encodeTWAConnectURLParams\", { enumerable: true, get: function () { return url_1.encodeTWAConnectURLParams; } });\nObject.defineProperty(exports, \"getAppWalletShortDeepLink\", { enumerable: true, get: function () { return url_1.getAppWalletShortDeepLink; } });\nObject.defineProperty(exports, \"openOKXUniversalLink\", { enumerable: true, get: function () { return url_1.openOKXUniversalLink; } });\nObject.defineProperty(exports, \"getOKXLink\", { enumerable: true, get: function () { return url_1.getOKXLink; } });\nvar utils_1 = require(\"./utils\");\nObject.defineProperty(exports, \"hexToByteArray\", { enumerable: true, get: function () { return utils_1.hexToByteArray; } });\nObject.defineProperty(exports, \"toHexString\", { enumerable: true, get: function () { return utils_1.toHexString; } });\nObject.defineProperty(exports, \"concatUint8Arrays\", { enumerable: true, get: function () { return utils_1.concatUint8Arrays; } });\nObject.defineProperty(exports, \"splitToUint8Arrays\", { enumerable: true, get: function () { return utils_1.splitToUint8Arrays; } });\nObject.defineProperty(exports, \"base64encode\", { enumerable: true, get: function () { return utils_1.base64encode; } });\nObject.defineProperty(exports, \"base64decode\", { enumerable: true, get: function () { return utils_1.base64decode; } });\nObject.defineProperty(exports, \"isIos\", { enumerable: true, get: function () { return utils_1.isIos; } });\nObject.defineProperty(exports, \"isValidObject\", { enumerable: true, get: function () { return utils_1.isValidObject; } });\nObject.defineProperty(exports, \"toSafeBase64FromBase64\", { enumerable: true, get: function () { return utils_1.toSafeBase64FromBase64; } });\nObject.defineProperty(exports, \"useShortLink\", { enumerable: true, get: function () { return utils_1.useShortLink; } });\nvar web_api_1 = require(\"./web-api\");\nObject.defineProperty(exports, \"openLink\", { enumerable: true, get: function () { return web_api_1.openLink; } });\nObject.defineProperty(exports, \"openLinkBlank\", { enumerable: true, get: function () { return web_api_1.openLinkBlank; } });\nObject.defineProperty(exports, \"openDeeplinkWithFallback\", { enumerable: true, get: function () { return web_api_1.openDeeplinkWithFallback; } });\nObject.defineProperty(exports, \"isMobileUserAgent\", { enumerable: true, get: function () { return web_api_1.isMobileUserAgent; } });\nObject.defineProperty(exports, \"isOS\", { enumerable: true, get: function () { return web_api_1.isOS; } });\nObject.defineProperty(exports, \"isBrowser\", { enumerable: true, get: function () { return web_api_1.isBrowser; } });\nvar tma_api_1 = require(\"./tma-api\");\nObject.defineProperty(exports, \"versionCompare\", { enumerable: true, get: function () { return tma_api_1.versionCompare; } });\nvar request_1 = require(\"./request\");\nObject.defineProperty(exports, \"checkMetaData\", { enumerable: true, get: function () { return request_1.checkMetaData; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getDefaultReporter = getDefaultReporter;\nexports.logDebug = logDebug;\nexports.logError = logError;\nexports.logWarning = logWarning;\nexports.reportEvent = reportEvent;\nexports.reportLog = reportLog;\nconst debug = false;\nconst forceReport = false;\nconst report_1 = require(\"./report\");\nconst defaultReporter = new report_1.OKXReporter();\nfunction getDefaultReporter() {\n    return defaultReporter;\n}\nconst packageJson = require('../../package.json');\nconst version = packageJson.version;\nfunction logDebug(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.log(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction logError(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.error(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n            if (forceReport || !debug) {\n                let content = '';\n                content += [...args].reduce((result, item) => {\n                    if (typeof item == 'string') {\n                        result += ',' + item;\n                    }\n                    else if (typeof item == 'object') {\n                        result += JSON.stringify(item);\n                    }\n                });\n                defaultReporter.sendRecordContent(content, report_1.OKXReportType.LOG, '');\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction logWarning(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.warn(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction reportEvent(type, action, content) {\n    return __awaiter(this, void 0, void 0, function* () {\n        yield defaultReporter.sendRecordContent(content, type, action);\n    });\n}\nfunction reportLog(content_1) {\n    return __awaiter(this, arguments, void 0, function* (content, action = 'default') {\n        // await defaultReporter.sendRecordContent(content, OKXReportType.LOG, action)\n    });\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXReporter = exports.OKXReportSide = exports.OKXReportType = exports.versionStr = void 0;\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst log_1 = require(\"./log\");\nconst url_1 = require(\"./url\");\nconst utils_1 = require(\"../utils\");\nconst localforage_1 = __importDefault(require(\"localforage\"));\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nexports.versionStr = '1.6.0';\nconst reportApiList = [\n    'https://www.okx.com/dappstat/wallet-connect',\n    'https://www.okx.ac/dappstat/wallet-connect'\n];\nconst reportCacheKey = 'OKX_RP_CK';\nconst reportUUIDKey = 'OKX_RP_UUID_CK';\nconst MAX_LIMIT_REPORTCOUNT = 100;\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"*/*\",\n    \"Content-Type\": \"text/plain\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\nexports.OKXReportType = {\n    PAGE_IN: 'page_in',\n    PAGE_OUT: 'page_out',\n    CLICK: 'click',\n    LOG: 'log',\n};\nexports.OKXReportSide = {\n    DAPP: 'dapp',\n    WALLET: 'wallet',\n};\nclass IReporter {\n}\nconst fetchWithTimeout = (url, options, timeout = 5000) => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n    const fetchPromise = (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, options), { signal }));\n    const timeoutPromise = new Promise((_, reject) => setTimeout(() => {\n        controller.abort();\n        reject(new Error('Request timed out'));\n    }, timeout));\n    return Promise.race([fetchPromise, timeoutPromise]);\n};\nconst fetchListWithTimeout = (urls_1, ...args_1) => __awaiter(void 0, [urls_1, ...args_1], void 0, function* (urls, options = {}, timeout = 5000) {\n    for (const url of urls) {\n        try {\n            const controller = new AbortController();\n            const signal = controller.signal;\n            const fetchPromise = (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, options), { signal }));\n            const timeoutPromise = new Promise((_, reject) => setTimeout(() => {\n                controller.abort();\n                reject(new Error('Request timed out'));\n            }, timeout));\n            const response = yield Promise.race([fetchPromise, timeoutPromise]);\n            if (response.ok) {\n                return response;\n            }\n            if (response.status == 502) {\n                console.error(`Fetch error status 502`, url);\n                return response;\n            }\n        }\n        catch (error) {\n            console.error(`Fetch error for ${url}:`, error);\n        }\n    }\n    console.error(`'All fetch attempts failed.'`);\n    throw new Error('All fetch attempts failed.');\n});\nclass OKXReporter {\n    constructor() {\n        this.currentSide = exports.OKXReportSide.DAPP;\n        this.currentVersion = exports.versionStr;\n        this.storage = localforage_1.default.createInstance({\n            name: \"OKXReporter\"\n        });\n        this.recordList = new Array();\n        this.currentUUID = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(16));\n    }\n    configVersionAndSide(version, side, appname) {\n        this.currentVersion = version;\n        this.currentSide = side;\n        this.appName = appname;\n    }\n    get recordCacheKey() {\n        return reportCacheKey + \"@\" + this.appName;\n    }\n    get reportPlatform() {\n        if ((0, utils_1.isMobileUserAgent)()) {\n            if ((0, utils_1.isIos)()) {\n                return 'iOS';\n            }\n            else {\n                return 'android';\n            }\n        }\n        else {\n            return 'pc';\n        }\n    }\n    beginReport() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.startErrorCatching();\n            let records = yield this.storage.getItem(this.recordCacheKey);\n            let uuid = yield this.storage.getItem(reportUUIDKey);\n            if (uuid) {\n                this.currentUUID = uuid;\n            }\n            else {\n                this.storage.setItem(reportUUIDKey, this.currentUUID);\n            }\n            if (records) {\n                this.recordList = records;\n                (0, log_1.logDebug)('resume records from cache length: ', this.recordList.length);\n                yield this.sendCachedRecords();\n            }\n        });\n    }\n    startErrorCatching() {\n        let window = (0, url_1.getWindow)();\n        if (window) {\n            (0, log_1.logDebug)('begin capture console error');\n            // window.onerror = (event: Event | string, source?: string, lineno?: number, colno?: number, error?: Error) => {\n            //     logDebug('capture error info:', error, source)\n            //     this.markRecord(error?.message+'/'+error?.name+'/'+error?.stack, OKXReportType.LOG, '', this.currentSide)\n            // }\n        }\n    }\n    cachedErrors() {\n        return this.recordList;\n    }\n    sendRecord(record) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    const body = JSON.stringify(record);\n                    (0, log_1.logDebug)('[REPORT] record: ', body);\n                    const res = yield fetchListWithTimeout(reportApiList, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body: body }));\n                    (0, log_1.logDebug)('[REPORT] get rsp:', res);\n                    if (res && res.status && res.status == 200) {\n                        this.recordList = this.recordList.filter((item) => {\n                            return item.timestamp != record.timestamp || item.content != record.content;\n                        });\n                        yield this.storage.setItem(this.recordCacheKey, this.recordList);\n                        resolve(true);\n                    }\n                    else {\n                        reject(false);\n                    }\n                }\n                catch (e) {\n                    (0, log_1.logDebug)('send record error:', e);\n                    resolve(true);\n                    // reject(e)\n                }\n            }));\n        });\n    }\n    sendRecordContent(content, type, action) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            let path = (_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.location.pathname;\n            let location = (_b = (0, url_1.getWindow)()) === null || _b === void 0 ? void 0 : _b.location.origin;\n            if (path && location) {\n                location = location + path;\n            }\n            let language = (_c = (0, url_1.getWindow)()) === null || _c === void 0 ? void 0 : _c.navigator.language;\n            let ua = (_d = (0, url_1.getWindow)()) === null || _d === void 0 ? void 0 : _d.navigator.userAgent;\n            let platform = this.reportPlatform;\n            let reportItem = {\n                uuid: this.currentUUID,\n                version: this.currentVersion,\n                content: content,\n                action: action,\n                side: this.currentSide,\n                timestamp: new Date().getTime(),\n                url: location,\n                lang: language,\n                type: type,\n                platform: platform,\n                \"user-agent\": ua\n            };\n            yield this.markRecordItem(reportItem);\n            yield this.sendRecord(reportItem);\n        });\n    }\n    sendCachedRecords() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let sendList = this.recordList.map(record => this.sendRecord(record));\n                (0, log_1.logDebug)('[REPORT] submit & clean recorded caches begin @', new Date().toUTCString());\n                Promise.allSettled(sendList).then((results) => {\n                    (0, log_1.logDebug)('[REPORT] submit & clean recorded caches ends @', new Date().toUTCString());\n                    let keepIndex = [];\n                    results.forEach((result, index) => {\n                        if (result.status == \"rejected\") {\n                            keepIndex.push(index);\n                        }\n                    });\n                    this.recordList = this.recordList.filter((_, index) => !keepIndex.includes(index));\n                    this.storage.setItem(this.recordCacheKey, this.recordList).then(function (value) {\n                        resolve();\n                    }).catch(function (err) {\n                        reject(err);\n                    });\n                });\n            }));\n        });\n    }\n    markRecordItem(item) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.recordList.push(item);\n            if (this.recordList.length > MAX_LIMIT_REPORTCOUNT) {\n                let offset = this.recordList.length - MAX_LIMIT_REPORTCOUNT;\n                this.recordList.splice(0, offset);\n            }\n            return new Promise((resolve, reject) => {\n                this.storage.setItem(this.recordCacheKey, this.recordList).then(function (value) {\n                    resolve(item);\n                }).catch(function (err) {\n                    reject(err);\n                });\n            });\n        });\n    }\n    markRecord(content, type, action, side) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            let path = (_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.location.pathname;\n            let location = (_b = (0, url_1.getWindow)()) === null || _b === void 0 ? void 0 : _b.location.origin;\n            if (path && location) {\n                location = location + path;\n            }\n            let language = (_c = (0, url_1.getWindow)()) === null || _c === void 0 ? void 0 : _c.navigator.language;\n            let platform = this.reportPlatform;\n            let ua = (_d = (0, url_1.getWindow)()) === null || _d === void 0 ? void 0 : _d.navigator.userAgent;\n            let reportItem = {\n                uuid: this.currentUUID,\n                version: this.currentVersion,\n                content: content,\n                action: action,\n                side: side,\n                timestamp: new Date().getTime(),\n                url: location,\n                lang: language,\n                type: type,\n                platform: platform,\n                \"user-agent\": ua\n            };\n            return yield this.markRecordItem(reportItem);\n        });\n    }\n}\nexports.OKXReporter = OKXReporter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Report_WalletType_Key = exports.Report_Proceed_QRCode_Click = exports.Report_ChooseType_Download_Click = exports.Report_ChooseType_ConnectWallet_Click = exports.Report_Proceed_Retry_Click = exports.Report_ChooseType_ConnectWallet_View = exports.Report_Loading_ConnectWallet_View = exports.Report_Proceed_QRCode_View = exports.Report_Proceed_Proceed_View = void 0;\nexports.Report_Proceed_Proceed_View = \"OKXConnectSDK_Proceed_Proceed_View\";\nexports.Report_Proceed_QRCode_View = \"OKXConnectSDK_Proceed_QRCode_View\";\nexports.Report_Loading_ConnectWallet_View = \"OKXConnectSDK_Loading_ConnectWallet_View\";\nexports.Report_ChooseType_ConnectWallet_View = \"OKXConnectSDK_ChooseType_ConnectWallet_View\";\nexports.Report_Proceed_Retry_Click = \"OKXConnectSDK_Proceed_Retry_Click\";\nexports.Report_ChooseType_ConnectWallet_Click = \"OKXConnectSDK_ChooseType_ConnectWallet_Click\";\nexports.Report_ChooseType_Download_Click = \"OKXConnectSDK_ChooseType_Download_Click\";\nexports.Report_Proceed_QRCode_Click = \"OKXConnectSDK_Proceed_QRCode_Click\";\nexports.Report_WalletType_Key = 'wallet_type';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkMetaData = checkMetaData;\nconst protocol_1 = require(\"../protocol\");\nfunction checkMetaData(dappMetaData) {\n    if (!dappMetaData) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"You have to specify a `dappMetaData`in the options.\");\n    }\n    if (!dappMetaData.name) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"dappName is required\");\n    }\n    if (!dappMetaData.icon) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"icon is required\");\n    }\n    return true;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.safeJsonParse = safeJsonParse;\nexports.safeJsonStringify = safeJsonStringify;\nconst log_1 = require(\"./log\");\nconst JSONStringify = (data) => JSON.stringify(data, (_, value) => (typeof value === \"bigint\" ? value.toString() + \"n\" : value));\n/*\n  Function to parse JSON.\n  If JSON has values in our custom format BigInt (strings with \"n\" character at the end), we just parse them to BigInt values.\n  If JSON has big number values, but not in our custom format, we copy it, and in a copy we convert those values to our custom format,\n  then parse them to BigInt values.\n  Other values (not big numbers and not our custom format BigInt values) are not affected and parsed as native JSON.parse() would parse them.\n*/\nconst JSONParse = (json) => {\n    /*\n      Big numbers are found and marked using Regex with this condition:\n      Number's length is bigger than 16 || Number's length is 16 and any numerical digit of the number is greater than that of the Number.MAX_SAFE_INTEGER\n      Additionally, it skips values that are strings (between double quotes).\n      */\n    // prettier-ignore\n    // eslint-disable-next-line no-useless-escape\n    const numbersBiggerThanMaxInt = /:(\\b\\d{17,}|\\b(?:[9](?:[1-9]07199254740991|0[1-9]7199254740991|00[8-9]199254740991|007[2-9]99254740991|007199[3-9]54740991|0071992[6-9]4740991|00719925[5-9]740991|007199254[8-9]40991|0071992547[5-9]0991|00719925474[1-9]991|00719925474099[2-9])))(?=[,\\}\\]]|$)/g;\n    const serializedData = json.replace(numbersBiggerThanMaxInt, (match, group) => `:\"${group}n\"`);\n    try {\n        return JSON.parse(serializedData, (_, value) => {\n            const isCustomFormatBigInt = typeof value === \"string\" && value.match(/^\\d+n$/);\n            if (isCustomFormatBigInt)\n                return BigInt(value.substring(0, value.length - 1));\n            return value;\n        });\n    }\n    catch (e) {\n        return JSON.parse(json);\n    }\n};\nfunction safeJsonParse(value) {\n    if (typeof value !== \"string\") {\n        (0, log_1.logDebug)(value);\n        throw new Error(`Cannot safe json parse value of type ${typeof value}`);\n    }\n    try {\n        return JSONParse(value);\n    }\n    catch (e) {\n        // eslint-disable-next-line no-console\n        console.error(\"safeJsonParse error:\", e);\n        return value;\n    }\n}\nfunction safeJsonStringify(value) {\n    return typeof value === \"string\" ? value : JSONStringify(value) || \"\";\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.okxfromString = okxfromString;\nexports.okxtoString = okxtoString;\nexports.alloc = alloc;\nexports.allocUnsafe = allocUnsafe;\nconst basics_1 = require(\"multiformats/basics\");\nconst log_1 = require(\"../utils/log\");\nfunction okxfromString(string, encoding = 'utf8') {\n    const base = BASES[encoding];\n    (0, log_1.logDebug)(\"okxfromstring ====> \");\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    return base.decoder.decode(`${base.prefix}${string}`);\n}\nfunction okxtoString(array, encoding = 'utf8') {\n    const base = BASES[encoding];\n    (0, log_1.logDebug)(\"okxtoString ====> \");\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    return base.encoder.encode(array).substring(1);\n}\nfunction alloc(size = 0) {\n    return new Uint8Array(size);\n}\nfunction allocUnsafe(size = 0) {\n    return new Uint8Array(size);\n}\nfunction createCodec(name, prefix, encode, decode) {\n    return {\n        name,\n        prefix,\n        encoder: {\n            name,\n            prefix,\n            encode\n        },\n        decoder: { decode }\n    };\n}\nconst string = createCodec('utf8', 'u', buf => {\n    const decoder = new TextDecoder('utf8');\n    return 'u' + decoder.decode(buf);\n}, str => {\n    const encoder = new TextEncoder();\n    return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n    let result = 'a';\n    for (let i = 0; i < buf.length; i++) {\n        let bufNum = buf[i];\n        if (bufNum && String.fromCharCode(bufNum)) {\n            result += String.fromCharCode(bufNum);\n        }\n    }\n    return result;\n}, str => {\n    str = str.substring(1);\n    const buf = allocUnsafe(str.length);\n    for (let i = 0; i < str.length; i++) {\n        buf[i] = str.charCodeAt(i);\n    }\n    return buf;\n});\nconst BASES = Object.assign({ utf8: string, 'utf-8': string, hex: basics_1.bases.base16, latin1: ascii, ascii: ascii, binary: ascii }, basics_1.bases);\n","\"use strict\";\nvar _a, _b, _c, _d, _e, _f, _g;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isTmaPlatform = isTmaPlatform;\nexports.isInTMA = isInTMA;\nexports.isInTelegramBrowser = isInTelegramBrowser;\nexports.sendExpand = sendExpand;\nexports.sendOpenTelegramLink = sendOpenTelegramLink;\nexports.versionCompare = versionCompare;\nconst url_1 = require(\"./url\");\nconst log_1 = require(\"./log\");\nconst protocol_1 = require(\"../protocol\");\nconst web_api_1 = require(\"./web-api\");\nlet initParams = {};\ntry {\n    let locationHash = location.hash.toString();\n    initParams = urlParseHashParams(locationHash);\n}\ncatch (e) { }\nlet tmaPlatform = 'unknown';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppPlatform) {\n    tmaPlatform = (_a = initParams.tgWebAppPlatform) !== null && _a !== void 0 ? _a : 'unknown';\n}\nif (tmaPlatform === 'unknown') {\n    const window = (0, url_1.getWindow)();\n    tmaPlatform = (_d = (_c = (_b = window === null || window === void 0 ? void 0 : window.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : 'unknown';\n}\nlet webAppVersion = '6.0';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppVersion) {\n    webAppVersion = initParams.tgWebAppVersion;\n}\nif (!webAppVersion) {\n    const window = (0, url_1.getWindow)();\n    webAppVersion = (_g = (_f = (_e = window === null || window === void 0 ? void 0 : window.Telegram) === null || _e === void 0 ? void 0 : _e.WebApp) === null || _f === void 0 ? void 0 : _f.version) !== null && _g !== void 0 ? _g : '6.0';\n}\n/**\n * Returns true if the app is running in TMA on the specified platform.\n * @param platforms\n */\nfunction isTmaPlatform(...platforms) {\n    return platforms.includes(tmaPlatform);\n}\n/**\n * Returns true if the app is running in TMA.\n */\nfunction isInTMA() {\n    var _a;\n    return tmaPlatform !== 'unknown' || !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n}\n/**\n * Returns true if the app is running in the Telegram browser.\n */\nfunction isInTelegramBrowser() {\n    var _a;\n    const isTelegramWebview = !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebview);\n    return (isInTMA() || isTelegramWebview) && tmaPlatform === 'unknown';\n}\n/**\n * Expand the app window.\n */\nfunction sendExpand() {\n    postEvent('web_app_expand', {});\n}\n/**\n * Opens link in TMA or in new tab and returns a function that closes the tab.\n * @param link The link to open.\n * @param fallback The function to call if the link can't be opened in TMA.\n */\nfunction sendOpenTelegramLink(link, fallback) {\n    const url = new URL(link);\n    if (url.protocol !== 'http:' && url.protocol !== 'https:') {\n        if (fallback) {\n            return fallback();\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Url protocol is not supported: ${url}`);\n    }\n    if (url.hostname !== 't.me') {\n        if (fallback) {\n            return fallback();\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Url host is not supported: ${url}`);\n    }\n    const pathFull = url.pathname + url.search;\n    if (isIframe() || versionAtLeast('6.1')) {\n        postEvent('web_app_open_tg_link', { path_full: pathFull });\n    }\n    else {\n        (0, web_api_1.openLinkBlank)('https://t.me' + pathFull);\n    }\n}\nfunction isIframe() {\n    try {\n        const window = (0, url_1.getWindow)();\n        if (!window) {\n            return false;\n        }\n        return window.parent != null && window !== window.parent;\n    }\n    catch (e) {\n        return false;\n    }\n}\nfunction postEvent(eventType, eventData) {\n    try {\n        const window = (0, url_1.getWindow)();\n        if (!window) {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Can't post event to parent window: window is not defined`);\n        }\n        if (window.TelegramWebviewProxy !== undefined) {\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.TelegramWebviewProxy.postEvent(eventType, JSON.stringify(eventData));\n        }\n        else if (window.external && 'notify' in window.external) {\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.external.notify(JSON.stringify({ eventType: eventType, eventData: eventData }));\n        }\n        else if (isIframe()) {\n            const trustedTarget = '*';\n            const message = JSON.stringify({ eventType: eventType, eventData: eventData });\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.parent.postMessage(message, trustedTarget);\n        }\n        else {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Can't post event to TMA`);\n        }\n    }\n    catch (e) {\n        (0, log_1.logError)(`Can't post event to parent window: ${e}`);\n    }\n}\nfunction urlParseHashParams(locationHash) {\n    locationHash = locationHash.replace(/^#/, '');\n    let params = {};\n    if (!locationHash.length) {\n        return params;\n    }\n    if (locationHash.indexOf('=') < 0 && locationHash.indexOf('?') < 0) {\n        params._path = urlSafeDecode(locationHash);\n        return params;\n    }\n    let qIndex = locationHash.indexOf('?');\n    if (qIndex >= 0) {\n        let pathParam = locationHash.substr(0, qIndex);\n        params._path = urlSafeDecode(pathParam);\n        locationHash = locationHash.substr(qIndex + 1);\n    }\n    let query_params = urlParseQueryString(locationHash);\n    for (let k in query_params) {\n        params[k] = query_params[k];\n    }\n    return params;\n}\nfunction urlSafeDecode(urlencoded) {\n    try {\n        urlencoded = urlencoded.replace(/\\+/g, '%20');\n        return decodeURIComponent(urlencoded);\n    }\n    catch (e) {\n        return urlencoded;\n    }\n}\nfunction urlParseQueryString(queryString) {\n    let params = {};\n    if (!queryString.length) {\n        return params;\n    }\n    let queryStringParams = queryString.split('&');\n    let i, param, paramName, paramValue;\n    for (i = 0; i < queryStringParams.length; i++) {\n        param = queryStringParams[i].split('=');\n        paramName = urlSafeDecode(param[0]);\n        paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n        params[paramName] = paramValue;\n    }\n    return params;\n}\nfunction versionCompare(v1, v2) {\n    if (typeof v1 !== 'string')\n        v1 = '';\n    if (typeof v2 !== 'string')\n        v2 = '';\n    let v1List = v1.replace(/^\\s+|\\s+$/g, '').split('.');\n    let v2List = v2.replace(/^\\s+|\\s+$/g, '').split('.');\n    let a, i, p1, p2;\n    a = Math.max(v1List.length, v2List.length);\n    for (i = 0; i < a; i++) {\n        p1 = parseInt(v1List[i]) || 0;\n        p2 = parseInt(v2List[i]) || 0;\n        if (p1 === p2)\n            continue;\n        if (p1 > p2)\n            return 1;\n        return -1;\n    }\n    return 0;\n}\nfunction versionAtLeast(ver) {\n    return versionCompare(webAppVersion, ver) >= 0;\n}\n","\"use strict\";\nvar _a, _b, _c, _d;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.removeUrlLastSlash = removeUrlLastSlash;\nexports.addPathToUrl = addPathToUrl;\nexports.getUniversalLink = getUniversalLink;\nexports.openOKXDeeplink = openOKXDeeplink;\nexports.openOKXUniversalLink = openOKXUniversalLink;\nexports.openOKXDeeplinkWithFallback = openOKXDeeplinkWithFallback;\nexports.getWindow = getWindow;\nexports.isTelegramUrl = isTelegramUrl;\nexports.encodeTelegramUrlParameters = encodeTelegramUrlParameters;\nexports.encodeConnectParams = encodeConnectParams;\nexports.encodeTWAConnectURLParams = encodeTWAConnectURLParams;\nexports.getAppWalletDeepLink = getAppWalletDeepLink;\nexports.getAppWalletShortDeepLink = getAppWalletShortDeepLink;\nexports.getTelegramWalletTWAUrl = getTelegramWalletTWAUrl;\nexports.openOKXTMAWalletlinkWithFallback = openOKXTMAWalletlinkWithFallback;\nexports.isInTMA = isInTMA;\nexports.isInTelegramBrowser = isInTelegramBrowser;\nexports.getOKXLink = getOKXLink;\nconst protocol_1 = require(\"../protocol\");\nconst log_1 = require(\"./log\");\nconst constants_1 = require(\"../protocol/constants\");\nconst utils_1 = require(\"./utils\");\nconst tma_api_1 = require(\"./tma-api\");\nfunction removeUrlLastSlash(url) {\n    if (url.slice(-1) === '/') {\n        return url.slice(0, -1);\n    }\n    return url;\n}\nfunction addPathToUrl(url, path) {\n    return removeUrlLastSlash(url) + '/' + path;\n}\nfunction getUniversalLink(deeplinkUrl, useStandardUniversalLink = false) {\n    console.log(\"getUniversalLink deeplinkUrl:\", deeplinkUrl, \", useStandardUniversalLink:\", useStandardUniversalLink);\n    const replaceStrWithParam = `${protocol_1.standardDeeplink}?param=`;\n    if (!useStandardUniversalLink && deeplinkUrl.startsWith(replaceStrWithParam)) {\n        const cleanUrl = deeplinkUrl.replace(replaceStrWithParam, '');\n        (0, log_1.logDebug)(\"getUniversalLink cleanUrl:\", cleanUrl);\n        const deeplinkEncodeUrl = encodeURIComponent(cleanUrl);\n        (0, log_1.logDebug)(\"getUniversalLink standardUniversalLink:\", protocol_1.standardUniversalLink);\n        (0, log_1.logDebug)(\"getUniversalLink `${shortUniversalLink}?param=${deeplinkEncodeUrl}`:\", `${constants_1.shortUniversalLink}?param=${deeplinkEncodeUrl}`);\n        return `${constants_1.shortUniversalLink}?param=${deeplinkEncodeUrl}`;\n    }\n    else if (!useStandardUniversalLink && deeplinkUrl == protocol_1.standardDeeplink) {\n        (0, log_1.logDebug)(\"getUniversalLink shortUniversalLink:\", constants_1.shortUniversalLink);\n        return constants_1.shortUniversalLink;\n    }\n    else {\n        const deeplinkEncodeUrl = encodeURIComponent(deeplinkUrl);\n        console.log(\"getUniversalLink standardUniversalLink:\", protocol_1.standardUniversalLink);\n        return `${protocol_1.standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`;\n    }\n}\nfunction openOKXDeeplink(deeplinkUrl) {\n    var _a;\n    const fullUrl = getUniversalLink(deeplinkUrl);\n    const isTelegram = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n    console.log(\"openOKXDeeplink fullUrl:\", fullUrl);\n    if (!(0, utils_1.isIos)()) {\n        let newWindow = null;\n        if (isTelegram) {\n            newWindow = window.open(deeplinkUrl, '_blank');\n        }\n        else {\n            window.location.href = deeplinkUrl;\n        }\n    }\n    else {\n        openOKXUniversalLink(fullUrl);\n    }\n}\nfunction openOKXUniversalLink(fullUrl) {\n    if (!(0, utils_1.isIos)()) {\n        // if (isTelegram) {\n        window.open(fullUrl, '_blank');\n        // } else {\n        //     window.location.href = fullUrl;\n        // }\n    }\n    else {\n        if (isInTMA()) {\n            window.open(fullUrl, '_blank');\n        }\n        else {\n            console.log(\"windowOpen[before]: \", Date.now());\n            if (window === null || window === void 0 ? void 0 : window.okxLogDebug) {\n                window.open(fullUrl, '_blank');\n            }\n            else {\n                window.open(fullUrl, '_self');\n            }\n            console.log(\"windowOpen[after]: \", Date.now());\n        }\n    }\n}\nfunction openOKXDeeplinkWithFallback(deeplinkUrl) {\n    var _a;\n    const fullUrl = getUniversalLink(deeplinkUrl);\n    const isTelegram = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n    console.log(\"openOKXDeeplinkWithFallback fullUrl:\", fullUrl);\n    let deepLinkOpened = false;\n    const timeoutDuration = 3000; // 1.5秒的等待时间\n    const downloadUrl = protocol_1.standardUniversalLink;\n    console.log(\"openOKXDeeplinkWithFallback standardUniversalLink:\", protocol_1.standardUniversalLink);\n    if (!(0, utils_1.isIos)()) {\n        let newWindow = null;\n        var fallbackToDownloadPage = () => {\n            if (!deepLinkOpened) {\n                if (newWindow) {\n                    newWindow.open(fullUrl, '_self');\n                }\n                else {\n                    window.open(fullUrl, '_blank');\n                }\n            }\n        };\n        if (isTelegram) {\n            newWindow = window.open(deeplinkUrl, '_blank');\n        }\n        else {\n            window.location.href = deeplinkUrl;\n        }\n        setTimeout(fallbackToDownloadPage, timeoutDuration);\n        window.addEventListener('blur', () => {\n            deepLinkOpened = true;\n        }, { once: true });\n        document.addEventListener('visibilitychange', () => {\n            if (document.visibilityState === 'hidden') {\n                deepLinkOpened = true;\n            }\n        });\n    }\n    else {\n        if (isTelegram) {\n            window.open(fullUrl, '_blank');\n        }\n        else {\n            console.log(\"windowOpen[before]: \", Date.now());\n            if (window === null || window === void 0 ? void 0 : window.okxLogDebug) {\n                window.open(fullUrl, '_blank');\n            }\n            else {\n                window.open(fullUrl, '_self');\n            }\n            console.log(\"windowOpen[after]: \", Date.now());\n        }\n    }\n}\nfunction getWindow() {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    return undefined;\n}\nfunction isTelegramUrl(link) {\n    if (!link) {\n        return false;\n    }\n    const url = new URL(link);\n    return url.protocol === 'tg:' || url.hostname === 't.me';\n}\nfunction encodeTelegramUrlParameters(parameters) {\n    let encodedParameters = parameters;\n    encodedParameters = encodedParameters.replace(/\\./g, '%2E');\n    encodedParameters = encodedParameters.replace(/-/g, '%2D');\n    encodedParameters = encodedParameters.replace(/_/g, '%5F');\n    encodedParameters = encodedParameters.replace(/&/g, '-');\n    encodedParameters = encodedParameters.replace(/=/g, '__');\n    encodedParameters = encodedParameters.replace(/%/g, '--');\n    return encodedParameters;\n}\nfunction encodeConnectParams(connectRequest) {\n    const connectRequestStr = JSON.stringify(connectRequest);\n    (0, log_1.logDebug)(\"url encodeConnectParams connectRequestStr \", connectRequestStr);\n    const utf8Array = new TextEncoder().encode(connectRequestStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    // .replace(/\\+/g, '-')\n    // .replace(/\\//g, '_')\n    // .replace(/=+$/, ''); //Compatible with older versions of iOS. Cannot be added directly  (Base64 URL Safe)\n    (0, log_1.logDebug)(\"url encodeConnectParams base64Encoded \", base64Encoded);\n    return base64Encoded;\n}\nfunction encodeTWAConnectURLParams(connectRequest) {\n    const connectRequestStr = JSON.stringify({ topic: connectRequest.topic, clientId: connectRequest.clientId });\n    (0, log_1.logDebug)(\"url encodeConnectParams connectRequestStr\", connectRequestStr);\n    const utf8Array = new TextEncoder().encode(connectRequestStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    return base64Encoded;\n}\nfunction getAppWalletDeepLink(connectParam) {\n    return `${protocol_1.standardDeeplink}?param=${connectParam}`;\n}\nfunction getAppWalletShortDeepLink(topic, clientId) {\n    return `${constants_1.shortUniversalLink}?topic=${topic}${(0, utils_1.getLastSixMd5Hash)(clientId)}`;\n}\n//  make telegram okx wallet TWA url\nfunction getTelegramWalletTWAUrl(connectParam, redirectStr) {\n    let base64Content = { okxconnect: \"\", redirect: \"\", extraparams: \"\" };\n    if (connectParam) {\n        base64Content.okxconnect = connectParam;\n    }\n    if (redirectStr) {\n        base64Content.redirect = redirectStr;\n    }\n    let base64ContentStr = JSON.stringify(base64Content);\n    const utf8Array = new TextEncoder().encode(base64ContentStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    const urlSafeBase64 = (0, utils_1.toSafeBase64FromBase64)(base64Encoded);\n    (0, log_1.logDebug)('[TWA] open link:', base64Content, base64Encoded);\n    if (connectParam || redirectStr) {\n        if (!isInTMA()) {\n            // return `http://localhost:5173?tgWebAppStartParam=${urlSafeBase64}`\n            if ((0, constants_1.getTestTwaUrl)()) {\n                return `${(0, constants_1.getTestTwaUrl)()}?tgWebAppStartParam=${urlSafeBase64}`;\n            }\n            else {\n                return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}&startapp=${urlSafeBase64}`;\n            }\n        }\n        else {\n            if ((0, constants_1.getTestTgTwaUrl)()) {\n                return `${(0, constants_1.getTestTgTwaUrl)()}?startapp=${urlSafeBase64}`;\n            }\n            else {\n                return `https://t.me/${constants_1.tgwalletName}/start?startapp=${urlSafeBase64}`;\n            }\n        }\n    }\n    if (!isInTMA()) {\n        // return \"http://localhost:5173\"\n        if ((0, constants_1.getTestTwaUrl)()) {\n            return `${(0, constants_1.getTestTwaUrl)()}`;\n        }\n        else {\n            return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}`;\n        }\n    }\n    else {\n        if ((0, constants_1.getTestTgTwaUrl)()) {\n            return `${(0, constants_1.getTestTgTwaUrl)()}`;\n        }\n        else {\n            return `https://t.me/${constants_1.tgwalletName}/start`;\n        }\n    }\n}\n//  open TWA url in telegram\nfunction openOKXTMAWalletlinkWithFallback(twaDeepLink) {\n    var _a, _b, _c, _d, _e;\n    (0, log_1.logDebug)('[TWA] open link:', twaDeepLink, \"isInTMA ==> \", isInTMA());\n    if (!isInTMA()) {\n        if ((0, constants_1.getTestTwaUrl)()) {\n            window.open(twaDeepLink, '_blank');\n        }\n        else {\n            window.open(twaDeepLink, '_self');\n        }\n    }\n    else {\n        if ((_b = (_a = getWindow()) === null || _a === void 0 ? void 0 : _a.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) {\n            (_e = (_d = (_c = getWindow()) === null || _c === void 0 ? void 0 : _c.Telegram) === null || _d === void 0 ? void 0 : _d.WebApp) === null || _e === void 0 ? void 0 : _e.openTelegramLink(twaDeepLink);\n        }\n        else {\n            (0, tma_api_1.sendOpenTelegramLink)(twaDeepLink);\n        }\n    }\n}\n/**\n * Returns true if the app is running in TMA.\n */\nfunction urlSafeDecode(urlencoded) {\n    try {\n        urlencoded = urlencoded.replace(/\\+/g, '%20');\n        return decodeURIComponent(urlencoded);\n    }\n    catch (e) {\n        return urlencoded;\n    }\n}\nfunction urlParseQueryString(queryString) {\n    let params = {};\n    if (!queryString.length) {\n        return params;\n    }\n    let queryStringParams = queryString.split('&');\n    let i, param, paramName, paramValue;\n    for (i = 0; i < queryStringParams.length; i++) {\n        param = queryStringParams[i].split('=');\n        paramName = urlSafeDecode(param[0]);\n        paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n        params[paramName] = paramValue;\n    }\n    return params;\n}\nfunction urlParseHashParams(locationHash) {\n    locationHash = locationHash.replace(/^#/, '');\n    let params = {};\n    if (!locationHash.length) {\n        return params;\n    }\n    if (locationHash.indexOf('=') < 0 && locationHash.indexOf('?') < 0) {\n        params._path = urlSafeDecode(locationHash);\n        return params;\n    }\n    let qIndex = locationHash.indexOf('?');\n    if (qIndex >= 0) {\n        let pathParam = locationHash.substr(0, qIndex);\n        params._path = urlSafeDecode(pathParam);\n        locationHash = locationHash.substr(qIndex + 1);\n    }\n    let query_params = urlParseQueryString(locationHash);\n    for (let k in query_params) {\n        params[k] = query_params[k];\n    }\n    return params;\n}\nlet initParams = {};\ntry {\n    let locationHash = location.hash.toString();\n    initParams = urlParseHashParams(locationHash);\n}\ncatch (e) { }\nlet tmaPlatform = 'unknown';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppPlatform) {\n    tmaPlatform = (_a = initParams.tgWebAppPlatform) !== null && _a !== void 0 ? _a : 'unknown';\n}\nif (tmaPlatform === 'unknown') {\n    const window = getWindow();\n    tmaPlatform = (_d = (_c = (_b = window === null || window === void 0 ? void 0 : window.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : 'unknown';\n}\nfunction isInTMA() {\n    var _a;\n    return tmaPlatform !== 'unknown' || !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n}\n/**\n * Returns true if the app is running in the Telegram browser.\n */\nfunction isInTelegramBrowser() {\n    var _a;\n    const isTelegramWebview = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebview);\n    return (isInTMA() || isTelegramWebview) && tmaPlatform === 'unknown';\n}\nfunction getOKXLink(connectRequest, useMini = false, tmaReturnUrl) {\n    (0, log_1.logDebug)(`url  getOKXLink() called connectRequest==> ${JSON.stringify(connectRequest)}  useMini=> ${useMini}  tmaReturnUrl==> ${tmaReturnUrl}`);\n    if (useMini) {\n        var encodeTGParams = encodeTWAConnectURLParams(connectRequest);\n        return getTelegramWalletTWAUrl(encodeTGParams, tmaReturnUrl !== null && tmaReturnUrl !== void 0 ? tmaReturnUrl : \"back\");\n    }\n    else {\n        if ((0, utils_1.useShortLink)()) {\n            return getAppWalletShortDeepLink(connectRequest.topic, connectRequest.clientId);\n        }\n        else {\n            const base64Encoded = encodeConnectParams(connectRequest);\n            return `${protocol_1.standardDeeplink}?param=${base64Encoded}`;\n        }\n    }\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isValidObject = exports.RANDOM_LENGTH = exports.isBrowser = exports.resolveLocalStorage = exports.hasLocalStorage = exports.hasBuiltInWebSocket = exports.resolveWebSocketImplementation = void 0;\nexports.hexToByteArray = hexToByteArray;\nexports.toHexString = toHexString;\nexports.concatUint8Arrays = concatUint8Arrays;\nexports.splitToUint8Arrays = splitToUint8Arrays;\nexports.base64encode = base64encode;\nexports.base64decode = base64decode;\nexports.checkWSUrl = checkWSUrl;\nexports.hashKey = hashKey;\nexports.generateRandomBytes32 = generateRandomBytes32;\nexports.generateTopic = generateTopic;\nexports.isIos = isIos;\nexports.getLastSixMd5Hash = getLastSixMd5Hash;\nexports.toSafeBase64FromBase64 = toSafeBase64FromBase64;\nexports.useShortLink = useShortLink;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst tweetnacl_util_1 = __importDefault(require(\"tweetnacl-util\"));\nconst to_string_1 = require(\"uint8arrays/to-string\");\nconst sha256_1 = require(\"@stablelib/sha256\");\nconst safejson_1 = require(\"./safejson\");\nconst log_1 = require(\"./log\");\nconst stringUtils_1 = require(\"../utils/stringUtils\");\nconst crypto_js_1 = __importDefault(require(\"crypto-js\"));\nconst BASE16 = \"base16\";\nfunction hexToByteArray(hexString) {\n    if (hexString.length % 2 !== 0) {\n        throw new Error(`Cannot convert ${hexString} to bytesArray`);\n    }\n    const result = new Uint8Array(hexString.length / 2);\n    for (let i = 0; i < hexString.length; i += 2) {\n        result[i / 2] = parseInt(hexString.slice(i, i + 2), 16);\n    }\n    return result;\n}\nfunction toHexString(byteArray) {\n    let hexString = '';\n    byteArray.forEach(byte => {\n        hexString += ('0' + (byte & 0xff).toString(16)).slice(-2);\n    });\n    return hexString;\n}\nfunction concatUint8Arrays(buffer1, buffer2) {\n    const mergedArray = new Uint8Array(buffer1.length + buffer2.length);\n    mergedArray.set(buffer1);\n    mergedArray.set(buffer2, buffer1.length);\n    return mergedArray;\n}\nfunction splitToUint8Arrays(array, index) {\n    if (index >= array.length) {\n        throw new Error('Index is out of buffer');\n    }\n    const subArray1 = array.slice(0, index);\n    const subArray2 = array.slice(index);\n    return [subArray1, subArray2];\n}\nfunction encodeUint8Array(value, urlSafe) {\n    const encoded = tweetnacl_util_1.default.encodeBase64(value);\n    if (!urlSafe) {\n        return encoded;\n    }\n    return encodeURIComponent(encoded);\n}\nfunction decodeToUint8Array(value, urlSafe) {\n    if (urlSafe) {\n        value = decodeURIComponent(value);\n    }\n    return tweetnacl_util_1.default.decodeBase64(value);\n}\nfunction base64encode(value, urlSafe) {\n    let uint8Array;\n    if (value instanceof Uint8Array) {\n        uint8Array = value;\n    }\n    else {\n        if (typeof value !== 'string') {\n            value = (0, safejson_1.safeJsonStringify)(value);\n        }\n        uint8Array = tweetnacl_util_1.default.decodeUTF8(value);\n    }\n    return encodeUint8Array(uint8Array, urlSafe);\n}\nfunction base64decode(value, urlSafe) {\n    const decodedUint8Array = decodeToUint8Array(value, urlSafe);\n    return {\n        toString() {\n            return tweetnacl_util_1.default.encodeUTF8(decodedUint8Array);\n        },\n        toObject() {\n            try {\n                return (0, safejson_1.safeJsonParse)(tweetnacl_util_1.default.encodeUTF8(decodedUint8Array));\n            }\n            catch (e) {\n                return null;\n            }\n        },\n        toUint8Array() {\n            return decodedUint8Array;\n        }\n    };\n}\nfunction checkWSUrl(url) {\n    const match = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!match || !match.length) {\n        return false;\n    }\n    let scheme = match[0];\n    if (scheme === undefined) {\n        return false;\n    }\n    return new RegExp(\"^wss?:\").test(scheme);\n}\nconst resolveWebSocketImplementation = () => {\n    if (typeof WebSocket !== \"undefined\") {\n        return WebSocket;\n    }\n    else if (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") {\n        return global.WebSocket;\n    }\n    else if (typeof window !== \"undefined\" && typeof window.WebSocket !== \"undefined\") {\n        return window.WebSocket;\n    }\n    else if (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\") {\n        return self.WebSocket;\n    }\n    return WebSocket;\n    //\n    // return require(\"ws\");\n};\nexports.resolveWebSocketImplementation = resolveWebSocketImplementation;\nconst hasBuiltInWebSocket = () => typeof WebSocket !== \"undefined\" ||\n    (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") ||\n    (typeof window !== \"undefined\" && typeof window.WebSocket !== \"undefined\") ||\n    (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\");\nexports.hasBuiltInWebSocket = hasBuiltInWebSocket;\nconst hasLocalStorage = () => (typeof global !== \"undefined\" && (typeof global.localStorage !== \"undefined\")) ||\n    (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\");\nexports.hasLocalStorage = hasLocalStorage;\nconst resolveLocalStorage = () => {\n    if (typeof global !== \"undefined\" && typeof global.localStorage !== \"undefined\") {\n        return global.localStorage;\n    }\n    else if (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\") {\n        return window.localStorage;\n    }\n    return localStorage;\n};\nexports.resolveLocalStorage = resolveLocalStorage;\nconst isBrowser = () => typeof window !== \"undefined\";\nexports.isBrowser = isBrowser;\nexports.RANDOM_LENGTH = 32;\nfunction hashKey(key, encode = BASE16) {\n    (0, log_1.logDebug)(`hash key called ${key}`);\n    const result = (0, sha256_1.hash)((0, stringUtils_1.okxfromString)(key, encode));\n    return (0, to_string_1.toString)(result, encode);\n}\nfunction generateRandomBytes32() {\n    return tweetnacl_1.default.randomBytes(exports.RANDOM_LENGTH);\n}\nfunction generateTopic() {\n    let randomBytes32 = generateRandomBytes32();\n    (0, log_1.logDebug)(`generate topic called ${randomBytes32}`);\n    return hashKey((0, to_string_1.toString)(randomBytes32, BASE16));\n}\nconst isValidObject = (obj) => Object.getPrototypeOf(obj) === Object.prototype && Object.keys(obj).length;\nexports.isValidObject = isValidObject;\nfunction isIos() {\n    const userAgent = navigator.userAgent;\n    const maxTouchPoints = navigator.maxTouchPoints || 0;\n    // 检测 iPhone、iPod 和传统的 iPad\n    const isIOSDevice = /iPad|iPhone|iPod/.test(userAgent) && !window.MSStream;\n    // 针对 iPadOS 13 及以上的设备进行额外判断\n    const isIPadOS = (userAgent.includes('Mac') && maxTouchPoints > 1);\n    (0, log_1.logDebug)(`utils isIos >>>isIOSDevice: ${isIOSDevice}    >> isIPadOS: ${isIPadOS}`);\n    // 如果是 iOS 设备或者是 iPadOS 设备，返回 true\n    return isIOSDevice || isIPadOS;\n}\nfunction getLastSixMd5Hash(input) {\n    // 生成 MD5 哈希\n    const hash = crypto_js_1.default.MD5(input).toString();\n    // 获取最后六位\n    return hash.slice(-6);\n}\nfunction toSafeBase64FromBase64(base64) {\n    return base64\n        .replace(/=/g, \"\")\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\");\n}\nfunction useShortLink() {\n    return !!window.useShortLink;\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.openLink = openLink;\nexports.openLinkBlank = openLinkBlank;\nexports.openDeeplinkWithFallback = openDeeplinkWithFallback;\nexports.isMobileUserAgent = isMobileUserAgent;\nexports.getUserAgent = getUserAgent;\nexports.isOS = isOS;\nexports.isBrowser = isBrowser;\nconst ua_parser_js_1 = __importDefault(require(\"ua-parser-js\"));\nconst log_1 = require(\"./log\");\nfunction openLink(href, target = '_self') {\n    (0, log_1.logDebug)('openLink', href, target);\n    window.open(href, target, 'noopener noreferrer');\n}\nfunction openLinkBlank(href) {\n    openLink(href, '_blank');\n}\nfunction openDeeplinkWithFallback(href, fallback) {\n    const doFallback = () => {\n        if (isBrowser('safari') || (isOS('android') && isBrowser('firefox'))) {\n            // Safari does not support fallback to direct link.\n            return;\n        }\n        fallback();\n    };\n    const fallbackTimeout = setTimeout(() => doFallback(), 500);\n    window.addEventListener('blur', () => clearTimeout(fallbackTimeout), { once: true });\n    openLink(href, '_self');\n}\nfunction isMobileUserAgent() {\n    let check = false;\n    (function (a) {\n        if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) ||\n            /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.slice(0, 4)))\n            check = true;\n    })(navigator.userAgent ||\n        navigator.vendor ||\n        window.opera);\n    return check;\n}\nfunction getUserAgent() {\n    var _a, _b, _c;\n    const results = new ua_parser_js_1.default().getResult();\n    const osName = (_a = results.os.name) === null || _a === void 0 ? void 0 : _a.toLowerCase();\n    const deviceModel = (_b = results.device.model) === null || _b === void 0 ? void 0 : _b.toLowerCase();\n    let os;\n    switch (true) {\n        case deviceModel === 'ipad':\n            os = 'ipad';\n            break;\n        case osName === 'ios':\n            os = 'ios';\n            break;\n        case osName === 'android':\n            os = 'android';\n            break;\n        case osName === 'mac os':\n            os = 'macos';\n            break;\n        case osName === 'linux':\n            os = 'linux';\n            break;\n        case osName === null || osName === void 0 ? void 0 : osName.includes('windows'):\n            os = 'windows';\n            break;\n    }\n    const browserName = (_c = results.browser.name) === null || _c === void 0 ? void 0 : _c.toLowerCase();\n    let browser;\n    switch (true) {\n        case browserName === 'chrome':\n            browser = 'chrome';\n            break;\n        case browserName === 'firefox':\n            browser = 'firefox';\n            break;\n        case browserName === null || browserName === void 0 ? void 0 : browserName.includes('safari'):\n            browser = 'safari';\n            break;\n        case browserName === null || browserName === void 0 ? void 0 : browserName.includes('opera'):\n            browser = 'opera';\n            break;\n    }\n    return {\n        os,\n        browser\n    };\n}\nfunction isOS(...os) {\n    return os.includes(getUserAgent().os);\n}\nfunction isBrowser(...browser) {\n    return browser.includes(getUserAgent().browser);\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXBtcProvider = void 0;\nconst _1 = require(\"./\");\nclass OKXBtcProvider {\n    constructor(provider) {\n        this.caip = [\n            \"btc:mainnet\",\n            \"fractal:mainnet\"\n        ];\n        this.provider = provider;\n    }\n    getAddressForChainId(chainId) {\n        var _a, _b;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let accounts = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        });\n        if (accounts == undefined || accounts.length < 0) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `no connected account`);\n        }\n        let account = accounts[0];\n        const address = account.split(':')[2];\n        return address;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let extra = (_c = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.extra) === null || _c === void 0 ? void 0 : _c[chainId];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"compressedPublicKey\"];\n        }\n        return {\n            address: this.getAddressForChainId(chainId),\n            publicKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param signStr\n     * @param chainId\n     * @param type\n     * @returns\n     */\n    signMessage(chainId, signStr, type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (signStr === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signMessage parmas error`);\n            }\n            let params = {\n                signStr: signStr,\n                from: this.getAddressForChainId(chainId)\n            };\n            if (type) {\n                params.type = type;\n            }\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signMessage\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param toAddress\n     * @param satoshis\n     * @param options { feeRate: 0 }\n     * @returns\n     */\n    sendBitcoin(chainId, toAddress, satoshis, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            let params = {\n                from: this.getAddressForChainId(chainId),\n                to: toAddress,\n                value: (satoshis / 100000000).toString(),\n            };\n            if (options === null || options === void 0 ? void 0 : options.feeRate) {\n                params[\"satBytes\"] = options.feeRate.toString();\n            }\n            let result = yield this.send(chainId, params);\n            if (result !== undefined && ('txhash' in result)) {\n                // return txhash directly\n                return result.txhash;\n            }\n            // or return unexpected result\n            return result;\n        });\n    }\n    //  from - string：当前连接的钱包的 BTC 地址\n    //  to - string：接受 BTC 的地址\n    //  value - string：发送 BTC 的数量\n    //  satBytes - string： (可选) 自定义费率\n    //  memo - string： (可选) 指定 outputs OP_RETURN 内容 示例\n    //  memoPos - number： (可选) 指定 outputs OP_RETURN 输出位置，如果传了 memo 则必须传入 memoPos 指定位置，否则 memo 不生效\n    send(chainId, input) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (!this.checkParameters(input, 'to', 'value')) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send parmas  error`);\n            }\n            input[\"from\"] = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: 'btc_send',\n                    params: input\n                }, chainId);\n                if ('result' in ret) {\n                    return {\n                        txhash: ret.result\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param psbtHex string 要签名的 psbt 的十六进制字符串\n     * @param options object { autoFinalized: 0 }\n     */\n    signPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.signPsbts(chainId, [psbtHex], [options]).then(psbtResults => {\n                    let results = JSON.parse(psbtResults);\n                    resolve(results[0]);\n                }).catch(error => {\n                    reject(error);\n                });\n            });\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHexs Array\n     * @param options Array [{ autoFinalized: 0 }]\n     * @returns\n     */\n    signPsbts(chainId, psbtHexs, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHexs === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHexs: psbtHexs,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signPsbts\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHex string\n     * @param options object\n     * @returns\n     */\n    signAndPushPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHex === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHex: psbtHex,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signAndPushPsbt\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return JSON.parse(ret.result);\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param address string, receiver address\n     * @param inscriptionId string, 铭文 ID + 协议，没有传协议则默认是 Ordinals NFT ，目前仅支持 Ordinals 及 Atomicals 协议\n     * @param options object, { feeRate: number } custom rates\n     */\n    sendInscription(chainId, address, inscriptionId, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let extension = {\n                address: address,\n                inscriptionId: inscriptionId,\n                options: options\n            };\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (address === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method sendInscription params error`);\n            }\n            var feeRate = 0;\n            if (options && ('feeRate' in options)) {\n                feeRate = options.feeRate;\n            }\n            let coinId = '';\n            let from = this.getAddressForChainId(chainId);\n            var protocolId = 7; //ProtocolIdBRCNFT\n            if (inscriptionId !== 'undefined') {\n                let atomicSuffix = \"-Atomicals\";\n                let ordinalsSuffix = \"-Ordinals\";\n                if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(atomicSuffix.toLowerCase())) {\n                    protocolId = 8; //WXRCProtocolIdARCNFT\n                    inscriptionId = this.removeSuffix(inscriptionId, atomicSuffix);\n                }\n                else if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(ordinalsSuffix.toLowerCase())) {\n                    inscriptionId = this.removeSuffix(inscriptionId, ordinalsSuffix);\n                }\n            }\n            let params = {\n                scenario: 5,\n                feeRate: feeRate,\n                txType: \"20\",\n                to: address,\n                batchBean: [\n                    {\n                        coinAmount: \"1\",\n                        nftId: inscriptionId,\n                        protocolId: protocolId,\n                        coinId: coinId,\n                        inscriptionId: \"\",\n                        from: from\n                    }\n                ],\n                extension: extension\n            };\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_sendInscription\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    removeSuffix(str, suffix) {\n        if (str.endsWith(suffix)) {\n            return str.slice(0, str.length - suffix.length);\n        }\n        return str;\n    }\n    checkParameters(params, ...keys) {\n        var unexistKeys = [];\n        keys.forEach(key => {\n            if (!(`${key}` in params)) {\n                unexistKeys.push(key);\n            }\n        });\n        if (unexistKeys.length > 0) {\n            console.log('not find key: ', unexistKeys.join(\",\"));\n            return false;\n        }\n        return true;\n    }\n    /**\n     *\n     * @param chainId eg. btc:mainnet\n     * @returns eg. btc\n     */\n    checkChainId(chainId) {\n        if (this.caip.includes(chainId)) {\n            let [namespaceKey, _] = chainId.split(\":\");\n            return namespaceKey;\n        }\n        return undefined;\n    }\n}\nexports.OKXBtcProvider = OKXBtcProvider;\nexports.default = OKXBtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCosmosProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXCosmosProvider {\n    constructor(provider) {\n        this.provider = provider;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e, _f;\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount chainId:\", chainId);\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount namespaces:\", JSON.stringify((_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces));\n        let account = (_c = (_b = this.provider.session) === null || _b === void 0 ? void 0 : _b.namespaces[core_1.NameSpaceKeyCosmos]) === null || _c === void 0 ? void 0 : _c.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount account:\", JSON.stringify(account));\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount address:\", address);\n        let extra = (_f = (_e = (_d = this.provider.session) === null || _d === void 0 ? void 0 : _d.namespaces[core_1.NameSpaceKeyCosmos]) === null || _e === void 0 ? void 0 : _e.extra) === null || _f === void 0 ? void 0 : _f[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n            console.log(\"aptos_publicKey\", publicKey);\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            algo: \"secp256k1\",\n            address: address,\n            bech32Address: address,\n            pubKey: this.hexToUint8Array(publicKey),\n        };\n    }\n    signArbitrary(chainId, signerAddress, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const base64Encoded = window.btoa(data);\n            const signDoc = {\n                chain_id: \"\",\n                account_number: \"0\",\n                sequence: \"0\",\n                fee: {\n                    gas: \"0\",\n                    amount: []\n                },\n                msgs: [{\n                        \"type\": \"sign/MsgSignData\",\n                        \"value\": {\n                            \"signer\": signerAddress,\n                            \"data\": base64Encoded\n                        }\n                    }],\n                memo: \"\"\n            };\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signArbitrary\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chain_id\": chainId.split(\":\")[1],\n                    \"data\": signDoc\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    if (typeof ret.result == \"string\") {\n                        return JSON.parse(ret.result);\n                    }\n                    else {\n                        return ret.result;\n                    }\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAmino(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (signDoc.msgs[0].type == \"sign/MsgSignData\") {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signArbitrary\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chain_id\": chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        return ret.result;\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    return error;\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                }\n            }\n            else {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signAmino\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chainId\": chainId.split(\":\")[1],\n                        \"sign_doc\": signDoc,\n                        \"signOptions\": signOptions\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        const resData = JSON.parse(ret.result);\n                        console.log(\"signdoc\", signDoc, resData.signDoc);\n                        signDoc.fee = resData.signDoc.fee;\n                        return { signed: signDoc, signature: resData.signature };\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                    return error;\n                }\n            }\n        });\n    }\n    signDirect(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const object = {\n                bodyBytes: this.bufferToHex(signDoc.bodyBytes),\n                authInfoBytes: this.bufferToHex(signDoc.authInfoBytes),\n                chainId: signDoc.chainId,\n                accountNumber: signDoc.accountNumber ? signDoc.accountNumber.toString() : null,\n                signOptions: signOptions ? signOptions : null\n            };\n            let data = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signDirect\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chainId\": chainId.split(\":\")[1],\n                    \"sign_doc\": object,\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    const res = JSON.parse(ret.result);\n                    console.log(\"signdirect result\", res);\n                    signDoc.authInfoBytes = this.messageToBuffer(res.signDoc.authInfoBytes);\n                    return { signed: signDoc, signature: res.signature };\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    messageToBuffer(message) {\n        var buffer = Uint8Array.from([]);\n        try {\n            if (typeof message === \"string\") {\n                buffer = this.hexToUint8Array(message.replace(\"0x\", \"\"));\n            }\n            else {\n                buffer = Uint8Array.from(message);\n            }\n        }\n        catch (err) {\n            console.log(`messageToBuffer error: ${err}`);\n        }\n        return buffer;\n    }\n    bufferToHex(arr) {\n        let output = [...new Uint8Array(arr)]\n            .map(x => x.toString(16).padStart(2, '0'))\n            .join('');\n        return '0x' + output;\n    }\n    hexToUint8Array(hexString) {\n        if (hexString.length % 2 !== 0) {\n            throw \"Invalid hexString\";\n        }\n        var arrayBuffer = new Uint8Array(hexString.length / 2);\n        for (var i = 0; i < hexString.length; i += 2) {\n            var byteValue = parseInt(hexString.substr(i, 2), 16);\n            if (isNaN(byteValue)) {\n                throw \"Invalid hexString\";\n            }\n            arrayBuffer[i / 2] = byteValue;\n        }\n        return arrayBuffer;\n    }\n}\nexports.OKXCosmosProvider = OKXCosmosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXStarknetProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXStarknetProvider {\n    constructor(provider) {\n        this.STARKNET_CHAIN_ID = \"starknet:mainnet\";\n        this.provider = provider;\n    }\n    getChain(chainId) {\n        if (chainId == null) {\n            chainId = this.STARKNET_CHAIN_ID;\n        }\n        if (chainId != this.STARKNET_CHAIN_ID) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, \"The chainId:\" + chainId + \"is wrong for OKXStarknetProvider\");\n        }\n        return chainId;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyStarknet]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyStarknet]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address,\n            pubKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param chainId\n     * @param signerAddress\n     * @param data: { types, primaryType, domain, message } as TypedData\n     * @returns [signedDataR, signedDataS]\n     */\n    signMessage(signerAddress, typedData, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            if (signerAddress.length == 0) {\n                signerAddress = this.getAccount(chainId)[\"address\"];\n            }\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"starknet_signMessage\",\n                \"params\": {\n                    \"accountAddress\": signerAddress,\n                    \"typedData\": typedData\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    let results = ret.result;\n                    if (typeof results == 'string') {\n                        results = JSON.parse(results);\n                    }\n                    return [results[\"signedDataR\"], results[\"signedDataS\"]];\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     * sendTransaction\n     * @param chainId\n     * @param signerAddress\n     * @param transaction\n     * @returns { transaction_hash }\n     */\n    sendTransaction(signerAddress, transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let transactionData = {\n                \"accountAddress\": signerAddress,\n                \"executionRequest\": transaction\n            };\n            let data = {\n                \"method\": \"starknet_sendTransaction\",\n                \"params\": {\n                    \"data\": JSON.stringify(transactionData),\n                    \"from\": signerAddress\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return { transaction_hash: ret.result };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * signMessage old API（rarely used, no need provide to external）\n     * @param chainId\n     * @param payload\n     * @returns {transaction_hash, class_hash}\n     */\n    signMessageDeclareContractPayload(payload, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            try {\n                let data = {\n                    \"method\": \"starknet_signMessage\",\n                    \"params\": payload\n                };\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return {\n                        \"transaction_hash\": ret.result[\"txHash\"],\n                        \"class_hash\": ret.result[\"classHash\"]\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     * sendTransaction old API（rarely used, no need provide to external）\n     * @param chainId\n     * @param signerAddress\n     * @param calls\n     * @param abis\n     * @param transactionsDetail\n     * @returns { transaction_hash }\n     */\n    /// todo： \n    /// 修改方法名\n    /// chainId 放后面\n    sendMessageExecuteTransactionDetail(signerAddress, calls, abis, transactionsDetail, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            const transactions = Array.isArray(calls) ? calls : [calls];\n            const executionRequest = {\n                \"calls\": transactions,\n                \"abis\": abis,\n                \"transactionsDetail\": {\n                    \"nonce\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.nonce,\n                    \"maxFee\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.nonce,\n                    \"version\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.version,\n                }\n            };\n            return this.sendTransaction(signerAddress, executionRequest, chainId);\n        });\n    }\n}\nexports.OKXStarknetProvider = OKXStarknetProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTonProvider = void 0;\nconst _1 = require(\"./\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTonProvider {\n    constructor(generator) {\n        this.statusChangeSubscriptions = [];\n        this.statusChangeErrorSubscriptions = [];\n        this.provider = generator;\n        this.provider.on(\"connect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event connect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"reconnect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event reconnect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"disconnect\", () => {\n            (0, core_1.logDebug)(\"OKXTONProvider event disconnect:\");\n            this.statusChangeSubscriptions.forEach(callback => callback(null));\n        });\n        this.provider.on(\"connect_error\", (error) => {\n            (0, core_1.logDebug)(\"OKXTONProvider event connect_error:\", JSON.stringify(error));\n            this.statusChangeErrorSubscriptions.forEach(errorsHandler => errorsHandler(error));\n        });\n    }\n    connected() {\n        if (this.provider.connected()) {\n            return !!this.provider.session.namespaces[\"ton\"];\n        }\n        return false;\n    }\n    account() {\n        try {\n            if (!this.provider.session) {\n                return null;\n            }\n            let tonNameSpace = this.provider.session.namespaces['ton'];\n            if (!tonNameSpace || !tonNameSpace.payload || !tonNameSpace.payload.ton_addr) {\n                return null;\n            }\n            let ton_addr = tonNameSpace.payload.ton_addr;\n            return {\n                address: ton_addr.address,\n                chain: ton_addr.network,\n                walletStateInit: ton_addr.walletStateInit,\n                publicKey: ton_addr.publicKey,\n            };\n        }\n        catch (e) {\n            (0, core_1.logDebug)(\"OKXTONProvider account  error:\", JSON.stringify(e));\n            return null;\n        }\n    }\n    wallet() {\n        if (this.connected()) {\n            try {\n                let sessionWallet = this.provider.session.wallet;\n                let tonDeviceInfo = {\n                    platform: sessionWallet.platform,\n                    appName: sessionWallet.appName,\n                    appVersion: sessionWallet.appVersion,\n                    maxProtocolVersion: sessionWallet.maxProtocolVersion,\n                    features: ['ton_sendTransaction'],\n                };\n                const wallet = {\n                    device: tonDeviceInfo,\n                    provider: \"http\",\n                    account: this.account()\n                };\n                let tonNameSpace = this.provider.session.namespaces['ton'];\n                if (tonNameSpace && tonNameSpace.payload && tonNameSpace.payload.ton_proof) {\n                    wallet.connectItems = {\n                        tonProof: tonNameSpace.payload.ton_proof\n                    };\n                }\n                (0, core_1.logDebug)(\"OKXTONProvider wallet :\", JSON.stringify(wallet));\n                return wallet;\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"OKXTONProvider wallet  error:\", JSON.stringify(e));\n                return null;\n            }\n        }\n        return null;\n    }\n    onStatusChange(callback, errorsHandler) {\n        this.statusChangeSubscriptions.push(callback);\n        if (errorsHandler) {\n            this.statusChangeErrorSubscriptions.push(errorsHandler);\n        }\n        return () => {\n            this.statusChangeSubscriptions = this.statusChangeSubscriptions.filter(item => item !== callback);\n            if (errorsHandler) {\n                this.statusChangeErrorSubscriptions = this.statusChangeErrorSubscriptions.filter(item => item !== errorsHandler);\n            }\n        };\n    }\n    sendTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (transaction.network && transaction.network !== core_1.TONCHAIN.MAINNET) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, 'OKXTONProvider sendTransaction network error');\n            }\n            if (!transaction.network) {\n                transaction.network = core_1.TONCHAIN.MAINNET;\n            }\n            if (this.provider.session) {\n                if (!transaction.from) {\n                    const accounts = this.provider.requestAccountsWithNamespace('ton');\n                    transaction.from = accounts[0];\n                }\n            }\n            const requestParams = {\n                method: \"ton_sendTransaction\",\n                params: transaction,\n            };\n            let chain = 'ton:' + core_1.TONCHAIN.MAINNET;\n            (0, core_1.logDebug)(\"OKXTONProvider sendTransaction transaction----:\", chain, JSON.stringify(requestParams));\n            return this.provider.request(requestParams, chain);\n        });\n    }\n}\nexports.OKXTonProvider = OKXTonProvider;\nexports.default = OKXTonProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTronProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTronProvider {\n    constructor(provider) {\n        this.TRON_CHAIN_ID = \"tron:mainnet\";\n        this.provider = provider;\n    }\n    getChain(chainId) {\n        if (chainId == null) {\n            chainId = this.TRON_CHAIN_ID;\n        }\n        if (chainId != this.TRON_CHAIN_ID) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, \"The chainId:\" + chainId + \"is wrong for OKXTronProvider\");\n        }\n        return chainId;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        chainId = this.getChain(chainId);\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyTron]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyTron]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address\n        };\n    }\n    stringToHex(str) {\n        let hex = '';\n        for (let i = 0; i < str.length; i++) {\n            hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n        }\n        return hex;\n    }\n    signMessage(data, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessage\",\n                \"params\": {\n                    \"message\": this.stringToHex(data)\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signMessageV2(data, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessageV2\",\n                \"params\": {\n                    \"message\": data\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let data = {\n                \"method\": \"tron_signTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    let signedTx;\n                    if (typeof ret.result == \"string\") {\n                        signedTx = JSON.parse(ret.result);\n                    }\n                    else {\n                        signedTx = ret.result;\n                    }\n                    let realSignTx = {};\n                    realSignTx.visible = signedTx.visible;\n                    realSignTx.txID = signedTx.txID;\n                    let rawData = {};\n                    rawData.contract = signedTx.raw_data.contract;\n                    rawData.expiration = signedTx.raw_data.expiration;\n                    rawData.ref_block_bytes = signedTx.raw_data.ref_block_bytes;\n                    rawData.fee_limit = signedTx.raw_data.fee_limit;\n                    rawData.ref_block_hash = signedTx.raw_data.ref_block_hash;\n                    rawData.timestamp = signedTx.raw_data.timestamp;\n                    realSignTx.raw_data = rawData;\n                    realSignTx.raw_data_hex = signedTx.raw_data_hex;\n                    realSignTx.signature = signedTx.signature;\n                    return realSignTx;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAndSendTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let data = {\n                \"method\": \"tron_signAndSendTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n}\nexports.OKXTronProvider = OKXTronProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXUniversalProvider = void 0;\nconst eip155_1 = require(\"./provider/providers/eip155\");\nconst sui_1 = require(\"./provider/providers/sui\");\nconst constants_1 = require(\"./provider/constants\");\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nconst client_1 = require(\"./packages/sign-client/client\");\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"./packages/utils/namespaces\");\nconst solana_1 = __importDefault(require(\"./provider/providers/solana\"));\nconst btc_1 = __importDefault(require(\"./provider/providers/btc\"));\nconst aptos_1 = __importDefault(require(\"./provider/providers/aptos\"));\nconst ton_1 = __importDefault(require(\"./provider/providers/ton\"));\nconst cosmos_1 = __importDefault(require(\"./provider/providers/cosmos\"));\nconst tron_1 = __importDefault(require(\"./provider/providers/tron\"));\nconst utils_1 = require(\"./provider/utils\");\nconst packages_1 = require(\"./packages\");\nconst provider_1 = require(\"./provider\");\nconst starknet_1 = __importDefault(require(\"./provider/providers/starknet\"));\nclass OKXUniversalProvider {\n    static init(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider init() called');\n            (0, core_1.checkMetaData)(opts.dappMetaData);\n            // ignore rpc provider check by default\n            (0, utils_1.setGlobal)('disableProviderPing', true);\n            let provider;\n            if (window && window.okxConnectUniversalinwindow && window.okxConnectUniversalinwindow instanceof OKXUniversalProvider) {\n                (0, core_1.logDebug)('OKXUniversalConnect init() old called');\n                provider = window.okxConnectUniversalinwindow;\n            }\n            else {\n                (0, core_1.logDebug)('OKXUniversalConnect init() new called');\n                provider = new OKXUniversalProvider(opts);\n                if (window) {\n                    window.okxConnectUniversalinwindow = provider;\n                }\n                yield provider.initialize();\n            }\n            (0, core_1.getDefaultReporter)().configVersionAndSide('universalprovider-1.5.2', 'dapp', provider.providerOpts.dappMetaData.name);\n            return provider;\n        });\n    }\n    constructor(opts) {\n        this.rpcProviders = {};\n        this.events = new eventemitter3_1.default();\n        this.providerOpts = opts;\n    }\n    request(args, chain) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider request() called');\n            (0, core_1.reportLog)('OKXUniversalProvider request() called');\n            if (!this.connected()) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return yield this.getProvider(namespace).request(requestParam);\n        });\n    }\n    buildRequestParamFromRequest(args, chain) {\n        var _a;\n        (0, core_1.logDebug)(\"UniversalProvider request args >>>>>>>: \", chain, JSON.stringify(args));\n        let [namespace, chainId] = this.validateChain(chain);\n        if (!this.session) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Please call connect() before request()\");\n        }\n        let keyArr = Object.keys(this.session.namespaces);\n        if (!chain && keyArr && keyArr.length > 1) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Multiple chains have been linked, the request method requires chain`);\n        }\n        if (namespace == \"aptos\" && chainId == \"mainnet\") {\n            namespace = \"aptos\";\n            chainId = \"637\";\n        }\n        if (namespace == \"movement\" && chainId == \"testnet\") {\n            namespace = \"aptos\";\n            chainId = \"70000060\";\n        }\n        const requestParam = Object.assign(Object.assign({}, args), { chainId: `${namespace}:${chainId}`, redirect: (_a = args.redirect) !== null && _a !== void 0 ? _a : this.sessionConfig.redirect });\n        return { namespace, requestParam };\n    }\n    enable() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.client) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (!this.session) {\n                if (this.connectOpts) {\n                    yield this.connect(this.connectOpts);\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n                }\n            }\n            const accounts = yield this.requestAccounts();\n            return accounts;\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider disconnect() called');\n            (0, core_1.reportLog)('provider disconnect called');\n            if (!this.session) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                let called = false;\n                const onRequestSent = () => __awaiter(this, void 0, void 0, function* () {\n                    if (!called) {\n                        called = true;\n                        yield this.disconnectAndEmit();\n                        yield this.cleanup();\n                        resolve();\n                        (0, core_1.logDebug)(\"UniversalProvider disconnect Disconnected\");\n                        (0, core_1.reportLog)('provider disconnect disconnected');\n                    }\n                });\n                try {\n                    yield this.client.disconnect();\n                    yield onRequestSent();\n                }\n                catch (e) {\n                    yield onRequestSent();\n                }\n            }));\n        });\n    }\n    disconnectAndEmit() {\n        var _a, _b;\n        this.client.engine.connectionManager.disconnect();\n        this.events.emit(\"disconnect\", { topic: (_a = this.session) === null || _a === void 0 ? void 0 : _a.topic });\n        this.events.emit(\"session_delete\", { topic: (_b = this.session) === null || _b === void 0 ? void 0 : _b.topic });\n    }\n    aptosChainNameToGeneralId(chainId) {\n        if (chainId == \"aptos:mainnet\") {\n            return \"aptos:637\";\n        }\n        else if (chainId == \"movement:testnet\") {\n            return \"aptos:70000060\";\n        }\n        else {\n            return chainId;\n        }\n    }\n    replaceAptos(opts) {\n        var _a, _b;\n        let aptosNameSpace = (_a = opts.namespaces) === null || _a === void 0 ? void 0 : _a[\"aptos\"];\n        if (aptosNameSpace != undefined) {\n            let realNS = this.replaceAptosInner(aptosNameSpace);\n            if (opts.namespaces != undefined && \"aptos\" in opts.namespaces && realNS != undefined) {\n                opts.namespaces.aptos = realNS;\n            }\n        }\n        let optionAptosNameSpace = (_b = opts.optionalNamespaces) === null || _b === void 0 ? void 0 : _b[\"aptos\"];\n        if (optionAptosNameSpace != undefined) {\n            let realOptionNS = this.replaceAptosInner(optionAptosNameSpace);\n            if (opts.optionalNamespaces != undefined && \"aptos\" in opts.optionalNamespaces && realOptionNS != undefined) {\n                opts.optionalNamespaces.aptos = realOptionNS;\n            }\n        }\n        return opts;\n    }\n    replaceAptosInner(aptosNameSpace) {\n        var _a;\n        if (aptosNameSpace != undefined) {\n            aptosNameSpace.chains = (_a = aptosNameSpace.chains) === null || _a === void 0 ? void 0 : _a.map(chainId => {\n                return this.aptosChainNameToGeneralId(chainId);\n            });\n            if (aptosNameSpace.defaultChain != undefined) {\n                aptosNameSpace.defaultChain = this.aptosChainNameToGeneralId(aptosNameSpace.defaultChain);\n            }\n        }\n        return aptosNameSpace;\n    }\n    replaceAptosGeneralIdWithNetName(chainId) {\n        if (chainId.includes(\"aptos:637\")) {\n            chainId = chainId.replace(\"aptos:637\", \"aptos:mainnet\");\n        }\n        else if (chainId.includes(\"aptos:70000060\")) {\n            chainId = chainId.replace(\"aptos:70000060\", \"movement:testnet\");\n        }\n        return chainId;\n    }\n    replaceSessionAptos(session) {\n        var _a;\n        let namespaces = (_a = session === null || session === void 0 ? void 0 : session.namespaces) === null || _a === void 0 ? void 0 : _a[\"aptos\"];\n        if (namespaces != undefined && namespaces.chains != undefined) {\n            namespaces.chains = namespaces.chains.map(chain => {\n                return this.replaceAptosGeneralIdWithNetName(chain);\n            });\n            namespaces.accounts = namespaces.accounts.map((account) => {\n                return this.replaceAptosGeneralIdWithNetName(account);\n            });\n            let extra = {};\n            Object.keys(namespaces.extra || {}).forEach((key, index) => {\n                let newKey = this.replaceAptosGeneralIdWithNetName(key);\n                extra[this.replaceAptosGeneralIdWithNetName(key)] = Object.values((session === null || session === void 0 ? void 0 : session.namespaces[\"aptos\"].extra) || {})[index];\n            });\n            namespaces.extra = extra;\n        }\n        (0, core_1.logDebug)(\"replaceSessionAptos\", session);\n    }\n    connected() {\n        (0, core_1.logDebug)('OKXUniversalProvider connected() called');\n        (0, core_1.reportLog)('provider connected called');\n        let disconnectInner = () => {\n            try {\n                this.cleanup();\n                this.client.engine.connectionManager.disconnect();\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"Error during disconnect:\", e);\n            }\n        };\n        try {\n            if (!this.session)\n                return false;\n            if (!this.client.engine.connectionManager.getCurrentConnectionReady()) {\n                disconnectInner();\n                return false;\n            }\n            return true;\n        }\n        catch (e) {\n            disconnectInner();\n            return false;\n        }\n    }\n    connectAndSign(opts, signRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() called');\n            const updatedOpts = Object.assign(Object.assign({}, opts), { signRequest });\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() opts:', JSON.stringify(opts));\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() signRequest:', JSON.stringify(signRequest));\n            return yield this.connect(updatedOpts);\n        });\n    }\n    connect(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider connect() called');\n            (0, core_1.reportLog)('provider connect called');\n            if (!this.client) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (this.connected()) {\n                return this.session;\n            }\n            opts = this.replaceAptos(opts);\n            (0, core_1.logDebug)(`OKXUniversalProvider connect >>>>`, JSON.stringify(opts));\n            if (opts.sessionConfig === undefined) {\n                opts.sessionConfig = {};\n            }\n            if (opts.sessionConfig.openUniversalUrl === undefined) {\n                opts.sessionConfig.openUniversalUrl = (0, core_1.isMobileUserAgent)();\n            }\n            this.setNamespaces(opts);\n            try {\n                (0, core_1.logDebug)(`UniversalProvider connect opts.stringify ====> ${JSON.stringify(opts)}`);\n                let session = yield this.client.connect(opts);\n                this.replaceSessionAptos(session);\n                (0, core_1.logDebug)(`UniversalProvider connect success ====> ${JSON.stringify(session)}`);\n                if (session) {\n                    this.session = session;\n                    this.client.session = session;\n                    (0, core_1.logDebug)(`OKXUniversalProvider connect success opts>>>>`, JSON.stringify(opts));\n                    this.onConnect();\n                    if (opts.signRequest && opts.signRequest.length > 0) {\n                        let requestItem = opts.signRequest[0];\n                        let signResponseList = [];\n                        if (typeof window !== \"undefined\" && window && window.okxConnectUniversalUIinwindow) { //from UI\n                            (0, core_1.logDebug)(`OKXUniversalProvider connect success, us UI SDK>>>>`);\n                            if (this.session.signResponse && this.session.signResponse.length > 0) { // >=6.96\n                                signResponseList = this.session.signResponse;\n                            }\n                        }\n                        else {\n                            (0, core_1.logDebug)(`OKXUniversalProvider connect success, us Universal SDK>>>>`);\n                            if (this.session.signResponse && this.session.signResponse.length > 0) { // >=6.96\n                                signResponseList = this.session.signResponse;\n                            }\n                            else {\n                                signResponseList.push((0, packages_1.creatNotSupportMethodItemReplay)(requestItem));\n                            }\n                        }\n                        (0, core_1.logDebug)(`UniversalProvider connect success connectRequestReply ====> ${JSON.stringify(signResponseList)}`);\n                        setTimeout(() => {\n                            this.events.emit(\"connect_signResponse\", signResponseList);\n                        }, 100);\n                    }\n                    return session;\n                }\n                return undefined;\n            }\n            catch (error) {\n                (0, core_1.logDebug)(`UniversalProvider connect error ====> `, JSON.stringify(error));\n                throw error;\n            }\n        });\n    }\n    syncAllAddresses() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if ((0, provider_1.syncAddressAvailable)(this.session.wallet)) {\n                return this.client.syncAllAddress();\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n            }\n        });\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    setDefaultChain(chain, rpcUrl) {\n        (0, core_1.logDebug)('OKXUniversalProvider setDefaultChain() called');\n        // chain = this.aptosChainNameToGeneralId(chain)\n        try {\n            // ignore without active session\n            if (!this.connected())\n                return;\n            const [namespace, chainId] = this.validateChain(chain);\n            const provider = this.getProvider(namespace);\n            provider.setDefaultChain(chainId, rpcUrl);\n        }\n        catch (error) {\n            // ignore the error if the fx is used prematurely before namespaces are set\n            if (!/Please call connect/.test(error.message))\n                throw error;\n        }\n    }\n    checkStorage() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let sessionInfoStr = yield this.getFromStore(\"connectSession\");\n            (0, core_1.logDebug)(sessionInfoStr);\n            if (sessionInfoStr) {\n                let sessionInfo = sessionInfoStr;\n                this.session = sessionInfo;\n                this.client.session = this.session;\n                this.sessionConfig = sessionInfo.sessionConfig;\n                this.client.sessionConfig = this.sessionConfig;\n                (0, core_1.logDebug)('[evm u-provider] do reconnection', this.session);\n                yield this.client.restoreconnect(sessionInfo);\n                this.createProviders();\n                this.registerEventListeners();\n                setTimeout(() => {\n                    this.events.emit(\"reconnect\", { session: this.session });\n                }, 100);\n                this.registerEventListeners();\n            }\n        });\n    }\n    initialize() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider initialize() called');\n            (0, core_1.reportLog)('provider initialize called');\n            const data = Object.assign({ url: window.location.hostname, origin: window.location.origin }, this.providerOpts.dappMetaData);\n            this.client = new client_1.SignClient(data, this.events);\n            yield this.checkStorage();\n        });\n    }\n    createProviders() {\n        if (!this.client) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n        }\n        if (!this.connected()) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Session not initialized. Please call connect() before enable()\");\n        }\n        const providersToCreate = [\n            ...new Set(Object.keys(this.session.namespaces)\n                .filter((namespace) => { var _a, _b; return ((_b = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.accounts) === null || _b === void 0 ? void 0 : _b.length) > 0; })\n                .map((namespace) => (0, namespaces_1.parseNamespaceKey)(namespace))),\n        ];\n        providersToCreate.forEach((namespace) => {\n            if (!this.session)\n                return;\n            const namespacesValue = this.session.namespaces;\n            const currentNameSpace = namespacesValue[namespace];\n            (0, core_1.logDebug)(\"init eip155 >> \", currentNameSpace);\n            switch (namespace) {\n                case \"eip155\":\n                    const opts = {\n                        namespace: currentNameSpace\n                    };\n                    this.rpcProviders[namespace] = new eip155_1.Eip155Provider(opts, this.client, this.events);\n                    break;\n                case \"solana\":\n                    const opts1 = {\n                        namespace: currentNameSpace\n                    };\n                    let solanaProvider = new solana_1.default(opts1, \"solana\", this.client, this.events);\n                    this.rpcProviders[namespace] = solanaProvider;\n                    let sonicProvider = new solana_1.default(opts1, \"sonic\", this.client, this.events);\n                    this.rpcProviders['sonic'] = sonicProvider;\n                    let svmProvider = new solana_1.default(opts1, \"svm\", this.client, this.events);\n                    this.rpcProviders['svm'] = svmProvider;\n                    // this.rpcProviders[namespace] = new SolanaProvider(opts1, () => { return this.session; });\n                    break;\n                case \"ton\":\n                    const optsTon = {\n                        namespace: currentNameSpace\n                    };\n                    let tonProvider = new ton_1.default(optsTon, this.client, this.events);\n                    this.rpcProviders[namespace] = tonProvider;\n                    break;\n                case \"sui\":\n                    const optsSui = {\n                        namespace: currentNameSpace\n                    };\n                    let suiProvider = new sui_1.SuiProvider(optsSui, this.client, this.events);\n                    suiProvider.name = \"sui\";\n                    this.rpcProviders[namespace] = suiProvider;\n                    break;\n                case \"btc\":\n                    const optsBtc = {\n                        namespace: currentNameSpace\n                    };\n                    let btcProvider = new btc_1.default(optsBtc, \"btc\", this.client, this.events);\n                    this.rpcProviders[\"btc\"] = btcProvider;\n                    let fbProvider = new btc_1.default(optsBtc, \"fractal\", this.client, this.events);\n                    this.rpcProviders[\"fractal\"] = fbProvider;\n                    break;\n                case \"aptos\":\n                    let aptosProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"aptos\", this.client, this.events);\n                    this.rpcProviders[namespace] = aptosProvider;\n                    let moveProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"movement\", this.client, this.events);\n                    this.rpcProviders[\"movement\"] = moveProvider;\n                    break;\n                case \"cosmos\":\n                    let cosmosProvider = new cosmos_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = cosmosProvider;\n                    break;\n                case \"tron\":\n                    let tronProvider = new tron_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = tronProvider;\n                    break;\n                case \"starknet\":\n                    let starknetProvider = new starknet_1.default({\n                        namespace: currentNameSpace\n                    }, \"starknet\", this.client, this.events);\n                    this.rpcProviders[namespace] = starknetProvider;\n                    break;\n            }\n        });\n    }\n    registerEventListeners() {\n        if (typeof this.client === \"undefined\") {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client is not initialized\");\n        }\n        this.client.engine.addDisconnectListener(() => {\n            this.disconnectAndEmit();\n            this.cleanup();\n        });\n        this.on(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, (caip2ChainId) => {\n            this.onChainChanged(caip2ChainId);\n        });\n        this.on(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, (nameSpaces) => {\n            if (nameSpaces) {\n                const nameSpacekey = Object.keys(nameSpaces)[0];\n                if (this.session) {\n                    this.session.namespaces[nameSpacekey] = nameSpaces[nameSpacekey];\n                    if (this.session) {\n                        this.persist(\"connectSession\", this.session);\n                        this.events.emit(\"session_update\", this.session);\n                    }\n                    (0, core_1.logDebug)(\"PROVIDER_EVENTS.UPDATE_NAMESPACES this.session... ->>>\", JSON.stringify(this.session));\n                }\n            }\n        });\n    }\n    getProvider(namespace) {\n        (0, core_1.logDebug)('current get providers', this.rpcProviders);\n        (0, core_1.logDebug)('query namespace: ', namespace);\n        return this.rpcProviders[namespace];\n    }\n    setNamespaces(params) {\n        this.connectOpts = params;\n        const { namespaces, sessionConfig } = params;\n        const data = {\n            origin: window.location.origin,\n            url: window.location.hostname,\n            name: this.providerOpts.dappMetaData.name,\n            icon: this.providerOpts.dappMetaData.icon,\n        };\n        this.sessionConfig = Object.assign({ dappInfo: data }, sessionConfig);\n        (0, core_1.logDebug)(\"setNamespaces sessionConfig>>>\", this.sessionConfig);\n        this.client.sessionConfig = this.sessionConfig;\n        this.persist(\"sessionConfig\", sessionConfig);\n    }\n    validateChain(chain) {\n        var _a;\n        let [namespace, chainId] = (chain === null || chain === void 0 ? void 0 : chain.split(\":\")) || [\"\", \"\"];\n        if (!this.session || !this.session.namespaces || !Object.keys(this.session.namespaces).length) {\n            (0, core_1.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        if (namespace) {\n            if (!this.isChainNamespaceInSession(namespace)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace '${namespace}' is not configured. Please call connect() first with namespace config.`);\n            }\n            if (chainId && chain) {\n                (0, core_1.logDebug)('this.session.namespaces -->> ', namespace, JSON.stringify(this.session.namespaces));\n                const chainsArr = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.chains;\n                (0, core_1.logDebug)('get chainsArr & chain', JSON.stringify(chainsArr), chain);\n                if (chainsArr && !chainsArr.includes(chain)) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace not include the chain '${chain}'`);\n                }\n            }\n        }\n        if (namespace && chainId) {\n            (0, core_1.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        let defaultNamespace = (0, namespaces_1.parseNamespaceKey)(Object.keys(this.session.namespaces)[0]);\n        const defaultChain = this.rpcProviders[defaultNamespace].getDefaultChain();\n        (0, core_1.logDebug)('get default chain:', defaultChain);\n        return [defaultNamespace, defaultChain];\n    }\n    isChainNamespaceInSession(namespaceStr) {\n        var _a, _b;\n        if (Object.keys(((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces) || {})\n            .map((key) => (0, namespaces_1.parseNamespaceKey)(key))\n            .includes(namespaceStr)) {\n            return true;\n        }\n        let isChainNamespaceInSession = false;\n        Object.values(((_b = this.session) === null || _b === void 0 ? void 0 : _b.namespaces) || {})\n            .forEach(namespace => {\n            namespace.chains.forEach(chain => {\n                if (chain.split(\":\")[0] == namespaceStr) {\n                    isChainNamespaceInSession = true;\n                }\n            });\n        });\n        return isChainNamespaceInSession;\n    }\n    requestAccountsWithNamespace(namespace) {\n        return this.getProvider(namespace).requestAccounts();\n    }\n    requestDefaultChainWithNamespace(namespace) {\n        return this.getProvider(namespace).getDefaultChain();\n    }\n    requestAccounts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const [namespace] = this.validateChain();\n            return yield this.getProvider(namespace).requestAccounts();\n        });\n    }\n    onChainChanged(caip2Chain) {\n        var _a;\n        if (!((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces))\n            return;\n        const [namespace, chainId] = this.validateChain(caip2Chain);\n        if (!chainId)\n            return;\n        if (this.session.namespaces[namespace]) {\n            this.session.namespaces[namespace].defaultChain = chainId;\n            this.persist(\"connectSession\", this.session);\n        }\n        this.events.emit(\"chainChanged\", chainId);\n    }\n    onConnect() {\n        this.createProviders();\n        if (this.session) {\n            this.persist(\"connectSession\", this.session);\n        }\n        this.events.emit(\"connect\", { session: this.session });\n        this.registerEventListeners();\n    }\n    cleanup() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.session = undefined;\n            this.client.session = undefined;\n            this.sessionProperties = undefined;\n            this.persist(\"optionalNamespaces\", undefined);\n            this.persist(\"sessionProperties\", undefined);\n            this.persist(\"connectSession\", undefined);\n        });\n    }\n    persist(key, data) {\n        (0, core_1.logDebug)('[evm u-provider] persisit data', key, data);\n        return this.client.engine.connectionManager.saveSessionContent(key, data);\n    }\n    getFromStore(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.client.engine.connectionManager.getSessionContent(key);\n        });\n    }\n    showRequestModal(args, chain) {\n        try {\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return this.getProvider(namespace).showRequestModal(requestParam);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n}\nexports.OKXUniversalProvider = OKXUniversalProvider;\nexports.default = OKXUniversalProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXStarknetProvider = exports.OKXTronProvider = exports.OKXTonProvider = exports.OKXCosmosProvider = exports.OKXBtcProvider = exports.OKXUniversalProvider = void 0;\n__exportStar(require(\"./provider/types\"), exports);\n__exportStar(require(\"./packages\"), exports);\nvar OKXUniversalProvider_1 = require(\"./OKXUniversalProvider\");\nObject.defineProperty(exports, \"OKXUniversalProvider\", { enumerable: true, get: function () { return OKXUniversalProvider_1.OKXUniversalProvider; } });\nvar OKXBtcProvider_1 = require(\"./OKXBtcProvider\");\nObject.defineProperty(exports, \"OKXBtcProvider\", { enumerable: true, get: function () { return OKXBtcProvider_1.OKXBtcProvider; } });\nvar OKXCosmosProvider_1 = require(\"./OKXCosmosProvider\");\nObject.defineProperty(exports, \"OKXCosmosProvider\", { enumerable: true, get: function () { return OKXCosmosProvider_1.OKXCosmosProvider; } });\nvar OKXTonProvider_1 = require(\"./OKXTonProvider\");\nObject.defineProperty(exports, \"OKXTonProvider\", { enumerable: true, get: function () { return OKXTonProvider_1.OKXTonProvider; } });\nvar OKXTronProvider_1 = require(\"./OKXTronProvider\");\nObject.defineProperty(exports, \"OKXTronProvider\", { enumerable: true, get: function () { return OKXTronProvider_1.OKXTronProvider; } });\nvar OKXStarknetProvider_1 = require(\"./OKXStarknetProvider\");\nObject.defineProperty(exports, \"OKXStarknetProvider\", { enumerable: true, get: function () { return OKXStarknetProvider_1.OKXStarknetProvider; } });\n__exportStar(require(\"@okxconnect/core\"), exports);\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignClient = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"../utils/namespaces\");\nconst ConnectMethodUtils_1 = require(\"../utils/ConnectMethodUtils\");\nconst constants_1 = require(\"../../provider/constants\");\nclass SignClient extends core_1.ISignClient {\n    constructor(metaData, events) {\n        super(metaData);\n        // ---------- Engine ----------------------------------------------- //\n        this.connect = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    var connectRequest = [];\n                    (0, core_1.logDebug)(`client connect params >>>`, JSON.stringify(params));\n                    var requestAccountItem = {\n                        name: \"requestAccounts\",\n                        requiredNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.namespaces),\n                        optionalNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.optionalNamespaces),\n                    };\n                    this.engine.setSessionConnectingListener(() => {\n                        (0, core_1.logDebug)(`sessionConnectingListener >>>`);\n                        this.events.emit(constants_1.PROVIDER_EVENTS.SESSION_CONNECTING);\n                    });\n                    if (params.signRequest) {\n                        requestAccountItem.connectRequestMethods = yield (0, ConnectMethodUtils_1.connectMethodsToConnectWalletMethods)(params.signRequest, requestAccountItem.requiredNamespaces);\n                    }\n                    connectRequest.push(requestAccountItem);\n                    (0, core_1.logDebug)(`client connect connectRequest >>>`, JSON.stringify(connectRequest));\n                    this.engine.universalConnect(connectRequest, Object.assign({ dappInfo: this.metadata }, params.sessionConfig), (info) => {\n                        if (info && info.connectRequest) {\n                            (0, core_1.logDebug)(`universalConect info.connectRequest :`, info.connectRequest);\n                            (0, core_1.logDebug)(`universalConect url:`, (0, core_1.getOKXLink)(info.connectRequest, this.sessionConfig.useMini));\n                            this.events.emit(\"display_uri\", (0, core_1.getOKXLink)(info.connectRequest, this.sessionConfig.useMini));\n                            this.events.emit(\"short_display_uri\", (0, core_1.getAppWalletShortDeepLink)(info.connectRequest.topic, info.connectRequest.clientId));\n                            (0, core_1.logDebug)(`universalConect EngineConnectInfo  ${JSON.stringify(info)}`);\n                            this.events.emit(\"okx_engine_connect_params\", info);\n                        }\n                    }).then((session) => __awaiter(this, void 0, void 0, function* () {\n                        (0, namespaces_1.fillParamsToSession)(session, params.namespaces, params.optionalNamespaces, this.sessionConfig);\n                        (0, core_1.logDebug)(`signClient: connect: session ${JSON.stringify(session)}`);\n                        if (params.signRequest) {\n                            yield (0, ConnectMethodUtils_1.connectMethodsResponseUpdate)(session, params.signRequest);\n                        }\n                        resolve(session);\n                    })).catch((e) => {\n                        (0, core_1.logDebug)(`signClient: connect: catch ${JSON.stringify(e)}`);\n                        this.events.emit(\"connect_error\", e);\n                        reject(e);\n                    });\n                }\n                catch (error) {\n                    (0, core_1.logDebug)(`signClient: connect:  ${JSON.stringify(error)}`);\n                    reject(error);\n                }\n            }));\n        });\n        this.restoreconnect = (sessionConfig) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.restoreconnect(sessionConfig, (session) => {\n                    resolve(session);\n                });\n            });\n        });\n        this.reject = (params) => __awaiter(this, void 0, void 0, function* () {\n            //   try {\n            //     return await this.engine.reject(params);\n            //   } catch (error: any) {\n            //     this.logger.error(error.message);\n            //     throw error;\n            //   }\n        });\n        //\n        // public update: ISignClient[\"update\"] = async (params) => {\n        //   return\n        // //   try {\n        // //     return await this.engine.update(params);\n        // //   } catch (error: any) {\n        // //     this.logger.error(error.message);\n        // //     throw error;\n        // //   }\n        // };\n        this.request = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                (0, core_1.logDebug)(\"clint request --params>>>> >\", this.engine.connectionManager.getCurrentConnectionReady(), (_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl, JSON.stringify(params));\n                try {\n                    // this.sessionConfig\n                    if (((_b = this.sessionConfig) === null || _b === void 0 ? void 0 : _b.openUniversalUrl) && (0, core_1.isIos)()) {\n                        this.openOKXWallet();\n                    }\n                    yield this.engine.send(params, {\n                        resolve: (response) => {\n                            delete response.requestId;\n                            (0, core_1.logDebug)(\"clint request --response >\", JSON.stringify(response));\n                            if (('error' in response) && response.error) {\n                                let error = response.error;\n                                reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                            }\n                            else {\n                                resolve(response);\n                            }\n                        },\n                        onAck: () => {\n                            var _a;\n                            if (!(0, core_1.isIos)() && ((_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl)) {\n                                this.openOKXWallet();\n                            }\n                        }\n                    });\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }));\n        });\n        // public emit: ISignClient[\"emit\"] = async (params) => {\n        //     try {\n        //         // return await this.engine.emit(params);\n        //     } catch (error: any) {\n        //         throw error;\n        //     }\n        // };\n        this.disconnect = () => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"disconnect\"\n                }, {\n                    onAck: () => {\n                        resolve();\n                    }\n                }, undefined, 86400000).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n        this.engine = new core_1.Engine(new core_1.ConnectionManager(metaData.name));\n        this.events = events;\n        this.metadata = metaData;\n    }\n    openOKXWallet() {\n        var _a;\n        // if (this.openUniversalUrl){\n        (0, core_1.logDebug)('bridge-provider ==>> connect_5');\n        if ((_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.useMini) {\n            let url = (0, core_1.getTelegramWalletTWAUrl)(undefined, this.sessionConfig.tmaReturnUrl);\n            (0, core_1.openOKXTMAWalletlinkWithFallback)(url);\n        }\n        else {\n            (0, core_1.openOKXDeeplink)(core_1.standardDeeplink);\n        }\n        // }\n    }\n    syncAllAddress() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"sync_all_addresses\"\n                }, {\n                    resolve: (response) => {\n                        delete response.requestId;\n                        (0, core_1.logDebug)(\"clint syncAllAddress --response >\", JSON.stringify(response));\n                        if (('error' in response) && response.error) {\n                            let error = response.error;\n                            reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                        }\n                        else {\n                            let allAddressStr = response.result;\n                            resolve((0, ConnectMethodUtils_1.syncResoonseToRequire)(allAddressStr));\n                        }\n                    }\n                }).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n    }\n}\nexports.SignClient = SignClient;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.connectSupportMethods = void 0;\nexports.creatNotSupportMethodItemReplay = creatNotSupportMethodItemReplay;\nexports.connectMethodsAdaptOldVersion = connectMethodsAdaptOldVersion;\nexports.connectMethodsResponseUpdate = connectMethodsResponseUpdate;\nexports.connectMethodsToConnectWalletMethods = connectMethodsToConnectWalletMethods;\nexports.syncResoonseToRequire = syncResoonseToRequire;\nconst core_1 = require(\"@okxconnect/core\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst uint8array_extras_1 = require(\"uint8array-extras\");\nconst provider_1 = require(\"../../provider\");\nfunction isArray(value) {\n    return typeof value === \"object\" && value !== null && Array.isArray(value);\n}\nfunction isRecord(value) {\n    return typeof value === \"object\" && value !== null && !Array.isArray(value);\n}\n// \"wallet_addEthereumChain\",\nexports.connectSupportMethods = Object.freeze([\n    \"personal_sign\",\n    \"solana_signMessage\",\n    \"sui_signMessage\",\n    \"sui_signPersonalMessage\",\n    \"btc_signMessage\",\n    \"aptos_signMessage\",\n    \"cosmos_signArbitrary\",\n    \"tron_signMessage\",\n    \"tron_signMessageV2\",\n    \"starknet_signMessage\",\n    \"sync_all_addresses\"\n]);\nfunction creatNotSupportMethodItemReplay(requestParams) {\n    let notSupportError = new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n    var errorItem = {\n        method: requestParams.method,\n        chainId: requestParams.chainId,\n        error: {\n            code: notSupportError.code,\n            message: notSupportError.message\n        },\n    };\n    return errorItem;\n}\nfunction connectMethodsAdaptOldVersion(requestParams, session) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b, _c, _d, _e;\n        try {\n            (0, core_1.logDebug)(\"connectMethodsAdaptOldVersion start params :\", JSON.stringify(requestParams));\n            let callBackParams = {};\n            if (requestParams.method === \"solana_signMessage\") {\n                let solAccount = (_a = session.namespaces[core_1.NameSpaceKeySOL]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account1) {\n                    return account1.startsWith(requestParams.chainId);\n                })[0];\n                const solAddress = (0, provider_1.fromAccountToAddress)(solAccount);\n                if (requestParams.params && solAddress && \"message\" in requestParams.params) {\n                    let realMessage = requestParams.params.message;\n                    if (((_b = session.wallet) === null || _b === void 0 ? void 0 : _b.appName) == \"OKX Wallet\") {\n                        realMessage = bs58_1.default.encode((0, uint8array_extras_1.stringToUint8Array)(realMessage));\n                    }\n                    requestParams.params = {\n                        message: realMessage,\n                        \"pubkey\": solAddress\n                    };\n                    callBackParams = {\n                        publicKey: solAddress\n                    };\n                    (0, core_1.logDebug)(\"solana_signMessage account and address:\", JSON.stringify(solAccount), solAddress);\n                    (0, core_1.logDebug)(\"solana_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"sui_signMessage\" || requestParams.method === \"sui_signPersonalMessage\") {\n                if (\"message\" in requestParams.params && requestParams.params.message) {\n                    let suiMessage = JSON.parse(JSON.stringify(requestParams.params.message));\n                    let convertedArray = Object.values(suiMessage);\n                    let uint8Array = new Uint8Array(convertedArray);\n                    let decoder = new TextDecoder(\"utf8\");\n                    let b64encoded = btoa(decoder.decode(uint8Array));\n                    requestParams.params = {\n                        message: atob(b64encoded),\n                    };\n                    console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", JSON.stringify(requestParams.params), b64encoded);\n                    if (requestParams.method === \"sui_signMessage\") {\n                        callBackParams = {\n                            \"messageBytes\": b64encoded,\n                            \"signature\": \"\"\n                        };\n                    }\n                    else if (requestParams.method === \"sui_signPersonalMessage\") {\n                        callBackParams = {\n                            \"bytes\": b64encoded,\n                            \"signature\": \"\"\n                        };\n                    }\n                    (0, core_1.logDebug)(\"sui_signMessage/sui_signPersonalMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"btc_signMessage\") {\n                let btcAccounts = (_c = session.namespaces[core_1.NameSpaceKeyBtc]) === null || _c === void 0 ? void 0 : _c.accounts.filter(function (account2) {\n                    return account2.startsWith(requestParams.chainId);\n                });\n                let btcAccount = btcAccounts[0];\n                const btcAddress = (0, provider_1.fromAccountToAddress)(btcAccount);\n                (0, core_1.logDebug)(\"btc_signMessage account and address:\", JSON.stringify(btcAccount), btcAddress);\n                if (btcAddress) {\n                    if (\"message\" in requestParams.params && requestParams.params.message && typeof requestParams.params.message === 'string') {\n                        requestParams.params = {\n                            from: btcAddress,\n                            signStr: requestParams.params.message\n                        };\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                    }\n                    requestParams.params[\"from\"] = btcAddress;\n                    (0, core_1.logDebug)(\"btc_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"aptos_signMessage\") {\n                let paramData = requestParams.params;\n                let aptosAccount = (_d = session.namespaces[core_1.NameSpaceKeyAptos]) === null || _d === void 0 ? void 0 : _d.accounts.filter(function (account3) {\n                    return account3.startsWith(requestParams.chainId);\n                })[0];\n                let aptosAddress = (0, provider_1.fromAccountToAddress)(aptosAccount);\n                if (paramData && aptosAddress) {\n                    let prefix = \"APTOS\";\n                    let message = \"\", nonce = \"\";\n                    var fullMessage = prefix;\n                    let application = window.location.protocol + \"//\" + window.location.hostname;\n                    if (\"address\" in paramData && paramData.address) {\n                        fullMessage += \"\\naddress: \" + aptosAddress;\n                    }\n                    if (\"application\" in paramData && paramData.application) {\n                        fullMessage += \"\\napplication: \" + application;\n                    }\n                    let aptosChainId = 1;\n                    if (\"chainId\" in paramData && paramData.chainId) {\n                        if (paramData.chainId == \"aptos:mainnet\") {\n                            aptosChainId = 1;\n                        }\n                        else if (paramData.chainId == \"movement:testnet\") {\n                            aptosChainId = 2;\n                        }\n                        fullMessage += \"\\nchainId: \" + aptosChainId;\n                    }\n                    if (\"message\" in paramData) {\n                        fullMessage += \"\\nmessage: \" + paramData.message;\n                        message = paramData.message;\n                    }\n                    if (\"nonce\" in paramData) {\n                        fullMessage += \"\\nnonce: \" + paramData.nonce;\n                        nonce = paramData.nonce;\n                    }\n                    const utf8Array = new TextEncoder().encode(fullMessage);\n                    const hex = Array.from(utf8Array)\n                        .map(byte => byte.toString(16).padStart(2, \"0\"))\n                        .join(\"\");\n                    requestParams.params = {\n                        \"message\": hex,\n                    };\n                    (0, core_1.logDebug)(\"aptos_signMessage requestParams:\", JSON.stringify(requestParams));\n                    callBackParams = {\n                        address: aptosAddress,\n                        application: application,\n                        chainId: aptosChainId,\n                        fullMessage: fullMessage,\n                        message: message,\n                        nonce: nonce,\n                        prefix: prefix,\n                        signature: \"\",\n                    };\n                    (0, core_1.logDebug)(\"aptos_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"cosmos_signArbitrary\") {\n                let cosmosAccount = (_e = session === null || session === void 0 ? void 0 : session.namespaces[core_1.NameSpaceKeyCosmos]) === null || _e === void 0 ? void 0 : _e.accounts.filter(function (account_cosmos) {\n                    return account_cosmos.startsWith(requestParams.chainId);\n                })[0];\n                const cosmosAddress = (0, provider_1.fromAccountToAddress)(cosmosAccount);\n                let cosmosData = requestParams.params[\"message\"];\n                const cosmosBase64Encoded = (0, uint8array_extras_1.stringToBase64)(cosmosData);\n                (0, core_1.logDebug)(\"cosmos_signArbitrary account and address:\", JSON.stringify(cosmosAccount), cosmosAddress);\n                (0, core_1.logDebug)(\"cosmos_signArbitrary cosmosBase64Encoded:\", cosmosBase64Encoded);\n                if (cosmosData && cosmosAddress) {\n                    const signDoc = {\n                        chain_id: \"\",\n                        account_number: \"0\",\n                        sequence: \"0\",\n                        fee: {\n                            gas: \"0\",\n                            amount: []\n                        },\n                        msgs: [{\n                                \"type\": \"sign/MsgSignData\",\n                                \"value\": {\n                                    \"signer\": cosmosAddress,\n                                    \"data\": cosmosBase64Encoded\n                                }\n                            }],\n                        memo: \"\"\n                    };\n                    requestParams.params = {\n                        \"signer\": cosmosAddress,\n                        \"chain_id\": requestParams.chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    };\n                    (0, core_1.logDebug)(\"cosmos_signArbitrary callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            (0, core_1.logDebug)(\"sol_handleSignatureData end params:\", JSON.stringify(requestParams));\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\nfunction connectMethodsResponseUpdate(session, requestParams) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a;\n        try {\n            if (session.signResponse) {\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate signResponse:\", JSON.stringify(session.signResponse));\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate session.namespaces:\", JSON.stringify(session.namespaces));\n                for (const methodItem of session.signResponse) {\n                    (0, core_1.logDebug)(\"connectMethodsResponseUpdate methodItem:\", JSON.stringify(methodItem));\n                    if (\"result\" in methodItem) {\n                        if (methodItem.method === \"solana_signMessage\") {\n                            let solanaSuccessData = methodItem.result;\n                            (0, core_1.logDebug)(\"solana_signMessage methodItem.chainId:\", methodItem.chainId);\n                            let account = (_a = session.namespaces[core_1.NameSpaceKeySOL]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account) {\n                                (0, core_1.logDebug)(\"solana_signMessage account:\", account);\n                                return account.startsWith(methodItem.chainId);\n                            })[0];\n                            (0, core_1.logDebug)(\"solana_signMessage result account:\", solanaSuccessData, account);\n                            if (solanaSuccessData && account) {\n                                methodItem.result = {\n                                    \"signature\": bs58_1.default.decode(solanaSuccessData),\n                                    \"publicKey\": (0, provider_1.fromAccountToAddress)(account)\n                                };\n                            }\n                        }\n                        else if (methodItem.method === \"sui_signMessage\" || methodItem.method === \"sui_signPersonalMessage\") {\n                            let suiMethod = requestParams.filter(function (requestMethod) {\n                                return requestMethod.method === methodItem.method;\n                            })[0];\n                            if (suiMethod && suiMethod.params && \"message\" in suiMethod.params) {\n                                let suiMessage = suiMethod.params.message;\n                                let suiMessageb64 = btoa(suiMessage);\n                                console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", suiMessage, suiMessageb64);\n                                if (methodItem.method === \"sui_signMessage\") {\n                                    methodItem.result = {\n                                        \"messageBytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                                else if (methodItem.method === \"sui_signPersonalMessage\") {\n                                    methodItem.result = {\n                                        \"bytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                            }\n                        }\n                        else if (methodItem.method === \"aptos_signMessage\") {\n                            if (methodItem.chainId === \"aptos:637\") {\n                                methodItem.chainId = \"aptos:mainnet\";\n                            }\n                            else if (methodItem.chainId === \"aptos:70000060\") {\n                                methodItem.chainId = \"movement:testnet\";\n                            }\n                            methodItem.result = JSON.parse(methodItem.result);\n                            console.log(\"aptos_signMessage result methodItem.result before:>>>>\", JSON.stringify(methodItem.result));\n                            if (methodItem.result && \"signature\" in methodItem.result) {\n                                let aptosSignature = methodItem.result.signature;\n                                if (aptosSignature && aptosSignature.startsWith(\"0x\")) {\n                                    aptosSignature = aptosSignature.slice(2, aptosSignature.length);\n                                    methodItem.result.signature = aptosSignature;\n                                }\n                            }\n                            console.log(\"aptos_signMessage result methodItem.result after:>>>>\", JSON.stringify(methodItem.result));\n                        }\n                        else if (methodItem.method === \"cosmos_signArbitrary\") {\n                            methodItem.result = JSON.parse(methodItem.result);\n                        }\n                        else if (methodItem.method == 'starknet_signMessage') {\n                            let results = methodItem.result;\n                            if (typeof results == 'string') {\n                                results = JSON.parse(results);\n                            }\n                            methodItem.result = [results[\"signedDataR\"], results[\"signedDataS\"]];\n                        }\n                        else if (methodItem.method == 'sync_all_addresses') {\n                            methodItem.result = syncResoonseToRequire(methodItem.result);\n                        }\n                    }\n                }\n            }\n        }\n        catch (error) {\n            (0, core_1.logDebug)(\"connectMethodsResponseUpdate signResponse Error:\", JSON.stringify(error));\n            throw error;\n        }\n    });\n}\nfunction connectMethodsToConnectWalletMethods(params, requireNameSpace) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods requestMethods:\", JSON.stringify(params));\n            const result = [];\n            //TODO  后面需要打开限制\n            if (params && params.length > 1) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connectAndSign/openModalAndSign signRequest only support one data`);\n            }\n            if (!requireNameSpace && params && params.length > 0) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error , RequestMethods cannot be added when the NameSpace is empty`);\n            }\n            // check chianId\n            for (const methodItem of params) {\n                if (methodItem.method === \"aptos_signMessage\") { //update chainId\n                    if (methodItem.chainId === \"aptos:mainnet\") {\n                        methodItem.chainId = \"aptos:637\";\n                    }\n                    else if (methodItem.chainId === \"movement:testnet\") {\n                        methodItem.chainId = \"aptos:70000060\";\n                    }\n                }\n                // check chianId\n                if (methodItem.method === \"wallet_addEthereumChain\") {\n                    var includeEip155 = requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.namespace.includes(\"eip155\"));\n                    if (!includeEip155) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', the EVM chain needs to be included in the NameSpace`);\n                    }\n                }\n                else if (methodItem.method === \"sync_all_addresses\") {\n                    if ((0, provider_1.syncAddressHostAvailable)()) {\n                        methodItem.chainId = \"\";\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                    }\n                }\n                else {\n                    const includeChain = !!(requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.chains.some(chain => chain.includes(`${methodItem.chainId}`))));\n                    if (!includeChain) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', NameSpace must contain '${methodItem.chainId}'`);\n                    }\n                }\n            }\n            for (const item of params) {\n                if (!exports.connectSupportMethods.includes(item.method)) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect requestMethods not support method, method: '${item.method}'`);\n                }\n                if (item.method === \"wallet_addEthereumChain\") {\n                    if (Array.isArray(item.params)) {\n                        const paramsArr = item.params;\n                        if (paramsArr && paramsArr.length === 1) {\n                            const firstParam = paramsArr[0];\n                            if (isRecord(firstParam)) {\n                                item.params = firstParam;\n                            }\n                        }\n                        else if (paramsArr && paramsArr.length > 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params only support one data, method: '${item.method}'`);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is nil, method: '${item.method}'`);\n                        }\n                    }\n                }\n                else if (item.method === \"personal_sign\") {\n                    if (isArray(item.params)) {\n                        if (item.params && item.params.length !== 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params error,  method: '${item.method}' `);\n                        }\n                        let firstObj = item.params[0];\n                        if (firstObj && typeof firstObj === 'string') {\n                            item.params = {\n                                message: firstObj\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                }\n                else if (item.method === \"sui_signMessage\" || item.method === \"sui_signPersonalMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message) {\n                            (0, core_1.logDebug)(\"sui_signMessage item.params.message :\", item.params.message);\n                            let message = JSON.parse(JSON.stringify(item.params.message));\n                            let convertedArray = Object.values(message);\n                            let uint8Array = new Uint8Array(convertedArray);\n                            let decoder = new TextDecoder(\"utf8\");\n                            let b64encoded = btoa(decoder.decode(uint8Array));\n                            item.params.message = atob(b64encoded);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"solana_signMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            item.params[\"bs58Message\"] = bs58_1.default.encode((0, uint8array_extras_1.stringToUint8Array)(item.params.message));\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"aptos_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (item.chainId && (item.chainId === \"aptos:637\" || item.chainId === \"aptos:70000060\")) {\n                            var aptosParams = item.params;\n                            var currentURL = window.location.protocol + \"//\" + window.location.hostname;\n                            let signChainId = 1;\n                            if (item.chainId === \"aptos:637\") {\n                            }\n                            else if (item.chainId === \"aptos:70000060\") {\n                                signChainId = 2;\n                            }\n                            item.params = {\n                                data: aptosParams,\n                                applicationUrl: currentURL,\n                                prefix: \"APTOS\",\n                                aptosChainId: signChainId\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"cosmos_signArbitrary\") {\n                    if (isRecord(item.params)) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            const base64Encoded = (0, uint8array_extras_1.stringToBase64)(item.params.message);\n                            let cosmosChain = item.chainId.split(\":\")[1];\n                            if (cosmosChain) {\n                                item.params = {\n                                    chain_id: cosmosChain,\n                                    data: {\n                                        chain_id: \"\",\n                                        account_number: \"0\",\n                                        sequence: \"0\",\n                                        fee: {\n                                            gas: \"0\",\n                                            amount: []\n                                        },\n                                        msgs: [{\n                                                \"type\": \"sign/MsgSignData\",\n                                                \"value\": {\n                                                    \"signer\": \"\", //address\n                                                    \"data\": base64Encoded\n                                                }\n                                            }],\n                                        memo: \"\"\n                                    }\n                                };\n                            }\n                            else {\n                                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                            }\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params message is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method == \"tron_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (\"message\" in item.params && item.params.message && typeof item.params.message === 'string') {\n                            item.params.message = stringToHex(item.params.message);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method == \"btc_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (\"message\" in item.params && item.params.message && typeof item.params.message === 'string') {\n                            item.params = {\n                                signStr: item.params.message\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods item:\", JSON.stringify(item));\n                result.push(item);\n            }\n            return result;\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\nfunction stringToHex(str) {\n    let hex = '';\n    for (let i = 0; i < str.length; i++) {\n        hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n    }\n    return hex;\n}\nfunction syncResoonseToRequire(responseAddressStr) {\n    const allAddress = JSON.parse(responseAddressStr);\n    const result = {\n        type: allAddress.type,\n        isEvm: allAddress.isEvm,\n        walletName: allAddress.walletName,\n        deriveName: allAddress.deriveName,\n        addresses: allAddress.addresses.map((addr) => ({\n            coinId: addr.ci,\n            address: addr.a && addr.a !== 'null' ? addr.a : allAddress.evmAddress,\n        })),\n    };\n    return result;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.creatNotSupportMethodItemReplay = exports.connectMethodsAdaptOldVersion = void 0;\nvar ConnectMethodUtils_1 = require(\"./ConnectMethodUtils\");\nObject.defineProperty(exports, \"connectMethodsAdaptOldVersion\", { enumerable: true, get: function () { return ConnectMethodUtils_1.connectMethodsAdaptOldVersion; } });\nObject.defineProperty(exports, \"creatNotSupportMethodItemReplay\", { enumerable: true, get: function () { return ConnectMethodUtils_1.creatNotSupportMethodItemReplay; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAccountsChains = getAccountsChains;\nexports.nameSpaceToConnectWalletNameSpace = nameSpaceToConnectWalletNameSpace;\nexports.fillParamsToSession = fillParamsToSession;\nexports.isCaipNamespace = isCaipNamespace;\nexports.parseNamespaceKey = parseNamespaceKey;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getAccountsChains(accounts) {\n    const chains = [];\n    accounts.forEach((account) => {\n        const [chain, chainId] = account.split(\":\");\n        chains.push(`${chain}:${chainId}`);\n    });\n    return chains;\n}\nfunction nameSpaceToConnectWalletNameSpace(namespaces) {\n    var result = [];\n    if (!namespaces) {\n        return result;\n    }\n    Object.keys(namespaces).forEach((key) => {\n        if (key === core_1.NameSpaceKeyEip155 || key === core_1.NameSpaceKeySOL || key === core_1.NameSpaceKeySui || key === core_1.NameSpaceKeyAptos\n            || key == core_1.NameSpaceKeyBtc || key === core_1.NameSpaceKeyTON || key === core_1.NameSpaceKeyCosmos || key === core_1.NameSpaceKeyTron || key === core_1.NameSpaceKeyStarknet) {\n            if (namespaces[key].chains) {\n                result.push({\n                    namespace: key,\n                    chains: namespaces[key].chains,\n                    params: namespaces[key].params\n                });\n            }\n        }\n    });\n    return result;\n}\nfunction fillParamsToSession(session, namespaces, optionalNamespaces, sessionConfig) {\n    // Helper function to merge rpcMaps\n    const mergeRpcMap = (targetRpcMap, sourceRpcMap) => {\n        Object.assign(targetRpcMap, sourceRpcMap);\n    };\n    // Merge function for namespaces\n    const mergeNamespaces = (target, source) => {\n        for (const key in source) {\n            if (source.hasOwnProperty(key) && source[key].rpcMap) {\n                if (source[key].rpcMap) {\n                    if (!target[key].rpcMap) {\n                        target[key].rpcMap = {};\n                    }\n                    // 合并 rpcMap\n                    mergeRpcMap(target[key].rpcMap, source[key].rpcMap);\n                }\n                if (source[key].defaultChain && target[key].defaultChain === undefined) {\n                    //defaultChain need in session nameSpace\n                    if (target[key].chains.some(chain => chain.split(\":\")[1] === source[key].defaultChain)) {\n                        target[key].defaultChain = source[key].defaultChain;\n                    }\n                }\n            }\n        }\n    };\n    // 合并 namespaces\n    if (namespaces) {\n        mergeNamespaces(session.namespaces, namespaces);\n    }\n    // 合并 optionalNamespaces\n    if (optionalNamespaces) {\n        mergeNamespaces(session.namespaces, optionalNamespaces);\n    }\n    for (const key in session.namespaces) {\n        const namespace = session.namespaces[key];\n        if (!(namespace === null || namespace === void 0 ? void 0 : namespace.accounts) || namespace.accounts.length === 0) {\n            delete session.namespaces[key];\n        }\n    }\n    session.sessionConfig = sessionConfig;\n}\n/**\n * util designed for Wallets that builds namespaces structure by provided supported chains, methods, events & accounts.\n * It takes required & optional namespaces provided in the session proposal\n * along with the supported chains/methods/events/accounts by the wallet and returns a structured namespaces object\n * @param {BuildApprovedNamespacesParams} params\n * @returns {SessionTypes.Namespaces}\n */\n// export function buildApprovedNamespaces(\n//   params: BuildApprovedNamespacesParams,\n// ): SessionTypes.Namespaces {\n//   const {\n//     proposal: { requiredNamespaces, optionalNamespaces = {} },\n//     supportedNamespaces,\n//   } = params;\n//   const normalizedRequired = normalizeNamespaces(requiredNamespaces);\n//   const normalizedOptional = normalizeNamespaces(optionalNamespaces);\n//\n//   // build approved namespaces\n//   const namespaces = {};\n//   Object.keys(supportedNamespaces).forEach((namespace) => {\n//     const supportedChains = supportedNamespaces[namespace].chains;\n//     const supportedMethods = supportedNamespaces[namespace].methods;\n//     const supportedEvents = supportedNamespaces[namespace].events;\n//     const supportedAccounts = supportedNamespaces[namespace].accounts;\n//\n//     supportedChains.forEach((chain) => {\n//       if (!supportedAccounts.some((account) => account.includes(chain))) {\n//         throw new Error(`No accounts provided for chain ${chain} in namespace ${namespace}`);\n//       }\n//     });\n//\n//     namespaces[namespace] = {\n//       chains: supportedChains,\n//       methods: supportedMethods,\n//       events: supportedEvents,\n//       accounts: supportedAccounts,\n//     };\n//   });\n//\n//   // verify all required namespaces are supported\n//   const err = isConformingNamespaces(requiredNamespaces, namespaces, \"approve()\");\n//   if (err) throw new Error(err.message);\n//\n//   const approvedNamespaces = {};\n//\n//   // if both required & optional namespaces are empty, return all supported namespaces by the wallet\n//   if (!Object.keys(requiredNamespaces).length && !Object.keys(optionalNamespaces).length)\n//     return namespaces;\n//\n//   // assign accounts for the required namespaces\n//   Object.keys(normalizedRequired).forEach((requiredNamespace) => {\n//     const chains = supportedNamespaces[requiredNamespace].chains.filter((chain) =>\n//       normalizedRequired[requiredNamespace]?.chains?.includes(chain),\n//     );\n//     const methods = supportedNamespaces[requiredNamespace].methods.filter((method) =>\n//       normalizedRequired[requiredNamespace]?.methods?.includes(method),\n//     );\n//     const events = supportedNamespaces[requiredNamespace].events.filter((event) =>\n//       normalizedRequired[requiredNamespace]?.events?.includes(event),\n//     );\n//\n//     const accounts = chains\n//       .map((chain: string) =>\n//         supportedNamespaces[requiredNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[requiredNamespace] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   });\n//\n//   // add optional namespaces\n//   Object.keys(normalizedOptional).forEach((optionalNamespace) => {\n//     if (!supportedNamespaces[optionalNamespace]) return;\n//\n//     const chainsToAdd = normalizedOptional[optionalNamespace]?.chains?.filter((chain) =>\n//       supportedNamespaces[optionalNamespace].chains.includes(chain),\n//     );\n//     const methodsToAdd = supportedNamespaces[optionalNamespace].methods.filter((method) =>\n//       normalizedOptional[optionalNamespace]?.methods?.includes(method),\n//     );\n//     const eventsToAdd = supportedNamespaces[optionalNamespace].events.filter((event) =>\n//       normalizedOptional[optionalNamespace]?.events?.includes(event),\n//     );\n//\n//     const accountsToAdd = chainsToAdd\n//       ?.map((chain: string) =>\n//         supportedNamespaces[optionalNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[optionalNamespace] = {\n//       chains: mergeArrays(approvedNamespaces[optionalNamespace]?.chains, chainsToAdd),\n//       methods: mergeArrays(approvedNamespaces[optionalNamespace]?.methods, methodsToAdd),\n//       events: mergeArrays(approvedNamespaces[optionalNamespace]?.events, eventsToAdd),\n//       accounts: mergeArrays(approvedNamespaces[optionalNamespace]?.accounts, accountsToAdd),\n//     };\n//   });\n//\n//   return approvedNamespaces;\n// }\nfunction isCaipNamespace(namespace) {\n    return namespace.includes(\":\");\n}\nfunction parseNamespaceKey(namespace) {\n    return isCaipNamespace(namespace) ? namespace.split(\":\")[0] : namespace;\n}\n/**\n * Converts\n * ```\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * ```\n * into\n * ```\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *```\n */\n// export function normalizeNamespaces(\n//   namespaces: ProposalTypes.RequiredNamespaces,\n// ): ProposalTypes.RequiredNamespaces {\n//   const normalizedNamespaces = {} as ProposalTypes.RequiredNamespaces;\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       methods: mergeArrays(methods, normalizedNamespaces[normalizedKey]?.methods),\n//       events: mergeArrays(events, normalizedNamespaces[normalizedKey]?.events),\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n// export function getNamespacesFromAccounts(accounts: string[]) {\n//   const namespaces = {};\n//   accounts?.forEach((account) => {\n//     const [namespace, chainId] = account.split(\":\");\n//     if (!namespaces[namespace]) {\n//       namespaces[namespace] = {\n//         accounts: [],\n//         chains: [],\n//         events: [],\n//       };\n//     }\n//     namespaces[namespace].accounts.push(account);\n//     namespaces[namespace].chains.push(`${namespace}:${chainId}`);\n//   });\n//\n//   return namespaces;\n// }\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PROVIDER_EVENTS = void 0;\nexports.PROVIDER_EVENTS = {\n    DEFAULT_CHAIN_CHANGED: \"default_chain_changed\",\n    UPDATE_NAMESPACES: \"update_name_spaces\",\n    SESSION_CONNECTING: \"session_connecting\"\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./values\"), exports);\n__exportStar(require(\"./events\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GENERIC_SUBPROVIDER_NAME = exports.RPC_URL = exports.STORAGE = exports.CONTEXT = exports.WC_VERSION = exports.PROTOCOL = exports.RELAY_URL = exports.LOGGER = void 0;\nexports.LOGGER = \"error\";\nexports.RELAY_URL = \"wss://relay.walletconnect.com\";\nexports.PROTOCOL = \"wc\";\nexports.WC_VERSION = 2;\nexports.CONTEXT = \"universal_provider\";\nexports.STORAGE = `${exports.PROTOCOL}@${exports.WC_VERSION}:${exports.CONTEXT}:`;\nexports.RPC_URL = \"https://rpc.walletconnect.com/v1/\";\nexports.GENERIC_SUBPROVIDER_NAME = \"generic\";\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./types\"), exports);\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass AptosProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"aptos\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"solana request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"solana provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = AptosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass BtcProvider {\n    constructor(opts, name, client, events) {\n        this.name = core_1.NameSpaceKeyBtc;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"btc request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"btc provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = BtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass CosmosProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyCosmos;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"cosmos request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"cosmos provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = CosmosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Eip155Provider = void 0;\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nclass Eip155Provider {\n    constructor(opts, client, events) {\n        this.name = \"eip155\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = parseInt(this.getDefaultChain());\n        // rpc\n        this.httpProviders = this.createHttpProviders();\n        (0, core_1.logDebug)(\"eip155 constructor --opts.namespace-->\", opts.namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    isArray(value) {\n        return typeof value === \"object\" && value !== null && Array.isArray(value);\n    }\n    updateRequestParams(args) {\n        let isDic = args.params && typeof args.params === 'object' && !Array.isArray(args.params);\n        if (args.method === 'wallet_switchEthereumChain') {\n            const switchChainId = args.chainId.split(\":\")[1];\n            // const hexChainId = parseInt(switchChainId, 16);\n            const decimalNumber = parseInt(switchChainId, 10);\n            if (isNaN(decimalNumber)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid decimal number,  chainId: '${switchChainId}' `);\n            }\n            if (!args.params) {\n                args.params = { chainId: '0x' + decimalNumber.toString(16) };\n            }\n            else if (isDic) { //为 Record<string, unknown>\n                let params = args.params;\n                if (!('chainId' in params)) {\n                    params['chainId'] = '0x' + decimalNumber.toString(16);\n                    args.params = params;\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params error ,  method: '${args.method}' `);\n            }\n        }\n        else if (args.method === 'personal_sign'\n            || args.method === 'eth_signTypedData_v4'\n            || args.method === 'eth_sendTransaction'\n            || args.method === 'wallet_watchAsset') {\n            if (!args.params) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params is nil, method: '${args.method}'`);\n            }\n            if (this.isRecord(args.params)) {\n                let params = args.params;\n                (0, core_1.logDebug)(\"eip155 updateRequestParams params>\", JSON.stringify(params));\n                if ('chainId' in params) {\n                    const selectedChainId = args.chainId.split(\":\")[1];\n                    const chainNum = parseInt(selectedChainId, 10);\n                    let paramsChainString = String(params.chainId);\n                    let paramsChainId;\n                    if (paramsChainString.startsWith(this.name) && args.chainId === paramsChainString) { //为\n                        paramsChainId = chainNum;\n                    }\n                    else if (paramsChainString.startsWith(\"0x\")) {\n                        paramsChainId = parseInt(paramsChainString, 16);\n                    }\n                    else if (!isNaN(Number(paramsChainString))) { //数字\n                        paramsChainId = parseInt(paramsChainString, 10);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid params.chainId format, method: '${args.method}'`);\n                    }\n                    if (chainNum !== paramsChainId) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params.chainId not equal chain,  method: '${args.method}' `);\n                    }\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid request params type, method: '${args.method}'`);\n            }\n        }\n    }\n    //adapt array\n    adaptArray(args) {\n        if (args.method === 'wallet_switchEthereumChain'\n            || args.method === 'wallet_addEthereumChain'\n            || args.method === 'wallet_watchAsset'\n            || args.method === 'eth_sendTransaction') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr) {\n                    if (paramsArr.length === 1) {\n                        let firstParam = args.params[0];\n                        if (this.isRecord(firstParam)) {\n                            args.params = firstParam;\n                        }\n                    }\n                    else if (paramsArr.length > 1) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                    }\n                }\n            }\n        }\n        else if (args.method === 'eth_signTypedData_v4') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr && paramsArr.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                }\n                else if (paramsArr && paramsArr.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let messageObj = {};\n                if (paramsArr && paramsArr.length === 2) {\n                    let addressObj = args.params[0]; //address\n                    if (addressObj && typeof addressObj === 'string') { //check address\n                        let isEqual = false;\n                        this.namespace.accounts.forEach((account) => {\n                            let chainAddress = (0, utils_1.fromAccountToAddress)(account);\n                            if (chainAddress.toLowerCase() === addressObj.toLowerCase()) {\n                                isEqual = true;\n                            }\n                        });\n                        (0, core_1.logDebug)(\"eip155 adaptArray eth_signTypedData_v4 >>>isEqual: \", isEqual);\n                        if (!isEqual) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error, not equal,  method: '${args.method}' `);\n                        }\n                        if (this.isRecord(args.params[1])) {\n                            messageObj = args.params[1];\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error , not string,  method: '${args.method}' `);\n                    }\n                }\n                else if (paramsArr && paramsArr.length === 1) {\n                    if (this.isRecord(args.params[0])) {\n                        messageObj = args.params[0];\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                    }\n                }\n                try {\n                    let messages = JSON.stringify(messageObj);\n                    args.params = {\n                        typedDataJson: messages\n                    };\n                }\n                catch (err) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params call JSON.stringify() failed,  method: '${args.method}' `);\n                }\n            }\n        }\n        else if (args.method === 'personal_sign') {\n            if (this.isArray(args.params)) {\n                if (args.params && args.params.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params error,  method: '${args.method}' `);\n                }\n                else if (args.params && args.params.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let firstObj = args.params[0];\n                let secondObj = args.params[1];\n                if (secondObj && typeof secondObj === 'string') { //check address\n                    let isEqual = false;\n                    this.namespace.accounts.forEach((account) => {\n                        let chainAddress = (0, utils_1.fromAccountToAddress)(account);\n                        if (chainAddress.toLowerCase() === secondObj.toLowerCase()) {\n                            isEqual = true;\n                        }\n                    });\n                    (0, core_1.logDebug)(\"eip155 adaptArray personal_sign >>>isEqual: \", isEqual);\n                    if (!isEqual) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error,  method: '${args.method}' `);\n                    }\n                }\n                if (firstObj && typeof firstObj === 'string') {\n                    args.params = {\n                        message: firstObj\n                    };\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is error,  method: '${args.method}' `);\n                }\n            }\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"eth_requestAccounts\":\n            case \"eth_accounts\":\n            case \"eth_chainId\":\n                return false;\n            case \"eth_sendTransaction\":\n            case \"eth_signTransaction\":\n            case \"eth_sign\":\n            case \"personal_sign\":\n            case \"eth_signTypedData\":\n            case \"wallet_addEthereumChain\":\n            case \"wallet_watchAsset\":\n            case \"eth_signTypedData_v4\":\n                return true;\n            case \"wallet_switchEthereumChain\": {\n                this.adaptArray(args);\n                this.updateRequestParams(args);\n                const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n                return !this.isChainApproved(parsedChainId);\n            }\n            default:\n                return false;\n        }\n        return false;\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.adaptArray(args);\n            (0, core_1.logDebug)(\"eip155 request --args--string>\", JSON.stringify(args));\n            this.updateRequestParams(args);\n            (0, core_1.logDebug)(\"eip155 request --params--string>\", JSON.stringify(args));\n            switch (args.method) {\n                case \"eth_requestAccounts\":\n                    return this.getAccounts();\n                case \"eth_accounts\":\n                    return this.getAccounts();\n                case \"eth_chainId\":\n                    return parseInt(this.getDefaultChain());\n                case \"wallet_switchEthereumChain\": {\n                    return (yield this.handleSwitchChain(args));\n                }\n                case \"wallet_addEthereumChain\":\n                    return this.addEthereumChain(args);\n                default:\n                    break;\n            }\n            if (this.namespace.methods.includes(args.method)) {\n                // personal_sign\n                // eth_signTypedData_v4\n                // eth_sendTransaction\n                // wallet_watchAsset\n                try {\n                    const response = yield this.client.request(args);\n                    (0, core_1.logDebug)(\"eip155 request --response----string>\", JSON.stringify(response));\n                    if (this.isRecord(response)) {\n                        if ('result' in response) {\n                            let result = response.result;\n                            if (result && typeof result === 'string' && (result === \"true\" || result === \"false\")) {\n                                (0, core_1.logDebug)(\"eip155 request --wallet_watchAsset>>>>\", result === \"true\");\n                                return (result === \"true\");\n                            }\n                            return response.result;\n                        }\n                    }\n                    return response;\n                }\n                catch (e) {\n                    (0, core_1.logDebug)(`eip155 request --response --error--string> e instanceof OKXConnectError ${e instanceof core_1.OKXConnectError}`, JSON.stringify(e));\n                    throw e;\n                }\n            }\n            else {\n                (0, core_1.logDebug)('[RPC] request begin');\n                return yield this.getHttpProvider().request(args);\n            }\n        });\n    }\n    addEthereumChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let resultData = (yield this.client.request(args));\n            try {\n                if ('result' in resultData) {\n                    let successData = resultData;\n                    let account = resultData.result;\n                    if (account) {\n                        const nameSpace = account.split(\":\")[0];\n                        const chainId = account.split(\":\")[1];\n                        const chain = nameSpace + ':' + chainId;\n                        let newNameSpace = this.namespace;\n                        this.namespace.accounts.push(account);\n                        this.namespace.chains.push(chain);\n                        if (this.isRecord(args.params)) {\n                            if (\"rpcUrls\" in args.params) {\n                                let rpcUrls = args.params.rpcUrls;\n                                let rpcUrl = rpcUrls ? rpcUrls[0] : undefined;\n                                if (rpcUrl) {\n                                    if (this.namespace.rpcMap) {\n                                        this.namespace.rpcMap[chainId] = rpcUrl;\n                                    }\n                                    else {\n                                        this.namespace.rpcMap = {\n                                            [chainId]: rpcUrl\n                                        };\n                                    }\n                                    this.setHttpProvider(chainId, rpcUrl);\n                                }\n                            }\n                        }\n                        this.events.emit(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, {\n                            eip155: this.namespace\n                        });\n                    }\n                }\n                else {\n                    new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request error`);\n                }\n            }\n            catch (error) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request  error`);\n            }\n            return null;\n        });\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        this.chainId = parseInt(chainId);\n        // set rpc\n        if (!this.httpProviders[chainId]) {\n            const rpc = rpcUrl || (0, utils_1.getRpcUrl)(`${this.name}:${chainId}`, this.namespace);\n            if (!rpc) {\n                // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n                (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            }\n            else {\n                this.setHttpProvider(chainId, rpc);\n            }\n        }\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId.toString();\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // ---------- Private ----------------------------------------------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"eip155 getAccounts \", accounts, this.chainId);\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => {\n                return (0, utils_1.fromAccountToAddress)(account);\n            })),\n        ];\n    }\n    getHexChainIdFromRequest(args) {\n        let params = args.params;\n        let hexChainId = \"0x0\";\n        if (params && \"chainId\" in params) {\n            hexChainId = params.chainId;\n        }\n        hexChainId = hexChainId.startsWith(\"0x\") ? hexChainId : `0x${hexChainId}`;\n        (0, core_1.logDebug)(\"handleSwitchChain -->args \", args);\n        (0, core_1.logDebug)(\"handleSwitchChain -->hexChainId \", hexChainId);\n        const parsedChainId = parseInt(hexChainId, 16);\n        (0, core_1.logDebug)(\"handleSwitchChain -->parsedChainId \", parsedChainId);\n        return { parsedChainId, hexChainId };\n    }\n    handleSwitchChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n            if (this.isChainApproved(parsedChainId)) {\n                this.setDefaultChain(`${parsedChainId}`);\n            }\n            else {\n                const resultData = (yield this.client.request({\n                    method: \"wallet_switchEthereumChain\",\n                    chainId: args.chainId,\n                    params: {\n                        chainId: hexChainId,\n                    },\n                }));\n                try {\n                    if ('result' in resultData) {\n                        let successData = resultData;\n                        let account = resultData.result;\n                        if (account) {\n                            const nameSpace = account.split(\":\")[0];\n                            const chainId = account.split(\":\")[1];\n                            const chain = nameSpace + ':' + chainId;\n                            let newNameSpace = this.namespace;\n                            this.namespace.accounts.push(account);\n                            this.namespace.chains.push(chain);\n                            (0, core_1.logDebug)(\"handleSwitchChain -->wallet_switchEthereumChain \", resultData);\n                            this.setDefaultChain(`${parsedChainId}`);\n                            this.events.emit(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, {\n                                eip155: this.namespace\n                            });\n                        }\n                    }\n                    else {\n                        new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request error`);\n                    }\n                }\n                catch (error) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request  error`);\n                }\n            }\n            return null;\n        });\n    }\n    isChainApproved(chainId) {\n        return this.namespace.chains.includes(`${this.name}:${chainId}`);\n    }\n    // rpc\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            //   throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            (0, core_1.logDebug)('get parsed chain and rpc:', parsedChainId, parsedRpc);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        (0, core_1.logDebug)('get http providermap:', http);\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n}\nexports.Eip155Provider = Eip155Provider;\nexports.default = Eip155Provider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcConnection = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\n// Source: https://nodejs.org/api/events.html#emittersetmaxlistenersn\nconst EVENT_EMITTER_MAX_LISTENERS_DEFAULT = 10;\nclass JsonRpcConnection {\n    constructor(url, disableProviderPing = false) {\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n        this.events = new eventemitter3_1.EventEmitter();\n        this.isAvailable = false;\n        this.registering = false;\n        if (!(0, core_2.isHttpUrl)(url)) {\n            throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n        }\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n    }\n    get connected() {\n        return this.isAvailable;\n    }\n    get connecting() {\n        return this.registering;\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            yield this.register(url);\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                throw new Error(\"Connection already closed\");\n            }\n            this.onClose();\n        });\n    }\n    send(payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                yield this.register();\n            }\n            try {\n                const body = (0, core_1.safeJsonStringify)(payload);\n                const res = yield (0, cross_fetch_1.default)(this.url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                const data = yield res.json();\n                this.onPayload({ data });\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    register() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (!(0, core_2.isHttpUrl)(url)) {\n                throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n            }\n            if (this.registering) {\n                return new Promise((resolve, reject) => {\n                    this.events.once(\"register_error\", (error) => {\n                        reject(error);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.isAvailable === \"undefined\") {\n                            return reject(new Error(\"HTTP connection is missing or invalid\"));\n                        }\n                        resolve();\n                    });\n                });\n            }\n            this.url = url;\n            this.registering = true;\n            try {\n                if (!this.disableProviderPing) {\n                    const body = (0, core_1.safeJsonStringify)({ id: 1, jsonrpc: \"2.0\", method: \"test\", params: [] });\n                    yield (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                }\n                this.onOpen();\n            }\n            catch (e) {\n                const error = this.parseError(e);\n                this.events.emit(\"register_error\", error);\n                this.onClose();\n                throw error;\n            }\n        });\n    }\n    onOpen() {\n        this.isAvailable = true;\n        this.registering = false;\n        this.events.emit(\"open\");\n    }\n    onClose() {\n        this.isAvailable = false;\n        this.registering = false;\n        this.events.emit(\"close\");\n    }\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        const payload = typeof e.data === \"string\" ? (0, core_1.safeJsonParse)(e.data) : e.data;\n        this.events.emit(\"payload\", payload);\n    }\n    onError(id, e) {\n        const error = this.parseError(e);\n        const message = error.message || error.toString();\n        const payload = (0, core_2.formatJsonRpcError)(id, message);\n        this.events.emit(\"payload\", payload);\n    }\n    parseError(e, url = this.url) {\n        return (0, core_2.parseConnectionError)(e, url, \"HTTP\");\n    }\n}\nexports.JsonRpcConnection = JsonRpcConnection;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcProvider = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst types_1 = require(\"../../types\");\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nclass JsonRpcProvider extends types_1.IJSONRpcProvider {\n    constructor(connection) {\n        super(connection);\n        this.events = new eventemitter3_1.EventEmitter();\n        this.connected = false;\n        this.connecting = false;\n        this.hasRegisteredEventListeners = false;\n        this.connection = this.setConnection(connection);\n        if (this.connection.connected) {\n            this.registerEventListeners();\n        }\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            yield this.open(connection);\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.close();\n        });\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    request(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.requestStrict((0, core_1.formatJsonRpcRequest)(request.method, request.params || [], (0, core_1.getBigIntRpcId)().toString()), // casting to any is required in order to use BigInt as rpcId\n            context);\n        });\n    }\n    // ---------- Protected ----------------------------------------------- //\n    requestStrict(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.connection.connected) {\n                    try {\n                        yield this.open();\n                    }\n                    catch (e) {\n                        reject(e);\n                    }\n                }\n                this.events.on(`${request.id}`, (response) => {\n                    if ((0, core_1.isJsonRpcError)(response)) {\n                        reject(response.error);\n                    }\n                    else {\n                        resolve(response.result);\n                    }\n                });\n                try {\n                    (0, core_2.logDebug)('[RPC] >>> send request', request, context);\n                    yield this.connection.send(request, context);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }));\n        });\n    }\n    setConnection(connection = this.connection) {\n        return connection;\n    }\n    onPayload(payload) {\n        this.events.emit(\"payload\", payload);\n        if ((0, core_1.isJsonRpcResponse)(payload)) {\n            this.events.emit(`${payload.id}`, payload);\n        }\n        else {\n            this.events.emit(\"message\", {\n                type: payload.method,\n                data: payload.params,\n            });\n        }\n    }\n    onClose(event) {\n        // Code 3000 indicates an abnormal closure signalled by the relay -> emit an error in this case.\n        if (event && event.code === 3000) {\n            this.events.emit(\"error\", new Error(`WebSocket connection closed abnormally with code: ${event.code} ${event.reason ? `(${event.reason})` : \"\"}`));\n        }\n        this.events.emit(\"disconnect\");\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            if (this.connection === connection && this.connection.connected)\n                return;\n            if (this.connection.connected)\n                this.close();\n            if (typeof connection === \"string\") {\n                yield this.connection.open(connection);\n                connection = this.connection;\n            }\n            this.connection = this.setConnection(connection);\n            yield this.connection.open();\n            this.registerEventListeners();\n            this.events.emit(\"connect\");\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.connection.close();\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    registerEventListeners() {\n        if (this.hasRegisteredEventListeners)\n            return;\n        this.connection.on(\"payload\", (payload) => this.onPayload(payload));\n        this.connection.on(\"close\", (event) => this.onClose(event));\n        this.connection.on(\"error\", (error) => this.events.emit(\"error\", error));\n        this.connection.on(\"register_error\", (_error) => this.onClose());\n        this.hasRegisteredEventListeners = true;\n    }\n}\nexports.JsonRpcProvider = JsonRpcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolanaProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SolanaProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"solana\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"solana request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"solana provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    //   {\n    //     \"chains\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\" ],\n    //     \"accounts\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp:F7wnJc5wiBGy1k87jv6gyNwE3jMEWd18oTQiYsF1xVG7\"],\n    //     \"methods\": [\n    //         \"solana_signTransaction\",\n    //         \"solana_signMessage\"\n    //     ],\n    //     \"defaultChain\": \"5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\"\n    // }\n    // TODO:确认上面的defaultChain是否正确（没有solana前缀）\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"solana\"))) {\n                chainId = `solana:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.SolanaProvider = SolanaProvider;\nexports.default = SolanaProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass StarknetProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"starknet\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"starknet request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"starknet provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Wallet doesn't support\" + args.method);\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = StarknetProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuiProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SuiProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeySui;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"sui request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"sui provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"sui\"))) {\n                chainId = `sui:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"sui_signMessage\":\n            case \"sui_signPersonalMessage\":\n            case \"sui_signTransactionBlock\":\n            case \"sui_signAndExecuteTransactionBlock\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.SuiProvider = SuiProvider;\nexports.default = SuiProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TONProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTON;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            (0, core_1.logDebug)(\"TONProvider request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"TONProvider request provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                if (!args.params) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params is nil\");\n                }\n                if (this.isRecord(args.params)) {\n                    const _e = args.params, { validUntil } = _e, newParams = __rest(_e, [\"validUntil\"]);\n                    let fromAddress = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n                    if ('from' in newParams) {\n                        fromAddress = newParams.from || ((_d = (_c = this.namespace.payload) === null || _c === void 0 ? void 0 : _c.ton_addr) === null || _d === void 0 ? void 0 : _d.address);\n                    }\n                    args.params['from'] = fromAddress;\n                    args.params['network'] = this.getDefaultChain();\n                    args.params['valid_until'] = validUntil;\n                    let response = yield this.client.request(args);\n                    if (this.isRecord(response) && 'result' in response) {\n                        const result = {\n                            boc: response.result.toString()\n                        };\n                        (0, core_1.logDebug)(\"TONProvider request provider response: \", JSON.stringify(response));\n                        (0, core_1.logDebug)(\"TONProvider request provider result: \", JSON.stringify(result));\n                        return result;\n                    }\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton_send request response is nil\");\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params type add nil\");\n                }\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        var _a, _b;\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"ton getAccounts accounts :\", accounts);\n        (0, core_1.logDebug)(\"ton getAccounts .namespace :\", JSON.stringify(this.namespace));\n        if (!accounts) {\n            return [];\n        }\n        let address = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n        (0, core_1.logDebug)(\"ton getAccounts address :\", address);\n        if (address) {\n            return [\n                address\n            ];\n        }\n        return [];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"ton_sendTransaction\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.default = TONProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TronProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTron;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"tron request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"tron provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = TronProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./providers\"), exports);\n__exportStar(require(\"./misc\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IJSONRpcProvider = exports.IJSONRpcConnection = void 0;\nclass IJSONRpcConnection {\n}\nexports.IJSONRpcConnection = IJSONRpcConnection;\nclass IJSONRpcProvider {\n    constructor(opt) {\n    }\n}\nexports.IJSONRpcProvider = IJSONRpcProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setGlobal = exports.getGlobal = void 0;\nconst globals = {};\nconst getGlobal = (key) => {\n    return globals[key];\n};\nexports.getGlobal = getGlobal;\nconst setGlobal = (key, value) => {\n    globals[key] = value;\n};\nexports.setGlobal = setGlobal;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./misc\"), exports);\n__exportStar(require(\"./globals\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRpcUrl = getRpcUrl;\nexports.getChainId = getChainId;\nexports.fromAccountToAddress = fromAccountToAddress;\nexports.convertChainIdToNumber = convertChainIdToNumber;\nexports.parseChainId = parseChainId;\nexports.mergeArrays = mergeArrays;\nexports.syncAddressAvailable = syncAddressAvailable;\nexports.syncAddressHostAvailable = syncAddressHostAvailable;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getRpcUrl(chainId, rpc, projectId) {\n    var _a;\n    const chain = parseChainId(chainId);\n    // no default\n    return (((_a = rpc.rpcMap) === null || _a === void 0 ? void 0 : _a[chain.reference]) ||\n        ``);\n}\nfunction getChainId(chain) {\n    return chain.includes(\":\") ? chain.split(\":\")[1] : chain;\n}\nfunction fromAccountToAddress(account) {\n    if (!account) {\n        return \"\";\n    }\n    try {\n        let addressArr = account.split(\":\").slice(2);\n        let address = addressArr.length > 0 ? addressArr.join(\":\") : \"\";\n        (0, core_1.logDebug)(\"fromAccountToAddress address and account:\", address, account);\n        return address;\n    }\n    catch (e) {\n        (0, core_1.logError)(\"fromAccountToAddress error:\", account);\n        return \"\";\n    }\n}\n// export function validateChainApproval(chain: string, chains: string[]): void {\n//   if (!chains.includes(chain)) {\n//     throw new Error(\n//       `Chain '${chain}' not approved. Please use one of the following: ${chains.toString()}`,\n//     );\n//   }\n// }\n// export function getChainsFromApprovedSession(accounts: string[]): string[] {\n//   return accounts.map((address) => `${address.split(\":\")[0]}:${address.split(\":\")[1]}`);\n// }\n// export function getAccountsFromSession(namespace: string, session: SessionTypes.Struct): string[] {\n//   // match namespaces e.g. eip155 with eip155:1\n//   const matchedNamespaceKeys = Object.keys(session.namespaces).filter((key) =>\n//     key.includes(namespace),\n//   );\n//   if (!matchedNamespaceKeys.length) return [];\n//   const accounts: string[] = [];\n//   matchedNamespaceKeys.forEach((key) => {\n//     const accountsForNamespace = session.namespaces[key].accounts;\n//     accounts.push(...accountsForNamespace);\n//   });\n//   return accounts;\n// }\n// export function mergeRequiredOptionalNamespaces(\n//   required: NamespaceConfig = {},\n//   optional: NamespaceConfig = {},\n// ){\n//   const requiredNamespaces = normalizeNamespaces(required);\n//   const optionalNamespaces = normalizeNamespaces(optional);\n//    return merge.merge(requiredNamespaces,optionalNamespaces)\n// }\n/**\n * Converts\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * into\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *\n */\n// export function normalizeNamespaces(namespaces: NamespaceConfig): NamespaceConfig {\n//   const normalizedNamespaces: NamespaceConfig = {};\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const rpcMap = values.rpcMap || {};\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       ...values,\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       rpcMap: { ...rpcMap, ...normalizedNamespaces[normalizedKey]?.rpcMap },\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n//\n// export function parseCaip10Account(caip10Account: string): string {\n//   return caip10Account.includes(\":\") ? caip10Account.split(\":\")[2] : caip10Account;\n// }\n/**\n * Populates the chains array for each namespace with the chains extracted from the accounts if are otherwise missing\n */\n// export function populateNamespacesChains(\n//   namespaces: SessionTypes.Namespaces,\n// ): Record<string, SessionTypes.Namespace> {\n//   const parsedNamespaces: Record<string, SessionTypes.Namespace> = {};\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const accounts = values.accounts || [];\n//     // If the key includes a CAIP separator `:` we know it's a namespace + chainId (e.g. `eip155:1`)\n//     const chains = isCaipNamespace(key)\n//       ? [key]\n//       : values.chains\n//       ? values.chains\n//       : getChainsFromApprovedSession(values.accounts);\n//     parsedNamespaces[key] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   }\n//   return parsedNamespaces;\n// }\nfunction convertChainIdToNumber(chainId) {\n    if (typeof chainId === \"number\")\n        return chainId;\n    if (chainId.includes(\"0x\")) {\n        return parseInt(chainId, 16);\n    }\n    chainId = chainId.includes(\":\") ? chainId.split(\":\")[1] : chainId;\n    return isNaN(Number(chainId)) ? chainId : Number(chainId);\n}\nconst CAIP_DELIMITER = \":\";\nfunction parseChainId(chain) {\n    const [namespace, reference] = chain.split(CAIP_DELIMITER);\n    return { namespace, reference };\n}\nfunction mergeArrays(a = [], b = []) {\n    return [...new Set([...a, ...b])];\n}\nfunction syncAddressAvailable(wallet) {\n    if (!wallet) {\n        return false;\n    }\n    if (wallet.appName !== 'OKX Wallet') {\n        return false;\n    }\n    if ((0, core_1.versionCompare)('6.97.0', wallet.appVersion) > 0) {\n        return false;\n    }\n    return syncAddressHostAvailable();\n}\nfunction syncAddressHostAvailable() {\n    try {\n        return !!(window.okxGlobal);\n    }\n    catch (e) {\n        return false;\n    }\n}\n","<template>\n  <div id=\"app\">\n    <el-container>\n      <el-header>OKX Connect</el-header>\n      <el-main>\n        <el-card class=\"wallet-info\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Wallet Info</div>\n          </template>\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Wallet Address:</strong> {{ getWalletAddress }}\n            </el-col>\n          </el-row>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Status :</strong> {{ currentStatus }}\n            </el-col>\n          </el-row>\n\n        </el-card>\n\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Connect Params</div>\n          </template>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"withUI\" @change=\"handleWithUI\">\n                Show UI</el-checkbox>\n            </el-col>\n\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"universalToTG\" @change=\"handleUniversalToTG\">\n                Use mini wallet</el-checkbox>\n            </el-col>\n          </el-row>\n\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Modals</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"modals\" placeholder=\"Modals\" @change=\"handleModalsSelect\" multiple>\n                <el-option label=\"Before\" value=\"before\" />\n                <el-option label=\"Success\" value=\"success\" />\n                <el-option label=\"Error\" value=\"error\" />\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center; justify-content: space-between;\">\n            <el-col :span=\"6\" style=\"gap: 2px\">\n              <p style=\"font-size: 11pt; margin: 0px\">Return Strategy</p>\n              <p style=\"font-size: 9pt; margin: 0px\">(Mobile only)</p>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-select\n                v-model=\"returnStrategy\"\n                @change=\"handleReturnStrategySelect\"\n                placeholder=\"Return Strategy\"\n              >\n                <el-option\n                  v-for=\"strategy in returnStrategies\"\n                  :key=\"`return-strategy-select-option-${strategy}`\"\n                  :label=\"strategy\"\n                  :value=\"strategy\"\n                />\n              </el-select>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-input\n                v-if=\"returnStrategy === 'deeplink'\"\n                v-model=\"deeplink\"\n                @change=\"handleReturnStrategyDeeplink\"\n                placeholder=\"Deeplink\"\n                :disabled=\"returnStrategy !== 'deeplink'\"\n                style=\"margin: 0px\"\n              />\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Lang</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"language\" @change=\"handleLanguageSelect\" placeholder=\"Language\">\n                <el-option v-for=\"locale in locales\" :key=\"`language-select-option-${locale}`\" :label=\"locale\"\n                  :value=\"locale\" />\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Theme</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"theme\" @change=\"handleThemeSelect\" placeholder=\"Theme\">\n                <el-option label=\"LIGHT\" :value=\"THEME.LIGHT\" />\n                <el-option label=\"DARK\" :value=\"THEME.DARK\" />\n              </el-select>\n            </el-col>\n          </el-row>\n\n<!--          <el-row>-->\n<!--          <el-row style=\"align-items: center\">-->\n<!--            <el-col :span=\"4\">-->\n<!--              <p style=\"font-size: 11pt\">Connect</p>-->\n<!--              <p style=\"font-size: 11pt\">Methods</p>-->\n<!--            </el-col>-->\n<!--            <el-col :span=\"20\">-->\n<!--              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" placeholder=\"Methods\">-->\n<!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n<!--                           :value=\"methods\" />-->\n\n<!--              </el-select>-->\n<!--            </el-col>-->\n<!--          </el-row>-->\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Connect</p>\n              <p style=\"font-size: 11pt\">Methods</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" multiple placeholder=\"methods\">\n                <el-option\n                    v-for=\"item in connectMethods\"\n                    :key=\"item\"\n                    :label=\"item\"\n                    :value=\"item\">\n                </el-option>\n              </el-select>\n\n\n<!--              <el-select v-model=\"selectedMethod\" placeholder=\"Methods\" @change=\"handleConnectMethodsSelect\" multiple>-->\n<!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n<!--                           :value=\"methods\" />-->\n<!--              </el-select>-->\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">ton_proof</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-input v-model=\"tonProofValue\"  placeholder=\"input ton_proof\"></el-input>\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" align=\"middle\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Required Chains</div>\n            </el-col>\n            <el-col\n              :span=\"6\"\n              v-for=\"item in Object.keys(availableChains)\"\n              :key=\"item\"\n            >\n              <el-checkbox\n                v-model=\"availableChains[item].checked\"\n                :disabled=\"!areChainsInit\"\n                >{{ availableChains[item].name }}</el-checkbox\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" align=\"middle\" style=\"margin-top: 20px\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Optional Chains</div>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(43114)\" @change=\"() => handleOptionChange(43114)\">\n                AVAX</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(10)\" @change=\"() => handleOptionChange(10)\">OP</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(8453)\" @change=\"() => handleOptionChange(8453)\">\n                BASE</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(99781165)\"\n                @change=\"() => handleOptionChange(99781165)\">Nonexist</el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp')\" @change=\"() => handleOptionChange('solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp')\">Solana</el-checkbox>\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"initBtnClicked\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectInitStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                type=\"primary\"\n                @click=\"connectBtnClicked\"\n                icon=\"el-icon-connection\"\n                :disabled=\"!areChainsInit\"\n                >{{ connectStatusStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"syncAllAddressClick\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ syncAllAddressStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                type=\"danger\"\n                @click=\"disconnectAction\"\n                icon=\"el-icon-switch-button\"\n                :disabled=\"!areChainsInit || walletAddress.length == 0\"\n                >{{ disconnectStatusStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n          <teleport to=\"body\">\n            <div v-if=\"showModal\" class=\"modal-overlay\" @click=\"closeModal\">\n              <div class=\"modal-content\" @click.stop>\n                <button class=\"close-button\" @click=\"closeModal\">\n                  &times;\n                </button>\n                <h2>Scan to connect</h2>\n                <qrcode-vue :value=\"qrValue\" :size=\"350\" level=\"L\" />\n              </div>\n            </div>\n          </teleport>\n        </el-card>\n\n        <!-- 发送交易 -->\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Transactions</div>\n          </template>\n\n          <el-tabs v-model=\"activeTab\" type=\"border-card\" @tab-click=\"clickActiveTab\">\n            <!-- ETH -->\n            <el-tab-pane label=\"ETH\" name=\"eip155:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to ETH)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve TONCoin)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(eth mint\n                    nft)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add SPX6900)\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TON\" name=\"ton:-239\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_getAccount\">ton_getAccount</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_sendTransaction\">ton_sendTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- solana -->\n            <el-tab-pane label=\"Sol\" name=\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- Sui-->\n            <el-tab-pane label=\"Sui\" name=\"sui:mainnet\">\n              <SuiPanel @generateTransactionParams=\"sui_generateTransactionParams\" />\n            </el-tab-pane>\n            <!-- BTC -->\n            <el-tab-pane label=\"BTC\" name=\"btc:mainnet\">\n              <BTCPanel @generateTransactionParams=\"btc_generateTransactionParams\" />\n            </el-tab-pane>\n\n            <!-- Fractal BTC -->\n            <el-tab-pane label=\"Fractal\" name=\"fractal:mainnet\">\n              <FractalPanel @generateTransactionParams=\"fractal_generateTransactionParams\" />\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Tron\" name=\"tron:mainnet\">\n              <TronTransactionPanel\n                  @generateTransactionParams=\"tron_generateTransactionParams\"\n                  @generateTransactionResult=\"tron_getTransactionResult\" />\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Aptos\" name=\"aptos:mainnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signTransaction\">aptos_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"aptos_signAndSubmitTransaction\">aptos_signAndSubmitTransaction</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Cosmos\" name=\"cosmos:cosmoshub-4\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <!-- Polygon-->\n            <el-tab-pane label=\"Polygon\" name=\"eip155:137\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send POL)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve sushi)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(polygon mint\n                    nft)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add LGNS)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_testRpc()\">wallet_testRpc(Polygon)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\"\n                  >eth_sendTransaction(转账FUSE)</el-button\n                  >\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\"\n                  >eth_sendTransaction(授权USDC)</el-button\n                  >\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- BSC-->\n            <el-tab-pane label=\"BNB\" name=\"eip155:56\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to BNB)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve POSI)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add FET)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_testRpc()\">wallet_testRpc(check balance on eth)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Fuse\" name=\"eip155:122\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_swap\">eth_sendTransaction(Swap)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Sonic testnet\" name=\"svm:70000062\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Movement\" name=\"movement:testnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"move_signTransaction\">move_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"move_signAndSubmitTransaction\">move_signAndSubmitTransaction</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n\n            <el-tab-pane label=\"osmos\" name=\"cosmos:osmosis-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"SEI\" name=\"cosmos:pacific-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Starknet\" name=\"starknet:mainnet\">\n              <StarknetPanel ref=\"starknetPanelRef\" @generateTransactionParams=\"starknet_generateTransactionParams\" @generateTransactionResult=\"starknet_getTransactionResult\" />\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TEST \" name=\"test:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"testBase64UrlSafe\">testBase64UrlSafe</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n          </el-tabs>\n\n          <el-col :xs=\"24\" :sm=\"24\" style=\"margin: 16px 0px;\">\n            <el-row style=\"align-items: center; justify-content: space-between; margin-bottom: 8px;\">\n              <el-col :span=\"4\">\n                <p style=\"font-size: 11pt; margin: 0px; text-align: start\">Redirect param (only for ETH, Polygon, BNB, Fuse)</p>\n              </el-col>\n              <el-col :span=\"9\">\n                <el-select\n                  v-model=\"redirect\"\n                  @change=\"handleRedirectSelect\"\n                  placeholder=\"Return Strategy\"\n                  :disabled=\"!canChainAddRedirectParam()\"\n                  >\n                  <el-option\n                    v-for=\"strategy in returnStrategies\"\n                    :key=\"`return-strategy-select-option-${strategy}`\"\n                    :label=\"strategy\"\n                    :value=\"strategy\"\n                  />\n                </el-select>\n              </el-col>\n              <el-col :span=\"10\">\n                <el-input\n                  v-if=\"redirect === 'deeplink'\"\n                  v-model=\"redirectDeeplink\"\n                  @change=\"handleRedirectDeeplink\"\n                  placeholder=\"Deeplink\"\n                  :disabled=\"!canChainAddRedirectParam() || redirect !== 'deeplink'\"\n                  style=\"margin: 0px\"\n                />\n              </el-col>\n            </el-row>\n            <el-button\n              type=\"primary\" @click=\"addRedirectParam()\"\n              :disabled=\"!canChainAddRedirectParam() || !testTransaction\"\n            >\n              Add redirect param to data\n            </el-button>\n          </el-col>\n\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Data:</div>\n            <el-input v-model=\"testTransaction\" type=\"textarea\" :rows=\"5\" placeholder=\"sendTransactions\"></el-input>\n          </el-col>\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Result :</div>\n            <el-input v-model=\"testboc\" type=\"textarea\" :rows=\"5\" placeholder=\"boc\"></el-input>\n          </el-col>\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button type=\"primary\" :disabled=\"sendBtnDisabled\" @click=\"sendTransaction()\">{{\n                testTransactionStr\n                }}</el-button>\n            </el-col>\n          </el-row>\n        </el-card>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<style scoped>\n/* 重置全局边距和内边距 */\nbody,\nhtml {\n  margin: 0;\n  padding: 0;\n  height: 100%;\n}\n\n/* 确保 app 容器占满整个视口 */\n#app {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin: 0 auto;\n  /* 居中 */\n  max-width: 600px;\n  /* 设置最大宽度 */\n  padding: 0 20px;\n  /* 添加一些左右内边距 */\n}\n\n/* 调整 el-container 样式 */\n.el-container {\n  min-height: 100vh;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n}\n\n/* 调整 el-header 样式 */\n.el-header {\n  background-color: #333333;\n  color: white;\n  height: 50px;\n  line-height: 50px;\n  font-size: 18px;\n  font-weight: bold;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n}\n\n/* 调整 el-main 样式 */\n.el-main {\n  padding: 70px 0 20px;\n  /* 增加顶部内边距以避免被固定header遮挡 */\n  flex-grow: 1;\n}\n\n.el-card {\n  margin-bottom: 20px;\n}\n\n.info-row {\n  margin-bottom: 10px;\n}\n\n.input-label {\n  margin-bottom: 5px;\n  text-align: left;\n}\n\n.el-input {\n  margin-bottom: 10px;\n}\n\n/* 通用按钮样式 */\n.wallet-actions .el-button,\n.transaction .el-button,\n.clear-cache .el-button {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 40px;\n}\n\n.wallet-actions .el-button span,\n.transaction .el-button span,\n.clear-cache .el-button span {\n  margin: 0 auto;\n}\n\n/* 按钮行间距 */\n.wallet-actions .button-row,\n.transaction .button-row {\n  margin-bottom: 8px;\n}\n\n.wallet-actions .button-row:last-child,\n.transaction .button-row:last-child {\n  margin-bottom: 0;\n}\n\n/* 调整图标和文字的对齐 */\n.wallet-actions .el-button [class^=\"el-icon-\"],\n.transaction .el-button [class^=\"el-icon-\"],\n.clear-cache .el-button [class^=\"el-icon-\"] {\n  margin-right: 5px;\n  vertical-align: middle;\n}\n\n/* 新增：调整发送交易按钮与输入框的间距 */\n.transaction .el-row:not(:last-child) {\n  margin-bottom: 10px;\n}\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  text-align: center;\n  position: relative;\n  max-width: 90%;\n  width: 400px;\n}\n\n.close-button {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  font-size: 24px;\n  border: none;\n  background: none;\n  cursor: pointer;\n}\n\n/* 响应式调整 */\n@media (max-width: 600px) {\n  #app {\n    padding: 0 10px;\n  }\n\n  .el-main {\n    padding: 60px 0 10px;\n  }\n}\n</style>\n<script>\nimport {OKX_CONNECT_ERROR_CODES, safeJsonStringify,getAppWalletDeepLink,getUniversalLink} from \"@okxconnect/core\"\nimport {\n  OKXBtcProvider,\n  OKXUniversalProvider,\n  OKXCosmosProvider,\n  OKXTonProvider,\n  OKXTronProvider,\n  OKXStarknetProvider\n} from \"@okxconnect/universal-provider\"\nimport {OKXSolanaProvider} from \"@okxconnect/solana-provider\";\nimport {\n  Connection,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n  TransactionMessage,\n  VersionedTransaction\n} from '@solana/web3.js';\nimport {OKXSuiProvider as SuiAdapter} from \"@okxconnect/sui-provider\"\nimport QrcodeVue from 'qrcode.vue'\n\nimport {OKXAptosProvider} from \"@okxconnect/aptos-provider\";\nimport {Aptos, AptosConfig, Network} from \"@aptos-labs/ts-sdk\";\n\nimport BTCPanel from \"./components/BtcTransactionPanel.vue\";\nimport FractalPanel from \"./components/FractalTransactionPanel.vue\"\nimport SuiPanel from \"./components/SuiTransactionPanel.vue\";\nimport StarknetPanel from \"./components/StarknetTransactionPanel.vue\";\n\nimport {OKXUniversalConnectUI, THEME} from \"@okxconnect/ui\";\nimport {ethers} from 'ethers';\nimport VConsole from 'vconsole';\nimport nacl from \"tweetnacl\";\nconst { verifyADR36Amino } = require('@keplr-wallet/cosmos')\nconst { fromBech32 } = require('@cosmjs/encoding')\nimport { verifyPersonalMessageSignature } from '@mysten/sui/verify';\nimport {useShortLink} from \"@okxconnect/core\";\nimport TronTransactionPanel from \"@/components/TronTransactionPanel.vue\";\nimport {TronWeb} from \"tronweb\";\nimport { RpcProvider as StarknetRpcProvider, Account as StarknetAccount } from \"starknet\";\nimport { ref, toRaw } from \"vue\";\nnew VConsole();\n\nconst allChains = {\n  1: { name: \"Eth\", checked: false },\n  56: { name: \"BNB\", checked: false },\n  137: { name: \"Polygon\", checked: false },\n  122: { name: \"Fuse\", checked: false },\n  \"ton:-239\":{name: \"TON\",checked: false},\n  \"btc:mainnet\": { name: \"BTC\", checked: false },\n  \"sui:mainnet\": { name: \"Sui\", checked: false },\n  \"aptos:mainnet\": { name: \"Aptos\", checked: false },\n  \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\": {\n    name: \"Solana\",\n    checked: false,\n  },\n  \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\": {\n    name: \"Sol testnet\",\n    checked: false,\n  },\n  \"svm:70000062\": {\n    name: \"Sonic testnet\",\n    checked: false,\n  },\n  \"movement:testnet\": { name: \"Movement\", checked: false },\n  \"fractal:mainnet\": { name: \"Fractal\", checked: false },\n  \"cosmos:osmosis-1\": {name: \"Osmos\", checked: false},\n  \"cosmos:cosmoshub-4\": {name: \"Cosmos\", checked: false},\n  \"cosmos:pacific-1\": {name: \"SEI\", checked: false},\n  \"cosmos:abvdefg\": {name: \"cosmos:abvdefg\", checked: false},\n  \"tron:mainnet\": {name: \"tron\", checked: false},\n  997865: { name: \"Non Exist chain\", checked: false },\n  2020: { name: \"Ronin\", checked: false },\n  1666600000: { name: \"Harmony\", checked: false },\n  \"starknet:mainnet\": { name: \"starknet\", checked: false }\n};\n\nconst chainsThatCanAddRedirectParam = [\n  \"eip\"\n]\n\nvar optionChains = new Set([]);\nvar selectedModals = [\"before\", \"success\", \"error\"];\nvar selectedReturnStrategy = \"none\";\nvar selectedDeepLink = \"tg://resolve\";\nvar selectedLanguage = \"en_US\";\nvar selectedTheme = THEME.LIGHT;\n\n// import QrcodeVue from 'qrcode.vue'\nexport default {\n  name: \"App\",\n  components: {\n    TronTransactionPanel,\n    QrcodeVue,\n    BTCPanel,\n    FractalPanel,\n    SuiPanel,\n    StarknetPanel\n  },\n\n  setup() {\n    const sendBtnDisabled = ref(false)\n\n    return {\n      sendBtnDisabled\n    }\n  },\n  data: () => {\n    return {\n      activeTab: \"eip155:1\",\n      testTopic: \"\",\n      testPublicKey: \"\",\n      testProofPayload: \"\",\n      tonProofValue:\"\",\n      pendingDeepLink: \"-\",\n      logList: [],\n      connectReady: false,\n      connectStatusStr: \"Connect\",\n      syncAllAddressStr: \"syncAllAddress\",\n      connectInitStr: \"init test\",\n      disconnectStatusStr: \"Disconnect\",\n      localPubKey: \"\",\n      localSecKey: \"\",\n      testTransaction: \"\",\n      selectedChain: \"eip155:1\",\n      testTransactionStr: \"Send\",\n      walletAddress: \"\",\n      testboc: \"\",\n      ProofPayloadVerify: \"\",\n      showModal: false,\n      showVerifyRow: false,\n      qrValue: \"https://www.okx.com/download\",\n      currentStatus: \"\",\n      areChainsInit: false,\n      availableChains: allChains,\n      isOptionalChecked: (chainId) => {\n        return optionChains.has(chainId);\n      },\n      withUI: localStorage.getItem(\"autoRefresh\") != \"false\",\n      universalToTG: localStorage.getItem(\"universalToTG\") != \"false\",\n      modals: selectedModals,\n      returnStrategies: [\"none\", \"back\", \"deeplink\"],\n      returnStrategy: selectedReturnStrategy,\n      deeplink: selectedDeepLink,\n      locales: [\n        \"en_US\",\n        \"ru_RU\",\n        \"zh_CN\",\n        \"zh\",\n        \"ar_AE\",\n        \"cs_CZ\",\n        \"de_DE\",\n        \"es_ES\",\n        \"es_LAT\",\n        \"fr_FR\",\n        \"id_ID\",\n        \"it_IT\",\n        \"nl_NL\",\n        \"pl_PL\",\n        \"pt_BR\",\n        \"pt_PT\",\n        \"ro_RO\",\n        \"tr_TR\",\n        \"uk_UA\",\n        \"vi_VN\",\n        \"zh_TW\"\n      ],\n      selectedMethod:[],\n      selectedMethodData:[],\n      connectMethods:[\n        \"wallet_addEthereumChain(ETH)\",\n        \"personal_sign(ETH)\",\n        \"solana_signMessage(Sol mainnet)\",\n        \"sui_signMessage(Sui mainnet)\",\n        \"sui_signPersonalMessage(Sui mainnet)\",\n        \"btc_signMessage(BTC)\",\n        \"aptos_signMessage(aptos mainnet)\",\n        \"cosmos_signArbitrary(cosmoshub)\",\n        \"test_noSupport_eth(ETH)\",\n        \"tron_signMessage\",\n        \"tron_signMessageV2\",\n        \"starknet_signMessage\",\n        \"sync_all_addresses\"\n      ],\n\n      language: selectedLanguage,\n      theme: selectedTheme,\n      THEME: THEME,\n      redirect: selectedReturnStrategy,\n      redirectDeeplink: selectedDeepLink,\n      handleWithUI: (isChecked) => {\n        localStorage.setItem(\"autoRefresh\", `${isChecked}`);\n        location.reload();\n      },\n      handleUniversalToTG: (isChecked) => {\n        localStorage.setItem(\"universalToTG\", `${isChecked}`);\n      },\n      handleOptionChange: (chainId) => {\n        if (optionChains.has(chainId)) {\n          optionChains.delete(chainId);\n        } else {\n          optionChains.add(chainId);\n        }\n      },\n      starknetPanelTypedData: ''\n    };\n  },\n  computed: {\n    getWalletAddress: function () {\n      return this.walletAddress;\n    },\n  },\n  methods: {\n    isChecked(chainId) {\n      return this.selectedChains.has(chainId);\n    },\n\n    initChains(newChains) {\n      if (newChains.length > 0) {\n        const updatedChains = Object.assign({}, this.availableChains);\n        for (const chainId of newChains) {\n          if (updatedChains[chainId]){\n            updatedChains[chainId].checked = !updatedChains[chainId].checked;\n          }\n        }\n        this.availableChains = updatedChains;\n      }\n\n      this.areChainsInit = true;\n    },\n\n    async clickActiveTab(tab) {\n      const tabName = tab.props ? tab.props.name : tab.name;\n      this.selectedChain = tabName;\n      console.log(`已切换到链 :`, tabName);\n\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (tabName == \"starknet:mainnet\") {\n        this.sendBtnDisabled = true\n      }else {\n        this.sendBtnDisabled = false\n      }\n\n      window.provider.setDefaultChain(this.selectedChain);\n    },\n\n    async initBtnClicked() {\n      var initCall;\n      if (!this.withUI) {\n        initCall = OKXUniversalProvider.init({\n          dappMetaData: {\n            name: \"univer test dapp\",\n            icon: \"https://avatars.githubusercontent.com/u/37784886\",\n          },\n        });\n      } else {\n        initCall = OKXUniversalConnectUI.init({\n          dappMetaData: {\n            icon: \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\",\n            name: \"OKX WalletConnect UI Demo\",\n          },\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: \"all\",\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme\n          },\n        });\n      }\n\n      initCall.then((provider) => {\n        window.provider = provider;\n        window.tonProvider = new OKXTonProvider(window.provider);\n        window.tonProvider.onStatusChange((walletInfo) => {\n              console.log('TONConnection onStatusChange:', JSON.stringify(walletInfo));\n            }, (err) => {\n              console.log('TONConnection onStatusChange error:', err);\n            }\n        )\n\n        if (window.provider instanceof OKXUniversalConnectUI) {\n          window.provider.onModalStateChange((state)=>{\n            console.log(`onModalStateChange   ${JSON.stringify(state)}`)\n          })\n        }\n\n        console.log(\"init finished:\", provider);\n        console.log(\"init finished session:\", JSON.stringify(provider.session));\n\n        if (provider.session?.namespaces) {\n          const newChains = [];\n          console.log(\"namespaces\", provider.session.namespaces);\n          Object.entries(provider.session.namespaces).forEach(([key, value]) => {\n            if (key === \"eip155\") {\n              value.chains.forEach((chain) => {\n                newChains.push(parseInt(chain.substring(7)));\n              });\n            }\n            else {\n              value.chains.forEach((chain) => {\n                newChains.push(chain);\n              });\n            }\n          });\n\n          console.log(\"existing chains:\", newChains);\n          this.initChains(newChains);\n        } else {\n          this.initChains([]);\n        }\n\n        provider.on(\"display_uri\", (uri) => {\n          if (!useShortLink()){\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>display_uri  ==> \", uri);\n        });\n\n        provider.on(\"connect_signResponse\", (items) => {\n          console.log(\"通知>>>connect_signResponse  ==> \", JSON.stringify(items));\n          this.verifyMessage(items)\n        })\n\n        provider.on(\"short_display_uri\", (uri) => {\n          if (useShortLink()){\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>short_display_uri  ==> \", uri);\n        });\n\n\n        provider.on(\"session_connecting\", () => {\n          if (useShortLink()){\n            alert(\"session_connecting\")\n          }\n          console.log(\"通知>>>session_connecting  ==> \");\n        });\n\n        provider.on(\"connect\", (session) => {\n          console.log(\"通知>>>get connect session\", session);\n        });\n        provider.on(\"reconnect\", (session) => {\n          console.log(\"通知>>>get reconnect session\", session);\n          this.walletAddress = \"connected\";\n        });\n        provider.on(\"disconnect\", ({ topic }) => {\n          console.log(`通知>>>get disconnect  ${topic}`);\n          this.walletAddress = \"disconnecteddddd\";\n        });\n        provider.on(\"session_delete\", ({ topic }) => {\n          console.log(`通知>>>get session_delete  ${topic}`);\n        });\n        provider.on(\"session_update\", (session) => {\n          console.log(`通知>>>get session_update `, JSON.stringify(session));\n        });\n      });\n    },\n\n    async connectBtnClicked() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        this.testTonSdk();\n      } else {\n        console.log(`connectBtnClicked provider not finish init`);\n      }\n    },\n\n    async syncAllAddressClick() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        if (window.provider instanceof OKXUniversalProvider){\n          if (window.provider.connected()){\n            try {\n              let message = await window.provider.syncAllAddresses()\n              if (typeof message == \"string\") {\n                this.testboc = message\n              } else {\n                this.testboc = JSON.stringify(message)\n              }\n            }catch (e) {\n              this.testboc = JSON.stringify(e)\n            }\n          }else{\n            this.testboc = \"not connected\"\n          }\n        }\n\n      } else {\n        console.log(`syncAllAddress provider not finish init`);\n      }\n    },\n\n    async disconnectAction() {\n      try {\n        console.log(\"get disconnect wallet btn clicked\");\n        // await TON.disconnect();\n        var provider = window.provider;\n        await provider.disconnect();\n        this.walletAddress = \"disconnected\";\n      } catch (error) {\n        console.log(\"Disconnect  error ==>> \", error.message);\n        this.currentStatus = error.message;\n      }\n    },\n\n    async eth_requestAccounts() {\n      var data = { method: \"eth_requestAccounts\" };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_chainId() {\n      var data = { method: \"eth_chainId\" };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_switchEthereumChain() {\n      var data = { method: \"wallet_switchEthereumChain\" };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_addEthereumChain() {\n      var data = {\n        method: \"wallet_addEthereumChain\",\n        params: {\n          blockExplorerUrls: [\"https://explorer.fuse.io\"],\n          chainId: \"0x7a\",\n          chainName: \"Fuse\",\n          nativeCurrency: { name: \"Fuse\", symbol: \"FUSE\", decimals: 18 },\n          rpcUrls: [\"https://rpc.fuse.io\"],\n        },\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n    async personal_sign() {\n      if (this.selectedChain === \"eip155:1\") {\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0x1ca023f10e157d148deed210f8bee193657a1eaa7f187909e20a9dc3b071dbc364c41fde37960c05093359f410a061ec8a7dca8c0c39fc7c1e24de8a3329775d1b\n\n        var accounts = await window.provider.request(\n          { method: \"eth_requestAccounts\" },\n          \"eip155:1\"\n        );\n        var address = accounts[0];\n        console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n        var dataETH = {\n          method: \"personal_sign\",\n          params: [\n            \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n            address,\n          ],\n        };\n\n        this.testTransaction = JSON.stringify(dataETH);\n      } else if (\n        this.selectedChain === \"eip155:137\" ||\n        this.selectedChain === \"eip155:122\"\n      ) {\n        // method\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0xebda9cfa2af43999058dffa0107031d1ef7fc0252dca85dcbd22ea097af922ca39b64d509ef61ce42b7641c5840b8a80337ffd1411b13e87e2260a3f1b6c151c1b\n\n        var dataPolygon = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n        this.testTransaction = JSON.stringify(dataPolygon);\n      } else if (this.selectedChain === \"eip155:56\") {\n        var data = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n\n        this.testTransaction = JSON.stringify(data);\n      }\n    },\n\n    async eth_sendTransaction_swap() {\n      var data = {\n        method: \"eth_sendTransaction\",\n        chainId: \"eip155:122\",\n        params: {\n          value: \"0x38d7ea4c68000\",\n          gas: \"0x2665f\",\n          to: \"0xf2614A233c7C3e7f08b1F887Ba133a13f1eb2c55\",\n          from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n          data: \"0x2646478b000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00000000000000000000000000000000000000000000000000038d7ea4c68000000000000000000000000000620fd5fa44be6af63715ef4e65ddfa0387ad13f5000000000000000000000000000000000000000000000000000000000000001b000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000700301ffff0201602352A9Eb5234466Eac23E59e7B99bCaE79C39c0BE9e53fd7EDaC9F859882AfdDa116645287C629040BE9e53fd7EDaC9F859882AfdDa116645287C62900602352A9Eb5234466Eac23E59e7B99bCaE79C39c01f2F3e73be57031114dd1f4E75c1DD87658be7F0E000bb800000000000000000000000000000000\",\n        },\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_signTypedData_v4() {\n      // method\n      // eth_signTypedData\n      // address\n      // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n      // valid\n      // true\n      // result\n      // 0xa8bb3c6b33a119d2d567c7632195c21988df778006082742125a591f5c633f716107883a37f7de6531a6312a5f69022135bf46fe5ab77905b62c82b3395f985e1b\n      //\n\n      // var data = {\n      //   \"method\": \"eth_signTypedData_v4\",\n      //   \"params\": {\n      //     \"typedDataJson\":\"{\\\"types\\\":{\\\"EIP712Domain\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"version\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"chainId\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"name\\\":\\\"verifyingContract\\\",\\\"type\\\":\\\"address\\\"}],\\\"Person\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"wallet\\\",\\\"type\\\":\\\"address\\\"}],\\\"Mail\\\":[{\\\"name\\\":\\\"from\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"to\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"contents\\\",\\\"type\\\":\\\"string\\\"}]},\\\"primaryType\\\":\\\"Mail\\\",\\\"domain\\\":{\\\"name\\\":\\\"Ether Mail\\\",\\\"version\\\":\\\"1\\\",\\\"chainId\\\":1,\\\"verifyingContract\\\":\\\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\\\"},\\\"message\\\":{\\\"from\\\":{\\\"name\\\":\\\"Cow\\\",\\\"wallet\\\":\\\"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\\\"},\\\"to\\\":{\\\"name\\\":\\\"Bob\\\",\\\"wallet\\\":\\\"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\\\"},\\\"contents\\\":\\\"Hello, Bob!\\\"}}\"\n      // }}\n\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        this.selectedChain\n      );\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n      var data = {\n        method: \"eth_signTypedData_v4\",\n        params: [\n          address,\n          {\n            types: {\n              EIP712Domain: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"version\",\n                  type: \"string\",\n                },\n                {\n                  name: \"chainId\",\n                  type: \"uint256\",\n                },\n                {\n                  name: \"verifyingContract\",\n                  type: \"address\",\n                },\n              ],\n              Person: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"wallet\",\n                  type: \"address\",\n                },\n              ],\n              Mail: [\n                {\n                  name: \"from\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"to\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"contents\",\n                  type: \"string\",\n                },\n              ],\n            },\n            primaryType: \"Mail\",\n            domain: {\n              name: \"Ether Mail\",\n              version: \"1\",\n              chainId: 1,\n              verifyingContract: \"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\",\n            },\n            message: {\n              from: {\n                name: \"Cow\",\n                wallet: \"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\",\n              },\n              to: {\n                name: \"Bob\",\n                wallet: \"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\",\n              },\n              contents: \"Hello, Bob!\",\n            },\n          },\n        ],\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_sendTransaction_transfer() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            chainId: \"0x1\",\n            to: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            value: \"0x5af3107a4000\",\n            maxPriorityFeePerGas: \"0x3b9aca00\",\n            gas: \"0x5e56\",\n            maxFeePerGas: \"0x2643b9db8\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gasPrice: \"0x17003f6530\",\n            nonce: \"0x0d30\",\n            data: \"0x\",\n            value: \"0x00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasLimit: \"0x5208\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x5e56\",\n            value: \"0x5af3107a4000\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasPrice: \"0x3b9aca00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            chainId: \"0x38\",\n          },\n        };\n      }else if(this.selectedChain === \"eip155:122\"){\n         data =   {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            value: \"0x0\",\n            chainId: \"0x7a\",\n          }\n        }\n      }\n\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        this.selectedChain\n      );\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"to\"] = address;\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_approve() {\n      var data = {};\n\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000000000000022d473030f116ddee9f6b43ac78ba3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x582d872a1b094fc48f5de31d3b73f2d9be47def1\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000f6f8096ac575b0\",\n            to: \"0x0b3F868E0BE5597D5DB7fEB59E1CADBb0fdDa50a\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            value: \"0x0\",\n            gas: \"0xe117\",\n            gasPrice: \"0xb2d05e00\",\n            data: \"0x095ea7b300000000000000000000000031c2f6fcff4f8759b3bd5bf0e1084a055615c768ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x5CA42204cDaa70d5c773946e69dE942b85CA6706\",\n          },\n        };\n      }else if (this.selectedChain === 'eip155:122'){\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000000000000013b3\",\n            to: \"0x620fd5fa44BE6af63715Ef4E65DDFA0387aD13F5\",\n          },\n        };\n      }\n\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        this.selectedChain\n      );\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_mint() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x4cacb\",\n            data: \"0xa64dfa75000000000000000000000000ed688002f3797599db8b4feacfe8b1dda0df1c8d000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cecb15396825a895ff8da8fc2d2c77a234dccee00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f6261667962656968643737366b6177706e71336f6f6a6635693274787a76617737737164656b34616a776472637472703261366f626b70723773792f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x30795\",\n            data: \"0xa64dfa75000000000000000000000000341b3687f0309778f08f29336b2c4b9c38b9f110000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f62616679626569686a6279676b68747a71376b68377434336266686e676e793236337668766f6578716a6d6e377161716166366e717a64743777712f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      }\n\n      let str = JSON.stringify(data);\n      console.log(\"-----长度--->\", str.length);\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n          this.selectedChain\n      );\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_testRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n        `eip155:56`,\n        `https://eth-mainnet.g.alchemy.com/v2/NxUfYJUr-TQtEpLmSXhhD5pXn70GwsyV`\n      );\n      var data = {\n        method: \"eth_getBalance\",\n        params: [\"0x8D97689C9818892B700e27F316cc3E41e17fBeb9\", \"latest\"],\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_watchAsset() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xe0f63a424a4439cbe457d80e4f4b51ad25b2c56c\",\n              symbol: \"SPX6900\",\n              image:\n                \"https://assets.coingecko.com/coins/images/31401/standard/sticker_%281%29.jpg?1702371083\",\n              decimals: 8,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xeB51D9A39AD5EEF215dC0Bf39a8821ff804A0F01\",\n              symbol: \"LGNS\",\n              image: \"https://polygonscan.com/token/images/originlgns_32.png\",\n              decimals: 9,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0x031b41e504677879370e9dbcf937283a8691fa7f\",\n              symbol: \"FET\",\n              image: \"https://bscscan.com/token/images/fetch_32.png\",\n              decimals: 18,\n            },\n          },\n        };\n      }\n\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async ton_sendTransaction() {\n      var data  = {\n        \"messages\":[{\"address\":\"EQARULUYsmJq1RiZ-YiH-IJLcAZUVkVff-KBPwEmmaQGH6aC\",\"amount\":\"205000000\",\"payload\":\"te6cckEBAgEAhwABbQ+KfqUAAADNgG7tIEATEtAIAO87mQKicbKgHIk4pSPP4k5xhHqutqYgAB7USnesDnCcECwbgQMBAJUlk4VhgBD3JEg1TUr75iTijBghOKm/sxNDXUBl7CD6WMut0Q85x4RafwA/Es89DBXoTxuqxVFxyBbzt9Rav2HBUKl7hmkvLuKHLBCW57aK\"}],\n        \"validUntil\":1792481054,\n        \"network\":'-239'}\n      this.testTransaction = JSON.stringify(data)\n    },\n    ton_getAccount() {\n      this.testTransaction = \"这里是同步获取 不再需要点击 <<发送交易>>\"\n      let result =   window.tonProvider.account()\n      if (result) {\n        this.testboc = JSON.stringify(result);\n      } else {\n        this.testboc = 'null'\n      }\n    },\n\n    async tonUniversalLog() {\n      console.log(\"ton 信息: tonProvider  connected:\",window.tonProvider.connected())\n      console.log(\"ton 信息: tonProvider  account:\",JSON.stringify(window.tonProvider.account()))\n      console.log(\"ton 信息: tonProvider  wallet:\",JSON.stringify(window.tonProvider.wallet()))\n    },\n\n    async sendTransactionAlert() {\n      //\n      const response = await fetch(`https://apitest.fireverse.ai/oauth/okx/getNonce?publicAddress=0x0cecb15396825a895ff8da8fc2d2c77a234dccee`);\n      const data = await response.json();\n      console.log(\"请求数据----\",JSON.stringify(data))\n      await this.personal_sign()\n      if (confirm(\"Are you want to sign message?\")) {\n        this.sendTransaction();\n      }\n\n      // window.open(\"https://www.okx.com/download?deeplink=okx%3A%2F%2Fweb3%2Fwallet%2Fconnect\",'_self')\n    },\n\n    async sendTransaction() {\n      if (this.selectedChain.startsWith(\"aptos\")\n          || this.selectedChain.startsWith(\"movement\")\n          || this.selectedChain.startsWith(\"solana\")\n          || this.selectedChain.startsWith(\"sonic\")\n          || this.selectedChain.startsWith(\"cosmos\")) {\n        return\n      }\n      console.log(\"sendTransaction\", window.provider);\n      console.log(\"sendTransaction内容11------\", this.testTransaction);\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (this.testTransaction && window.provider) {\n        // eslint-disable-next-line no-undef\n        const sendData = JSON.parse(this.testTransaction);\n        try {\n          console.log(\"sendTransaction-----22method>>\", sendData.method);\n\n          let chainId = \"eip155:1\";\n          if (this.selectedChain) {\n            chainId = this.selectedChain;\n            console.log(\n              \"sendTransaction-----this.selectedChain>>\",\n              this.selectedChain\n            );\n          }\n          console.log(\"windowOpen[click_1]: \", Date.now());\n          if (chainId == \"sui:mainnet\") {\n            const adapter = new SuiAdapter(window.provider);\n            var suiResult = \"invalid result\";\n            if (this.currentSuiMethod == 'sui_getAccount') {\n              let result = adapter.getAccount()\n              if (typeof result == \"string\") {\n                this.testboc = result\n              } else {\n                this.testboc = JSON.stringify(result)\n              }\n            }\n            if (this.currentSuiMethod == \"sui_signTransaction\") {\n              suiResult = await adapter.signTransaction(\n                this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signAndExecuteTransaction\") {\n              suiResult = await adapter.signAndExecuteTransaction(\n                this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signMessage\") {\n              console.log(\"signMessage----\", this.currentSuiTransaction);\n              suiResult = await adapter.signMessage(this.currentSuiTransaction);\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_signPersonalMessage\") {\n              console.log(\n                \"signPersonalMessage----\",\n                this.currentSuiTransaction\n              );\n              suiResult = await adapter.signPersonalMessage(\n                this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_testRpc\") {\n              console.log(\"test rpc----\", this.currentSuiTransaction);\n              console.log(\n                `请求数据发送 rpc ----->> ${JSON.stringify(sendData)}`\n              );\n              const res = await window.provider.request(sendData, chainId);\n              console.log(`请求数据回调 rpc ----->> ${JSON.stringify(result)}`);\n              if (typeof res == \"string\") {\n                this.testboc = res;\n              } else {\n                this.testboc = JSON.stringify(res);\n              }\n            }\n            console.log(\"windowOpen[click_2]: \", Date.now());\n            return;\n          }else if(chainId === \"ton:-239\"){\n            console.log(\n                `请求数据发送 sendTransaction ---ton-->> ${JSON.stringify(sendData)}`\n            );\n            let result =  await window.tonProvider.sendTransaction(sendData)\n            console.log(\n                `请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`\n            );\n            if (typeof result == \"string\") {\n              this.testboc = result;\n            } else {\n              this.testboc = JSON.stringify(result);\n            }\n            return\n          }\n\n          if (chainId == 'btc:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var btcResult = 'invalid result'\n\n            if (this.currentBtcMethod == 'btc_signMessage') {\n              btcResult = await btcAdapter.signMessage(chainId, this.currentBtcTransaction[\"signStr\"])\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_send') {\n              btcResult = await btcAdapter.send(chainId, this.currentBtcTransaction)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signPsbt') {\n              btcResult = await btcAdapter.signPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n\n              this.hexToBase64(btcResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentBtcMethod == 'btc_signPsbts') {\n              btcResult = await btcAdapter.signPsbts(chainId, this.currentBtcTransaction.psbtHexs, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_sendInscription') {\n              btcResult = await btcAdapter.sendInscription(chainId, this.currentBtcTransaction.address, this.currentBtcTransaction.inscriptionId, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signAndPushPsbt') {\n              btcResult = await btcAdapter.signAndPushPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            }else if (this.currentBtcMethod == 'btc_sendBitcoin') {\n              btcResult = await btcAdapter.sendBitcoin(chainId, this.currentBtcTransaction.toAddress, this.currentBtcTransaction.satoshis, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            }else if (this.currentBtcMethod == 'btc_getAccount'){\n              btcResult = btcAdapter.getAccount(chainId)\n              this.testboc = JSON.stringify(btcResult)\n            }\n\n            return\n          }\n\n          if (chainId == 'fractal:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var fractalResult = 'invalid result'\n\n            if (this.currentFractalMethod == 'fractal_signMessage') {\n              fractalResult = await btcAdapter.signMessage(chainId, this.currentFractalTransaction['signStr'])\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_send') {\n              fractalResult = await btcAdapter.send(chainId, this.currentFractalTransaction)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signPsbt') {\n              fractalResult = await btcAdapter.signPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.hexToBase64(fractalResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentFractalMethod == 'fractal_signPsbts') {\n              fractalResult = await btcAdapter.signPsbts(chainId, this.currentFractalTransaction.psbtHexs, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_sendInscription') {\n              fractalResult = await btcAdapter.sendInscription(chainId, this.currentFractalTransaction.address, this.currentFractalTransaction.inscriptionId, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signAndPushPsbt') {\n              fractalResult = await btcAdapter.signAndPushPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            }else if (this.currentFractalMethod == 'fractal_sendBitcoin') {\n              fractalResult = await btcAdapter.sendBitcoin(chainId, this.currentFractalTransaction.toAddress, this.currentFractalTransaction.satoshis, this.currentFractalTransaction.options)\n\n              this.testboc = JSON.stringify(fractalResult)\n            }else if (this.currentFractalMethod == 'fractal_getAccount'){\n              fractalResult = btcAdapter.getAccount(chainId)\n              this.testboc = JSON.stringify(fractalResult)\n            }\n\n            return\n          }\n\n          console.log(`请求数据发送 sendTransaction ----->> ${JSON.stringify(sendData)}`)\n          var result = await window.provider.request(sendData, chainId)\n          console.log(`请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`)\n\n          console.log(\"windowOpen[click_3]: \", Date.now());\n          if (typeof result == \"string\") {\n            this.testboc = result;\n          } else {\n            this.testboc = JSON.stringify(result);\n          }\n          console.log(\"方法数据回调 --this.testboc--\", this.testboc);\n        } catch (error) {\n          console.error(\"方法数据回调失败 --Error--\", error.message);\n\n          if (error.code === OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n            this.testboc = error.message;\n          } else {\n            this.testboc = \"wrong signature！\" + error.message;\n          }\n        }\n      } else {\n        alert(\"Please input transaction data\");\n      }\n    },\n\n    hexToBase64(hexStr) {\n      var bytes = [];\n      for (var i = 0; i < hexStr.length; i += 2) {\n        bytes.push(parseInt(hexStr.substr(i, 2), 16));\n      }\n      const buffer = new Uint8Array(bytes)\n      const blob = new Blob([buffer]);\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = function (e) {\n          var base64Data = e.target.result.split(\",\")[1]\n          resolve(base64Data);\n        };\n        reader.onerror = function (e) {\n          reject(e);\n        };\n        reader.readAsDataURL(blob);\n      });\n    },\n    testBase64UrlSafe(){\n      let datatest = {\"protocolVer\":1,\"topic\":\"8a7a4c3be73802d0ae2587123ade7bb79f27433b9aa3ca589a2208a2089eecfd\",\"clientId\":\"5f1bbf9eac92160affa7ef04d0a710817ddb6d8c22ebbd6263e86f059930b404\",\"requestId\":\"1731383250054\",\"dAppInfo\":{\"url\":\"connect.oker.vip\",\"origin\":\"https://connect.oker.vip\",\"name\":\"univer test dapp\",\"icon\":\"https://avatars.githubusercontent.com/u/37784886\"},\"requests\":[{\"name\":\"requestAccounts\",\"requiredNamespaces\":[{\"namespace\":\"aptos\",\"chains\":[\"aptos:637\"]}],\"optionalNamespaces\":[],\"connectRequestMethods\":[{\"chainId\":\"aptos:637\",\"method\":\"aptos_signMessage\",\"params\":{\"data\":{\"address\":true,\"application\":true,\"chainId\":true,\"message\":\"123 中文测试!\",\"nonce\":\"1234\"},\"applicationUrl\":\"https://connect.oker.vip\",\"prefix\":\"APTOS\",\"aptosChainId\":\"1\"}}]}],\"redirect\":\"none\"}\n      let json = JSON.stringify(datatest)\n      const utf8Array = new TextEncoder().encode(json);\n      let binary = '';\n      utf8Array.forEach(byte => {\n        binary += String.fromCharCode(byte);\n      });\n\n      let firstStr =  btoa(binary)\n      console.log(\"字符串编码1>>>>\",firstStr)\n      firstStr = firstStr.replace(/\\+/g, '-')  // 替换 '+'\n      console.log(\"字符串编码2>>>>\",firstStr)\n      firstStr = firstStr.replace(/\\//g, '_')  // 替换 '/'\n      console.log(\"字符串编码3>>>>\",firstStr)\n      firstStr = firstStr.replace(/=+$/, '');  // 移除 '=';\n      console.log(\"字符串编码4>>>>\",firstStr)\n\n      let showUrl =  getUniversalLink(getAppWalletDeepLink(firstStr))\n      console.log(\"字符串编码5>>>>\",showUrl)\n      this.qrValue = showUrl;\n      this.showModal = true;\n    },\n\n\n    async testTonSdk() {\n      // 1. connect\n      //  create sub providers for each namespace/chain\n      let nameSpacesChains = [];\n      let optSpaceChains = [];\n\n      let solanaChains = [\n        \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n        \"svm:70000062\",\n      ];\n      let hasEip155, hasSolana, hasSui, hasBtc, hasAptos, hasTon, hasCosmos, hasTron, hasStarknet = false\n\n      let suiChains = [\n        \"sui:mainnet\",\n      ];\n\n      let btcChains = [\n        \"btc:mainnet\",\n        \"fractal:mainnet\"\n      ];\n\n      const chains = Object.entries(this.availableChains)\n          .filter((chain) => chain[1].checked)\n          .map((chain) => chain[0]);\n      console.log(`chains  ===> ${chains.values()}`)\n      chains.forEach(function (chainId) {\n        console.log(`chains.forEach chainId  ===> ${chainId}`)\n\n        if (solanaChains.includes(chainId)) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"ton\")) {\n          nameSpacesChains.push(chainId)\n          hasTon = true\n          return\n        }\n        if (typeof chainId == 'string' && (chainId.startsWith(\"aptos\") || chainId.startsWith(\"movement\"))) {\n          nameSpacesChains.push(chainId)\n          hasAptos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId)\n          hasSolana = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"cosmos\")) {\n          nameSpacesChains.push(chainId)\n          hasCosmos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"tron\")) {\n          nameSpacesChains.push(chainId)\n          hasTron = true\n          return\n        }\n\n        if (typeof chainId == 'string' && chainId.startsWith(\"starknet\")) {\n          nameSpacesChains.push(chainId)\n          hasStarknet = true\n          return\n        }\n\n        if (suiChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`);\n          nameSpacesChains.push(chainId);\n          hasSui = true;\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`)\n          nameSpacesChains.push(chainId)\n          hasBtc = true\n          return\n        }\n\n        hasEip155 = true\n        nameSpacesChains.push(`eip155:${chainId}`)\n      })\n\n\n      optionChains.forEach(function (chainId) {\n        if (solanaChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n        if (typeof chainId == \"string\" && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (suiChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          optSpaceChains.push(chainId)\n          return\n        }\n\n        optSpaceChains.push(`eip155:${chainId}`)\n      })\n\n      console.log(`namespaceChains  ===> ${JSON.stringify(nameSpacesChains)}`);\n      var connectData = {};\n      if (nameSpacesChains && nameSpacesChains.length > 0) {\n        var requireData = {};\n\n        if (hasEip155) {\n          requireData.eip155 = {\n            chains: nameSpacesChains.filter((item) =>\n              item.startsWith(\"eip155\")\n            ),\n            defaultChain: nameSpacesChains.filter((item) =>\n              item.startsWith(\"eip155\")\n            )[0],\n          };\n        }\n        if (hasSolana) {\n          requireData.solana = {\n            chains: nameSpacesChains.filter(\n              (item) =>\n                item.startsWith(\"solana\") ||\n                item.startsWith(\"sonic\") ||\n                item.startsWith(\"svm\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n              (item) =>\n                item.startsWith(\"solana\") ||\n                item.startsWith(\"sonic\") ||\n                item.startsWith(\"svm\")\n            )[0],\n          };\n        }\n\n        if (hasCosmos) {\n          requireData.cosmos = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            )[0],\n          }\n        }\n        if (hasTron) {\n          requireData.tron = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            )[0],\n          }\n        }\n        if (hasStarknet) {\n          requireData.starknet = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"starknet\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"starknet\")\n            )[0],\n          }\n        }\n        if (hasTon) {\n\n          //\n          let tonParams = {\n            ton_addr:{\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue){\n            tonParams = {\n              ton_addr:{\n                name: 'ton_addr',\n              },\n              ton_proof:{\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          requireData.ton = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"ton\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"ton\"))[0],\n            params:tonParams\n          };\n        }\n\n        if (hasSui) {\n          requireData.sui = {\n            chains: nameSpacesChains.filter((item) => item.startsWith(\"sui\")),\n            defaultChain: nameSpacesChains.filter((item) =>\n              item.startsWith(\"sui\")\n            )[0],\n            rpcMap: {\n              \"sui:mainnet\": \"https://www.okx.com/fullnode/sui/discover/rpc\"\n            }\n          };\n        }\n        if (hasAptos) {\n          requireData.aptos = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\"))[0]\n          }\n        }\n\n        if (hasBtc) {\n          let btcChains = nameSpacesChains.filter(item => item.startsWith(\"btc\") || item.startsWith(\"fractal\"))\n          requireData.btc = {\n            chains: btcChains,\n            defaultChain: btcChains[0]\n          }\n        }\n        console.log(`requireData  ===> ${JSON.stringify(requireData)}`)\n        connectData['namespaces'] = requireData;\n        console.log(JSON.stringify(connectData))\n      }\n\n      if (optSpaceChains && optSpaceChains.length > 0) {\n        const optData = {};\n\n        const eip155Chains = optSpaceChains.filter((item) => item.startsWith(\"eip155\"));\n        if (eip155Chains.length > 0) {\n          optData[\"eip155\"] = {\n            chains: eip155Chains,\n            defaultChain: eip155Chains[0],\n          };\n        }\n\n        const solanaChains = optSpaceChains.filter((item) => item.startsWith(\"solana\"));\n        if (solanaChains.length > 0) {\n          optData[\"solana\"] = {\n            chains: solanaChains,\n            defaultChain: solanaChains[0],\n          };\n        }\n\n        connectData[\"optionalNamespaces\"] = optData;\n      }\n\n      if (nameSpacesChains.length === 0 && optSpaceChains.length === 0) {\n        //未选择链\n        alert(\"Please select a chain from above to continue\");\n        return;\n      }\n      console.log(\"=====>connectData \");\n      console.log(connectData);\n\n      var connectMethod;\n      let signMethods = this.getCurrentSelectedMethodData();\n      if (window.provider instanceof OKXUniversalConnectUI) {\n        if (signMethods && signMethods.length>0){\n          connectMethod = window.provider.openModalAndSign(connectData,JSON.parse(JSON.stringify(signMethods)));\n        }else {\n          connectMethod = window.provider.openModal(connectData);\n        }\n      } else {\n        if (this.universalToTG){\n          connectData.sessionConfig = {\n            useMini:true,\n            openUniversalUrl:true,\n            tmaReturnUrl:'back'\n          }\n        }else{\n          connectData.sessionConfig = {\n            redirect: selectedReturnStrategy\n          }\n        }\n        if (signMethods && signMethods.length>0){\n          connectMethod = window.provider.connectAndSign(connectData,JSON.parse(JSON.stringify(signMethods)));\n        }else {\n          connectMethod = window.provider.connect(connectData);\n        }\n      }\n\n      await connectMethod\n        .then((result) => {\n          // 2. set defaul chain\n          this.walletAddress = \"connected\";\n          if (this.isPC()) {\n            this.showModal = false;\n          }\n          if (result){\n            this.testboc = JSON.stringify(result)\n          }\n\n          if (window.provider.session && window.provider.session.namespaces){\n            let ton = window.provider.session.namespaces[\"ton\"];\n          console.log(\"是否包含ton\",ton)\n            if (ton){\n              this.tonUniversalLog()\n            }\n          }\n        })\n        .catch((error) => {\n          if (error.code == 301) {\n            setTimeout(() => {\n              alert(error.message)\n            }, 0.5);\n          } else if (error.message){\n            alert(error.message)\n          }\n          console.error(\"发生了错误：\", error);\n        });\n    },\n\n    getCurrentSelectedMethodData(){// 连接签名\n      var methodList = [];\n      this.selectedMethod.forEach(method =>{\n        switch (method) {\n          case \"wallet_addEthereumChain(ETH)\":\n            methodList.push({\n              method: \"wallet_addEthereumChain\",\n              chainId:\"eip155:1\",\n              params: {\n                blockExplorerUrls: [\"https://explorer.fuse.io\"],\n                chainId: \"0x7a\",\n                chainName: \"Fuse\",\n                nativeCurrency: { name: \"Fuse\", symbol: \"FUSE\", decimals: 18 },\n                rpcUrls: [\"https://rpc.fuse.io\"],\n              },\n            })\n            break;\n          case \"personal_sign(ETH)\":\n            methodList.push(\n              {\n                method: \"personal_sign\",\n                chainId: \"eip155:1\",\n                params: [\n                  \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n                ],\n              });\n            break;\n          case \"solana_signMessage(Sol mainnet)\":\n            methodList.push(\n              {\n                \"chainId\": \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n                \"method\": \"solana_signMessage\",\n                \"params\": {\n                  \"message\": \"Hello Solana\",\n                }\n              }\n            );\n            break;\n          case \"sui_signMessage(Sui mainnet)\":\n          case \"sui_signPersonalMessage(Sui mainnet)\": {\n            let suiData = [\n              76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n              109, 111, 118, 101,\n            ];\n            let uint8Array = new Uint8Array(suiData);\n            let currentMethod = \"sui_signMessage\";\n            this.currentSuiTransaction = {\n              message:uint8Array\n            }\n\n            if(method.startsWith(\"sui_signPersonalMessage\")){\n              currentMethod = \"sui_signPersonalMessage\";\n            }\n            methodList.push(\n                {\n                  method: currentMethod,\n                  chainId: \"sui:mainnet\",\n                  params: {\n                    message: uint8Array,\n                  }\n                }\n            );\n            break;\n          }\n          case \"btc_signMessage(BTC)\":\n            methodList.push(\n              {\n                method: \"btc_signMessage\",\n                chainId: \"btc:mainnet\",\n                params: {\n                  message: \"Welcome to BTC\"\n                }\n              }\n            )\n            break;\n          case \"aptos_signMessage(aptos mainnet)\":\n            methodList.push(\n              {\n                \"chainId\": \"aptos:mainnet\",\n                \"method\": \"aptos_signMessage\",\n                \"params\": {\n                  address: true,\n                  application: true,\n                  chainId: true,\n                  message: \"Hello Aptos\",\n                  nonce: \"1234\"\n                }\n              }\n            )\n            break;\n          case \"cosmos_signArbitrary(cosmoshub)\":\n            methodList.push(\n                {\n                  \"chainId\": \"cosmos:cosmoshub-4\",\n                  \"method\": \"cosmos_signArbitrary\",\n                  \"params\": {\n                    message: \"test cosmos\"\n                  }\n                }\n            )\n\n            break;\n          case \"test_noSupport_eth(ETH)\":\n            methodList.push(\n                {\n                  chainId: \"eip155:1\",\n                  method: \"test_noSupport_eth\",\n                  params: {\n                    message: \"test hello\",\n                  }\n                }\n            )\n            break;\n          case \"sync_all_addresses\":\n            methodList.push(\n                {\n                  method: \"sync_all_addresses\",\n                });\n            break;\n          case \"tron_signMessage\":\n            methodList.push(\n                {\n                  chainId:\"tron:mainnet\",\n                  method: \"tron_signMessage\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n          case \"tron_signMessageV2\":\n            methodList.push(\n                {\n                  chainId:\"tron:mainnet\",\n                  method: \"tron_signMessageV2\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n\n            //\n          case \"starknet_signMessage\": {\n            const signData = {\n              \"domain\": {\n                \"chainId\": \"0x534e5f4d41494e\",\n                \"name\": \"STRKFarm\",\n                \"version\": \"1\"\n              },\n              \"message\": {\n                \"document\": \"app.strkfarm.xyz/tnc/v1\",\n                \"message\": \"Read and Agree T&C\"\n              },\n              \"primaryType\": \"Tnc\",\n              \"types\": {\n                \"StarkNetDomain\": [\n                  {\n                    \"name\": \"name\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"version\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"chainId\",\n                    \"type\": \"felt\"\n                  }\n                ],\n                \"Tnc\": [\n                  {\n                    \"name\": \"message\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"document\",\n                    \"type\": \"felt\"\n                  }\n                ]\n              }\n            }\n            methodList.push({\n              chainId:\"starknet:mainnet\",\n              method: \"starknet_signMessage\",\n              params: {\n                accountAddress: \"\",\n                typedData: signData\n              }\n            })\n          }\n            break\n          default:\n\n            break;\n        }\n      })\n      this.selectedMethodData = methodList\n      return methodList\n\n    },\n\n    closeModal() {\n      this.showModal = false;\n    },\n\n    isPC() {\n      const userAgentInfo = navigator.userAgent;\n      console.log(\"current device ua is ===>\", userAgentInfo);\n\n      const Agents = [\n        \"Android\",\n        \"iPhone\",\n        \"SymbianOS\",\n        \"Windows Phone\",\n        \"iPad\",\n        \"iPod\",\n      ];\n      let flag = true;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = false;\n          break;\n        }\n      }\n      return flag;\n    },\n    isSafariOrChrome() {\n      const userAgentInfo = navigator.userAgent;\n      const Agents = [\"Safari\", \"Chrome\"];\n      let flag = false;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = true;\n          break;\n        }\n      }\n      return flag;\n    },\n\n    /// solana\n    async sol_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      let data = {\n        method: \"solana_signMessage\",\n        params: {\n          message: \"Hello Solana\",\n          pubkey: \"\",\n        },\n      };\n      this.testTransaction = JSON.stringify(data);\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let message = await provider.signMessage(\n          \"Hello Solana\",\n          this.selectedChain\n      );\n      console.log(\"solana_signMessage Result:\",JSON.stringify(message))\n      const result1 = nacl.sign.detached.verify(\n          new TextEncoder().encode(\"Hello Solana\"),\n          message.signature,\n          new PublicKey(message.publicKey).toBytes()\n      );\n      console.log(result1)\n\n      if (typeof message == \"string\") {\n        this.testboc = result1;\n      } else {\n        this.testboc = result1;\n      }\n    },\n\n    async aptos_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      let data = {\n        address: true,\n        application: true,\n        chainId: true,\n        message: \"Hello Aptos\",\n        nonce: \"1234\"\n      }\n\n      let provider = new OKXAptosProvider(window.provider)\n      let message = await provider.signMessage(data, this.selectedChain)\n      this.testTransaction = JSON.stringify(data)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n          functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n          functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        },\n      });\n\n      // let data = {\n      //   \"arguments\": [\"100000\",[\"0\",\"0\",\"10533\"],[\"10\",\"5\",\"5\"],[\"false\",\"false\",\"true\"]],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x3\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\",\"0x73eb84966be67e4697fc5ae75173ca6c35089e802650f75422ab49a8729704ec::coin::DooDoo\",\"0x53a30a6e5936c0a4c5140daed34de39d17ca7fcae08f947c02e979cef98a3719::coin::LSD\",\"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::CurveV1\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x54cb0bb2c18564b86e34539b9f89cfe1186e39d89fce54e1cd007b8e61673a85::bin_steps::X80\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async sol_signVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(\n        provider.getAccount(\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\").address\n      );\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n         recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signTransaction(\n        transaction,\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAndSendVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n        transaction,\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllVersionedTransactions() {\n      let provider = new OKXSolanaProvider(window.provider);\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n        [transaction],\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signTransaction() {\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n         recentBlockhash: blockhash,\n      }).add(\n        SystemProgram.transfer({\n          fromPubkey: new PublicKey(provider.getAccount().address),\n          toPubkey: new PublicKey(provider.getAccount().address),\n          lamports: 1000,\n        })\n      );\n\n      this.testTransaction = safeJsonStringify(transaction)\n      let result = await provider.signTransaction(\n        transaction,\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllTransactions() {\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n        SystemProgram.transfer({\n          fromPubkey: new PublicKey(provider.getAccount().address),\n          toPubkey: new PublicKey(provider.getAccount().address),\n          lamports: \"100\",\n        })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n        [transaction],\n        this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    getSolConnect() {\n      let rpc = \"https://www.okx.com/fullnode/sol/discover/rpc\"\n      if (this.selectedChain === \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\") {\n        rpc = \"https://www.okx.com//fullnode/sol/discover/rpc\"\n      } else if (this.selectedChain === \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\"){\n        rpc = \"https://www.okx.com/fullnode/soltestnet/discover/rpc\"\n      } else if (this.selectedChain === \"svm:70000062\") {\n        rpc = \"https://www.okx.com/fullnode/sonic/testnet/discover/rpc\"\n      }\n      return rpc\n    },\n\n    async sol_signAndSendTransaction() {\n\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n        SystemProgram.transfer({\n          fromPubkey: new PublicKey(provider.getAccount().address),\n          toPubkey: new PublicKey(provider.getAccount().address),\n          lamports: \"100\",\n        })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n        transaction,\n        this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async cosmos_signArbitrary() {\n      let provider = new OKXCosmosProvider(window.provider)\n      let message = await provider.signArbitrary(this.selectedChain, provider.getAccount(this.selectedChain).address, \"test cosmos\")\n      if (typeof message == \"string\") {\n        this.testboc = message;\n      } else {\n        let isValid =  await this.cosmos_verifySignArbitrary(provider.getAccount(this.selectedChain).address,\"test cosmos\",message.signature, message.pub_key.value)\n        console.log(\"verify\",isValid)\n        this.testboc = \"verify:\" + isValid + JSON.stringify(message);\n      }\n    },\n\n    async cosmos_verifySignArbitrary(signer, data, signature, pubkey) {\n      try {\n        console.log(\"cosmos_verifySignArbitrary signer:\",signer)\n        console.log(\"cosmos_verifySignArbitrary data:\",JSON.stringify(data))\n        console.log(\"cosmos_verifySignArbitrary signature:\",signature)\n        console.log(\"cosmos_verifySignArbitrary pubkey:\",pubkey)\n\n        // 将bech32地址转换为公钥\n        const {prefix: prefixStr} = fromBech32(signer)\n\n        const signatureBuffer = Buffer.from(signature, 'base64');\n\n        const uint8Signature = new Uint8Array(signatureBuffer); // Convert the buffer to an Uint8Array\n\n        const pubKeyValueBuffer = Buffer.from(pubkey, 'base64'); // Decode the base64 encoded value\n\n        const pubKeyUint8Array = new Uint8Array(pubKeyValueBuffer); // Convert the buffer to an Uint8Array\n\n        // 验证签名\n        return await verifyADR36Amino(\n            prefixStr,\n            signer,\n            data,\n            pubKeyUint8Array,\n            uint8Signature\n        )\n      } catch (err) {\n        console.error('Verification failed:', err)\n        return false\n      }\n    },\n\n    async cosmos_signAmino(){\n      let provider = new OKXCosmosProvider(window.provider)\n      // const rpcUrl = 'https://osmosis-rpc.publicnode.com:443';\n      // const client = await StargateClient.connect(rpcUrl);\n      // const height = await client.getHeight();\n      // let address = provider.getAccount(this.selectedChain).address\n      // const sequence = await client.getSequence(address)\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      // let signDoc = makeSignDoc(\n      //     transaction.msgs,\n      //     transaction.fee,\n      //     this.selectedChain.split(\":\")[1],\n      //     transaction.memo,\n      //     transaction.accountNumber,\n      //     transaction.sequence,\n      // )\n      let signDoc = {\n        \"chain_id\": \"osmosis-1\",\n        \"account_number\": \"630104\",\n        \"sequence\": \"480\",\n        \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]},\n        \"msgs\": [{\n          \"type\": \"osmosis/poolmanager/swap-exact-amount-in\",\n          \"value\": {\n            \"sender\": \"osmo1u6lts9ng4etxj0zdaxsada6zgl8dudpgelmuyu\",\n            \"routes\": [{\n              \"pool_id\": \"1096\",\n              \"token_out_denom\": \"ibc/987C17B11ABC2B20019178ACE62929FE9840202CE79498E29FE8E5CB02B7C0A4\"\n            }, {\n              \"pool_id\": \"611\",\n              \"token_out_denom\": \"ibc/27394FB092D2ECCD56123C74F36E4C1F926001CEADA9CA97EA622B25F41E5EB2\"\n            }],\n            \"token_in\": {\"denom\": \"uosmo\", \"amount\": \"100\"},\n            \"token_out_min_amount\": \"8\"\n          }\n        }],\n        \"memo\": \"FE\",\n        \"timeout_height\": \"23603788\",\n        \"signOptions\": {\n          \"useOneClickTrading\": false,\n          \"preferNoSetFee\": true,\n          \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]}\n        }\n      }\n\n\n\n\n\n\n\n      // let signOption = {\n      //   memo: true, // optional\n      //   fee: true, // optional\n      //   gasRate: {\n      //     // optional\n      //     average: \"0.2\",\n      //     low: \"0.02\",\n      //     tiny: \"0.002\",\n      //   },\n      // }\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signAmino(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, signDoc)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    messageToBuffer(message) {\n      var buffer = Buffer.from([]);\n      try {\n        if (typeof message === \"string\") {\n          buffer = Buffer.from(message.replace(\"0x\", \"\"), \"hex\");\n        } else {\n          buffer = Buffer.from(message);\n        }\n      } catch (err) {\n        console.log(`messageToBuffer error: ${err}`);\n      }\n      return buffer;\n    },\n\n\n\n    async cosmos_signDirect() {\n      let provider = new OKXCosmosProvider(window.provider)\n\n      let signDoc = {\n        \"bodyBytes\": this.messageToBuffer(\"0x0ac1010a292f6962632e6170706c69636174696f6e732e7472616e736665722e76312e4d73675472616e736665721293010a087472616e7366657212096368616e6e656c2d301a0d0a05756f736d6f120431303030222b6f736d6f3175366c7473396e67346574786a307a64617873616461367a676c386475647067656c6d7579752a2d636f736d6f733175366c7473396e67346574786a307a64617873616461367a676c386475647067337967766a773207080410ebe3f90a3880b0bcafd18cec8218\"),\n        \"authInfoBytes\": this.messageToBuffer(\"0x0a510a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a2102446e19e94ac0e83ea896d2712507577eb39fbdd2d6ae9f0fc0b9759f1fbaba9012040a02080118e00312140a0e0a05756f736d6f1205323530303010859a11\"),\n        \"chainId\": \"osmosis-1\",\n        \"accountNumber\": \"630104\",\n      }\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signDirect(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, transaction)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    sui_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentSuiTransaction = params\n      this.currentSuiMethod = flag\n    },\n\n    btc_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentBtcTransaction = params\n      this.currentBtcMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n\n    fractal_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentFractalTransaction = params\n      this.currentFractalMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n    tron_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n    tron_generateTransactionParams(params){\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n\n    starknet_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n\n    starknet_generateTransactionParams(params) {\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n\n    handleModalsSelect(modals) {\n      selectedModals = modals;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: modals.length === 3 ? \"all\" : modals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n\n    handleReturnStrategySelect(returnStrategy) {\n      selectedReturnStrategy = returnStrategy === \"deeplink\" ? this.deeplink : returnStrategy;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = selectedReturnStrategy;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: selectedReturnStrategy\n          };\n        }\n      }\n    },\n\n    handleReturnStrategyDeeplink(deeplink) {\n      console.log('handleReturnStrategyDeeplink', deeplink)\n      selectedReturnStrategy = deeplink;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: deeplink,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = deeplink;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: deeplink\n          };\n        }\n      }\n    },\n\n    handleLanguageSelect(language) {\n      selectedLanguage = language;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: language,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n    handleConnectMethodsSelect() {\n      console.log(\"当前的方法 this.selectedMethod>>>>\",this.selectedMethod);\n    },\n\n    eth_verifyMessage(message, signature,ethAddress) {\n      console.log(\"eth_verifyMessage   message>>>\",message)\n      console.log(\"eth_verifyMessage   signature>>>\",signature)\n      console.log(\"eth_verifyMessage   ethAddress>>>\",ethAddress)\n      if (!message || !signature){\n        return \"\"\n      }\n      let originalMessage = message\n      if (message.startsWith(\"0x\")){\n        originalMessage = originalMessage.replace(/^0x/, '');\n        let str = '';\n        for (let i = 0; i < originalMessage.length; i += 2) {\n          const byte = originalMessage.slice(i, i + 2);\n          str += String.fromCharCode(parseInt(byte, 16));\n        }\n        originalMessage = str\n      }\n      console.log(\"eth_verifyMessage   originalMessage>>>\",originalMessage)\n\n      // const messageHash = ethers.utils.hashMessage(originalMessage);\n      const recoveredAddress = ethers.utils.verifyMessage(originalMessage, signature);\n      console.log(\"eth_verifyMessage recoveredAddress:\", recoveredAddress);\n      return recoveredAddress.toLowerCase() === ethAddress.toLowerCase();\n    },\n\n    async verifyMessage(list){ //连接验签\n\n        if (window.provider && window.provider.session && list && list.length>0){\n          let verifyList = {}\n          for (let methodItem of list){\n            if (\"result\" in methodItem && \"method\" in methodItem){\n              let requestItme = this.selectedMethodData.filter(item => item.method === methodItem.method)[0];\n              console.log(\"验证签名 请求>>>:\", JSON.stringify(requestItme));\n              console.log(\"验证签名 结果>>>:\", JSON.stringify(methodItem));\n              if (methodItem.method === \"personal_sign\"){\n                let ethAddress = await window.provider.request({ method: \"eth_requestAccounts\" },methodItem.chainId)\n                ethAddress = ethAddress[0];\n                console.log(\"验证eth 钱包地址>>>:\", ethAddress);\n                let ethMessage = requestItme.params[0]\n                console.log(\"验证eth 签名消息体>>:\", JSON.stringify(ethMessage));\n                verifyList[methodItem.method] = this.eth_verifyMessage(ethMessage,methodItem.result,ethAddress)\n              }else if(methodItem.method === \"solana_signMessage\"){\n                let solanaMessage = methodItem.result\n                if (\"signature\" in solanaMessage && \"publicKey\" in solanaMessage){\n                  const verifySol = nacl.sign.detached.verify(\n                      new TextEncoder().encode(\"Hello Solana\"),\n                      solanaMessage.signature,\n                      new PublicKey(solanaMessage.publicKey).toBytes()\n                  );\n                  verifyList[methodItem.method] = verifySol\n                }else {\n                  verifyList[methodItem.method] = false\n                }\n              }else if(methodItem.method === \"sui_signPersonalMessage\" || methodItem.method === \"sui_signMessage\"){\n                let suiResult =  this.sui_verifySignature(methodItem.result);\n                  verifyList[methodItem.method] = (await suiResult).result\n              }else if(methodItem.method === \"btc_signMessage\"){\n\n                verifyList[methodItem.method] = \"Not verified yet\"\n\n              }else if(methodItem.method === \"aptos_signMessage\"){\n                let aptosMessage = methodItem.result\n                let aptosProvider = new OKXAptosProvider(window.provider)\n                let  aptosPublicKey  = aptosProvider.getAccount(methodItem.chainId)?.publicKey\n\n                let signStr = aptosMessage.signature\n                if (signStr.startsWith(\"0x\")) {\n                  signStr = signStr.slice(2, signStr.length)\n                }\n\n                console.log(\"aptos_signMessage aptosPublicKey And signStr\",aptosPublicKey,signStr)\n                verifyList[methodItem.method] = nacl.sign.detached.verify(\n                    Buffer.from(aptosMessage.fullMessage),\n                    Buffer.from(signStr, 'hex'),\n                    Buffer.from(aptosPublicKey, 'hex'),\n                );\n              }else if(methodItem.method === \"cosmos_signArbitrary\"){\n                let cosmosProvider = new OKXCosmosProvider(window.provider)\n                let cosmosAddress = cosmosProvider.getAccount(methodItem.chainId)?.address\n                let cosmosMessage = methodItem.result\n                let isValid =  await this.cosmos_verifySignArbitrary(cosmosAddress,\"test cosmos\",cosmosMessage.signature, cosmosMessage.pub_key.value)\n                verifyList[methodItem.method] = isValid\n\n              }else if (methodItem.method === \"tron_signMessage\") {\n                let tronMessage = methodItem.result\n                let tronWeb = new TronWeb({\n                  \"fullHost\": 'https://api.trongrid.io',\n                  \"headers\": {},\n                  \"privateKey\": ''\n                })\n                let provider = new OKXTronProvider(window.provider)\n                verifyList[methodItem.method] = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), tronMessage, provider.getAccount(\"tron:mainnet\").address)\n              } else if (methodItem.method === \"tron_signMessageV2\") {\n                let tronMessage = methodItem.result\n                let tronWeb = new TronWeb({\n                  \"fullHost\": 'https://api.trongrid.io',\n                  \"headers\": {},\n                  \"privateKey\": ''\n                })\n                const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", tronMessage);\n                let provider = new OKXTronProvider(window.provider)\n\n                verifyList[methodItem.method] = base58Address === provider.getAccount(\"tron:mainnet\").address\n              }else if (methodItem.method === \"starknet_signMessage\") {\n                let res = methodItem.result\n                let signData = this.starknetPanelTypedData\n\n                const rpcProvider = new StarknetRpcProvider({ nodeUrl: \"https://free-rpc.nethermind.io/mainnet-juno/v0_7\" });\n\n                let provider = new OKXStarknetProvider(window.provider)\n                let address = provider.getAccount(\"starknet:mainnet\").address\n                let pk = \"0x123\"; /// random pk\n                const account = new StarknetAccount(rpcProvider, address, pk)\n\n                let that = this\n                account.verifyMessage(signData, res).then(function (isValid) {\n                  that.testTransaction = `Verifyed result: \\n${isValid}`\n                }).catch(function (error) {\n                  that.testTransaction = `Verifyed failed: \\n${error}`\n                })\n                verifyList[methodItem.method] = \"starknet is verifying signature...\"\n              }\n              else {\n                verifyList[methodItem.method] = \"Not verified yet\"\n\n              }\n            }else if(\"method\" in methodItem && \"error\" in methodItem) {\n              verifyList[methodItem.method] = methodItem.error\n            }\n\n          }\n\n          console.log(\"验证签名 最后的结果>>>:\", JSON.stringify(verifyList));\n          this.testTransaction = \"签名验证结果如下: \\n\" + JSON.stringify(verifyList)\n        }else {\n          console.log(\"验证签名 window.provider.session.connectMethodsReply 为空:\");\n\n        }\n\n    },\n\n    handleThemeSelect(theme) {\n      selectedTheme = theme;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: theme,\n          },\n        };\n      }\n    },\n\n    async sui_verifySignature(signatureResult) {\n      let resultObj = signatureResult\n      let result = false\n      let msg = ''\n      try {\n        /// 获取当前account\n        const adapter = new SuiAdapter(window.provider);\n        let account = adapter.getAccount()\n        console.log(`Account中获取的address：${account.address}`)\n\n        /// 验证签名\n        let pubKey = await verifyPersonalMessageSignature(this.currentSuiTransaction.message, resultObj.signature)\n        let address = pubKey.toSuiAddress()\n        console.log(`验签结果计算得到address：${address}`)\n\n        /// 对比pubKey\n        console.log(`account pubkey: ${account.publicKey}`,)\n        console.log(`result pubkey: ${pubKey.toBase64()}`)\n        result = (account.address === address) && (account.publicKey === pubKey.toBase64())\n\n        msg = `address verify: ${account.address === address}\\npublicKey verify: ${account.publicKey === pubKey.toBase64()}`\n        console.log(\"signature verify success: \", pubKey)\n      } catch (e) {\n        console.log(\"signature verify failed: \", e)\n      }\n      return {\n        result,\n        msg\n      }\n    },\n\n\n    handleRedirectSelect(input) {\n      this.redirect = input;\n    },\n\n    handleRedirectDeeplink(input) {\n      this.redirectDeeplink = input;\n    },\n\n    addRedirectParam() {\n      if (this.testTransaction) {\n        const newTransaction = JSON.parse(this.testTransaction);\n        newTransaction.redirect = this.redirect === 'deeplink' ? this.redirectDeeplink : this.redirect;\n        this.testTransaction = JSON.stringify(newTransaction);\n      }\n    },\n\n    canChainAddRedirectParam() {\n      return chainsThatCanAddRedirectParam.some((c) => this.selectedChain.startsWith(c));\n    }\n  },\n  created() {\n    // for (const eventName of Object.values(OKX_TON_CONNECTION_AND_TRANSACTION_EVENT)) {\n    //   console.log(eventName);\n    //   window.addEventListener(eventName, (event) => {\n    //     console.log(eventName,event.detail)\n    //     this.currentStatus = eventName\n    //   });\n    // }\n  },\n\n  mounted() {\n\n    var scriptTag = document.createElement(\"script\");\n    scriptTag.src = \"https://telegram.org/js/telegram-web-app.js\";\n    scriptTag.id = \"tgsdk\";\n    document.getElementsByTagName('head')[0].appendChild(scriptTag);\n\n    this.connectReady = true;\n    document.title = \"OKX Connect\";\n    this.initBtnClicked()\n\n    console.log(\"挂载成功:\")\n    if (this.$refs.starknetPanelRef) {\n      this.starknetPanelTypedData = toRaw(this.$refs.starknetPanelRef.signData)\n      console.log(\"111: \", this.starknetPanelTypedData)\n    }else {\n      console.log(\"222\")\n    }\n  },\n};\n</script>\n","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_getAccount()\">getAccount(BTC)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signMessage()\">signMessage(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_send()\">send(BTC)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendBitcoin()\">sendBitcoin(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signPsbt_up()\">signPsbt(上架NFT)</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"btc_signAndPushPsbt_up()\">signAndPushPsbt(上架NFT)</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在OKX App选择要上架的Btc NFT，点击【上架】\n        </li>\n        <li>\n          2. 弹出签名面板，点开高级选项，查看\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出上架流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendInscription()\">sendInscription(BTC)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Btc NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount\n    }\n  },\n  methods: {\n\n    btc_getAccount() {\n      this.$emit('generateTransactionParams', {}, \"btc_getAccount\")\n    },\n\n    btc_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to BTC\"\n      };\n      this.$emit('generateTransactionParams', params, \"btc_signMessage\")\n    },\n\n    btc_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"btc_send\")\n    },\n\n    btc_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"btc_sendBitcoin\")\n    },\n\n    btc_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"btc_signPsbt\")\n    },\n\n    btc_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"btc_signAndPushPsbt\")\n    },\n\n    btc_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"btc_sendInscription\")\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./BtcTransactionPanel.vue?vue&type=template&id=376d03bc&scoped=true\"\nimport script from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./BtcTransactionPanel.vue?vue&type=style&index=0&id=376d03bc&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-376d03bc\"]])\n\nexport default __exports__","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_getAccount()\">getAccount(Fractal)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signMessage()\">signMessage(Fractal)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_send()\">send(Fractal)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_sendBitcoin()\">sendBitcoin(Fractal)</el-button>\n\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signPsbt_up()\">signPsbt(上架NFT)</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_signAndPushPsbt_up()\">signAndPushPsbt(上架NFT)</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在OKX App选择要上架的Fractal NFT，点击【上架】\n        </li>\n        <li>\n          2. 弹出签名面板，点开高级选项，查看\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出上架流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_sendInscription()\">sendInscription(Fractal)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Fractal NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount\n    }\n  },\n  methods: {\n\n    fractal_getAccount() {\n      this.$emit('generateTransactionParams', {}, \"fractal_getAccount\")\n    },\n\n    fractal_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to UniSat!\\n\\nClick to sign in and accept the UniSat Terms of Service (https://unisat.io/terms-of-service.html) and Privacy Policy (https://unisat.io/privacy-policy.html).\\n    \\nThis request will not trigger a blockchain transaction.\\n    \\nYour authentication status will reset after 24 hours.\\n    \\nWallet address:\\nbc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\\n    \\nNonce:\\n162d70e3-8c21-4cfd-9a22-9bf0a4b7be51\\n\"\n      };\n      this.$emit('generateTransactionParams', params, \"fractal_signMessage\")\n    },\n\n    fractal_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_send\")\n    },\n\n    fractal_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_sendBitcoin\")\n    },\n\n    fractal_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"fractal_signPsbt\")\n    },\n\n    fractal_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"fractal_signAndPushPsbt\")\n    },\n\n    fractal_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"fractal_sendInscription\")\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./FractalTransactionPanel.vue?vue&type=template&id=fb2f7e38&scoped=true\"\nimport script from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./FractalTransactionPanel.vue?vue&type=style&index=0&id=fb2f7e38&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-fb2f7e38\"]])\n\nexport default __exports__","<script>\n\nimport {getFullnodeUrl, SuiClient} from \"@mysten/sui/client\";\nimport {Transaction as SuiTransaction} from '@mysten/sui/transactions';\n\nexport default {\n  name: \"SuiTransactionPanel\",\n  methods: {\n    sui_getAccount() {\n      this.$emit('generateTransactionParams', '', \"sui_getAccount\")\n    },\n\n    //对单个交易签名（不发送)\n    async sui_signMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signMessage\")\n    },\n\n    async sui_signPersonalMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signPersonalMessage\")\n    },\n\n    sui_signTransaction2() {\n      // 定义要转移的金额和目标地址\n      const amount = 109; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    async sui_requestRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n          `sui:mainnet`,\n          `https://fullnode.mainnet.sui.io:443`\n      );\n      var data = {\n        method: \"suix_getBalance\",\n        params: [\n          \"0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae\",\n          \"0x168da5bf1f48dafc111b0a488fa454aca95e0b5e::usdc::USDC\",\n        ],\n      };\n\n      this.$emit(\"generateTransactionParams\", data, \"sui_testRpc\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 102; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signAndExecuteTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n      this.$emit(\"generateTransactionParams\", input, \"sui_signAndExecuteTransaction\")\n    },\n\n    /// generate txBytes and txSerialize\n    async generateTsBytesAndSerizlize(input) {\n      /// txBytes and txSerialize may be constructed in advance by the dapp side\n      let resultTuple = [\"\", \"\"];\n      if (\n          \"txBytes\" in input &&\n          input.txBytes.length > 0 &&\n          \"txSerialize\" in input &&\n          input.txSerialize.length > 0\n      ) {\n        resultTuple = [input.txBytes, input.txSerialize];\n      }\n\n      /// Otherwise, a transactionBlock parameter is required.\n      if (!(\"transactionBlock\" in input)) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      // if (this.walletAddress != \"connected\") {\n      //   alert(\"请先连接钱包\");\n      //   return new Promise((resolve) => {\n      //     resolve(resultTuple);\n      //   });\n      // }\n\n      let senderAccounts = window.provider.requestAccountsWithNamespace(\"sui\");\n      if (senderAccounts.length == 0) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      try {\n        let rpcUrl = getFullnodeUrl(\"mainnet\");\n        rpcUrl = \"https://www.okx.com/fullnode/sui/discover/rpc\"\n        const suiClient = new SuiClient({ url: rpcUrl });\n\n        /// sender is required\n        input.transactionBlock.setSender(senderAccounts[0]);\n        const result = await input.transactionBlock.build({\n          client: suiClient,\n        });\n        const txBytes = Buffer(result).toString(\"base64\");\n        const txSerialize = await SuiTransaction.from(txBytes).toJSON();\n        resultTuple = [txBytes, txSerialize];\n      } catch (error) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      return new Promise((resolve) => {\n        resolve(resultTuple)\n      })\n    },\n\n    //签名并发送交易\n    sui_signAndExecuteTransaction() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n        \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.testTransaction = JSON.stringify(input);\n      this.currentSuiTransaction = input;\n      this.currentSuiMethod = \"sui_signAndExecuteTransaction\";\n    },\n  },\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_getAccount()\">getAccount(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signMessage()\">signMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signPersonalMessage()\">signPersonalMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signTransaction2()\">signTransaction(Sui)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signAndExecuteTransaction()\">sendTransaction(Sui)</el-button>\n      <div style=\"font-size: 12px; color: gray;\">(send to Rally Tiger account)</div>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_requestRpc()\">RPC_getBalance</el-button>\n      <div style=\"font-size: 12px; color: gray;\">get USDC balance of address:</div>\n      <div style=\"font-size: 12px; color: gray\">0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae</div>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signTransaction_pre_execution()\">signTransaction(prepared data)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signAndExecuteTransaction_pre_execution()\">sendTransaction(prepared data)</el-button>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./SuiTransactionPanel.vue?vue&type=template&id=56a8eddf&scoped=true\"\nimport script from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./SuiTransactionPanel.vue?vue&type=style&index=0&id=56a8eddf&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-56a8eddf\"]])\n\nexport default __exports__","<script>\nimport { OKXStarknetProvider } from \"@okxconnect/universal-provider\";\nimport { CallData, uint256, RpcProvider, Account } from \"starknet\";\n\nexport default {\n  name: \"StarknetTransactionPanel\",\n  methods: {\n    async starknet_signMessage() {\n      this.address = this.getCurrentAddress()\n      if (this.address === \"\") {\n        alert(\"address can't be ''\");\n        return\n      }\n\n      let signData = this.signData\n      this.$emit(\"generateTransactionParams\", JSON.stringify(signData))\n      let provider = new OKXStarknetProvider(window.provider)\n      let res = await provider.signMessage(this.address, signData, \"starknet:mainnet\")\n      if (res.code) {\n        if (res.code == 301) {\n          let msg = \"Wallet address is registering, please try again later!\"\n          alert(msg)\n          this.$emit(\"generateTransactionResult\", msg, \"starknet_signMessage\")\n        }\n        this.$emit(\"generateTransactionResult\", res, \"starknet_signMessage\")\n        return\n      }\n      console.log(res)\n\n      const rpcProvider = new RpcProvider({ nodeUrl: \"https://free-rpc.nethermind.io/mainnet-juno/v0_7\" });\n      let pk = \"0x123\"; /// random pk\n      const account = new Account(rpcProvider, this.address, pk)\n      let that = this\n      account.verifyMessage(signData, res).then(function (isValid) {\n        that.$emit(\"generateTransactionResult\", \"verify:\" + isValid + \"\\n\" + res, \"starknet_signMessage\")\n      }).catch(function (error) {\n        that.$emit(\"generateTransactionResult\", \"failed:\" + error + \"\\n\" + res, \"starknet_signMessage\")\n      })\n    },\n\n    async starknet_sendTransaction() {\n      this.address = this.getCurrentAddress()\n      if (this.address === \"\") {\n        alert(\"address can't be ''\");\n        return\n      }\n\n      let val = uint256.bnToUint256(120000000000000000)\n      const transferCalldata = CallData.compile({\n        to: \"0x00b909cefa36ab6bc26f5887a867e46ef162238f0a171b1c2974b665afd4237f\",\n        value: val\n      })\n\n      // const ETHTokenAddress = \"0x049d36570d4e46f48e99674bd3fcc84644ddd6b96f7c741b1562b82f9e004dc7\"\n      // const STARKTokenAddress = \"0x04718f5a0fc34cc1af16a1cdee98ffb20c31f5cd61d6ab07201858f4287c938d\"\n      const DAITokenAddress = \"0x00da114221cb83fa859dbdb4c44beeaa0bb37c7537ad5ae66fe5e0efd20e6eb3\"\n\n      const invokeParams = {\n        calls: [\n          {\n            contract_address: DAITokenAddress,\n            entry_point: \"transfer\",\n            calldata: transferCalldata\n          }\n        ],\n      }\n\n      this.$emit(\"generateTransactionParams\", JSON.stringify(invokeParams))\n      let provider = new OKXStarknetProvider(window.provider)\n\n      let that = this\n      provider.sendTransaction(this.address, invokeParams, \"starknet:mainnet\").then(function(res){\n        console.log(\"starknet_sendTransaction result \", res)\n        that.$emit(\"generateTransactionResult\", res, \"starknet_sendTransaction\")\n      }).catch(function(error) {\n        if (error.code == 301) {\n          let msg = \"Wallet address is registering, please try again later!\"\n          alert(msg)\n          that.$emit(\"generateTransactionResult\", msg, \"starknet_sendTransaction\")\n        }else {\n          that.$emit(\"generateTransactionResult\", error, \"starknet_sendTransaction\")\n        }\n      });\n    },\n\n    getCurrentAddress() {\n      let provider = new OKXStarknetProvider(window.provider)\n      const address = provider.getAccount(\"starknet:mainnet\")?.address\n      return address\n    },\n\n    getPublicKey() {\n      let provider = new OKXStarknetProvider(window.provider)\n      const account = provider.getAccount(\"starknet:mainnet\")\n      console.log(\"获取到的account是：\")\n      console.log(account)\n      return \"05d8e5e9c1dd686246716c888159271d2f13986cb4acee46164e2c4e034629c0\"\n    }\n  },\n\n  data() {\n    const signData = {\n        \"domain\": {\n          \"chainId\": \"0x534e5f4d41494e\",\n          \"name\": \"STRKFarm\",\n          \"version\": \"1\"\n        },\n        \"message\": {\n          \"document\": \"app.strkfarm.xyz/tnc/v1\",\n          \"message\": \"Read and Agree T&C\"\n        },\n        \"primaryType\": \"Tnc\",\n        \"types\": {\n          \"StarkNetDomain\": [\n            {\n              \"name\": \"name\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"version\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"chainId\",\n              \"type\": \"felt\"\n            }\n          ],\n          \"Tnc\": [\n            {\n              \"name\": \"message\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"document\",\n              \"type\": \"felt\"\n            }\n          ]\n        }\n    }\n\n    return {\n      signData\n    }\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"starknet_signMessage()\">signMessage</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 验签不成功的话，请尝试连接VPN\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"starknet_sendTransaction(true)\">\n        sendTransaction\n      </el-button>\n\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 发送0.12个DAI到0x00b9...4237f的地址\n        </li>\n        <li>\n          2. 请保证你的钱包有足够的DAI\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./StarknetTransactionPanel.vue?vue&type=template&id=082fda2b&scoped=true\"\nimport script from \"./StarknetTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./StarknetTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./StarknetTransactionPanel.vue?vue&type=style&index=0&id=082fda2b&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-082fda2b\"]])\n\nexport default __exports__","<script>\n\n\nimport {OKXTronProvider} from \"@okxconnect/universal-provider\";\nimport {TronWeb} from \"tronweb\";\n\nexport default {\n  name: \"TronTransactionPanel\",\n  methods: {\n\n    async tron_signMessage() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessage(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n\n      const verify = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), res, provider.getAccount(\"tron:mainnet\").address)\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" + res, \"tron_signMessage\")\n    },\n\n    async tron_signMessageV2() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessageV2(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", res);\n      console.log(\"tron_signMessageV2_base58Address\", base58Address)\n      console.log(\"tron_signMessageV2_address\", provider.getAccount(\"tron:mainnet\").address)\n      const verify = base58Address === provider.getAccount(\"tron:mainnet\").address\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" +  res, \"tron_signMessage\")\n    },\n\n    async tron_signTransaction(isOnlySign) {\n      let provider = new OKXTronProvider(window.provider)\n        let tronWeb = new TronWeb({\n          \"fullHost\": 'https://api.trongrid.io',\n          \"headers\": {},\n          \"privateKey\": ''\n        })\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const transaction = await tronWeb.transactionBuilder.sendTrx(\"TGBcVLMnVtvJzjPWZpPiYBgwwb7th1w3BF\", 1000, address);\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let res = await provider.signTransaction( transaction, \"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", res, \"tron_signTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async getContract() {\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n      \n      try {\n        const contract = await tronWeb.trx.getContract(contractAddress)\n        const abi = contract.abi.entrys;\n        console.log(\"获取到的合约：\")\n        console.log(abi)\n      } catch (error) {\n        console.log(\"Error getting contract ABI:\", error);\n      }\n    },\n    \n    async tron_signAndSendTransactionContract(isOnlySign) {\n      // this.getContract()\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n      ]\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"quote(uint256,uint256,uint256)\", {}, parameter, address);\n      console.log(\"=====>transaction: \")\n      console.log(ret);\n      this.$emit(\"generateTransactionParams\", ret.transaction)\n      if (isOnlySign) {\n        let tx = await provider.signTransaction( ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async tron_signAndSendTransactionApprove(isOnlySign) {\n      let contractAddress = \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'address', value: contractAddress},\n        {type: 'uint256', value: 1000},\n      ]\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"approve(address,uint256)\", {}, parameter, address);\n\n      let transaction = ret.transaction\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let tx = await provider.signTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n\n    }\n\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessage()\">tron_signMessage</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessageV2()\">tron_signMessageV2</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(true)\">\n        tron_signTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(true)\">\n        tron_signTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(true)\">\n        tron_signTransaction(Approve)\n      </el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(false)\">\n        tron_signAndSendTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(false)\">\n        tron_signAndSendTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(false)\">\n        tron_signAndSendTransaction(approve)\n      </el-button>\n    </el-col>\n\n\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./TronTransactionPanel.vue?vue&type=template&id=55a13ab0&scoped=true\"\nimport script from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./TronTransactionPanel.vue?vue&type=style&index=0&id=55a13ab0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-55a13ab0\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=44f1f5aa&scoped=true\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=44f1f5aa&scoped=true&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-44f1f5aa\"]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\nimport App from './App.vue'\n\nconst app = createApp(App)\n\napp.use(ElementPlus)\napp.mount('#app')","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkokxconnectdemo\"] = self[\"webpackChunkokxconnectdemo\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(73959); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["Object","defineProperty","exports","value","CONNECT_METHOD_BATCH_FETCHMSG","CONNECT_METHOD_FETCHMSG","CONNECT_METHOD_RECEIVE","CONNECT_METHOD_UNSUB","CONNECT_METHOD_SUB","CONNECT_METHOD_PUBLISH","CONNECT_METHOD_LOGIN","CONNECT_METHOD_PUSH","require","__createBinding","this","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","__setModuleDefault","v","__importStar","mod","result","prototype","hasOwnProperty","call","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","e","rejected","done","then","apply","OKXWalletConnector","constants_1","storageconstants_1","storage_1","utils_1","utils_2","eventemitter3_1","log","protocol_1","WS","resolveWebSocketImplementation","constructor","url","events","EventEmitter","state","ConnectorState","InitState","selectedUrlIndex","retryCount","timeOutLimit","checkWSUrl","Error","heartbeatTimer","connectionTimeoutTimer","connectURLStorage","Storage","OKXCONNECTOR_CACHE_KEY","connecting","Connecting","onPayload","data","logDebug","rsp","Date","now","toString","emit","onClose","event","_a","socket","code","onError","id","payload","msg","onopen","onmessage","onclose","Connected","emitError","errorEvent","heartbeat","clearTimeout","OnError","readyState","WebSocket","OPEN","send","setTimeout","bind","tryRegistOpen","logError","registOpen","inRetry","toUTCString","URLSearchParams","startTimeOutTimer","hasBuiltInWebSocket","onerror","close","on","resetTimeOutTimer","OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE","FINISHED","checkMaxRetry","OKXCONNECTOR_WS_URL_LIST","length","connectionTryNext","nextUrl","getNextSelectUrl","CANCELED","pendingSocket","TIME_OUT","cacheSuccessUrlSelect","saveContent","onVisibleChanged","document","visibilityState","arguments","once","err","OKXConnectError","OKX_CONNECT_ERROR_CODES","CONNECTION_ERROR","connect","removeEventListener","addEventListener","disconnect","Disconnected","currentStatus","addListener","decrypt","success","failed","listenPayloadHandler","removeListener","parsedEvent","safeJsonParse","params","rawMsg","message","failHandler","addPackageParse","callback","payloadHandler","param","listener","off","doLogin","safeJsonStringify","getMsgPayloadFromHistory","tmpMsg","jsonstr","onOpen","openHandler","ConnectionManager","connect_1","commands_1","jwtconstants_1","crypto_1","jwt_1","safejson_1","log_1","report_1","url_1","appname","connectStorage","OKXCONNECTOR_CACHE_KEY_DAPP","crypto","SessionCrypto","inTMA","isInTMA","reportLog","keyPairInfo","getCachedCryptoKeyPair","jwtKeyPair","getCachedJWTKeyPair","saveJWTKeyPair","connector","OKXCONNECTOR_WS_URL_1","packageId","connectedWalletPK","currentTopic","refreshPackageId","saveCryptoKeyPair","keyPair","cacheInfo","encryptStoreMsg","OKXCONNECTOR_CRYPTO_KEY","kp","getAndDecrypt","content","clearCache","strkeyPair","publicKey","toHexString","secretKey","OKXCONNECTOR_JWT_KEY","strKeyPairInfo","hexToByteArray","generateKeyPair","isWalletPKReady","makeJWT","topic","signJWT","OKXCONNECTOR_JWT_SIDE","OKXCONNECTOR_JWT_TTL","parsePackage","input_1","input","ignoreACK","_b","_c","_d","_e","sendACK","getItem","OKXCONNECTOR_TOKEN_CACHE","inputObj","messageId","sendReceive","restoreConnect","getConnectInfo","generateTopic","info","channelId","clientId","stringifyKeypair","fromRestore","timeLog","getTime","lastConnectId","cachedSenderPublicKey","OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE","jwtToken","timeOne","error","name","timeF","sendFetchAndConsumeMessages","timeTh","catch","jsonrpc","CONNECT_JSONRPC_VER","method","token","replace","parsedMessage","fail","msgObj","trimStart","startsWith","sendRaw","ttl","OKXCONNECTOR_MESSAGE_TTL","msg_1","encrypt","reportEvent","OKXReportType","LOG","msgId_1","success_1","msgId","reason","sendConnectSessionInfo","fetchedMessages","hasMore","receivedMsgs","i","timeFive","cleanCache","saveSessionContent","key","OKXCONNECTOR_SESSION_PREFIX_KEY","jsonData","getSessionContent","jsonStr","object","getCurrentConnectionReady","OKXCONNECTOR_WS_URL_IDX_KEY","OKXCONNECTOR_WS_URL_3","OKXCONNECTOR_WS_URL_2","EVENT_EMITTER_MAX_LISTENERS","Engine","sessionUtils_1","connectionManager","pendingRequests","Map","disconnectListener","getDefaultReporter","beginReport","jsonResponse","handleResponse","addDisconnectListener","disconnecter","push","setSessionConnectingListener","sessionConnectingListener","clear","getRequestId","requestId","bindRequestForPromise","set","request","requestAnswer","option","JSON","stringify","assign","onAck","sendSession","sessionInfo","response","delete","forEach","restoreconnect","onConnectResult","conect","sessionConfig","connectInfo","openUniversalLink","openUniversalUrl","connectRequest","protocolVer","Number","tonConnectSdkVersion","dAppInfo","dappInfo","requests","connectRequestStr","utf8Array","TextEncoder","encode","base64Encoded","btoa","String","fromCharCode","deeplinkUrl","standardDeeplink","isIOS","isIos","openOKXDeeplinkWithFallback","session","onConnect","getUniversalLink","connectResponse","namespaces","buildNameSpacesByConnectResponse","universalConnect","connectInfoAndUrl","universalRequest","item","universalConnectRequest","redirect","encodeConnectParams","openOKXLink","getOKXLink","useMini","tmaReturnUrl","openMethod","openOKXTMAWalletlinkWithFallback","useShortLink","openOKXUniversalLink","UNKNOWN_ERROR","walletName","responses","wallet","methodsResponse","find","connectRequestMethods","signResponse","WalletConnectionManager","connectionManager_1","walletConnectionManager_1","engine_1","__importDefault","MULTICODEC_ED25519_LENGTH","MULTICODEC_ED25519_HEADER","MULTICODEC_ED25519_BASE","MULTICODEC_ED25519_ENCODING","DID_METHOD","DID_PREFIX","DID_DELIMITER","KEY_PAIR_SEED_LENGTH","DATA_ENCODING","JSON_ENCODING","JWT_ENCODING","JWT_DELIMITER","JWT_IRIDIUM_TYP","JWT_IRIDIUM_ALG","JWTHeaderType","decodeJSON","encodeJSON","encodeIss","decodeIss","encodeSig","decodeSig","encodeData","decodeData","encodeJWT","decodeJWT","verifyJWT","ed25519","tweetnacl_1","stringUtils_1","default","sign","str","okxtoString","okxfromString","val","publicKeyStr","join","issuer","prefix","multicodec","split","bytes","encoded","header","signature","jwt","slice","sub_1","aud_1","ttl_1","keyPair_1","sub","aud","iat","Math","floor","alg","typ","iss","exp","act","detached","verify","OKXCONNECTOR_JWT_WALLET_SIDE","buildRequestAccountNameSpacesByConnectResponse","requestAccountNameSpaces","universalResponse","tonAddress","tonProof","address","network","ton_addr","ton_proof","accounts","namespace","addresses","methods","extra","chains","addressItem","addressArr","chain","utils_3","crypto_js_1","subKey","beforeKey","localStorage","resolveLocalStorage","checkAndUpgradeCache","storeKey","cipherIV","cacheStr","cacheKey","cache","cacheObj","fromCacheKey","toCacheKey","setItem","removeItem","timestamp","saveItem","localKey","totalCacheStr","getCachedPBKDF2InfoKey","pwLen","saltLen","pw","iv","salt","OKXCONNECTOR_STORAGER_CRYPTO_SALT","randomBytes","OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD","OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV","ivBuffer","PBKDF2","iterations","storeInfo","AES","enc","Utf8","OKXCONNECTOR_STORAGE_CIPHER_METHOD","OKXCONNECTOR_TON_KEY","WalletConnectionManagerEvent","WalletConnectionManagerTopicInfoCacheKey","RECEIVE_REQUEST","walletConnectionConstants_1","communicateEvents","sessionCryptoInfoMap","inLogin","isLogined","offset","topicId","isTopicPublicKeyExist","timestampStr","parseInternalMsg","internalMsg","internalObj","origin","originContent","base64decode","updateClientId","cid","lastCheck","getLastSixMd5Hash","dappPublicKey","syncCacheSessionInfo","topic_1","_f","_g","_h","_j","_k","_l","isInternalData","inner_message","inner_topic","messageObj","sessionInfoString","base64Content","inner_connection","toObject","decryptWallet","recovrySessionInfoFromCache","cacheMap","topicItem","cryptoItem","cryptoKeyPair","cacheSessionInfo","sync","duplicatedTopics","includes","appendTopic","sessionPublicKey","subscribeTopics","Array","from","confirmAppendingTopics","size","keys","getSessionPublicKey","getCurrentCachedTopicIdList","needPublicKey","useRaw","connectedDappPK","cryptoObject","encryptWallet","sendUnsubscribe","sendBatchFetchAndConsumeMessages","topicIdList","topics","withInternalData","finishCount","idx","nonceLength","sessionKeyPair","createKeypairFromString","createKeypair","box","createNonce","receiverPublicKey","encodedMessage","nonce","encrypted","concatInfo","concatUint8Arrays","hexResult","encodedResult","base64encode","senderPublicKey","messageByteArray","toUint8Array","internalMessage","splitToUint8Arrays","decrypted","open","TextDecoder","decode","__exportStar","p","IEngine","ISignClient","ISignClientEvents","IEngineEvents","super","client","creatOKXMiniAppWalletInfo","creatOKXWalletInfo","getBigIntRpcId","formatJsonRpcRequest","isJsonRpcError","isJsonRpcResponse","parseConnectionError","isHttpUrl","formatJsonRpcError","json_rpc_1","wallet_info_1","isJsonRpcPayload","isJsonRpcRequest","isJsonRpcResult","payloadId","formatJsonRpcResult","isReservedErrorCode","getError","getErrorByCode","formatErrorMessage","isWsUrl","okx_connect_error_1","IncrementalRandomGenerator","bits","Uint8Array","Uint16Array","Uint32Array","initialValue","getNextValue","uint8Generator","uint16Generator","date","BigInt","RESERVED_ERROR_CODES","type","STANDARD_ERROR_MAP","DEFAULT_ERROR","match","values","INTERNAL_ERROR","SERVER_ERROR","getUrlProtocol","matches","RegExp","matchRegexProtocol","regex","protocol","test","CONNECT_ITEM_ERROR_CODES","TONCHAIN","connect_wallet_1","connect_event_1","downloadUrl","standardUniversalLink","tgwalletName","getTestTwaUrl","window","okxTesttwaUrl","getTestTgTwaUrl","okxTestTgtwaUrl","tgwalletAppName","shortUniversalLink","okxDeeplink","location","hostname","SERVER_ERROR_CODE_RANGE","INVALID_PARAMS","METHOD_NOT_FOUND","INVALID_REQUEST","PARSE_ERROR","getDefaultMessageByCode","setPrototypeOf","toJSON","BAD_REQUEST_ERROR","ALREADY_CONNECTED_ERROR","NOT_CONNECTED_ERROR","UNKNOWN_APP_ERROR","USER_REJECTS_ERROR","USER_REJECTS_ERROR_CAUSE_REGISTER","METHOD_NOT_SUPPORTED","CHAIN_NOT_SUPPORTED","NameSpaceKeyStarknet","NameSpaceKeyTron","NameSpaceKeyCosmos","NameSpaceKeyAptos","NameSpaceKeyBtc","NameSpaceKeySui","NameSpaceKeyTON","NameSpaceKeySOL","NameSpaceKeyEip155","misc_1","callForSuccess","fn","options","attempts","delayMs","lastError","delay","timeout","signal","aborted","timeoutId","checkMetaData","versionCompare","isBrowser","isOS","isMobileUserAgent","openDeeplinkWithFallback","openLinkBlank","openLink","toSafeBase64FromBase64","isValidObject","getAppWalletShortDeepLink","encodeTWAConnectURLParams","getTelegramWalletTWAUrl","getAppWalletDeepLink","encodeTelegramUrlParameters","isTelegramUrl","openOKXDeeplink","logWarning","call_for_success_1","web_api_1","tma_api_1","request_1","debug","forceReport","defaultReporter","OKXReporter","packageJson","version","args","console","okxLogDebug","reduce","sendRecordContent","warn","action","content_1","OKXReportSide","versionStr","cross_fetch_1","localforage_1","reportApiList","reportCacheKey","reportUUIDKey","MAX_LIMIT_REPORTCOUNT","DEFAULT_HTTP_HEADERS","Accept","DEFAULT_HTTP_METHOD","DEFAULT_FETCH_OPTS","headers","PAGE_IN","PAGE_OUT","CLICK","DAPP","WALLET","fetchListWithTimeout","urls_1","args_1","urls","controller","AbortController","fetchPromise","timeoutPromise","_","abort","race","ok","status","currentSide","currentVersion","storage","createInstance","recordList","currentUUID","configVersionAndSide","side","appName","recordCacheKey","reportPlatform","startErrorCatching","records","uuid","sendCachedRecords","getWindow","cachedErrors","sendRecord","record","body","res","filter","path","pathname","language","navigator","ua","userAgent","platform","reportItem","lang","markRecordItem","sendList","map","allSettled","results","keepIndex","index","splice","markRecord","Report_WalletType_Key","Report_Proceed_QRCode_Click","Report_ChooseType_Download_Click","Report_ChooseType_ConnectWallet_Click","Report_Proceed_Retry_Click","Report_ChooseType_ConnectWallet_View","Report_Loading_ConnectWallet_View","Report_Proceed_QRCode_View","Report_Proceed_Proceed_View","dappMetaData","icon","JSONStringify","JSONParse","json","numbersBiggerThanMaxInt","serializedData","group","parse","isCustomFormatBigInt","substring","alloc","allocUnsafe","basics_1","string","encoding","base","BASES","decoder","array","encoder","createCodec","buf","ascii","bufNum","charCodeAt","utf8","hex","bases","base16","latin1","binary","isTmaPlatform","isInTelegramBrowser","sendExpand","sendOpenTelegramLink","initParams","locationHash","hash","urlParseHashParams","tmaPlatform","tgWebAppPlatform","Telegram","WebApp","webAppVersion","tgWebAppVersion","platforms","TelegramWebviewProxy","isTelegramWebview","TelegramWebview","postEvent","link","fallback","URL","pathFull","search","isIframe","versionAtLeast","path_full","parent","eventType","eventData","external","notify","trustedTarget","postMessage","indexOf","_path","urlSafeDecode","qIndex","pathParam","substr","query_params","urlParseQueryString","urlencoded","decodeURIComponent","queryString","paramName","paramValue","queryStringParams","v1","v2","a","p1","p2","v1List","v2List","max","parseInt","ver","removeUrlLastSlash","addPathToUrl","useStandardUniversalLink","replaceStrWithParam","cleanUrl","deeplinkEncodeUrl","encodeURIComponent","fullUrl","isTelegram","newWindow","href","deepLinkOpened","timeoutDuration","fallbackToDownloadPage","parameters","encodedParameters","connectParam","redirectStr","okxconnect","extraparams","base64ContentStr","urlSafeBase64","twaDeepLink","openTelegramLink","encodeTGParams","RANDOM_LENGTH","hasLocalStorage","hashKey","generateRandomBytes32","tweetnacl_util_1","to_string_1","sha256_1","BASE16","hexString","byteArray","byte","buffer1","buffer2","mergedArray","subArray1","subArray2","encodeUint8Array","urlSafe","encodeBase64","decodeToUint8Array","decodeBase64","uint8Array","decodeUTF8","decodedUint8Array","encodeUTF8","scheme","global","self","randomBytes32","obj","getPrototypeOf","maxTouchPoints","isIOSDevice","MSStream","isIPadOS","MD5","base64","getUserAgent","ua_parser_js_1","target","doFallback","fallbackTimeout","check","vendor","opera","getResult","osName","os","toLowerCase","deviceModel","device","model","browserName","browser","OKXBtcProvider","_1","provider","caip","getAddressForChainId","chainId","ns","checkChainId","account","getAccount","signMessage","signStr","ret","errorData","sendBitcoin","toAddress","satoshis","to","feeRate","txhash","checkParameters","signPsbt","psbtHex","signPsbts","psbtResults","psbtHexs","signAndPushPsbt","sendInscription","inscriptionId","extension","coinId","protocolId","atomicSuffix","ordinalsSuffix","endsWith","removeSuffix","scenario","txType","batchBean","coinAmount","nftId","suffix","unexistKeys","namespaceKey","OKXCosmosProvider","core_1","accountArray","algo","bech32Address","pubKey","hexToUint8Array","signArbitrary","signerAddress","signDoc","chain_id","account_number","sequence","fee","gas","amount","msgs","memo","signData","signAmino","signOptions","resData","signed","signDirect","bodyBytes","bufferToHex","authInfoBytes","accountNumber","messageToBuffer","buffer","arr","output","x","padStart","arrayBuffer","byteValue","isNaN","OKXStarknetProvider","STARKNET_CHAIN_ID","getChain","typedData","sendTransaction","transaction","transactionData","transaction_hash","signMessageDeclareContractPayload","sendMessageExecuteTransactionDetail","calls","abis","transactionsDetail","transactions","isArray","executionRequest","OKXTonProvider","statusChangeSubscriptions","statusChangeErrorSubscriptions","tonWallet","errorsHandler","connected","tonNameSpace","walletStateInit","sessionWallet","tonDeviceInfo","appVersion","maxProtocolVersion","features","connectItems","onStatusChange","MAINNET","requestAccountsWithNamespace","requestParams","OKXTronProvider","TRON_CHAIN_ID","stringToHex","signMessageV2","signTransaction","signedTx","realSignTx","visible","txID","rawData","contract","raw_data","expiration","ref_block_bytes","fee_limit","ref_block_hash","raw_data_hex","signAndSendTransaction","OKXUniversalProvider","eip155_1","sui_1","client_1","namespaces_1","solana_1","btc_1","aptos_1","ton_1","cosmos_1","tron_1","packages_1","provider_1","starknet_1","init","opts","setGlobal","okxConnectUniversalinwindow","initialize","providerOpts","rpcProviders","requestParam","buildRequestParamFromRequest","getProvider","validateChain","keyArr","enable","connectOpts","requestAccounts","called","onRequestSent","disconnectAndEmit","cleanup","engine","aptosChainNameToGeneralId","replaceAptos","aptosNameSpace","realNS","replaceAptosInner","aptos","optionAptosNameSpace","optionalNamespaces","realOptionNS","defaultChain","replaceAptosGeneralIdWithNetName","replaceSessionAptos","disconnectInner","connectAndSign","signRequest","updatedOpts","setNamespaces","requestItem","signResponseList","okxConnectUniversalUIinwindow","creatNotSupportMethodItemReplay","syncAllAddresses","syncAddressAvailable","syncAllAddress","setDefaultChain","rpcUrl","checkStorage","sessionInfoStr","getFromStore","createProviders","registerEventListeners","SignClient","providersToCreate","Set","parseNamespaceKey","namespacesValue","currentNameSpace","Eip155Provider","opts1","solanaProvider","sonicProvider","svmProvider","optsTon","tonProvider","optsSui","suiProvider","SuiProvider","optsBtc","btcProvider","fbProvider","aptosProvider","moveProvider","cosmosProvider","tronProvider","starknetProvider","PROVIDER_EVENTS","DEFAULT_CHAIN_CHANGED","caip2ChainId","onChainChanged","UPDATE_NAMESPACES","nameSpaces","nameSpacekey","persist","isChainNamespaceInSession","chainsArr","defaultNamespace","getDefaultChain","namespaceStr","requestDefaultChainWithNamespace","caip2Chain","sessionProperties","showRequestModal","OKXUniversalProvider_1","OKXBtcProvider_1","OKXCosmosProvider_1","OKXTonProvider_1","OKXTronProvider_1","OKXStarknetProvider_1","ConnectMethodUtils_1","metaData","requestAccountItem","requiredNamespaces","nameSpaceToConnectWalletNameSpace","SESSION_CONNECTING","connectMethodsToConnectWalletMethods","metadata","fillParamsToSession","connectMethodsResponseUpdate","openOKXWallet","allAddressStr","syncResoonseToRequire","connectSupportMethods","connectMethodsAdaptOldVersion","bs58_1","uint8array_extras_1","isRecord","notSupportError","errorItem","callBackParams","solAccount","account1","solAddress","fromAccountToAddress","realMessage","stringToUint8Array","suiMessage","convertedArray","b64encoded","atob","btcAccounts","account2","btcAccount","btcAddress","paramData","aptosAccount","account3","aptosAddress","fullMessage","application","aptosChainId","cosmosAccount","account_cosmos","cosmosAddress","cosmosData","cosmosBase64Encoded","stringToBase64","methodItem","solanaSuccessData","suiMethod","requestMethod","suiMessageb64","aptosSignature","requireNameSpace","includeEip155","some","space","syncAddressHostAvailable","includeChain","paramsArr","firstParam","firstObj","aptosParams","currentURL","signChainId","applicationUrl","cosmosChain","responseAddressStr","allAddress","isEvm","deriveName","addr","ci","evmAddress","freeze","getAccountsChains","isCaipNamespace","mergeRpcMap","targetRpcMap","sourceRpcMap","mergeNamespaces","source","rpcMap","GENERIC_SUBPROVIDER_NAME","RPC_URL","STORAGE","CONTEXT","WC_VERSION","PROTOCOL","RELAY_URL","LOGGER","JsonRpcConnection_1","JsonRpcProvider_1","AptosProvider","httpProviders","createHttpProviders","updateNamespace","getAccounts","setHttpProvider","http","parsedChainId","getChainId","parsedRpc","getRpcUrl","httpProvider","createHttpProvider","getHttpProvider","rpc","JsonRpcProvider","JsonRpcConnection","getGlobal","BtcProvider","CosmosProvider","updateRequestParams","isDic","switchChainId","decimalNumber","selectedChainId","chainNum","paramsChainId","paramsChainString","adaptArray","addressObj","isEqual","chainAddress","messages","typedDataJson","secondObj","hexChainId","getHexChainIdFromRequest","isChainApproved","handleSwitchChain","addEthereumChain","resultData","nameSpace","rpcUrls","eip155","core_2","disableProviderPing","isAvailable","registering","register","parseError","types_1","IJSONRpcProvider","connection","hasRegisteredEventListeners","setConnection","context","requestStrict","_error","SolanaProvider","getPubkey","getWalletAddress","components","StarknetProvider","__rest","s","t","getOwnPropertySymbols","propertyIsEnumerable","TONProvider","validUntil","newParams","fromAddress","boc","TronProvider","IJSONRpcConnection","opt","globals","convertChainIdToNumber","parseChainId","mergeArrays","projectId","reference","CAIP_DELIMITER","b","okxGlobal","_createElementBlock","_hoisted_1","_createVNode","_component_el_container","_withCtx","_component_el_header","_cache","_createTextVNode","_component_el_main","_component_el_card","class","_createElementVNode","style","_component_el_row","_component_el_col","span","_toDisplayString","$options","_ctx","_component_el_checkbox","modelValue","withUI","$event","onChange","handleWithUI","universalToTG","handleUniversalToTG","_component_el_select","modals","placeholder","handleModalsSelect","multiple","_component_el_option","label","returnStrategy","handleReturnStrategySelect","_Fragment","_renderList","returnStrategies","strategy","_createBlock","_component_el_input","deeplink","handleReturnStrategyDeeplink","disabled","_createCommentVNode","handleLanguageSelect","locales","locale","theme","handleThemeSelect","THEME","LIGHT","DARK","selectedMethod","handleConnectMethodsSelect","connectMethods","tonProofValue","gutter","align","availableChains","checked","areChainsInit","isOptionalChecked","handleOptionChange","_component_el_button","onClick","initBtnClicked","connectInitStr","connectBtnClicked","connectStatusStr","syncAllAddressClick","syncAllAddressStr","disconnectAction","walletAddress","disconnectStatusStr","_Teleport","showModal","closeModal","_withModifiers","_component_qrcode_vue","qrValue","level","_component_el_tabs","activeTab","onTabClick","clickActiveTab","_component_el_tab_pane","eth_requestAccounts","eth_chainId","wallet_switchEthereumChain","wallet_addEthereumChain","personal_sign","eth_signTypedData_v4","eth_sendTransaction_transfer","eth_sendTransaction_approve","eth_sendTransaction_mint","wallet_watchAsset","ton_getAccount","ton_sendTransaction","sol_signMessage","sol_signTransaction","sol_signVersionedTransaction","sol_signAllTransactions","sol_signAllVersionedTransactions","sol_signAndSendTransaction","sol_signAndSendVersionedTransaction","_component_SuiPanel","onGenerateTransactionParams","sui_generateTransactionParams","_component_BTCPanel","btc_generateTransactionParams","_component_FractalPanel","fractal_generateTransactionParams","_component_TronTransactionPanel","tron_generateTransactionParams","onGenerateTransactionResult","tron_getTransactionResult","aptos_signMessage","aptos_signTransaction","aptos_signAndSubmitTransaction","cosmos_signArbitrary","cosmos_signAmino","cosmos_signDirect","wallet_testRpc","eth_sendTransaction_swap","move_signTransaction","move_signAndSubmitTransaction","_component_StarknetPanel","ref","starknet_generateTransactionParams","starknet_getTransactionResult","testBase64UrlSafe","xs","sm","handleRedirectSelect","canChainAddRedirectParam","redirectDeeplink","handleRedirectDeeplink","addRedirectParam","testTransaction","rows","testboc","$setup","sendBtnDisabled","testTransactionStr","btc_getAccount","btc_signMessage","sendAmount","clearable","btc_send","sendSatoshisAmount","btc_sendBitcoin","btc_signPsbt_up","btc_signAndPushPsbt_up","receiver","btc_sendInscription","props","setup","$emit","alert","autoFinalized","__exports__","fractal_getAccount","fractal_signMessage","fractal_send","fractal_sendBitcoin","fractal_signPsbt_up","fractal_signAndPushPsbt_up","fractal_sendInscription","sui_getAccount","sui_signMessage","sui_signPersonalMessage","sui_signTransaction2","sui_signAndExecuteTransaction","sui_requestRpc","sui_signTransaction_pre_execution","sui_signAndExecuteTransaction_pre_execution","recipientAddress","tx","SuiTransaction","coin","splitCoins","transferObjects","transactionBlock","showEffects","txBytes","txSerialize","generateTsBytesAndSerizlize","resultTuple","senderAccounts","getFullnodeUrl","suiClient","SuiClient","setSender","build","Buffer","currentSuiTransaction","currentSuiMethod","starknet_signMessage","starknet_sendTransaction","getCurrentAddress","rpcProvider","RpcProvider","nodeUrl","pk","Account","that","verifyMessage","isValid","uint256","bnToUint256","transferCalldata","CallData","compile","DAITokenAddress","invokeParams","contract_address","entry_point","calldata","getPublicKey","tron_signMessage","tron_signMessageV2","tron_signTransaction","tron_signAndSendTransactionContract","tron_signAndSendTransactionApprove","tronWeb","TronWeb","trx","base58Address","verifyMessageV2","isOnlySign","transactionBuilder","sendTrx","getContract","contractAddress","abi","entrys","parameter","triggerSmartContract","verifyADR36Amino","fromBech32","VConsole","allChains","chainsThatCanAddRedirectParam","optionChains","selectedModals","selectedReturnStrategy","selectedDeepLink","selectedLanguage","selectedTheme","TronTransactionPanel","QrcodeVue","BTCPanel","FractalPanel","SuiPanel","StarknetPanel","testTopic","testPublicKey","testProofPayload","pendingDeepLink","logList","connectReady","localPubKey","localSecKey","selectedChain","ProofPayloadVerify","showVerifyRow","has","selectedMethodData","isChecked","reload","add","starknetPanelTypedData","computed","selectedChains","initChains","newChains","updatedChains","tab","tabName","initCall","OKXUniversalConnectUI","actionsConfiguration","uiPreferences","walletInfo","onModalStateChange","entries","uri","isPC","items","testTonSdk","blockExplorerUrls","chainName","nativeCurrency","symbol","decimals","dataETH","dataPolygon","types","EIP712Domain","Person","Mail","primaryType","domain","verifyingContract","contents","maxPriorityFeePerGas","maxFeePerGas","gasPrice","gasLimit","image","tonUniversalLog","sendTransactionAlert","fetch","confirm","sendData","adapter","SuiAdapter","suiResult","signAndExecuteTransaction","sui_verifySignature","signPersonalMessage","btcAdapter","btcResult","currentBtcMethod","currentBtcTransaction","hexToBase64","bs64Str","fractalResult","currentFractalMethod","currentFractalTransaction","hexStr","blob","Blob","reader","FileReader","onload","base64Data","readAsDataURL","datatest","firstStr","showUrl","hasEip155","hasSolana","hasSui","hasBtc","hasAptos","hasTon","hasCosmos","hasTron","nameSpacesChains","optSpaceChains","solanaChains","hasStarknet","suiChains","btcChains","connectMethod","connectData","requireData","solana","cosmos","tron","starknet","tonParams","ton","sui","btc","optData","eip155Chains","signMethods","getCurrentSelectedMethodData","openModalAndSign","openModal","methodList","suiData","currentMethod","accountAddress","userAgentInfo","Agents","flag","isSafariOrChrome","pubkey","OKXSolanaProvider","result1","nacl","PublicKey","toBytes","OKXAptosProvider","config","AptosConfig","Network","Aptos","simple","sender","function","typeArguments","functionArguments","signAndSubmitTransaction","Connection","getSolConnect","blockhash","getLatestBlockhash","versionedTransactionMessage","TransactionMessage","payerKey","recentBlockhash","instructions","SystemProgram","transfer","fromPubkey","toPubkey","lamports","compileToV0Message","VersionedTransaction","signAllTransactions","Transaction","feePayer","cosmos_verifySignArbitrary","pub_key","signer","prefixStr","signatureBuffer","uint8Signature","pubKeyValueBuffer","pubKeyUint8Array","uiOptions","eth_verifyMessage","ethAddress","originalMessage","recoveredAddress","ethers","list","verifyList","requestItme","ethMessage","solanaMessage","verifySol","aptosMessage","aptosPublicKey","cosmosMessage","tronMessage","StarknetRpcProvider","StarknetAccount","signatureResult","resultObj","verifyPersonalMessageSignature","toSuiAddress","toBase64","newTransaction","c","created","mounted","scriptTag","createElement","src","getElementsByTagName","appendChild","title","$refs","starknetPanelRef","toRaw","render","app","createApp","App","use","ElementPlus","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","loaded","__webpack_modules__","amdO","deferred","O","chunkIds","priority","notFulfilled","Infinity","j","every","r","n","getter","d","leafPrototypes","getProto","__proto__","mode","def","current","getOwnPropertyNames","definition","g","globalThis","Function","prop","Symbol","toStringTag","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}