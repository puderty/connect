{"version":3,"file":"js/app.719471de.js","mappings":"oDACAA,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQE,8BAAgCF,EAAQG,wBAA0BH,EAAQI,uBAAyBJ,EAAQK,qBAAuBL,EAAQM,mBAAqBN,EAAQO,uBAAyBP,EAAQQ,qBAAuBR,EAAQS,yBAAsB,EAErQT,EAAQS,oBAAsB,OAC9BT,EAAQQ,qBAAuB,QAC/BR,EAAQO,uBAAyB,UACjCP,EAAQM,mBAAqB,YAC7BN,EAAQK,qBAAuB,cAC/BL,EAAQI,uBAAyB,UACjCJ,EAAQG,wBAA0B,gBAClCH,EAAQE,8BAAgC,oB,qCCX5BQ,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACb,IAAIC,EAAmBC,MAAQA,KAAKD,kBAAqBb,OAAOe,OAAU,SAASC,EAAGC,EAAGC,EAAGC,QAC7EC,IAAPD,IAAkBA,EAAKD,GAC3B,IAAIG,EAAOrB,OAAOsB,yBAAyBL,EAAGC,GACzCG,KAAS,QAASA,GAAQJ,EAAEM,WAAaF,EAAKG,UAAYH,EAAKI,gBAClEJ,EAAO,CAAEK,YAAY,EAAMC,IAAK,WAAa,OAAOV,EAAEC,EAAI,IAE5DlB,OAAOC,eAAee,EAAGG,EAAIE,EACjC,EAAM,SAASL,EAAGC,EAAGC,EAAGC,QACTC,IAAPD,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,EACd,GACIU,EAAsBd,MAAQA,KAAKc,qBAAwB5B,OAAOe,OAAU,SAASC,EAAGa,GACxF7B,OAAOC,eAAee,EAAG,UAAW,CAAEU,YAAY,EAAMvB,MAAO0B,GACnE,EAAK,SAASb,EAAGa,GACbb,EAAE,WAAaa,CACnB,GACIC,EAAgBhB,MAAQA,KAAKgB,cAAiB,SAAUC,GACxD,GAAIA,GAAOA,EAAIR,WAAY,OAAOQ,EAClC,IAAIC,EAAS,CAAC,EACd,GAAW,MAAPD,EAAa,IAAK,IAAIb,KAAKa,EAAe,YAANb,GAAmBlB,OAAOiC,UAAUC,eAAeC,KAAKJ,EAAKb,IAAIL,EAAgBmB,EAAQD,EAAKb,GAEtI,OADAU,EAAmBI,EAAQD,GACpBC,CACX,EACII,EAAatB,MAAQA,KAAKsB,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMtC,GAAS,OAAOA,aAAiBoC,EAAIpC,EAAQ,IAAIoC,GAAE,SAAUG,GAAWA,EAAQvC,EAAQ,GAAI,CAC3G,OAAO,IAAKoC,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU1C,GAAS,IAAM2C,EAAKN,EAAUO,KAAK5C,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAS9C,GAAS,IAAM2C,EAAKN,EAAU,SAASrC,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKd,GAAUA,EAAOkB,KAAOR,EAAQV,EAAO7B,OAASsC,EAAMT,EAAO7B,OAAOgD,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACA/C,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQmD,wBAAqB,EAC7B,MAAMC,EAAc1C,EAAQ,OACtB2C,EAAqB3C,EAAQ,OAC7B4C,EAAY5C,EAAQ,OACpB6C,EAAU7C,EAAQ,OAClB8C,EAAU9C,EAAQ,OAClB+C,EAAkB/C,EAAQ,OAC1BgD,EAAM9B,EAAalB,EAAQ,QAC3BiD,EAAajD,EAAQ,OACrBkD,EAAWlD,EAAQ,OACnBmD,GAAK,EAAIL,EAAQM,kCACvB,MAAMX,EACFY,WAAAA,CAAYC,GAQR,GAPApD,KAAKqD,OAAS,IAAIR,EAAgBS,aAClCtD,KAAKuD,MAAQf,EAAYgB,eAAeC,UACxCzD,KAAK0D,iBAAmB,EAExB1D,KAAK2D,WAAa,EAElB3D,KAAK4D,aAAe,MACf,EAAIhB,EAAQiB,YAAYT,GACzB,MAAM,IAAIU,MAAM,0BAA0BV,KAE9CpD,KAAKoD,IAAMA,EACXpD,KAAK+D,eAAiB,KACtB/D,KAAKgE,uBAAyB,KAC9BhE,KAAKiE,kBAAoB,IAAIvB,EAAUwB,QAAQzB,EAAmB0B,uBAAyB1B,EAAmB0B,uBAClH,CACA,cAAIC,GACA,OAAOpE,KAAKuD,OAASf,EAAYgB,eAAea,UACpD,CAEAC,SAAAA,CAAUpC,GACN,GAAsB,qBAAXA,EAAEqC,KAAb,CAIA,GAFAzB,EAAI0B,SAAS,qBACb1B,EAAI0B,SAAStC,GACS,kBAAXA,EAAEqC,KAAmB,CAC5B,IAAIE,EAAMvC,EAAEqC,KACZ,GAAY,SAARE,EAEA,YADA3B,EAAI0B,SAAS,yBAAyBE,KAAKC,MAAMC,aAGzD,CACA5E,KAAKqD,OAAOwB,KAAK,UAAW3C,EAAEqC,KAVpB,CAWd,CACAO,OAAAA,CAAQC,GACJ,IAAIC,EACJlC,EAAI0B,SAAS,sBAA8C,QAAtBQ,EAAKhF,KAAKiF,cAA2B,IAAPD,OAAgB,EAASA,EAAG5B,IAAK2B,EAAMG,MAC1GlF,KAAKiF,YAAS3E,EACdN,KAAKqD,OAAOwB,KAAK,QAASE,EAC9B,CACAI,OAAAA,CAAQC,EAAIlD,GACR,MAAMmD,EAAU,CAAED,GAAIA,EAAIE,IAAKpD,EAAE0C,YACjC5E,KAAKqD,OAAOwB,KAAK,UAAWQ,EAChC,CACAE,MAAAA,CAAON,GACHA,EAAOO,UAAaT,GAAU/E,KAAKsE,UAAUS,GAC7CE,EAAOQ,QAAWV,GAAU/E,KAAK8E,QAAQC,GACzC/E,KAAKiF,OAASA,EACdjF,KAAKuD,MAAQf,EAAYgB,eAAekC,UACxC1F,KAAKqD,OAAOwB,KAAK,OACrB,CAEAc,SAAAA,CAAUC,GACN5F,KAAKqD,OAAOwB,KAAK,OAAQe,EAC7B,CAEAC,SAAAA,GACI,OAAOvE,EAAUtB,UAAM,OAAQ,GAAQ,YAInC,GAHIA,KAAK+D,gBACL+B,aAAa9F,KAAK+D,gBAElB/D,KAAKuD,OAASf,EAAYgB,eAAekC,WAAa1F,KAAKuD,OAASf,EAAYgB,eAAeuC,SAInG,GAAK/F,KAAKiF,QAcV,GAAIjF,KAAKiF,OAAOe,aAAeC,UAAUC,KAczCpD,EAAI0B,SAAS,yBAAyBE,KAAKC,MAAMC,eAAe5E,KAAKiF,UACrEjF,KAAKiF,OAAOkB,KAAK,QACjBnG,KAAK+D,eAAiBqC,WAAWpG,KAAK6F,UAAUQ,KAAKrG,MAAO,UAdxD,GADA8C,EAAI0B,SAAS,oBACTxE,KAAKuD,OAASf,EAAYgB,eAAekC,WAAa1F,KAAKuD,OAASf,EAAYgB,eAAeuC,QAAS,CACxGjD,EAAI0B,SAAS,2CAA4CxE,KAAKuD,MAAOvD,KAAKiF,OAAOe,YACjF,UACUhG,KAAKsG,eACf,CACA,MAAOpE,GACHY,EAAIyD,SAAS,sBACbvG,KAAK+D,eAAiBqC,WAAWpG,KAAK6F,UAAUQ,KAAKrG,MAAO,IAChE,CACJ,OAvBA,GADA8C,EAAI0B,SAAS,oBACTxE,KAAKuD,OAASf,EAAYgB,eAAekC,WAAa1F,KAAKuD,OAASf,EAAYgB,eAAeuC,QAAS,CACxGjD,EAAI0B,SAAS,iCACb,UACUxE,KAAKsG,eACf,CACA,MAAOpE,GACHY,EAAIyD,SAAS,sBACbvG,KAAK+D,eAAiBqC,WAAWpG,KAAK6F,UAAUQ,KAAKrG,MAAO,IAChE,CACJ,OAdA8C,EAAI0B,SAAS,mBAkCrB,GACJ,CACAgC,UAAAA,CAAWpD,EAAMpD,KAAKoD,IAAKqD,GAAU,GACjC,KAAK,EAAI7D,EAAQiB,YAAYT,GACzB,MAAM,IAAIU,MAAM,0BAA0BV,KAE9CpD,KAAKoD,IAAMA,EACNqD,GACD3D,EAAI0B,SAAS,sBAAuBxE,KAAKoD,KAAK,IAAIsB,MAAOgC,eAE7D1G,KAAKuD,MAAQf,EAAYgB,eAAea,WACzB,IAAIsC,gBAAgBvD,GAAKvC,IAAI,UAC5C,OAAO,IAAIgB,SAAQ,CAACD,EAASE,KACzB,MAAMmD,EAAS,IAAIhC,EAAGG,EAAK,IAC3BN,EAAI0B,SAAS,4BAA6BxE,KAAKoD,KAAK,IAAIsB,MAAOgC,eAC/D1G,KAAK4G,kBAAkB3B,IACnB,EAAIrC,EAAQiE,wBACZ/D,EAAI0B,SAAS,4BACbS,EAAO6B,QAAU,KACbhF,EAAO,IAAIgC,MAAM,iBACjBmB,EAAO8B,OAAO,IAIlBjE,EAAI0B,SAAS,4BACbS,EAAO+B,GAAG,SAAS,KACflF,EAAO,IAAIgC,MAAM,iBACjBmB,EAAO8B,OAAO,KAGtB9B,EAAOM,OAAS,KACZzC,EAAI0B,SAAS,iBACbxE,KAAKiH,kBAAkBzE,EAAY0E,uCAAuCC,UAC1EnH,KAAKuF,OAAON,GACZjF,KAAK6F,YACLjE,EAAQqD,EAAO,CAClB,GAET,CACAmC,aAAAA,GAEI,OADAtE,EAAI0B,SAAS,uBAAwBxE,KAAK2D,WAAY,KAAMnB,EAAY6E,yBAAyBC,QAC1FtH,KAAK2D,WAA4D,EAA9CnB,EAAY6E,yBAAyBC,MACnE,CACAC,iBAAAA,GACI,OAAOjG,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,IAAKA,KAAKoH,gBAAiB,CAEvBpH,KAAK2D,YAAc,EACnB,IAAI6D,EAAUxH,KAAKyH,mBAEnB,OADA3E,EAAI0B,SAAS,oBAAqBgD,GAAS,IAAI9C,MAAOgC,eAC/C1G,KAAKwG,WAAWgB,GAAS,EACpC,CAEI1E,EAAI0B,SAAS,wBAAyBxE,KAAK2D,YAAY,IAAIe,MAAOgC,cAE1E,GACJ,CACAE,iBAAAA,CAAkB3B,GACVjF,KAAKgE,wBACLhE,KAAKiH,kBAAkBzE,EAAY0E,uCAAuCQ,UAE9E1H,KAAK2H,cAAgB1C,EACrBjF,KAAKgE,uBAAyBoC,YAAW,KACjCpG,KAAK2H,eACL3H,KAAKiH,kBAAkBzE,EAAY0E,uCAAuCU,SAC9E,GACD5H,KAAK4D,aACZ,CACAqD,iBAAAA,CAAkB/B,GACd,IAAIF,EAEJ,GAAIE,GAAQ1C,EAAY0E,uCAAuCU,SAM3D,MAJA9B,aAAa9F,KAAKgE,wBACY,QAA7BgB,EAAKhF,KAAK2H,qBAAkC,IAAP3C,GAAyBA,EAAG+B,QAClE/G,KAAK2H,mBAAgBrH,EACrBwC,EAAI+E,YAAY7E,EAAS8E,cAAcC,IAAK,UAAW/H,KAAK2D,WAAWiB,YACjE,IAAId,MAAM,kBAGhB9D,KAAK2H,mBAAgBrH,EAErBwF,aAAa9F,KAAKgE,uBAE1B,CACAgE,qBAAAA,GACIhI,KAAKiE,kBAAkBgE,YAAYjI,KAAK0D,iBAAiBkB,WAAYnC,EAAmB0B,uBAC5F,CAUAsD,gBAAAA,GAGI,OAFAzH,KAAK0D,kBAAoB,EACzB1D,KAAK0D,iBAAmB1D,KAAK0D,iBAAmBlB,EAAY6E,yBAAyBC,OAC9E9E,EAAY6E,yBAAyBrH,KAAK0D,iBACrD,CAEAwE,gBAAAA,GACI,OAAO5G,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,GAAiC,YAA7BmI,SAASC,kBAETtF,EAAI0B,SAAS,eAAexE,KAAKuD,UAAUvD,KAAKiF,UAC5CjF,KAAKuD,OAASf,EAAYgB,eAAekC,WAAoC,qBAAhB1F,KAAKiF,aAH1E,CAIQnC,EAAI0B,SAAS,0BACb,UACUxE,KAAKsG,eACf,CACA,MAAOpE,GACHY,EAAIyD,SAAS,qBACjB,CAGR,CACJ,GACJ,CACAD,aAAAA,GACI,OAAOhF,EAAUtB,KAAMqI,eAAW,GAAQ,UAAWjF,EAAMpD,KAAKoD,KAC5D,GAAIpD,KAAKoE,WAEL,OADAtB,EAAI0B,SAAS,qCACN,IAAI3C,SAAQ,CAACD,EAASE,KACzB9B,KAAKqD,OAAOiF,KAAK,QAASpG,IACtBY,EAAI0B,SAAS,4CAA6CtC,GACnDJ,EAAOI,MAElBlC,KAAKqD,OAAOiF,KAAK,QAAQ,IACK,oBAAftI,KAAKiF,OACLnD,EAAO,IAAIgC,MAAM,iBAErBlC,EAAQ5B,KAAKiF,SACtB,IAGVnC,EAAI0B,SAAS,4DACb,IAAIiC,GAAU,EACd,OAAQzG,KAAKoH,kBAAoBpH,KAAKiF,OAClC,IACInC,EAAI0B,SAAS,+CAAgDxE,KAAK2D,WAAY8C,SACxEzG,KAAKwG,WAAWpD,EAAKqD,EAC/B,CACA,MAAO8B,GACHzF,EAAI0B,SAAS,qCAAsC+D,GACnDvI,KAAK2D,YAAc,EACnBP,EAAMpD,KAAKyH,mBACXhB,GAAU,CACd,CAGJ,GADA3D,EAAI0B,SAAS,mCAAoCxE,KAAK2D,WAAY3D,KAAKiF,SAClEjF,KAAKiF,QAAUjF,KAAKoH,gBAKrB,MAJAtE,EAAI0B,SAAS,2CAA4CxE,KAAK2D,WAAY3D,KAAKiF,QAC/EjF,KAAK2D,WAAa,EAClB3D,KAAKuD,MAAQf,EAAYgB,eAAeuC,QACxC/F,KAAK2F,UAAU,IAAI7B,MAAM,yBACnB,IAAIf,EAAWyF,gBAAgBzF,EAAW0F,wBAAwBC,iBAAkB,oBAElG,GACJ,CACAC,OAAAA,GACI,OAAOrH,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,UACUA,KAAKsG,gBAEX6B,SAASS,oBAAoB,mBAAoB5I,KAAKkI,iBAAiB7B,KAAKrG,OAC5EmI,SAASU,iBAAiB,mBAAoB7I,KAAKkI,iBAAiB7B,KAAKrG,MAC7E,CACA,MAAOkC,GAEH,MADAY,EAAI0B,SAAS,+BAAgCtC,GACvCA,CACV,CACJ,GACJ,CACA4G,UAAAA,GACI,OAAOxH,EAAUtB,UAAM,OAAQ,GAAQ,YAEnC,OADAA,KAAKuD,MAAQf,EAAYgB,eAAeuF,aACjC,IAAIlH,SAAQ,CAACD,EAASE,KACE,qBAAhB9B,KAAKiF,QAKhBjF,KAAKiF,OAAOQ,QAAWV,IACnB/E,KAAK8E,QAAQC,GACbnD,GAAS,EAEb5B,KAAKiF,OAAO8B,QACR/G,KAAK+D,gBACL+B,aAAa9F,KAAK+D,iBATlBnC,GAUJ,GAER,GACJ,CACAoH,aAAAA,GACI,MAAO,CACHzF,MAAOvD,KAAKuD,MACZH,IAAKpD,KAAKoD,IAElB,CAIA6F,WAAAA,CAAYlE,EAAOmE,EAASC,EAASC,EAAQC,GACrCrJ,KAAKsJ,sBACLtJ,KAAKqD,OAAOkG,eAAe,UAAWvJ,KAAKsJ,sBAE/CtJ,KAAKsJ,qBAAwBpH,GAAMZ,EAAUtB,UAAM,OAAQ,GAAQ,YAC/D,IAAIgF,EACJlC,EAAI0B,SAAS,mBAAmBtC,KAChC,IAAIsH,GAAc,EAAI7G,EAAQ8G,eAAevH,GAE7C,GAAIsH,EAAYE,QAAUF,EAAYE,OAAOnF,KAAM,CAC/C,IAAIoF,EAA4C,QAAlC3E,EAAKwE,EAAYE,OAAOnF,YAAyB,IAAPS,OAAgB,EAASA,EAAG4E,QAChFC,GAAU,EACd,GAAIF,GAEIN,EAAoB,CACpB,IAAIS,QAAoBT,EAAmBG,EAAYE,OAAOnF,MAC9DsF,EAAUC,EAAYC,iBAAoBD,EAAYE,aAClDF,EAAYC,iBACRD,EAAYE,cAAgBF,EAAYE,aAAa1C,OAAS,GAC9DxE,EAAI0B,SAAS,mCACbmF,EAASG,EAAYE,eAGrBlH,EAAI0B,SAAS,iCACbqF,GAAU,GAGtB,CAEJ,IAAKA,EACD,IACI,IAAIvE,EAAM4D,EAAQS,QACNrJ,IAARgF,GACAxC,EAAI0B,SAAS,8BACb4E,EAAOrE,EAAO,sBAGdoE,EAAQpE,EAAOO,EAEvB,CACA,MAAOpD,GACHY,EAAI0B,SAAS,4BAA4BtC,KACzCkH,EAAOrE,EAAO7C,EAAE0H,QACpB,CAER,CACJ,IACA5J,KAAKqD,OAAO2D,GAAG,UAAWhH,KAAKsJ,sBAC3BtJ,KAAKiK,aACLjK,KAAKqD,OAAOkG,eAAe,OAAQvJ,KAAKiK,aAE5CjK,KAAKiK,YAAe/H,IACZA,GACAY,EAAI0B,SAAS,mBAAmBtC,KAChCkH,EAAOrE,EAAO7C,EAAE0H,UAGhBR,EAAOrE,EAAO,gBAClB,EAEJ/E,KAAKqD,OAAO2D,GAAG,OAAQhH,KAAKiK,YAChC,CACAC,eAAAA,CAAgBC,GACRnK,KAAKoK,gBACLpK,KAAKqD,OAAOkG,eAAe,UAAWvJ,KAAKoK,gBAE/CpK,KAAKoK,eAAkBlI,GAAMZ,EAAUtB,UAAM,OAAQ,GAAQ,YAEzD8C,EAAI0B,SAAS,iBAAgB,IAAIE,MAAOgC,kCAAkCxE,KAC1E,IAAImI,GAAQ,EAAI1H,EAAQ8G,eAAevH,SACjCiI,EAASE,EACnB,IACArK,KAAKqD,OAAO2D,GAAG,UAAWhH,KAAKoK,eACnC,CACA9B,IAAAA,CAAKvD,EAAOuF,GACRtK,KAAKqD,OAAOiF,KAAKvD,EAAOuF,EAC5B,CACAC,GAAAA,CAAIxF,EAAOuF,GACPtK,KAAKqD,OAAOkH,IAAIxF,EAAOuF,EAC3B,CACAf,cAAAA,CAAexE,EAAOuF,GAClBtK,KAAKqD,OAAOkG,eAAexE,EAAOuF,EACtC,CACAnE,IAAAA,CAAKqE,EAASnF,GACV,OAAO/D,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,IAC+B,qBAAhBA,KAAKiF,SACZnC,EAAI0B,SAAS,8BAA8Ba,WAErCmF,KAEV1H,EAAI0B,SAAS,iBAAgB,IAAIE,MAAOgC,mCAAkC,EAAI/D,EAAQ8H,mBAAmBpF,MACrGrF,KAAKiF,QACLjF,KAAKiF,OAAOkB,MAAK,EAAIxD,EAAQ8H,mBAAmBpF,GAExD,CACA,MAAOnD,GACHlC,KAAKmF,QAAQE,EAAQD,GAAIlD,EAC7B,CACJ,GACJ,CACAwI,wBAAAA,CAAyBpF,GACrB,OAAOhE,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,GAAmB,qBAARsF,EACP,OACJ,IAAIqF,EAAS,CACTjB,OAAQ,CACJnF,KAAMe,IAGVsF,GAAU,EAAIjI,EAAQ8H,mBAAmBnF,GAC7CxC,EAAI0B,SAAS,kCACb1B,EAAI0B,SAASoG,GACbA,GAAU,EAAIjI,EAAQ8H,mBAAmBE,GACzC3K,KAAKqD,OAAOwB,KAAK,UAAW+F,EAChC,GACJ,CACAC,MAAAA,CAAOV,GACCnK,KAAK8K,aACL9K,KAAKqD,OAAOkG,eAAe,OAAQvJ,KAAK8K,aAE5C9K,KAAK8K,YAAc,IAAMxJ,EAAUtB,UAAM,OAAQ,GAAQ,YACrD8C,EAAI0B,SAAS,iBAAgB,IAAIE,MAAOgC,wCAClCyD,GACV,IACAnK,KAAKqD,OAAO2D,GAAG,OAAQhH,KAAK8K,aAC5B9K,KAAKgI,uBACT,EAEJ5I,EAAQmD,mBAAqBA,C,oCC3d7B,IAAIxC,EAAmBC,MAAQA,KAAKD,kBAAqBb,OAAOe,OAAU,SAASC,EAAGC,EAAGC,EAAGC,QAC7EC,IAAPD,IAAkBA,EAAKD,GAC3B,IAAIG,EAAOrB,OAAOsB,yBAAyBL,EAAGC,GACzCG,KAAS,QAASA,GAAQJ,EAAEM,WAAaF,EAAKG,UAAYH,EAAKI,gBAClEJ,EAAO,CAAEK,YAAY,EAAMC,IAAK,WAAa,OAAOV,EAAEC,EAAI,IAE5DlB,OAAOC,eAAee,EAAGG,EAAIE,EACjC,EAAM,SAASL,EAAGC,EAAGC,EAAGC,QACTC,IAAPD,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,EACd,GACIU,EAAsBd,MAAQA,KAAKc,qBAAwB5B,OAAOe,OAAU,SAASC,EAAGa,GACxF7B,OAAOC,eAAee,EAAG,UAAW,CAAEU,YAAY,EAAMvB,MAAO0B,GACnE,EAAK,SAASb,EAAGa,GACbb,EAAE,WAAaa,CACnB,GACIC,EAAgBhB,MAAQA,KAAKgB,cAAiB,SAAUC,GACxD,GAAIA,GAAOA,EAAIR,WAAY,OAAOQ,EAClC,IAAIC,EAAS,CAAC,EACd,GAAW,MAAPD,EAAa,IAAK,IAAIb,KAAKa,EAAe,YAANb,GAAmBlB,OAAOiC,UAAUC,eAAeC,KAAKJ,EAAKb,IAAIL,EAAgBmB,EAAQD,EAAKb,GAEtI,OADAU,EAAmBI,EAAQD,GACpBC,CACX,EACII,EAAatB,MAAQA,KAAKsB,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMtC,GAAS,OAAOA,aAAiBoC,EAAIpC,EAAQ,IAAIoC,GAAE,SAAUG,GAAWA,EAAQvC,EAAQ,GAAI,CAC3G,OAAO,IAAKoC,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU1C,GAAS,IAAM2C,EAAKN,EAAUO,KAAK5C,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAS9C,GAAS,IAAM2C,EAAKN,EAAU,SAASrC,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKd,GAAUA,EAAOkB,KAAOR,EAAQV,EAAO7B,OAASsC,EAAMT,EAAO7B,OAAOgD,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACA/C,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ2L,uBAAoB,EAC5B,MAAMC,EAAYlL,EAAQ,OACpBmL,EAAanL,EAAQ,OACrB2C,EAAqB3C,EAAQ,OAC7BoL,EAAiBpL,EAAQ,OACzB0C,EAAc1C,EAAQ,OACtB+C,EAAkB/C,EAAQ,OAC1B4C,EAAY5C,EAAQ,OACpB6C,EAAU7C,EAAQ,OAClBqL,EAAWrL,EAAQ,OACnBsL,EAAQtL,EAAQ,OAChBuL,EAAavL,EAAQ,OACrBgD,EAAM9B,EAAalB,EAAQ,QAC3BwL,EAAQxL,EAAQ,OAChBkD,EAAWlD,EAAQ,OACnByL,EAAQzL,EAAQ,OAChB0L,EAA4B1L,EAAQ,OAC1C,MAAMiL,EACF5H,WAAAA,CAAYsI,OAAUnL,GAClBN,KAAKqD,OAAS,IAAIR,EAAgBS,aAClCtD,KAAK0L,aAAe,IAAIF,EAA0BG,wBAAwB,QAE1E3L,KAAK4L,eAAiB,IAAIlJ,EAAUwB,QAAQzB,EAAmBoJ,4BAA8BJ,EAAShJ,EAAmBoJ,6BACzH7L,KAAK8L,qBAAuB,IAAIpJ,EAAUwB,QAAQzB,EAAmBsJ,qBAAuBN,EAAShJ,EAAmBsJ,sBACxH/L,KAAKgM,OAAS,IAAIb,EAASc,cAC3B,IAAIC,GAAQ,EAAIX,EAAMY,WAGtB,IAFA,EAAIb,EAAM9G,UAAU,WAAY0H,GAChCpJ,EAAIsJ,UAAU,8BACVF,EAAO,CAEP,MAAMG,EAAcrM,KAAKsM,0BACzB,EAAIhB,EAAM9G,UAAU,eAAgB6H,GACpCrM,KAAKgM,OAAS,IAAIb,EAASc,cAAcI,EAC7C,CACArM,KAAKuM,WAAavM,KAAKwM,sBACvBxM,KAAKyM,eAAezM,KAAKuM,YAEzBvM,KAAK0M,UAAY,IAAI1B,EAAUzI,mBAAmBC,EAAYmK,uBAC9D3M,KAAK4M,UAAYlI,KAAKC,MAEtB3E,KAAK6M,kBAAoB,GACzB7M,KAAK8M,aAAe,GACpBhK,EAAI0B,SAAS,yCAAyCxE,KAAK6M,oBAC/D,CACAE,gBAAAA,GACI,IAAIC,EAAUtI,KAAKC,MACfqI,GAAWhN,KAAK4M,YAChB5M,KAAK4M,UAAYI,EAAU,GAE/BhN,KAAK4M,UAAYI,CACrB,CACAC,iBAAAA,CAAkBC,GACd,IAAIC,GAAY,EAAI9B,EAAWZ,mBAAmByC,GAElDlN,KAAK4L,eAAewB,gBAAgBD,EAAW1K,EAAmB4K,wBACtE,CACAf,sBAAAA,GAEI,MAAMgB,EAAKtN,KAAK4L,eAAe2B,cAAc9K,EAAmB4K,yBAC1DG,EAAUF,EAChB,GAAsB,iBAAXE,EAAqB,CAC5B1K,EAAI0B,SAAS,0BACb1B,EAAI0B,SAASgJ,GACb,IAAInB,GAAc,EAAIhB,EAAW5B,eAAe+D,GAChD,OAAOnB,CACX,CAIA,OAFIrM,KAAK4L,eAAe6B,aAEjB,IACX,CACAhB,cAAAA,CAAeS,GACX,IAAIQ,EAAa,CACbC,WAAW,EAAIhL,EAAQiL,aAAaV,EAAQS,WAC5CE,WAAW,EAAIlL,EAAQiL,aAAaV,EAAQW,YAEhD/K,EAAI0B,SAAS,eACb,IAAI2I,GAAY,EAAI9B,EAAWZ,mBAAmBiD,GAClD5K,EAAI0B,SAAS2I,GAEbnN,KAAK4L,eAAewB,gBAAgBD,EAAW1K,EAAmBqL,qBACtE,CACAtB,mBAAAA,GACI,MAAMc,EAAKtN,KAAK4L,eAAe2B,cAAc9K,EAAmBqL,sBAC1DN,EAAUF,EAChB,GAAsB,iBAAXE,EAAqB,CAE5B1K,EAAI0B,SAAS,sBACb1B,EAAI0B,SAASgJ,GACb,IAAIO,GAAiB,EAAI1C,EAAW5B,eAAe+D,GACnD1K,EAAI0B,SAAS,eACb1B,EAAI0B,SAASuJ,GACb,IAAIb,EAAU,CACVS,WAAW,EAAIhL,EAAQqL,gBAAgBD,EAAeJ,WACtDE,WAAW,EAAIlL,EAAQqL,gBAAgBD,EAAeF,YAE1D,OAAOX,CACX,CAEI,OAAO,EAAI9B,EAAM6C,kBAEzB,CACAC,eAAAA,GAEI,OADApL,EAAI0B,SAAS,yBAAyBxE,KAAK6M,qBACpC7M,KAAK6M,kBAAkBvF,OAAS,CAC3C,CACA6G,OAAAA,CAAQC,GACJ,OAAO9M,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,aAAa,EAAIoL,EAAMiD,SAASD,EAAOlD,EAAeoD,sBAAuBpD,EAAeqD,qBAC5FvO,KAAKuM,WACT,GACJ,CACAiC,YAAAA,CAAaC,GACT,OAAOnN,EAAUtB,KAAMqI,eAAW,GAAQ,UAAWqG,EAAOC,GAAY,GACpE,IAAI3J,EAAI4J,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAGpD,GAFAvP,KAAKqD,OAAOwB,KAAK6J,EAAMtJ,GAAIsJ,IAEtBC,EAAW,OACN3O,KAAKwP,QAAQd,EAAMtJ,IAAI,GAC7B,IAAIgJ,EAA4F,QAAnFpJ,EAAKhF,KAAK4L,eAAe6D,QAAQhN,EAAmBiN,iCAA8C,IAAP1K,OAAgB,EAASA,EAAGwI,QACpI,GAAIY,EAAO,CACP,IAAIuB,EAAWjB,EACf,GAAmF,QAA9EG,EAAgC,QAA1BD,EAAKe,EAASjG,cAA2B,IAAPkF,OAAgB,EAASA,EAAGrK,YAAyB,IAAPsK,OAAgB,EAASA,EAAGe,UAAW,CAE9H,IAAIC,EAAoB7P,KAAK0L,aAAaoE,4BAA2G,QAA9Ef,EAAgC,QAA1BD,EAAKa,EAASjG,cAA2B,IAAPoF,OAAgB,EAASA,EAAGvK,YAAyB,IAAPwK,OAAgB,EAASA,EAAGnF,SACzL,GAAIiG,EAAmB,CACnB,IAAIE,EAAY,CACZC,QAAwF,QAA9Ef,EAAgC,QAA1BD,EAAKW,EAASjG,cAA2B,IAAPsF,OAAgB,EAASA,EAAGzK,YAAyB,IAAP0K,OAAgB,EAASA,EAAGb,MAC5HwB,UAA0F,QAA9ET,EAAgC,QAA1BD,EAAKS,EAASjG,cAA2B,IAAPwF,OAAgB,EAASA,EAAG3K,YAAyB,IAAP4K,OAAgB,EAASA,EAAGS,UAC9HK,cAAeJ,EACfK,YAA4F,QAA9Eb,EAAgC,QAA1BD,EAAKO,EAASjG,cAA2B,IAAP0F,OAAgB,EAASA,EAAG7K,YAAyB,IAAP8K,OAAgB,EAASA,EAAGa,aAEhIpG,QAAoB9J,KAAK0L,aAAayE,uBAAuBJ,GAC7DjG,EAAYsG,uBACZtG,EAAYsG,sBAAsBC,SAASC,GAAUhP,EAAUtB,UAAM,OAAQ,GAAQ,YAEjFA,KAAK+M,yBACC/M,KAAKuQ,YAAYvQ,KAAK4M,UAAUhI,WAAY0L,EAAOlC,EAC7D,KAER,MAEIpO,KAAK+M,yBACC/M,KAAKuQ,YAAYvQ,KAAK4M,UAAUhI,WAA2F,QAA9E2K,EAAgC,QAA1BD,EAAKK,EAASjG,cAA2B,IAAP4F,OAAgB,EAASA,EAAG/K,YAAyB,IAAPgL,OAAgB,EAASA,EAAGK,UAAWxB,EAExL,CACJ,CACJ,CACJ,GACJ,CACAoC,cAAAA,CAAepC,GACX,OAAO9M,EAAUtB,UAAM,OAAQ,GAAQ,YAGnC,GAFA8C,EAAIsJ,UAAU,yCACdtJ,EAAI0B,SAAS,uCAAuC4J,KAC9B,kBAAVA,GAAwC,IAAjBA,EAAM9G,OACrC,MAAM,IAAIxD,MAAM,6BAEpBhB,EAAI0B,SAAS,wDACPxE,KAAK8I,YAAW,GACtB9I,KAAK4L,eAAe3D,YAAYmG,EAAO3L,EAAmBiN,0BAC1D5M,EAAI0B,SAAS,oDACPxE,KAAK2I,SAAQ,EACvB,GACJ,CACA8H,cAAAA,GACI,IAAIrC,GAAQ,EAAIzL,EAAQ+N,iBACxB5N,EAAI0B,SAAS,yBAAyB4J,KACtCtL,EAAIsJ,UAAU,+CACdpM,KAAK8M,aAAesB,EACpB,MAAMuC,EAAO,CACTC,UAAWxC,EACXyC,SAAU7Q,KAAKgM,OAAO8E,mBAAmBnD,WAE7C,OAAOgD,CACX,CACAhI,OAAAA,GACI,OAAOrH,EAAUtB,KAAMqI,eAAW,GAAQ,UAAW0I,GAAc,GAC/D/Q,KAAKgR,SAAU,IAAItM,MAAOuM,WAC1B,EAAI3F,EAAM9G,UAAU,wBAAyBxE,KAAKgR,SAClDlO,EAAIsJ,UAAU,oCACd,IAAI8E,EAAgBlR,KAAK4L,eAAe6D,QAAQhN,EAAmBiN,0BAEnE,IAAItB,EAAQpO,KAAK8M,aAGjB,GAFAhK,EAAI0B,SAAS,yBAAyB4J,KAElC2C,EAAa,CACgB,qBAAlBG,GAAmD,OAAlBA,IACxCpO,EAAI0B,SAAS,yBAAyB0M,KACtC9C,EAAQ8C,EAAc1D,SAE1B,IAAI2D,EAAwBnR,KAAK4L,eAAe6D,QAAQhN,EAAmB2O,qCACvED,IACAnR,KAAK6M,kBAAoBsE,EAAsB3D,SAC/C,EAAIlC,EAAM9G,UAAU,wDAAwDxE,KAAK6M,sBAErF/J,EAAIsJ,UAAU,2CAClB,CACA,GAAI2E,EAAa,CAEb,MAAM1E,EAAcrM,KAAKsM,yBACrBD,IACArM,KAAKgM,OAAS,IAAIb,EAASc,cAAcI,GAEjD,CACAvJ,EAAI0B,SAAS,yBAAyBxE,KAAKgM,OAAO8E,mBAAmBnD,aAErE3N,KAAK4L,eAAe3D,YAAYmG,EAAO3L,EAAmBiN,0BAC1D,IAAI2B,QAAiBrR,KAAKmO,QAAQC,GAGlC,OAFAtL,EAAI0B,SAAS,uBAAuB6M,KACpCrR,KAAK4L,eAAe3D,YAAYoJ,EAAU,OACnC,IAAIxP,SAAQ,CAACD,EAASE,KAEzB9B,KAAK0M,UAAU7B,QAAO,IAAMvJ,EAAUtB,UAAM,OAAQ,GAAQ,YACxD8C,EAAI0B,SAAS,wBACb1B,EAAIsJ,UAAU,sBACd,MAAMkF,GAAU,IAAI5M,MAAOuM,WAC3B,EAAI3F,EAAM9G,UAAU,uBAAwB8M,EAAUtR,KAAKgR,SAE3DhR,KAAKqD,OAAOiF,KAAKtI,KAAK4M,UAAUhI,YAAaH,GAAQnD,EAAUtB,UAAM,OAAQ,GAAQ,YAEjF,GAAIyE,GAAOA,EAAI8M,MAAO,CAClBzO,EAAIyD,SAAS,qBACbzD,EAAIsJ,UAAU,iCACRpM,KAAK0M,UAAU5D,aACrB,IAAIyI,EAAQ,IAAIzN,MAChByN,EAAM3H,QAAUnF,EAAI8M,MAAM3H,QAC1B2H,EAAMC,KAAO/M,EAAI8M,MAAMrM,KAAKN,WAE5B9C,EAAOyP,EACX,CAEAvR,KAAK+M,mBACL/M,KAAKqD,OAAOiF,KAAKtI,KAAK4M,UAAUhI,YAAaH,GAAQnD,EAAUtB,UAAM,OAAQ,GAAQ,YAEjF,GAAIyE,GAAOA,EAAI8M,MAAO,CAClBzO,EAAIyD,SAAS,yBACbzD,EAAIsJ,UAAU,qCACRpM,KAAK0M,UAAU5D,aACrB,IAAIyI,EAAQ,IAAIzN,MAChByN,EAAM3H,QAAUnF,EAAI8M,MAAM3H,QAC1B2H,EAAMC,KAAO/M,EAAI8M,MAAMrM,KAAKN,WAE5B9C,EAAOyP,EACX,CACAvR,KAAK+M,mBACLjK,EAAI0B,SAAS,0CAA0CxE,KAAK4M,aAC5D9J,EAAIsJ,UAAU,yCACd,MAAMqF,GAAQ,IAAI/M,MAAOuM,WACzB,EAAI3F,EAAM9G,UAAU,oCAAqCiN,EAAQzR,KAAKgR,eAEhEhR,KAAK0R,4BAA4B1R,KAAK4M,UAAUhI,WAAYwJ,GAElEtL,EAAI0B,SAAS,yBAAyBxE,KAAK4M,aAC3C9J,EAAIsJ,UAAU,8BACRpM,KAAK0L,aAAaiG,KAAK3R,KAAK4R,QAAQvL,KAAKrG,OAC/C4B,GACJ,MACAkB,EAAI0B,SAAS,0CAA0CxE,KAAK4M,aAC5D9J,EAAIsJ,UAAU,+BACd,MAAMyF,GAAS,IAAInN,MAAOuM,WAC1B,EAAI3F,EAAM9G,UAAU,iCAAkCqN,EAAS7R,KAAKgR,eAC9DhR,KAAK0M,UAAUvG,MAAK,IAAM7E,EAAUtB,UAAM,OAAQ,GAAQ,YAC5D8C,EAAI0B,SAAS,wCACPxE,KAAK0M,UAAU/D,UAChBmJ,OAAOvJ,KACR,EAAI+C,EAAM9G,UAAU,kCAAmC+D,GACvDzG,EAAOyG,EAAI,GAEnB,KAAI,CACAnD,GAAIpF,KAAK4M,UAAUhI,WACnBmN,QAASvP,EAAYwP,oBACrBC,OAAQhH,EAAWvL,mBACnBgK,OAAQ,CACJ0E,MAAOA,IAGnB,MACAtL,EAAI0B,SAAS,mBACb1B,EAAIsJ,UAAU,kDACRpM,KAAK0M,UAAUvG,MAAK,IAAM7E,EAAUtB,UAAM,OAAQ,GAAQ,YAC5D8C,EAAI0B,SAAS,wCACPxE,KAAK0M,UAAU/D,UAChBmJ,OAAOvJ,KACR,EAAI+C,EAAM9G,UAAU,kCAAmC+D,GACvDzG,EAAOyG,EAAI,GAEnB,KAAI,CACAnD,GAAIpF,KAAK4M,UAAUhI,WACnBmN,QAASvP,EAAYwP,oBACrBC,OAAQhH,EAAWrL,qBACnB8J,OAAQ,CACJwI,MAAOb,KAIfrR,KAAK0M,UAAUxC,iBAAiBnF,IAC5B,IAAIC,EAGJ,GAFAlC,EAAI0B,SAAS,0BACb1B,EAAI0B,SAASO,KACP,WAAYA,MAAY,SAAUA,EAAM,WAE1C,YADA/E,KAAKwO,aAAazJ,GAAO,GAG7B,IAAI4E,EAAsC,QAA5B3E,EAAKD,EAAM2E,OAAOnF,YAAyB,IAAPS,OAAgB,EAASA,EAAG4E,QAC9E,GAAsB,qBAAXD,EAAwB,CAC/BA,EAASA,EAAOwI,QAAQ,KAAM,KAC9B,IAAIC,GAAgB,EAAI/G,EAAW5B,eAAeE,GACrB,kBAAlByI,GAA8B,aAAcA,GAAiBA,EAAcvB,UAAYuB,EAAcvB,SAASvJ,OAAS,IAC9HtH,KAAK6M,kBAAoBuF,EAAcvB,SACvC/N,EAAI0B,SAAS,6CAA6CxE,KAAK6M,qBAG/D7M,KAAK4L,eAAe3D,YAAYjI,KAAK6M,kBAAmBpK,EAAmB2O,qCAE3EpR,KAAKiN,kBAAkBjN,KAAKgM,OAAO8E,oBAE3C,CAEA9Q,KAAKwO,aAAazJ,EAAOA,EAAMkN,SAAWhH,EAAWzL,uBAAuB,GAEpF,MACAQ,KAAK0M,UAAU/D,UAAUmJ,OAAOvJ,KAC5B,EAAI+C,EAAM9G,UAAU,kCAAmC+D,GACvDzG,EAAOyG,EAAI,GACb,GAEV,GACJ,CACAO,UAAAA,GACI,OAAOxH,EAAUtB,KAAMqI,eAAW,GAAQ,UAAW0I,GAAc,SACzD/Q,KAAK0M,UAAU5D,aACrBhG,EAAIsJ,UAAU,sBAGdpM,KAAK4L,eAAe6B,WAAWhL,EAAmBiN,0BAC7CqB,IACD/Q,KAAK4L,eAAe6B,WAAWhL,EAAmB2O,qCAClDpR,KAAK6M,kBAAoB,IACzB,EAAIvB,EAAM9G,UAAU,2DAA2DxE,KAAK6M,qBAE5F,GACJ,CACAwF,qBAAAA,CAAsBjE,EAAOkE,GACzBtS,KAAK0L,aAAa6G,yBAAyBnE,EAAOkE,EACtD,CACArJ,WAAAA,CAAYlE,EAAOoE,EAASqJ,GACxBxS,KAAK0M,UAAUzD,aAAY,EAAIoC,EAAWZ,mBAAmB1F,IAAS4E,IAGlE,GAFAA,EAASA,EAAOwI,QAAQ,KAAM,KAC9BrP,EAAI0B,SAAS,oBAAoBmF,KACX,qBAAXA,EAAwB,CAC/B,IAAI8I,GAAS,EAAIpH,EAAW5B,eAAeE,GACvCrE,EAAMmN,EAAO7I,QACjB,IAAI1I,EAgBJ,OAfIoE,EAAIoN,YAAYC,WAAW,KAC3BzR,EAASoE,GAGLmN,EAAO5B,UAAY4B,EAAO5B,SAASvJ,OAAS,IAC5CtH,KAAK6M,kBAAoB4F,EAAO5B,SAChC7Q,KAAK4L,eAAe3D,YAAYjI,KAAK6M,kBAAmBpK,EAAmB2O,qCAC3EtO,EAAI0B,SAAS,yCAAyCxE,KAAK6M,qBAC3D/J,EAAI0B,SAAS,kCAAiC,EAAI7B,EAAQiL,aAAa5N,KAAKgM,OAAOkB,QAAQS,cAE3F3N,KAAKiN,kBAAkBjN,KAAKgM,OAAO8E,qBAEvC5P,EAASlB,KAAKgM,OAAO9C,QAAQ5D,EAAKtF,KAAK6M,oBAE3C/J,EAAI0B,SAAS,oBAAoBtD,KAC1BA,CACX,CACgB,GACjBiI,EAASqJ,GAAOI,GAER,IAAI/Q,SAAQ,CAACD,EAASE,IAAWR,EAAUtB,UAAM,OAAQ,GAAQ,YACpE,IAAI6P,EAAoB7P,KAAK0L,aAAaoE,4BAA4B8C,EAAahJ,SACnF,GAAIiG,EAAmB,CACnB,IAAIE,EAAY,CACZC,QAAS4C,EAAaxE,MACtBwB,UAA4B,OAAjBgD,QAA0C,IAAjBA,OAA0B,EAASA,EAAahD,UACpFK,cAAeJ,EACfK,YAA8B,OAAjB0C,QAA0C,IAAjBA,OAA0B,EAASA,EAAa1C,aAEtF2C,QAAkB7S,KAAK0L,aAAayE,uBAAuBJ,GAC/DnO,EAAQiR,EACZ,MAEIjR,EAAQ,CACJmI,gBAAgB,GAG5B,OAER,CACA6H,OAAAA,CAAQtM,GACJ,OAAOhE,EAAUtB,UAAM,OAAQ,GAAQ,YACnC8C,EAAI0B,SAAS,uBAAuBc,KACpCxC,EAAIsJ,UAAU,wBACd,IAAIxC,EAAUtE,EACdxC,EAAI0B,SAAS,gDAAgDoF,EAAQtC,UAErE,IAAI8G,EAAQpO,KAAK4L,eAAe6D,QAAQhN,EAAmBiN,0BAC3D5M,EAAI0B,SAAS,+BAAyC,OAAV4J,QAA4B,IAAVA,OAAmB,EAASA,EAAMZ,WAChGxN,KAAK+M,mBACL,MAAM1H,EAAU,CACZD,GAAIpF,KAAK4M,UAAUhI,WACnBqN,OAAQhH,EAAWtL,uBACnBoS,QAASvP,EAAYwP,oBACrBtI,OAAQ,CACJE,QAAS,CACLwE,MAAiB,OAAVA,QAA4B,IAAVA,OAAmB,EAASA,EAAMZ,QAC3D5D,QAASA,EACTkJ,IAAKtQ,EAAYuQ,4BAiB7B,OAbA/S,KAAKqD,OAAOiF,KAAKtI,KAAK4M,UAAUhI,YAAaH,GAAQnD,EAAUtB,UAAM,OAAQ,GAAQ,YAE7EyE,GAAOA,EAAI8M,MACXzO,EAAIyD,SAAS,KAAI,IAAI7B,MAAOgC,0CAEvBjC,IAAQA,EAAI8M,OACjBzO,EAAI0B,SAAS,iBAAgB,IAAIE,MAAOgC,uCAAuC1G,KAAK4M,sBAE5F,YACM5M,KAAK0M,UAAUvG,MAAK,IAAM7E,EAAUtB,UAAM,OAAQ,GAAQ,YAE5D,OADA8C,EAAI0B,SAAS,wCACAxE,KAAK0M,UAAU/D,SAChC,KAAItD,GACGrF,KAAK4M,SAChB,GACJ,CACAoG,gBAAAA,CAAiBC,EAASC,GACtB,OAAO5R,EAAUtB,KAAMqI,eAAW,GAAQ,UAAW+F,EAAO+E,EAAcL,EAAMtQ,EAAYuQ,0BACxF/S,KAAK+M,mBACL,MAAM1H,EAAU,CACZD,GAAIpF,KAAK4M,UAAUhI,WACnBqN,OAAQhH,EAAWtL,uBACnBoS,QAASvP,EAAYwP,oBACrBtI,OAAQ,CACJE,QAAS,CACLwE,MAAOA,EACPxE,QAASuJ,EACTL,IAAKA,KAIjB9S,KAAKqD,OAAOiF,KAAKtI,KAAK4M,UAAUhI,YAAaH,GAAQnD,EAAUtB,UAAM,OAAQ,GAAQ,YAE7EyE,GAAOA,EAAI8M,MACXzO,EAAIyD,SAAS,KAAI,IAAI7B,MAAOgC,0CAEvBjC,IAAQA,EAAI8M,OACjBzO,EAAI0B,SAAS,iBAAgB,IAAIE,MAAOgC,uCAAuC1G,KAAK4M,sBAE5F,YACM5M,KAAK0M,UAAUvG,MAAK,IAAM7E,EAAUtB,UAAM,OAAQ,GAAQ,YAE5D,OADA8C,EAAI0B,SAAS,wCACAxE,KAAK0M,UAAU/D,SAChC,KAAItD,EACR,GACJ,CACAc,IAAAA,CAAKiN,GACD,OAAO9R,EAAUtB,KAAMqI,eAAW,GAAQ,UAAW/C,EAAKwN,EAAMtQ,EAAYuQ,0BAIxE,GAFAjQ,EAAI0B,SAAS,uBAAuBc,KACpCxC,EAAIsJ,UAAU,qBACTpM,KAAKkO,kBAEN,MAAM,IAAIpK,MAAM,yBAEpB,IAAI8F,EAAU5J,KAAKgM,OAAOqH,QAAQ/N,EAAKtF,KAAK6M,mBAC5C/J,EAAI0B,SAAS,gDAAgDoF,EAAQtC,UACrExE,EAAI+E,YAAY7E,EAAS8E,cAAcC,IAAK,WAAY6B,EAAQtC,OAAO1C,YAEvE,IAAIwJ,EAAQpO,KAAK4L,eAAe6D,QAAQhN,EAAmBiN,0BA8B3D,OA7BA5M,EAAI0B,SAAS,+BAAyC,OAAV4J,QAA4B,IAAVA,OAAmB,EAASA,EAAMZ,iBAE1FxN,KAAK0L,aAAa4H,kBAA4B,OAAVlF,QAA4B,IAAVA,OAAmB,EAASA,EAAMZ,QAAS5D,EAAS5J,KAAKgT,iBAAiB3M,KAAKrG,MAAOA,KAAK4R,QAAQvL,KAAKrG,OA2B7JA,KAAK4M,SAChB,GACJ,CACA4C,OAAAA,CAAQ+D,EAASC,GACb,OAAOlS,EAAUtB,KAAMqI,eAAW,GAAQ,UAAWiI,EAAOnH,EAASsK,OAASnT,GAC1E,IAAgB,IAAZ6I,EAAkB,CAClB,MAAM9D,EAAU,CACZD,GAAIkL,EACJyB,QAASvP,EAAYwP,oBACrB9Q,QAAQ,SAENlB,KAAK0M,UAAUvG,MAAK,IAAM7E,EAAUtB,UAAM,OAAQ,GAAQ,YAE5D,OADA8C,EAAI0B,SAAS,wCACAxE,KAAK0M,UAAU/D,SAChC,KAAItD,EACR,MACK,GAAIoO,EAAQ,CACb,MAAMpO,EAAU,CACZD,GAAIkL,EACJyB,QAASvP,EAAYwP,oBACrBT,MAAO,CACHrM,KAAMuO,EAAOvO,KACb0E,QAAS6J,EAAO7J,gBAGlB5J,KAAK0M,UAAUvG,MAAK,IAAM7E,EAAUtB,UAAM,OAAQ,GAAQ,YAE5D,OADA8C,EAAI0B,SAAS,wCACAxE,KAAK0M,UAAU/D,SAChC,KAAItD,EACR,CACJ,GACJ,CAEAkL,WAAAA,CAAYD,EAAOV,EAAWxB,GAC1B,OAAO9M,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,MAAMqF,EAAU,CACZD,GAAIkL,EACJyB,QAASvP,EAAYwP,oBACrBC,OAAQhH,EAAWzL,uBACnBkK,OAAQ,CACJnF,KAAM,CACFqL,UAAWA,EACXxB,MAAOA,WAIbpO,KAAK0M,UAAUvG,MAAK,IAAM7E,EAAUtB,UAAM,OAAQ,GAAQ,YAE5D,OADA8C,EAAI0B,SAAS,wCACAxE,KAAK0M,UAAU/D,SAChC,KAAItD,EACR,GACJ,CAKAqM,2BAAAA,CAA4BpB,EAAOlC,GAC/B,OAAO9M,EAAUtB,UAAM,OAAQ,GAAQ,YAEnCA,KAAKqD,OAAOiF,KAAKgI,GAAQoD,GAAoBpS,EAAUtB,UAAM,OAAQ,GAAQ,YACzE,IAAIgF,EAAI4J,EAER,GAAI8E,EAAgBxS,OAAQ,CACxB,IAAIyS,EAAUD,EAAgBxS,OAAOyS,QACjCC,EAAeF,EAAgBxS,OAAOqD,KAC1C,GAAIqP,EACA,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAatM,OAAQuM,IAAK,CAC1C,IAAIvO,EAAMsO,EAAaC,GACvB,GAAIvO,GAAOA,EAAI8I,OAASA,EAAO,CAC3B,IAAIwB,EAAYtK,EAAIsK,UACpB9M,EAAIsJ,UAAU,uBAEd,IAAIyD,EAAoB7P,KAAK0L,aAAaoE,4BAA4BxK,EAAIsE,SACtEiG,SACM7P,KAAK0M,UAAUhC,yBAAyBpF,GAC9CxC,EAAI0B,SAAS,wBAGPxE,KAAK0M,UAAUhC,yBAAyBpF,GAE9CtF,KAAK+M,yBACC/M,KAAKuQ,YAAYvQ,KAAK4M,UAAUhI,WAAYgL,EAAWxB,GAErE,CACJ,CAGAuF,IACA3T,KAAK+M,yBACC/M,KAAK0R,4BAA4B1R,KAAK4M,UAAUhI,WAAYwJ,GAE1E,MAEItL,EAAI0B,SAAS,0BAA2D,QAAhCQ,EAAK0O,EAAgBnC,aAA0B,IAAPvM,OAAgB,EAASA,EAAGE,UAA2C,QAAhC0J,EAAK8E,EAAgBnC,aAA0B,IAAP3C,OAAgB,EAASA,EAAGhF,UAEnM,MACA9G,EAAI0B,SAAS,sBACb1B,EAAIsJ,UAAU,sBACd,MAAM0H,GAAW,IAAIpP,MAAOuM,WAC5B,EAAI3F,EAAM9G,UAAU,oBAAqBsP,EAAW9T,KAAKgR,SACzD,MAAM3L,EAAU,CACZD,GAAIkL,EACJyB,QAASvP,EAAYwP,oBACrBC,OAAQhH,EAAW1L,wBACnBmK,OAAQ,CACJnF,KAAM,CACF6J,MAAOA,WAIbpO,KAAK0M,UAAUvG,MAAK,IAAM7E,EAAUtB,UAAM,OAAQ,GAAQ,YAE5D,OADA8C,EAAI0B,SAAS,wCACAxE,KAAK0M,UAAU/D,SAChC,KAAItD,EACR,GACJ,CACA0O,UAAAA,GACI,OAAOzS,EAAUtB,UAAM,OAAQ,GAAQ,YACnC8C,EAAIsJ,UAAU,iCACdpM,KAAK4L,eAAe6B,YACxB,GACJ,CACAuG,kBAAAA,CAAmBC,EAAK1P,GACfA,GACDvE,KAAK4L,eAAe6B,WAAWhL,EAAmByR,gCAAkCD,GAExF,IAAIE,GAAW,EAAI9I,EAAWZ,mBAAmBlG,GACjDvE,KAAK4L,eAAewB,gBAAgB+G,EAAU1R,EAAmByR,gCAAkCD,EACvG,CACAG,iBAAAA,CAAkBH,GACd,IAAII,EAAUrU,KAAK4L,eAAe2B,cAAc9K,EAAmByR,gCAAkCD,GACrG,GAAII,EAAS,CACT,IAAIC,GAAS,EAAIjJ,EAAW5B,eAAe4K,GAC3C,OAAOC,CACX,CAEJ,CACAC,yBAAAA,GACI,OAAOvU,KAAKkO,iBAChB,EAEJ9O,EAAQ2L,kBAAoBA,C,qCCvqBhBjL,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACb,IAAIC,EAAmBC,MAAQA,KAAKD,kBAAqBb,OAAOe,OAAU,SAASC,EAAGC,EAAGC,EAAGC,QAC7EC,IAAPD,IAAkBA,EAAKD,GAC3B,IAAIG,EAAOrB,OAAOsB,yBAAyBL,EAAGC,GACzCG,KAAS,QAASA,GAAQJ,EAAEM,WAAaF,EAAKG,UAAYH,EAAKI,gBAClEJ,EAAO,CAAEK,YAAY,EAAMC,IAAK,WAAa,OAAOV,EAAEC,EAAI,IAE5DlB,OAAOC,eAAee,EAAGG,EAAIE,EACjC,EAAM,SAASL,EAAGC,EAAGC,EAAGC,QACTC,IAAPD,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,EACd,GACIU,EAAsBd,MAAQA,KAAKc,qBAAwB5B,OAAOe,OAAU,SAASC,EAAGa,GACxF7B,OAAOC,eAAee,EAAG,UAAW,CAAEU,YAAY,EAAMvB,MAAO0B,GACnE,EAAK,SAASb,EAAGa,GACbb,EAAE,WAAaa,CACnB,GACIC,EAAgBhB,MAAQA,KAAKgB,cAAiB,SAAUC,GACxD,GAAIA,GAAOA,EAAIR,WAAY,OAAOQ,EAClC,IAAIC,EAAS,CAAC,EACd,GAAW,MAAPD,EAAa,IAAK,IAAIb,KAAKa,EAAe,YAANb,GAAmBlB,OAAOiC,UAAUC,eAAeC,KAAKJ,EAAKb,IAAIL,EAAgBmB,EAAQD,EAAKb,GAEtI,OADAU,EAAmBI,EAAQD,GACpBC,CACX,EACII,EAAatB,MAAQA,KAAKsB,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMtC,GAAS,OAAOA,aAAiBoC,EAAIpC,EAAQ,IAAIoC,GAAE,SAAUG,GAAWA,EAAQvC,EAAQ,GAAI,CAC3G,OAAO,IAAKoC,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU1C,GAAS,IAAM2C,EAAKN,EAAUO,KAAK5C,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAS9C,GAAS,IAAM2C,EAAKN,EAAU,SAASrC,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKd,GAAUA,EAAOkB,KAAOR,EAAQV,EAAO7B,OAASsC,EAAMT,EAAO7B,OAAOgD,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACIuS,EAAmBxU,MAAQA,KAAKwU,iBAAoB,SAAUvT,GAC9D,OAAQA,GAAOA,EAAIR,WAAcQ,EAAM,CAAE,QAAWA,EACxD,EACA/B,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQuM,6BAA0B,EAClC,MAAMlJ,EAAqB3C,EAAQ,OAC7B2U,EAAgBD,EAAgB1U,EAAQ,QACxC6C,EAAU7C,EAAQ,OAClBuL,EAAavL,EAAQ,OACrBgD,EAAM9B,EAAalB,EAAQ,QAC3BwL,EAAQxL,EAAQ,OAChB4U,EAAuC,EACvCC,EAAoC,KAGpCC,EAAuB,uBACvBC,EAAoB,oBACpBC,EAA4B,6BAClC,MAAMnJ,EACFxI,WAAAA,CAAY4R,GAER/U,KAAKgV,sBAAwB,IAAIC,IAEjCjV,KAAKkV,0BAA4B,IAAID,IAErCjV,KAAKmV,6BAA+B,IAAIF,IACxCjV,KAAKoV,kBAAoBX,EAAcY,QAAQC,eAAe,CAC1D9D,KAAM/O,EAAmB8S,oCAAsCR,GAEvE,CACApD,IAAAA,CAAK6D,GACD,OAAOlU,EAAUtB,UAAM,OAAQ,GAAQ,YAInC,SAFMA,KAAKyV,mBAEPzV,KAAKgV,sBAAsBU,KAAO,EAAG,CACrC,IAAK,MAAOtH,EAAOuH,KAAgB3V,KAAKgV,sBAAsBY,UAC1D,IAAK,IAAI/B,EAAI,EAAGA,EAAI8B,EAAYrO,QAAS,CACrC,MAAMjC,EAAUsQ,EAAY9B,GAC5B,UAEU2B,GAAW,EAAInK,EAAWZ,mBAAmBpF,GAAU+I,GAC7DtL,EAAI0B,SAAS,+BAA8B,EAAI6G,EAAWZ,mBAAmBpF,gBAAsB+I,KAEnGuH,EAAYE,OAAOhC,EAAG,EAC1B,CACA,MAAOtC,GACHzO,EAAIyD,SAAS,4BAA2B,EAAI8E,EAAWZ,mBAAmBpF,gBAAsB+I,IAASmD,GAEzGlM,EAAQ1B,YAAc0B,EAAQ1B,YAAc,GAAK,EAC7C0B,EAAQ1B,WAAa,GACrBb,EAAIyD,SAAS,oCAAmC,EAAI8E,EAAWZ,mBAAmBpF,MAClFsQ,EAAYE,OAAOhC,EAAG,IAGtBA,GAER,CACJ,OAEE7T,KAAK8V,WACf,CACJ,GACJ,CACAhG,2BAAAA,CAA4BlG,GACxB,IAAI5E,EACJ,IAAI9D,EACJ,IACI,GAAI0I,EAAQ8I,YAAYC,WAAW,KAAM,CACrC,IAAIoD,GAAa,EAAI1K,EAAW5B,eAAeG,GAC/C,GAAImM,GACGA,EAAWC,kBACXD,EAAWC,kBAAoB,EAAG,CACrC,IAAIC,EAAwBF,EACxBE,EAAsBC,mBAAuE,QAAjDlR,EAAKiR,EAAsBC,wBAAqC,IAAPlR,OAAgB,EAASA,EAAGsC,QAAU,IAC3IpG,EAAS6U,EAEjB,CACJ,MAEI,EAAIzK,EAAM9G,UAAU,qBAE5B,CACA,MAAO+M,IACH,EAAIjG,EAAM9G,UAAU,qBACxB,CACA,OAAOtD,CACX,CACAqR,wBAAAA,CAAyBnE,EAAOkE,GAC5B,OAAOhR,EAAUtB,UAAM,OAAQ,GAAQ,YACnCA,KAAKmV,6BAA6BgB,IAAI/H,EAAOkE,SACvCtS,KAAK8V,aACX,EAAIxK,EAAM9G,UAAU,oCAAqC4J,EAAOkE,EACpE,GACJ,CAOAgB,iBAAAA,CAAkBlF,EAAOxE,EAASwM,EAASZ,GACvC,OAAOlU,EAAUtB,UAAM,OAAQ,GAAQ,YAMnC,IAAKoO,EAED,YADAtL,EAAIyD,SAAS,mCAGjB,IAAI8P,EAAgBrW,KAAKmV,6BAA6BtU,IAAIuN,GACtDkI,EAAY1M,EAAQtC,OACxB,IACI,GAAIgP,EAAY3B,EACZ,MAAM,IAAI7Q,MAAM,0BAA0BwS,MAE9C,IAAKD,GAAkBA,GAAiBA,EAAgB3B,EACpD,MAAM,IAAI5Q,MAAM,uCAAuCuS,MAE3D,MAAME,EAAY,GAClB,IAAIC,EAAkB7B,EACtB,IAAK,IAAId,EAAI,EAAGA,EAAIjK,EAAQtC,OAAQuM,GAAK2C,EACjC3C,EAAI2C,EAAkB5M,EAAQtC,OAC9BiP,EAAUE,KAAK7M,EAAQ8M,MAAM7C,EAAGA,EAAI2C,IAGpCD,EAAUE,KAAK7M,EAAQ8M,MAAM7C,IAGrC,IAAI8C,GAAU,EAAIhU,EAAQiU,mBACtBC,EAAuBN,EAAUO,KAAI,CAACxR,EAAKyR,KAE3C,IAAItE,EAAS,CACTzC,QAAS5B,EACT4H,iBAAkBtB,EAClBsC,YAAaT,EAAUjP,OACvB2P,cAAeF,EACfb,iBAAkBS,EAClBnJ,QAASlI,GAEb,OAAOmN,CAAM,IAGjBzS,KAAKkX,mBAAkB,EAAML,GAE7B,IAAK,IAAIhD,EAAI,EAAGA,EAAIgD,EAAqBvP,QAAS,CAC9C,MAAMmL,EAASoE,EAAqBhD,GAC9BxO,GAAU,EAAIgG,EAAWZ,mBAAmBgI,GAClD,UAEU+C,EAAWnQ,EAAS+I,GAC1BtL,EAAI0B,SAAS,8BAA8Ba,eAAqB+I,KAEhEyI,EAAqBhB,OAAOhC,EAAG,EACnC,CACA,MAAOtC,GACHzO,EAAIyD,SAAS,2BAA2BlB,eAAqB+I,IAASmD,GAEtEkB,EAAO9O,YAAc8O,EAAO9O,YAAc,GAAK,EAC3C8O,EAAO9O,WAAa,GACpBb,EAAIyD,SAAS,mCAAmClB,KAChDwR,EAAqBhB,OAAOhC,EAAG,IAG/BA,GAER,CACJ,CAEA7T,KAAKgV,sBAAsBmB,IAAI/H,EAAO,UAChCpO,KAAK8V,WACf,CACA,MAAO5T,IACH,EAAIoJ,EAAM9G,UAAU,iCACpB,EAAI8G,EAAM9G,UAAUtC,SACdkU,EAAQhI,EAAOxE,EACzB,CACJ,GACJ,CACAuG,sBAAAA,CAAuB9K,GACnB,OAAO/D,EAAUtB,UAAM,OAAQ,GAAQ,YAEnCA,KAAKkX,mBAAkB,EAAO,CAAC7R,IAC/B,IAAI8R,EAAc,IAAIlC,IAClBmC,EAAa/R,EAAQ2K,QAEzBhQ,KAAKkV,0BAA0B7E,SAAQ,CAACgH,EAAUjJ,KAC1CA,GAAS/I,EAAQ2K,SACjBqH,EAAShH,SAASiH,IACd,GAAIA,EAAKrH,cAAciG,iBAAkB,CACrC,IAAIqB,EAAeJ,EAAYtW,IAAIyW,EAAKrH,cAAciG,kBACjDqB,IACDA,EAAe,IAAIC,OAEvBD,EAAad,KAAKa,GAClBH,EAAYhB,IAAImB,EAAKrH,cAAciG,iBAAkBqB,EACzD,IAER,KAEJ,EAAIjM,EAAM9G,UAAU,4CACpB,IAAIsF,EAAc,CACdC,gBAAgB,GAIpB,GAAI1E,EAAQ4K,cAAciG,iBAAkB,CACxCpM,EAAYC,gBAAiB,EAC7B,IAAIwN,EAAeJ,EAAYtW,IAAIwE,EAAQ4K,cAAciG,kBAEzD,GAAqB,OAAjBqB,QAA0C,IAAjBA,OAA0B,EAASA,EAAajQ,OAAQ,CACjF,IAAImQ,EAAc,IAAIC,IAMtB,GALAH,EAAalH,SAASiH,SACuBhX,IAArCgX,EAAKrH,cAAcgH,eACnBQ,EAAYE,IAAIL,EAAKrH,cAAcgH,cACvC,IAEAQ,EAAY/B,MAAQrQ,EAAQ4K,cAAc+G,YAAa,CAEvDO,EAAaK,MAAK,CAACC,EAAGC,KACbD,EAAE5H,cAAcgH,eAAmD,IAAlCY,EAAE5H,cAAcgH,gBAC9Ca,EAAE7H,cAAcgH,eAAmD,IAAlCa,EAAE7H,cAAcgH,cAI9C,EAHAY,EAAE5H,cAAcgH,cAAgBa,EAAE7H,cAAcgH,gBAM/D,IAAIc,EAAcR,EAAaS,QAAO,CAACC,EAASX,KAC5CW,EAAQxB,KAAKa,EAAKrH,cAAczC,SACzByK,IACR,IACCC,EAAgBX,EAAaS,QAAO,CAACG,EAAWb,KAChDa,EAAU1B,KAAKa,EAAK1H,WACbuI,IACR,IACHrO,EAAYC,gBAAiB,EAC7BD,EAAYE,aAAe+N,EAAYK,KAAK,IAC5CtO,EAAYsG,sBAAwB8H,EAEpC,IAAIG,EAAerY,KAAKkV,0BAA0BrU,IAAIuW,GAClDiB,IACAA,EAAeA,EAAaC,QAAQhB,IACxBY,EAAcK,SAASjB,EAAK1H,aAExC5P,KAAKkV,0BAA0BiB,IAAIiB,EAAYiB,UAE7CrY,KAAK8V,WACf,CACJ,CACJ,CAEA,OAAOhM,CACX,GACJ,CAIAoN,iBAAAA,CAAkBsB,EAAWC,GACzB,OAAOnX,EAAUtB,UAAM,OAAQ,GAAQ,YAEnC,IADA,EAAIsL,EAAM9G,UAAU,wBAChBgU,EAAW,CACX,IAAIE,EAAiBD,EACjBE,EAAcD,EAAeJ,QAAQjT,IACrC,IAAI+R,EAAa/R,EAAQ2K,QACrB4I,GAAS,EACTC,EAAiB7Y,KAAKgV,sBAAsBnU,IAAIuW,GAQpD,OAPmB,OAAnByB,QAA8C,IAAnBA,GAAqCA,EAAexI,SAASyI,IAChFA,EAAc5C,kBAAoB7Q,EAAQ6Q,kBACvC4C,EAAc9B,aAAe3R,EAAQ2R,aACrC8B,EAAc7B,eAAiB5R,EAAQ4R,gBAC1C2B,GAAS,EACb,IAEGA,CAAM,IAEjB,GAAID,EAAYrR,OAAS,EAAG,CACxB,IAAI8P,EAAauB,EAAY,GAAG3I,QAC5B+I,EAAY/Y,KAAKgV,sBAAsBnU,IAAIuW,GAC1C2B,IACDA,EAAY,IAAIvB,OAEpBuB,EAAYA,EAAUC,OAAOL,GAC7B3Y,KAAKgV,sBAAsBmB,IAAIiB,EAAY2B,IAC3C,EAAIzN,EAAM9G,UAAU,wCAAyCuU,EACjE,CACJ,KACK,CACD,IAAIE,EAAoBR,EACpBE,EAAcM,EAAkBX,QAAQjT,IACxC,IAAI+R,EAAa/R,EAAQ2K,QACrB4I,GAAS,EACTM,EAAoBlZ,KAAKkV,0BAA0BrU,IAAIuW,GAM3D,OALsB,OAAtB8B,QAAoD,IAAtBA,GAAwCA,EAAkB7I,SAASyI,IACzFA,EAAclJ,WAAavK,EAAQuK,YACnCgJ,GAAS,EACb,IAEGA,CAAM,IAEjB,GAAID,EAAYrR,OAAS,EAAG,CACxB,IAAI8P,EAAauB,EAAY,GAAG3I,QAC5BmJ,EAAenZ,KAAKkV,0BAA0BrU,IAAIuW,GACjD+B,IACDA,EAAe,IAAI3B,OAEvB2B,EAAeA,EAAaH,OAAOL,GACnC3Y,KAAKkV,0BAA0BiB,IAAIiB,EAAY+B,IAC/C,EAAI7N,EAAM9G,UAAU,yCAA0C2U,EAClE,CACJ,CACJ,GACJ,CACArD,SAAAA,GACI,OAAOxU,EAAUtB,UAAM,OAAQ,GAAQ,aACnC,EAAIsL,EAAM9G,UAAU,kCACdxE,KAAKoV,kBAAkBgE,QAAQxE,EAAsB5U,KAAKkV,iCAC1DlV,KAAKoV,kBAAkBgE,QAAQvE,EAAmB7U,KAAKgV,6BACvDhV,KAAKoV,kBAAkBgE,QAAQtE,EAA2B9U,KAAKmV,6BACzE,GACJ,CACAM,gBAAAA,GACI,OAAOnU,EAAUtB,UAAM,OAAQ,GAAQ,YAEnC,IAAIqZ,QAAkBrZ,KAAKoV,kBAAkB3F,QAAQmF,GAEjD5U,KAAKkV,0BADLmE,GAIiC,IAAIpE,IAGzC,IAAIqE,QAAmBtZ,KAAKoV,kBAAkB3F,QAAQoF,GAElD7U,KAAKgV,sBADLsE,GAI6B,IAAIrE,IAGrC,IAAI7G,QAAcpO,KAAKoV,kBAAkB3F,QAAQqF,GAE7C9U,KAAKmV,6BADL/G,GAIoC,IAAI6G,GAEhD,GACJ,EAEJ7V,EAAQuM,wBAA0BA,C,mCChYlCzM,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQoE,eAAiBpE,EAAQma,qBAAuBna,EAAQ4S,oBAAsB5S,EAAQ2T,yBAA2B3T,EAAQ8H,uCAAyC9H,EAAQiI,yBAA2BjI,EAAQoa,4BAA8Bpa,EAAQqa,sBAAwBra,EAAQsa,sBAAwBta,EAAQuN,sBAAwBvN,EAAQua,4BAA8Bva,EAAQwa,mCAAgC,EACjaxa,EAAQwa,8BAAgC,EACxCxa,EAAQua,4BAA8B,GACtCva,EAAQuN,sBAAwB,oDAChCvN,EAAQsa,sBAAwB,mDAChCta,EAAQqa,sBAAwB,wDAChCra,EAAQoa,4BAA8B,OACtCpa,EAAQiI,yBAA2B,CAC/BjI,EAAQuN,sBACRvN,EAAQsa,sBACRta,EAAQqa,uBAEZra,EAAQ8H,uCAAyC,CAC7CU,SAAU,KACVF,SAAU,KACVP,SAAU,MAEd/H,EAAQ2T,yBAA2B,IAEnC3T,EAAQ4S,oBAAsB,MAE9B5S,EAAQma,qBAAuB,EAC/Bna,EAAQoE,eAAiB,CACrBC,UAAW,EACXY,WAAY,EACZqB,UAAW,EACXqD,aAAc,EACdhD,QAAS,E,qCC7BDjG,EAAA,OAACA,EAAA,OACb,IAAIwB,EAAatB,MAAQA,KAAKsB,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMtC,GAAS,OAAOA,aAAiBoC,EAAIpC,EAAQ,IAAIoC,GAAE,SAAUG,GAAWA,EAAQvC,EAAQ,GAAI,CAC3G,OAAO,IAAKoC,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU1C,GAAS,IAAM2C,EAAKN,EAAUO,KAAK5C,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAS9C,GAAS,IAAM2C,EAAKN,EAAU,SAASrC,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKd,GAAUA,EAAOkB,KAAOR,EAAQV,EAAO7B,OAASsC,EAAMT,EAAO7B,OAAOgD,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACA/C,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQya,YAAS,EACjB,MAAM9W,EAAajD,EAAQ,OACrB0C,EAAc1C,EAAQ,OACtB6C,EAAU7C,EAAQ,OAClBga,EAAeha,EAAQ,OACvBia,EAAsBja,EAAQ,MAC9Bka,EAAiBla,EAAQ,KACzBma,EAAgBna,EAAQ,OAC9B,MAAM+Z,EACF1W,WAAAA,CAAY+W,GACRla,KAAKma,WAAa,GAClBna,KAAKoa,kBAAe9Z,EACpBN,KAAKqa,kBAAoB,IAAIN,EAAoBhP,kBAAkBmP,GACnEla,KAAKsa,uBACT,CACAC,YAAAA,GACI,GAAIva,KAAKoa,aACL,OAAOpa,KAAKoa,YAEpB,CACAI,wBAAAA,CAAyBC,GACrBza,KAAKya,sBAAwBA,GAC7B,EAAI9X,EAAQ6B,UAAU,mCAAoCiW,GAC1D,IAAK,MAAM/N,KAAa1M,KAAKma,WACzBzN,EAAU8N,yBAAyBC,EAE3C,CACAC,iBAAAA,CAAkBP,GACdna,KAAKma,WAAaA,EAClB,IAAK,MAAMzN,KAAayN,EACpBzN,EAAUiO,qBAAqB3a,KAAKqa,kBAE5C,CACAO,cAAAA,GACI,IAAK,MAAMlO,KAAa1M,KAAKma,WACzB,GAAIna,KAAK6a,cAAcnO,GACnB,OAAO,EAGf,OAAO,CACX,CACAmO,aAAAA,CAAcnO,GACV,QAAKA,IAEGA,EAAUoO,WAAahB,EAAaiB,eACrCrO,EAAUoO,WAAahB,EAAakB,eAC/C,CACAC,mBAAAA,CAAoBvO,GAChB,QAAKA,GAEEA,EAAUoO,WAAahB,EAAaoB,iBAC/C,CACAC,gBAAAA,CAAiBC,EAASC,EAAeC,GACrC,OAAOha,EAAUtB,UAAM,OAAQ,GAAQ,YAEnC,OADAA,KAAKsa,wBACE,IAAIzY,SAAQ,CAACD,EAASE,IAAWR,EAAUtB,UAAM,OAAQ,GAAQ,YACpE,IAAIgF,EAAI4J,EAAIC,EAAIC,EAChB,KACI,EAAInM,EAAQ6B,UAAU,oCAAqC+W,KAAKC,UAAUJ,KAC1E,EAAIzY,EAAQ6B,UAAU,0CAA2C+W,KAAKC,UAAUH,IAChF,IAAII,EAAmB,GACvBL,EAAQ/K,SAASiH,IACb,IAAI9F,EAAO8F,EAAK9F,MACZA,EAAKmB,WAAW,oBAAsBnB,EAAKmB,WAAW,SACtD8I,EAAiBhF,KAAKa,EAC1B,KAEJ,EAAI3U,EAAQ6B,UAAU,6CAA8C+W,KAAKC,UAAUC,IACnF,MAAMC,EAAc1b,KAAKqa,kBAAkB5J,iBACrCkL,EAAYjX,KAAKC,MAAMC,WAC7B,IAAIgX,EAA8D,QAAzC5W,EAAKqW,EAAcQ,wBAAqC,IAAP7W,GAAgBA,EAC1F,MAAM8W,EAA0B,CAC5BC,YAAaC,OAAOjZ,EAAWkZ,sBAC/B7N,MAAOsN,EAAY9K,UACnBC,SAAU6K,EAAY7K,SACtB8K,UAAWA,EACXO,SAAUb,EAAcc,SACxBC,SAAUX,EACVY,SAA0G,QAA/FzN,EAAuB,OAAlByM,QAA4C,IAAlBA,OAA2B,EAASA,EAAcgB,gBAA6B,IAAPzN,EAAgBA,EAAK,QAErI0N,GAAgB,EAAI3Z,EAAQ4Z,qBAAqBT,GACvDA,EAAwBO,SAA2G,QAA/FxN,EAAuB,OAAlBwM,QAA4C,IAAlBA,OAA2B,EAASA,EAAcgB,gBAA6B,IAAPxN,EAAgBA,EAAK,QAChK,EAAIlM,EAAQ6B,UAAU,uDAAwD+W,KAAKC,UAAUM,IAC7F,IAAIU,EAAc,GAEdZ,IACAY,GAAc,EAAI7Z,EAAQ8Z,YAAYX,EAAyBT,EAAcqB,QAASrB,EAAcsB,eACpG,EAAIha,EAAQ6B,UAAU,2CAA4CgY,IAEtE,MAAMI,EAAaA,IACe,GAA1B5c,KAAKma,WAAW7S,QAAetH,KAAKma,WAAW,GAAGW,WAAahB,EAAaoB,kBACrElb,KAAKma,WAAW,GAAG0C,WAAW,CACjCC,eAAgBhB,IAIhBT,EAAcqB,SACP,EAAI/Z,EAAQoa,kCAAkCP,IAErD,EAAI7Z,EAAQqa,iBACL,EAAIra,EAAQsa,sBAAsBT,IAEtC,EAAI7Z,EAAQua,6BAA6BV,IAGxD,EAAI7Z,EAAQ6B,UAAU,2CAA4CgY,GAClE,MAAMW,GAAQ,EAAIxa,EAAQya,SA8D1B,GA7DID,GAASvB,KACT,EAAIjZ,EAAQ6B,UAAU,sCAAsC2Y,0BAA8BvB,KAC1FgB,KAEJ5c,KAAKqd,4BAA4BC,IAC7B,IAAItY,EAAI4J,EAAIC,EAAIC,EAChB,IACI9O,KAAKqd,gCAA2B/c,GAChC,IAAIid,EAAkBD,EACtB,GAA8B,WAA1BC,EAAgBtL,OAAqB,EACrC,EAAItP,EAAQ6B,UAAU,sDAAuD+W,KAAKC,UAAU+B,IAC5F,IAAIC,GAAa,EAAIxD,EAAeyD,kCAAkCF,GACtE,IAAIC,EAsCA,MAAM,IAAIza,EAAWyF,gBAAgBzF,EAAW0F,wBAAwBiV,eAtC5D,CACZ,IAAIC,GAC6F,QAA3F/O,EAAwC,QAAlC5J,EAAKuY,EAAgBlY,eAA4B,IAAPL,OAAgB,EAASA,EAAG4Y,iBAA8B,IAAPhP,OAAgB,EAASA,EAAG,KAAO,eAAgB2O,EAAgBlY,QAAQuY,UAAU,KAC1LD,EAAaJ,EAAgBlY,QAAQuY,UAAU,GAAG,eAEtD,IAAI1D,EAA6C,QAAlCrL,EAAK0O,EAAgBlY,eAA4B,IAAPwJ,OAAgB,EAASA,EAAGgP,OAAO3D,QAC5F,IAAI4D,EACJ,OAAQ5D,GACJ,KAAKD,EAAc8D,cACfD,EAAMhE,EAAakB,eACnB,MACJ,KAAKf,EAAc+D,kBACfF,EAAMhE,EAAaiB,cACnB,MACJ,KAAKd,EAAcgE,oBACfH,EAAMhE,EAAaoB,kBACnB,MAER,IAAIxO,EAAY1M,KAAKma,WAAW+D,MAAMxR,GAAcA,EAAUoO,WAAagD,IAC3E,IAAKpR,EACD,MAAM,IAAI3J,EAAWyF,gBAAgBzF,EAAW0F,wBAAwBiV,eAE5E,IAAIS,EAAUjf,OAAOkf,OAAO,CAAEhQ,MAAOsN,EAAY9K,UAAWyK,cAAeA,EAAemC,WAAYA,GAAeD,EAAgBlY,SAAW,CAC5IwY,OAAQ3e,OAAOkf,OAAOlf,OAAOkf,OAAO,CAAC,EAAGb,EAAgBlY,QAAQwY,QAAS,CAAEF,WAAYA,MAEvFU,EAAkBd,EAAgBlY,QAAQuY,UAAUM,MAAK5G,GAAsB,oBAAdA,EAAK9F,OACtE6M,GAAmBA,EAAgBC,wBACnCH,EAAQI,aAAeF,EAAgBC,wBAE3C,EAAI3b,EAAQ6B,UAAU,8CAA+C+W,KAAKC,UAAU2C,IAChFne,KAAK6a,cAAcnO,MACnB,EAAI/J,EAAQ6B,UAAU,kCACtBxE,KAAKqa,kBAAkBhI,sBAAsBqJ,EAAY9K,UAAW2M,EAAgBlY,QAAQwY,OAAOW,qBAEvG5c,EAAQuc,GACRne,KAAKye,gBAAgB/R,EACzB,CAIJ,MACK,GAA8B,iBAA1B6Q,EAAgBtL,aAA8G3R,IAA7C,QAAlCwO,EAAKyO,EAAgBlY,eAA4B,IAAPyJ,OAAgB,EAASA,EAAG5J,MAC1H,MAAM,IAAInC,EAAWyF,gBAAgB+U,EAAgBlY,QAAQH,KAErE,CACA,MAAOhD,GACHJ,EAAOI,EACX,KAEAlC,KAAK4a,iBAAkB,OACkB,QAAjC9L,EAAK9O,KAAKqa,yBAAsC,IAAPvL,OAAgB,EAASA,EAAGhG,YAAW,GACxF,UACU9I,KAAKqa,kBAAkB1R,SACjC,CACA,MAAOzG,GAEH,MADA,EAAIS,EAAQ6B,UAAU,gCAAiCtC,GACjDA,CACV,EACA,EAAIS,EAAQ6B,UAAU,kDAAmD8W,GACzEtb,KAAK0e,YAAYpC,EACrB,CAKA,IAJKa,GAASvB,GACVgB,KAEJ,EAAIja,EAAQ6B,UAAU,kDAAmD8W,GACrEA,EAAmB,CACnB,MAAM3K,EAAO,CACTmM,eAAgBhB,EAChBO,SAAUhB,EAAcgB,SACxBM,aAActB,EAAcsB,eAEhC,EAAIha,EAAQ6B,UAAU,4CAA6C+W,KAAKC,UAAU7K,IAClF2K,EAAkB3K,EACtB,CACJ,CACA,MAAOY,IACH,EAAI5O,EAAQ6B,UAAU,sCAAuC+M,GAC7DzP,EAAOyP,EACX,CACJ,KACJ,GACJ,CACA8L,0BAAAA,CAA2BsB,GACvB,IAAK,MAAMjS,KAAa1M,KAAKma,WACrBna,KAAKib,oBAAoBvO,IACzBA,EAAUkS,2BAA2BD,GAG7C3e,KAAK2e,sBAAwBA,CACjC,CACA9B,UAAAA,CAAWgC,EAAmBnS,GAC1B,IAAI1H,EACA0H,EACAA,EAAUmQ,WAAWgC,GAGU,QAA9B7Z,EAAKhF,KAAKua,sBAAmC,IAAPvV,GAAyBA,EAAG6X,WAAWgC,EAEtF,CACA1Y,IAAAA,CAAKiV,EAAS0D,EAAehM,GACzB,OAAOxR,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,IAAIgF,EAMJ,OALKhF,KAAKib,oBAAoBjb,KAAKua,iBAC3B,kBAAmBa,UACZA,EAAQ2D,cAGe,QAA9B/Z,EAAKhF,KAAKua,sBAAmC,IAAPvV,OAAgB,EAASA,EAAGmB,KAAKiV,EAAS0D,EAAehM,EAC3G,GACJ,CACAkM,SAAAA,GACI,IAAIha,EAC2B,QAA9BA,EAAKhF,KAAKua,sBAAmC,IAAPvV,GAAyBA,EAAGga,WACvE,CACAC,qBAAAA,CAAsBC,GAClB,IAAIla,EAC2B,QAA9BA,EAAKhF,KAAKua,sBAAmC,IAAPvV,GAAyBA,EAAGia,sBAAsBC,EAC7F,CACAlL,kBAAAA,CAAmBC,EAAK1P,GACpBvE,KAAKqa,kBAAkBrG,mBAAmBC,EAAK1P,EACnD,CACA6P,iBAAAA,CAAkBH,GACd,IAAIjP,EACAmZ,EAAUne,KAAKqa,kBAAkBjG,kBAAkBH,GACvD,GAAIkK,EAAS,CACT,IAAIL,EAAM,GAIV,GAHuB,kBAAZK,IACPL,EAAM9d,KAAKmf,gBAA0C,QAAzBna,EAAKmZ,EAAQN,cAA2B,IAAP7Y,OAAgB,EAASA,EAAGkV,UAEzFla,KAAKma,WAAW+D,MAAMxR,GACfA,EAAUoO,WAAagD,IAE9B,OAAOK,CAEf,CAEJ,CACAgB,eAAAA,CAAgBjF,GACZ,IAAI4D,EAAM,GACV,GAAI5D,EACA,OAAQA,GACJ,KAAKD,EAAc8D,cACfD,EAAMhE,EAAakB,eACnB,MACJ,KAAKf,EAAc+D,kBACfF,EAAMhE,EAAaiB,cACnB,MACJ,KAAKd,EAAcgE,oBACfH,EAAMhE,EAAaoB,kBAG/B,OAAO4C,CACX,CACAsB,mBAAAA,CAAoBvB,GAChB,IAAIC,EAAM9d,KAAKmf,gBAA2B,OAAXtB,QAA8B,IAAXA,OAAoB,EAASA,EAAO3D,SACjF4D,GAEL9d,KAAKye,gBAAgBze,KAAKma,WAAW+D,MAAMxR,GAChCA,EAAUoO,WAAagD,IAEtC,CACAW,eAAAA,CAAgB/R,GACZ1M,KAAKoa,aAAe1N,EAChB1M,KAAK6a,cAAcnO,IACnBA,EAAU4N,uBAElB,CAEA+E,4BAAAA,CAA6BC,GACzBtf,KAAKsf,0BAA4BA,CACrC,CACAC,cAAAA,CAAeC,EAAaC,GACxB,OAAOne,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,IAAIgF,QACkC,QAA9BA,EAAKhF,KAAKua,sBAAmC,IAAPvV,OAAgB,EAASA,EAAGua,eAAeC,EAAaC,EAC1G,GACJ,CACAC,uBAAAA,CAAwBtR,GACpB,OAAO9M,EAAUtB,UAAM,OAAQ,GAAQ,YAC/BA,KAAK6a,cAAc7a,KAAKua,wBAClBva,KAAKua,eAAemF,wBAAwBtR,GAE1D,GACJ,CACAmG,yBAAAA,CAA0BoL,GACtB,IAAI3a,EACJ,SAAyC,QAA9BA,EAAKhF,KAAKua,sBAAmC,IAAPvV,OAAgB,EAASA,EAAGuP,0BAA0BoL,GAC3G,CACAC,wBAAAA,GACI,OAAOte,EAAUtB,KAAMqI,eAAW,GAAQ,UAAW0I,GAAc,GAC/D,IAAI/L,QACkC,QAA9BA,EAAKhF,KAAKua,sBAAmC,IAAPvV,OAAgB,EAASA,EAAG4a,yBAAyB7O,EACvG,GACJ,CACA2N,WAAAA,CAAYc,GACR,OAAOle,EAAUtB,UAAM,OAAQ,GAAQ,aACnC,EAAI2C,EAAQ6B,UAAU,gCAAiCgb,GACvD,MAAM7D,EAAYjX,KAAKC,MAAMC,WAC7B,IAAIwW,EAAU,CACVnJ,OAAQ,eACRvI,OAAQ,CAAE4I,gBAAiB9P,EAAY+W,qBAAsBiG,YAAaA,UAExExf,KAAKqa,kBAAkBzI,QAAQ2J,KAAKC,UAAUtc,OAAOkf,OAAOlf,OAAOkf,OAAO,CAAC,EAAGhD,GAAU,CAAEO,UAAWA,KAC/G,GACJ,CACArB,qBAAAA,GACI,IAAItV,EAC8B,QAAjCA,EAAKhF,KAAKqa,yBAAsC,IAAPrV,GAAyBA,EAAGiE,YAAY,gBAAgB,CAAClE,EAAOO,KACtG,IAAIua,GAAe,EAAIld,EAAQ8G,eAAenE,IAC9C,EAAI3C,EAAQ6B,UAAU,2CAA2Cqb,KACrC,YAAxBA,EAAa5N,QAAgD,kBAAxB4N,EAAa5N,OAC9CjS,KAAK2e,uBACL3e,KAAK2e,sBAAsBkB,GAGF,uBAAxBA,EAAa5N,UAClB,EAAItP,EAAQ6B,UAAU,gEAClBxE,KAAKsf,6BACL,EAAI3c,EAAQ6B,UAAU,yEACtBxE,KAAKsf,4BACLtf,KAAKsf,+BAA4Bhf,GAEzC,IACD,WACH,GACJ,EAEJlB,EAAQya,OAASA,C,qCCpWjB3a,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ8E,QAAU9E,EAAQya,OAASza,EAAQ0gB,wBAA0B1gB,EAAQ2L,kBAAoB3L,EAAQmD,wBAAqB,EAC9H,IAAIyI,EAAYlL,EAAQ,OACxBZ,OAAOC,eAAeC,EAAS,qBAAsB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOmK,EAAUzI,kBAAoB,IACjI,IAAIwX,EAAsBja,EAAQ,MAClCZ,OAAOC,eAAeC,EAAS,oBAAqB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOkZ,EAAoBhP,iBAAmB,IACzI,IAAIgV,EAA4BjgB,EAAQ,OACxCZ,OAAOC,eAAeC,EAAS,0BAA2B,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOkf,EAA0BD,uBAAyB,IAC3J,IAAIE,EAAWlgB,EAAQ,OACvBZ,OAAOC,eAAeC,EAAS,SAAU,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOmf,EAASnG,MAAQ,IACxG,IAAInX,EAAY5C,EAAQ,OACxBZ,OAAOC,eAAeC,EAAS,UAAW,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO6B,EAAUwB,OAAS,G,qCCX3G,IAAInE,EAAmBC,MAAQA,KAAKD,kBAAqBb,OAAOe,OAAU,SAASC,EAAGC,EAAGC,EAAGC,QAC7EC,IAAPD,IAAkBA,EAAKD,GAC3B,IAAIG,EAAOrB,OAAOsB,yBAAyBL,EAAGC,GACzCG,KAAS,QAASA,GAAQJ,EAAEM,WAAaF,EAAKG,UAAYH,EAAKI,gBAClEJ,EAAO,CAAEK,YAAY,EAAMC,IAAK,WAAa,OAAOV,EAAEC,EAAI,IAE5DlB,OAAOC,eAAee,EAAGG,EAAIE,EACjC,EAAM,SAASL,EAAGC,EAAGC,EAAGC,QACTC,IAAPD,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,EACd,GACIU,EAAsBd,MAAQA,KAAKc,qBAAwB5B,OAAOe,OAAU,SAASC,EAAGa,GACxF7B,OAAOC,eAAee,EAAG,UAAW,CAAEU,YAAY,EAAMvB,MAAO0B,GACnE,EAAK,SAASb,EAAGa,GACbb,EAAE,WAAaa,CACnB,GACIC,EAAgBhB,MAAQA,KAAKgB,cAAiB,SAAUC,GACxD,GAAIA,GAAOA,EAAIR,WAAY,OAAOQ,EAClC,IAAIC,EAAS,CAAC,EACd,GAAW,MAAPD,EAAa,IAAK,IAAIb,KAAKa,EAAe,YAANb,GAAmBlB,OAAOiC,UAAUC,eAAeC,KAAKJ,EAAKb,IAAIL,EAAgBmB,EAAQD,EAAKb,GAEtI,OADAU,EAAmBI,EAAQD,GACpBC,CACX,EACII,EAAatB,MAAQA,KAAKsB,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMtC,GAAS,OAAOA,aAAiBoC,EAAIpC,EAAQ,IAAIoC,GAAE,SAAUG,GAAWA,EAAQvC,EAAQ,GAAI,CAC3G,OAAO,IAAKoC,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU1C,GAAS,IAAM2C,EAAKN,EAAUO,KAAK5C,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAS9C,GAAS,IAAM2C,EAAKN,EAAU,SAASrC,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKd,GAAUA,EAAOkB,KAAOR,EAAQV,EAAO7B,OAASsC,EAAMT,EAAO7B,OAAOgD,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACIuS,EAAmBxU,MAAQA,KAAKwU,iBAAoB,SAAUvT,GAC9D,OAAQA,GAAOA,EAAIR,WAAcQ,EAAM,CAAE,QAAWA,EACxD,EACA/B,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ6gB,0BAA4B7gB,EAAQ8gB,0BAA4B9gB,EAAQ+gB,wBAA0B/gB,EAAQghB,4BAA8BhhB,EAAQihB,WAAajhB,EAAQkhB,WAAalhB,EAAQmhB,cAAgBnhB,EAAQohB,qBAAuBphB,EAAQqhB,cAAgBrhB,EAAQshB,cAAgBthB,EAAQuhB,aAAevhB,EAAQwhB,cAAgBxhB,EAAQyhB,gBAAkBzhB,EAAQ0hB,gBAAkB1hB,EAAQ2hB,mBAAgB,EAC5Z3hB,EAAQ6O,gBAAkBA,EAC1B7O,EAAQ4hB,WAAaA,EACrB5hB,EAAQ6hB,WAAaA,EACrB7hB,EAAQ8hB,UAAYA,EACpB9hB,EAAQ+hB,UAAYA,EACpB/hB,EAAQgiB,UAAYA,EACpBhiB,EAAQiiB,UAAYA,EACpBjiB,EAAQkiB,WAAaA,EACrBliB,EAAQmiB,WAAaA,EACrBniB,EAAQoiB,UAAYA,EACpBpiB,EAAQqiB,UAAYA,EACpBriB,EAAQiP,QAAUA,EAClBjP,EAAQsiB,UAAYA,EACpB,MAAMC,EAAU3gB,EAAalB,EAAQ,QAC/BuL,EAAavL,EAAQ,OACrB6C,EAAU7C,EAAQ,OAClB8hB,EAAcpN,EAAgB1U,EAAQ,QACtCgD,EAAM9B,EAAalB,EAAQ,QAC3B+hB,EAAgB/hB,EAAQ,OAgB9B,SAASmO,IAGL,OAAO2T,EAAYvM,QAAQyM,KAAK5U,SACpC,CACA,SAAS8T,EAAWe,GAChB,OAAO,EAAI1W,EAAW5B,gBAAe,EAAIoY,EAAcG,cAAa,EAAIH,EAAcI,eAAeF,EAAK3iB,EAAQuhB,cAAevhB,EAAQshB,eAC7I,CACA,SAASO,EAAWiB,GAChB,OAAO,EAAIL,EAAcG,cAAa,EAAIH,EAAcI,gBAAe,EAAI5W,EAAWZ,mBAAmByX,GAAM9iB,EAAQshB,eAAgBthB,EAAQuhB,aACnJ,CACA,SAASO,EAAUvT,GACf7K,EAAI0B,SAAS,eAAc,EAAI7B,EAAQiL,aAAaD,MACpD,IAAIwU,GAAe,EAAIN,EAAcG,aAAarU,EAAWvO,EAAQghB,6BACrE,MAAO,CAAChhB,EAAQkhB,WAAYlhB,EAAQihB,WAAY8B,GAAc/J,KAAKhZ,EAAQmhB,cAC/E,CACA,SAASY,EAAUiB,GACf,MAAOC,EAAQpQ,EAAQqQ,GAAcF,EAAOG,MAAMnjB,EAAQmhB,eAC1D,GAAI8B,IAAWjjB,EAAQkhB,YAAcrO,IAAW7S,EAAQihB,WACpD,MAAM,IAAIvc,MAAM,0CAEpB,QAAmBxD,IAAfgiB,EACA,MAAM,IAAIxe,MAAM,2BAEpB,MAAM6J,GAAY,EAAIkU,EAAcI,eAAeK,EAAYljB,EAAQghB,6BACvE,QAAkB9f,IAAdqN,GAA2BA,EAAUrG,SAAWlI,EAAQ6gB,0BACxD,MAAM,IAAInc,MAAM,oDAEpB,OAAO6J,CACX,CAEA,SAASyT,EAAUoB,GACf,OAAO,EAAIX,EAAcG,aAAaQ,EAAOpjB,EAAQuhB,aACzD,CACA,SAASU,EAAUoB,GACf,OAAO,EAAIZ,EAAcI,eAAeQ,EAASrjB,EAAQuhB,aAC7D,CAEA,SAASW,EAAW5X,GAChB,OAAO,EAAImY,EAAcI,eAAe,CAAChB,EAAWvX,EAAOgZ,QAASzB,EAAWvX,EAAOrE,UAAU+S,KAAKhZ,EAAQwhB,eAAgBxhB,EAAQqhB,cACzI,CACA,SAASc,EAAWhd,GAChB,IAAIS,EAAI4J,EACR,MAAMlF,GAAS,EAAImY,EAAcG,aAAazd,EAAMnF,EAAQqhB,eAAe8B,MAAMnjB,EAAQwhB,eACnF8B,EAAS1B,EAAgC,QAApBhc,EAAK0E,EAAO,UAAuB,IAAP1E,EAAgBA,EAAK,MACtEK,EAAU2b,EAAgC,QAApBpS,EAAKlF,EAAO,UAAuB,IAAPkF,EAAgBA,EAAK,MAC7E,MAAO,CAAE8T,SAAQrd,UACrB,CAEA,SAASmc,EAAU9X,GACf,MAAO,CAACuX,EAAWvX,EAAOgZ,QAASzB,EAAWvX,EAAOrE,SAAU+b,EAAU1X,EAAOiZ,YAAYvK,KAAKhZ,EAAQwhB,cAC7G,CACA,SAASa,EAAUmB,GACf,IAAI5d,EAAI4J,EAAIC,EACZ,MAAMnF,EAASkZ,EAAIL,MAAMnjB,EAAQwhB,eAC3B8B,EAAS1B,EAAgC,QAApBhc,EAAK0E,EAAO,UAAuB,IAAP1E,EAAgBA,EAAK,MACtEK,EAAU2b,EAAgC,QAApBpS,EAAKlF,EAAO,UAAuB,IAAPkF,EAAgBA,EAAK,MACvE+T,EAAYtB,EAA+B,QAApBxS,EAAKnF,EAAO,UAAuB,IAAPmF,EAAgBA,EAAK,MACxEtK,GAAO,EAAIsd,EAAcI,eAAevY,EAAOgN,MAAM,EAAG,GAAG0B,KAAKhZ,EAAQwhB,eAAgBxhB,EAAQqhB,eACtG,MAAO,CAAEiC,SAAQrd,UAASsd,YAAWpe,OACzC,CACA,SAAS8J,EAAQwU,EAAOC,EAAOC,EAAOC,GAClC,OAAO1hB,EAAUtB,KAAMqI,eAAW,GAAQ,UAAW4a,EAAKC,EAAKpQ,EAAK5F,EAASiW,EAAMC,KAAKC,MAAM3e,KAAKC,QAC/F,MAAM+d,EAAS,CAAEY,IAAKlkB,EAAQ0hB,gBAAiByC,IAAKnkB,EAAQyhB,iBACtD2C,EAAMtC,EAAUhU,EAAQS,WACxB8V,EAAMN,EAAMrQ,EACZ4Q,EAAM,oBACNre,EAAU,CAAEme,MAAKP,MAAKC,MAAKQ,MAAKP,MAAKM,OACrClf,EAAO+c,EAAW,CAAEoB,SAAQrd,YAElCvC,EAAI0B,SAAS,eAAe0I,EAAQW,cAAcX,EAAQW,UAAUvG,WACpE,MAAMqb,EAAYf,EAAYvM,QAAQyM,KAAK6B,SAASpf,EAAM2I,EAAQW,WAClE,OAAO2T,EAAU,CAAEkB,SAAQrd,UAASsd,aACxC,GACJ,CACA,SAASjB,EAAUkB,GACf,OAAOthB,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,MAAM,OAAE0iB,EAAM,QAAErd,EAAO,KAAEd,EAAI,UAAEoe,GAAclB,EAAUmB,GACvD,GAAIF,EAAOY,MAAQlkB,EAAQ0hB,iBAAmB4B,EAAOa,MAAQnkB,EAAQyhB,gBACjE,MAAM,IAAI/c,MAAM,gCAEpB,MAAM6J,EAAYwT,EAAU9b,EAAQme,KACpC,OAAO7B,EAAQiC,OAAOjW,EAAWpJ,EAAMoe,EAC3C,GACJ,CAnGAvjB,EAAQ2hB,cAAgB,OACxB3hB,EAAQ0hB,gBAAkB,QAC1B1hB,EAAQyhB,gBAAkB,MAC1BzhB,EAAQwhB,cAAgB,IACxBxhB,EAAQuhB,aAAe,YACvBvhB,EAAQshB,cAAgB,OACxBthB,EAAQqhB,cAAgB,OACxBrhB,EAAQohB,qBAAuB,GAC/BphB,EAAQmhB,cAAgB,IACxBnhB,EAAQkhB,WAAa,MACrBlhB,EAAQihB,WAAa,MACrBjhB,EAAQghB,4BAA8B,YACtChhB,EAAQ+gB,wBAA0B,IAClC/gB,EAAQ8gB,0BAA4B,MACpC9gB,EAAQ6gB,0BAA4B,E,mCCtEpC/gB,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQmP,qBAAuBnP,EAAQykB,6BAA+BzkB,EAAQkP,2BAAwB,EACtGlP,EAAQkP,sBAAwB,SAChClP,EAAQykB,6BAA+B,OACvCzkB,EAAQmP,qBAAuB,K,mCCLnBzO,EAAA,OAACA,EAAA,OACbZ,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQqe,iCAAmCA,EAC3Cre,EAAQ0kB,+CAAiDA,EACzD1kB,EAAQ2kB,uBAAyBA,EACjC,MAAMzY,EAAQxL,EAAQ,OACtB,SAAS2d,EAAiCF,GACtC,IAAIyG,EAA2BF,EAA+CvG,GAC9E,OAAOyG,CACX,CACA,SAASF,EAA+CvG,GACpD,IAAIrc,EAAS,CAAC,GACd,EAAIoK,EAAM9G,UAAU,4EAA6E+W,KAAKC,UAAU+B,IAChH,IAAI0G,EAAoB1G,EAAgBlY,QAAQuY,UAAUM,MAAK5G,GAAsB,oBAAdA,EAAK9F,OAC5E,GAAIyS,GAAqBA,EAAkBC,SAAU,CACjD,IAAIC,EAAgB,GACpB,IAAK,MAAM7M,KAAQ2M,EAAkBC,SACV,QAAnB5M,EAAK8M,UACD9M,EAAK/S,MAAQ+S,EAAK/S,KAAK8f,UACnB/M,EAAK/S,KAAK8f,SAASC,SAAWhN,EAAK/S,KAAK8f,SAASC,QAAQhd,OAAS,KAClE,EAAIgE,EAAM9G,UAAU,6DAA8D+W,KAAKC,UAAUlE,IACjG6M,EAAc1N,KAAKa,MAK3B,EAAIhM,EAAM9G,UAAU,+DAAgE+W,KAAKC,UAAUlE,IACnG6M,EAAc1N,KAAKa,IAG3B2M,EAAkBC,SAAWC,CACjC,CACA,MAAMI,EAAahH,EAAgBlY,QAAQuY,UAAUM,MAAK5G,GAAsB,aAAdA,EAAK9F,OACjEgT,EAAWjH,EAAgBlY,QAAQuY,UAAUM,MAAK5G,GAAsB,cAAdA,EAAK9F,OACrE,GAAI+S,IAAeN,EAAmB,EAClC,EAAI3Y,EAAM9G,UAAU,oEACpB,IAAI8f,EAAUC,EAAWD,QACzBA,EAAU,OAASC,EAAWE,QAAU,IAAMH,EAC9C,IAAI/f,EAAO,CACP8f,SAAUE,GAEVC,IACAjgB,EAAKmgB,UAAYF,GAErBP,EAAoB,CAChBzS,KAAM,kBACN0S,SAAU,CAAC,CACHE,UAAW,MACXO,UAAW,CAACL,GACZM,QAAS,CAAC,uBACVC,MAAO,CAAC,EACRtgB,KAAMA,IAGtB,CAGA,OAFA,EAAI+G,EAAM9G,UAAU,0EAA2E+W,KAAKC,UAAUyI,IAC9GF,EAAuBE,EAAkBC,SAAUhjB,GAC5CA,CACX,CACA,SAAS6iB,EAAuBG,EAAUhjB,GACtCgjB,EAAS7T,SAAQiH,IACb,IAAIwN,EAAS,GACTZ,EAAW,GACf5M,EAAKqN,UAAUtU,SAAQ0U,IACnB,IAAIC,EAAaD,EAAYxC,MAAM,KAEnC,IADA,EAAIjX,EAAM9G,UAAU,8DAA+DwgB,EAAW1d,QAC1F0d,EAAW1d,QAAU,EAAG,CACxB,IAAI2d,EAAQD,EAAWtO,MAAM,EAAG,GAAG0B,KAAK,KACxC0M,EAAOrO,KAAKwO,GACZf,EAASzN,KAAKsO,IACd,EAAIzZ,EAAM9G,UAAU,0DAA2DygB,EAAO,eAAgBF,EAC1G,KAEAzN,EAAK/S,MAAQ+S,EAAK/S,KAAK8f,WACvB/M,EAAK/S,KAAK8f,SAAS7S,KAAO,YAE1B8F,EAAK/S,MAAQ+S,EAAK/S,KAAKmgB,YACvBpN,EAAK/S,KAAKmgB,UAAUlT,KAAO,aAE/BtQ,EAAOoW,EAAK8M,WAAa,CACrBU,OAAQA,EACRZ,SAAUA,EACVU,QAAStN,EAAKsN,QACdC,MAAOvN,EAAKuN,MACZxf,QAASiS,EAAK/S,OAElB,EAAI+G,EAAM9G,UAAU,0DAA2D+W,KAAKC,UAAUta,GAAQ,GAE9G,C,qCCvFA,IAAInB,EAAmBC,MAAQA,KAAKD,kBAAqBb,OAAOe,OAAU,SAASC,EAAGC,EAAGC,EAAGC,QAC7EC,IAAPD,IAAkBA,EAAKD,GAC3B,IAAIG,EAAOrB,OAAOsB,yBAAyBL,EAAGC,GACzCG,KAAS,QAASA,GAAQJ,EAAEM,WAAaF,EAAKG,UAAYH,EAAKI,gBAClEJ,EAAO,CAAEK,YAAY,EAAMC,IAAK,WAAa,OAAOV,EAAEC,EAAI,IAE5DlB,OAAOC,eAAee,EAAGG,EAAIE,EACjC,EAAM,SAASL,EAAGC,EAAGC,EAAGC,QACTC,IAAPD,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,EACd,GACIU,EAAsBd,MAAQA,KAAKc,qBAAwB5B,OAAOe,OAAU,SAASC,EAAGa,GACxF7B,OAAOC,eAAee,EAAG,UAAW,CAAEU,YAAY,EAAMvB,MAAO0B,GACnE,EAAK,SAASb,EAAGa,GACbb,EAAE,WAAaa,CACnB,GACIC,EAAgBhB,MAAQA,KAAKgB,cAAiB,SAAUC,GACxD,GAAIA,GAAOA,EAAIR,WAAY,OAAOQ,EAClC,IAAIC,EAAS,CAAC,EACd,GAAW,MAAPD,EAAa,IAAK,IAAIb,KAAKa,EAAe,YAANb,GAAmBlB,OAAOiC,UAAUC,eAAeC,KAAKJ,EAAKb,IAAIL,EAAgBmB,EAAQD,EAAKb,GAEtI,OADAU,EAAmBI,EAAQD,GACpBC,CACX,EACIsT,EAAmBxU,MAAQA,KAAKwU,iBAAoB,SAAUvT,GAC9D,OAAQA,GAAOA,EAAIR,WAAcQ,EAAM,CAAE,QAAWA,EACxD,EACA/B,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ8E,aAAU,EAClB,MAAMzB,EAAqB3C,EAAQ,OAC7B8hB,EAAcpN,EAAgB1U,EAAQ,QACtC6C,EAAU7C,EAAQ,OAClB8C,EAAU9C,EAAQ,OAClBgD,EAAM9B,EAAalB,EAAQ,QAC3BolB,EAAUplB,EAAQ,OAClBqlB,EAAcrlB,EAAQ,OAC5B,MAAMoE,EACFf,WAAAA,CAAYiiB,EAAQC,OAAY/kB,GAC5B,MAAMglB,GAAe,EAAI3iB,EAAQ4iB,uBAEjCziB,EAAI0B,SAAS,qCACT6gB,GACArlB,KAAKwlB,qBAAqBH,EAAWD,GAGzCplB,KAAKylB,SAAW,GAChBzlB,KAAK0lB,SAAW,GAChB1lB,KAAKolB,OAASA,EACdtiB,EAAI0B,SAAS,8CACb1B,EAAI0B,SAAS8gB,GACb,MAAMK,EAAWL,EAAa7V,QAAQvL,EAAQ0hB,SAAWR,GACzD,GAAwB,qBAAbO,GAAyC,OAAbA,EAGnC,OAFA7iB,EAAI0B,SAAS,sBACbxE,KAAK6lB,MAAQ,CAAC,GAIlB,GADA/iB,EAAI0B,SAASmhB,IACK,OAAbA,QAAkC,IAAbA,OAAsB,EAASA,EAASre,QAAU,EAAG,CAC3E,IAAIwe,GAAW,EAAIljB,EAAQ6G,eAAekc,GAC1C3lB,KAAK6lB,MAAQC,CACjB,CACAhjB,EAAI0B,SAAS,kBAAkBxE,KAAK6lB,SACV,qBAAf7lB,KAAK6lB,OAAuC,MAAd7lB,KAAK6lB,QAC1C7lB,KAAK6lB,MAAQ,CAAC,EAEtB,CACAL,oBAAAA,CAAqBO,EAAcC,GAC/B,GAAID,GAAgBA,EAAaze,OAAS,GAAK0e,GAAcA,EAAW1e,OAAS,EAAG,CAEhFxE,EAAI0B,SAAS,8CACb1B,EAAI0B,SAAS8gB,cACb,MAAMK,EAAWL,aAAa7V,QAAQvL,EAAQ0hB,SAAWG,GACzD,GAAwB,qBAAbJ,GAAyC,OAAbA,EAEnC,YADA7iB,EAAI0B,SAAS,wBAGjB1B,EAAI0B,SAASmhB,IACK,OAAbA,QAAkC,IAAbA,OAAsB,EAASA,EAASre,QAAU,IAExExE,EAAI0B,SAAS,2BAA4BuhB,EAAc,KAAMC,GAC7DV,aAAalM,QAAQlV,EAAQ0hB,SAAWI,EAAYL,GAEpD7iB,EAAI0B,SAAS,2BAA4BuhB,GACzCT,aAAaW,WAAW/hB,EAAQ0hB,SAAWG,GAEnD,MAEIjjB,EAAI0B,SAAS,oBAAqBuhB,EAE1C,CACA9d,WAAAA,CAAYuF,EAASyG,EAAK7O,EAAK,KAC3B,IAAIkS,EAAO,CACPlS,GAAIA,EACJ8gB,UAAWxhB,KAAKC,MAAMC,WACtB4I,QAASA,GAEbxN,KAAKmmB,SAAS7O,EAAMrD,EACxB,CACAkS,QAAAA,CAAS7O,EAAMrD,GACX,IAAImS,EAAWliB,EAAQ0hB,SAAW5lB,KAAKolB,OACvC,MAAME,GAAe,EAAI3iB,EAAQ4iB,uBACjCziB,EAAI0B,SAASxE,KAAK6lB,OAClB/iB,EAAI0B,SAAS,kBAAkBxE,KAAK6lB,UAAU5R,MAAQqD,KACtDtX,KAAK6lB,MAAM5R,GAAOqD,EAClB,IAAI+O,GAAgB,EAAIzjB,EAAQ6H,mBAAmBzK,KAAK6lB,OACxD/iB,EAAI0B,SAAS,YAAYyP,OAASjU,KAAK6lB,SACvCP,EAAalM,QAAQgN,EAAUC,EACnC,CACA5W,OAAAA,CAAQwE,GAEJ,OADAnR,EAAI0B,SAAS,uBAAuByP,OAASjU,KAAK6lB,SAC3C7lB,KAAK6lB,MAAM5R,EACtB,CACAqS,sBAAAA,GACI,IAAIthB,EAAI4J,EAAIC,EAAIC,EAChB,MAAMyX,EAAQ,GACRC,EAAU,GAChB,GAAIxmB,KAAKylB,SAASne,OAAS,IAA+B,QAAxBtC,EAAKhF,KAAK0lB,gBAA6B,IAAP1gB,OAAgB,EAASA,EAAGsC,QAAU,EACpG,MAAO,CACHmf,GAAIzmB,KAAKylB,SACTiB,GAAI1mB,KAAK0lB,UAGjB,IAAIiB,EAAqF,QAA7E/X,EAAK5O,KAAKyP,QAAQhN,EAAmBmkB,0CAAuD,IAAPhY,OAAgB,EAASA,EAAGpB,QACxHmZ,IACDA,GAAO,EAAIhkB,EAAQiL,aAAagU,EAAYvM,QAAQwR,YAAYL,IAChExmB,KAAKiI,YAAY0e,EAAMlkB,EAAmBmkB,oCAE9C,IAAIH,EAAsF,QAAhF5X,EAAK7O,KAAKyP,QAAQhN,EAAmBqkB,6CAA0D,IAAPjY,OAAgB,EAASA,EAAGrB,QACzHiZ,IACDA,GAAK,EAAI9jB,EAAQiL,aAAagU,EAAYvM,QAAQwR,YAAYN,IAC9DvmB,KAAKiI,YAAYwe,EAAIhkB,EAAmBqkB,uCAE5C,IAAIpB,EAA4F,QAAhF5W,EAAK9O,KAAKyP,QAAQhN,EAAmBskB,6CAA0D,IAAPjY,OAAgB,EAASA,EAAGtB,QACpI,IAAKkY,EAAU,CAEX,IAAIsB,EAAWpF,EAAYvM,QAAQwR,YAAY,IAC/CnB,GAAW,EAAI/iB,EAAQiL,aAAaoZ,GACpChnB,KAAKiI,YAAYyd,EAAUjjB,EAAmBskB,qCAClD,CAGA,OAFA/mB,KAAK0lB,SAAWA,EAChB1lB,KAAKylB,UAAW,EAAIN,EAAY8B,QAAQR,EAAIE,EAAM,CAAEO,WAAY,KAAMtiB,WAC/D,CACH6hB,GAAIzmB,KAAKylB,SACTiB,GAAI1mB,KAAK0lB,SAEjB,CACAtY,eAAAA,CAAgB9H,EAAK2O,IACjB,EAAIiR,EAAQ1gB,UAAU,0CAA0CE,KAAKC,SACrE,IAAIwiB,EAAYnnB,KAAKsmB,0BACrB,EAAIpB,EAAQ1gB,UAAU,wCAAwCE,KAAKC,SACnE,IAAIzD,EAASikB,EAAYiC,IAAI/T,QAAQ/N,EAAK6hB,EAAUV,IAAI7hB,WACxD5E,KAAKiI,YAAY/G,EAAQ+S,IACzB,EAAIiR,EAAQ1gB,UAAU,wCAAwCE,KAAKC,QACvE,CACA4I,aAAAA,CAAc0G,IACV,EAAIiR,EAAQ1gB,UAAU,wCAAwCE,KAAKC,SACnE,IAAI2S,EAAOtX,KAAKyP,QAAQwE,GACxB,GAAIqD,GAAQA,EAAK9J,QAAS,CACtB,IAAI2Z,EAAYnnB,KAAKsmB,0BACrB,EAAIpB,EAAQ1gB,UAAU,sCAAsCE,KAAKC,SACjE,IAAIzD,EAASikB,EAAYiC,IAAIle,QAAQoO,EAAK9J,QAAS2Z,EAAUV,IAAI7hB,SAASugB,EAAYkC,IAAIC,MAE1F,OADA,EAAIpC,EAAQ1gB,UAAU,sCAAsCE,KAAKC,SAC1DzD,CACX,CACA,OAAO,IACX,CACAuM,UAAAA,CAAWwG,OAAM3T,GACb,QAAYA,IAAR2T,EAAmB,CAEnBjU,KAAK6lB,MAAQ,CAAC,EACd,IAAIO,EAAWliB,EAAQ0hB,SAAW5lB,KAAKolB,OACvCE,aAAalM,QAAQgN,EAAU,GACnC,KACK,CACD,IAAIA,EAAWliB,EAAQ0hB,SAAW5lB,KAAKolB,OACvC,MAAME,GAAe,EAAI3iB,EAAQ4iB,uBACjCziB,EAAI0B,SAASxE,KAAK6lB,OAClB7lB,KAAK6lB,MAAM5R,GAAO,KAClB,IAAIoS,GAAgB,EAAIzjB,EAAQ6H,mBAAmBzK,KAAK6lB,OACxD/iB,EAAI0B,SAAS,sBAAsByP,OAASjU,KAAK6lB,SACjDP,EAAalM,QAAQgN,EAAUC,EACnC,CACJ,EAEJjnB,EAAQ8E,QAAUA,EAClBA,EAAQ0hB,SAAW,e,mCCxLnB1mB,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQmW,oCAAsCnW,EAAQmoB,mCAAqCnoB,EAAQ2nB,qCAAuC3nB,EAAQwnB,kCAAoCxnB,EAAQ0nB,qCAAuC1nB,EAAQ2M,qBAAuB3M,EAAQgS,oCAAsChS,EAAQsQ,yBAA2BtQ,EAAQ0O,qBAAuB1O,EAAQ8U,gCAAkC9U,EAAQiO,wBAA0BjO,EAAQyM,4BAA8BzM,EAAQ+E,4BAAyB,EACvgB/E,EAAQ+E,uBAAyB,KACjC/E,EAAQyM,4BAA8B,UACtCzM,EAAQiO,wBAA0B,QAClCjO,EAAQ8U,gCAAkC,QAC1C9U,EAAQ0O,qBAAuB,QAC/B1O,EAAQsQ,yBAA2B,KACnCtQ,EAAQgS,oCAAsC,MAC9ChS,EAAQ2M,qBAAuB,iBAC/B3M,EAAQ0nB,qCAAuC,MAC/C1nB,EAAQwnB,kCAAoC,MAC5CxnB,EAAQ2nB,qCAAuC,OAC/C3nB,EAAQmoB,mCAAqC,cAC7CnoB,EAAQmW,oCAAsC,6B,mCCd9CrW,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQooB,6BAA+BpoB,EAAQqoB,8CAA2C,EAC1FroB,EAAQqoB,yCAA2C,SACnDroB,EAAQooB,6BAA+B,CACnCE,gBAAiB,U,qCCLT5nB,EAAA,OAACA,EAAA,OACb,IAAIC,EAAmBC,MAAQA,KAAKD,kBAAqBb,OAAOe,OAAU,SAASC,EAAGC,EAAGC,EAAGC,QAC7EC,IAAPD,IAAkBA,EAAKD,GAC3B,IAAIG,EAAOrB,OAAOsB,yBAAyBL,EAAGC,GACzCG,KAAS,QAASA,GAAQJ,EAAEM,WAAaF,EAAKG,UAAYH,EAAKI,gBAClEJ,EAAO,CAAEK,YAAY,EAAMC,IAAK,WAAa,OAAOV,EAAEC,EAAI,IAE5DlB,OAAOC,eAAee,EAAGG,EAAIE,EACjC,EAAM,SAASL,EAAGC,EAAGC,EAAGC,QACTC,IAAPD,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,EACd,GACIU,EAAsBd,MAAQA,KAAKc,qBAAwB5B,OAAOe,OAAU,SAASC,EAAGa,GACxF7B,OAAOC,eAAee,EAAG,UAAW,CAAEU,YAAY,EAAMvB,MAAO0B,GACnE,EAAK,SAASb,EAAGa,GACbb,EAAE,WAAaa,CACnB,GACIC,EAAgBhB,MAAQA,KAAKgB,cAAiB,SAAUC,GACxD,GAAIA,GAAOA,EAAIR,WAAY,OAAOQ,EAClC,IAAIC,EAAS,CAAC,EACd,GAAW,MAAPD,EAAa,IAAK,IAAIb,KAAKa,EAAe,YAANb,GAAmBlB,OAAOiC,UAAUC,eAAeC,KAAKJ,EAAKb,IAAIL,EAAgBmB,EAAQD,EAAKb,GAEtI,OADAU,EAAmBI,EAAQD,GACpBC,CACX,EACII,EAAatB,MAAQA,KAAKsB,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMtC,GAAS,OAAOA,aAAiBoC,EAAIpC,EAAQ,IAAIoC,GAAE,SAAUG,GAAWA,EAAQvC,EAAQ,GAAI,CAC3G,OAAO,IAAKoC,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU1C,GAAS,IAAM2C,EAAKN,EAAUO,KAAK5C,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAS9C,GAAS,IAAM2C,EAAKN,EAAU,SAASrC,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKd,GAAUA,EAAOkB,KAAOR,EAAQV,EAAO7B,OAASsC,EAAMT,EAAO7B,OAAOgD,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACA/C,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ0gB,6BAA0B,EAClC,MAAM9U,EAAYlL,EAAQ,OACpBmL,EAAanL,EAAQ,OACrB2C,EAAqB3C,EAAQ,OAC7BoL,EAAiBpL,EAAQ,OACzB0C,EAAc1C,EAAQ,OACtB6nB,EAA8B7nB,EAAQ,OACtC0L,EAA4B1L,EAAQ,OACpC+C,EAAkB/C,EAAQ,OAC1B4C,EAAY5C,EAAQ,OACpB6C,EAAU7C,EAAQ,OAClBqL,EAAWrL,EAAQ,OACnBsL,EAAQtL,EAAQ,OAChBuL,EAAavL,EAAQ,OACrBgD,EAAM9B,EAAalB,EAAQ,QAC3BwL,EAAQxL,EAAQ,OAChB8C,EAAU9C,EAAQ,OACxB,MAAMggB,EACF3c,WAAAA,GACInD,KAAKqD,OAAS,IAAIR,EAAgBS,aAClCtD,KAAK4nB,kBAAoB,IAAI/kB,EAAgBS,aAC7CtD,KAAK0L,aAAe,IAAIF,EAA0BG,wBAAwB,UAC1E7I,EAAI0B,SAAS,6BAEbxE,KAAK4L,eAAiB,IAAIlJ,EAAUwB,QAAQzB,EAAmB0B,wBAC/DnE,KAAKuM,WAAavM,KAAKwM,sBACvBxM,KAAKyM,eAAezM,KAAKuM,YAEzBvM,KAAK0M,UAAY,IAAI1B,EAAUzI,mBAAmBC,EAAYmK,uBAC9D3M,KAAK4M,UAAYlI,KAAKC,MAEtB3E,KAAK6nB,qBAAuB,IAAI5S,IAEhCjV,KAAK8nB,SAAU,EACf9nB,KAAK+nB,WAAY,CACrB,CACAhb,gBAAAA,CAAiBib,EAAS,GACtB,IAAIhb,EAAUtI,KAAKC,MAAQqjB,EACvBhb,GAAWhN,KAAK4M,YAChB5M,KAAK4M,UAAYI,EAAU,GAE/BhN,KAAK4M,UAAYI,CACrB,CACAC,iBAAAA,CAAkB+C,EAAS9C,GACvB,IAAIC,GAAY,EAAI9B,EAAWZ,mBAAmByC,GAElDlN,KAAK4L,eAAewB,gBAAgBD,EAAW1K,EAAmB4K,wBAA0B2C,EAChG,CACA1D,sBAAAA,CAAuB0D,GAEnB,MAAM1C,EAAKtN,KAAK4L,eAAe2B,cAAc9K,EAAmB4K,wBAA0B2C,GACpFxC,EAAUF,EAChB,GAAsB,iBAAXE,EAAqB,CAC5B1K,EAAI0B,SAAS,0BACb1B,EAAI0B,SAASgJ,GACb,IAAInB,GAAc,EAAIhB,EAAW5B,eAAe+D,GAChD,OAAOnB,CACX,CAIA,OAFIrM,KAAK4L,eAAe6B,aAEjB,IACX,CACAhB,cAAAA,CAAeS,GACX,IAAIQ,EAAa,CACbC,WAAW,EAAIhL,EAAQiL,aAAaV,EAAQS,WAC5CE,WAAW,EAAIlL,EAAQiL,aAAaV,EAAQW,YAEhD/K,EAAI0B,SAAS,eACb,IAAI2I,GAAY,EAAI9B,EAAWZ,mBAAmBiD,GAClD5K,EAAI0B,SAAS2I,GAEbnN,KAAK4L,eAAewB,gBAAgBD,EAAW1K,EAAmBqL,sBAClEhL,EAAI0B,SAAS,oBACjB,CACAgI,mBAAAA,GACI,MAAMc,EAAKtN,KAAK4L,eAAe2B,cAAc9K,EAAmBqL,sBAC1DN,EAAUF,EAChB,GAAsB,iBAAXE,EAAqB,CAE5B1K,EAAI0B,SAAS,sBACb1B,EAAI0B,SAASgJ,GACb,IAAIO,GAAiB,EAAI1C,EAAW5B,eAAe+D,GACnD1K,EAAI0B,SAAS,eACb1B,EAAI0B,SAASuJ,GACb,IAAIb,EAAU,CACVS,WAAW,EAAIhL,EAAQqL,gBAAgBD,EAAeJ,WACtDE,WAAW,EAAIlL,EAAQqL,gBAAgBD,EAAeF,YAE1D,OAAOX,CACX,CAEI,OAAO,EAAI9B,EAAM6C,kBAEzB,CACAga,qBAAAA,CAAsBjY,GAElB,OADAlN,EAAI0B,SAAS,+BAA+BwL,KACrChQ,KAAK6nB,qBAAqBhnB,IAAImP,EACzC,CACA7B,OAAAA,CAAQ+Z,GACJ,OAAO5mB,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,aAAa,EAAIoL,EAAMiD,SAAS6Z,EAAchd,EAAe2Y,6BAA8B3Y,EAAeqD,qBAC1GvO,KAAKuM,WACT,GACJ,CACA4b,gBAAAA,CAAiBC,GACb,IACI,IAAIC,GAAc,EAAIhd,EAAW5B,eAAe2e,GAC5CE,EAASD,EAAY,qBACzB,GAAIC,GAAUA,EAAOhhB,OAAS,EAAG,CAC7B,IAAIihB,GAAgB,EAAI3lB,EAAQ4lB,cAAcF,GAAQ,GACtD,OAAOC,EAAc3jB,UACzB,CACJ,CACA,MAAO2M,GACHzO,EAAIyD,SAAS,qBAAsBgL,EACvC,CACJ,CACAkX,cAAAA,CAAera,EAAOyC,GAClB,IAAI2O,EAAcxf,KAAK6nB,qBAAqBhnB,IAAIuN,GAEhD,IADA,EAAI9C,EAAM9G,UAAU,iBAAkBgb,EAAapR,EAAOyC,GACtD2O,GAAe3O,GAAYA,EAASvJ,OAAS,EAAG,CAChD,GAAIkY,EAAYkJ,IAAK,CAEjB,IAAIC,GAAY,EAAIhmB,EAAQimB,mBAAmB/X,GAC3C2O,EAAYkJ,KAAOC,EACnBnJ,EAAYqJ,cAAgBhY,EAG5B/N,EAAIyD,SAAS,mBAAoBiZ,EAAapR,EAAOyC,EAE7D,MAEI2O,EAAYqJ,cAAgBhY,EAGhC7Q,KAAK8oB,sBACT,CACA,OAAO,CACX,CACAta,YAAAA,CAAayE,EAASxE,GAClB,OAAOnN,EAAUtB,KAAMqI,eAAW,GAAQ,UAAW+F,EAAOM,EAAOC,GAAY,GAC3E,IAAI3J,EAAI4J,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIwZ,EAAIC,EAAIC,EAAIC,EACpElpB,KAAKqD,OAAOwB,KAAK6J,EAAMtJ,GAAIsJ,GAE3B,IAAI8Q,EAAcxf,KAAK6nB,qBAAqBhnB,IAAIuN,GAChDtL,EAAI0B,SAAS,qCAAsC4J,GACnDtL,EAAI0B,SAAS,+BAAgCkK,EAAMtJ,GAAIgJ,EAAOoR,EAAaxf,KAAK6nB,sBAChF,IAAIsB,GAAgB,EACpB,GAAI3J,GAAe9Q,EAAMhF,OAAOnF,OACK,QAA5BS,EAAK0J,EAAMhF,OAAOnF,YAAyB,IAAPS,OAAgB,EAASA,EAAG4E,SAEjE,GAAiC,QAA5BgF,EAAKF,EAAMhF,OAAOnF,YAAyB,IAAPqK,OAAgB,EAASA,EAAGwa,eAAgB,CACjF,IAAIC,EAA6C,QAA5Bxa,EAAKH,EAAMhF,OAAOnF,YAAyB,IAAPsK,OAAgB,EAASA,EAAGjF,QACjF0f,EAA2C,QAA5Bxa,EAAKJ,EAAMhF,OAAOnF,YAAyB,IAAPuK,OAAgB,EAASA,EAAGV,MAC/Ema,EAAgBvoB,KAAKmoB,iBAAiBkB,IAC1C,EAAI/d,EAAM9G,UAAU,0BAA2B+jB,GAC3CA,GAAiBA,EAAcjhB,OAAS,GACxCtH,KAAK4nB,kBAAkB/iB,KAAK,SAAU0jB,EAAee,EAE7D,MAGI,IACI,IAAI1f,EAAuC,QAA5BmF,EAAKL,EAAMhF,OAAOnF,YAAyB,IAAPwK,OAAgB,EAASA,EAAGnF,QAC/E,GAAIA,EAAQ8I,YAAYC,WAAW,KAAM,CAErC,IAAI9C,EAAoB7P,KAAK0L,aAAaoE,4BAA4BlG,GACtE,GAAIiG,EAAmB,EACnB,EAAIvE,EAAM9G,UAAU,2BAA4BqL,GAEhDsZ,GAAgB,EAChB,IAAIpZ,EAAY,CACZC,QAAqF,QAA3Ef,EAA6B,QAAvBD,EAAKN,EAAMhF,cAA2B,IAAPsF,OAAgB,EAASA,EAAGzK,YAAyB,IAAP0K,OAAgB,EAASA,EAAGb,MACzHwB,UAAuF,QAA3ET,EAA6B,QAAvBD,EAAKR,EAAMhF,cAA2B,IAAPwF,OAAgB,EAASA,EAAG3K,YAAyB,IAAP4K,OAAgB,EAASA,EAAGS,UAC3HK,cAAeJ,EACfK,YAAyF,QAA3Eb,EAA6B,QAAvBD,EAAKV,EAAMhF,cAA2B,IAAP0F,OAAgB,EAASA,EAAG7K,YAAyB,IAAP8K,OAAgB,EAASA,EAAGa,aAE7HpG,QAAoB9J,KAAK0L,aAAayE,uBAAuBJ,GASjE,GARIjG,EAAYsG,uBACZtG,EAAYsG,sBAAsBC,SAASC,GAAUhP,EAAUtB,UAAM,OAAQ,GAAQ,YAEjFA,KAAK+M,yBACC/M,KAAKuQ,YAAYvQ,KAAK4M,UAAUhI,WAAY0L,EAAOlC,EAC7D,MAGAtE,EAAYE,aAAc,CAC1B,IAAIJ,EAAU4V,EAAYxT,OAAOud,cAAczf,EAAYE,aAAcwV,EAAYqJ,gBACrF,EAAIvd,EAAM9G,UAAU,8BAA+B4J,EAAOxE,GAC1D5J,KAAK4nB,kBAAkB/iB,KAAKuJ,EAAOxE,EACvC,CACJ,KACK,CACD,IAAImM,GAAa,EAAI1K,EAAW5B,eAAeG,GAC/C,GAAImM,EAAW9D,OAAQ,CACnB,GAAyB,gBAArB8D,EAAW9D,OAA0B,CACrC,IAAIuX,EAAoBzT,EAAWrM,OAAO8V,YACtCiK,GAAgB,EAAI7mB,EAAQ4lB,cAAcgB,GAAmB,IACjE,EAAIle,EAAM9G,UAAU,mDAAoDilB,IACxE,EAAIne,EAAM9G,UAAU,iBAAmBilB,GACvC,IAAIC,EAAmBD,EAAcE,WACrC3pB,KAAKyoB,eAAera,EAAOsb,EAAiB7Y,SAChD,EACA,EAAIvF,EAAM9G,UAAU,qBAAsB4J,EAAO2H,GACjD/V,KAAK4nB,kBAAkB/iB,KAAKuJ,EAAOxE,EACvC,CACJ,CACJ,KACK,CACD,IAAIA,EAAU4V,EAAYxT,OAAOud,cAA2C,QAA5Bja,EAAKZ,EAAMhF,OAAOnF,YAAyB,IAAP+K,OAAgB,EAASA,EAAG1F,QAAS4V,EAAYqJ,gBACrI,EAAIvd,EAAM9G,UAAU,mBAAoB4J,EAAOxE,GAC/C5J,KAAK4nB,kBAAkB/iB,KAAKuJ,EAAOxE,EACvC,CACJ,CACA,MAAO2H,GACH,IAAI3H,EAAU4V,EAAYxT,OAAOud,cAA2C,QAA5Bha,EAAKb,EAAMhF,OAAOnF,YAAyB,IAAPgL,OAAgB,EAASA,EAAG3F,QAAS4V,EAAYqJ,gBACrI,EAAIvd,EAAM9G,UAAU,mBAAoB4J,EAAOxE,GAC/C5J,KAAK4nB,kBAAkB/iB,KAAKuJ,EAAOxE,EACvC,CAOZ,IAAK+E,UACK3O,KAAKwP,QAAQd,EAAMtJ,IAAI,GACzBgJ,IAAU+a,GAAe,CACzB,IAAIxZ,EAAWjB,GACoE,QAA9Esa,EAAgC,QAA1BD,EAAKpZ,EAASjG,cAA2B,IAAPqf,OAAgB,EAASA,EAAGxkB,YAAyB,IAAPykB,OAAgB,EAASA,EAAGpZ,aACnH5P,KAAK+M,yBACC/M,KAAKuQ,YAAYvQ,KAAK4M,UAAUhI,WAA2F,QAA9EskB,EAAgC,QAA1BD,EAAKtZ,EAASjG,cAA2B,IAAPuf,OAAgB,EAASA,EAAG1kB,YAAyB,IAAP2kB,OAAgB,EAASA,EAAGtZ,UAAWxB,GAExL,CAER,GACJ,CACAwb,2BAAAA,GAII,IAAIvV,EAAUrU,KAAK4L,eAAe2B,cAAcoa,EAA4BF,0CAE5E,GADA3kB,EAAI0B,SAAS,2BAA4B6P,GACrCA,EAAS,CACT,IAAIwV,GAAW,EAAIxe,EAAW5B,eAAe4K,GAC7C,IAAK,IAAIrE,KAAW6Z,EAAU,CAC1B,IAAIC,EAAYD,EAAS7Z,GACzBlN,EAAI0B,SAAS,kBAAmBslB,GAChC,IAAIC,EAAa,CACb3b,MAAO4B,EACPhE,OAAQ,IAAIb,EAASc,cAAc,CAC/B0B,UAAWmc,EAAUE,cAAcrc,UACnCE,UAAWic,EAAUE,cAAcnc,YAEvCgb,cAAeiB,EAAUjB,cACzBH,IAAKoB,EAAUpB,KAEnB1oB,KAAK6nB,qBAAqB1R,IAAInG,EAAS+Z,EAC3C,CACJ,CACAjnB,EAAI0B,SAAS,+BAAgCxE,KAAK6nB,qBACtD,CACAiB,oBAAAA,GACI,IAAIe,EAAW,CAAC,EAChB,IAAK,IAAK7Z,EAAS+Z,KAAe/pB,KAAK6nB,qBACnC/kB,EAAI0B,SAAS,gBAAiBwL,GAC1B+Z,IACAF,EAAS7Z,GAAW,CAChBga,cAAeD,EAAW/d,OAAO8E,mBACjC+X,cAAekB,EAAWlB,cAC1BH,IAAKqB,EAAWrB,MAI5B,IAAIvU,GAAW,EAAI9I,EAAWZ,mBAAmBof,GACjD/mB,EAAI0B,SAAS,2BAA4B2P,GACzCnU,KAAK4L,eAAewB,gBAAgB+G,EAAUwT,EAA4BF,yCAC9E,CACAwC,gBAAAA,CAAiB7b,EAAOoR,EAAa0K,GAAO,GACxC,IAAIrB,EAAgBrJ,EAAYqJ,cAE5BsB,EAAmB,GACvB,IAAK,IAAKna,EAAS+Z,KAAe/pB,KAAK6nB,qBACnC/kB,EAAI0B,SAAS,gBAAiBwL,GAC1B+Z,EAAWlB,eAAiBA,IAC5B/lB,EAAI0B,SAAS,8BAA+BwL,EAAS6Y,GACrDsB,EAAiB1T,KAAKzG,IAG9B,IAAK,IAAKA,EAAS+Z,KAAe/pB,KAAK6nB,qBAC/BsC,EAAiB5R,SAASvI,IAC1BhQ,KAAK6nB,qBAAqBuC,OAAOpa,GAazC,OATAlN,EAAI0B,SAAS,iCAAkCxE,KAAK6nB,sBAGpD7nB,KAAK6nB,qBAAqB1R,IAAI/H,EAAOoR,GAErC1c,EAAI0B,SAAS,qBAAsB4J,EAAOoR,EAAaxf,KAAK6nB,sBACxDqC,GACAlqB,KAAK8oB,uBAEFqB,CACX,CACA9X,qBAAAA,CAAsBjE,EAAOkE,GACzBtS,KAAK0L,aAAa6G,yBAAyBnE,EAAOkE,EACtD,CAEA+X,WAAAA,CAAYjc,EAAOkc,EAAkB5B,GACjC,OAAOpnB,EAAUtB,UAAM,OAAQ,GAAQ,YAGnC,OAFA,EAAIsL,EAAM9G,UAAU,yBAA0B4J,GAEvC,IAAIvM,SAAQ,CAACD,EAASE,IAAWR,EAAUtB,UAAM,OAAQ,GAAQ,YACpE,IAAKA,KAAK+nB,UAAW,CACjB,IAAIxW,EAAQ,IAAIzN,MAKhB,OAJAyN,EAAM3H,QAAU,4BAChB2H,EAAMC,KAAO,oBAEb1P,EAAOyP,EAEX,CAEA,IAAIwY,EAAa,CACb3b,MAAOA,EACPpC,OAAQ,IAAIb,EAASc,cACrB4c,cAAeyB,GAAsC,GACrD5B,IAAKA,GAELyB,EAAmBnqB,KAAKiqB,iBAAiB7b,EAAO2b,GAAY,SAE1D/pB,KAAKuqB,gBAAgB/S,MAAMgT,KAAK,CAACpc,KACvCpO,KAAK+M,mBACLjK,EAAI0B,SAAS,oDAAoDxE,KAAK4M,cAAcwB,KACpFtL,EAAIsJ,UAAU,mDACd,MAAMqF,GAAQ,IAAI/M,MAAOuM,WACzB,EAAI3F,EAAM9G,UAAU,gCAAiCiN,EAAQzR,KAAKgR,SAClEpP,EAAQuoB,EACZ,KACJ,GACJ,CACAM,sBAAAA,GACIzqB,KAAK8oB,sBACT,CACAngB,OAAAA,GACI,OAAOrH,EAAUtB,UAAM,OAAQ,GAAQ,YACnCA,KAAKgR,SAAU,IAAItM,MAAOuM,WAC1B,EAAI3F,EAAM9G,UAAU,iCAAkCxE,KAAKgR,SAC3DlO,EAAIsJ,UAAU,iCAEd,IAAI8b,EAAexjB,KAAKC,MAAMC,WAC9B,IAAIyM,QAAiBrR,KAAKmO,QAAQ+Z,GAKlC,OAJAplB,EAAI0B,SAAS,uBAAuB6M,KACpCrR,KAAK4L,eAAe3D,YAAYoJ,EAAU,OAC1CrR,KAAK4pB,8BAEE,IAAI/nB,SAAQ,CAACD,EAASE,KAEzB9B,KAAK8nB,SAAU,EACf9nB,KAAK0M,UAAU7B,QAAO,IAAMvJ,EAAUtB,UAAM,OAAQ,GAAQ,YACxD8C,EAAI0B,SAAS,wBACb1B,EAAIsJ,UAAU,qCACd,MAAMkF,GAAU,IAAI5M,MAAOuM,WAC3B,EAAI3F,EAAM9G,UAAU,uBAAwB8M,EAAUtR,KAAKgR,SAE3DhR,KAAKqD,OAAOiF,KAAKtI,KAAK4M,UAAUhI,YAAaH,GAAQnD,EAAUtB,UAAM,OAAQ,GAAQ,YAEjF,GAAIyE,GAAOA,EAAI8M,MAAO,CAClBzO,EAAIyD,SAAS,2BACPvG,KAAK0M,UAAU5D,aACrB,IAAIyI,EAAQ,IAAIzN,MAChByN,EAAM3H,QAAUnF,EAAI8M,MAAM3H,QAC1B2H,EAAMC,KAAO/M,EAAI8M,MAAMrM,KAAKN,WAE5B9C,EAAOyP,EACX,MAEIvR,KAAK+nB,WAAY,EACjBnmB,IAEAkB,EAAI0B,SAAS,6BAA8BxE,KAAK6nB,sBAChD/kB,EAAIsJ,UAAU,qDACVpM,KAAK6nB,qBAAqBnS,KAAO,UAC3B1V,KAAKuqB,gBAAgB/S,MAAMgT,KAAKxqB,KAAK6nB,qBAAqB6C,SAG5E,MACA5nB,EAAI0B,SAAS,mBACb1B,EAAIsJ,UAAU,wCACRpM,KAAK0M,UAAUvG,MAAK,IAAM7E,EAAUtB,UAAM,OAAQ,GAAQ,YAE5D,OADA8C,EAAI0B,SAAS,wCACAxE,KAAK0M,UAAU/D,SAChC,KAAI,CACAvD,GAAIpF,KAAK4M,UAAUhI,WACnBmN,QAASvP,EAAYwP,oBACrBC,OAAQhH,EAAWrL,qBACnB8J,OAAQ,CACJwI,MAAOb,IAGnB,MACArR,KAAK0M,UAAU/D,UAAUmJ,OAAOvJ,KAC5B,EAAI+C,EAAM9G,UAAU,wCAAyC+D,GAC7DzG,EAAOyG,EAAI,IAGfvI,KAAK0M,UAAUxC,iBAAiBnF,IAC5B,IAAIC,EAAI4J,EACR9L,EAAI0B,SAAS,0BACb1B,EAAI0B,SAASO,GACP,WAAYA,GAAY,SAAUA,EAAM,WAKb,QAA5BC,EAAKD,EAAM2E,OAAOnF,YAAyB,IAAPS,OAAgB,EAASA,EAAGoJ,QACjEpO,KAAKwO,aAA0C,QAA5BI,EAAK7J,EAAM2E,OAAOnF,YAAyB,IAAPqK,OAAgB,EAASA,EAAGR,MAAOrJ,EAAOA,EAAMkN,SAAWhH,EAAWzL,wBAL7HQ,KAAKwO,aAAa,GAAIzJ,GAAO,EAMjC,GACF,GAmBV,GACJ,CAGA4lB,mBAAAA,CAAoB3a,GAChB,GAAIhQ,KAAKioB,sBAAsBjY,GAAU,CACrC,IAAIsH,EAAOtX,KAAK6nB,qBAAqBhnB,IAAImP,GACzC,GAAIsH,EACA,OAAO,EAAI3U,EAAQiL,aAAa0J,EAAKtL,OAAOkB,QAAQS,UAE5D,CAEJ,CACAid,2BAAAA,GACI,OAAOpT,MAAMgT,KAAKxqB,KAAK6nB,qBAAqB6C,OAChD,CACA5hB,UAAAA,GACI,OAAOxH,EAAUtB,KAAMqI,eAAW,GAAQ,UAAW0I,GAAc,SACzD/Q,KAAK0M,UAAU5D,aAGrB9I,KAAK4L,eAAe6B,WAAWhL,EAAmBiN,0BAC7CqB,GACD/Q,KAAK4L,eAAe6B,WAAWhL,EAAmB2O,oCAE1D,GACJ,CACAQ,OAAAA,CAAQtM,EAAK8I,GACT,OAAO9M,EAAUtB,UAAM,OAAQ,GAAQ,YAC/BoO,UACMpO,KAAKoW,QAAQhI,EAAO9I,EAAK9C,EAAYuQ,0BAEnD,GACJ,CACAqD,OAAAA,CAAQhI,EAAOxE,EAASkJ,GACpB,OAAOxR,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,GAAI4J,EAAS,CACT5J,KAAK+M,mBACL,MAAM1H,EAAU,CACZD,GAAIpF,KAAK4M,UAAUhI,WACnBqN,OAAQhH,EAAWtL,uBACnBoS,QAASvP,EAAYwP,oBACrBtI,OAAQ,CACJE,QAAS,CACLwE,MAAOA,EACPxE,QAASA,EACTkJ,IAAKA,KAIjB9S,KAAKqD,OAAOiF,KAAKtI,KAAK4M,UAAUhI,YAAaH,GAAQnD,EAAUtB,UAAM,OAAQ,GAAQ,YAE7EyE,GAAOA,EAAI8M,MACXzO,EAAIyD,SAAS,KAAI,IAAI7B,MAAOgC,0CAEvBjC,IAAQA,EAAI8M,OACjBzO,EAAI0B,SAAS,iBAAgB,IAAIE,MAAOgC,uCAAuC1G,KAAK4M,sBAE5F,YACM5M,KAAK0M,UAAUvG,MAAK,IAAM7E,EAAUtB,UAAM,OAAQ,GAAQ,YAE5D,OADA8C,EAAI0B,SAAS,wCACAxE,KAAK0M,UAAU/D,SAChC,KAAItD,EACR,CACJ,GACJ,CACAc,IAAAA,CAAK8M,EAASG,GACV,OAAO9R,EAAUtB,KAAMqI,eAAW,GAAQ,UAAW+F,EAAO9I,EAAKulB,GAAgB,EAAO/X,EAAMtQ,EAAYuQ,yBAA0B+X,GAAS,GACzI,IAAI9lB,EAAI4J,EAGR,GADA9L,EAAI0B,SAAS,uBAAuBc,MAC/BtF,KAAKioB,sBAAsB7Z,GAE5B,MAAM,IAAItK,MAAM,yBAEpB,IAEIiS,EAFAgV,EAAkE,QAA/C/lB,EAAKhF,KAAK6nB,qBAAqBhnB,IAAIuN,UAA2B,IAAPpJ,OAAgB,EAASA,EAAG6jB,cACtGmC,EAA+D,QAA/Cpc,EAAK5O,KAAK6nB,qBAAqBhnB,IAAIuN,UAA2B,IAAPQ,OAAgB,EAASA,EAAG5C,OAEnG8e,IACA/U,EAAa,CACTnM,QAAStE,IAGjB,IAAI2lB,GAAY,EAChB,GAAID,GAAgBD,IAAoBD,EAAQ,CAC5C,IAAIlhB,EAAUohB,EAAaE,cAAc5lB,EAAKylB,GAC9CE,GAAY,EACZlV,EAAa,CACTnM,QAASA,EAEjB,CACA,GAAImM,EAAY,CACR8U,GAAiBG,IACjBjV,EAAWlF,UAAW,EAAIlO,EAAQiL,aAAaod,EAAa9d,QAAQS,YAMxE,IAAIwd,GAAa,EAAI9f,EAAWZ,mBAAmBsL,IAC9C+U,GAAUG,QACLjrB,KAAK0L,aAAa4H,kBAAkBlF,EAAO+c,EAAYnrB,KAAKoW,QAAQ/P,KAAKrG,MAAOA,KAAK4R,QAAQvL,KAAKrG,aAGlGA,KAAKoW,QAAQhI,EAAO+c,EAAYrY,EAE9C,CACJ,GACJ,CACAtD,OAAAA,CAAQ+D,EAASC,GACb,OAAOlS,EAAUtB,KAAMqI,eAAW,GAAQ,UAAWiI,EAAOnH,EAASsK,OAASnT,GAC1E,IAAgB,IAAZ6I,EAAkB,CAClB,MAAM9D,EAAU,CACZD,GAAIkL,EACJyB,QAASvP,EAAYwP,oBACrB9Q,QAAQ,SAENlB,KAAK0M,UAAUvG,MAAK,IAAM7E,EAAUtB,UAAM,OAAQ,GAAQ,YAE5D,OADA8C,EAAI0B,SAAS,wCACAxE,KAAK0M,UAAU/D,SAChC,KAAItD,EACR,MACK,GAAIoO,EAAQ,CACb,MAAMpO,EAAU,CACZD,GAAIkL,EACJyB,QAASvP,EAAYwP,oBACrBT,MAAO,CACHrM,KAAMuO,EAAOvO,KACb0E,QAAS6J,EAAO7J,gBAGlB5J,KAAK0M,UAAUvG,MAAK,IAAM7E,EAAUtB,UAAM,OAAQ,GAAQ,YAE5D,OADA8C,EAAI0B,SAAS,wCACAxE,KAAK0M,UAAU/D,SAChC,KAAItD,EACR,CACJ,GACJ,CAEAkL,WAAAA,CAAYD,EAAOV,EAAWxB,GAC1B,OAAO9M,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,MAAMqF,EAAU,CACZD,GAAIkL,EACJyB,QAASvP,EAAYwP,oBACrBC,OAAQhH,EAAWzL,uBACnBkK,OAAQ,CACJnF,KAAM,CACFqL,UAAWA,EACXxB,MAAOA,WAIbpO,KAAK0M,UAAUvG,MAAK,IAAM7E,EAAUtB,UAAM,OAAQ,GAAQ,YAE5D,OADA8C,EAAI0B,SAAS,wCACAxE,KAAK0M,UAAU/D,SAChC,KAAItD,EACR,GACJ,CACA+lB,eAAAA,CAAgBhd,GACZ,OAAO9M,EAAUtB,UAAM,OAAQ,GAAQ,kBAE7BA,KAAK0M,UAAUvG,MAAK,IAAM7E,EAAUtB,UAAM,OAAQ,GAAQ,YAE5D,OADA8C,EAAI0B,SAAS,wCACAxE,KAAK0M,UAAU/D,SAChC,KAAI,CACAvD,GAAIpF,KAAK4M,UAAUhI,WACnBmN,QAASvP,EAAYwP,oBACrBC,OAAQhH,EAAWxL,qBACnBiK,OAAQ,CACJ0E,MAAOA,KAIfpO,KAAK6nB,qBAAqBuC,OAAOhc,GACjCpO,KAAK8oB,sBACT,GACJ,CAKApX,2BAAAA,CAA4BpB,EAAOlC,GAC/B,OAAO9M,EAAUtB,UAAM,OAAQ,GAAQ,YAEnCA,KAAKqD,OAAOiF,KAAKgI,GAAQoD,GAAoBpS,EAAUtB,UAAM,OAAQ,GAAQ,YACzE,IAAIgF,EAAI4J,EAER,GAAI8E,EAAgBxS,OAAQ,CACxB,IAAIyS,EAAUD,EAAgBxS,OAAOyS,QACjCC,EAAeF,EAAgBxS,OAAOqD,KAC1C,GAAIqP,EACA,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAatM,OAAQuM,IAAK,CAC1C,IAAIvO,EAAMsO,EAAaC,GACvB,GAAIvO,GAAOA,EAAI8I,OAASA,EAAO,CAC3B,IAAIwB,EAAYtK,EAAIsK,gBACd5P,KAAK0M,UAAUhC,yBAAyBpF,GAE9CtF,KAAK+M,yBACC/M,KAAKuQ,YAAYvQ,KAAK4M,UAAUhI,WAAYgL,EAAWxB,EACjE,CACJ,CAGAuF,IACA3T,KAAK+M,yBACC/M,KAAK0R,4BAA4B1R,KAAK4M,UAAUhI,WAAYwJ,GAE1E,MAEItL,EAAI0B,SAAS,0BAA2D,QAAhCQ,EAAK0O,EAAgBnC,aAA0B,IAAPvM,OAAgB,EAASA,EAAGE,UAA2C,QAAhC0J,EAAK8E,EAAgBnC,aAA0B,IAAP3C,OAAgB,EAASA,EAAGhF,UAEnM,MACA9G,EAAI0B,SAAS,sBACb,MAAMsP,GAAW,IAAIpP,MAAOuM,WAC5B,EAAI3F,EAAM9G,UAAU,oBAAqBsP,EAAW9T,KAAKgR,SACzD,MAAM3L,EAAU,CACZD,GAAIkL,EACJyB,QAASvP,EAAYwP,oBACrBC,OAAQhH,EAAW1L,wBACnBmK,OAAQ,CACJnF,KAAM,CACF6J,MAAOA,WAIbpO,KAAK0M,UAAUvG,MAAK,IAAM7E,EAAUtB,UAAM,OAAQ,GAAQ,YAE5D,OADA8C,EAAI0B,SAAS,wCACAxE,KAAK0M,UAAU/D,SAChC,KAAItD,EACR,GACJ,CACAgmB,gCAAAA,CAAiCze,EAAW0e,GACxC,OAAOhqB,EAAUtB,UAAM,OAAQ,GAAQ,YAEnCA,KAAKqD,OAAOiF,KAAKsE,GAAY8G,GAAoBpS,EAAUtB,UAAM,OAAQ,GAAQ,YAC7E,IAAIgF,EAAI4J,EAER,GAAI8E,EAAgBxS,OAAQ,CACxB,IAAIyS,EAAUD,EAAgBxS,OAAOyS,QACjCC,EAAeF,EAAgBxS,OAAOqD,KAC1C,GAAIqP,EACA,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAatM,OAAQuM,IAAK,CAC1C,IAAIvO,EAAMsO,EAAaC,GACvB,GAAIvO,GAAOA,EAAI8I,MAAO,CAElB,IAAIyB,EAAoB7P,KAAK0L,aAAaoE,4BAA4BxK,EAAIsE,SAC1E,GAAIiG,QACM7P,KAAK0M,UAAUhC,yBAAyBpF,OAE7C,CACD,IAAIsK,EAAYtK,EAAIsK,gBACd5P,KAAK0M,UAAUhC,yBAAyBpF,GAC9CtF,KAAK+M,iBAAiB8G,SAChB7T,KAAKuQ,YAAYvQ,KAAK4M,UAAUhI,WAAYgL,EAAWtK,EAAI8I,MACrE,CACJ,CACJ,CAGAuF,IACA3T,KAAK+M,yBACC/M,KAAKqrB,iCAAiCrrB,KAAK4M,UAAUhI,WAAY0mB,GAE/E,MAEIxoB,EAAI0B,SAAS,0BAA2D,QAAhCQ,EAAK0O,EAAgBnC,aAA0B,IAAPvM,OAAgB,EAASA,EAAGE,UAA2C,QAAhC0J,EAAK8E,EAAgBnC,aAA0B,IAAP3C,OAAgB,EAASA,EAAGhF,UAEnM,MACA9G,EAAI0B,SAAS,sBACb1B,EAAIsJ,UAAU,sBACd,MAAM0H,GAAW,IAAIpP,MAAOuM,WAC5B,EAAI3F,EAAM9G,UAAU,oBAAqBsP,EAAW9T,KAAKgR,SACzD,MAAM3L,EAAU,CACZD,GAAIwH,EACJmF,QAASvP,EAAYwP,oBACrBC,OAAQhH,EAAW3L,8BACnBoK,OAAQ,CACJ6hB,OAAQD,EACRE,kBAAkB,UAGpBxrB,KAAK0M,UAAUvG,MAAK,IAAM7E,EAAUtB,UAAM,OAAQ,GAAQ,YAC5D8C,EAAI0B,SAAS,wCACPxE,KAAK0M,UAAU/D,SACzB,KAAItD,EACR,GACJ,CACA0O,UAAAA,GACI,OAAOzS,EAAUtB,UAAM,OAAQ,GAAQ,YACnCA,KAAK4L,eAAe6B,YACxB,GACJ,CACAuG,kBAAAA,CAAmBC,EAAK1P,GACfA,GACDvE,KAAK4L,eAAe6B,WAAWhL,EAAmByR,gCAAkCD,GAExF,IAAIE,GAAW,EAAI9I,EAAWZ,mBAAmBlG,GACjDvE,KAAK4L,eAAewB,gBAAgB+G,EAAU1R,EAAmByR,gCAAkCD,EACvG,CACAG,iBAAAA,CAAkBH,GACd,IAAII,EAAUrU,KAAK4L,eAAe2B,cAAc9K,EAAmByR,gCAAkCD,GACrG,GAAII,EAAS,CACT,IAAIC,GAAS,EAAIjJ,EAAW5B,eAAe4K,GAC3C,OAAOC,CACX,CAEJ,CAEAiW,eAAAA,CAAgBe,GACZ,OAAOhqB,EAAUtB,UAAM,OAAQ,GAAQ,aACnC,EAAIsL,EAAM9G,UAAU,kBAAmB8mB,GACvCxoB,EAAIsJ,UAAU,mBACdpM,KAAK+M,mBACL,MAAM0E,GAAQ,IAAI/M,MAAOuM,UAEzB,OADA,EAAI3F,EAAM9G,UAAU,oCAAqCiN,EAAQzR,KAAKgR,SAC/D,IAAInP,SAAQ,CAACD,EAASE,IAAWR,EAAUtB,UAAM,OAAQ,GAAQ,YACpE,IAAIyrB,EAAc,EAElB,IAAK,IAAIC,EAAM,EAAGA,EAAMJ,EAAYhkB,SAAUokB,EAAK,CAC/C,IAAI1b,EAAUsb,EAAYI,GAC1B1rB,KAAK+M,iBAAiB2e,GACtB1rB,KAAKqD,OAAOiF,KAAKtI,KAAK4M,UAAUhI,YAAaH,GAAQnD,EAAUtB,UAAM,OAAQ,GAAQ,YAEjF,GAAIyE,GAAOA,EAAI8M,MAAO,CAClBzO,EAAIyD,SAAS,+BACPvG,KAAK0M,UAAU5D,aACrB,IAAIyI,EAAQ,IAAIzN,MAChByN,EAAM3H,QAAUnF,EAAI8M,MAAM3H,QAC1B2H,EAAMC,KAAO/M,EAAI8M,MAAMrM,KAAKN,WAE5B6mB,GAAe,EACXA,GAAeH,EAAYhkB,QAC3B1F,GAER,CACA5B,KAAK+M,iBAAiB2e,GACtB,MAAMja,GAAQ,IAAI/M,MAAOuM,WACzB,EAAI3F,EAAM9G,UAAU,oCAAqCiN,EAAQzR,KAAKgR,SACtEya,GAAe,EACXA,GAAeH,EAAYhkB,SAE3BxE,EAAI0B,SAAS,sBAAsBxE,KAAK4M,cAAcoD,WAChDhQ,KAAKqrB,iCAAiCrrB,KAAK4M,UAAUhI,WAAY0mB,SAEjEtrB,KAAK0L,aAAaiG,KAAK3R,KAAK4R,QAAQvL,KAAKrG,OAC/C4B,IAER,MACAkB,EAAI0B,SAAS,0CAA0CxE,KAAK4M,cAAcoD,KAC1ElN,EAAIsJ,UAAU,yCACd,MAAMyF,GAAS,IAAInN,MAAOuM,WAC1B,EAAI3F,EAAM9G,UAAU,iCAAkCqN,EAAS7R,KAAKgR,eAC9DhR,KAAK0M,UAAUvG,MAAK,IAAM7E,EAAUtB,UAAM,OAAQ,GAAQ,YAE5D,OADA8C,EAAI0B,SAAS,wCACAxE,KAAK0M,UAAU/D,SAChC,KAAI,CACAvD,GAAIpF,KAAK4M,UAAUhI,WACnBmN,QAASvP,EAAYwP,oBACrBC,OAAQhH,EAAWvL,mBACnBgK,OAAQ,CACJ0E,MAAO4B,IAGnB,CACJ,KACJ,GACJ,EAEJ5Q,EAAQ0gB,wBAA0BA,C,qCCx0BlC5gB,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQusB,wBAAqB,EAC7B,MAAMC,EAAiB9rB,EAAQ,OACzBga,EAAeha,EAAQ,OACvB6C,EAAU7C,EAAQ,OAClB0C,EAAc1C,EAAQ,MAC5B,MAAM6rB,UAA2BC,EAAeC,YAC5C,mBAAOtR,GAIH,OAHKva,KAAK8rB,WACN9rB,KAAK8rB,SAAW,IAAIH,GAEjB3rB,KAAK8rB,QAChB,CACA3oB,WAAAA,GACI4oB,QACA/rB,KAAK2d,WAAa,UAClB3d,KAAKgsB,cAAgB,8CACzB,CACAlR,MAAAA,GACI,OAAOhB,EAAakB,cACxB,CACA6B,UAAAA,CAAWgC,GACP,IAAI7Z,EACJ,GAAI6Z,GAAqBA,EAAkB/B,eAAgB,CACvD,IAAIA,EAAiB+B,EAAkB/B,eAEvC,IADA,EAAIna,EAAQ6B,UAAU,4FAA4F+W,KAAKC,UAAUqD,OAC7H,EAAIlc,EAAQqa,gBAAiB,CAC7B,IAAIiP,GAAqB,EAAItpB,EAAQ8Z,YAAYK,IACjD,EAAIna,EAAQsa,sBAAsBgP,EACtC,KACK,EACD,EAAItpB,EAAQ6B,UAAU,sDAAsDsY,KAC5E,IAAIoP,GAAyB,EAAIvpB,EAAQ4Z,qBAAqBrd,OAAOkf,OAAOlf,OAAOkf,OAAO,CAAC,EAAGtB,GAAiB,CAAET,SAAgD,QAArCrX,EAAK6Z,EAAkBxC,gBAA6B,IAAPrX,EAAgBA,EAAK,UAC1LmnB,GAAc,EAAIxpB,EAAQypB,sBAAsBF,IACpD,EAAIvpB,EAAQua,6BAA6BiP,EAC7C,CACJ,MAEQ,EAAIxpB,EAAQ0pB,MAAM,YAClB,EAAI1pB,EAAQ2pB,0BAA0B9pB,EAAY+pB,eAAe,UAGjE,EAAI5pB,EAAQ6pB,eAAehqB,EAAYiqB,sBAGnD,EAEJrtB,EAAQusB,mBAAqBA,C,mCC/C7BzsB,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ2b,cAAgB3b,EAAQ4b,eAAiB5b,EAAQ8b,uBAAoB,EAC7E9b,EAAQ8b,kBAAoB,oBAC5B9b,EAAQ4b,eAAiB,iBACzB5b,EAAQ2b,cAAgB,e,oCCJxB7b,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQstB,yBAA2BttB,EAAQysB,YAAczsB,EAAQutB,kBAAoBvtB,EAAQwtB,gBAAkBxtB,EAAQ8b,kBAAoB9b,EAAQ4b,eAAiB5b,EAAQ2b,cAAgB3b,EAAQusB,wBAAqB,EACzN,IAAIkB,EAAwB/sB,EAAQ,OACpCZ,OAAOC,eAAeC,EAAS,qBAAsB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOgsB,EAAsBlB,kBAAoB,IAC7I,IAAI7R,EAAeha,EAAQ,OAC3BZ,OAAOC,eAAeC,EAAS,gBAAiB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOiZ,EAAaiB,aAAe,IAC1H7b,OAAOC,eAAeC,EAAS,iBAAkB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOiZ,EAAakB,cAAgB,IAC5H9b,OAAOC,eAAeC,EAAS,oBAAqB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOiZ,EAAaoB,iBAAmB,IAClI,IAAI4R,EAAqBhtB,EAAQ,OACjCZ,OAAOC,eAAeC,EAAS,kBAAmB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOisB,EAAmBF,eAAiB,IACpI,IAAIG,EAAuBjtB,EAAQ,OACnCZ,OAAOC,eAAeC,EAAS,oBAAqB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOksB,EAAqBJ,iBAAmB,IAC1I,IAAIf,EAAiB9rB,EAAQ,OAC7BZ,OAAOC,eAAeC,EAAS,cAAe,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO+qB,EAAeC,WAAa,IACxH,IAAImB,EAA+BltB,EAAQ,OAC3CZ,OAAOC,eAAeC,EAAS,2BAA4B,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOmsB,EAA6BN,wBAA0B,G,qCChBpJ5sB,EAAA,OAACA,EAAA,OACb,IAAIwB,EAAatB,MAAQA,KAAKsB,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMtC,GAAS,OAAOA,aAAiBoC,EAAIpC,EAAQ,IAAIoC,GAAE,SAAUG,GAAWA,EAAQvC,EAAQ,GAAI,CAC3G,OAAO,IAAKoC,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU1C,GAAS,IAAM2C,EAAKN,EAAUO,KAAK5C,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAS9C,GAAS,IAAM2C,EAAKN,EAAU,SAASrC,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKd,GAAUA,EAAOkB,KAAOR,EAAQV,EAAO7B,OAASsC,EAAMT,EAAO7B,OAAOgD,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACA/C,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQwtB,qBAAkB,EAC1B,MAAM7pB,EAAajD,EAAQ,OACrB6C,EAAU7C,EAAQ,OAClBga,EAAeha,EAAQ,OACvBmtB,EAAgBntB,EAAQ,OACxBma,EAAgBna,EAAQ,OACxBotB,EAAkBptB,EAAQ,OAC1BqtB,EAAUrtB,EAAQ,OAClBstB,EAAgBttB,EAAQ,OACxButB,EAAWvtB,EAAQ,OACnBwtB,EAAiBxtB,EAAQ,OACzB8C,EAAU9C,EAAQ,OAClBka,EAAiBla,EAAQ,KAC/B,MAAM8sB,EACFzpB,WAAAA,GACInD,KAAKutB,mBAAqB,GAC1BvtB,KAAKwtB,YAAc,IAAIvY,IACvBjV,KAAKytB,yBAA2B,KAChCztB,KAAK0tB,qCAAuC,KAC5C1tB,KAAK2tB,yBAA2B,KAChC3tB,KAAK4tB,kBAAoB,KACzB5tB,KAAK2d,WAAa,GAClB3d,KAAKgsB,cAAgB,GACrBhsB,KAAK6tB,QAAS,EACd7tB,KAAKwtB,YAAYrX,IAAIpT,EAAW+qB,mBAAoB,IAAIT,EAASU,gBACjE/tB,KAAKwtB,YAAYrX,IAAIpT,EAAWirB,gBAAiB,IAAIf,EAAcgB,aACnEjuB,KAAKwtB,YAAYrX,IAAIpT,EAAWmrB,kBAAmB,IAAIhB,EAAgBiB,eACvEnuB,KAAKwtB,YAAYrX,IAAIpT,EAAWqrB,gBAAiB,IAAIhB,EAAciB,aACnEruB,KAAKwtB,YAAYrX,IAAIpT,EAAWurB,gBAAiB,IAAIhB,EAAeiB,YACxE,CACA/T,wBAAAA,CAAyBC,IACrB,EAAI9X,EAAQ6B,UAAU,mCAAoCiW,GAC1Dza,KAAKya,sBAAwBA,CACjC,CACAE,oBAAAA,CAAqBN,GACjBra,KAAKqa,kBAAoBA,CAC7B,CACAmU,iBAAAA,CAAkBC,GACd,IAAK,MAAOC,EAAQrvB,KAAUW,KAAKwtB,YAAY5X,UAC3C,GAAI6Y,EAAUlW,SAASmW,GACnB,OAAOrvB,CAInB,CACAwd,UAAAA,CAAWgC,GACP,OAAOvd,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,IAAIgF,EAAI4J,EAAIC,EAEZ,IADA,EAAIlM,EAAQ6B,UAAU,8BAA+B+W,KAAKC,UAAUqD,KAC/DA,EACD,MAAM,IAAI9b,EAAWyF,gBAAgBzF,EAAW0F,wBAAwBkmB,mBAE5E3uB,KAAKmc,SAAW0C,EAAkB/B,eAAeZ,SACjD,IAAIJ,EAA0B+C,EAAkB/B,eAChD,IACI,IAAI8R,SAAUA,OAAOC,UA4DjB,MAAM,IAAI9rB,EAAWyF,gBAAgBzF,EAAW0F,wBAAwBkmB,mBA3DxE,GAAI7S,EAAwBM,SAAU,CAClC,IAAI0S,EAAkBhT,EAAwBM,SACzC8B,MAAK5G,GAAsB,oBAAdA,EAAK9F,OACnBud,QAAgBH,OAAOC,UAAUG,aACjC9tB,EAAS,CACT+Q,OAAQ,UACR0J,UAAWG,EAAwBH,UACnCtW,QAAS,CACLwY,OAAQ,CACJoR,SAAwC,QAA7BjqB,EAAKkqB,UAAUD,gBAA6B,IAAPjqB,EAAgBA,EAAK,IACrEkV,QAASD,EAAcgE,oBACvBkR,WAAwB,OAAZJ,QAAgC,IAAZA,EAAqBA,EAAU,QAC/DvQ,mBAAoB,GAExBZ,UAAW,KAGfwR,EAAe,CACf5d,KAAM,kBACN0S,SAAU,IAEdhjB,EAAOmE,QAAQuY,UAAUnH,KAAK2Y,SACxBpvB,KAAK8I,aACX,MAAMumB,EAAyD,QAA7CzgB,EAAKkgB,EAAgBQ,0BAAuC,IAAP1gB,EAAgBA,EAAK,GACtF2gB,EAAyD,QAA7C1gB,EAAKigB,EAAgBU,0BAAuC,IAAP3gB,EAAgBA,EAAK,GAC5F,IAAI4gB,GAAU,EACVC,GAAc,EAClB,GAAIL,EAAS/nB,OAASioB,EAASjoB,SAAW,KAAM,EAAI6lB,EAAQwC,UAAU,UAAW,CAC7E,MAAMC,EAAiC,IAApBP,EAAS/nB,OAAe+nB,EAAS,GAAKE,EAAS,GAC5DM,EAAiB7vB,KAAKwuB,kBAAkBoB,EAAWxL,iBAC/B,OAAnByL,QAA8C,IAAnBA,OAA4B,EAASA,EAAelnB,QAAQinB,EAAY5vB,KAAKmc,UAC/GuT,GAAc,EACdD,GAAU,CACd,CACA,IAAIvL,QAAiBlkB,KAAK8vB,2BAA2BL,GAAS,EAAOC,EAAaL,EAAUE,GAC5F,IAAIrL,EAOA,MAAM,IAAInhB,EAAWyF,gBAAgBzF,EAAW0F,wBAAwBiV,cAAe,kCALvF,GADA0R,EAAalL,SAASzN,QAAQyN,GACO,IAAjCkL,EAAalL,SAAS5c,OACtB,MAAM,IAAIvE,EAAWyF,gBAAgBzF,EAAW0F,wBAAwBiV,cAAe,mCAM3F1d,KAAK2e,wBACD3e,KAAK4tB,mBACLgB,OAAOC,UAAUtlB,eAAe,aAAcvJ,KAAK4tB,mBAEvD5tB,KAAK4tB,kBAAoB,KACrBmC,QAAQjtB,IAAI,gCACZ9C,KAAKutB,mBAAmBld,SAAQ/F,GAAYA,MAC5CtK,KAAKutB,mBAAqB,EAAE,EAEhCqB,OAAOC,UAAU7nB,GAAG,aAAchH,KAAK4tB,mBACvC5tB,KAAK2e,sBAAsBzd,GAEnC,CAKR,CACA,MAAOqQ,GACH,IAAIrM,EAAOnC,EAAW0F,wBAAwBiV,cAE1CnM,aAAiBxO,EAAWyF,kBAC5BtD,EAAOqM,EAAMrM,KACHqM,EAAM3H,SAEhB5J,KAAK2e,uBACL3e,KAAK2e,sBAAsB,CACvBhD,UAAW,KACX1J,OAAQ,gBACR5M,QAAS,CACLH,KAAMA,IAItB,CACJ,GACJ,CACA4D,UAAAA,GACI,OAAOxH,EAAUtB,UAAM,OAAQ,GAAQ,aACnC,EAAI2C,EAAQ6B,UAAU,wDAClBoqB,OAAOC,kBACDD,OAAOC,UAAU/lB,cACvB,EAAInG,EAAQ6B,UAAU,2DAE9B,GACJ,CACAwrB,YAAAA,GACI,MAAMrU,EAAYjX,KAAKC,MAAMC,WAE7B,OADA,EAAIjC,EAAQ6B,UAAU,qCAAsCmX,GACrDA,CACX,CACAxV,IAAAA,CAAKiV,EAAS0D,GACV,OAAOxd,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,IAAIgF,EACJ,KACI,EAAIrC,EAAQ6B,UAAU,iCAAiC,EAAI7B,EAAQ8H,mBAAmB2Q,IACtF,IAAI6U,EAAa7U,EACjB,GAA0B,eAAtB6U,EAAWhe,OAKX,aAJMjS,KAAK8I,aACX9I,KAAKutB,mBAAmBld,SAAQ/F,GAAYA,MAC5CtK,KAAKutB,mBAAqB,QACK,QAA9BvoB,EAAK8Z,EAAcoR,aAA0B,IAAPlrB,GAAyBA,EAAG3D,KAAKyd,IAGxE,kBAAmB1D,GAAaA,EAAQ2D,qBAClC/e,KAAKmwB,gCACJ/U,EAAQ2D,qBAGT/e,KAAKowB,mBAEf,MAAMC,EAAiBrwB,KAAKwuB,kBAAkByB,EAAWK,SACzD,GAAID,EAsBA,YArBAA,EAAelqB,KAAK8pB,GAAY5tB,MAAKnB,IACjC,IAAI8D,GACJ,EAAIrC,EAAQ6B,UAAU,mCAAoCtD,GACzB,QAAhC8D,EAAK8Z,EAAcld,eAA4B,IAAPoD,GAAyBA,EAAG3D,KAAKyd,EAAe5d,EAAO,IACjG4Q,OAAMP,IACL,IAAIvM,EACJ,IAAIE,EAAOqM,EAAMrM,KACJ,OAATA,IACAA,EAAOnC,EAAW0F,wBAAwB8nB,oBAE9C,IAAIC,EAAgB,CAChB7U,UAAW3b,KAAKgwB,eAChB/d,OAAQmJ,EAAQnJ,OAChBV,MAAO,CACHrM,KAAMA,EACN0E,QAAS2H,EAAM3H,WAGvB,EAAIjH,EAAQ6B,UAAU,0CAA2C+W,KAAKC,UAAUgV,IAC/C,QAAhCxrB,EAAK8Z,EAAcld,eAA4B,IAAPoD,GAAyBA,EAAG3D,KAAKyd,EAAe0R,EAAc,IAK3G,MAAM,IAAIztB,EAAWyF,gBAAgBzF,EAAW0F,wBAAwBgoB,oBAEhF,CACA,MAAOlf,GAEH,OADA,EAAI5O,EAAQ6B,UAAU,sCAAuC+M,GACtD1P,QAAQC,OAAOyP,EAC1B,CACJ,GACJ,CACA4e,sBAAAA,GACI,OAAO7uB,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,IAAIgF,EACJ,IAAI0rB,EAA2C,QAAjC1rB,EAAKhF,KAAKqa,yBAAsC,IAAPrV,OAAgB,EAASA,EAAG8G,qBAAqB2D,QAAQ,sCAChH,IAAKihB,KAAuB,OAAXA,QAA8B,IAAXA,OAAoB,EAASA,EAAOljB,SACpE,MAAM,IAAIzK,EAAWyF,gBAAgBzF,EAAW0F,wBAAwBkoB,qBAE5E,MAAMnjB,EAAqB,OAAXkjB,QAA8B,IAAXA,OAAoB,EAASA,EAAOljB,QACvE,IAOIojB,EAPAC,EAAatV,KAAKuV,MAAMtjB,GACxBujB,EAAYF,EAAWG,aAAa3rB,QAAQ4rB,MAAM/S,MAAM5G,GACpD,SAAUA,GACW,aAAdA,EAAK9F,OAQpB,GAHIuf,GAAa,YAAaA,IAC1BH,EAAeG,EAAUzM,UAExBsM,EACD,MAAM,IAAI7tB,EAAWyF,gBAAgBzF,EAAW0F,wBAAwByoB,uBAE5E,EAAIvuB,EAAQ6B,UAAU,sCAAsCosB,KAC5D,MAAM1vB,QAAe0tB,OAAOuC,aAAaC,WAAWC,oBACpD,GAAqB,YAAjBnwB,EAAO6D,OACH6rB,IAAiB1vB,EAAOmE,QAAQ4rB,MAAM,GAAG3M,QAIjD,MAAM,IAAIvhB,EAAWyF,gBAAgBzF,EAAW0F,wBAAwByoB,qBAC5E,GACJ,CACAd,gBAAAA,GACI,OAAO9uB,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,OAAO,IAAI6B,SAAQ,CAACD,EAASE,KACzB,IAAIkD,EACJ,IAAIssB,EAAiD,QAAjCtsB,EAAKhF,KAAKqa,yBAAsC,IAAPrV,OAAgB,EAASA,EAAGoP,kBAAkB,kBACtGkd,GACDxvB,EAAO,IAAIiB,EAAWyF,gBAAgBzF,EAAW0F,wBAAwByoB,uBAE7ElxB,KAAKuf,eAAe+R,GAAenT,IAC3BA,EACAvc,IAGAE,EAAO,IAAIiB,EAAWyF,gBAAgBzF,EAAW0F,wBAAwByoB,sBAC7E,GACF,GAEV,GACJ,CACAK,mBAAAA,GACI,OAAOjwB,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,IAAIgF,EACJ,IACI,IAAIssB,EAAiD,QAAjCtsB,EAAKhF,KAAKqa,yBAAsC,IAAPrV,OAAgB,EAASA,EAAGoP,kBAAkB,kBAC3G,IAAKkd,EACD,MAAM,IAAIvuB,EAAWyF,gBAAgBzF,EAAW0F,wBAAwByoB,uBAE5E,EAAIvuB,EAAQ6B,UAAU,sDAAuD+W,KAAKC,UAAU8V,IAC5F,IAAIhC,EAAqBtvB,KAAKwxB,+BAA+BF,IAC7D,EAAI3uB,EAAQ6B,UAAU,6DAA8D+W,KAAKC,UAAU8T,IAEnG,IAAIpL,QAAiBlkB,KAAK8vB,4BAA2B,GAAO,GAAM,EAAOR,EAAoB,IAE7F,IADA,EAAI3sB,EAAQ6B,UAAU,mDAAoD+W,KAAKC,UAAU0I,KACrFA,EAgBA,MAAM,IAAInhB,EAAWyF,gBAAgBzF,EAAW0F,wBAAwBiV,cAAe,kCAhB7E,CACV,IAAI+T,EAAkB,CAAC,GACvB,EAAIzX,EAAe+J,wBAAwBG,EAAUuN,GAChDzxB,KAAK0xB,2BAA2BJ,EAAa9T,WAAYiU,MAC1D,EAAI9uB,EAAQ6B,UAAU,8DAA+D+W,KAAKC,UAAU8V,IAChGtxB,KAAKya,wBACL,EAAI9X,EAAQ6B,UAAU,+DAAgExE,KAAKya,uBAC3Fza,KAAKya,sBAAsB6W,MAG3B,EAAI3uB,EAAQ6B,UAAU,0DAChBxE,KAAK8I,cAGvB,CAIJ,CACA,MAAO5G,GAEH,MADA,EAAIS,EAAQ6B,UAAU,8CAA+C+W,KAAKC,UAAUtZ,IAC9EA,CACV,CACJ,GACJ,CACAwvB,0BAAAA,CAA2BC,EAAaC,GACpC,IAAIC,GAAiB,EACrB,IAAK,MAAM5d,KAAO0d,EACd,GAAIC,EAAY3d,GAAM,CAClB,MAAM6d,EAAMH,EAAY1d,GAClB8d,EAAMH,EAAY3d,IACxB,EAAItR,EAAQ6B,UAAU,4CAA6C+W,KAAKC,UAAUsW,KAClF,EAAInvB,EAAQ6B,UAAU,4CAA6C+W,KAAKC,UAAUuW,IAClF,MAAMC,EAAkBzW,KAAKC,UAAU,IAAIsW,EAAI5N,UAAUtM,UAAY2D,KAAKC,UAAU,IAAIuW,EAAI7N,UAAUtM,QACjGoa,IACDH,GAAiB,EACjBC,EAAI5N,SAAW,IAAI6N,EAAI7N,UACvB4N,EAAIjN,MAAQ3lB,OAAOkf,OAAO,CAAC,EAAG2T,EAAIlN,OAClCiN,EAAIzsB,QAAUnG,OAAOkf,OAAO,CAAC,EAAG2T,EAAI1sB,WAExC,EAAI1C,EAAQ6B,UAAU,gDAAiD+W,KAAKC,UAAUsW,GAC1F,CAGJ,OADA,EAAInvB,EAAQ6B,UAAU,wEAAwEqtB,KACvFA,CACX,CACA7S,SAAAA,GACIhf,KAAK2e,2BAAwBre,CACjC,CACA2e,qBAAAA,CAAsBC,GAClBlf,KAAKutB,mBAAmB9W,KAAKyI,EACjC,CACAN,0BAAAA,CAA2BD,GACvB3e,KAAK2e,sBAAwBA,CACjC,CACAiB,wBAAAA,GACI,OAAOte,EAAUtB,KAAMqI,eAAW,GAAQ,UAAW4pB,GAAI,GACzD,GACJ,CACA1d,yBAAAA,CAA0BoL,GACtB,IAAKA,EACD,OAAO,EAEX,MAAMuS,EAAWvS,EAAcwS,OAAMC,IAAkB,IAAIptB,EAAI,OAAuD,QAA/CA,EAAKhF,KAAKwuB,kBAAkB4D,UAAkC,IAAPptB,OAAgB,EAASA,EAAGqtB,cAAc,IACxK,OAAOH,CACX,CACApX,MAAAA,GACI,OAAOhB,EAAaoB,iBACxB,CACAoX,MAAAA,GACI,MAAO,kBACX,CACAd,8BAAAA,CAA+BhS,GAC3B,IAAIxa,EAAI4J,EACJ0gB,EAAqB,GACzB,IAAK,IAAIiD,KAAiB/S,EAAYhC,WAAY,CAC9C,IAAIiR,EAAYjP,EAAYhC,WAAW+U,GACnCC,EAAyB,CACzBpO,UAAWmO,EACXzN,OAAQ2J,EAAU3J,QAEtB,GAAIyN,IAAkBxvB,EAAWmrB,kBAAmB,CAChD,IAAIuE,EAAc,GAClBhE,EAAU3J,OAAOzU,SAASqiB,IACtB,IAAIC,GAAa,EAAI/vB,EAAQgwB,uBAAuBF,GACpDD,EAAYhc,KAAKkc,EAAW,IAEhCH,EAAyB,CACrBpO,UAAWmO,EACXzN,OAAQ2N,EAEhB,MACK,GAAIF,IAAkBxvB,EAAWqrB,gBAAiB,CACnD,IAAIyE,EACAC,GAC6B,QAA5B9tB,EAAKypB,EAAUppB,eAA4B,IAAPL,OAAgB,EAASA,EAAG0f,aACjEmO,EAAqD,QAA5BjkB,EAAK6f,EAAUppB,eAA4B,IAAPuJ,OAAgB,EAASA,EAAG8V,UACrFmO,EAAsBE,MAAM1tB,UAC5BytB,EAAY,CACRthB,KAAM,YACNnM,QAASwtB,EAAsBE,MAAM1tB,WAIjDmtB,EAAyB,CACrBpO,UAAWmO,EACXzN,OAAQ2J,EAAU3J,OAClBpb,OAAQ,CACJ2a,SAAU,CAAE7S,KAAM,YAClBkT,UAAWoO,GAGvB,CACAxD,EAAmB7Y,KAAK+b,EAC5B,CACA,OAAOlD,CACX,CACA/P,cAAAA,CAAeC,EAAaC,GACxB,IAAIza,EACJ,GAAK4pB,OAAOC,UAAZ,CAIA7uB,KAAKmc,SAAgD,QAApCnX,EAAKwa,EAAYnE,qBAAkC,IAAPrW,OAAgB,EAASA,EAAGmX,UACzF,EAAIxZ,EAAQ6B,UAAU,iDAAkD+W,KAAKC,UAAUgE,IACvF,IAAI8P,EAAqBtvB,KAAKwxB,+BAA+BhS,IAC7D,EAAI7c,EAAQ6B,UAAU,wDAAyD+W,KAAKC,UAAU8T,IAC9FtvB,KAAK8vB,4BAA2B,GAAO,GAAO,EAAOR,EAAoB,IACpEjtB,MAAM6hB,KACP,EAAIvhB,EAAQ6B,UAAU,8CAA+C+W,KAAKC,UAAU0I,IAEpF,IAAI8O,GAAW,EACf,IAAK,IAAIT,KAAiB/S,EAAYhC,WAAY,CAC9C,IAAIyV,EAAe/O,EAAShG,MAAM5G,GAASA,EAAK8M,YAAcmO,IAC1DW,EAAkB1T,EAAYhC,WAAW+U,GAAerO,SAC5D,IAAK+O,EACD,MAAM,IAAIlwB,EAAWyF,gBAAgBzF,EAAW0F,wBAAwBkmB,kBAAmB,2CAE/F,MAAMwE,EAAWF,EAAatO,UAAUrd,SAAW4rB,EAAgB5rB,QAC/D2rB,EAAatO,UAAUjO,QAAQkB,OAAOua,OAAM,CAAC9yB,EAAO0X,KAChD,GAAIwb,IAAkBxvB,EAAWmrB,kBAAmB,CAChD,IAAIkF,EAAWF,EAAgBxc,QAAQkB,OAAOb,GAG9C,OAFA,EAAIpU,EAAQ6B,UAAU,4CAA6CnF,EAAO+zB,GAC1EA,GAAW,EAAIxwB,EAAQgwB,uBAAuBQ,GACvCA,IAAa/zB,CACxB,CAEI,OAAOA,IAAU6zB,EAAgBxc,QAAQkB,OAAOb,EACpD,IAEHoc,IACDH,GAAW,EAEnB,CACA,IAAIA,EAIA,MAAM,IAAIjwB,EAAWyF,gBAAgBzF,EAAW0F,wBAAwBkmB,kBAAmB,wDAH3FlP,EAAgBD,EAIpB,IACD1N,OAAO5P,KACN,EAAIS,EAAQ6B,UAAU,8CAA+C+W,KAAKC,UAAUtZ,IACpFud,EAAgB,KAAK,GAxCzB,MAFIA,EAAgB,KA4CxB,CACAqQ,0BAAAA,CAA2BL,EAAS4D,EAAiB3D,EAAaJ,EAAoBE,GAClF,OAAOluB,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,IACI,IAAIszB,EAAa,GACbC,EAAgB,GACpB,IAAI,EAAIpG,EAAQwC,UAAU,UAAW,CACjC,IAAI6D,QAAuB5E,OAAOC,UAAU4E,cAAchE,EAAS,CAC/DH,mBAAoBA,EACpBE,mBAAoBA,IAExB8D,EAAW7c,KAAK+c,EACpB,MAEIF,QAAoB1E,OAAOC,UAAU6E,eAAejE,GAExD,IAAIkE,EAAe,IAA4B,OAAvBrE,QAAsD,IAAvBA,EAAgCA,EAAqB,MAAgC,OAAvBE,QAAsD,IAAvBA,EAAgCA,EAAqB,IACzM,IAEIoE,EAFAC,EAAkBP,EAAW,IACjC,EAAI3wB,EAAQ6B,UAAU,yCAA0C+W,KAAKC,UAAUqY,IAE/E,IAAIC,GAAS,EACb,GAAIH,GAAgBE,GAAmBA,EAAgBvP,QACnD,IAAK,MAAOoK,EAAQqF,KAAa/zB,KAAKwtB,YAAY5X,UAAW,CACzD,IAAIoe,QAAmBD,EAASE,qBAAqBxE,EAAS4D,EAAiB3D,EAAaiE,EAAcE,EAAiB7zB,KAAKmc,UAC5H6X,IACAJ,EAAWlF,EACX6E,EAAc9c,KAAKud,GACftF,IAAW3rB,EAAWqrB,kBACtB0F,GAAS,GAGrB,CAGJ,IAAII,EAAgB5E,EAAmB6C,OAAMgC,IAEzC,IAAIC,EAAYb,EAAcrV,MAAKmW,GACxBA,EAAWjQ,YAAc+P,EAAY/P,YAEhD,GAAIgQ,EAAW,CACX,IAAIE,EAAcH,EAAYrP,OAAOqN,OAAMlN,IACvC,IAAIsP,EAAUH,EAAUzP,UAAUzG,MAAKoG,GAC5BA,EAAQ3R,WAAWsS,EAAQ,OAEtC,QAASsP,CAAO,IAEpB,OAAOD,CACX,CACA,OAAO,CAAK,IAIhB,IAFA,EAAI3xB,EAAQ6B,UAAU,2CAA4C+W,KAAKC,UAAU8T,KACjF,EAAI3sB,EAAQ6B,UAAU,sCAAuC+W,KAAKC,UAAU+X,KACvEW,EAED,YADMl0B,KAAK8I,aACL,IAAI/F,EAAWyF,gBAAgBzF,EAAW0F,wBAAwBgoB,qBAM5E,OAJK,EAAItD,EAAQwC,UAAU,YACvB3vB,KAAKw0B,mBAAmBZ,EAAUE,SAC5BlF,OAAOC,UAAU6E,eAAejE,IAEnC8D,CACX,CACA,MAAOrxB,GACH,GAAIA,GAAkB,kBAANA,GAAkB,SAAUA,GACzB,OAAXA,EAAEgD,KACF,MAAM,IAAInC,EAAWyF,gBAAgBzF,EAAW0F,wBAAwB8nB,oBAGhF,MAAM,IAAIxtB,EAAWyF,gBAAgBzF,EAAW0F,wBAAwBiV,cAC5E,CACJ,GACJ,CACA8W,kBAAAA,CAAmBvgB,EAAK6f,GACpB,GAAIlF,OAAOC,WAAa5a,EAWpB,GAVIjU,KAAKytB,0BACLmB,OAAOC,UAAUtlB,eAAe,kBAAmBvJ,KAAKytB,0BAExDztB,KAAK0tB,uCACLkB,OAAOC,UAAU4F,OAAOlrB,eAAe,iBAAkBvJ,KAAK0tB,sCAC9DkB,OAAOC,UAAU6F,IAAInrB,eAAe,iBAAkBvJ,KAAK0tB,uCAE3D1tB,KAAK2tB,0BACLiB,OAAOuC,aAAaC,WAAW7mB,IAAI,iBAAkBvK,KAAK2tB,0BAE1DmG,EACA/D,QAAQjtB,IAAI,uCAAwCmR,GACpDjU,KAAK2tB,yBAA2B,KAC5BoC,QAAQjtB,IAAI,2CAA4C4B,KAAKC,MAAOsP,GACpEjU,KAAKuxB,sBAAsBzf,OAAM5P,IAC7B6tB,QAAQjtB,IAAI,8CAA+CZ,EAAE,GAC/D,EAEN0sB,OAAOuC,aAAaC,WAAWpqB,GAAG,iBAAkBhH,KAAK2tB,+BAGzD,OAAQ1Z,GACJ,KAAKlR,EAAW+qB,mBAERiC,QAAQjtB,IAAI,uCAAwCmR,GACpDjU,KAAKytB,yBAA4BvJ,IAC7B6L,QAAQjtB,IAAI,2CAA4C4B,KAAKC,MAAOsP,EAAKiQ,GACrEA,GAAYA,EAAS5c,OAAS,GAC9BtH,KAAKuxB,sBAAsBzf,OAAM5P,IAC7B6tB,QAAQjtB,IAAI,8CAA+CZ,EAAE,GAErE,EAEJ0sB,OAAOC,UAAU7nB,GAAG,kBAAmBhH,KAAKytB,0BAEhD,MACJ,KAAK1qB,EAAWirB,gBAER+B,QAAQjtB,IAAI,uCAAwCmR,GACpDjU,KAAK0tB,qCAAwC/f,IACzCoiB,QAAQjtB,IAAI,8CAA+C4B,KAAKC,MAAOsP,EAAKtG,GACxEA,GACA3N,KAAKuxB,sBAAsBzf,OAAM5P,IAC7B6tB,QAAQjtB,IAAI,8CAA+CZ,EAAE,GAErE,EAEJ0sB,OAAOC,UAAU4F,OAAOztB,GAAG,iBAAkBhH,KAAK0tB,sCAEtD,MACJ,KAAK3qB,EAAWurB,gBAERyB,QAAQjtB,IAAI,uCAAwCmR,GACpDjU,KAAK0tB,qCAAwC/f,IACzCoiB,QAAQjtB,IAAI,2CAA4C4B,KAAKC,MAAOsP,EAAKtG,GACrEA,GACA3N,KAAKuxB,sBAAsBzf,OAAM5P,IAC7B6tB,QAAQjtB,IAAI,8CAA+CZ,EAAE,GAErE,EAEJ0sB,OAAOC,UAAU6F,IAAI1tB,GAAG,iBAAkBhH,KAAK0tB,sCAEnD,MACJ,KAAK3qB,EAAWqrB,gBAER2B,QAAQjtB,IAAI,uCAAwCmR,GAExD,MACJ,QACI,MAIpB,EAEJ7U,EAAQwtB,gBAAkBA,C,qCCnlB1B1tB,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQstB,8BAA2B,EACnC,MAAMI,EAAqBhtB,EAAQ,OACnC,MAAM4sB,UAAiCI,EAAmBF,gBACtD,mBAAOrS,GAIH,OAHKva,KAAK8rB,WACN9rB,KAAK8rB,SAAW,IAAIY,GAEjB1sB,KAAK8rB,QAChB,CACA3oB,WAAAA,GACI4oB,QACA/rB,KAAK2d,WAAa,uBAClB3d,KAAKgsB,cAAgB,mDACzB,EAEJ5sB,EAAQstB,yBAA2BA,C,qCChBnCxtB,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQutB,uBAAoB,EAC5B,MAAMf,EAAiB9rB,EAAQ,OACzBga,EAAeha,EAAQ,OACvB6C,EAAU7C,EAAQ,OACxB,MAAM6sB,UAA0Bf,EAAeC,YAC3C,mBAAOtR,GAIH,OAHKva,KAAK8rB,WACN9rB,KAAK8rB,SAAW,IAAIa,GAEjB3sB,KAAK8rB,QAChB,CACA3oB,WAAAA,GACI4oB,QACA/rB,KAAK2d,WAAa,kBAClB3d,KAAKgsB,cAAgB,+CACzB,CACAlR,MAAAA,GACI,OAAOhB,EAAaiB,aACxB,CACA8B,UAAAA,CAAWgC,GACP,IAAI7Z,EACA2vB,EACA9V,GAAqBA,EAAkB/B,iBACvC6X,GAAiB,EAAIhyB,EAAQiyB,2BAA2B11B,OAAOkf,OAAOlf,OAAOkf,OAAO,CAAC,EAAGS,EAAkB/B,gBAAiB,CAAET,SAAU,WAE3I,IAAIwY,GAAQ,EAAIlyB,EAAQmyB,yBAAyBH,EAAgI,QAA/G3vB,EAA2B,OAAtB6Z,QAAoD,IAAtBA,OAA+B,EAASA,EAAkBlC,oBAAiC,IAAP3X,EAAgBA,EAAK,SAC9M,EAAIrC,EAAQoa,kCAAkC8X,EAClD,EAEJz1B,EAAQutB,kBAAoBA,C,qCC/BhB7sB,EAAA,OAACA,EAAA,OACb,IAAIwB,EAAatB,MAAQA,KAAKsB,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMtC,GAAS,OAAOA,aAAiBoC,EAAIpC,EAAQ,IAAIoC,GAAE,SAAUG,GAAWA,EAAQvC,EAAQ,GAAI,CAC3G,OAAO,IAAKoC,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU1C,GAAS,IAAM2C,EAAKN,EAAUO,KAAK5C,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAS9C,GAAS,IAAM2C,EAAKN,EAAU,SAASrC,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKd,GAAUA,EAAOkB,KAAOR,EAAQV,EAAO7B,OAASsC,EAAMT,EAAO7B,OAAOgD,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACA/C,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQysB,iBAAc,EACtB,MAAMxgB,EAAavL,EAAQ,OACrBwL,EAAQxL,EAAQ,OACtB,MAAM+rB,EACF1oB,WAAAA,GACInD,KAAKutB,mBAAqB,GAC1BvtB,KAAK2d,WAAa,GAClB3d,KAAKgsB,cAAgB,GACrBhsB,KAAK6tB,QAAS,EACd7tB,KAAK+0B,gBAAkB,IAAI9f,KAE3B,EAAI3J,EAAM0pB,sBAAsBC,aACpC,CACAza,wBAAAA,CAAyBC,GACrBza,KAAKya,sBAAwBA,CACjC,CACAE,oBAAAA,CAAqBN,GACjBra,KAAKqa,kBAAoBA,CAC7B,CACAC,qBAAAA,GACI,IAAItV,EAC8B,QAAjCA,EAAKhF,KAAKqa,yBAAsC,IAAPrV,GAAyBA,EAAGiE,YAAY,gBAAgB,CAAClE,EAAOO,KACtG,IAAIua,GAAe,EAAIxU,EAAW5B,eAAenE,IACjD,EAAIgG,EAAM9G,UAAU,2CAA2Cqb,KAC/D7f,KAAKk1B,eAAenwB,EAAO8a,EAAa,IACzC,WACH,GACJ,CACAZ,qBAAAA,CAAsBC,GAClBlf,KAAKutB,mBAAmB9W,KAAKyI,EACjC,CACAU,wBAAAA,GACI,OAAOte,EAAUtB,KAAMqI,eAAW,GAAQ,UAAW0I,GAAc,GAC/D,IAAI/L,QACqC,QAAjCA,EAAKhF,KAAKqa,yBAAsC,IAAPrV,OAAgB,EAASA,EAAG8D,WAAWiI,EAC5F,GACJ,CACA8L,UAAAA,CAAWgC,GACX,CACAsW,qBAAAA,CAAsBxZ,EAAW/Z,GAC7B5B,KAAK+0B,gBAAgB5e,IAAIwF,EAAW/Z,EACxC,CACAuE,IAAAA,CAAKiV,EAAS0D,EAAehM,GACzB,OAAOxR,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,IAAIgF,EAAI4J,GACR,EAAItD,EAAM9G,UAAU,+BAAgC+W,KAAKC,UAAUJ,IACnE,MAAMO,EAAY3b,KAAKgwB,eACvB,IACI,IAAIpjB,QAAqD,QAAjC5H,EAAKhF,KAAKqa,yBAAsC,IAAPrV,OAAgB,EAASA,EAAGmB,KAAKoV,KAAKC,UAAUtc,OAAOkf,OAAOlf,OAAOkf,OAAO,CAAC,EAAGhD,GAAU,CAAEO,UAAWA,KAAe7I,GACnLlG,IACkC,QAAjCgC,EAAK5O,KAAKqa,yBAAsC,IAAPzL,GAAyBA,EAAGvL,OAAOiF,KAAKsE,EAAUhI,YAAaG,IACrG,IAAIC,GACJ,EAAIsG,EAAM9G,UAAU,gCAA+B,EAAI6G,EAAWZ,mBAAmB1F,MACjFA,GAASA,EAAM7D,SACgB,QAA9B8D,EAAK8Z,EAAcoR,aAA0B,IAAPlrB,GAAyBA,EAAG3D,KAAKyd,GAC5E,KAGJA,EAAcld,SACd5B,KAAKm1B,sBAAsBxZ,EAAWmD,EAAcld,QAE5D,CACA,MAAOM,GACH,OAAOL,QAAQC,OAAOI,EAC1B,CACJ,GACJ,CACAqd,cAAAA,CAAeC,EAAaC,GACxB,OAAOne,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,IAAIgF,QACqC,QAAjCA,EAAKhF,KAAKqa,yBAAsC,IAAPrV,OAAgB,EAASA,EAAGwL,eAAegP,EAAYpR,OACxGqR,EAAgBD,EACpB,GACJ,CACAE,uBAAAA,CAAwBtR,GACpB,OAAO9M,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,IAAIgF,QACqC,QAAjCA,EAAKhF,KAAKqa,yBAAsC,IAAPrV,OAAgB,EAASA,EAAGwL,eAAepC,EAChG,GACJ,CACA4hB,YAAAA,GACI,MAAMrU,EAAYjX,KAAKC,MAAMC,WAE7B,OADA,EAAI0G,EAAM9G,UAAU,+BAAgCmX,GAC7CA,CACX,CACAuZ,cAAAA,CAAenwB,EAAOuY,GAElB,IADA,EAAIhS,EAAM9G,UAAU,mDAAkD,EAAI6G,EAAWZ,mBAAmB6S,KAAavY,GACjH,cAAeuY,EAAU,EACzB,EAAIhS,EAAM9G,UAAU,kDACpB,IAAImX,EAAY2B,EAAS3B,UACzB,MAAM/Z,EAAU5B,KAAK+0B,gBAAgBl0B,IAAI8a,GACrC/Z,IACA,EAAI0J,EAAM9G,UAAU,mDAAoD5C,GACxEA,EAAQ0b,GAERtd,KAAK+0B,gBAAgB3K,OAAOzO,MAG5B,EAAIrQ,EAAM9G,UAAU,wDACI,eAApB8Y,EAASrL,SACTjS,KAAKutB,mBAAmBld,SAAQ/F,GAAYA,MAC5CtK,KAAKutB,mBAAqB,GAC1BvtB,KAAKgf,aAGjB,CACJ,CACAzK,yBAAAA,GACI,IAAIvP,EACJ,SAA4C,QAAjCA,EAAKhF,KAAKqa,yBAAsC,IAAPrV,OAAgB,EAASA,EAAGuP,4BACpF,CACAP,kBAAAA,CAAmBC,EAAK1P,GACpB,IAAIS,EAC8B,QAAjCA,EAAKhF,KAAKqa,yBAAsC,IAAPrV,GAAyBA,EAAGgP,mBAAmBC,EAAK1P,EAClG,CACA6P,iBAAAA,CAAkBH,GACd,IAAIjP,EACJ,OAAyC,QAAjCA,EAAKhF,KAAKqa,yBAAsC,IAAPrV,OAAgB,EAASA,EAAGoP,kBAAkBH,EACnG,CACA2K,0BAAAA,CAA2BD,GACvB3e,KAAK2e,sBAAwBA,CACjC,CACA7D,MAAAA,GACI,MAAO,EACX,CACAwX,MAAAA,GACI,MAAO,cACX,CACAtT,SAAAA,GACIhf,KAAK+0B,gBAAgBK,OACzB,EAEJh2B,EAAQysB,YAAcA,C,qCC9ItB,IAAIrX,EAAmBxU,MAAQA,KAAKwU,iBAAoB,SAAUvT,GAC9D,OAAQA,GAAOA,EAAIR,WAAcQ,EAAM,CAAE,QAAWA,EACxD,EACA/B,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ6M,mBAAgB,EACxB,MAAM2V,EAAcpN,EAAgB1U,EAAQ,QACtC6C,EAAU7C,EAAQ,OACxB,MAAMmM,EACF9I,WAAAA,CAAY+J,OAAU5M,GAClBN,KAAKq1B,YAAc,GACnBr1B,KAAKs1B,eAAiBpoB,EAAUlN,KAAKu1B,wBAAwBroB,GAAWlN,KAAKw1B,eACjF,CACAA,aAAAA,GACI,OAAO5T,EAAYvM,QAAQogB,IAAIvoB,SACnC,CACAqoB,uBAAAA,CAAwBroB,GACpB,MAAO,CACHS,WAAW,EAAIhL,EAAQqL,gBAAgBd,EAAQS,WAC/CE,WAAW,EAAIlL,EAAQqL,gBAAgBd,EAAQW,WAEvD,CACA6nB,WAAAA,GACI,OAAO9T,EAAYvM,QAAQwR,YAAY7mB,KAAKq1B,YAChD,CACA,WAAInoB,GACA,OAAOlN,KAAKs1B,cAChB,CAGAjiB,OAAAA,CAAQzJ,EAAS+rB,GACb,MAAMC,GAAiB,IAAIC,aAAcC,OAAOlsB,GAC1CmsB,EAAQ/1B,KAAK01B,cACbM,EAAYpU,EAAYvM,QAAQogB,IAAIG,EAAgBG,GAAO,EAAIpzB,EAAQqL,gBAAgB2nB,GAAoB31B,KAAKkN,QAAQW,WAC9H,IAAIooB,GAAa,EAAItzB,EAAQuzB,mBAAmBH,EAAOC,GACvD,IAAIG,GAAY,EAAIxzB,EAAQiL,aAAaqoB,GACrCG,GAAgB,IAAIP,aAAcC,OAAOK,GAC7C,OAAO,EAAIxzB,EAAQ0zB,cAAcD,GAAe,EACpD,CAIAlL,aAAAA,CAActhB,EAAS+rB,GACnB,MAAMC,GAAiB,IAAIC,aAAcC,OAAOlsB,GAC1CmsB,EAAQ/1B,KAAK01B,cACbM,EAAYpU,EAAYvM,QAAQogB,IAAIG,EAAgBG,GAAO,EAAIpzB,EAAQqL,gBAAgB2nB,GAAoB31B,KAAKkN,QAAQW,WAC9H,IAAIooB,GAAa,EAAItzB,EAAQuzB,mBAAmBH,EAAOC,GACvD,OAAO,EAAIrzB,EAAQ0zB,cAAcJ,GAAY,EACjD,CAGA/sB,OAAAA,CAAQU,EAAS0sB,GACb,IAAI7M,GAAgB,EAAI9mB,EAAQ6lB,cAAc5e,GAAS,GACnD2sB,EAAmB9M,EAAc+M,eACrC,MAAOT,EAAOU,IAAmB,EAAI9zB,EAAQ+zB,oBAAoBH,EAAkBv2B,KAAKq1B,aAClFsB,EAAY/U,EAAYvM,QAAQogB,IAAImB,KAAKH,EAAiBV,GAAO,EAAIpzB,EAAQqL,gBAAgBsoB,GAAkBt2B,KAAKkN,QAAQW,WAClI,IAAK8oB,EACD,MAAM,IAAI7yB,MAAM,iCAAiC8F,EAAQhF,gCAAgC0xB,EAAgB1xB,kCAAiC,EAAIjC,EAAQiL,aAAa5N,KAAKkN,QAAQS,qCAAoC,EAAIhL,EAAQiL,aAAa5N,KAAKkN,QAAQW,cAE9P,OAAO,IAAIgpB,aAAcC,OAAOH,EACpC,CAGApN,aAAAA,CAAc3f,EAAS0sB,GACnB,IAAI7M,GAAgB,EAAI9mB,EAAQ6lB,cAAc5e,GAAS,GACnD2sB,GAAmB,EAAI5zB,EAAQqL,gBAAgByb,EAAc7kB,YACjE,MAAOmxB,EAAOU,IAAmB,EAAI9zB,EAAQ+zB,oBAAoBH,EAAkBv2B,KAAKq1B,aAClFsB,EAAY/U,EAAYvM,QAAQogB,IAAImB,KAAKH,EAAiBV,GAAO,EAAIpzB,EAAQqL,gBAAgBsoB,GAAkBt2B,KAAKkN,QAAQW,WAClI,IAAK8oB,EACD,MAAM,IAAI7yB,MAAM,iCAAiC8F,EAAQhF,gCAAgC0xB,EAAgB1xB,kCAAiC,EAAIjC,EAAQiL,aAAa5N,KAAKkN,QAAQS,qCAAoC,EAAIhL,EAAQiL,aAAa5N,KAAKkN,QAAQW,cAE9P,OAAO,IAAIgpB,aAAcC,OAAOH,EACpC,CACA7lB,gBAAAA,GACI,MAAO,CACHnD,WAAW,EAAIhL,EAAQiL,aAAa5N,KAAKkN,QAAQS,WACjDE,WAAW,EAAIlL,EAAQiL,aAAa5N,KAAKkN,QAAQW,WAEzD,EAEJzO,EAAQ6M,cAAgBA,C,qCC/ExB,IAAIlM,EAAmBC,MAAQA,KAAKD,kBAAqBb,OAAOe,OAAU,SAASC,EAAGC,EAAGC,EAAGC,QAC7EC,IAAPD,IAAkBA,EAAKD,GAC3B,IAAIG,EAAOrB,OAAOsB,yBAAyBL,EAAGC,GACzCG,KAAS,QAASA,GAAQJ,EAAEM,WAAaF,EAAKG,UAAYH,EAAKI,gBAClEJ,EAAO,CAAEK,YAAY,EAAMC,IAAK,WAAa,OAAOV,EAAEC,EAAI,IAE5DlB,OAAOC,eAAee,EAAGG,EAAIE,EACjC,EAAM,SAASL,EAAGC,EAAGC,EAAGC,QACTC,IAAPD,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,EACd,GACI22B,EAAgB/2B,MAAQA,KAAK+2B,cAAiB,SAAS52B,EAAGf,GAC1D,IAAK,IAAI43B,KAAK72B,EAAa,YAAN62B,GAAoB93B,OAAOiC,UAAUC,eAAeC,KAAKjC,EAAS43B,IAAIj3B,EAAgBX,EAASe,EAAG62B,EAC3H,EACA93B,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD03B,EAAaj3B,EAAQ,OAAcV,GACnC23B,EAAaj3B,EAAQ,OAAeV,GACpC23B,EAAaj3B,EAAQ,OAAYV,GACjC23B,EAAaj3B,EAAQ,OAAaV,GAClC23B,EAAaj3B,EAAQ,MAAgBV,E,mCChBrC,SAAS63B,IACL,MAAuD,qBAA5CC,EAA2B,YAI1C,CACA,SAASA,EAA2B9S,GAChC,MAAM+S,EAAiBA,CAACpD,EAAU3P,KAC9B,MAAOgT,KAAaC,GAAQjT,EAAU7B,MAAM,KACtC+U,EAAYvD,EAASqD,GAC3B,GAAIE,EACA,OAAoB,IAAhBD,EAAK/vB,OACEgwB,EACJH,EAAeG,EAAWD,EAAKjf,KAAK,KAC/C,EAEJ,GAAsB,qBAAXwW,OACP,OAAOuI,EAAevI,OAAQxK,EACtC,CArBAllB,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQm4B,WAAan4B,EAAQo4B,WAAap4B,EAAQq4B,aAAer4B,EAAQs4B,cAAgBt4B,EAAQu4B,kBAAe,EAChHv4B,EAAQ63B,uBAAyBA,EAoBjC73B,EAAQu4B,aAAe,CACnB,gBACA,uBACA,sBACA,0BACA,oBACA,6BACA,sBACA,eACA,eAEJv4B,EAAQs4B,cAAgB,CACpB,yBACA,qBACA,6BACA,iCAEJt4B,EAAQq4B,aAAe,CACnB,oBACA,wBACA,kCAEJr4B,EAAQo4B,WAAa,CACjB,uBAEJp4B,EAAQm4B,WAAa,CACjB,kBACA,0BACA,2BACA,qC,qCCnDJ,IAAIx3B,EAAmBC,MAAQA,KAAKD,kBAAqBb,OAAOe,OAAU,SAASC,EAAGC,EAAGC,EAAGC,QAC7EC,IAAPD,IAAkBA,EAAKD,GAC3B,IAAIG,EAAOrB,OAAOsB,yBAAyBL,EAAGC,GACzCG,KAAS,QAASA,GAAQJ,EAAEM,WAAaF,EAAKG,UAAYH,EAAKI,gBAClEJ,EAAO,CAAEK,YAAY,EAAMC,IAAK,WAAa,OAAOV,EAAEC,EAAI,IAE5DlB,OAAOC,eAAee,EAAGG,EAAIE,EACjC,EAAM,SAASL,EAAGC,EAAGC,EAAGC,QACTC,IAAPD,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,EACd,GACI22B,EAAgB/2B,MAAQA,KAAK+2B,cAAiB,SAAS52B,EAAGf,GAC1D,IAAK,IAAI43B,KAAK72B,EAAa,YAAN62B,GAAoB93B,OAAOiC,UAAUC,eAAeC,KAAKjC,EAAS43B,IAAIj3B,EAAgBX,EAASe,EAAG62B,EAC3H,EACA93B,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD03B,EAAaj3B,EAAQ,OAAkBV,GACvC23B,EAAaj3B,EAAQ,OAAeV,E,qCCjBxBU,EAAA,OAACA,EAAA,OACb,IAAIwB,EAAatB,MAAQA,KAAKsB,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMtC,GAAS,OAAOA,aAAiBoC,EAAIpC,EAAQ,IAAIoC,GAAE,SAAUG,GAAWA,EAAQvC,EAAQ,GAAI,CAC3G,OAAO,IAAKoC,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU1C,GAAS,IAAM2C,EAAKN,EAAUO,KAAK5C,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAS9C,GAAS,IAAM2C,EAAKN,EAAU,SAASrC,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKd,GAAUA,EAAOkB,KAAOR,EAAQV,EAAO7B,OAASsC,EAAMT,EAAO7B,OAAOgD,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACA/C,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ+uB,mBAAgB,EACxB,MAAMprB,EAAajD,EAAQ,OACrB6C,EAAU7C,EAAQ,OAClB83B,EAAgB93B,EAAQ,OACxBqtB,EAAUrtB,EAAQ,OACxB,MAAMquB,EACFhoB,IAAAA,CAAKiV,GACD,OAAO9Z,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,KACI,EAAI2C,EAAQ6B,UAAU,+BAA+B,EAAI7B,EAAQ8H,mBAAmB2Q,UAC9Epb,KAAKwQ,iBACX,MAAMyB,EAASmJ,EAAQnJ,OACvB,IAAI/Q,EACJ,OAAQ+Q,GACJ,IAAK,oBAEG,GAAImJ,EAAQyc,aAAc,CACtB,IAAIjuB,QAAgBglB,OAAOC,UAAUiJ,MAAMC,YAAY3c,EAAQyc,cAM/D,OALA32B,EAAS,CACL+Q,OAAQmJ,EAAQnJ,OAChB/Q,OAAQ0I,EAAQ+Y,YAEpB,EAAIhgB,EAAQ6B,UAAU,8BAA8B,EAAI7B,EAAQ8H,mBAAmBvJ,IAC5EA,CACX,CAEI,MAAM,IAAI6B,EAAWyF,gBAAgBzF,EAAW0F,wBAAwBiV,cAAe,2BAA2BzL,MAI9H,IAAK,wBACD,EACI,EAAItP,EAAQ6B,UAAU,6BAA8ByN,GACpD,IAAIrI,QAAgBglB,OAAOC,UAAUiJ,MAAME,gBAAgB5c,EAAQ1R,QAMnE,OALAxI,EAAS,CACL+Q,OAAQmJ,EAAQnJ,OAChB/Q,OAAQ0I,IAEZ,EAAIjH,EAAQ6B,UAAU,8BAA8B,EAAI7B,EAAQ8H,mBAAmBvJ,IAC5EA,CACX,CAEJ,IAAK,iCACD,EACI,EAAIyB,EAAQ6B,UAAU,6BAA8ByN,GACpD,IAAIrI,QAAgBglB,OAAOC,UAAUiJ,MAAMG,yBAAyB7c,EAAQ1R,QAM5E,OALAxI,EAAS,CACL+Q,OAAQmJ,EAAQnJ,OAChB/Q,OAAQ0I,EAAQsuB,OAEpB,EAAIv1B,EAAQ6B,UAAU,8BAA8B,EAAI7B,EAAQ8H,mBAAmBvJ,IAC5EA,CACX,CAEJ,QACI,MAAM,IAAI6B,EAAWyF,gBAAgBzF,EAAW0F,wBAAwB0vB,qBAAsB,aAAalmB,MAEvH,CACA,MAAOV,GAEH,MADA,EAAI5O,EAAQ6B,UAAU,4BAA6B+M,GAC7CA,CACV,CACJ,GACJ,CACA8gB,YAAAA,GACI,OAAO,CACX,CACAvpB,UAAAA,GACA,CACA0H,cAAAA,GACI,OAAI,EAAI2c,EAAQwC,UAAU,UACff,OAAOC,UAAUiJ,MAAMnvB,UAE3B9G,QAAQD,SACnB,CACAqyB,oBAAAA,CAAqBxE,EAAS2I,EAAe1I,EAAa8C,EAAwB6F,EAA8Blc,GAC5G,OAAO7a,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,IAAIs4B,EAAe,GACnB9F,EAAuBniB,SAAQiH,IACvBA,EAAK8M,YAAcrhB,EAAWmrB,mBAC9BoK,EAAa7hB,QAAQa,EAAKwN,OAC9B,IAEJ,IAAIH,EAAY,GACZE,EAAQ,CAAC,EAcb,IAbA,EAAIliB,EAAQ6B,UAAU,kDAAmD+W,KAAKC,UAAU8c,IACxFA,EAAajoB,SAASqiB,IAClB,IAAI6F,EAAkBF,EAA6B/T,QAAQpG,MAAM6G,GAC7B,QAAxBA,EAAYuL,SAA8C,MAAzBvL,EAAYyT,UAAsBzT,EAAY0T,mBAAqB/F,IAE5G6F,IACA5T,EAAUlO,KAAKic,EAAW,IAAM6F,EAAgBjU,SAChDO,EAAM6N,GAAY,CACd/kB,UAAW4qB,EAAgB5qB,WAEnC,KAEJ,EAAIhL,EAAQ6B,UAAU,+CAAgD+W,KAAKC,UAAUmJ,IACjFA,GAAaA,EAAUrd,OAAS,EAAG,CACnC,IAAIoxB,EAAoB,CACpBtU,UAAWrhB,EAAWmrB,kBACtBvJ,UAAWA,EACXC,QAAS,IAAIgT,EAAcH,cAC3B5S,MAAOA,GAEX,OAAO6T,CACX,CAEJ,GACJ,CACA/vB,OAAAA,CAAQ8lB,EAAWtS,GACf,OAAO7a,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,OAAO4uB,OAAOC,UAAUiJ,MAAMnvB,SAClC,GACJ,EAEJvJ,EAAQ+uB,cAAgBA,C,qCC/HZruB,EAAA,OAACA,EAAA,OACb,IAAIwB,EAAatB,MAAQA,KAAKsB,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMtC,GAAS,OAAOA,aAAiBoC,EAAIpC,EAAQ,IAAIoC,GAAE,SAAUG,GAAWA,EAAQvC,EAAQ,GAAI,CAC3G,OAAO,IAAKoC,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU1C,GAAS,IAAM2C,EAAKN,EAAUO,KAAK5C,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAS9C,GAAS,IAAM2C,EAAKN,EAAU,SAASrC,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKd,GAAUA,EAAOkB,KAAOR,EAAQV,EAAO7B,OAASsC,EAAMT,EAAO7B,OAAOgD,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACIuS,EAAmBxU,MAAQA,KAAKwU,iBAAoB,SAAUvT,GAC9D,OAAQA,GAAOA,EAAIR,WAAcQ,EAAM,CAAE,QAAWA,EACxD,EACA/B,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ6uB,iBAAc,EACtB,MAAMlrB,EAAajD,EAAQ,OACrB6C,EAAU7C,EAAQ,OAClB64B,EAASnkB,EAAgB1U,EAAQ,OACjCqtB,EAAUrtB,EAAQ,OAClB83B,EAAgB93B,EAAQ,OAC9B,MAAMmuB,EAGF9nB,IAAAA,CAAKiV,GACD,OAAO9Z,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,IAAIgF,EACJ,UACUhF,KAAKwQ,kBACX,EAAI7N,EAAQ6B,UAAU,4BAA6B+W,KAAKC,UAAUJ,IAClE,MAAMnJ,EAASmJ,EAAQnJ,OACvB,IAAI/Q,EACJ,IAAIka,EAAQyc,aA2DR,MAAM,IAAI90B,EAAWyF,gBAAgBzF,EAAW0F,wBAAwBiV,cAAe,2BAA2BzL,MA1DlH,OAAQA,GACJ,IAAK,qBAEG,GAAImJ,EAAQyc,cAAgD,kBAAzBzc,EAAQyc,cAA6B,YAAazc,EAAQyc,aAAc,CACvG,IAAIjuB,EAA0C,QAA/B5E,EAAKoW,EAAQyc,oBAAiC,IAAP7yB,OAAgB,EAASA,EAAG4E,QAClF,MAAMgsB,GAAiB,IAAIC,aAAcC,OAAOlsB,GAC1CgvB,QAAsBhK,OAAOC,UAAU4F,OAAOsD,YAAYnC,EAAgB,QAMhF,OALA10B,EAAS,CACL+Q,OAAQmJ,EAAQnJ,OAChB/Q,OAAQy3B,EAAOtjB,QAAQygB,OAAO8C,EAAcjW,aAEhD,EAAIhgB,EAAQ6B,UAAU,2BAA4B+W,KAAKC,UAAUod,IAC1D13B,CACX,CAEI,MAAM,IAAI6B,EAAWyF,gBAAgBzF,EAAW0F,wBAAwBiV,cAAe,2BAA2BzL,MAI9H,IAAK,yBACD,CACI,IAAI4mB,QAAqBjK,OAAOC,UAAU4F,OAAOuD,gBAAgB5c,EAAQyc,cAOzE,OANA,EAAIl1B,EAAQ6B,UAAU,iCAAkC+W,KAAKC,UAAUqd,IACvE33B,EAAS,CACL+Q,OAAQmJ,EAAQnJ,OAChB6mB,aAAcD,IAElB,EAAIl2B,EAAQ6B,UAAU,4BAA4B,EAAI7B,EAAQ8H,mBAAmBvJ,IAC1EA,CACX,CAEJ,IAAK,6BACD,CACI,IAAI63B,QAAkBnK,OAAOC,UAAU4F,OAAOuE,oBAAoB5d,EAAQyc,cAM1E,OALA,EAAIl1B,EAAQ6B,UAAU,4BAA4B,EAAI7B,EAAQ8H,mBAAmBsuB,IACjF73B,EAAS,CACL+Q,OAAQmJ,EAAQnJ,OAChB6mB,aAAcC,GAEX73B,CACX,CAEJ,IAAK,gCAEG,IAAI+3B,QAA0BrK,OAAOC,UAAU4F,OAAOyE,uBAAuB9d,EAAQyc,cAMrF,OALA,EAAIl1B,EAAQ6B,UAAU,4BAA4B,EAAI7B,EAAQ8H,mBAAmBwuB,IACjF/3B,EAAS,CACL+Q,OAAQmJ,EAAQnJ,OAChB6mB,aAAcG,GAEX/3B,EAGf,QACI,MAAM,IAAI6B,EAAWyF,gBAAgBzF,EAAW0F,wBAAwB0vB,qBAAsB,YAAYlmB,MAM1H,CACA,MAAOV,GAEH,MADA,EAAI5O,EAAQ6B,UAAU,0BAA2B+M,GAC3CA,CACV,CACJ,GACJ,CACA8gB,YAAAA,GACI,OAAO,CACX,CACAvpB,UAAAA,GACA,CACA0H,cAAAA,GACI,OAAI,EAAI2c,EAAQwC,UAAU,UACf3vB,KAAK2I,aAAQrI,GAEjBuB,QAAQD,SACnB,CACAqyB,oBAAAA,CAAqBxE,EAAS2I,EAAe1I,EAAa8C,EAAwB6F,EAA8Blc,GAC5G,OAAO7a,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,IAAIs4B,EAAe,GACnB9F,EAAuBniB,SAAQiH,IACvBA,EAAK8M,YAAcrhB,EAAWirB,iBAC9BsK,EAAa7hB,QAAQa,EAAKwN,OAC9B,IAEJ,IAAIH,EAAY,GACZE,EAAQ,CAAC,EACTX,EAAW,CAAC,EAsBhB,GAjBAoU,EAAajoB,SAASqiB,IAClB,IAAI6F,EAAkBF,EAA6B/T,QAAQpG,MAAM6G,GAC7B,QAAxBA,EAAYuL,SAA8C,MAAzBvL,EAAYyT,UAC7CzT,EAAY0T,mBAAqB/F,IAEzC6F,IACA5T,EAAUlO,KAAKic,EAAW,IAAM6F,EAAgBjU,SAE5CO,EAAM6N,GADNxO,GAAY,cAAeA,EACTA,EAGA,CACdvW,UAAW4qB,EAAgB5qB,WAGvC,IAEAgX,GAAaA,EAAUrd,OAAS,EAAG,CACnC,IAAIoxB,EAAoB,CACpBtU,UAAWrhB,EAAWirB,gBACtBrJ,UAAWA,EACXC,QAAS,IAAIgT,EAAcF,eAC3B7S,MAAOA,GAGX,OADA,EAAIliB,EAAQ6B,UAAU,2CAA4C+W,KAAKC,UAAUkd,IAC1EA,CACX,CAEJ,GACJ,CACA/vB,OAAAA,CAAQ8lB,EAAWtS,GACf,OAAO7a,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,OAAO4uB,OAAOC,UAAU4F,OAAO9rB,SACnC,GACJ,EAEJvJ,EAAQ6uB,YAAcA,C,qCCjKVnuB,EAAA,OAACA,EAAA,OACb,IAAIwB,EAAatB,MAAQA,KAAKsB,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMtC,GAAS,OAAOA,aAAiBoC,EAAIpC,EAAQ,IAAIoC,GAAE,SAAUG,GAAWA,EAAQvC,EAAQ,GAAI,CAC3G,OAAO,IAAKoC,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU1C,GAAS,IAAM2C,EAAKN,EAAUO,KAAK5C,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAS9C,GAAS,IAAM2C,EAAKN,EAAU,SAASrC,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKd,GAAUA,EAAOkB,KAAOR,EAAQV,EAAO7B,OAASsC,EAAMT,EAAO7B,OAAOgD,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACA/C,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQivB,iBAAc,EACtB,MAAMtrB,EAAajD,EAAQ,OACrB6C,EAAU7C,EAAQ,OAClBqtB,EAAUrtB,EAAQ,OAClB83B,EAAgB93B,EAAQ,OAC9B,MAAMuuB,EACFlrB,WAAAA,GACInD,KAAKm5B,8BAA2B74B,CACpC,CACA6F,IAAAA,CAAKiV,GACD,OAAO9Z,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,KACI,EAAI2C,EAAQ6B,UAAU,6BAA6B,EAAI7B,EAAQ8H,mBAAmB2Q,IAElF,IAAIge,EAAY,KAChB,OAAQhe,EAAQnJ,QACZ,IAAK,sBACGmJ,EAAQ1R,SACR0vB,EAAY,CACRnnB,OAAQ,kBACRvI,OAAQ,CAAC6R,KAAKC,UAAUJ,EAAQ1R,SAChCtE,GAAIV,KAAKC,MAAMC,aAEnB,EAAIjC,EAAQ6B,UAAU,+BAAgC+W,KAAKC,UAAU4d,KAEzE,MACJ,QACI,MAAM,IAAIr2B,EAAWyF,gBAAgBzF,EAAW0F,wBAAwB0vB,sBAEhF,GAAIiB,EAAW,CACX,MAAMC,QAAiBzK,OAAOuC,aAAaC,WAAWjrB,KAAKizB,GAE3D,IADA,EAAIz2B,EAAQ6B,UAAU,oCAAoC,EAAI7B,EAAQ8H,mBAAmB4uB,IACrFA,EAAS9nB,MACT,MAAM,IAAIxO,EAAWyF,gBAAgB6wB,EAAS9nB,MAAMrM,KAAMm0B,EAAS9nB,MAAM3H,SAE7E,MAAO,CACH1I,OAAQm4B,EAASn4B,OACjB+Q,OAAQmJ,EAAQnJ,OAExB,CAEI,MAAM,IAAIlP,EAAWyF,gBAAgBzF,EAAW0F,wBAAwB0vB,qBAEhF,CACA,MAAO5mB,GAEH,MADA,EAAI5O,EAAQ6B,UAAU,oCAAqC+M,GACrDA,CACV,CACJ,GACJ,CACA8gB,YAAAA,GACI,OAAO,CACX,CACA7hB,cAAAA,GAII,OAAO3O,QAAQD,SACnB,CACAqyB,oBAAAA,CAAqBxE,EAAS2I,EAAe1I,EAAa8C,EAAwB6F,EAA8Blc,GAC5G,OAAO7a,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,IACI,IAAIs4B,EAAe,GACnB9F,EAAuBniB,SAAQiH,IACvBA,EAAK8M,YAAcrhB,EAAWqrB,iBAC9BkK,EAAa7hB,QAAQa,EAAKwN,OAC9B,IAEJ,IAAIH,EAAY,GACZE,EAAQ,CAAC,EAeb,GAdAyT,EAAajoB,SAASqiB,KACC,EAAI/vB,EAAQ22B,YAAY5G,GAA3C,IACI6F,EAAkBF,EAA6B/T,QAAQpG,MAAM6G,GAC7B,QAAxBA,EAAYuL,SAA8C,MAAzBvL,EAAYyT,UAC7CzT,EAAY0T,mBAAqB/F,IAEzC6F,IACA5T,EAAUlO,KAAKic,EAAW,IAAM6F,EAAgBjU,SAChDO,EAAM6N,GAAY,CACd/kB,UAAW4qB,EAAgB5qB,WAEnC,KAEJ,EAAIhL,EAAQ6B,UAAU,2DAA4DirB,EAASlU,KAAKC,UAAUmJ,IACtGA,GAAaA,EAAUrd,OAAS,EAAG,CACnC,IAIIiyB,EAJAC,EAAUhH,EAAuBtU,MAAKsb,GAC/BA,EAAQpV,YAAcrhB,EAAWqrB,kBAI5C,IAFA,EAAIzrB,EAAQ6B,UAAU,yCAA0C+W,KAAKC,UAAUge,MAE3EA,GAAWA,EAAQ9vB,QAAUyS,GAAYA,EAASsd,aA0BlD,MAAM,IAAI12B,EAAWyF,gBAAgBzF,EAAW0F,wBAAwBiV,cAAe,sBA1BxB,CAC/D1d,KAAKmc,SAAWA,EAChB,IAAIud,EAAQ,CAACF,EAAQ9vB,OAAO2a,UACxB3a,EAAS,CACT+vB,YAAatd,EAASsd,YACtBxI,MAAOyI,GAEPC,EAAYlK,GAAW2I,EACvBuB,GAAaH,EAAQ9vB,OAAOgb,WAC5BgV,EAAMjjB,KAAK+iB,EAAQ9vB,OAAOgb,YAE9B,EAAI/hB,EAAQ6B,UAAU,4CAA6C+W,KAAKC,UAAU9R,IAE9E6vB,GADA,EAAIpM,EAAQwC,UAAU,WAIlBF,GAAW2I,QAHIxJ,OAAOuC,aAAaC,WAAWzoB,QAAQ,EAAGe,SAQtCklB,OAAOuC,aAAaC,WAAWC,mBAG9D,CASA,GALI3B,GAAe1vB,KAAKm5B,2BACpBI,EAAYv5B,KAAKm5B,yBACjBn5B,KAAKm5B,8BAA2B74B,IAEpC,EAAIqC,EAAQ6B,UAAU,4CAA6C+W,KAAKC,UAAU+d,IAC9EA,GAAaC,EAAS,CACtB,GAAwB,kBAApBD,EAAUx0B,MACV,MAAM,IAAIhC,EAAWyF,gBAAgB+wB,EAAUl0B,QAAQH,KAAMq0B,EAAUl0B,QAAQuE,SAE9E,CACD,IAAIya,EAAWkV,EAAUl0B,QAAQ4rB,MAAM/S,MAAK5G,GAAsB,aAAdA,EAAK9F,OACrDkT,EAAY6U,EAAUl0B,QAAQ4rB,MAAM/S,MAAK5G,GAAsB,cAAdA,EAAK9F,QAC1D,EAAI7O,EAAQ6B,UAAU,sCAAuCkrB,GAC7D,IAAIgJ,EAAoB,CACpBtU,UAAWrhB,EAAWqrB,gBACtBzJ,UAAWA,EACXC,QAAS,IAAIgT,EAAcJ,YAC3B3S,MAAOA,EACPtgB,KAAM,CACF8f,SAAUA,EACVK,UAAWA,EACX+U,YAAatd,EAASsd,cAG9B,OAAOf,CACX,CACJ,CACJ,CACA,MACJ,CACA,MAAOnnB,GAEH,MADA,EAAI5O,EAAQ6B,UAAU,2CAA4C+W,KAAKC,UAAUjK,IAC3EA,CACV,CACJ,GACJ,CACA5I,OAAAA,CAAQ8lB,EAAWtS,GACf,OAAO7a,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,KAAIyuB,GAAatS,GAAYA,EAASsd,aAAehL,EAAU/kB,QAuB3D,MAAM,IAAI3G,EAAWyF,gBAAgBzF,EAAW0F,wBAAwBiV,cAAe,gCAvBpB,CACnE1d,KAAKmc,SAAWA,EAChB,IAAIud,EAAQ,CAACjL,EAAU/kB,OAAO2a,UAC1B3a,EAAS,CACT+vB,YAAatd,EAASsd,YACtBxI,MAAOyI,GAEPjL,EAAU/kB,OAAOgb,WACjBgV,EAAMjjB,KAAKgY,EAAU/kB,OAAOgb,YAEhC,EAAI/hB,EAAQ6B,UAAU,+BAAgC+W,KAAKC,UAAU9R,IACrE,IACI,IAAI6vB,QAAkB3K,OAAOuC,aAAaC,WAAWzoB,QAAQ,EAAGe,GAGhE,OAFA,EAAI/G,EAAQ6B,UAAU,kCAAmC+W,KAAKC,UAAU+d,IACxEv5B,KAAKm5B,yBAA2BI,EACzBA,CACX,CACA,MAAOhoB,GAEH,MADA,EAAI5O,EAAQ6B,UAAU,8BAA+B+W,KAAKC,UAAUjK,IAC9D,IAAIxO,EAAWyF,gBAAgBzF,EAAW0F,wBAAwBiV,cAAe,mBAC3F,CACJ,CAIJ,GACJ,EAEJte,EAAQivB,YAAcA,C,qCCnMVvuB,EAAA,OAACA,EAAA,OACb,IAAIwB,EAAatB,MAAQA,KAAKsB,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMtC,GAAS,OAAOA,aAAiBoC,EAAIpC,EAAQ,IAAIoC,GAAE,SAAUG,GAAWA,EAAQvC,EAAQ,GAAI,CAC3G,OAAO,IAAKoC,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU1C,GAAS,IAAM2C,EAAKN,EAAUO,KAAK5C,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAS9C,GAAS,IAAM2C,EAAKN,EAAU,SAASrC,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKd,GAAUA,EAAOkB,KAAOR,EAAQV,EAAO7B,OAASsC,EAAMT,EAAO7B,OAAOgD,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACA/C,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ2uB,oBAAiB,EACzB,MAAMhrB,EAAajD,EAAQ,OACrB6C,EAAU7C,EAAQ,OAClBqtB,EAAUrtB,EAAQ,OAClB83B,EAAgB93B,EAAQ,OAC9B,MAAMiuB,EACF5nB,IAAAA,CAAKiV,GACD,OAAO9Z,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,IAAIgF,EACJ,KACI,EAAIrC,EAAQ6B,UAAU,gCAAgC,EAAI7B,EAAQ8H,mBAAmB2Q,UAC/Epb,KAAKwQ,iBACX,IAAIopB,EAAY,KAChB,OAAQxe,EAAQnJ,QACZ,IAAK,gBACGmJ,EAAQ1R,QAAU,YAAa0R,EAAQ1R,SACvCkwB,EAAY,CACR3nB,OAAQmJ,EAAQnJ,OAChBvI,OAAQ,CACJ0R,EAAQ1R,OAAOE,QACfwR,EAAQkJ,WAIpB,MACJ,IAAK,sBACL,IAAK,0BACL,IAAK,6BAEOlJ,EAAQ1R,SACRkwB,EAAY,CACR3nB,OAAQmJ,EAAQnJ,OAChBvI,OAAQ,CAAC0R,EAAQ1R,UAI7B,MACJ,IAAK,uBAEO0R,EAAQ1R,QAAU,kBAAmB0R,EAAQ1R,SAAqC,QAAzB1E,EAAKoW,EAAQ1R,cAA2B,IAAP1E,OAAgB,EAASA,EAAG60B,gBAA0D,kBAAjCze,EAAQ1R,OAAOmwB,gBAC9JD,EAAY,CACR3nB,OAAQmJ,EAAQnJ,OAChBvI,OAAQ,CACJ0R,EAAQkJ,QACRlJ,EAAQ1R,OAAOmwB,iBAK/B,MACJ,IAAK,oBAEOze,EAAQ1R,SACRkwB,EAAY,CACR3nB,OAAQmJ,EAAQnJ,OAChBvI,OAAQ0R,EAAQ1R,SAI5B,MACJ,QACI,MAAM,IAAI3G,EAAWyF,gBAAgBzF,EAAW0F,wBAAwB0vB,sBAEhF,IAAIyB,EAmCA,MAAM,IAAI72B,EAAWyF,gBAAgBzF,EAAW0F,wBAAwB0vB,sBAjCxE,IAAwB,+BAAnB/c,EAAQnJ,QAA8D,4BAAnBmJ,EAAQnJ,SACzDmJ,EAAQ1R,QACR,YAAa0R,EAAQ1R,OAAQ,EAChC,EAAI/G,EAAQ6B,UAAU,qDAAqD,EAAI7B,EAAQ8H,mBAAmBmvB,IAC1G,MAAME,EAAgBC,SAAS3e,EAAQ1R,OAAO4mB,QAAS,IAAI1rB,iBACrDgqB,OAAOC,UAAUzT,QAAQwe,GAC/B,MAAMI,EAAe,UAAUF,KAAiB1e,EAAQkJ,UAExD,OADA,EAAI3hB,EAAQ6B,UAAU,6CAA8Cw1B,GAC7D,CACH94B,OAAQ84B,EACR/nB,OAAQmJ,EAAQnJ,OAExB,CACK,CACD,MAAMgT,GAAQ,EAAItiB,EAAQ22B,YAAYle,EAAQkV,SACxC2J,EAAW,KAAKje,OAAOiJ,GAAOrgB,SAAS,MAE7C,IADA,EAAIjC,EAAQ6B,UAAU,kCAAmCygB,EAAOgV,GAC5DA,EAAU,OACJrL,OAAOC,UAAUzT,QAAQ,CAC3BnJ,OAAQ,6BACRvI,OAAQ,CAAC,CAAE4mB,QAAS2J,OAExB,EAAIt3B,EAAQ6B,UAAU,6CAA8Cy1B,GAAU,EAAIt3B,EAAQ8H,mBAAmBmvB,IAC7G,MAAMP,QAAiBzK,OAAOC,UAAUzT,QAAQwe,GAEhD,OADA,EAAIj3B,EAAQ6B,UAAU,uCAAuC,EAAI7B,EAAQ8H,mBAAmB4uB,IACrF,CACHn4B,OAAQm4B,EACRpnB,OAAQmJ,EAAQnJ,OAExB,CACJ,CAKR,CACA,MAAOV,GAEH,MADA,EAAI5O,EAAQ6B,UAAU,uCAAwC+M,GACxDA,CACV,CACJ,GACJ,CACA8gB,YAAAA,GACI,OAAO,CACX,CACA7hB,cAAAA,GACI,OAAI,EAAI2c,EAAQwC,UAAU,UACff,OAAOC,UAAUzT,QAAQ,CAAEnJ,OAAQ,wBAEvCpQ,QAAQD,SACnB,CACAqyB,oBAAAA,CAAqBxE,EAAS2I,EAAe1I,EAAa8C,EAAwB6F,EAA8Blc,GAC5G,OAAO7a,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,IACI,IAAIs4B,EAAe,GACnB9F,EAAuBniB,SAAQiH,IACvBA,EAAK8M,YAAcrhB,EAAW+qB,oBAC9BwK,EAAa7hB,QAAQa,EAAKwN,OAC9B,IAEJ,IAAIH,EAAY,GACZE,EAAQ,CAAC,EAcb,GAbAyT,EAAajoB,SAASqiB,IAClB,IAAIwH,GAAe,EAAIv3B,EAAQ22B,YAAY5G,GACvC6F,EAAkBF,EAA6B/T,QAAQpG,MAAM6G,GACrDA,EAAYuL,UAAY4J,GAAyC,KAAzBnV,EAAYyT,UACpDzT,EAAY0T,mBAAqB/F,IAEzC6F,IACA5T,EAAUlO,KAAKic,EAAW,IAAM6F,EAAgBjU,SAChDO,EAAM6N,GAAY,CACd/kB,UAAW4qB,EAAgB5qB,WAEnC,IAEAgX,GAAaA,EAAUrd,OAAS,EAAG,CACnC,IAAIoxB,EAAoB,CACpBtU,UAAWrhB,EAAW+qB,mBACtBnJ,UAAWA,EACXC,QAAS,IAAIgT,EAAcD,cAC3B9S,MAAOA,GAEX,OAAO6T,CACX,CACA,MACJ,CACA,MAAOnnB,GACH,MAAMA,CACV,CACJ,GACJ,CACA5I,OAAAA,CAAQ8lB,EAAWtS,GACf,OAAO7a,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,OAAO4uB,OAAOC,UAAUzT,QAAQ,CAAEnJ,OAAQ,uBAC9C,GACJ,EAEJ7S,EAAQ2uB,eAAiBA,C,qCC5KzB,IAAIhuB,EAAmBC,MAAQA,KAAKD,kBAAqBb,OAAOe,OAAU,SAASC,EAAGC,EAAGC,EAAGC,QAC7EC,IAAPD,IAAkBA,EAAKD,GAC3B,IAAIG,EAAOrB,OAAOsB,yBAAyBL,EAAGC,GACzCG,KAAS,QAASA,GAAQJ,EAAEM,WAAaF,EAAKG,UAAYH,EAAKI,gBAClEJ,EAAO,CAAEK,YAAY,EAAMC,IAAK,WAAa,OAAOV,EAAEC,EAAI,IAE5DlB,OAAOC,eAAee,EAAGG,EAAIE,EACjC,EAAM,SAASL,EAAGC,EAAGC,EAAGC,QACTC,IAAPD,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,EACd,GACI22B,EAAgB/2B,MAAQA,KAAK+2B,cAAiB,SAAS52B,EAAGf,GAC1D,IAAK,IAAI43B,KAAK72B,EAAa,YAAN62B,GAAoB93B,OAAOiC,UAAUC,eAAeC,KAAKjC,EAAS43B,IAAIj3B,EAAgBX,EAASe,EAAG62B,EAC3H,EACA93B,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD03B,EAAaj3B,EAAQ,OAAqBV,E,qCChB9BU,EAAA,OAACA,EAAA,OACb,IAAIwB,EAAatB,MAAQA,KAAKsB,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMtC,GAAS,OAAOA,aAAiBoC,EAAIpC,EAAQ,IAAIoC,GAAE,SAAUG,GAAWA,EAAQvC,EAAQ,GAAI,CAC3G,OAAO,IAAKoC,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU1C,GAAS,IAAM2C,EAAKN,EAAUO,KAAK5C,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAS9C,GAAS,IAAM2C,EAAKN,EAAU,SAASrC,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKd,GAAUA,EAAOkB,KAAOR,EAAQV,EAAO7B,OAASsC,EAAMT,EAAO7B,OAAOgD,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACA/C,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQmvB,iBAAc,EACtB,MAAMxrB,EAAajD,EAAQ,OACrB6C,EAAU7C,EAAQ,OAClBqtB,EAAUrtB,EAAQ,OAClB83B,EAAgB93B,EAAQ,OAC9B,MAAMyuB,EACFprB,WAAAA,GAWI,CAEJkvB,YAAAA,GACI,OAAO,CACX,CACA8H,eAAAA,GACI,OAAO74B,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,MAAMo6B,QAAmBp6B,KAAK2I,aAAQrI,GACtC,IAAIqN,EAAYysB,EAAWlW,SAAS,GAAGvW,UACvC,OAAOA,CACX,GACJ,CACAsmB,oBAAAA,CAAqBxE,EAAS2I,EAAe1I,EAAa8C,EAAwB6F,EAA8Blc,GAC5G,OAAO7a,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,IACI,IAAIs4B,EAAe,GACnB9F,EAAuBniB,SAAQiH,IACvBA,EAAK8M,YAAcrhB,EAAWurB,iBAC9BgK,EAAa7hB,QAAQa,EAAKwN,OAC9B,IAEJ,IAAIH,EAAY,GACZE,EAAQ,CAAC,EACb,GAA2B,GAAvByT,EAAahxB,OACb,OAEJ,MAAM+yB,QAAqBr6B,KAAKm6B,kBAehC,GAdA7B,EAAajoB,SAASqiB,IAClB,IAAI1tB,GACe,EAAIrC,EAAQ22B,YAAY5G,GAA3C,IACI6F,EAAkBF,EAA6B/T,QAAQpG,MAAM6G,GAC5B,MAAzBA,EAAYyT,UACZzT,EAAY0T,mBAAqB/F,IAEzC6F,IACA5T,EAAUlO,KAAKic,EAAW,IAAM6F,EAAgBjU,SAChDO,EAAM6N,GAAY,CACd/kB,UAAgD,QAApC3I,EAAKuzB,EAAgB5qB,iBAA8B,IAAP3I,EAAgBA,EAAKq1B,GAErF,IAEA1V,GAAaA,EAAUrd,OAAS,EAAG,CACnC,IAAIoxB,EAAoB,CACpBtU,UAAWrhB,EAAWurB,gBACtB3J,UAAWA,EACXC,QAAS,IAAIgT,EAAcL,YAC3B1S,MAAOA,GAEX,OAAO6T,CACX,CACA,MACJ,CACA,MAAOnnB,GACH,MAAMA,CACV,CACJ,GACJ,CACAf,cAAAA,GACI,OAAI,EAAI2c,EAAQwC,UAAU,UACf3vB,KAAK2I,aAAQrI,GAEjBuB,QAAQD,SACnB,CACA04B,YAAAA,GACI,OAAO1L,OAAOC,UAAU6F,GAC5B,CACAvuB,IAAAA,CAAKiV,GACD,OAAO9Z,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,UACUA,KAAKwQ,kBACX,EAAI7N,EAAQ6B,UAAU,4BAA6B+W,KAAKC,UAAUJ,IAClE,MAAMnJ,EAASmJ,EAAQnJ,OACvB,IAAI/Q,EACJ,GAAIka,EAAQyc,cAAgB73B,KAAKs6B,eAAgB,CAC7C,IAAIC,EAAiBnf,EAAQyc,aAC7B,OAAQ5lB,GACJ,IAAK,2BACD,MAAMuoB,QAAyBx6B,KAAKs6B,eAAeG,SAAS,4BAA4BC,qBAAqBH,GAE7Gr5B,EAAS,CACL+Q,OAAQ,2BACR/Q,OAAQs5B,EAAiB7X,WAE7B,MACJ,IAAK,qCACD,MAAMgY,QAAyB36B,KAAKs6B,eAAeG,SAAS,sCAAsCG,+BAA+BL,GACjIr5B,EAAS,CACL+Q,OAAQ,qCACR/Q,OAAQy5B,EAAiBE,QAE7B,MACJ,IAAK,kBACD,MAAM/B,QAAqB94B,KAAKs6B,eAAeG,SAAS,mBAAmB1C,YAAYwC,GACvFr5B,EAAS,CACL+Q,OAAQ,kBACR/Q,OAAQ43B,EAAanW,WAEzB,MACJ,IAAK,0BACD,MAAMmY,QAA6B96B,KAAKs6B,eAAeG,SAAS,2BAA2BM,oBAAoBR,GAC/Gr5B,EAAS,CACL+Q,OAAQ,0BACR/Q,OAAQ45B,EAAqBnY,WAEjC,MAEZ,CACA,OAAOzhB,CACX,CACA,MAAOgB,GAEH,MADA,EAAIS,EAAQ6B,UAAU,0BAA2BtC,GAC3CA,CACV,CACJ,GACJ,CACAyG,OAAAA,CAAQ8lB,EAAWtS,GACf,OAAO7a,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,IAAIgF,EACJ,OAAsC,QAA9BA,EAAKhF,KAAKs6B,sBAAmC,IAAPt1B,OAAgB,EAASA,EAAGy1B,SAAS,oBAAoB9xB,SAC3G,GACJ,EAEJvJ,EAAQmvB,YAAcA,C,kCCrJtBrvB,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ47B,WAAa57B,EAAQ67B,cAAgB77B,EAAQ87B,aAAe97B,EAAQ+7B,WAAa/7B,EAAQg8B,cAAgBh8B,EAAQi8B,gBAAa,EACtIj8B,EAAQi8B,WAAa,CACjBC,QAAS,cACTC,QAAS,mBAEbn8B,EAAQg8B,cAAgB,CACpBE,QAAS,0CACTE,QAAS,0CACTC,cAAe,0CAEnBr8B,EAAQ+7B,WAAa,CACjBG,QAAS,eAEbl8B,EAAQ87B,aAAe,CACnBI,QAAS,iBAEbl8B,EAAQ67B,cAAgB,CACpBS,eAAgB,sBAEpBt8B,EAAQ47B,WAAa,CACjBM,QAAS,W,qCCrBb,IAAI9mB,EAAmBxU,MAAQA,KAAKwU,iBAAoB,SAAUvT,GAC9D,OAAQA,GAAOA,EAAIR,WAAcQ,EAAM,CAAE,QAAWA,EACxD,EACA/B,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQu8B,QAAUv8B,EAAQw8B,YAAcx8B,EAAQy8B,kBAAoBz8B,EAAQ08B,mBAAgB,EAC5F,MAAMj5B,EAAkB2R,EAAgB1U,EAAQ,QAChD,MAAMg8B,UAAsBj5B,EAAgBwS,QACxClS,WAAAA,GACI4oB,OACJ,EAEJ3sB,EAAQ08B,cAAgBA,EACxB,MAAMD,UAA0Bh5B,EAAgBwS,QAC5ClS,WAAAA,GACI4oB,OACJ,EAEJ3sB,EAAQy8B,kBAAoBA,EAC5B,MAAMD,EACFz4B,WAAAA,CAAYoB,GACRvE,KAAKuE,KAAOA,CAChB,EAEJnF,EAAQw8B,YAAcA,EACtB,MAAMD,EACFx4B,WAAAA,CAAY44B,GACR/7B,KAAK+7B,OAASA,CAClB,EAEJ38B,EAAQu8B,QAAUA,C,qCC7BlB,IAAI57B,EAAmBC,MAAQA,KAAKD,kBAAqBb,OAAOe,OAAU,SAASC,EAAGC,EAAGC,EAAGC,QAC7EC,IAAPD,IAAkBA,EAAKD,GAC3B,IAAIG,EAAOrB,OAAOsB,yBAAyBL,EAAGC,GACzCG,KAAS,QAASA,GAAQJ,EAAEM,WAAaF,EAAKG,UAAYH,EAAKI,gBAClEJ,EAAO,CAAEK,YAAY,EAAMC,IAAK,WAAa,OAAOV,EAAEC,EAAI,IAE5DlB,OAAOC,eAAee,EAAGG,EAAIE,EACjC,EAAM,SAASL,EAAGC,EAAGC,EAAGC,QACTC,IAAPD,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,EACd,GACI22B,EAAgB/2B,MAAQA,KAAK+2B,cAAiB,SAAS52B,EAAGf,GAC1D,IAAK,IAAI43B,KAAK72B,EAAa,YAAN62B,GAAoB93B,OAAOiC,UAAUC,eAAeC,KAAKjC,EAAS43B,IAAIj3B,EAAgBX,EAASe,EAAG62B,EAC3H,EACA93B,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ2e,cAAgB3e,EAAQ48B,yBAA2B58B,EAAQ68B,0BAA4B78B,EAAQ88B,mBAAqB98B,EAAQy8B,kBAAoBz8B,EAAQu8B,QAAUv8B,EAAQ08B,cAAgB18B,EAAQw8B,YAAcx8B,EAAQ+8B,eAAiB/8B,EAAQg9B,qBAAuBh9B,EAAQi9B,eAAiBj9B,EAAQk9B,kBAAoBl9B,EAAQm9B,qBAAuBn9B,EAAQo9B,UAAYp9B,EAAQq9B,wBAAqB,EACrZ,IAAIC,EAAa58B,EAAQ,OACzBZ,OAAOC,eAAeC,EAAS,qBAAsB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO67B,EAAWD,kBAAoB,IAClIv9B,OAAOC,eAAeC,EAAS,YAAa,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO67B,EAAWF,SAAW,IAChHt9B,OAAOC,eAAeC,EAAS,uBAAwB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO67B,EAAWH,oBAAsB,IACtIr9B,OAAOC,eAAeC,EAAS,oBAAqB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO67B,EAAWJ,iBAAmB,IAChIp9B,OAAOC,eAAeC,EAAS,iBAAkB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO67B,EAAWL,cAAgB,IAC1Hn9B,OAAOC,eAAeC,EAAS,uBAAwB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO67B,EAAWN,oBAAsB,IACtIl9B,OAAOC,eAAeC,EAAS,iBAAkB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO67B,EAAWP,cAAgB,IAC1H,IAAInc,EAAWlgB,EAAQ,OACvBZ,OAAOC,eAAeC,EAAS,cAAe,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOmf,EAAS4b,WAAa,IAClH18B,OAAOC,eAAeC,EAAS,gBAAiB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOmf,EAAS8b,aAAe,IACtH58B,OAAOC,eAAeC,EAAS,UAAW,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOmf,EAAS2b,OAAS,IAC1Gz8B,OAAOC,eAAeC,EAAS,oBAAqB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOmf,EAAS6b,iBAAmB,IAC9H9E,EAAaj3B,EAAQ,OAAUV,GAC/B,IAAI6a,EAAgBna,EAAQ,OAC5BZ,OAAOC,eAAeC,EAAS,qBAAsB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOoZ,EAAciiB,kBAAoB,IACrIh9B,OAAOC,eAAeC,EAAS,4BAA6B,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOoZ,EAAcgiB,yBAA2B,IACnJ/8B,OAAOC,eAAeC,EAAS,2BAA4B,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOoZ,EAAc+hB,wBAA0B,IACjJ98B,OAAOC,eAAeC,EAAS,gBAAiB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOoZ,EAAc8D,aAAe,G,qCCnC/Gje,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACb,IAAI0U,EAAmBxU,MAAQA,KAAKwU,iBAAoB,SAAUvT,GAC9D,OAAQA,GAAOA,EAAIR,WAAcQ,EAAM,CAAE,QAAWA,EACxD,EAmBA,SAAS07B,EAAiBt3B,GACtB,MAA2B,kBAAZA,GACX,OAAQA,GACR,YAAaA,GACO,QAApBA,EAAQ0M,OAChB,CACA,SAAS6qB,EAAiBv3B,GACtB,OAAOs3B,EAAiBt3B,IAAY,WAAYA,CACpD,CACA,SAASi3B,EAAkBj3B,GACvB,OAAOs3B,EAAiBt3B,KAAaw3B,EAAgBx3B,IAAYg3B,EAAeh3B,GACpF,CACA,SAASw3B,EAAgBx3B,GACrB,MAAO,WAAYA,CACvB,CACA,SAASg3B,EAAeh3B,GACpB,MAAO,UAAWA,CACtB,CAnCAnG,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQu9B,iBAAmBA,EAC3Bv9B,EAAQw9B,iBAAmBA,EAC3Bx9B,EAAQk9B,kBAAoBA,EAC5Bl9B,EAAQy9B,gBAAkBA,EAC1Bz9B,EAAQi9B,eAAiBA,EACzBj9B,EAAQ09B,UAAYA,EACpB19B,EAAQ+8B,eAAiBA,EACzB/8B,EAAQg9B,qBAAuBA,EAC/Bh9B,EAAQ29B,oBAAsBA,EAC9B39B,EAAQq9B,mBAAqBA,EAC7Br9B,EAAQ49B,oBAAsBA,EAC9B59B,EAAQ69B,SAAWA,EACnB79B,EAAQ89B,eAAiBA,EACzB99B,EAAQ+9B,mBAAqBA,EAC7B/9B,EAAQo9B,UAAYA,EACpBp9B,EAAQg+B,QAAUA,EAClBh+B,EAAQm9B,qBAAuBA,EAmB/B,MAAMc,EAAsBv9B,EAAQ,OAC9B8hB,EAAcpN,EAAgB1U,EAAQ,QAC5C,MAAMw9B,EACFn6B,WAAAA,CAAYo6B,GACRv9B,KAAK6T,EAAI,EACmB,IAAT0pB,EAAa,IAAIC,WAAW,GAAc,KAATD,EAAc,IAAIE,YAAY,GAAK,IAAIC,YAAY,GAEnG19B,KAAK29B,aADLJ,EACoB3b,EAAYvM,QAAQwR,YAAY0W,EAAO,GAAG,GAG1C,CAE5B,CACAK,YAAAA,GACI,OAAO59B,KAAK29B,aAAe39B,KAAK6T,GACpC,EAEJ,MAAMgqB,EAAiB,IAAIP,EAA2B,GAChDQ,EAAkB,IAAIR,EAA2B,IACvD,SAASR,IACL,MAAMiB,EAAoB,IAAbr5B,KAAKC,MACZkgB,EAAQgZ,EAAeD,eAC7B,OAAOG,EAAOlZ,CAClB,CACA,SAASsX,IACL,MAAM4B,EAAOC,OAAOt5B,KAAKC,OAASq5B,OAAO,KACnCnZ,EAAQmZ,OAAOF,EAAgBF,gBACrC,OAAOG,EAAOlZ,CAClB,CACA,SAASuX,EAAqBnqB,EAAQvI,EAAQtE,GAC1C,MAAO,CACHA,GAAIA,GAAM03B,IACV/qB,QAAS,MACTE,SACAvI,SAER,CACA,SAASqzB,EAAoB33B,EAAIlE,GAC7B,MAAO,CACHkE,KACA2M,QAAS,MACT7Q,SAER,CACA,SAASu7B,EAAmBr3B,EAAImM,EAAOhN,GACnC,MAAO,CACHa,KACA2M,QAAS,MACTR,MAAO4rB,EAAmB5rB,EAAOhN,GAEzC,CACA,SAASy4B,EAAoB93B,GACzB,OAAOm4B,EAAoBY,qBAAqB1lB,SAASrT,EAC7D,CACA,SAAS+3B,EAASiB,GACd,OAAKh/B,OAAOwrB,KAAK2S,EAAoBc,oBAAoB5lB,SAAS2lB,GAG3Db,EAAoBc,mBAAmBD,GAFnCb,EAAoBc,mBAAmBd,EAAoBe,cAG1E,CACA,SAASlB,EAAeh4B,GACpB,MAAMm5B,EAAQn/B,OAAOo/B,OAAOjB,EAAoBc,oBAAoBjgB,MAAMhc,GAAMA,EAAEgD,OAASA,IAC3F,OAAKm5B,GACMhB,EAAoBc,mBAAmBd,EAAoBe,cAG1E,CACA,SAASjB,EAAmB5rB,EAAOhN,GAC/B,MAAqB,qBAAVgN,EACA0rB,EAASI,EAAoBkB,iBAEnB,kBAAVhtB,IACPA,EAAQrS,OAAOkf,OAAOlf,OAAOkf,OAAO,CAAC,EAAG6e,EAASI,EAAoBmB,eAAgB,CAAE50B,QAAS2H,KAEhF,qBAAThN,IACPgN,EAAMhN,KAAOA,GAEby4B,EAAoBzrB,EAAMrM,QAC1BqM,EAAQ2rB,EAAe3rB,EAAMrM,OAE1BqM,EACX,CACA,SAASktB,EAAer7B,GACpB,MAAMs7B,EAAUt7B,EAAIi7B,MAAM,IAAIM,OAAO,QAAS,OAC9C,GAAKD,GAAYA,EAAQp3B,OAEzB,OAAOo3B,EAAQ,EACnB,CACA,SAASE,EAAmBx7B,EAAKy7B,GAC7B,MAAMC,EAAWL,EAAer7B,GAChC,MAAwB,qBAAb07B,GAEJ,IAAIH,OAAOE,GAAOE,KAAKD,EAClC,CACA,SAAStC,EAAUp5B,GACf,OAAOw7B,EAAmBx7B,EAAK,WACnC,CACA,SAASg6B,EAAQh6B,GACb,OAAOw7B,EAAmBx7B,EAAK,SACnC,CACA,SAASm5B,EAAqBr6B,EAAGkB,EAAK86B,GAClC,OAAOh8B,EAAE0H,QAAQ2O,SAAS,0BAA4BrW,EAAE0H,QAAQ2O,SAAS,wBACnE,IAAIzU,MAAM,eAAeo6B,gBAAmB96B,KAC5ClB,CACV,C,mCC7IA,IAAI88B,EAFJ9/B,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ4/B,8BAA2B,EAEnC,SAAWA,GACPA,EAAyBA,EAAyB,iBAAmB,GAAK,gBAC1EA,EAAyBA,EAAyB,wBAA0B,KAAO,sBACtF,CAHD,CAGGA,IAA6B5/B,EAAQ4/B,yBAA2BA,EAA2B,CAAC,G,kCCJ/F,IAAIC,EAFJ//B,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ6/B,cAAW,EAEnB,SAAWA,GACPA,EAAS,WAAa,MACzB,CAFD,CAEGA,IAAa7/B,EAAQ6/B,SAAWA,EAAW,CAAC,G,qCCL/C//B,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ4/B,yBAA2B5/B,EAAQ6/B,cAAW,EACtD,IAAIC,EAAmBp/B,EAAQ,MAC/BZ,OAAOC,eAAeC,EAAS,WAAY,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOq+B,EAAiBD,QAAU,IACpH,IAAIE,EAAkBr/B,EAAQ,OAC9BZ,OAAOC,eAAeC,EAAS,2BAA4B,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOs+B,EAAgBH,wBAA0B,G,mCCGnJ,SAAS9C,IACL,MAAO,CACH,QAAW,eACX,KAAQ98B,EAAQ2e,cAChB,SAAY,kEAEpB,CACA,SAASke,IACL,MAAO,CACH,QAAW,aACX,KAAQ78B,EAAQ4e,kBAChB,SAAY,kEAEpB,CACA,SAASge,IACL,MAAO,CACH,QAAW,kBACX,KAAQ58B,EAAQ6e,oBAChB,SAAY,GAEpB,CA5BA/e,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ6e,oBAAsB7e,EAAQ4e,kBAAoB5e,EAAQ2e,mBAAgB,EAClF3e,EAAQ88B,mBAAqBA,EAC7B98B,EAAQ68B,0BAA4BA,EACpC78B,EAAQ48B,yBAA2BA,EACnC58B,EAAQ2e,cAAgB,aACxB3e,EAAQ4e,kBAAoB,kBAC5B5e,EAAQ6e,oBAAsB,mB,oCCa9B,SAASmhB,IACL,OAAOxQ,OAAOyQ,aAClB,CACA,SAASC,IACL,OAAO1Q,OAAO2Q,eAClB,CACA,SAASC,EAAqBp8B,GAC1B,MAAMq8B,EAAS,IAAIC,IAAIt8B,GACjBu8B,EAAgBF,EAAOG,SAASrd,MAAM,KAAKjK,OAAOunB,SACxD,GAAIF,EAAcr4B,QAAU,EAAG,CAC3B,MAAMw4B,EAAUH,EAAc,GACxBzlB,EAAUylB,EAAc,GAC9B,MAAO,CAAEG,UAAS5lB,UACtB,CACJ,CAnCYpa,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACbZ,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ2gC,qBAAuB3gC,EAAQ4gC,oBAAsB5gC,EAAQmtB,cAAgBntB,EAAQ6gC,gBAAkB7gC,EAAQ8gC,aAAe9gC,EAAQ6c,qBAAuB7c,EAAQ6sB,mBAAqB7sB,EAAQ+gC,iBAAmB/gC,EAAQghC,YAAchhC,EAAQqtB,sBAAwBrtB,EAAQihC,iBAAc,EACzSjhC,EAAQggC,cAAgBA,EACxBhgC,EAAQkgC,gBAAkBA,EAC1BlgC,EAAQogC,qBAAuBA,EAC/BpgC,EAAQihC,YAAc,aACtBjhC,EAAQqtB,sBAA0C,qBAAXmC,QAA0BA,OAAO0R,SAASC,SAAShoB,SAAS,WAC7F,gCACA,+BACNnZ,EAAQghC,YAAc,+BAEtBhhC,EAAQ+gC,iBAAmB,GAAG/gC,EAAQihC,6BACtCjhC,EAAQ6sB,mBAAqB,iCAE7B7sB,EAAQ6c,qBAAuB,IAE/B7c,EAAQ8gC,aAAe,iBACvB9gC,EAAQ6gC,gBAAkB,QAE1B7gC,EAAQmtB,cAAgB,wBAgBxBntB,EAAQ4gC,oBAAsB,aAC9B5gC,EAAQ2gC,qBAAuB,iB,qCCpC/B7gC,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQqJ,wBAA0BrJ,EAAQoJ,qBAAkB,EAC5D,IAAI60B,EAAsBv9B,EAAQ,OAClCZ,OAAOC,eAAeC,EAAS,kBAAmB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOw8B,EAAoB70B,eAAiB,IACrItJ,OAAOC,eAAeC,EAAS,0BAA2B,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOw8B,EAAoB50B,uBAAyB,G,mCCJrJvJ,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQg/B,cAAgBh/B,EAAQ++B,mBAAqB/+B,EAAQohC,wBAA0BphC,EAAQ6+B,qBAAuB7+B,EAAQo/B,aAAep/B,EAAQm/B,eAAiBn/B,EAAQqhC,eAAiBrhC,EAAQshC,iBAAmBthC,EAAQuhC,gBAAkBvhC,EAAQwhC,YAAcxhC,EAAQqJ,wBAA0BrJ,EAAQoJ,qBAAkB,EACtU,MAAMA,UAAwB1E,MAC1BX,WAAAA,CAAY+B,EAAM0E,QACCtJ,GAAXsJ,IACAA,EAAUi3B,EAAwB37B,IAEtC6mB,MAAMniB,GACN5J,KAAKkF,KAAOA,EACZlF,KAAK4J,QAAU,GAAGpB,EAAgB6Z,UAAUzY,EAAU,KAAOA,EAAU,KACvE1K,OAAO4hC,eAAe9gC,KAAMwI,EAAgBrH,UAChD,CACAmxB,MAAAA,GACI,MAAO,CACH1oB,QAAS5J,KAAK4J,QACd1E,KAAMlF,KAAKkF,KAEnB,EAIJ,SAAS27B,EAAwB37B,GAC7B,OAAIA,GAAQuD,EAAwBiV,cACzB,gBAEFxY,GAAQuD,EAAwBkmB,kBAC9B,oBAEFzpB,GAAQuD,EAAwBs4B,wBAC9B,0BAEF77B,GAAQuD,EAAwBkoB,oBAC9B,sBAEFzrB,GAAQuD,EAAwBu4B,kBAC9B,oBAEF97B,GAAQuD,EAAwB8nB,mBAC9B,qBAEFrrB,GAAQuD,EAAwBw4B,kCAC9B,iCAEF/7B,GAAQuD,EAAwB0vB,qBAC9B,uBAEFjzB,GAAQuD,EAAwBC,iBAC9B,gBAEFxD,GAAQuD,EAAwBgoB,oBAC9B,sBAEJ,eACX,CACA,IAAIhoB,EAnCJrJ,EAAQoJ,gBAAkBA,EAC1BA,EAAgB6Z,OAAS,0BAmCzB,SAAW5Z,GACPA,EAAwBA,EAAwB,iBAAmB,GAAK,gBACxEA,EAAwBA,EAAwB,qBAAuB,GAAK,oBAC5EA,EAAwBA,EAAwB,2BAA6B,IAAM,0BACnFA,EAAwBA,EAAwB,uBAAyB,IAAM,sBAC/EA,EAAwBA,EAAwB,qBAAuB,KAAO,oBAC9EA,EAAwBA,EAAwB,sBAAwB,KAAO,qBAC/EA,EAAwBA,EAAwB,qCAAuC,KAAO,oCAC9FA,EAAwBA,EAAwB,wBAA0B,KAAO,uBACjFA,EAAwBA,EAAwB,uBAAyB,KAAO,sBAChFA,EAAwBA,EAAwB,wBAA0B,KAAO,uBACjFA,EAAwBA,EAAwB,oBAAsB,KAAO,kBAChF,CAZD,CAYGA,IAA4BrJ,EAAQqJ,wBAA0BA,EAA0B,CAAC,IAC5FrJ,EAAQwhC,YAAc,cACtBxhC,EAAQuhC,gBAAkB,kBAC1BvhC,EAAQshC,iBAAmB,mBAC3BthC,EAAQqhC,eAAiB,iBACzBrhC,EAAQm/B,eAAiB,iBACzBn/B,EAAQo/B,aAAe,eACvBp/B,EAAQ6+B,qBAAuB,EAAE,OAAQ,OAAQ,OAAQ,OAAQ,OACjE7+B,EAAQohC,wBAA0B,EAAE,MAAQ,OAC5CphC,EAAQ++B,mBAAqB,CACzB,CAAC/+B,EAAQwhC,aAAc,CAAE17B,MAAO,MAAO0E,QAAS,eAChD,CAACxK,EAAQuhC,iBAAkB,CAAEz7B,MAAO,MAAO0E,QAAS,mBACpD,CAACxK,EAAQshC,kBAAmB,CAAEx7B,MAAO,MAAO0E,QAAS,oBACrD,CAACxK,EAAQqhC,gBAAiB,CAAEv7B,MAAO,MAAO0E,QAAS,kBACnD,CAACxK,EAAQm/B,gBAAiB,CAAEr5B,MAAO,MAAO0E,QAAS,kBACnD,CAACxK,EAAQo/B,cAAe,CAAEt5B,MAAO,KAAO0E,QAAS,iBAErDxK,EAAQg/B,cAAgBh/B,EAAQo/B,Y,qCCpFhC,IAAIz+B,EAAmBC,MAAQA,KAAKD,kBAAqBb,OAAOe,OAAU,SAASC,EAAGC,EAAGC,EAAGC,QAC7EC,IAAPD,IAAkBA,EAAKD,GAC3B,IAAIG,EAAOrB,OAAOsB,yBAAyBL,EAAGC,GACzCG,KAAS,QAASA,GAAQJ,EAAEM,WAAaF,EAAKG,UAAYH,EAAKI,gBAClEJ,EAAO,CAAEK,YAAY,EAAMC,IAAK,WAAa,OAAOV,EAAEC,EAAI,IAE5DlB,OAAOC,eAAee,EAAGG,EAAIE,EACjC,EAAM,SAASL,EAAGC,EAAGC,EAAGC,QACTC,IAAPD,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,EACd,GACI22B,EAAgB/2B,MAAQA,KAAK+2B,cAAiB,SAAS52B,EAAGf,GAC1D,IAAK,IAAI43B,KAAK72B,EAAa,YAAN62B,GAAoB93B,OAAOiC,UAAUC,eAAeC,KAAKjC,EAAS43B,IAAIj3B,EAAgBX,EAASe,EAAG62B,EAC3H,EACA93B,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ47B,WAAa57B,EAAQ67B,cAAgB77B,EAAQ87B,aAAe97B,EAAQ+7B,WAAa/7B,EAAQg8B,cAAgBh8B,EAAQi8B,WAAaj8B,EAAQghC,YAAchhC,EAAQihC,YAAcjhC,EAAQ6c,qBAAuB7c,EAAQ+gC,iBAAmB/gC,EAAQqtB,sBAAwBrtB,EAAQ8hC,qBAAuB9hC,EAAQ+hC,iBAAmB/hC,EAAQgiC,mBAAqBhiC,EAAQ8uB,kBAAoB9uB,EAAQiiC,gBAAkBjiC,EAAQkvB,gBAAkBlvB,EAAQgvB,gBAAkBhvB,EAAQ4uB,gBAAkB5uB,EAAQ0uB,wBAAqB,EACpgBiJ,EAAaj3B,EAAQ,OAAYV,GACjC,IAAIkiC,EAASxhC,EAAQ,OACrBZ,OAAOC,eAAeC,EAAS,qBAAsB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOygC,EAAOxT,kBAAoB,IAC9H5uB,OAAOC,eAAeC,EAAS,kBAAmB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOygC,EAAOtT,eAAiB,IACxH9uB,OAAOC,eAAeC,EAAS,kBAAmB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOygC,EAAOlT,eAAiB,IACxHlvB,OAAOC,eAAeC,EAAS,kBAAmB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOygC,EAAOhT,eAAiB,IACxHpvB,OAAOC,eAAeC,EAAS,kBAAmB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOygC,EAAOD,eAAiB,IACxHniC,OAAOC,eAAeC,EAAS,oBAAqB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOygC,EAAOpT,iBAAmB,IAC5HhvB,OAAOC,eAAeC,EAAS,qBAAsB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOygC,EAAOF,kBAAoB,IAC9HliC,OAAOC,eAAeC,EAAS,mBAAoB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOygC,EAAOH,gBAAkB,IAC1HjiC,OAAOC,eAAeC,EAAS,uBAAwB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOygC,EAAOJ,oBAAsB,IAClI,IAAI1+B,EAAc1C,EAAQ,MAC1BZ,OAAOC,eAAeC,EAAS,wBAAyB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO2B,EAAYiqB,qBAAuB,IACzIvtB,OAAOC,eAAeC,EAAS,mBAAoB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO2B,EAAY29B,gBAAkB,IAC/HjhC,OAAOC,eAAeC,EAAS,uBAAwB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO2B,EAAYyZ,oBAAsB,IACvI/c,OAAOC,eAAeC,EAAS,cAAe,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO2B,EAAY69B,WAAa,IACrHnhC,OAAOC,eAAeC,EAAS,cAAe,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO2B,EAAY49B,WAAa,IACrHrJ,EAAaj3B,EAAQ,OAAcV,GACnC,IAAImiC,EAAWzhC,EAAQ,MACvBZ,OAAOC,eAAeC,EAAS,aAAc,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO0gC,EAASlG,UAAY,IAChHn8B,OAAOC,eAAeC,EAAS,gBAAiB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO0gC,EAASnG,aAAe,IACtHl8B,OAAOC,eAAeC,EAAS,aAAc,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO0gC,EAASpG,UAAY,IAChHj8B,OAAOC,eAAeC,EAAS,eAAgB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO0gC,EAASrG,YAAc,IACpHh8B,OAAOC,eAAeC,EAAS,gBAAiB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO0gC,EAAStG,aAAe,IACtH/7B,OAAOC,eAAeC,EAAS,aAAc,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO0gC,EAASvG,UAAY,G,mCCxChH97B,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ8hC,qBAAuB9hC,EAAQ+hC,iBAAmB/hC,EAAQgiC,mBAAqBhiC,EAAQ8uB,kBAAoB9uB,EAAQiiC,gBAAkBjiC,EAAQkvB,gBAAkBlvB,EAAQgvB,gBAAkBhvB,EAAQ4uB,gBAAkB5uB,EAAQ0uB,wBAAqB,EACxP1uB,EAAQ0uB,mBAAqB,SAC7B1uB,EAAQ4uB,gBAAkB,SAC1B5uB,EAAQgvB,gBAAkB,MAC1BhvB,EAAQkvB,gBAAkB,MAC1BlvB,EAAQiiC,gBAAkB,MAC1BjiC,EAAQ8uB,kBAAoB,QAC5B9uB,EAAQgiC,mBAAqB,SAC7BhiC,EAAQ+hC,iBAAmB,OAC3B/hC,EAAQ8hC,qBAAuB,U,mCCV/B,IAAI5/B,EAAatB,MAAQA,KAAKsB,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMtC,GAAS,OAAOA,aAAiBoC,EAAIpC,EAAQ,IAAIoC,GAAE,SAAUG,GAAWA,EAAQvC,EAAQ,GAAI,CAC3G,OAAO,IAAKoC,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU1C,GAAS,IAAM2C,EAAKN,EAAUO,KAAK5C,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAS9C,GAAS,IAAM2C,EAAKN,EAAU,SAASrC,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKd,GAAUA,EAAOkB,KAAOR,EAAQV,EAAO7B,OAASsC,EAAMT,EAAO7B,OAAOgD,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EAUA,SAASu/B,EAAeC,EAAIC,GACxB,OAAOpgC,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,IAAIgF,EAAI4J,EACR,MAAM+yB,EAAyF,QAA7E38B,EAAiB,OAAZ08B,QAAgC,IAAZA,OAAqB,EAASA,EAAQC,gBAA6B,IAAP38B,EAAgBA,EAAK,EACtH48B,EAAuF,QAA5EhzB,EAAiB,OAAZ8yB,QAAgC,IAAZA,OAAqB,EAASA,EAAQE,eAA4B,IAAPhzB,EAAgBA,EAAK,IAC1H,GAAkB,oBAAP6yB,EACP,MAAM,IAAI39B,MAAM,mCAAmC29B,GAEvD,IACII,EADAhuB,EAAI,EAER,MAAOA,EAAI8tB,EACP,IACI,aAAaF,GACjB,CACA,MAAOl5B,GACHs5B,EAAYt5B,EACZsL,IACIA,EAAI8tB,UACEG,EAAMF,GAEpB,CAEJ,MAAMC,CACV,GACJ,CAOA,SAASC,EAAMC,EAASL,GACpB,OAAOpgC,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,OAAO,IAAI6B,SAAQ,CAACD,EAASE,KACzB,IAAIkD,EAAI4J,EACR,GAAgF,QAA3E5J,EAAiB,OAAZ08B,QAAgC,IAAZA,OAAqB,EAASA,EAAQM,cAA2B,IAAPh9B,OAAgB,EAASA,EAAGi9B,QAEhH,YADAngC,EAAO,IAAIgC,MAAM,kBAGrB,MAAMo+B,EAAY97B,YAAW,IAAMxE,KAAWmgC,GAC8B,QAA3EnzB,EAAiB,OAAZ8yB,QAAgC,IAAZA,OAAqB,EAASA,EAAQM,cAA2B,IAAPpzB,GAAyBA,EAAG/F,iBAAiB,SAAS,KACtI/C,aAAao8B,GACbpgC,EAAO,IAAIgC,MAAM,iBAAiB,GACpC,GAEV,GACJ,CAvDA5E,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQoiC,eAAiBA,EACzBpiC,EAAQ0iC,MAAQA,C,qCCXhB,IAAI/hC,EAAmBC,MAAQA,KAAKD,kBAAqBb,OAAOe,OAAU,SAASC,EAAGC,EAAGC,EAAGC,QAC7EC,IAAPD,IAAkBA,EAAKD,GAC3B,IAAIG,EAAOrB,OAAOsB,yBAAyBL,EAAGC,GACzCG,KAAS,QAASA,GAAQJ,EAAEM,WAAaF,EAAKG,UAAYH,EAAKI,gBAClEJ,EAAO,CAAEK,YAAY,EAAMC,IAAK,WAAa,OAAOV,EAAEC,EAAI,IAE5DlB,OAAOC,eAAee,EAAGG,EAAIE,EACjC,EAAM,SAASL,EAAGC,EAAGC,EAAGC,QACTC,IAAPD,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,EACd,GACI22B,EAAgB/2B,MAAQA,KAAK+2B,cAAiB,SAAS52B,EAAGf,GAC1D,IAAK,IAAI43B,KAAK72B,EAAa,YAAN62B,GAAoB93B,OAAOiC,UAAUC,eAAeC,KAAKjC,EAAS43B,IAAIj3B,EAAgBX,EAASe,EAAG62B,EAC3H,EACA93B,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ+iC,cAAgB/iC,EAAQgjC,eAAiBhjC,EAAQijC,UAAYjjC,EAAQitB,KAAOjtB,EAAQkjC,kBAAoBljC,EAAQktB,yBAA2BltB,EAAQotB,cAAgBptB,EAAQmjC,SAAWnjC,EAAQk6B,WAAal6B,EAAQ4d,aAAe5d,EAAQojC,uBAAyBpjC,EAAQqjC,cAAgBrjC,EAAQge,MAAQhe,EAAQopB,aAAeppB,EAAQi3B,aAAej3B,EAAQs3B,mBAAqBt3B,EAAQ82B,kBAAoB92B,EAAQwO,YAAcxO,EAAQ4O,eAAiB5O,EAAQqd,WAAard,EAAQ6d,qBAAuB7d,EAAQsjC,0BAA4BtjC,EAAQw1B,0BAA4Bx1B,EAAQmd,oBAAsBnd,EAAQ2d,iCAAmC3d,EAAQ01B,wBAA0B11B,EAAQgtB,qBAAuBhtB,EAAQujC,4BAA8BvjC,EAAQwjC,cAAgBxjC,EAAQ8d,4BAA8B9d,EAAQyjC,gBAAkBzjC,EAAQ0jC,iBAAmB1jC,EAAQqL,kBAAoBrL,EAAQqK,cAAgBrK,EAAQ41B,mBAAqB51B,EAAQyI,YAAczI,EAAQgN,UAAYhN,EAAQ2jC,WAAa3jC,EAAQmH,SAAWnH,EAAQoF,SAAWpF,EAAQoiC,oBAAiB,EACvjC,IAAIwB,EAAqBljC,EAAQ,OACjCZ,OAAOC,eAAeC,EAAS,iBAAkB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOmiC,EAAmBxB,cAAgB,IAClI,IAAIl2B,EAAQxL,EAAQ,OACpBZ,OAAOC,eAAeC,EAAS,WAAY,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOyK,EAAM9G,QAAU,IACzGtF,OAAOC,eAAeC,EAAS,WAAY,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOyK,EAAM/E,QAAU,IACzGrH,OAAOC,eAAeC,EAAS,aAAc,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOyK,EAAMy3B,UAAY,IAC7G7jC,OAAOC,eAAeC,EAAS,YAAa,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOyK,EAAMc,SAAW,IAC3GlN,OAAOC,eAAeC,EAAS,cAAe,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOyK,EAAMzD,WAAa,IAC/G3I,OAAOC,eAAeC,EAAS,qBAAsB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOyK,EAAM0pB,kBAAoB,IAC7H+B,EAAaj3B,EAAQ,OAAsBV,GAC3C23B,EAAaj3B,EAAQ,OAAaV,GAClC,IAAIiM,EAAavL,EAAQ,OACzBZ,OAAOC,eAAeC,EAAS,gBAAiB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOwK,EAAW5B,aAAe,IACxHvK,OAAOC,eAAeC,EAAS,oBAAqB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOwK,EAAWZ,iBAAmB,IAChI,IAAIc,EAAQzL,EAAQ,OACpBZ,OAAOC,eAAeC,EAAS,mBAAoB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO0K,EAAMu3B,gBAAkB,IACzH5jC,OAAOC,eAAeC,EAAS,kBAAmB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO0K,EAAMs3B,eAAiB,IACvH3jC,OAAOC,eAAeC,EAAS,8BAA+B,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO0K,EAAM2R,2BAA6B,IAC/Ihe,OAAOC,eAAeC,EAAS,gBAAiB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO0K,EAAMq3B,aAAe,IACnH1jC,OAAOC,eAAeC,EAAS,8BAA+B,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO0K,EAAMo3B,2BAA6B,IAC/IzjC,OAAOC,eAAeC,EAAS,uBAAwB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO0K,EAAM6gB,oBAAsB,IACjIltB,OAAOC,eAAeC,EAAS,0BAA2B,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO0K,EAAMupB,uBAAyB,IACvI51B,OAAOC,eAAeC,EAAS,mCAAoC,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO0K,EAAMwR,gCAAkC,IACzJ7d,OAAOC,eAAeC,EAAS,sBAAuB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO0K,EAAMgR,mBAAqB,IAC/Hrd,OAAOC,eAAeC,EAAS,4BAA6B,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO0K,EAAMqpB,yBAA2B,IAC3I11B,OAAOC,eAAeC,EAAS,4BAA6B,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO0K,EAAMm3B,yBAA2B,IAC3IxjC,OAAOC,eAAeC,EAAS,uBAAwB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO0K,EAAM0R,oBAAsB,IACjI/d,OAAOC,eAAeC,EAAS,aAAc,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO0K,EAAMkR,UAAY,IAC7G,IAAI9Z,EAAU7C,EAAQ,OACtBZ,OAAOC,eAAeC,EAAS,iBAAkB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO8B,EAAQqL,cAAgB,IACvH9O,OAAOC,eAAeC,EAAS,cAAe,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO8B,EAAQiL,WAAa,IACjH1O,OAAOC,eAAeC,EAAS,oBAAqB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO8B,EAAQuzB,iBAAmB,IAC7Hh3B,OAAOC,eAAeC,EAAS,qBAAsB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO8B,EAAQ+zB,kBAAoB,IAC/Hx3B,OAAOC,eAAeC,EAAS,eAAgB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO8B,EAAQ0zB,YAAc,IACnHn3B,OAAOC,eAAeC,EAAS,eAAgB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO8B,EAAQ6lB,YAAc,IACnHtpB,OAAOC,eAAeC,EAAS,QAAS,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO8B,EAAQya,KAAO,IACrGle,OAAOC,eAAeC,EAAS,gBAAiB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO8B,EAAQ8/B,aAAe,IACrHvjC,OAAOC,eAAeC,EAAS,yBAA0B,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO8B,EAAQ6/B,sBAAwB,IACvItjC,OAAOC,eAAeC,EAAS,eAAgB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO8B,EAAQqa,YAAc,IACnH9d,OAAOC,eAAeC,EAAS,aAAc,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO8B,EAAQ22B,UAAY,IAC/G,IAAI2J,EAAYnjC,EAAQ,MACxBZ,OAAOC,eAAeC,EAAS,WAAY,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOoiC,EAAUV,QAAU,IAC7GrjC,OAAOC,eAAeC,EAAS,gBAAiB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOoiC,EAAUzW,aAAe,IACvHttB,OAAOC,eAAeC,EAAS,2BAA4B,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOoiC,EAAU3W,wBAA0B,IAC7IptB,OAAOC,eAAeC,EAAS,oBAAqB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOoiC,EAAUX,iBAAmB,IAC/HpjC,OAAOC,eAAeC,EAAS,OAAQ,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOoiC,EAAU5W,IAAM,IACrGntB,OAAOC,eAAeC,EAAS,YAAa,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOoiC,EAAUZ,SAAW,IAC/G,IAAIa,EAAYpjC,EAAQ,OACxBZ,OAAOC,eAAeC,EAAS,iBAAkB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOqiC,EAAUd,cAAgB,IACzH,IAAIe,EAAYrjC,EAAQ,MACxBZ,OAAOC,eAAeC,EAAS,gBAAiB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOsiC,EAAUhB,aAAe,G,qCClEvH,IAAI7gC,EAAatB,MAAQA,KAAKsB,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMtC,GAAS,OAAOA,aAAiBoC,EAAIpC,EAAQ,IAAIoC,GAAE,SAAUG,GAAWA,EAAQvC,EAAQ,GAAI,CAC3G,OAAO,IAAKoC,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU1C,GAAS,IAAM2C,EAAKN,EAAUO,KAAK5C,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAS9C,GAAS,IAAM2C,EAAKN,EAAU,SAASrC,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKd,GAAUA,EAAOkB,KAAOR,EAAQV,EAAO7B,OAASsC,EAAMT,EAAO7B,OAAOgD,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACA/C,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ41B,mBAAqBA,EAC7B51B,EAAQoF,SAAWA,EACnBpF,EAAQmH,SAAWA,EACnBnH,EAAQ2jC,WAAaA,EACrB3jC,EAAQyI,YAAcA,EACtBzI,EAAQgN,UAAYA,EACpB,MAAMg3B,GAAQ,EACRC,GAAc,EACdrgC,EAAWlD,EAAQ,OACnBwjC,EAAkB,IAAItgC,EAASugC,YACrC,SAASvO,IACL,OAAOsO,CACX,CACA,MAAME,EAAc1jC,EAAQ,OACtBivB,EAAUyU,EAAYzU,QAC5B,SAASvqB,KAAYi/B,GACjB,GAAsB,oBAAX1T,QACP,KACQqT,IAAqB,OAAXxU,aAA8B,IAAXA,YAAoB,EAASA,OAAO8U,eACjE3T,QAAQjtB,IAAI,qBAAqBisB,QAAe0U,EAExD,CACA,MAAOz+B,GAAM,CAErB,CACA,SAASuB,KAAYk9B,GACjB,GAAsB,oBAAX1T,QACP,IAII,IAHIqT,IAAqB,OAAXxU,aAA8B,IAAXA,YAAoB,EAASA,OAAO8U,eACjE3T,QAAQxe,MAAM,qBAAqBwd,QAAe0U,GAElDJ,IAAgBD,EAAO,CACvB,IAAI51B,EAAU,GACdA,GAAW,IAAIi2B,GAAMzrB,QAAO,CAAC9W,EAAQoW,KACd,iBAARA,EACG,IAAMA,EAEI,iBAARA,GACFiE,KAAKC,UAAUlE,EAC7B,IAEJgsB,EAAgBK,kBAAkBn2B,EAASxK,EAAS8E,cAAcC,IAAK,GAC3E,CACJ,CACA,MAAO/C,GAAM,CAErB,CACA,SAAS+9B,KAAcU,GACnB,GAAsB,oBAAX1T,QACP,KACQqT,IAAqB,OAAXxU,aAA8B,IAAXA,YAAoB,EAASA,OAAO8U,eACjE3T,QAAQ6T,KAAK,qBAAqB7U,QAAe0U,EAEzD,CACA,MAAOz+B,GAAM,CAErB,CACA,SAAS6C,EAAYq2B,EAAM2F,EAAQr2B,GAC/B,OAAOlM,EAAUtB,UAAM,OAAQ,GAAQ,kBAC7BsjC,EAAgBK,kBAAkBn2B,EAAS0wB,EAAM2F,EAC3D,GACJ,CACA,SAASz3B,EAAU03B,GACf,OAAOxiC,EAAUtB,KAAMqI,eAAW,GAAQ,UAAWmF,EAASq2B,EAAS,WACnE,GAER,C,qCC5EA3kC,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ2kC,cAAgB3kC,EAAQ4kC,WAAa5kC,EAAQ6kC,cAAW,EAChE7kC,EAAQuwB,SAAWA,EACnBvwB,EAAQ8kC,MAAQA,EAChB9kC,EAAQ+kC,SAAWA,EACnB/kC,EAAQglC,SAAWA,EACnBhlC,EAAQilC,YAAcA,EACtB,MAAMpB,EAAYnjC,EAAQ,MACpBojC,EAAYpjC,EAAQ,OACpByL,EAAQzL,EAAQ,OAChBwL,EAAQxL,EAAQ,OAKtB,SAAS6vB,EAAS2U,GACd,IAAIt/B,EACJ,MAAM4pB,GAAS,EAAIrjB,EAAMg5B,aACzB,IAAK3V,EACD,MAAkB,YAAX0V,EAGX,IAAI,EAAIpB,EAAUsB,eAAe,QAC7B,OAAO,EAEX,MAAMC,EAAQ7V,EAAO8V,WACrB,OAAQJ,GACJ,IAAK,UACD,OAAOG,EAAQrlC,EAAQ6kC,SAASU,OACpC,IAAK,SACD,OAAOF,EAAQrlC,EAAQ6kC,SAASW,OACpC,QACA,IAAK,SACD,IAAIC,EAAWJ,GAASrlC,EAAQ6kC,SAASW,SAAU,EAAI3B,EAAU5W,MAAM,MAAO,UAAW,QACzF,GAAIwY,EAAU,CACV,MAAMC,KAAkD,QAAjC9/B,GAAK,EAAIuG,EAAMg5B,oBAAiC,IAAPv/B,OAAgB,EAASA,EAAG+/B,sBACtFC,EAAiB9V,UAAU8V,gBAAkB,EAC/CF,GAAiC,IAAnBE,IACdH,GAAW,IAEf,EAAIv5B,EAAM9G,UAAU,iDAAkDqgC,EAAUC,EAAYE,EAChG,CACA,OAAOH,EAEnB,CACA,SAASX,EAAMI,GACX,OAAQA,GACJ,IAAK,SACD,MAAO,sBAAsBllC,EAAQ6kC,SAASW,YAClD,IAAK,SACD,MAAO,sBAAsBxlC,EAAQ6kC,SAASU,yBAAyBvlC,EAAQ6kC,SAASW,YAC5F,QACA,IAAK,UACD,MAAO,sBAAsBxlC,EAAQ6kC,SAASU,YAE1D,CACA,SAASR,EAASc,GACd,MAAO,sBAAsBA,MACjC,CACA,SAASb,EAASa,GACd,MAAO,sBAAsBA,MACjC,CACA,SAASZ,EAAYa,EAAOC,GACxB,MAAO,sBAAsBD,wBAA4BC,MAC7D,CArDA/lC,EAAQ6kC,SAAW,CACfW,OAAQ,IACRD,OAAQ,MAoDZvlC,EAAQ4kC,WAAa,uBACrB5kC,EAAQ2kC,cAAgB,kC,qCCnEZjkC,EAAA,OAACA,EAAA,OACb,IAAIwB,EAAatB,MAAQA,KAAKsB,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMtC,GAAS,OAAOA,aAAiBoC,EAAIpC,EAAQ,IAAIoC,GAAE,SAAUG,GAAWA,EAAQvC,EAAQ,GAAI,CAC3G,OAAO,IAAKoC,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU1C,GAAS,IAAM2C,EAAKN,EAAUO,KAAK5C,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAS9C,GAAS,IAAM2C,EAAKN,EAAU,SAASrC,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKd,GAAUA,EAAOkB,KAAOR,EAAQV,EAAO7B,OAASsC,EAAMT,EAAO7B,OAAOgD,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACIuS,EAAmBxU,MAAQA,KAAKwU,iBAAoB,SAAUvT,GAC9D,OAAQA,GAAOA,EAAIR,WAAcQ,EAAM,CAAE,QAAWA,EACxD,EACA/B,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQmkC,YAAcnkC,EAAQgmC,cAAgBhmC,EAAQ0I,cAAgB1I,EAAQimC,gBAAa,EAC3F,MAAMC,EAAgB9wB,EAAgB1U,EAAQ,QACxCwL,EAAQxL,EAAQ,OAChByL,EAAQzL,EAAQ,OAChB6C,EAAU7C,EAAQ,OAClB2U,EAAgBD,EAAgB1U,EAAQ,QACxC8hB,EAAcpN,EAAgB1U,EAAQ,QAC5CV,EAAQimC,WAAa,QACrB,MAAME,EAAgB,CAClB,8CACA,8CAEEC,EAAiB,YACjBC,EAAgB,iBAChBC,EAAwB,IACxBC,EAAuB,CACzBC,OAAQ,MACR,eAAgB,cAEdC,EAAsB,OACtBC,EAAqB,CACvBC,QAASJ,EACT1zB,OAAQ4zB,GAEZzmC,EAAQ0I,cAAgB,CACpBk+B,QAAS,UACTC,SAAU,WACVC,MAAO,QACPn+B,IAAK,OAET3I,EAAQgmC,cAAgB,CACpBe,KAAM,OACNC,OAAQ,UAIZ,MAUMC,EAAuBA,CAACC,KAAWC,IAAWjlC,OAAU,EAAQ,CAACglC,KAAWC,QAAS,GAAQ,UAAWC,EAAM9E,EAAU,CAAC,EAAGK,EAAU,KACxI,IAAK,MAAM3+B,KAAOojC,EACd,IACI,MAAMC,EAAa,IAAIC,gBACjB1E,EAASyE,EAAWzE,OACpB2E,GAAe,EAAIrB,EAAcjwB,SAASjS,EAAKlE,OAAOkf,OAAOlf,OAAOkf,OAAO,CAAC,EAAGsjB,GAAU,CAAEM,YAC3F4E,EAAiB,IAAI/kC,SAAQ,CAACowB,EAAGnwB,IAAWsE,YAAW,KACzDqgC,EAAWI,QACX/kC,EAAO,IAAIgC,MAAM,qBAAqB,GACvCi+B,KACGzkB,QAAiBzb,QAAQilC,KAAK,CAACH,EAAcC,IACnD,GAAItpB,EAASypB,GACT,OAAOzpB,EAEX,GAAuB,KAAnBA,EAAS0pB,OAET,OADAjX,QAAQxe,MAAM,yBAA0BnO,GACjCka,CAEf,CACA,MAAO/L,GACHwe,QAAQxe,MAAM,mBAAmBnO,KAAQmO,EAC7C,CAGJ,MADAwe,QAAQxe,MAAM,gCACR,IAAIzN,MAAM,6BACpB,IACA,MAAMy/B,EACFpgC,WAAAA,GACInD,KAAKinC,YAAc7nC,EAAQgmC,cAAce,KACzCnmC,KAAKknC,eAAiB9nC,EAAQimC,WAC9BrlC,KAAKmnC,QAAU1yB,EAAcY,QAAQC,eAAe,CAChD9D,KAAM,gBAEVxR,KAAKonC,WAAa,IAAI5vB,MACtBxX,KAAKqnC,aAAc,EAAI1kC,EAAQiL,aAAagU,EAAYvM,QAAQwR,YAAY,IAChF,CACAygB,oBAAAA,CAAqBvY,EAASha,EAAMtJ,GAChCzL,KAAKknC,eAAiBnY,EACtB/uB,KAAKinC,YAAclyB,EACnB/U,KAAKka,QAAUzO,CACnB,CACA,kBAAI87B,GACA,OAAO/B,EAAiB,IAAMxlC,KAAKka,OACvC,CACA,kBAAIstB,GACA,OAAI,EAAI7kC,EAAQ2/B,sBACR,EAAI3/B,EAAQya,SACL,MAGA,UAIJ,IAEf,CACA6X,WAAAA,GACI,OAAO3zB,EAAUtB,UAAM,OAAQ,GAAQ,YACnCA,KAAKynC,qBACL,IAAIC,QAAgB1nC,KAAKmnC,QAAQ13B,QAAQzP,KAAKunC,gBAC1CI,QAAa3nC,KAAKmnC,QAAQ13B,QAAQg2B,GAClCkC,EACA3nC,KAAKqnC,YAAcM,EAGnB3nC,KAAKmnC,QAAQ/tB,QAAQqsB,EAAezlC,KAAKqnC,aAEzCK,IACA1nC,KAAKonC,WAAaM,GAClB,EAAIp8B,EAAM9G,UAAU,qCAAsCxE,KAAKonC,WAAW9/B,cACpEtH,KAAK4nC,oBAEnB,GACJ,CACAH,kBAAAA,GACI,IAAI7Y,GAAS,EAAIrjB,EAAMg5B,aACnB3V,IACA,EAAItjB,EAAM9G,UAAU,8BAM5B,CACAqjC,YAAAA,GACI,OAAO7nC,KAAKonC,UAChB,CACAU,UAAAA,CAAWC,GACP,OAAOzmC,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,OAAO,IAAI6B,SAAQ,CAACD,EAASE,IAAWR,EAAUtB,UAAM,OAAQ,GAAQ,YACpE,IACI,MAAMgoC,EAAOzsB,KAAKC,UAAUusB,IAC5B,EAAIz8B,EAAM9G,UAAU,oBAAqBwjC,GACzC,MAAMC,QAAY5B,EAAqBd,EAAermC,OAAOkf,OAAOlf,OAAOkf,OAAO,CAAC,EAAG0nB,GAAqB,CAAEkC,KAAMA,MACnH,EAAI18B,EAAM9G,UAAU,oBAAqByjC,GACrCA,GAAOA,EAAIjB,QAAwB,KAAdiB,EAAIjB,QACzBhnC,KAAKonC,WAAapnC,KAAKonC,WAAW9uB,QAAQhB,GAC/BA,EAAK4O,WAAa6hB,EAAO7hB,WAAa5O,EAAK9J,SAAWu6B,EAAOv6B,gBAElExN,KAAKmnC,QAAQ/tB,QAAQpZ,KAAKunC,eAAgBvnC,KAAKonC,YACrDxlC,GAAQ,IAGRE,GAAO,EAEf,CACA,MAAOI,IACH,EAAIoJ,EAAM9G,UAAU,qBAAsBtC,GAC1CN,GAAQ,EAEZ,CACJ,KACJ,GACJ,CACA+hC,iBAAAA,CAAkBn2B,EAAS0wB,EAAM2F,GAC7B,OAAOviC,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,IAAIgF,EAAI4J,EAAIC,EAAIC,EAChB,IAAIuoB,EAAyC,QAAjCryB,GAAK,EAAIuG,EAAMg5B,oBAAiC,IAAPv/B,OAAgB,EAASA,EAAGs7B,SAASV,SACtFU,EAA6C,QAAjC1xB,GAAK,EAAIrD,EAAMg5B,oBAAiC,IAAP31B,OAAgB,EAASA,EAAG0xB,SAAShY,OAC1F+O,GAAQiJ,IACRA,GAAsBjJ,GAE1B,IAAI6Q,EAA6C,QAAjCr5B,GAAK,EAAItD,EAAMg5B,oBAAiC,IAAP11B,OAAgB,EAASA,EAAGqgB,UAAUgZ,SAC3FC,EAAuC,QAAjCr5B,GAAK,EAAIvD,EAAMg5B,oBAAiC,IAAPz1B,OAAgB,EAASA,EAAGogB,UAAUkZ,UACrFnZ,EAAWjvB,KAAKwnC,eAChBa,EAAa,CACbV,KAAM3nC,KAAKqnC,YACXtY,QAAS/uB,KAAKknC,eACd15B,QAASA,EACTq2B,OAAQA,EACR9uB,KAAM/U,KAAKinC,YACX/gB,WAAW,IAAIxhB,MAAOuM,UACtB7N,IAAKk9B,EACLgI,KAAMJ,EACNhK,KAAMA,EACNjP,SAAUA,EACV,aAAckZ,SAEZnoC,KAAKuoC,eAAeF,SACpBroC,KAAK8nC,WAAWO,EAC1B,GACJ,CACAT,iBAAAA,GACI,OAAOtmC,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,OAAO,IAAI6B,SAAQ,CAACD,EAASE,IAAWR,EAAUtB,UAAM,OAAQ,GAAQ,YACpE,IAAIwoC,EAAWxoC,KAAKonC,WAAWtwB,KAAIixB,GAAU/nC,KAAK8nC,WAAWC,MAC7D,EAAIz8B,EAAM9G,UAAU,mDAAmD,IAAIE,MAAOgC,eAClF7E,QAAQ4mC,WAAWD,GAAUnmC,MAAMqmC,KAC/B,EAAIp9B,EAAM9G,UAAU,kDAAkD,IAAIE,MAAOgC,eACjF,IAAIiiC,EAAY,GAChBD,EAAQr4B,SAAQ,CAACnP,EAAQ6V,KACA,YAAjB7V,EAAO8lC,QACP2B,EAAUlyB,KAAKM,EACnB,IAEJ/W,KAAKonC,WAAapnC,KAAKonC,WAAW9uB,QAAO,CAAC2Z,EAAGlb,KAAW4xB,EAAUpwB,SAASxB,KAC3E/W,KAAKmnC,QAAQ/tB,QAAQpZ,KAAKunC,eAAgBvnC,KAAKonC,YAAY/kC,MAAK,SAAUhD,GACtEuC,GACJ,IAAGkQ,OAAM,SAAUvJ,GACfzG,EAAOyG,EACX,GAAE,GAEV,KACJ,GACJ,CACAggC,cAAAA,CAAejxB,GACX,OAAOhW,EAAUtB,UAAM,OAAQ,GAAQ,YAEnC,GADAA,KAAKonC,WAAW3wB,KAAKa,GACjBtX,KAAKonC,WAAW9/B,OAASo+B,EAAuB,CAChD,IAAI1d,EAAShoB,KAAKonC,WAAW9/B,OAASo+B,EACtC1lC,KAAKonC,WAAWvxB,OAAO,EAAGmS,EAC9B,CACA,OAAO,IAAInmB,SAAQ,CAACD,EAASE,KACzB9B,KAAKmnC,QAAQ/tB,QAAQpZ,KAAKunC,eAAgBvnC,KAAKonC,YAAY/kC,MAAK,SAAUhD,GACtEuC,EAAQ0V,EACZ,IAAGxF,OAAM,SAAUvJ,GACfzG,EAAOyG,EACX,GAAE,GAEV,GACJ,CACAqgC,UAAAA,CAAWp7B,EAAS0wB,EAAM2F,EAAQ9uB,GAC9B,OAAOzT,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,IAAIgF,EAAI4J,EAAIC,EAAIC,EAChB,IAAIuoB,EAAyC,QAAjCryB,GAAK,EAAIuG,EAAMg5B,oBAAiC,IAAPv/B,OAAgB,EAASA,EAAGs7B,SAASV,SACtFU,EAA6C,QAAjC1xB,GAAK,EAAIrD,EAAMg5B,oBAAiC,IAAP31B,OAAgB,EAASA,EAAG0xB,SAAShY,OAC1F+O,GAAQiJ,IACRA,GAAsBjJ,GAE1B,IAAI6Q,EAA6C,QAAjCr5B,GAAK,EAAItD,EAAMg5B,oBAAiC,IAAP11B,OAAgB,EAASA,EAAGqgB,UAAUgZ,SAC3FjZ,EAAWjvB,KAAKwnC,eAChBW,EAAuC,QAAjCr5B,GAAK,EAAIvD,EAAMg5B,oBAAiC,IAAPz1B,OAAgB,EAASA,EAAGogB,UAAUkZ,UACrFC,EAAa,CACbV,KAAM3nC,KAAKqnC,YACXtY,QAAS/uB,KAAKknC,eACd15B,QAASA,EACTq2B,OAAQA,EACR9uB,KAAMA,EACNmR,WAAW,IAAIxhB,MAAOuM,UACtB7N,IAAKk9B,EACLgI,KAAMJ,EACNhK,KAAMA,EACNjP,SAAUA,EACV,aAAckZ,GAElB,aAAanoC,KAAKuoC,eAAeF,EACrC,GACJ,EAEJjpC,EAAQmkC,YAAcA,C,mCC7QtBrkC,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQypC,sBAAwBzpC,EAAQ0pC,4BAA8B1pC,EAAQ2pC,iCAAmC3pC,EAAQ4pC,sCAAwC5pC,EAAQ6pC,2BAA6B7pC,EAAQ8pC,qCAAuC9pC,EAAQ+pC,kCAAoC/pC,EAAQgqC,2BAA6BhqC,EAAQiqC,iCAA8B,EAC5WjqC,EAAQiqC,4BAA8B,qCACtCjqC,EAAQgqC,2BAA6B,oCACrChqC,EAAQ+pC,kCAAoC,2CAC5C/pC,EAAQ8pC,qCAAuC,8CAC/C9pC,EAAQ6pC,2BAA6B,oCACrC7pC,EAAQ4pC,sCAAwC,+CAChD5pC,EAAQ2pC,iCAAmC,0CAC3C3pC,EAAQ0pC,4BAA8B,qCACtC1pC,EAAQypC,sBAAwB,a,oCCVhC3pC,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ+iC,cAAgBA,EACxB,MAAMp/B,EAAajD,EAAQ,OAC3B,SAASqiC,EAAcmH,GACnB,IAAKA,EACD,MAAM,IAAIvmC,EAAWyF,gBAAgBzF,EAAW0F,wBAAwBkmB,kBAAmB,uDAE/F,IAAK2a,EAAa93B,KACd,MAAM,IAAIzO,EAAWyF,gBAAgBzF,EAAW0F,wBAAwBkmB,kBAAmB,wBAE/F,IAAK2a,EAAaC,KACd,MAAM,IAAIxmC,EAAWyF,gBAAgBzF,EAAW0F,wBAAwBkmB,kBAAmB,oBAE/F,OAAO,CACX,C,qCCdAzvB,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQqK,cAAgBA,EACxBrK,EAAQqL,kBAAoBA,EAC5B,MAAMa,EAAQxL,EAAQ,OAChB0pC,EAAiBjlC,GAASgX,KAAKC,UAAUjX,GAAM,CAAC0tB,EAAG5yB,IAA4B,kBAAVA,EAAqBA,EAAMuF,WAAa,IAAMvF,IAQnHoqC,EAAaC,IAQf,MAAMC,EAA0B,sQAC1BC,EAAiBF,EAAKv3B,QAAQw3B,GAAyB,CAACtL,EAAOwL,IAAU,KAAKA,QACpF,IACI,OAAOtuB,KAAKuV,MAAM8Y,GAAgB,CAAC3X,EAAG5yB,KAClC,MAAMyqC,EAAwC,kBAAVzqC,GAAsBA,EAAMg/B,MAAM,UACtE,OAAIyL,EACO9L,OAAO3+B,EAAM0qC,UAAU,EAAG1qC,EAAMiI,OAAS,IAC7CjI,CAAK,GAEpB,CACA,MAAO6C,GACH,OAAOqZ,KAAKuV,MAAM4Y,EACtB,GAEJ,SAASjgC,EAAcpK,GACnB,GAAqB,kBAAVA,EAEP,MADA,EAAIiM,EAAM9G,UAAUnF,GACd,IAAIyE,MAAM,+CAA+CzE,GAEnE,IACI,OAAOoqC,EAAUpqC,EACrB,CACA,MAAO6C,GAGH,OADA6tB,QAAQxe,MAAM,uBAAwBrP,GAC/B7C,CACX,CACJ,CACA,SAASoL,EAAkBpL,GACvB,MAAwB,kBAAVA,EAAqBA,EAAQmqC,EAAcnqC,IAAU,EACvE,C,qCCnDYS,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACbZ,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ6iB,cAAgBA,EACxB7iB,EAAQ4iB,YAAcA,EACtB5iB,EAAQ4qC,MAAQA,EAChB5qC,EAAQ6qC,YAAcA,EACtB,MAAMC,EAAWpqC,EAAQ,MACnBwL,EAAQxL,EAAQ,OACtB,SAASmiB,EAAckoB,EAAQC,EAAW,QACtC,MAAMC,EAAOC,EAAMF,GAEnB,IADA,EAAI9+B,EAAM9G,UAAU,yBACf6lC,EACD,MAAM,IAAIvmC,MAAM,yBAAyBsmC,MAE7C,OAAOC,EAAKE,QAAQzT,OAAO,GAAGuT,EAAKhoB,SAAS8nB,IAChD,CACA,SAASnoB,EAAYwoB,EAAOJ,EAAW,QACnC,MAAMC,EAAOC,EAAMF,GAEnB,IADA,EAAI9+B,EAAM9G,UAAU,uBACf6lC,EACD,MAAM,IAAIvmC,MAAM,yBAAyBsmC,MAE7C,OAAOC,EAAKI,QAAQ3U,OAAO0U,GAAOT,UAAU,EAChD,CACA,SAASC,EAAMt0B,EAAO,GAClB,OAAO,IAAI8nB,WAAW9nB,EAC1B,CACA,SAASu0B,EAAYv0B,EAAO,GACxB,OAAO,IAAI8nB,WAAW9nB,EAC1B,CACA,SAASg1B,EAAYl5B,EAAM6Q,EAAQyT,EAAQgB,GACvC,MAAO,CACHtlB,OACA6Q,SACAooB,QAAS,CACLj5B,OACA6Q,SACAyT,UAEJyU,QAAS,CAAEzT,UAEnB,CACA,MAAMqT,EAASO,EAAY,OAAQ,KAAKC,IACpC,MAAMJ,EAAU,IAAI1T,YAAY,QAChC,MAAO,IAAM0T,EAAQzT,OAAO6T,EAAI,IACjC5oB,IACC,MAAM0oB,EAAU,IAAI5U,YACpB,OAAO4U,EAAQ3U,OAAO/T,EAAIgoB,UAAU,GAAG,IAErCa,EAAQF,EAAY,QAAS,KAAKC,IACpC,IAAIzpC,EAAS,IACb,IAAK,IAAI2S,EAAI,EAAGA,EAAI82B,EAAIrjC,OAAQuM,IAAK,CACjC,IAAIg3B,EAASF,EAAI92B,GACbg3B,GAAUC,OAAOC,aAAaF,KAC9B3pC,GAAU4pC,OAAOC,aAAaF,GAEtC,CACA,OAAO3pC,CAAM,IACd6gB,IACCA,EAAMA,EAAIgoB,UAAU,GACpB,MAAMY,EAAMV,EAAYloB,EAAIza,QAC5B,IAAK,IAAIuM,EAAI,EAAGA,EAAIkO,EAAIza,OAAQuM,IAC5B82B,EAAI92B,GAAKkO,EAAIipB,WAAWn3B,GAE5B,OAAO82B,CAAG,IAERL,EAAQprC,OAAOkf,OAAO,CAAE6sB,KAAMd,EAAQ,QAASA,EAAQe,IAAKhB,EAASiB,MAAMC,OAAQC,OAAQT,EAAOA,MAAOA,EAAOU,OAAQV,GAASV,EAASiB,M,qCCjEhJ,IAAInmC,EAAI4J,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EADhBnP,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAEbZ,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQolC,cAAgBA,EACxBplC,EAAQ+M,QAAUA,EAClB/M,EAAQmsC,KAAOA,EACfnsC,EAAQosC,oBAAsBA,EAC9BpsC,EAAQqsC,WAAaA,EACrBrsC,EAAQssC,qBAAuBA,EAC/BtsC,EAAQgjC,eAAiBA,EACzB,MAAM72B,EAAQzL,EAAQ,OAChBwL,EAAQxL,EAAQ,OAChBiD,EAAajD,EAAQ,OACrBmjC,EAAYnjC,EAAQ,MAC1B,IAAI6rC,EAAa,CAAC,EAClB,IACI,IAAIC,EAAetL,SAASpI,KAAKtzB,WACjC+mC,EAAaE,EAAmBD,EACpC,CACA,MAAO1pC,GAAK,CACZ,IAAI4pC,EAAc,UAIlB,IAHmB,OAAfH,QAAsC,IAAfA,OAAwB,EAASA,EAAWI,oBACnED,EAAqD,QAAtC9mC,EAAK2mC,EAAWI,wBAAqC,IAAP/mC,EAAgBA,EAAK,WAElE,YAAhB8mC,EAA2B,CAC3B,MAAMld,GAAS,EAAIrjB,EAAMg5B,aACzBuH,EAAuM,QAAxLh9B,EAAsI,QAAhID,EAAgF,QAA1ED,EAAgB,OAAXggB,QAA8B,IAAXA,OAAoB,EAASA,EAAOod,gBAA6B,IAAPp9B,OAAgB,EAASA,EAAGq9B,cAA2B,IAAPp9B,OAAgB,EAASA,EAAGogB,gBAA6B,IAAPngB,EAAgBA,EAAK,SACxO,CACA,IAAIo9B,EAAgB,MAIpB,IAHmB,OAAfP,QAAsC,IAAfA,OAAwB,EAASA,EAAWQ,mBACnED,EAAgBP,EAAWQ,kBAE1BD,EAAe,CAChB,MAAMtd,GAAS,EAAIrjB,EAAMg5B,aACzB2H,EAAwM,QAAvLj9B,EAAsI,QAAhID,EAAgF,QAA1ED,EAAgB,OAAX6f,QAA8B,IAAXA,OAAoB,EAASA,EAAOod,gBAA6B,IAAPj9B,OAAgB,EAASA,EAAGk9B,cAA2B,IAAPj9B,OAAgB,EAASA,EAAG+f,eAA4B,IAAP9f,EAAgBA,EAAK,KACzO,CAKA,SAASu1B,KAAiB4H,GACtB,OAAOA,EAAU7zB,SAASuzB,EAC9B,CAIA,SAAS3/B,IACL,IAAInH,EACJ,MAAuB,YAAhB8mC,MAAkE,QAAjC9mC,GAAK,EAAIuG,EAAMg5B,oBAAiC,IAAPv/B,OAAgB,EAASA,EAAG+/B,qBACjH,CACA,SAASwG,IAEL,OAAOC,KAAyBr/B,GACpC,CAIA,SAASq/B,IACL,IAAIxmC,EACJ,MAAMqnC,KAAyD,QAAjCrnC,GAAK,EAAIuG,EAAMg5B,oBAAiC,IAAPv/B,OAAgB,EAASA,EAAGsnC,iBACnG,OAAQngC,KAAakgC,IAAsC,YAAhBP,CAC/C,CAIA,SAASL,IACLc,EAAU,iBAAkB,CAAC,EACjC,CAMA,SAASb,EAAqBc,EAAMC,GAChC,MAAMrpC,EAAM,IAAIs8B,IAAI8M,GACpB,GAAqB,UAAjBppC,EAAI07B,UAAyC,WAAjB17B,EAAI07B,SAAuB,CACvD,GAAI2N,EACA,OAAOA,IAEX,MAAM,IAAI1pC,EAAWyF,gBAAgBzF,EAAW0F,wBAAwBiV,cAAe,kCAAkCta,IAC7H,CACA,GAAqB,SAAjBA,EAAIm9B,SAAqB,CACzB,GAAIkM,EACA,OAAOA,IAEX,MAAM,IAAI1pC,EAAWyF,gBAAgBzF,EAAW0F,wBAAwBiV,cAAe,8BAA8Bta,IACzH,CACA,MAAMspC,EAAWtpC,EAAIw8B,SAAWx8B,EAAIupC,OAChCC,KAAcC,EAAe,OAC7BN,EAAU,uBAAwB,CAAEO,UAAWJ,KAG/C,EAAIzJ,EAAUzW,eAAe,eAAiBkgB,EAEtD,CACA,SAASE,IACL,IACI,MAAMhe,GAAS,EAAIrjB,EAAMg5B,aACzB,QAAK3V,IAGmB,MAAjBA,EAAOme,QAAkBne,IAAWA,EAAOme,OACtD,CACA,MAAO7qC,GACH,OAAO,CACX,CACJ,CACA,SAASqqC,EAAUS,EAAWC,GAC1B,IACI,MAAMre,GAAS,EAAIrjB,EAAMg5B,aACzB,IAAK3V,EACD,MAAM,IAAI7rB,EAAWyF,gBAAgBzF,EAAW0F,wBAAwBiV,cAAe,4DAE3F,QAAoCpd,IAAhCsuB,EAAOmW,sBACP,EAAIz5B,EAAM9G,UAAU,YAAawoC,EAAWC,GAC5Cre,EAAOmW,qBAAqBwH,UAAUS,EAAWzxB,KAAKC,UAAUyxB,SAE/D,GAAIre,EAAOse,UAAY,WAAYte,EAAOse,UAC3C,EAAI5hC,EAAM9G,UAAU,YAAawoC,EAAWC,GAC5Cre,EAAOse,SAASC,OAAO5xB,KAAKC,UAAU,CAAEwxB,UAAWA,EAAWC,UAAWA,SAExE,KAAIL,IAOL,MAAM,IAAI7pC,EAAWyF,gBAAgBzF,EAAW0F,wBAAwBiV,cAAe,2BAPtE,CACjB,MAAM0vB,EAAgB,IAChBxjC,EAAU2R,KAAKC,UAAU,CAAEwxB,UAAWA,EAAWC,UAAWA,KAClE,EAAI3hC,EAAM9G,UAAU,YAAawoC,EAAWC,GAC5Cre,EAAOme,OAAOM,YAAYzjC,EAASwjC,EACvC,CAGA,CACJ,CACA,MAAOlrC,IACH,EAAIoJ,EAAM/E,UAAU,sCAAsCrE,IAC9D,CACJ,CACA,SAAS2pC,EAAmBD,GACxBA,EAAeA,EAAaz5B,QAAQ,KAAM,IAC1C,IAAIzI,EAAS,CAAC,EACd,IAAKkiC,EAAatkC,OACd,OAAOoC,EAEX,GAAIkiC,EAAa0B,QAAQ,KAAO,GAAK1B,EAAa0B,QAAQ,KAAO,EAE7D,OADA5jC,EAAO6jC,MAAQC,EAAc5B,GACtBliC,EAEX,IAAI+jC,EAAS7B,EAAa0B,QAAQ,KAClC,GAAIG,GAAU,EAAG,CACb,IAAIC,EAAY9B,EAAa+B,OAAO,EAAGF,GACvC/jC,EAAO6jC,MAAQC,EAAcE,GAC7B9B,EAAeA,EAAa+B,OAAOF,EAAS,EAChD,CACA,IAAIG,EAAeC,EAAoBjC,GACvC,IAAK,IAAIxrC,KAAKwtC,EACVlkC,EAAOtJ,GAAKwtC,EAAaxtC,GAE7B,OAAOsJ,CACX,CACA,SAAS8jC,EAAcM,GACnB,IAEI,OADAA,EAAaA,EAAW37B,QAAQ,MAAO,OAChC47B,mBAAmBD,EAC9B,CACA,MAAO5rC,GACH,OAAO4rC,CACX,CACJ,CACA,SAASD,EAAoBG,GACzB,IAAItkC,EAAS,CAAC,EACd,IAAKskC,EAAY1mC,OACb,OAAOoC,EAEX,IACImK,EAAGxJ,EAAO4jC,EAAWC,EADrBC,EAAoBH,EAAYzrB,MAAM,KAE1C,IAAK1O,EAAI,EAAGA,EAAIs6B,EAAkB7mC,OAAQuM,IACtCxJ,EAAQ8jC,EAAkBt6B,GAAG0O,MAAM,KACnC0rB,EAAYT,EAAcnjC,EAAM,IAChC6jC,EAAyB,MAAZ7jC,EAAM,GAAa,KAAOmjC,EAAcnjC,EAAM,IAC3DX,EAAOukC,GAAaC,EAExB,OAAOxkC,CACX,CACA,SAAS04B,EAAegM,EAAIC,GACN,kBAAPD,IACPA,EAAK,IACS,kBAAPC,IACPA,EAAK,IACT,IAEIx2B,EAAGhE,EAAGy6B,EAAIC,EAFVC,EAASJ,EAAGj8B,QAAQ,aAAc,IAAIoQ,MAAM,KAC5CksB,EAASJ,EAAGl8B,QAAQ,aAAc,IAAIoQ,MAAM,KAGhD,IADA1K,EAAIuL,KAAKsrB,IAAIF,EAAOlnC,OAAQmnC,EAAOnnC,QAC9BuM,EAAI,EAAGA,EAAIgE,EAAGhE,IAGf,GAFAy6B,EAAKvU,SAASyU,EAAO36B,KAAO,EAC5B06B,EAAKxU,SAAS0U,EAAO56B,KAAO,EACxBy6B,IAAOC,EAEX,OAAID,EAAKC,EACE,GACH,EAEZ,OAAO,CACX,CACA,SAAS1B,EAAe8B,GACpB,OAAOvM,EAAe8J,EAAeyC,IAAQ,CACjD,C,qCC1MA,IAAI3pC,EAAI4J,EAAIC,EAAIC,EADJhP,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAEbZ,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQwvC,mBAAqBA,EAC7BxvC,EAAQyvC,aAAeA,EACvBzvC,EAAQ0jC,iBAAmBA,EAC3B1jC,EAAQyjC,gBAAkBA,EAC1BzjC,EAAQ6d,qBAAuBA,EAC/B7d,EAAQ8d,4BAA8BA,EACtC9d,EAAQmlC,UAAYA,EACpBnlC,EAAQwjC,cAAgBA,EACxBxjC,EAAQujC,4BAA8BA,EACtCvjC,EAAQmd,oBAAsBA,EAC9Bnd,EAAQw1B,0BAA4BA,EACpCx1B,EAAQgtB,qBAAuBA,EAC/BhtB,EAAQsjC,0BAA4BA,EACpCtjC,EAAQ01B,wBAA0BA,EAClC11B,EAAQ2d,iCAAmCA,EAC3C3d,EAAQ+M,QAAUA,EAClB/M,EAAQosC,oBAAsBA,EAC9BpsC,EAAQqd,WAAaA,EACrB,MAAM1Z,EAAajD,EAAQ,OACrBwL,EAAQxL,EAAQ,OAChB0C,EAAc1C,EAAQ,MACtB6C,EAAU7C,EAAQ,OAClBojC,EAAYpjC,EAAQ,OACpBgvC,EAAchvC,EAAQ,OAC5B,SAAS8uC,EAAmBxrC,GACxB,MAAsB,MAAlBA,EAAIsT,OAAO,GACJtT,EAAIsT,MAAM,GAAI,GAElBtT,CACX,CACA,SAASyrC,EAAazrC,EAAKi0B,GACvB,OAAOuX,EAAmBxrC,GAAO,IAAMi0B,CAC3C,CACA,SAASyL,EAAiBiM,EAAaC,GAA2B,GAC9Djf,QAAQjtB,IAAI,gCAAiCisC,EAAa,8BAA+BC,GAkBzF,MAAMC,EAAoBC,mBAAmBH,GAG7C,OAFAhf,QAAQjtB,IAAI,0CAA2CC,EAAW0pB,uBAClEsD,QAAQjtB,IAAI,0CAA2C,GAAGC,EAAW0pB,kCAAkCwiB,KAChG,GAAGlsC,EAAW0pB,kCAAkCwiB,GAC3D,CACA,SAASpM,EAAgBkM,GACrB,IAAI/pC,EACJ,MAAMmqC,EAAUrM,EAAiBiM,GAC3BjK,KAAuC,QAAtB9/B,EAAKu/B,WAAgC,IAAPv/B,OAAgB,EAASA,EAAG+/B,sBAEjF,GADAhV,QAAQjtB,IAAI,2BAA4BqsC,IACnC,EAAIxsC,EAAQya,SAUbH,EAAqBkyB,OAVE,CACvB,IAAIC,EAAY,KACZtK,EACAsK,EAAYxgB,OAAOgI,KAAKmY,EAAa,UAGrCngB,OAAO0R,SAAS+O,KAAON,CAE/B,CAIJ,CACA,SAAS9xB,EAAqBkyB,IACrB,EAAIxsC,EAAQya,SAQTjR,IACAyiB,OAAOgI,KAAKuY,EAAS,WAGrBpf,QAAQjtB,IAAI,uBAAwB4B,KAAKC,QAC1B,OAAXiqB,aAA8B,IAAXA,YAAoB,EAASA,OAAO8U,aACvD9U,OAAOgI,KAAKuY,EAAS,UAGrBvgB,OAAOgI,KAAKuY,EAAS,SAEzBpf,QAAQjtB,IAAI,sBAAuB4B,KAAKC,QAjB5CiqB,OAAOgI,KAAKuY,EAAS,SAoB7B,CACA,SAASjyB,EAA4B6xB,GACjC,IAAI/pC,EACJ,MAAMmqC,EAAUrM,EAAiBiM,GAC3BjK,KAAuC,QAAtB9/B,EAAKu/B,WAAgC,IAAPv/B,OAAgB,EAASA,EAAG+/B,sBACjFhV,QAAQjtB,IAAI,uCAAwCqsC,GACpD,IAAIG,GAAiB,EACrB,MAAMC,EAAkB,IACJxsC,EAAW0pB,sBAE/B,GADAsD,QAAQjtB,IAAI,qDAAsDC,EAAW0pB,wBACxE,EAAI9pB,EAAQya,SA6BT0nB,EACAlW,OAAOgI,KAAKuY,EAAS,WAGrBpf,QAAQjtB,IAAI,uBAAwB4B,KAAKC,QAC1B,OAAXiqB,aAA8B,IAAXA,YAAoB,EAASA,OAAO8U,aACvD9U,OAAOgI,KAAKuY,EAAS,UAGrBvgB,OAAOgI,KAAKuY,EAAS,SAEzBpf,QAAQjtB,IAAI,sBAAuB4B,KAAKC,YAxCrB,CACvB,IAAIyqC,EAAY,KAChB,IAAII,EAAyBA,KACpBF,IACGF,EACAA,EAAUxY,KAAKuY,EAAS,SAGxBvgB,OAAOgI,KAAKuY,EAAS,UAE7B,EAEArK,EACAsK,EAAYxgB,OAAOgI,KAAKmY,EAAa,UAGrCngB,OAAO0R,SAAS+O,KAAON,EAE3B3oC,WAAWopC,EAAwBD,GACnC3gB,OAAO/lB,iBAAiB,QAAQ,KAC5BymC,GAAiB,CAAI,GACtB,CAAEhnC,MAAM,IACXH,SAASU,iBAAiB,oBAAoB,KACT,WAA7BV,SAASC,kBACTknC,GAAiB,EACrB,GAER,CAgBJ,CACA,SAAS/K,IACL,GAAsB,qBAAX3V,OACP,OAAOA,MAGf,CACA,SAASgU,EAAc4J,GACnB,IAAKA,EACD,OAAO,EAEX,MAAMppC,EAAM,IAAIs8B,IAAI8M,GACpB,MAAwB,QAAjBppC,EAAI07B,UAAuC,SAAjB17B,EAAIm9B,QACzC,CACA,SAASoC,EAA4B8M,GACjC,IAAIC,EAAoBD,EAOxB,OANAC,EAAoBA,EAAkBv9B,QAAQ,MAAO,OACrDu9B,EAAoBA,EAAkBv9B,QAAQ,KAAM,OACpDu9B,EAAoBA,EAAkBv9B,QAAQ,KAAM,OACpDu9B,EAAoBA,EAAkBv9B,QAAQ,KAAM,KACpDu9B,EAAoBA,EAAkBv9B,QAAQ,KAAM,MACpDu9B,EAAoBA,EAAkBv9B,QAAQ,KAAM,MAC7Cu9B,CACX,CACA,SAASnzB,EAAoBO,GACzB,IAAI6yB,EAA4BzwC,OAAOkf,OAAOlf,OAAOkf,OAAO,CAAC,EAAGtB,GAAiB,CAAExK,gBAAiBw8B,EAAYv1B,uBAChH,MAAMq2B,EAAoBr0B,KAAKC,UAAUm0B,IACzC,EAAIrkC,EAAM9G,UAAU,6CAA8CorC,GAClE,MAAMC,GAAY,IAAIha,aAAcC,OAAO8Z,GACrCtzB,EAAgBwzB,KAAKhF,OAAOC,gBAAgB8E,IAKlD,OADA,EAAIvkC,EAAM9G,UAAU,yCAA0C8X,GACvDA,CACX,CACA,SAASsY,EAA0B9X,GAC/B,MAAM8yB,EAAoBr0B,KAAKC,UAAU,CAAEpN,MAAO0O,EAAe1O,MAAOyC,SAAUiM,EAAejM,YACjG,EAAIvF,EAAM9G,UAAU,4CAA6CorC,GACjE,MAAMC,GAAY,IAAIha,aAAcC,OAAO8Z,GACrCtzB,EAAgBwzB,KAAKhF,OAAOC,gBAAgB8E,IAClD,OAAOvzB,CACX,CACA,SAAS8P,EAAqB2jB,GAC1B,MAAO,GAAGhtC,EAAWo9B,0BAA0B4P,GACnD,CACA,SAASrN,EAA0Bt0B,EAAOyC,GACtC,MAAO,GAAGrO,EAAYypB,4BAA4B7d,KAAQ,EAAIzL,EAAQimB,mBAAmB/X,IAC7F,CAEA,SAASikB,EAAwBib,EAAcC,GAC3C,IAAIvmB,EAAgB,CAAEwmB,WAAY,GAAI5zB,SAAU,GAAI6zB,YAAa,GAAIC,QAAQ,GACzEJ,IACAtmB,EAAcwmB,WAAaF,GAE3BC,IACAvmB,EAAcpN,SAAW2zB,GAExB7jC,IAIDsd,EAAc0mB,QAAS,EAHvB1mB,EAAc0mB,QAAS,GAK3B,EAAI7kC,EAAM9G,UAAU,oCAAqCilB,EAAcpN,UACvE,IAAI+zB,EAAmB70B,KAAKC,UAAUiO,GACtC,MAAMomB,GAAY,IAAIha,aAAcC,OAAOsa,GACrC9zB,EAAgBwzB,KAAKhF,OAAOC,gBAAgB8E,IAC5CQ,GAAgB,EAAI1tC,EAAQ6/B,wBAAwBlmB,GAE1D,IADA,EAAIhR,EAAM9G,UAAU,mBAAoBilB,EAAenN,GACnDyzB,GAAgBC,EAAa,CAC7B,GAAK7jC,IAkBD,OAAI,EAAI3J,EAAY88B,mBACT,IAAG,EAAI98B,EAAY88B,+BAA+B+Q,IAGlD,gBAAgB7tC,EAAY09B,+BAA+BmQ,IApBtE,IAAI,EAAI7tC,EAAY48B,iBAChB,MAAO,IAAG,EAAI58B,EAAY48B,uCAAuCiR,IAEhE,IAAI,EAAI7tC,EAAY88B,mBAAoB,CACzC,IAAIp+B,GAAS,EAAIsB,EAAYg9B,uBAAsB,EAAIh9B,EAAY88B,oBACnE,GAAIp+B,EAAQ,CACR,IAAI,QAAE4+B,EAAO,QAAE5lB,GAAYhZ,EAC3B,MAAO,uBAAuB4+B,aAAmB5lB,cAAoBm2B,GACzE,CACA,MAAO,uBAAuB7tC,EAAY09B,wBAAwB19B,EAAYy9B,4BAA4BoQ,GAC9G,CAEI,MAAO,uBAAuB7tC,EAAY09B,wBAAwB19B,EAAYy9B,4BAA4BoQ,GAWtH,CACA,GAAKlkC,IAkBD,OAAI,EAAI3J,EAAY88B,mBACT,IAAG,EAAI98B,EAAY88B,qBAGnB,gBAAgB98B,EAAY09B,qBApBvC,IAAI,EAAI19B,EAAY48B,iBAChB,MAAO,IAAG,EAAI58B,EAAY48B,mBAEzB,IAAI,EAAI58B,EAAY88B,mBAAoB,CACzC,IAAIp+B,GAAS,EAAIsB,EAAYg9B,uBAAsB,EAAIh9B,EAAY88B,oBACnE,GAAIp+B,EAAQ,CACR,IAAI,QAAE4+B,EAAO,QAAE5lB,GAAYhZ,EAC3B,MAAO,uBAAuB4+B,aAAmB5lB,GACrD,CACA,MAAO,uBAAuB1X,EAAY09B,wBAAwB19B,EAAYy9B,iBAClF,CAEI,MAAO,uBAAuBz9B,EAAY09B,wBAAwB19B,EAAYy9B,iBAW1F,CAEA,SAASljB,EAAiCuzB,GACtC,IAAItrC,EAAI4J,EAAIC,EAAIC,EAAIC,GACpB,EAAIzD,EAAM9G,UAAU,mBAAoB8rC,EAAa,eAAgBnkC,KAChEA,KASkF,QAA9EyC,EAA4B,QAAtB5J,EAAKu/B,WAAgC,IAAPv/B,OAAgB,EAASA,EAAGgnC,gBAA6B,IAAPp9B,OAAgB,EAASA,EAAGq9B,QACkB,QAApIl9B,EAAoF,QAA9ED,EAA4B,QAAtBD,EAAK01B,WAAgC,IAAP11B,OAAgB,EAASA,EAAGm9B,gBAA6B,IAAPl9B,OAAgB,EAASA,EAAGm9B,cAA2B,IAAPl9B,GAAyBA,EAAGwhC,iBAAiBD,IAG1L,EAAIpN,EAAUwI,sBAAsB4E,IAZpC,EAAI9tC,EAAY48B,iBAChBxQ,OAAOgI,KAAK0Z,EAAa,UAGzB1hB,OAAOgI,KAAK0Z,EAAa,QAWrC,CAIA,SAAS9C,EAAcM,GACnB,IAEI,OADAA,EAAaA,EAAW37B,QAAQ,MAAO,OAChC47B,mBAAmBD,EAC9B,CACA,MAAO5rC,GACH,OAAO4rC,CACX,CACJ,CACA,SAASD,EAAoBG,GACzB,IAAItkC,EAAS,CAAC,EACd,IAAKskC,EAAY1mC,OACb,OAAOoC,EAEX,IACImK,EAAGxJ,EAAO4jC,EAAWC,EADrBC,EAAoBH,EAAYzrB,MAAM,KAE1C,IAAK1O,EAAI,EAAGA,EAAIs6B,EAAkB7mC,OAAQuM,IACtCxJ,EAAQ8jC,EAAkBt6B,GAAG0O,MAAM,KACnC0rB,EAAYT,EAAcnjC,EAAM,IAChC6jC,EAAyB,MAAZ7jC,EAAM,GAAa,KAAOmjC,EAAcnjC,EAAM,IAC3DX,EAAOukC,GAAaC,EAExB,OAAOxkC,CACX,CACA,SAASmiC,EAAmBD,GACxBA,EAAeA,EAAaz5B,QAAQ,KAAM,IAC1C,IAAIzI,EAAS,CAAC,EACd,IAAKkiC,EAAatkC,OACd,OAAOoC,EAEX,GAAIkiC,EAAa0B,QAAQ,KAAO,GAAK1B,EAAa0B,QAAQ,KAAO,EAE7D,OADA5jC,EAAO6jC,MAAQC,EAAc5B,GACtBliC,EAEX,IAAI+jC,EAAS7B,EAAa0B,QAAQ,KAClC,GAAIG,GAAU,EAAG,CACb,IAAIC,EAAY9B,EAAa+B,OAAO,EAAGF,GACvC/jC,EAAO6jC,MAAQC,EAAcE,GAC7B9B,EAAeA,EAAa+B,OAAOF,EAAS,EAChD,CACA,IAAIG,EAAeC,EAAoBjC,GACvC,IAAK,IAAIxrC,KAAKwtC,EACVlkC,EAAOtJ,GAAKwtC,EAAaxtC,GAE7B,OAAOsJ,CACX,CACA,IAAIiiC,EAAa,CAAC,EAClB,IACI,IAAIC,EAAetL,SAASpI,KAAKtzB,WACjC+mC,EAAaE,EAAmBD,EACpC,CACA,MAAO1pC,GAAK,CACZ,IAAI4pC,EAAc,UAIlB,IAHmB,OAAfH,QAAsC,IAAfA,OAAwB,EAASA,EAAWI,oBACnED,EAAqD,QAAtC9mC,EAAK2mC,EAAWI,wBAAqC,IAAP/mC,EAAgBA,EAAK,WAElE,YAAhB8mC,EAA2B,CAC3B,MAAMld,EAAS2V,IACfuH,EAAuM,QAAxLh9B,EAAsI,QAAhID,EAAgF,QAA1ED,EAAgB,OAAXggB,QAA8B,IAAXA,OAAoB,EAASA,EAAOod,gBAA6B,IAAPp9B,OAAgB,EAASA,EAAGq9B,cAA2B,IAAPp9B,OAAgB,EAASA,EAAGogB,gBAA6B,IAAPngB,EAAgBA,EAAK,SACxO,CACA,SAAS3C,IACL,IAAInH,EACJ,MAAuB,YAAhB8mC,MAAuD,QAAtB9mC,EAAKu/B,WAAgC,IAAPv/B,OAAgB,EAASA,EAAG+/B,qBACtG,CAIA,SAASyG,IACL,IAAIxmC,EACJ,MAAMqnC,KAA8C,QAAtBrnC,EAAKu/B,WAAgC,IAAPv/B,OAAgB,EAASA,EAAGsnC,iBACxF,OAAQngC,KAAakgC,IAAsC,YAAhBP,CAC/C,CACA,SAASrvB,EAAWK,EAAgBJ,GAAU,EAAOC,GAEjD,IADA,EAAIrR,EAAM9G,UAAU,8CAA8C+W,KAAKC,UAAUsB,iBAA8BJ,sBAA4BC,KACvID,EAAS,CACT,GAAII,EAAgB,CAChB,IAAI6X,EAAiBC,EAA0B9X,GAC/C,OAAOgY,EAAwBH,EAAiC,OAAjBhY,QAA0C,IAAjBA,EAA0BA,EAAe,OACrH,CAEI,OAAOmY,OAAwBx0B,EAA4B,OAAjBqc,QAA0C,IAAjBA,EAA0BA,EAAe,OAEpH,CAEI,IAAI,EAAIha,EAAQqa,gBACZ,OAAIF,EACO4lB,EAA0B5lB,EAAe1O,MAAO0O,EAAejM,UAG/DrO,EAAYypB,mBAIvB,GAAInP,EAAgB,CAChB,MAAMR,EAAgBC,EAAoBO,GAC1C,MAAO,GAAG/Z,EAAWo9B,0BAA0B7jB,GACnD,CAEI,OAAOvZ,EAAWo9B,gBAIlC,C,qCCnZYrgC,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACb,IAAI0U,EAAmBxU,MAAQA,KAAKwU,iBAAoB,SAAUvT,GAC9D,OAAQA,GAAOA,EAAIR,WAAcQ,EAAM,CAAE,QAAWA,EACxD,EACA/B,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQqjC,cAAgBrjC,EAAQoxC,cAAgBpxC,EAAQijC,UAAYjjC,EAAQmmB,oBAAsBnmB,EAAQqxC,gBAAkBrxC,EAAQyH,oBAAsBzH,EAAQ8D,oCAAiC,EACnM9D,EAAQ4O,eAAiBA,EACzB5O,EAAQk6B,WAAaA,EACrBl6B,EAAQwO,YAAcA,EACtBxO,EAAQ82B,kBAAoBA,EAC5B92B,EAAQs3B,mBAAqBA,EAC7Bt3B,EAAQi3B,aAAeA,EACvBj3B,EAAQopB,aAAeA,EACvBppB,EAAQyE,WAAaA,EACrBzE,EAAQsxC,QAAUA,EAClBtxC,EAAQuxC,sBAAwBA,EAChCvxC,EAAQsR,cAAgBA,EACxBtR,EAAQwX,gBAAkBA,EAC1BxX,EAAQge,MAAQA,EAChBhe,EAAQwpB,kBAAoBA,EAC5BxpB,EAAQojC,uBAAyBA,EACjCpjC,EAAQ4d,aAAeA,EACvB5d,EAAQwzB,sBAAwBA,EAChC,MAAMhR,EAAcpN,EAAgB1U,EAAQ,QACtC8wC,EAAmBp8B,EAAgB1U,EAAQ,QAC3C+wC,EAAc/wC,EAAQ,MACtBgxC,EAAWhxC,EAAQ,OACnBuL,EAAavL,EAAQ,OACrBwL,EAAQxL,EAAQ,OAChB+hB,EAAgB/hB,EAAQ,OACxBqlB,EAAc3Q,EAAgB1U,EAAQ,QACtCixC,EAAS,SACf,SAAS/iC,EAAegjC,GACpB,GAAIA,EAAU1pC,OAAS,IAAM,EACzB,MAAM,IAAIxD,MAAM,kBAAkBktC,mBAEtC,MAAM9vC,EAAS,IAAIs8B,WAAWwT,EAAU1pC,OAAS,GACjD,IAAK,IAAIuM,EAAI,EAAGA,EAAIm9B,EAAU1pC,OAAQuM,GAAK,EACvC3S,EAAO2S,EAAI,GAAKkmB,SAASiX,EAAUt6B,MAAM7C,EAAGA,EAAI,GAAI,IAExD,OAAO3S,CACX,CACA,SAASo4B,EAAWrU,GAChB,OAAOA,EAAM1M,SAAS,KAAO0M,EAAM1C,MAAM,KAAK,GAAK0C,CACvD,CACA,SAASrX,EAAYqjC,GACjB,IAAID,EAAY,GAIhB,OAHAC,EAAU5gC,SAAQ6gC,IACdF,IAAc,KAAc,IAAPE,GAAatsC,SAAS,KAAK8R,OAAO,EAAE,IAEtDs6B,CACX,CACA,SAAS9a,EAAkBib,EAASC,GAChC,MAAMC,EAAc,IAAI7T,WAAW2T,EAAQ7pC,OAAS8pC,EAAQ9pC,QAG5D,OAFA+pC,EAAYl7B,IAAIg7B,GAChBE,EAAYl7B,IAAIi7B,EAASD,EAAQ7pC,QAC1B+pC,CACX,CACA,SAAS3a,EAAmB8T,EAAOzzB,GAC/B,GAAIA,GAASyzB,EAAMljC,OACf,MAAM,IAAIxD,MAAM,0BAEpB,MAAMwtC,EAAY9G,EAAM9zB,MAAM,EAAGK,GAC3Bw6B,EAAY/G,EAAM9zB,MAAMK,GAC9B,MAAO,CAACu6B,EAAWC,EACvB,CACA,SAASC,EAAiBnyC,EAAOoyC,GAC7B,MAAMhvB,EAAUmuB,EAAiBv7B,QAAQq8B,aAAaryC,GACtD,OAAKoyC,EAGEvC,mBAAmBzsB,GAFfA,CAGf,CACA,SAASkvB,EAAmBtyC,EAAOoyC,GAI/B,OAHIA,IACApyC,EAAQ0uC,mBAAmB1uC,IAExBuxC,EAAiBv7B,QAAQu8B,aAAavyC,EACjD,CACA,SAASg3B,EAAah3B,EAAOoyC,GACzB,IAAII,EAUJ,OATIxyC,aAAiBm+B,WACjBqU,EAAaxyC,GAGQ,kBAAVA,IACPA,GAAQ,EAAIgM,EAAWZ,mBAAmBpL,IAE9CwyC,EAAajB,EAAiBv7B,QAAQy8B,WAAWzyC,IAE9CmyC,EAAiBK,EAAYJ,EACxC,CACA,SAASjpB,EAAanpB,EAAOoyC,GACzB,MAAMM,EAAoBJ,EAAmBtyC,EAAOoyC,GACpD,MAAO,CACH7sC,QAAAA,GACI,OAAOgsC,EAAiBv7B,QAAQ28B,WAAWD,EAC/C,EACApoB,QAAAA,GACI,IACI,OAAO,EAAIte,EAAW5B,eAAemnC,EAAiBv7B,QAAQ28B,WAAWD,GAC7E,CACA,MAAO7vC,GACH,OAAO,IACX,CACJ,EACAs0B,YAAAA,GACI,OAAOub,CACX,EAER,CACA,SAASluC,EAAWT,GAChB,MAAMi7B,EAAQj7B,EAAIi7B,MAAM,IAAIM,OAAO,QAAS,OAC5C,IAAKN,IAAUA,EAAM/2B,OACjB,OAAO,EAEX,IAAI2qC,EAAS5T,EAAM,GACnB,YAAe/9B,IAAX2xC,GAGG,IAAItT,OAAO,UAAUI,KAAKkT,EACrC,CACA,MAAM/uC,EAAiCA,IACV,qBAAd+C,UACAA,UAEgB,qBAAXisC,EAAAA,GAAsD,qBAArBA,EAAAA,EAAOjsC,UAC7CisC,EAAAA,EAAOjsC,UAES,qBAAX2oB,QAAsD,qBAArBA,OAAO3oB,UAC7C2oB,OAAO3oB,UAEO,qBAATksC,MAAkD,qBAAnBA,KAAKlsC,UACzCksC,KAAKlsC,UAETA,UAIX7G,EAAQ8D,+BAAiCA,EACzC,MAAM2D,EAAsBA,IAA2B,qBAAdZ,WAClB,qBAAXisC,EAAAA,GAAsD,qBAArBA,EAAAA,EAAOjsC,WAC7B,qBAAX2oB,QAAsD,qBAArBA,OAAO3oB,WAC/B,qBAATksC,MAAkD,qBAAnBA,KAAKlsC,UAChD7G,EAAQyH,oBAAsBA,EAC9B,MAAM4pC,EAAkBA,IAAyB,qBAAXyB,EAAAA,GAA0D,qBAAxBA,EAAAA,EAAO5sB,cACxD,qBAAXsJ,QAAyD,qBAAxBA,OAAOtJ,aACpDlmB,EAAQqxC,gBAAkBA,EAC1B,MAAMlrB,EAAsBA,IACF,qBAAX2sB,EAAAA,GAAyD,qBAAxBA,EAAAA,EAAO5sB,aACxC4sB,EAAAA,EAAO5sB,aAES,qBAAXsJ,QAAyD,qBAAxBA,OAAOtJ,aAC7CsJ,OAAOtJ,aAEXA,aAEXlmB,EAAQmmB,oBAAsBA,EAC9B,MAAM8c,EAAYA,IAAwB,qBAAXzT,OAG/B,SAAS8hB,EAAQz8B,EAAK6hB,EAASib,IAC3B,EAAIzlC,EAAM9G,UAAU,mBAAmByP,KACvC,MAAM/S,GAAS,EAAI4vC,EAAS5Y,OAAM,EAAIrW,EAAcI,eAAehO,EAAK6hB,IACxE,OAAO,EAAI+a,EAAYjsC,UAAU1D,EAAQ40B,EAC7C,CACA,SAAS6a,IACL,OAAO/uB,EAAYvM,QAAQwR,YAAYznB,EAAQoxC,cACnD,CACA,SAAS9/B,IACL,IAAI0hC,EAAgBzB,IAEpB,OADA,EAAIrlC,EAAM9G,UAAU,yBAAyB4tC,KACtC1B,GAAQ,EAAIG,EAAYjsC,UAAUwtC,EAAerB,GAC5D,CACA,SAASn6B,IACL,IAAIw7B,EAAgBxwB,EAAYvM,QAAQwR,YAAY,IAEpD,OADA,EAAIvb,EAAM9G,UAAU,2BAA2B4tC,KACxC1B,GAAQ,EAAIG,EAAYjsC,UAAUwtC,EAAerB,GAC5D,CAnBA3xC,EAAQijC,UAAYA,EACpBjjC,EAAQoxC,cAAgB,GAmBxB,MAAM/N,EAAiB4P,GAAQnzC,OAAOozC,eAAeD,KAASnzC,OAAOiC,WAAajC,OAAOwrB,KAAK2nB,GAAK/qC,OAEnG,SAAS8V,IACL,MAAMgrB,EAAYlZ,UAAUkZ,UACtBpD,EAAiB9V,UAAU8V,gBAAkB,EAE7CuN,EAAc,mBAAmBxT,KAAKqJ,KAAexZ,OAAO4jB,SAE5DC,EAAYrK,EAAU7vB,SAAS,QAAUysB,EAAiB,EAGhE,OAFA,EAAI15B,EAAM9G,UAAU,+BAA+B+tC,qBAA+BE,KAE3EF,GAAeE,CAC1B,CACA,SAAS7pB,EAAkBla,GAEvB,MAAMwpB,EAAO/S,EAAY9P,QAAQq9B,IAAIhkC,GAAO9J,WAE5C,OAAOszB,EAAKxhB,OAAO,EACvB,CACA,SAAS8rB,EAAuBmQ,GAC5B,OAAOA,EACFxgC,QAAQ,KAAM,IACdA,QAAQ,MAAO,KACfA,QAAQ,MAAO,IACxB,CACA,SAAS6K,IAEL,OAAO,CACX,CACA,SAAS4V,EAAsBtC,GAC3B,IAAIsiB,EAAWtiB,EAUf,OATIA,EAAQ/X,SAAS,iBACjBq6B,EAAWtiB,EAAQne,QAAQ,gBAAiB,aAEvCme,EAAQ/X,SAAS,oBACtBq6B,EAAWtiB,EAAQne,QAAQ,mBAAoB,kBAE1Cme,EAAQ/X,SAAS,sBACtBq6B,EAAWtiB,EAAQne,QAAQ,mBAAoB,mBAE5CygC,CACX,CAxCAxzC,EAAQqjC,cAAgBA,C,oCCnLxB,IAAIjuB,EAAmBxU,MAAQA,KAAKwU,iBAAoB,SAAUvT,GAC9D,OAAQA,GAAOA,EAAIR,WAAcQ,EAAM,CAAE,QAAWA,EACxD,EACA/B,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQmjC,SAAWA,EACnBnjC,EAAQotB,cAAgBA,EACxBptB,EAAQktB,yBAA2BA,EACnCltB,EAAQkjC,kBAAoBA,EAC5BljC,EAAQyzC,aAAeA,EACvBzzC,EAAQitB,KAAOA,EACfjtB,EAAQijC,UAAYA,EACpB,MAAMyQ,EAAiBt+B,EAAgB1U,EAAQ,QACzCwL,EAAQxL,EAAQ,OAChBojC,EAAYpjC,EAAQ,OAC1B,SAASyiC,EAAS8M,EAAM0D,EAAS,UAC7B,EAAIznC,EAAM9G,UAAU,WAAY6qC,EAAM0D,GACtCnkB,OAAOgI,KAAKyY,EAAM0D,EAAQ,sBAC9B,CACA,SAASvmB,EAAc6iB,GACnB9M,EAAS8M,EAAM,SACnB,CACA,SAAS/iB,EAAyB+iB,EAAM5C,GACpC,MAAMuG,EAAaA,KACX3Q,EAAU,WAAchW,EAAK,YAAcgW,EAAU,YAIzDoK,GAAU,EAERwG,EAAkB7sC,YAAW,IAAM4sC,KAAc,KACvDpkB,OAAO/lB,iBAAiB,QAAQ,IAAM/C,aAAamtC,IAAkB,CAAE3qC,MAAM,IACzE+jB,EAAK,aAAc,EAAI6W,EAAUqI,QACjChJ,EAAS8M,EAAM,UAGf9M,EAAS8M,EAAM,QAEvB,CACA,SAAS/M,IACL,IAAI4Q,GAAQ,EAQZ,OAPA,SAAWr7B,IACH,2TAA2TknB,KAAKlnB,IAChU,0kDAA0kDknB,KAAKlnB,EAAEnB,MAAM,EAAG,OAC1lDw8B,GAAQ,EACf,CAJD,CAIGhkB,UAAUkZ,WACTlZ,UAAUikB,QACVvkB,OAAOwkB,OACJF,CACX,CACA,SAASL,IACL,IAAI7tC,EAAI4J,EAAIC,EACZ,MAAM65B,GAAU,IAAIoK,EAAez9B,SAAUg+B,YACvCC,EAAoC,QAA1BtuC,EAAK0jC,EAAQ6K,GAAG/hC,YAAyB,IAAPxM,OAAgB,EAASA,EAAGwuC,cACxEC,EAA8C,QAA/B7kC,EAAK85B,EAAQpE,OAAOoP,aAA0B,IAAP9kC,OAAgB,EAASA,EAAG4kC,cACxF,IAAID,EACJ,QAAQ,GACJ,IAAqB,SAAhBE,EACDF,EAAK,OACL,MACJ,IAAgB,QAAXD,EACDC,EAAK,MACL,MACJ,IAAgB,YAAXD,EACDC,EAAK,UACL,MACJ,IAAgB,WAAXD,EACDC,EAAK,QACL,MACJ,IAAgB,UAAXD,EACDC,EAAK,QACL,MACJ,KAAgB,OAAXD,QAA8B,IAAXA,OAAoB,EAASA,EAAO/6B,SAAS,WACjEg7B,EAAK,UACL,MAER,MAAMI,EAA8C,QAA/B9kC,EAAK65B,EAAQkL,QAAQpiC,YAAyB,IAAP3C,OAAgB,EAASA,EAAG2kC,cACxF,IAAII,EACJ,QAAQ,GACJ,IAAqB,WAAhBD,EACDC,EAAU,SACV,MACJ,IAAqB,YAAhBD,EACDC,EAAU,UACV,MACJ,KAAqB,OAAhBD,QAAwC,IAAhBA,OAAyB,EAASA,EAAYp7B,SAAS,UAChFq7B,EAAU,SACV,MACJ,KAAqB,OAAhBD,QAAwC,IAAhBA,OAAyB,EAASA,EAAYp7B,SAAS,SAChFq7B,EAAU,QACV,MAER,MAAO,CACHL,KACAK,UAER,CACA,SAASvnB,KAAQknB,GACb,OAAOA,EAAGh7B,SAASs6B,IAAeU,GACtC,CACA,SAASlR,KAAauR,GAClB,OAAOA,EAAQr7B,SAASs6B,IAAee,QAC3C,C,qCCtGY9zC,EAAA,OAACA,EAAA,OACb,IAAIwB,EAAatB,MAAQA,KAAKsB,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMtC,GAAS,OAAOA,aAAiBoC,EAAIpC,EAAQ,IAAIoC,GAAE,SAAUG,GAAWA,EAAQvC,EAAQ,GAAI,CAC3G,OAAO,IAAKoC,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU1C,GAAS,IAAM2C,EAAKN,EAAUO,KAAK5C,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAS9C,GAAS,IAAM2C,EAAKN,EAAU,SAASrC,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKd,GAAUA,EAAOkB,KAAOR,EAAQV,EAAO7B,OAASsC,EAAMT,EAAO7B,OAAOgD,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACA/C,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQy0C,oBAAiB,EACzB,MAAMC,EAAKh0C,EAAQ,MACbi0C,EAASj0C,EAAQ,OACvB,MAAM+zC,EACF1wC,WAAAA,CAAY4wB,GACR/zB,KAAKg0C,KAAO,CACR,cACA,mBAEJh0C,KAAK+zB,SAAWA,CACpB,CACAkgB,oBAAAA,CAAqB3jB,GACjB,IAAItrB,EAAI4J,EACR,IAAIslC,EAAKl0C,KAAKm0C,aAAa7jB,GAC3B,QAAUhwB,GAAN4zC,EACA,MAAM,IAAIJ,EAAGtrC,gBAAgBsrC,EAAGrrC,wBAAwBiV,cAAe,mBAE3E,IAAIwG,EAA6G,QAAjGtV,EAAsC,QAAhC5J,EAAKhF,KAAK+zB,SAAS5V,eAA4B,IAAPnZ,OAAgB,EAASA,EAAGwY,WAAW,cAA2B,IAAP5O,OAAgB,EAASA,EAAGsV,SAAS5L,QAAO,SAAU87B,GAC3K,OAAOA,EAAQzhC,WAAW2d,EAC9B,IACA,QAAgBhwB,GAAZ4jB,GAAyBA,EAAS5c,OAAS,EAC3C,MAAM,IAAIwsC,EAAGtrC,gBAAgBsrC,EAAGrrC,wBAAwBiV,cAAe,wBAE3E,IAAI02B,EAAUlwB,EAAS,GACvB,MAAMI,EAAU8vB,EAAQ7xB,MAAM,KAAK,GACnC,OAAO+B,CACX,CACA+vB,UAAAA,CAAW/jB,GACP,IAAItrB,EAAI4J,EAAIC,EACZ,IAAIqlC,EAAKl0C,KAAKm0C,aAAa7jB,GAC3B,QAAUhwB,GAAN4zC,EACA,MAAM,IAAIJ,EAAGtrC,gBAAgBsrC,EAAGrrC,wBAAwBiV,cAAe,mBAE3E,IAAImH,EAA+J,QAAtJhW,EAAuG,QAAjGD,EAAsC,QAAhC5J,EAAKhF,KAAK+zB,SAAS5V,eAA4B,IAAPnZ,OAAgB,EAASA,EAAGwY,WAAW,cAA2B,IAAP5O,OAAgB,EAASA,EAAGiW,aAA0B,IAAPhW,OAAgB,EAASA,EAAGyhB,GACnM3iB,EAAY,GAIhB,YAHarN,GAATukB,IACAlX,EAAYkX,EAAM,wBAEf,CACHP,QAAStkB,KAAKi0C,qBAAqB3jB,GACnC3iB,UAAWA,EAEnB,CAQAoqB,WAAAA,CAAYzH,EAASgkB,EAASpW,GAC1B,OAAO58B,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,IAAIk0C,EAAKl0C,KAAKm0C,aAAa7jB,GAC3B,QAAUhwB,GAAN4zC,EACA,MAAM,IAAIJ,EAAGtrC,gBAAgBsrC,EAAGrrC,wBAAwBiV,cAAe,mBAE3E,GAAgB,cAAZ42B,EACA,MAAM,IAAIR,EAAGtrC,gBAAgBsrC,EAAGrrC,wBAAwBiV,cAAe,uCAE3E,IAAIhU,EAAS,CACT4qC,QAASA,EACT9pB,KAAMxqB,KAAKi0C,qBAAqB3jB,IAEhC4N,IACAx0B,EAAOw0B,KAAOA,GAElB,IACI,MAAMqW,QAAYv0C,KAAK+zB,SAAS3Y,QAAQ,CACpCnJ,OAAQ,kBACRvI,OAAQA,GACT4mB,GACH,GAAI,WAAYikB,EACZ,OAAOA,EAAIrzC,OAEV,CACD,IAAIszC,EAAYD,EAChB,OAAOC,EAAUjjC,KACrB,CACJ,CACA,MAAOA,GACH,GAAIA,aAAiBuiC,EAAGtrC,gBACpB,MAAM+I,EAEV,MAAM,IAAIuiC,EAAGtrC,gBAAgBsrC,EAAGrrC,wBAAwBiV,cAAe,2CAC3E,CACJ,GACJ,CASA+2B,WAAAA,CAAYnkB,EAASokB,EAAWC,EAAUjT,GACtC,OAAOpgC,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,IAAIk0C,EAAKl0C,KAAKm0C,aAAa7jB,GAC3B,QAAUhwB,GAAN4zC,EACA,MAAM,IAAIJ,EAAGtrC,gBAAgBsrC,EAAGrrC,wBAAwBiV,cAAe,mBAE3E,IAAIhU,EAAS,CACT8gB,KAAMxqB,KAAKi0C,qBAAqB3jB,GAChCskB,GAAIF,EACJr1C,OAAQs1C,EAAW,KAAW/vC,aAElB,OAAZ88B,QAAgC,IAAZA,OAAqB,EAASA,EAAQmT,WAC1DnrC,EAAO,YAAcg4B,EAAQmT,QAAQjwC,YAEzC,IAAI1D,QAAelB,KAAKmG,KAAKmqB,EAAS5mB,GACtC,YAAepJ,IAAXY,GAAyB,WAAYA,EAE9BA,EAAO4zC,OAGX5zC,CACX,GACJ,CAOAiF,IAAAA,CAAKmqB,EAAS5hB,GACV,OAAOpN,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,IAAIk0C,EAAKl0C,KAAKm0C,aAAa7jB,GAC3B,QAAUhwB,GAAN4zC,EACA,MAAM,IAAIJ,EAAGtrC,gBAAgBsrC,EAAGrrC,wBAAwBiV,cAAe,mBAE3E,IAAK1d,KAAK+0C,gBAAgBrmC,EAAO,KAAM,SACnC,MAAM,IAAIolC,EAAGtrC,gBAAgBsrC,EAAGrrC,wBAAwBiV,cAAe,iCAE3EhP,EAAM,QAAU1O,KAAKi0C,qBAAqB3jB,GAC1C,IACI,MAAMikB,QAAYv0C,KAAK+zB,SAAS3Y,QAAQ,CACpCnJ,OAAQ,WACRvI,OAAQgF,GACT4hB,GACH,GAAI,WAAYikB,EACZ,MAAO,CACHO,OAAQP,EAAIrzC,QAGf,CACD,IAAIszC,EAAYD,EAChB,OAAOC,EAAUjjC,KACrB,CACJ,CACA,MAAOA,GACH,GAAIA,aAAiBuiC,EAAGtrC,gBACpB,MAAM+I,EAEV,MAAM,IAAIuiC,EAAGtrC,gBAAgBsrC,EAAGrrC,wBAAwBiV,cAAe,kCAAkCnM,IAC7G,CACJ,GACJ,CAMAyjC,QAAAA,CAAS1kB,EAAS2kB,EAASvT,GACvB,OAAOpgC,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,OAAO,IAAI6B,SAAQ,CAACD,EAASE,KACzB9B,KAAKk1C,UAAU5kB,EAAS,CAAC2kB,GAAU,CAACvT,IAAUr/B,MAAK8yC,IAC/C,IAAIzM,EAAUntB,KAAKuV,MAAMqkB,GACzBvzC,EAAQ8mC,EAAQ,GAAG,IACpB52B,OAAMP,IACLzP,EAAOyP,EAAM,GACf,GAEV,GACJ,CAQA2jC,SAAAA,CAAU5kB,EAAS8kB,EAAU1T,GACzB,OAAOpgC,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,IAAIk0C,EAAKl0C,KAAKm0C,aAAa7jB,GAC3B,QAAUhwB,GAAN4zC,EACA,MAAM,IAAIJ,EAAGtrC,gBAAgBsrC,EAAGrrC,wBAAwBiV,cAAe,mBAE3E,QAAiBpd,IAAb80C,EACA,MAAM,IAAItB,EAAGtrC,gBAAgBsrC,EAAGrrC,wBAAwBiV,cAAe,qCAE3E,IAAIhU,EAAS,CACT0rC,SAAUA,EACV1T,QAASA,GAEbh4B,EAAO8gB,KAAOxqB,KAAKi0C,qBAAqB3jB,GACxC,IACI,MAAMikB,QAAYv0C,KAAK+zB,SAAS3Y,QAAQ,CACpCnJ,OAAQ,gBACRvI,OAAQA,GACT4mB,GACH,GAAI,WAAYikB,EACZ,OAAOA,EAAIrzC,MAEnB,CACA,MAAOqQ,GACH,GAAIA,aAAiBuiC,EAAGtrC,gBACpB,MAAM+I,EAEV,MAAM,IAAIuiC,EAAGtrC,gBAAgBsrC,EAAGrrC,wBAAwBiV,cAAe,kCAAkCnM,IAC7G,CACJ,GACJ,CAQA8jC,eAAAA,CAAgB/kB,EAAS2kB,EAASvT,GAC9B,OAAOpgC,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,IAAIk0C,EAAKl0C,KAAKm0C,aAAa7jB,GAC3B,QAAUhwB,GAAN4zC,EACA,MAAM,IAAIJ,EAAGtrC,gBAAgBsrC,EAAGrrC,wBAAwBiV,cAAe,mBAE3E,QAAgBpd,IAAZ20C,EACA,MAAM,IAAInB,EAAGtrC,gBAAgBsrC,EAAGrrC,wBAAwBiV,cAAe,qCAE3E,IAAIhU,EAAS,CACTurC,QAASA,EACTvT,QAASA,GAEbh4B,EAAO8gB,KAAOxqB,KAAKi0C,qBAAqB3jB,GACxC,IACI,MAAMikB,QAAYv0C,KAAK+zB,SAAS3Y,QAAQ,CACpCnJ,OAAQ,sBACRvI,OAAQA,GACT4mB,GACH,GAAI,WAAYikB,EACZ,OAAOh5B,KAAKuV,MAAMyjB,EAAIrzC,QAErB,CACD,IAAIszC,EAAYD,EAChB,OAAOC,EAAUjjC,KACrB,CACJ,CACA,MAAOA,GACH,GAAIA,aAAiBuiC,EAAGtrC,gBACpB,MAAM+I,EAEV,MAAM,IAAIuiC,EAAGtrC,gBAAgBsrC,EAAGrrC,wBAAwBiV,cAAe,kCAAkCnM,IAC7G,CACJ,GACJ,CAOA+jC,eAAAA,CAAgBhlB,EAAShM,EAASixB,EAAe7T,GAC7C,OAAOpgC,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,IAAIw1C,EAAY,CACZlxB,QAASA,EACTixB,cAAeA,EACf7T,QAASA,GAETwS,EAAKl0C,KAAKm0C,aAAa7jB,GAC3B,QAAUhwB,GAAN4zC,EACA,MAAM,IAAIJ,EAAGtrC,gBAAgBsrC,EAAGrrC,wBAAwBiV,cAAe,mBAE3E,GAAgB,cAAZ4G,EACA,MAAM,IAAIwvB,EAAGtrC,gBAAgBsrC,EAAGrrC,wBAAwBiV,cAAe,2CAE3E,IAAIm3B,EAAU,EACVnT,GAAY,YAAaA,IACzBmT,EAAUnT,EAAQmT,SAEtB,IAAIY,EAAS,GACTjrB,EAAOxqB,KAAKi0C,qBAAqB3jB,GACrC,IAAIolB,EAAa,EACjB,GAAsB,cAAlBH,EAA+B,CAC/B,IAAII,EAAe,aACfC,EAAiB,aACC,OAAlBL,QAA4C,IAAlBA,OAA2B,EAASA,EAAc/B,cAAcqC,SAASF,EAAanC,iBAChHkC,EAAa,EACbH,EAAgBv1C,KAAK81C,aAAaP,EAAeI,KAE1B,OAAlBJ,QAA4C,IAAlBA,OAA2B,EAASA,EAAc/B,cAAcqC,SAASD,EAAepC,kBACvH+B,EAAgBv1C,KAAK81C,aAAaP,EAAeK,GAEzD,CACA,IAAIlsC,EAAS,CACTqsC,SAAU,EACVlB,QAASA,EACTmB,OAAQ,KACRpB,GAAItwB,EACJ2xB,UAAW,CACP,CACIC,WAAY,IACZC,MAAOZ,EACPG,WAAYA,EACZD,OAAQA,EACRF,cAAe,GACf/qB,KAAMA,IAGdgrB,UAAWA,GAEf,IACI,MAAMjB,QAAYv0C,KAAK+zB,SAAS3Y,QAAQ,CACpCnJ,OAAQ,sBACRvI,OAAQA,GACT4mB,GACH,GAAI,WAAYikB,EACZ,OAAOA,EAAIrzC,OAEV,CACD,IAAIszC,EAAYD,EAChB,OAAOC,EAAUjjC,KACrB,CACJ,CACA,MAAOA,GACH,GAAIA,aAAiBuiC,EAAGtrC,gBACpB,MAAM+I,EAEV,MAAM,IAAIuiC,EAAGtrC,gBAAgBsrC,EAAGrrC,wBAAwBiV,cAAe,2CAC3E,CACJ,GACJ,CACA04B,SAAAA,CAAU9lB,EAAShM,EAAS+xB,EAAQC,EAAQ5U,GACxC,OAAOpgC,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,IACI,IAAKswB,IAAYhM,IAAY+xB,IAAWC,EACpC,MAAM,IAAIxC,EAAGtrC,gBAAgBsrC,EAAGrrC,wBAAwBiV,cAAe,wCAE3E,IACIg4B,EADAxB,EAAKl0C,KAAKm0C,aAAa7jB,GAU3B,QARUhwB,GAAN4zC,IACIA,EAAGvhC,WAAW,OACd+iC,EAAa,GAERxB,EAAGvhC,WAAW,aACnB+iC,EAAa,UAGXp1C,GAAN4zC,QAAiC5zC,GAAdo1C,EACnB,MAAM,IAAI5B,EAAGtrC,gBAAgBsrC,EAAGrrC,wBAAwBiV,cAAe,mBAE3E,IAAI64B,EAAcv2C,KAAKi0C,qBAAqB3jB,GACxC5mB,EAAS,CACT6sC,YAAaA,EACbb,WAAYA,EACZpxB,QAASA,EACT+xB,OAAQA,EACRC,OAAQA,EACR5U,QAASA,IAEb,EAAIqS,EAAOvvC,UAAU,kCAAgC+W,KAAKC,UAAU9R,IACpE,MAAM6qC,QAAYv0C,KAAK+zB,SAAS3Y,QAAQ,CACpCnJ,OAAQ,gBACRvI,OAAQA,GACT4mB,GACH,OAAOikB,EAAIrzC,MACf,CACA,MAAOqH,GACH,MAAMA,CACV,CACJ,GACJ,CACAiuC,gBAAAA,CAAiBlmB,EAASmmB,EAAQH,GAC9B,OAAOh1C,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,IACI,IAAKswB,IAAYmmB,IAAWH,EACxB,MAAM,IAAIxC,EAAGtrC,gBAAgBsrC,EAAGrrC,wBAAwBiV,cAAe,wCAE3E,IACIg4B,EADAxB,EAAKl0C,KAAKm0C,aAAa7jB,GAU3B,QARUhwB,GAAN4zC,IACIA,EAAGvhC,WAAW,OACd+iC,EAAa,EAERxB,EAAGvhC,WAAW,aACnB+iC,EAAa,UAGXp1C,GAAN4zC,QAAiC5zC,GAAdo1C,EACnB,MAAM,IAAI5B,EAAGtrC,gBAAgBsrC,EAAGrrC,wBAAwBiV,cAAe,mBAE3E,IAAI64B,EAAcv2C,KAAKi0C,qBAAqB3jB,GACxC5mB,EAAS,CACT6sC,YAAaA,EACbb,WAAYA,EACZe,OAAQA,EACRH,OAAQA,IAEZ,EAAIvC,EAAOvvC,UAAU,yCAAuC+W,KAAKC,UAAU9R,UACzD1J,KAAK+zB,SAAS3Y,QAAQ,CACpCnJ,OAAQ,uBACRvI,OAAQA,GACT4mB,EACP,CACA,MAAO/nB,GACH,MAAMA,CACV,CACJ,GACJ,CACAutC,YAAAA,CAAa/zB,EAAK20B,GACd,OAAI30B,EAAI8zB,SAASa,GACN30B,EAAIrL,MAAM,EAAGqL,EAAIza,OAASovC,EAAOpvC,QAErCya,CACX,CACAgzB,eAAAA,CAAgBrrC,KAAWghB,GACvB,IAAIisB,EAAc,GAMlB,OALAjsB,EAAKra,SAAQ4D,IACH,GAAGA,MAASvK,GACditC,EAAYlgC,KAAKxC,EACrB,MAEA0iC,EAAYrvC,OAAS,KACrByoB,QAAQjtB,IAAI,iBAAkB6zC,EAAYv+B,KAAK,OACxC,EAGf,CAMA+7B,YAAAA,CAAa7jB,GACT,GAAItwB,KAAKg0C,KAAKz7B,SAAS+X,GAAU,CAC7B,IAAK8B,EAAcH,GAAK3B,EAAQ/N,MAAM,KACtC,OAAO6P,CACX,CAEJ,EAEJhzB,EAAQy0C,eAAiBA,EACzBz0C,EAAAA,WAAkBy0C,C,qCCncN/zC,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACb,IAAIwB,EAAatB,MAAQA,KAAKsB,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMtC,GAAS,OAAOA,aAAiBoC,EAAIpC,EAAQ,IAAIoC,GAAE,SAAUG,GAAWA,EAAQvC,EAAQ,GAAI,CAC3G,OAAO,IAAKoC,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU1C,GAAS,IAAM2C,EAAKN,EAAUO,KAAK5C,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAS9C,GAAS,IAAM2C,EAAKN,EAAU,SAASrC,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKd,GAAUA,EAAOkB,KAAOR,EAAQV,EAAO7B,OAASsC,EAAMT,EAAO7B,OAAOgD,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACA/C,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQw3C,uBAAoB,EAC5B,MAAM7C,EAASj0C,EAAQ,OACvB,MAAM82C,EACFzzC,WAAAA,CAAY4wB,GACR/zB,KAAK+zB,SAAWA,CACpB,CACAsgB,UAAAA,CAAW/jB,GACP,IAAItrB,EAAI4J,EAAIC,EAAIC,EAAIC,EAAIC,GACxB,EAAI+kC,EAAOvvC,UAAU,wCAAyC8rB,IAC9D,EAAIyjB,EAAOvvC,UAAU,2CAA4C+W,KAAKC,UAA2C,QAAhCxW,EAAKhF,KAAK+zB,SAAS5V,eAA4B,IAAPnZ,OAAgB,EAASA,EAAGwY,aACrJ,IAAI42B,EAAgI,QAArHvlC,EAAsC,QAAhCD,EAAK5O,KAAK+zB,SAAS5V,eAA4B,IAAPvP,OAAgB,EAASA,EAAG4O,WAAWu2B,EAAO3S,2BAAwC,IAAPvyB,OAAgB,EAASA,EAAGqV,SAAS5L,QAAO,SAAU87B,GAC9L,OAAOA,EAAQzhC,WAAW2d,EAC9B,IAAG,GAEH,IADA,EAAIyjB,EAAOvvC,UAAU,wCAAyC+W,KAAKC,UAAU44B,KACxEA,EAID,OAEJ,MAAMyC,EAAezC,EAAQ7xB,MAAM,KAC7B+B,EAAU8vB,EAAQ7xB,MAAM,KAAK,IACnC,EAAIwxB,EAAOvvC,UAAU,wCAAyC8f,GAC9D,IAAIO,EAAmL,QAA1K7V,EAA2H,QAArHD,EAAsC,QAAhCD,EAAK9O,KAAK+zB,SAAS5V,eAA4B,IAAPrP,OAAgB,EAASA,EAAG0O,WAAWu2B,EAAO3S,2BAAwC,IAAPryB,OAAgB,EAASA,EAAG8V,aAA0B,IAAP7V,OAAgB,EAASA,EAAI,GAAG6nC,EAAa,MAAMA,EAAa,MAC3PlpC,EAAY,GAKhB,YAJarN,GAATukB,IACAlX,EAAYkX,EAAM,aAClBkL,QAAQjtB,IAAI,kBAAmB6K,IAE9B2W,EAME,CACHwyB,KAAM,YACNxyB,QAASA,EACTyyB,cAAezyB,EACf0yB,OAAQh3C,KAAKi3C,gBAAgBtpC,SAVjC,CAYJ,CACAupC,aAAAA,CAAc5mB,EAAS6mB,EAAe5yC,GAClC,OAAOjD,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,MAAMsc,EAAgBsS,OAAOkhB,KAAKvrC,GAC5B6yC,EAAU,CACZC,SAAU,GACVC,eAAgB,IAChBC,SAAU,IACVC,IAAK,CACDC,IAAK,IACLnB,OAAQ,IAEZoB,KAAM,CAAC,CACC,KAAQ,mBACR,MAAS,CACL,OAAUP,EACV,KAAQ76B,KAGpBq7B,KAAM,IAEV,IAAIC,EAAW,CACX,QAAWtnB,EACX,OAAU,uBACV,OAAU,CACN,OAAU6mB,EACV,SAAY7mB,EAAQ/N,MAAM,KAAK,GAC/B,KAAQ60B,IAGhB,IACI,MAAM7C,QAAYv0C,KAAK+zB,SAAS3Y,QAAQw8B,EAAUtnB,GAClD,GAAI,WAAYikB,EACZ,MAAyB,iBAAdA,EAAIrzC,OACJqa,KAAKuV,MAAMyjB,EAAIrzC,QAGfqzC,EAAIrzC,OAGd,CACD,IAAIszC,EAAYD,EAChB,OAAOC,EAAUjjC,KACrB,CACJ,CACA,MAAOA,GACH,OAAOA,CAEX,CACJ,GACJ,CACAsmC,SAAAA,CAAUvnB,EAAS6mB,EAAeC,EAASU,GACvC,OAAOx2C,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,GAA4B,oBAAxBo3C,EAAQM,KAAK,GAAGxZ,KAA4B,CAC5C,IAAI0Z,EAAW,CACX,QAAWtnB,EACX,OAAU,uBACV,OAAU,CACN,OAAU6mB,EACV,SAAY7mB,EAAQ/N,MAAM,KAAK,GAC/B,KAAQ60B,IAGhB,IACI,MAAM7C,QAAYv0C,KAAK+zB,SAAS3Y,QAAQw8B,EAAUtnB,GAClD,GAAI,WAAYikB,EACZ,OAAOA,EAAIrzC,OAEV,CACD,IAAIszC,EAAYD,EAChB,OAAOC,EAAUjjC,KACrB,CACJ,CACA,MAAOA,GACH,OAAOA,CAEX,CACJ,KACK,CACD,IAAIqmC,EAAW,CACX,QAAWtnB,EACX,OAAU,mBACV,OAAU,CACN,OAAU6mB,EACV,QAAW7mB,EAAQ/N,MAAM,KAAK,GAC9B,SAAY60B,EACZ,YAAeU,IAGvB,IACI,MAAMvD,QAAYv0C,KAAK+zB,SAAS3Y,QAAQw8B,EAAUtnB,GAClD,GAAI,WAAYikB,EAAK,CACjB,MAAMwD,EAAUx8B,KAAKuV,MAAMyjB,EAAIrzC,QAG/B,OAFA6uB,QAAQjtB,IAAI,UAAWs0C,EAASW,EAAQX,SACxCA,EAAQI,IAAMO,EAAQX,QAAQI,IACvB,CAAEQ,OAAQZ,EAASz0B,UAAWo1B,EAAQp1B,UACjD,CACK,CACD,IAAI6xB,EAAYD,EAChB,OAAOC,EAAUjjC,KACrB,CACJ,CACA,MAAOA,GAEH,OAAOA,CACX,CACJ,CACJ,GACJ,CACA0mC,UAAAA,CAAW3nB,EAAS6mB,EAAeC,EAASU,GACxC,OAAOx2C,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,MAAMsU,EAAS,CACX4jC,UAAWl4C,KAAKm4C,YAAYf,EAAQc,WACpCE,cAAep4C,KAAKm4C,YAAYf,EAAQgB,eACxC9nB,QAAS8mB,EAAQ9mB,QACjB+nB,cAAejB,EAAQiB,cAAgBjB,EAAQiB,cAAczzC,WAAa,KAC1EkzC,YAAaA,GAA4B,MAE7C,IAAIvzC,EAAO,CACP,QAAW+rB,EACX,OAAU,oBACV,OAAU,CACN,OAAU6mB,EACV,QAAW7mB,EAAQ/N,MAAM,KAAK,GAC9B,SAAYjO,IAGpB,IACI,MAAMigC,QAAYv0C,KAAK+zB,SAAS3Y,QAAQ7W,EAAM+rB,GAC9C,GAAI,WAAYikB,EAAK,CACjB,MAAMtM,EAAM1sB,KAAKuV,MAAMyjB,EAAIrzC,QAG3B,OAFA6uB,QAAQjtB,IAAI,oBAAqBmlC,GACjCmP,EAAQgB,cAAgBp4C,KAAKs4C,gBAAgBrQ,EAAImP,QAAQgB,eAClD,CAAEJ,OAAQZ,EAASz0B,UAAWslB,EAAItlB,UAC7C,CACJ,CACA,MAAOpR,GACH,OAAOA,CAEX,CACJ,GACJ,CACA+mC,eAAAA,CAAgB1uC,GACZ,IAAI2uC,EAAS/a,WAAWhT,KAAK,IAC7B,IAEQ+tB,EADmB,kBAAZ3uC,EACE5J,KAAKi3C,gBAAgBrtC,EAAQuI,QAAQ,KAAM,KAG3CqrB,WAAWhT,KAAK5gB,EAEjC,CACA,MAAOrB,GACHwnB,QAAQjtB,IAAI,0BAA0ByF,IAC1C,CACA,OAAOgwC,CACX,CACAJ,WAAAA,CAAYK,GACR,IAAIC,EAAS,IAAI,IAAIjb,WAAWgb,IAC3B1hC,KAAI4hC,GAAKA,EAAE9zC,SAAS,IAAI+zC,SAAS,EAAG,OACpCvgC,KAAK,IACV,MAAO,KAAOqgC,CAClB,CACAxB,eAAAA,CAAgBjG,GACZ,GAAIA,EAAU1pC,OAAS,IAAM,EACzB,KAAM,oBAGV,IADA,IAAIsxC,EAAc,IAAIpb,WAAWwT,EAAU1pC,OAAS,GAC3CuM,EAAI,EAAGA,EAAIm9B,EAAU1pC,OAAQuM,GAAK,EAAG,CAC1C,IAAIglC,EAAY9e,SAASiX,EAAUrD,OAAO95B,EAAG,GAAI,IACjD,GAAIilC,MAAMD,GACN,KAAM,oBAEVD,EAAY/kC,EAAI,GAAKglC,CACzB,CACA,OAAOD,CACX,EAEJx5C,EAAQw3C,kBAAoBA,C,oCCrO5B,IAAIt1C,EAAatB,MAAQA,KAAKsB,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMtC,GAAS,OAAOA,aAAiBoC,EAAIpC,EAAQ,IAAIoC,GAAE,SAAUG,GAAWA,EAAQvC,EAAQ,GAAI,CAC3G,OAAO,IAAKoC,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU1C,GAAS,IAAM2C,EAAKN,EAAUO,KAAK5C,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAS9C,GAAS,IAAM2C,EAAKN,EAAU,SAASrC,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKd,GAAUA,EAAOkB,KAAOR,EAAQV,EAAO7B,OAASsC,EAAMT,EAAO7B,OAAOgD,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACA/C,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ25C,yBAAsB,EAC9B,MAAMhF,EAASj0C,EAAQ,OACvB,MAAMi5C,EACF51C,WAAAA,CAAY4wB,GACR/zB,KAAKg5C,kBAAoB,mBACzBh5C,KAAK+zB,SAAWA,CACpB,CACAklB,QAAAA,CAAS3oB,GAIL,GAHe,MAAXA,IACAA,EAAUtwB,KAAKg5C,mBAEf1oB,GAAWtwB,KAAKg5C,kBAChB,MAAM,IAAIjF,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwBgoB,oBAAqB,eAAiBH,EAAU,oCAEpH,OAAOA,CACX,CACA+jB,UAAAA,CAAW/jB,GACP,IAAItrB,EAAI4J,EAAIC,EAAIC,EAAIC,EACpB,IAAIqlC,EAAkI,QAAvHxlC,EAAsC,QAAhC5J,EAAKhF,KAAK+zB,SAAS5V,eAA4B,IAAPnZ,OAAgB,EAASA,EAAGwY,WAAWu2B,EAAO7S,6BAA0C,IAAPtyB,OAAgB,EAASA,EAAGsV,SAAS5L,QAAO,SAAU87B,GAChM,OAAOA,EAAQzhC,WAAW2d,EAC9B,IAAG,GACH,IAAK8jB,EAID,OAEJ,MAAMyC,EAAezC,EAAQ7xB,MAAM,KAC7B+B,EAAU8vB,EAAQ7xB,MAAM,KAAK,GACnC,IAAIsC,EAAqL,QAA5K9V,EAA6H,QAAvHD,EAAsC,QAAhCD,EAAK7O,KAAK+zB,SAAS5V,eAA4B,IAAPtP,OAAgB,EAASA,EAAG2O,WAAWu2B,EAAO7S,6BAA0C,IAAPpyB,OAAgB,EAASA,EAAG+V,aAA0B,IAAP9V,OAAgB,EAASA,EAAI,GAAG8nC,EAAa,MAAMA,EAAa,MAC7PlpC,EAAY,GAIhB,YAHarN,GAATukB,IACAlX,EAAYkX,EAAM,cAEjBP,EAME,CACHA,QAASA,EACT0yB,OAAQrpC,QARZ,CAUJ,CAQAoqB,WAAAA,CAAYof,EAAe+B,EAAW5oB,GAClC,OAAOhvB,EAAUtB,UAAM,OAAQ,GAAQ,YACnCswB,EAAUtwB,KAAKi5C,SAAS3oB,GACI,GAAxB6mB,EAAc7vC,SACd6vC,EAAgBn3C,KAAKq0C,WAAW/jB,GAAS,YAE7C,IAAIsnB,EAAW,CACX,QAAWtnB,EACX,OAAU,uBACV,OAAU,CACN,eAAkB6mB,EAClB,UAAa+B,IAGrB,IACI,MAAM3E,QAAYv0C,KAAK+zB,SAAS3Y,QAAQw8B,EAAUtnB,GAClD,GAAI,WAAYikB,EAAK,CACjB,IAAI7L,EAAU6L,EAAIrzC,OAIlB,MAHsB,iBAAXwnC,IACPA,EAAUntB,KAAKuV,MAAM4X,IAElB,CAACA,EAAQ,eAAgBA,EAAQ,eAC5C,CACK,CACD,IAAI8L,EAAYD,EAChB,OAAOC,EAAUjjC,KACrB,CACJ,CACA,MAAOA,GACH,OAAOA,CAEX,CACJ,GACJ,CAQA4nC,eAAAA,CAAgBhC,EAAeiC,EAAa9oB,GACxC,OAAOhvB,EAAUtB,UAAM,OAAQ,GAAQ,YACnCswB,EAAUtwB,KAAKi5C,SAAS3oB,GACxB,IAAI+oB,EAAkB,CAClB,eAAkBlC,EAClB,iBAAoBiC,GAEpB70C,EAAO,CACP,OAAU,2BACV,OAAU,CACN,KAAQgX,KAAKC,UAAU69B,GACvB,KAAQlC,IAGhB,IACI,MAAM5C,QAAYv0C,KAAK+zB,SAAS3Y,QAAQ7W,EAAM+rB,GAC9C,GAAI,WAAYikB,EACZ,MAAO,CAAE+E,iBAAkB/E,EAAIrzC,QAE9B,CACD,IAAIszC,EAAYD,EAChB,OAAOC,EAAUjjC,KACrB,CACJ,CACA,MAAOA,GACH,OAAOA,CAEX,CACJ,GACJ,CAQAgoC,iCAAAA,CAAkCl0C,EAASirB,GACvC,OAAOhvB,EAAUtB,UAAM,OAAQ,GAAQ,YACnCswB,EAAUtwB,KAAKi5C,SAAS3oB,GACxB,IACI,IAAI/rB,EAAO,CACP,OAAU,uBACV,OAAUc,GAEd,MAAMkvC,QAAYv0C,KAAK+zB,SAAS3Y,QAAQ7W,EAAM+rB,GAC9C,GAAI,WAAYikB,EACZ,MAAO,CACH,iBAAoBA,EAAIrzC,OAAO,UAC/B,WAAcqzC,EAAIrzC,OAAO,cAG5B,CACD,IAAIszC,EAAYD,EAChB,OAAOC,EAAUjjC,KACrB,CACJ,CACA,MAAOA,GACH,OAAOA,CAEX,CACJ,GACJ,CAaAioC,mCAAAA,CAAoCrC,EAAesC,EAAOC,EAAMC,EAAoBrpB,GAChF,OAAOhvB,EAAUtB,UAAM,OAAQ,GAAQ,YACnCswB,EAAUtwB,KAAKi5C,SAAS3oB,GACxB,MAAMspB,EAAepiC,MAAMqiC,QAAQJ,GAASA,EAAQ,CAACA,GAC/CK,EAAmB,CACrB,MAASF,EACT,KAAQF,EACR,mBAAsB,CAClB,MAAgC,OAAvBC,QAAsD,IAAvBA,OAAgC,EAASA,EAAmB5jB,MACpG,OAAiC,OAAvB4jB,QAAsD,IAAvBA,OAAgC,EAASA,EAAmB5jB,MACrG,QAAkC,OAAvB4jB,QAAsD,IAAvBA,OAAgC,EAASA,EAAmB5qB,UAG9G,OAAO/uB,KAAKm5C,gBAAgBhC,EAAe2C,EAAkBxpB,EACjE,GACJ,EAEJlxB,EAAQ25C,oBAAsBA,C,qCCpMlBj5C,EAAA,OAACA,EAAA,OACb,IAAIwB,EAAatB,MAAQA,KAAKsB,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMtC,GAAS,OAAOA,aAAiBoC,EAAIpC,EAAQ,IAAIoC,GAAE,SAAUG,GAAWA,EAAQvC,EAAQ,GAAI,CAC3G,OAAO,IAAKoC,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU1C,GAAS,IAAM2C,EAAKN,EAAUO,KAAK5C,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAS9C,GAAS,IAAM2C,EAAKN,EAAU,SAASrC,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKd,GAAUA,EAAOkB,KAAOR,EAAQV,EAAO7B,OAASsC,EAAMT,EAAO7B,OAAOgD,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACA/C,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ26C,oBAAiB,EACzB,MAAMjG,EAAKh0C,EAAQ,MACbi0C,EAASj0C,EAAQ,OACvB,MAAMi6C,EACF52C,WAAAA,CAAYzB,GACR1B,KAAKg6C,0BAA4B,GACjCh6C,KAAKi6C,+BAAiC,GACtCj6C,KAAK+zB,SAAWryB,EAChB1B,KAAK+zB,SAAS/sB,GAAG,WAAW,KACxB,IAAIkzC,EAAYl6C,KAAK6d,UACrB,EAAIk2B,EAAOvvC,UAAU,gCAAiC+W,KAAKC,UAAU0+B,IACrEl6C,KAAKg6C,0BAA0B3pC,SAAQlG,GAAYA,EAAS+vC,IAAW,IAE3El6C,KAAK+zB,SAAS/sB,GAAG,aAAa,KAC1B,IAAIkzC,EAAYl6C,KAAK6d,UACrB,EAAIk2B,EAAOvvC,UAAU,kCAAmC+W,KAAKC,UAAU0+B,IACvEl6C,KAAKg6C,0BAA0B3pC,SAAQlG,GAAYA,EAAS+vC,IAAW,IAE3El6C,KAAK+zB,SAAS/sB,GAAG,cAAc,MAC3B,EAAI+sC,EAAOvvC,UAAU,oCACrBxE,KAAKg6C,0BAA0B3pC,SAAQlG,GAAYA,EAAS,OAAM,IAEtEnK,KAAK+zB,SAAS/sB,GAAG,iBAAkBuK,KAC/B,EAAIwiC,EAAOvvC,UAAU,sCAAuC+W,KAAKC,UAAUjK,IAC3EvR,KAAKi6C,+BAA+B5pC,SAAQ8pC,GAAiBA,EAAc5oC,IAAO,GAE1F,CACA6oC,SAAAA,GACI,QAAIp6C,KAAK+zB,SAASqmB,eACLp6C,KAAK+zB,SAAS5V,QAAQX,WAAW,MAGlD,CACA42B,OAAAA,GACI,IACI,IAAKp0C,KAAK+zB,SAAS5V,QACf,OAAO,KAEX,IAAIk8B,EAAer6C,KAAK+zB,SAAS5V,QAAQX,WAAW,OACpD,IAAK68B,IAAiBA,EAAah1C,UAAYg1C,EAAah1C,QAAQgf,SAChE,OAAO,KAEX,IAAIA,EAAWg2B,EAAah1C,QAAQgf,SACpC,MAAO,CACHC,QAASD,EAASC,QAClBW,MAAOZ,EAASI,QAChB61B,gBAAiBj2B,EAASi2B,gBAC1B3sC,UAAW0W,EAAS1W,UAE5B,CACA,MAAOzL,GAEH,OADA,EAAI6xC,EAAOvvC,UAAU,iCAAkC+W,KAAKC,UAAUtZ,IAC/D,IACX,CACJ,CACA2b,MAAAA,GACI,GAAI7d,KAAKo6C,YACL,IACI,IAAIG,EAAgBv6C,KAAK+zB,SAAS5V,QAAQN,OACtC28B,EAAgB,CAChBvrB,SAAUsrB,EAActrB,SACxB/U,QAASqgC,EAAcrgC,QACvBiV,WAAYorB,EAAcprB,WAC1B3Q,mBAAoB+7B,EAAc/7B,mBAClCic,SAAU,CAAC,wBAEf,MAAM5c,EAAS,CACXymB,OAAQkW,EACRzmB,SAAU,OACVqgB,QAASp0C,KAAKo0C,WAElB,IAAIiG,EAAer6C,KAAK+zB,SAAS5V,QAAQX,WAAW,OAOpD,OANI68B,GAAgBA,EAAah1C,SAAWg1C,EAAah1C,QAAQqf,YAC7D7G,EAAO48B,aAAe,CAClBj2B,SAAU61B,EAAah1C,QAAQqf,aAGvC,EAAIqvB,EAAOvvC,UAAU,0BAA2B+W,KAAKC,UAAUqC,IACxDA,CACX,CACA,MAAO3b,GAEH,OADA,EAAI6xC,EAAOvvC,UAAU,gCAAiC+W,KAAKC,UAAUtZ,IAC9D,IACX,CAEJ,OAAO,IACX,CACAw4C,cAAAA,CAAevwC,EAAUgwC,GAKrB,OAJAn6C,KAAKg6C,0BAA0BvjC,KAAKtM,GAChCgwC,GACAn6C,KAAKi6C,+BAA+BxjC,KAAK0jC,GAEtC,KACHn6C,KAAKg6C,0BAA4Bh6C,KAAKg6C,0BAA0B1hC,QAAOhB,GAAQA,IAASnN,IACpFgwC,IACAn6C,KAAKi6C,+BAAiCj6C,KAAKi6C,+BAA+B3hC,QAAOhB,GAAQA,IAAS6iC,IACtG,CAER,CACAhB,eAAAA,CAAgBC,GACZ,OAAO93C,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,GAAIo5C,EAAY30B,SAAW20B,EAAY30B,UAAYsvB,EAAO9U,SAAS3D,QAC/D,MAAM,IAAIwY,EAAGtrC,gBAAgBsrC,EAAGrrC,wBAAwBiV,cAAe,gDAK3E,GAHK07B,EAAY30B,UACb20B,EAAY30B,QAAUsvB,EAAO9U,SAAS3D,SAEtCt7B,KAAK+zB,SAAS5V,UACTi7B,EAAY5uB,KAAM,CACnB,MAAMtG,EAAWlkB,KAAK+zB,SAAS4mB,6BAA6B,OAC5DvB,EAAY5uB,KAAOtG,EAAS,EAChC,CAEJ,MAAM02B,EAAgB,CAClB3oC,OAAQ,sBACRvI,OAAQ0vC,GAEZ,IAAIn0B,EAAQ,OAAS8uB,EAAO9U,SAAS3D,QAErC,OADA,EAAIyY,EAAOvvC,UAAU,kDAAmDygB,EAAO1J,KAAKC,UAAUo/B,IACvF56C,KAAK+zB,SAAS3Y,QAAQw/B,EAAe31B,EAChD,GACJ,EAEJ7lB,EAAQ26C,eAAiBA,EACzB36C,EAAAA,WAAkB26C,C,qCCtIlB,IAAIz4C,EAAatB,MAAQA,KAAKsB,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMtC,GAAS,OAAOA,aAAiBoC,EAAIpC,EAAQ,IAAIoC,GAAE,SAAUG,GAAWA,EAAQvC,EAAQ,GAAI,CAC3G,OAAO,IAAKoC,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU1C,GAAS,IAAM2C,EAAKN,EAAUO,KAAK5C,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAS9C,GAAS,IAAM2C,EAAKN,EAAU,SAASrC,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKd,GAAUA,EAAOkB,KAAOR,EAAQV,EAAO7B,OAASsC,EAAMT,EAAO7B,OAAOgD,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACA/C,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQy7C,qBAAkB,EAC1B,MAAM9G,EAASj0C,EAAQ,OACvB,MAAM+6C,EACF13C,WAAAA,CAAY4wB,GACR/zB,KAAK86C,cAAgB,eACrB96C,KAAK+zB,SAAWA,CACpB,CACAklB,QAAAA,CAAS3oB,GAIL,GAHe,MAAXA,IACAA,EAAUtwB,KAAK86C,eAEfxqB,GAAWtwB,KAAK86C,cAChB,MAAM,IAAI/G,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwBgoB,oBAAqB,eAAiBH,EAAU,gCAEpH,OAAOA,CACX,CACA+jB,UAAAA,CAAW/jB,GACP,IAAItrB,EAAI4J,EAAIC,EAAIC,EAAIC,EACpBuhB,EAAUtwB,KAAKi5C,SAAS3oB,GACxB,IAAI8jB,EAA8H,QAAnHxlC,EAAsC,QAAhC5J,EAAKhF,KAAK+zB,SAAS5V,eAA4B,IAAPnZ,OAAgB,EAASA,EAAGwY,WAAWu2B,EAAO5S,yBAAsC,IAAPvyB,OAAgB,EAASA,EAAGsV,SAAS5L,QAAO,SAAU87B,GAC5L,OAAOA,EAAQzhC,WAAW2d,EAC9B,IAAG,GACH,IAAK8jB,EAID,OAEJ,MAAMyC,EAAezC,EAAQ7xB,MAAM,KAC7B+B,EAAU8vB,EAAQ7xB,MAAM,KAAK,GACnC,IAAIsC,EAAiL,QAAxK9V,EAAyH,QAAnHD,EAAsC,QAAhCD,EAAK7O,KAAK+zB,SAAS5V,eAA4B,IAAPtP,OAAgB,EAASA,EAAG2O,WAAWu2B,EAAO5S,yBAAsC,IAAPryB,OAAgB,EAASA,EAAG+V,aAA0B,IAAP9V,OAAgB,EAASA,EAAI,GAAG8nC,EAAa,MAAMA,EAAa,MACzPlpC,EAAY,GAIhB,YAHarN,GAATukB,IACAlX,EAAYkX,EAAM,cAEjBP,EAME,CACHA,QAASA,QAPb,CASJ,CACAy2B,WAAAA,CAAYh5B,GACR,IAAImpB,EAAM,GACV,IAAK,IAAIr3B,EAAI,EAAGA,EAAIkO,EAAIza,OAAQuM,IAC5Bq3B,GAAOnpB,EAAIipB,WAAWn3B,GAAGjP,SAAS,IAAI+zC,SAAS,EAAG,KAEtD,OAAOzN,CACX,CACAnT,WAAAA,CAAYxzB,EAAM+rB,GACd,OAAOhvB,EAAUtB,UAAM,OAAQ,GAAQ,YACnCswB,EAAUtwB,KAAKi5C,SAAS3oB,GACxB,IAAIsnB,EAAW,CACX,QAAWtnB,EACX,OAAU,mBACV,OAAU,CACN,QAAWtwB,KAAK+6C,YAAYx2C,KAGpC,IACI,MAAMgwC,QAAYv0C,KAAK+zB,SAAS3Y,QAAQw8B,EAAUtnB,GAClD,GAAI,WAAYikB,EACZ,OAAOA,EAAIrzC,OAEV,CACD,IAAIszC,EAAYD,EAChB,OAAOC,EAAUjjC,KACrB,CACJ,CACA,MAAOA,GACH,OAAOA,CAEX,CACJ,GACJ,CACAypC,aAAAA,CAAcz2C,EAAM+rB,GAChB,OAAOhvB,EAAUtB,UAAM,OAAQ,GAAQ,YACnCswB,EAAUtwB,KAAKi5C,SAAS3oB,GACxB,IAAIsnB,EAAW,CACX,QAAWtnB,EACX,OAAU,qBACV,OAAU,CACN,QAAW/rB,IAGnB,IACI,MAAMgwC,QAAYv0C,KAAK+zB,SAAS3Y,QAAQw8B,EAAUtnB,GAClD,GAAI,WAAYikB,EACZ,OAAOA,EAAIrzC,OAEV,CACD,IAAIszC,EAAYD,EAChB,OAAOC,EAAUjjC,KACrB,CACJ,CACA,MAAOA,GACH,OAAOA,CAEX,CACJ,GACJ,CACAymB,eAAAA,CAAgBohB,EAAa9oB,GACzB,OAAOhvB,EAAUtB,UAAM,OAAQ,GAAQ,YACnCswB,EAAUtwB,KAAKi5C,SAAS3oB,GACxB,IAAI/rB,EAAO,CACP,OAAU,uBACV,OAAU60C,GAEd,IACI,MAAM7E,QAAYv0C,KAAK+zB,SAAS3Y,QAAQ7W,EAAM+rB,GAC9C,GAAI,WAAYikB,EAAK,CACjB,IAAI0G,EAEAA,EADqB,iBAAd1G,EAAIrzC,OACAqa,KAAKuV,MAAMyjB,EAAIrzC,QAGfqzC,EAAIrzC,OAEnB,IAAIg6C,EAAa,CAAC,EAClBA,EAAWC,QAAUF,EAASE,QAC9BD,EAAWE,KAAOH,EAASG,KAC3B,IAAIC,EAAU,CAAC,EAUf,OATAA,EAAQC,SAAWL,EAASM,SAASD,SACrCD,EAAQG,WAAaP,EAASM,SAASC,WACvCH,EAAQI,gBAAkBR,EAASM,SAASE,gBAC5CJ,EAAQK,UAAYT,EAASM,SAASG,UACtCL,EAAQM,eAAiBV,EAASM,SAASI,eAC3CN,EAAQn1B,UAAY+0B,EAASM,SAASr1B,UACtCg1B,EAAWK,SAAWF,EACtBH,EAAWU,aAAeX,EAASW,aACnCV,EAAWv4B,UAAYs4B,EAASt4B,UACzBu4B,CACX,CACJ,CACA,MAAO3pC,GACH,OAAOA,CAEX,CACJ,GACJ,CACA2nB,sBAAAA,CAAuBkgB,EAAa9oB,GAChC,OAAOhvB,EAAUtB,UAAM,OAAQ,GAAQ,YACnCswB,EAAUtwB,KAAKi5C,SAAS3oB,GACxB,IAAI/rB,EAAO,CACP,OAAU,8BACV,OAAU60C,GAEd,IACI,MAAM7E,QAAYv0C,KAAK+zB,SAAS3Y,QAAQ7W,EAAM+rB,GAC9C,GAAI,WAAYikB,EACZ,OAAOA,EAAIrzC,MAEnB,CACA,MAAOqQ,GACH,OAAOA,CAEX,CACJ,GACJ,EAEJnS,EAAQy7C,gBAAkBA,C,qCC9Kd/6C,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACb,IAAIwB,EAAatB,MAAQA,KAAKsB,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMtC,GAAS,OAAOA,aAAiBoC,EAAIpC,EAAQ,IAAIoC,GAAE,SAAUG,GAAWA,EAAQvC,EAAQ,GAAI,CAC3G,OAAO,IAAKoC,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU1C,GAAS,IAAM2C,EAAKN,EAAUO,KAAK5C,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAS9C,GAAS,IAAM2C,EAAKN,EAAU,SAASrC,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKd,GAAUA,EAAOkB,KAAOR,EAAQV,EAAO7B,OAASsC,EAAMT,EAAO7B,OAAOgD,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACIuS,EAAmBxU,MAAQA,KAAKwU,iBAAoB,SAAUvT,GAC9D,OAAQA,GAAOA,EAAIR,WAAcQ,EAAM,CAAE,QAAWA,EACxD,EACA/B,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQy8C,0BAAuB,EAC/B,MAAMC,EAAWh8C,EAAQ,OACnBi8C,EAAQj8C,EAAQ,OAChB0C,EAAc1C,EAAQ,OACtB+C,EAAkB2R,EAAgB1U,EAAQ,QAC1Ck8C,EAAWl8C,EAAQ,OACnBi0C,EAASj0C,EAAQ,OACjBm8C,EAAen8C,EAAQ,OACvBo8C,EAAW1nC,EAAgB1U,EAAQ,QACnCq8C,EAAQ3nC,EAAgB1U,EAAQ,QAChCs8C,EAAU5nC,EAAgB1U,EAAQ,QAClCu8C,EAAQ7nC,EAAgB1U,EAAQ,QAChCw8C,EAAW9nC,EAAgB1U,EAAQ,QACnCy8C,EAAS/nC,EAAgB1U,EAAQ,QACjC6C,EAAU7C,EAAQ,OAClB08C,EAAa18C,EAAQ,OACrB28C,EAAa38C,EAAQ,OACrB48C,EAAaloC,EAAgB1U,EAAQ,QAC3C,MAAM+7C,EACF,WAAOlqC,CAAKgrC,GACR,OAAOr7C,EAAUtB,UAAM,OAAQ,GAAQ,YAKnC,IAAI+zB,EAcJ,OAlBA,EAAIggB,EAAOvvC,UAAU,uCACrB,EAAIuvC,EAAO5R,eAAewa,EAAKrT,eAE/B,EAAI3mC,EAAQi6C,WAAW,uBAAuB,GAE1ChuB,QAAUA,OAAOiuB,6BAA+BjuB,OAAOiuB,uCAAuChB,IAC9F,EAAI9H,EAAOvvC,UAAU,yCACrBuvB,EAAWnF,OAAOiuB,+BAGlB,EAAI9I,EAAOvvC,UAAU,yCACrBuvB,EAAW,IAAI8nB,EAAqBc,GAChC/tB,SACAA,OAAOiuB,4BAA8B9oB,SAEnCA,EAAS+oB,eAEnB,EAAI/I,EAAO/e,sBAAsBsS,qBAAqB,0BAA2B,OAAQvT,EAASgpB,aAAazT,aAAa93B,MACrHuiB,CACX,GACJ,CACA5wB,WAAAA,CAAYw5C,GACR38C,KAAKg9C,aAAe,CAAC,EACrBh9C,KAAKqD,OAAS,IAAIR,EAAgBwS,QAC7BsnC,EAAKjwC,WAAsC,GAAzBiwC,EAAKjwC,UAAUpF,SAClCq1C,EAAKjwC,UAAY,CAACqnC,EAAOpoB,mBAAmBpR,eAAgBw5B,EAAOpnB,kBAAkBpS,iBAEzFva,KAAK+8C,aAAeJ,CACxB,CACAvhC,OAAAA,CAAQqoB,EAAMxe,GACV,OAAO3jB,EAAUtB,UAAM,OAAQ,GAAQ,YAGnC,IAFA,EAAI+zC,EAAOvvC,UAAU,0CACrB,EAAIuvC,EAAO3nC,WAAW,0CACjBpM,KAAKo6C,YACN,MAAM,IAAIrG,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwBkoB,sBAEpE,EAAIojB,EAAOvvC,UAAU,8CACrB,MAAM,UAAE4f,EAAS,aAAE64B,GAAiBj9C,KAAKk9C,6BAA6BzZ,EAAMxe,GAC5E,aAAajlB,KAAKm9C,YAAY/4B,GAAWhJ,QAAQ6hC,EACrD,GACJ,CACAC,4BAAAA,CAA6BzZ,EAAMxe,GAC/B,IAAIjgB,GACJ,EAAI+uC,EAAOvvC,UAAU,2CAA4CygB,GAAO,EAAI8uB,EAAOtpC,mBAAmBg5B,IACtG,IAAKrf,EAAWkM,GAAWtwB,KAAKo9C,cAAcn4B,GAC9C,IAAKjlB,KAAKme,QACN,MAAM,IAAI41B,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwBiV,cAAe,0CAEnF,IAAI2/B,EAASn+C,OAAOwrB,KAAK1qB,KAAKme,QAAQX,YACtC,IAAKyH,GAASo4B,GAAUA,EAAO/1C,OAAS,EACpC,MAAM,IAAIysC,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwBkoB,oBAAqB,uEAExE,SAAbvM,GAAmC,WAAXkM,IACxBlM,EAAY,QACZkM,EAAU,OAEG,YAAblM,GAAsC,WAAXkM,IAC3BlM,EAAY,QACZkM,EAAU,YAEG,YAAblM,GAAsC,WAAXkM,IAC3BlM,EAAY,QACZkM,EAAU,YAEd,MAAM2sB,EAAe/9C,OAAOkf,OAAOlf,OAAOkf,OAAO,CAAC,EAAGqlB,GAAO,CAAEnT,QAAS,GAAGlM,KAAakM,IAAWjU,SAAmC,QAAxBrX,EAAKy+B,EAAKpnB,gBAA6B,IAAPrX,EAAgBA,EAAKhF,KAAKqb,cAAcgB,WACrL,MAAO,CAAE+H,YAAW64B,eACxB,CACApvB,MAAAA,GACI,OAAOvsB,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,IAAKA,KAAK+7B,OACN,MAAM,IAAIgY,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwBiV,cAAe,+BAEnF,IAAK1d,KAAKme,QAAS,CACf,IAAIne,KAAKs9C,YAIL,MAAM,IAAIvJ,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwBiV,cAAe,qCAHzE1d,KAAK2I,QAAQ3I,KAAKs9C,YAKhC,CACA,MAAMp5B,QAAiBlkB,KAAK8uB,kBAC5B,OAAO5K,CACX,GACJ,CACApb,UAAAA,GACI,OAAOxH,EAAUtB,UAAM,OAAQ,GAAQ,YAGnC,IAFA,EAAI+zC,EAAOvvC,UAAU,6CACrB,EAAIuvC,EAAO3nC,WAAW,+BACjBpM,KAAKme,QACN,MAAM,IAAI41B,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwBkoB,qBAEpE,OAAO,IAAI9uB,SAASD,GAAYN,EAAUtB,UAAM,OAAQ,GAAQ,YAC5D,IAAIu9C,GAAS,EACb,MAAMC,EAAgBA,IAAMl8C,EAAUtB,UAAM,OAAQ,GAAQ,YACnDu9C,IACDA,GAAS,QACHv9C,KAAKy9C,0BACLz9C,KAAK09C,UACX97C,KACA,EAAImyC,EAAOvvC,UAAU,8CACrB,EAAIuvC,EAAO3nC,WAAW,oCAE9B,IACA,UACUpM,KAAK+7B,OAAOjzB,mBACZ00C,GACV,CACA,MAAOt7C,SACGs7C,GACV,CACJ,KACJ,GACJ,CACAC,iBAAAA,GACI,IAAIz4C,EAAI4J,EACR5O,KAAK+7B,OAAO4hB,OAAO/9B,2BACnB5f,KAAKqD,OAAOwB,KAAK,aAAc,CAAEuJ,MAA+B,QAAvBpJ,EAAKhF,KAAKme,eAA4B,IAAPnZ,OAAgB,EAASA,EAAGoJ,QACpGpO,KAAKqD,OAAOwB,KAAK,iBAAkB,CAAEuJ,MAA+B,QAAvBQ,EAAK5O,KAAKme,eAA4B,IAAPvP,OAAgB,EAASA,EAAGR,OAC5G,CACAwvC,yBAAAA,CAA0BttB,GACtB,MAAe,iBAAXA,EACO,YAES,oBAAXA,EACE,iBAES,oBAAXA,EACE,iBAGAA,CAEf,CACAutB,YAAAA,CAAalB,GACT,IAAI33C,EAAI4J,EACR,IAAIkvC,EAA4C,QAA1B94C,EAAK23C,EAAKn/B,kBAA+B,IAAPxY,OAAgB,EAASA,EAAG,SACpF,QAAsB1E,GAAlBw9C,EAA6B,CAC7B,IAAIC,EAAS/9C,KAAKg+C,kBAAkBF,QACbx9C,GAAnBq8C,EAAKn/B,YAA2B,UAAWm/B,EAAKn/B,iBAAwBld,GAAVy9C,IAC9DpB,EAAKn/B,WAAWsa,MAAQimB,EAEhC,CACA,IAAIE,EAA0D,QAAlCrvC,EAAK+tC,EAAKntB,0BAAuC,IAAP5gB,OAAgB,EAASA,EAAG,SAClG,QAA4BtO,GAAxB29C,EAAmC,CACnC,IAAIC,EAAel+C,KAAKg+C,kBAAkBC,QACX39C,GAA3Bq8C,EAAKntB,oBAAmC,UAAWmtB,EAAKntB,yBAAsClvB,GAAhB49C,IAC9EvB,EAAKntB,mBAAmBsI,MAAQomB,EAExC,CACA,OAAOvB,CACX,CACAqB,iBAAAA,CAAkBF,GACd,IAAI94C,EASJ,YARsB1E,GAAlBw9C,IACAA,EAAeh5B,OAA0C,QAAhC9f,EAAK84C,EAAeh5B,cAA2B,IAAP9f,OAAgB,EAASA,EAAG8R,KAAIwZ,GACtFtwB,KAAK49C,0BAA0BttB,UAEPhwB,GAA/Bw9C,EAAeK,eACfL,EAAeK,aAAen+C,KAAK49C,0BAA0BE,EAAeK,gBAG7EL,CACX,CACAM,gCAAAA,CAAiC9tB,GAU7B,OATIA,EAAQ/X,SAAS,aACjB+X,EAAUA,EAAQne,QAAQ,YAAa,iBAElCme,EAAQ/X,SAAS,kBACtB+X,EAAUA,EAAQne,QAAQ,iBAAkB,oBAEvCme,EAAQ/X,SAAS,oBACtB+X,EAAUA,EAAQne,QAAQ,iBAAkB,qBAEzCme,CACX,CACA+tB,mBAAAA,CAAoBlgC,GAChB,IAAInZ,EACJ,IAAIwY,EAA6F,QAA/ExY,EAAiB,OAAZmZ,QAAgC,IAAZA,OAAqB,EAASA,EAAQX,kBAA+B,IAAPxY,OAAgB,EAASA,EAAG,SACrI,QAAkB1E,GAAdkd,QAAgDld,GAArBkd,EAAWsH,OAAqB,CAC3DtH,EAAWsH,OAAStH,EAAWsH,OAAOhO,KAAImO,GAC/BjlB,KAAKo+C,iCAAiCn5B,KAEjDzH,EAAW0G,SAAW1G,EAAW0G,SAASpN,KAAKs9B,GACpCp0C,KAAKo+C,iCAAiChK,KAEjD,IAAIvvB,EAAQ,CAAC,EACb3lB,OAAOwrB,KAAKlN,EAAWqH,OAAS,CAAC,GAAGxU,SAAQ,CAAC4D,EAAK8C,KACjC/W,KAAKo+C,iCAAiCnqC,GACnD4Q,EAAM7kB,KAAKo+C,iCAAiCnqC,IAAQ/U,OAAOo/B,QAAoB,OAAZngB,QAAgC,IAAZA,OAAqB,EAASA,EAAQX,WAAW,SAASqH,QAAU,CAAC,GAAG9N,EAAM,IAEzKyG,EAAWqH,MAAQA,CACvB,EACA,EAAIkvB,EAAOvvC,UAAU,sBAAuB2Z,EAChD,CACAi8B,SAAAA,IACI,EAAIrG,EAAOvvC,UAAU,4CACrB,EAAIuvC,EAAO3nC,WAAW,6BACtB,IAAIkyC,EAAkBA,KAClB,IACIt+C,KAAK09C,UACL19C,KAAK+7B,OAAO4hB,OAAO/9B,0BACvB,CACA,MAAO1d,IACH,EAAI6xC,EAAOvvC,UAAU,2BAA4BtC,EACrD,GAEJ,IACI,QAAKlC,KAAKme,YAELne,KAAK+7B,OAAO4hB,OAAOppC,0BAA0BrV,OAAOwrB,KAAK1qB,KAAKme,QAAQX,eACvE8gC,KACO,GAGf,CACA,MAAOp8C,GAEH,OADAo8C,KACO,CACX,CACJ,CACAC,cAAAA,CAAe5B,EAAM6B,GACjB,OAAOl9C,EAAUtB,UAAM,OAAQ,GAAQ,aACnC,EAAI+zC,EAAOvvC,UAAU,gDACrB,MAAMi6C,EAAcv/C,OAAOkf,OAAOlf,OAAOkf,OAAO,CAAC,EAAGu+B,GAAO,CAAE6B,gBAG7D,OAFA,EAAIzK,EAAOvvC,UAAU,8CAA+C+W,KAAKC,UAAUmhC,KACnF,EAAI5I,EAAOvvC,UAAU,qDAAsD+W,KAAKC,UAAUgjC,UAC7Ex+C,KAAK2I,QAAQ81C,EAC9B,GACJ,CACA91C,OAAAA,CAAQg0C,GACJ,OAAOr7C,EAAUtB,UAAM,OAAQ,GAAQ,YAGnC,IAFA,EAAI+zC,EAAOvvC,UAAU,0CACrB,EAAIuvC,EAAO3nC,WAAW,4BACjBpM,KAAK+7B,OACN,MAAM,IAAIgY,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwBiV,cAAe,+BAEnF,GAAI1d,KAAKo6C,YACL,OAAOp6C,KAAKme,QAEhBw+B,EAAO38C,KAAK69C,aAAalB,IACzB,EAAI5I,EAAOvvC,UAAU,oCAAqC+W,KAAKC,UAAUmhC,SAC9Cr8C,IAAvBq8C,EAAKthC,gBACLshC,EAAKthC,cAAgB,CAAC,QAEkB/a,IAAxCq8C,EAAKthC,cAAcQ,mBACnB8gC,EAAKthC,cAAcQ,kBAAmB,EAAIk4B,EAAOzR,sBAErDtiC,KAAK0+C,cAAc/B,GACnB,KACI,EAAI5I,EAAOvvC,UAAU,kDAAkD+W,KAAKC,UAAUmhC,MAEtF,IAAIx+B,QAAgBne,KAAK+7B,OAAOpzB,QAAQg0C,GAExC,IADA,EAAI5I,EAAOvvC,UAAU,2CAA2C+W,KAAKC,UAAU2C,MAC3EA,EAAS,CAOT,GANAne,KAAKq+C,oBAAoBlgC,GACzBne,KAAKme,QAAUA,EACfne,KAAK+7B,OAAO5d,QAAUA,EACtBne,KAAKof,uBACL,EAAI20B,EAAOvvC,UAAU,gDAAiD+W,KAAKC,UAAUmhC,IACrF38C,KAAK2+C,YACDhC,EAAK6B,aAAe7B,EAAK6B,YAAYl3C,OAAS,EAAG,CACjD,IAAIs3C,EAAcjC,EAAK6B,YAAY,GAC/BK,EAAmB,GACD,qBAAXjwB,QAA0BA,QAAUA,OAAOkwB,gCAClD,EAAI/K,EAAOvvC,UAAU,uDACjBxE,KAAKme,QAAQI,cAAgBve,KAAKme,QAAQI,aAAajX,OAAS,IAChEu3C,EAAmB7+C,KAAKme,QAAQI,iBAIpC,EAAIw1B,EAAOvvC,UAAU,8DACjBxE,KAAKme,QAAQI,cAAgBve,KAAKme,QAAQI,aAAajX,OAAS,EAChEu3C,EAAmB7+C,KAAKme,QAAQI,aAGhCsgC,EAAiBpoC,MAAK,EAAI+lC,EAAWuC,iCAAiCH,MAG9E,EAAI7K,EAAOvvC,UAAU,+DAA+D+W,KAAKC,UAAUqjC,MACnGz4C,YAAW,KACPpG,KAAKqD,OAAOwB,KAAK,uBAAwBg6C,EAAiB,GAC3D,IACP,CACA,OAAO1gC,CACX,CACA,MACJ,CACA,MAAO5M,GAEH,MADA,EAAIwiC,EAAOvvC,UAAU,yCAA0C+W,KAAKC,UAAUjK,IACxEA,CACV,CACJ,GACJ,CACAytC,gBAAAA,GACI,OAAO19C,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,IAAI,EAAIy8C,EAAWwC,sBAAsBj/C,KAAKme,QAAQN,QAClD,OAAO7d,KAAK+7B,OAAOmjB,iBAGnB,MAAM,IAAInL,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwB0vB,qBAExE,GACJ,CACA/Y,mBAAAA,GACI,IAAIpa,EACJhF,KAAK+7B,OAAO3c,oBAA4C,QAAvBpa,EAAKhF,KAAKme,eAA4B,IAAPnZ,OAAgB,EAASA,EAAG6Y,OAChG,CACA7W,EAAAA,CAAGjC,EAAOuF,GACNtK,KAAKqD,OAAO2D,GAAGjC,EAAOuF,EAC1B,CACAhC,IAAAA,CAAKvD,EAAOuF,GACRtK,KAAKqD,OAAOiF,KAAKvD,EAAOuF,EAC5B,CACAf,cAAAA,CAAexE,EAAOuF,GAClBtK,KAAKqD,OAAOkG,eAAexE,EAAOuF,EACtC,CACAC,GAAAA,CAAIxF,EAAOuF,GACPtK,KAAKqD,OAAOkH,IAAIxF,EAAOuF,EAC3B,CACA60C,eAAAA,CAAgBl6B,EAAOm6B,IACnB,EAAIrL,EAAOvvC,UAAU,iDAErB,IAEI,IAAKxE,KAAKo6C,YACN,OACJ,MAAOh2B,EAAWkM,GAAWtwB,KAAKo9C,cAAcn4B,GAC1C8O,EAAW/zB,KAAKm9C,YAAY/4B,GAClC2P,EAASorB,gBAAgB7uB,EAAS8uB,EACtC,CACA,MAAO7tC,GAEH,IAAK,sBAAsBwtB,KAAKxtB,EAAM3H,SAClC,MAAM2H,CACd,CACJ,CACA8tC,YAAAA,GACI,OAAO/9C,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,IAAIs/C,QAAuBt/C,KAAKu/C,aAAa,kBAE7C,IADA,EAAIxL,EAAOvvC,UAAU86C,GACjBA,EAAgB,EAChB,EAAIvL,EAAOvvC,UAAU,4BACrB,IACI,IAAIgb,EAAc8/B,EAClBt/C,KAAKme,QAAUqB,EACfxf,KAAK+7B,OAAO5d,QAAUne,KAAKme,QAC3Bne,KAAKof,4BACCpf,KAAK+7B,OAAOxc,eAAeC,GACjCxf,KAAKqb,cAAgBmE,EAAYnE,cACjCrb,KAAK+7B,OAAO1gB,cAAgBrb,KAAKqb,eACjC,EAAI04B,EAAOvvC,UAAU,mCAAoCxE,KAAKme,SAC9Dne,KAAKw/C,kBACLx/C,KAAKy/C,yBACLr5C,YAAW,KACPpG,KAAKqD,OAAOwB,KAAK,YAAa,CAAEsZ,QAASne,KAAKme,SAAU,GACzD,IACP,CACA,MAAOjc,SACGlC,KAAK09C,WACX,EAAI3J,EAAOvvC,UAAU,sBAAsB+W,KAAKC,UAAUtZ,KAC9D,CACJ,CACJ,GACJ,CACA46C,UAAAA,GACI,OAAOx7C,EAAUtB,UAAM,OAAQ,GAAQ,aACnC,EAAI+zC,EAAOvvC,UAAU,6CACrB,EAAIuvC,EAAO3nC,WAAW,8BACtB,MAAM7H,EAAOrF,OAAOkf,OAAO,CAAEhb,IAAKwrB,OAAO0R,SAASC,SAAUjY,OAAQsG,OAAO0R,SAAShY,QAAUtoB,KAAK+8C,aAAazT,cAChHtpC,KAAK+7B,OAAS,IAAIigB,EAAS0D,WAAWn7C,EAAMvE,KAAKqD,QACjDrD,KAAK0a,kBAAkB1a,KAAK+8C,aAAarwC,iBACnC1M,KAAKq/C,cACf,GACJ,CACAG,eAAAA,GACI,IAAKx/C,KAAK+7B,OACN,MAAM,IAAIgY,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwBiV,cAAe,+BAEnF,IAAK1d,KAAKo6C,YACN,MAAM,IAAIrG,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwBiV,cAAe,kEAEnF,MAAMiiC,EAAoB,IACnB,IAAIjoC,IAAIxY,OAAOwrB,KAAK1qB,KAAKme,QAAQX,YAC/BlF,QAAQ8L,IAAgB,IAAIpf,EAAI4J,EAAI,OAA8G,QAArGA,EAAmD,QAA7C5J,EAAKhF,KAAKme,QAAQX,WAAW4G,UAA+B,IAAPpf,OAAgB,EAASA,EAAGkf,gBAA6B,IAAPtV,OAAgB,EAASA,EAAGtH,QAAU,CAAC,IACjMwP,KAAKsN,IAAc,EAAI63B,EAAa2D,mBAAmBx7B,OAEhEpkB,KAAKg9C,aAAe,CAAC,EACrB2C,EAAkBtvC,SAAS+T,IACvB,IAAKpkB,KAAKme,QACN,OACJ,MAAM0hC,EAAkB7/C,KAAKme,QAAQX,WAC/BsiC,EAAmBD,EAAgBz7B,GAEzC,QADA,EAAI2vB,EAAOvvC,UAAU,kBAAmBs7C,GAChC17B,GACJ,IAAK,SACD,MAAMu4B,EAAO,CACTv4B,UAAW07B,GAEf9/C,KAAKg9C,aAAa54B,GAAa,IAAI03B,EAAS/tB,eAAe4uB,EAAM38C,KAAK+7B,OAAQ/7B,KAAKqD,QACnF,MACJ,IAAK,SACD,MAAM08C,EAAQ,CACV37B,UAAW07B,GAEf,IAAIE,EAAiB,IAAI9D,EAAS7mC,QAAQ0qC,EAAO,SAAU//C,KAAK+7B,OAAQ/7B,KAAKqD,QAC7ErD,KAAKg9C,aAAa54B,GAAa47B,EAC/B,IAAIC,EAAgB,IAAI/D,EAAS7mC,QAAQ0qC,EAAO,QAAS//C,KAAK+7B,OAAQ/7B,KAAKqD,QAC3ErD,KAAKg9C,aAAa,SAAWiD,EAC7B,IAAIC,EAAc,IAAIhE,EAAS7mC,QAAQ0qC,EAAO,MAAO//C,KAAK+7B,OAAQ/7B,KAAKqD,QACvErD,KAAKg9C,aAAa,OAASkD,EAE3B,MACJ,IAAK,MACD,MAAMC,EAAU,CACZ/7B,UAAW07B,GAEf,IAAIM,EAAc,IAAI/D,EAAMhnC,QAAQ8qC,EAASngD,KAAK+7B,OAAQ/7B,KAAKqD,QAC/DrD,KAAKg9C,aAAa54B,GAAag8B,EAC/B,MACJ,IAAK,MACD,MAAMC,EAAU,CACZj8B,UAAW07B,GAEf,IAAIQ,EAAc,IAAIvE,EAAMxtB,YAAY8xB,EAASrgD,KAAK+7B,OAAQ/7B,KAAKqD,QACnEi9C,EAAY9uC,KAAO,MACnBxR,KAAKg9C,aAAa54B,GAAak8B,EAC/B,MACJ,IAAK,MACD,MAAMC,EAAU,CACZn8B,UAAW07B,GAEf,IAAIU,EAAc,IAAIrE,EAAM9mC,QAAQkrC,EAAS,MAAOvgD,KAAK+7B,OAAQ/7B,KAAKqD,QACtErD,KAAKg9C,aAAa,OAASwD,EAC3B,IAAIC,EAAa,IAAItE,EAAM9mC,QAAQkrC,EAAS,UAAWvgD,KAAK+7B,OAAQ/7B,KAAKqD,QACzErD,KAAKg9C,aAAa,WAAayD,EAC/B,MACJ,IAAK,QACD,IAAIC,EAAgB,IAAItE,EAAQ/mC,QAAQ,CACpC+O,UAAW07B,GACZ,QAAS9/C,KAAK+7B,OAAQ/7B,KAAKqD,QAC9BrD,KAAKg9C,aAAa54B,GAAas8B,EAC/B,IAAIC,EAAe,IAAIvE,EAAQ/mC,QAAQ,CACnC+O,UAAW07B,GACZ,WAAY9/C,KAAK+7B,OAAQ/7B,KAAKqD,QACjCrD,KAAKg9C,aAAa,YAAc2D,EAChC,MACJ,IAAK,SACD,IAAIC,EAAiB,IAAItE,EAASjnC,QAAQ,CACtC+O,UAAW07B,GACZ9/C,KAAK+7B,OAAQ/7B,KAAKqD,QACrBrD,KAAKg9C,aAAa54B,GAAaw8B,EAC/B,MACJ,IAAK,OACD,IAAIC,EAAe,IAAItE,EAAOlnC,QAAQ,CAClC+O,UAAW07B,GACZ9/C,KAAK+7B,OAAQ/7B,KAAKqD,QACrBrD,KAAKg9C,aAAa54B,GAAay8B,EAC/B,MACJ,IAAK,WACD,IAAIC,EAAmB,IAAIpE,EAAWrnC,QAAQ,CAC1C+O,UAAW07B,GACZ,WAAY9/C,KAAK+7B,OAAQ/7B,KAAKqD,QACjCrD,KAAKg9C,aAAa54B,GAAa08B,EAC/B,MACR,GAER,CACArB,sBAAAA,GACI,GAA2B,qBAAhBz/C,KAAK+7B,OACZ,MAAM,IAAIgY,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwBiV,cAAe,kCAEnF1d,KAAK+7B,OAAO4hB,OAAO1+B,uBAAsB,KACrCjf,KAAKy9C,oBACLz9C,KAAK09C,SAAS,IAElB19C,KAAKgH,GAAGxE,EAAYu+C,gBAAgBC,uBAAwBC,IACxDjhD,KAAKkhD,eAAeD,EAAa,IAErCjhD,KAAKgH,GAAGxE,EAAYu+C,gBAAgBI,mBAAoBC,IACpD,GAAIA,EAAY,CACZ,MAAMC,EAAeniD,OAAOwrB,KAAK02B,GAAY,GACzCphD,KAAKme,UACLne,KAAKme,QAAQX,WAAW6jC,GAAgBD,EAAWC,GAC/CrhD,KAAKme,UACLne,KAAKshD,QAAQ,iBAAkBthD,KAAKme,SACpCne,KAAKqD,OAAOwB,KAAK,iBAAkB7E,KAAKme,WAE5C,EAAI41B,EAAOvvC,UAAU,yDAA0D+W,KAAKC,UAAUxb,KAAKme,UAE3G,IAER,CACAg/B,WAAAA,CAAY/4B,GAGR,OAFA,EAAI2vB,EAAOvvC,UAAU,wBAAyBxE,KAAKg9C,eACnD,EAAIjJ,EAAOvvC,UAAU,oBAAqB4f,GACnCpkB,KAAKg9C,aAAa54B,EAC7B,CACAs6B,aAAAA,CAAch1C,GACV1J,KAAKs9C,YAAc5zC,EACnB,MAAM,WAAE8T,EAAU,cAAEnC,GAAkB3R,EAChCnF,EAAO,CACT+jB,OAAQsG,OAAO0R,SAAShY,OACxBllB,IAAKwrB,OAAO0R,SAASC,SACrB/uB,KAAMxR,KAAK+8C,aAAazT,aAAa93B,KACrC+3B,KAAMvpC,KAAK+8C,aAAazT,aAAaC,KACrC9P,YAAaz5B,KAAK+8C,aAAazT,aAAa7P,aAEhDz5B,KAAKqb,cAAgBnc,OAAOkf,OAAO,CAAEjC,SAAU5X,GAAQ8W,IACvD,EAAI04B,EAAOvvC,UAAU,iCAAkCxE,KAAKqb,eAC5Drb,KAAK+7B,OAAO1gB,cAAgBrb,KAAKqb,cACjCrb,KAAKshD,QAAQ,gBAAiBjmC,EAClC,CACA+hC,aAAAA,CAAcn4B,GACV,IAAIjgB,EACJ,IAAKof,EAAWkM,IAAsB,OAAVrL,QAA4B,IAAVA,OAAmB,EAASA,EAAM1C,MAAM,OAAS,CAAC,GAAI,IACpG,IAAKviB,KAAKme,UAAYne,KAAKme,QAAQX,aAAete,OAAOwrB,KAAK1qB,KAAKme,QAAQX,YAAYlW,OAEnF,OADA,EAAIysC,EAAOvvC,UAAU,mBAAoB4f,EAAWkM,GAC7C,CAAClM,EAAWkM,GAEvB,GAAIlM,EAAW,CACX,IAAKpkB,KAAKuhD,0BAA0Bn9B,GAChC,MAAM,IAAI2vB,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwBkoB,oBAAqB,cAAcvM,4EAEvG,GAAIkM,GAAWrL,EAAO,EAClB,EAAI8uB,EAAOvvC,UAAU,mCAAiC4f,EAAW7I,KAAKC,UAAUxb,KAAKme,QAAQX,aAC7F,MAAMgkC,EAA0D,QAA7Cx8C,EAAKhF,KAAKme,QAAQX,WAAW4G,UAA+B,IAAPpf,OAAgB,EAASA,EAAG8f,OAEpG,IADA,EAAIivB,EAAOvvC,UAAU,wBAAyB+W,KAAKC,UAAUgmC,GAAYv8B,GACrEu8B,IAAcA,EAAUjpC,SAAS0M,GACjC,MAAM,IAAI8uB,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwBkoB,oBAAqB,oCAAoC1L,KAEjI,CACJ,CACA,GAAIb,GAAakM,EAEb,OADA,EAAIyjB,EAAOvvC,UAAU,mBAAoB4f,EAAWkM,GAC7C,CAAClM,EAAWkM,GAEvB,IAAImxB,GAAmB,EAAIxF,EAAa2D,mBAAmB1gD,OAAOwrB,KAAK1qB,KAAKme,QAAQX,YAAY,IAChG,MAAM2gC,EAAen+C,KAAKg9C,aAAayE,GAAkBC,kBAEzD,OADA,EAAI3N,EAAOvvC,UAAU,qBAAsB25C,GACpC,CAACsD,EAAkBtD,EAC9B,CACAoD,yBAAAA,CAA0BI,GACtB,IAAI38C,EAAI4J,EACR,GAAI1P,OAAOwrB,MAA8B,QAAvB1lB,EAAKhF,KAAKme,eAA4B,IAAPnZ,OAAgB,EAASA,EAAGwY,aAAe,CAAC,GACxF1G,KAAK7C,IAAQ,EAAIgoC,EAAa2D,mBAAmB3rC,KACjDsE,SAASopC,GACV,OAAO,EAEX,IAAIJ,GAA4B,EAShC,OARAriD,OAAOo/B,QAAgC,QAAvB1vB,EAAK5O,KAAKme,eAA4B,IAAPvP,OAAgB,EAASA,EAAG4O,aAAe,CAAC,GACtFnN,SAAQ+T,IACTA,EAAUU,OAAOzU,SAAQ4U,IACjBA,EAAM1C,MAAM,KAAK,IAAMo/B,IACvBJ,GAA4B,EAChC,GACF,IAECA,CACX,CACA5G,4BAAAA,CAA6Bv2B,GACzB,OAAOpkB,KAAKm9C,YAAY/4B,GAAW0K,iBACvC,CACA8yB,gCAAAA,CAAiCx9B,GAC7B,OAAOpkB,KAAKm9C,YAAY/4B,GAAWs9B,iBACvC,CACA5yB,eAAAA,GACI,OAAOxtB,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,MAAOokB,GAAapkB,KAAKo9C,gBACzB,aAAap9C,KAAKm9C,YAAY/4B,GAAW0K,iBAC7C,GACJ,CACAoyB,cAAAA,CAAeW,GACX,IAAI78C,EACJ,KAA8B,QAAvBA,EAAKhF,KAAKme,eAA4B,IAAPnZ,OAAgB,EAASA,EAAGwY,YAC9D,OACJ,MAAO4G,EAAWkM,GAAWtwB,KAAKo9C,cAAcyE,GAC3CvxB,IAEDtwB,KAAKme,QAAQX,WAAW4G,KACxBpkB,KAAKme,QAAQX,WAAW4G,GAAW+5B,aAAe7tB,EAClDtwB,KAAKshD,QAAQ,iBAAkBthD,KAAKme,UAExCne,KAAKqD,OAAOwB,KAAK,eAAgByrB,GACrC,CACAquB,SAAAA,GACI3+C,KAAKw/C,kBACDx/C,KAAKme,UACLne,KAAKshD,QAAQ,iBAAkBthD,KAAKme,SACpC4R,QAAQjtB,IAAI,iCAAkC4B,KAAKC,QAEvD3E,KAAKqD,OAAOwB,KAAK,UAAW,CAAEsZ,QAASne,KAAKme,UAC5Cne,KAAKy/C,wBACT,CACA/B,OAAAA,GACI,OAAOp8C,EAAUtB,UAAM,OAAQ,GAAQ,YACnCA,KAAKme,aAAU7d,EACfN,KAAK+7B,OAAO5d,aAAU7d,EACtBN,KAAKof,sBACLpf,KAAK8hD,uBAAoBxhD,EACzBN,KAAKshD,QAAQ,0BAAsBhhD,GACnCN,KAAKshD,QAAQ,yBAAqBhhD,GAClCN,KAAKshD,QAAQ,sBAAkBhhD,EACnC,GACJ,CACAghD,OAAAA,CAAQrtC,EAAK1P,GAET,OADA,EAAIwvC,EAAOvvC,UAAU,iCAAkCyP,EAAK1P,GACrDvE,KAAK+7B,OAAO4hB,OAAO3pC,mBAAmBC,EAAK1P,EACtD,CACAg7C,YAAAA,CAAatrC,GACT,OAAO3S,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,OAAOA,KAAK+7B,OAAO4hB,OAAOvpC,kBAAkBH,EAChD,GACJ,CACA8tC,gBAAAA,CAAiBte,EAAMxe,GACnB,IACI,MAAM,UAAEb,EAAS,aAAE64B,GAAiBj9C,KAAKk9C,6BAA6BzZ,EAAMxe,GAC5E,OAAOjlB,KAAKm9C,YAAY/4B,GAAW29B,iBAAiB9E,EACxD,CACA,MAAO/6C,GACH,OAAO,CACX,CACJ,CACA2a,UAAAA,CAAWgC,EAAmBnS,GAC1B1M,KAAK+7B,OAAOlf,WAAWgC,EAAmBnS,EAC9C,CACAgO,iBAAAA,CAAkBP,GACdna,KAAK+7B,OAAOrhB,kBAAkBP,GAC9Bna,KAAK+7B,OAAOvhB,0BAAyB2D,KACjC,EAAI41B,EAAOvvC,UAAU,iCAAkCxE,KAAKqD,OAAO2+C,cAAc,kBAAmBzmC,KAAKC,UAAU2C,IACnH,IACQA,GAAWne,KAAKqD,OAAO2+C,cAAc,oBACrChiD,KAAKq+C,oBAAoBlgC,GACzBne,KAAKme,QAAUA,EACfne,KAAK+7B,OAAO5d,QAAUA,EAClBne,KAAKme,UACLne,KAAKshD,QAAQ,iBAAkBthD,KAAKme,SACpC4R,QAAQjtB,IAAI,iCAAkC4B,KAAKC,QAEvD3E,KAAKof,sBACLpf,KAAKw/C,kBACLx/C,KAAKqD,OAAOwB,KAAK,iBAAkB7E,KAAKme,SAEhD,CACA,MAAO5M,IACH,EAAIwiC,EAAOvvC,UAAU,kCAAmC+W,KAAKC,UAAUjK,GAC3E,IAER,EAEJnS,EAAQy8C,qBAAuBA,EAC/Bz8C,EAAAA,WAAkBy8C,C,oCC5qBlB,IAAI97C,EAAmBC,MAAQA,KAAKD,kBAAqBb,OAAOe,OAAU,SAASC,EAAGC,EAAGC,EAAGC,QAC7EC,IAAPD,IAAkBA,EAAKD,GAC3B,IAAIG,EAAOrB,OAAOsB,yBAAyBL,EAAGC,GACzCG,KAAS,QAASA,GAAQJ,EAAEM,WAAaF,EAAKG,UAAYH,EAAKI,gBAClEJ,EAAO,CAAEK,YAAY,EAAMC,IAAK,WAAa,OAAOV,EAAEC,EAAI,IAE5DlB,OAAOC,eAAee,EAAGG,EAAIE,EACjC,EAAM,SAASL,EAAGC,EAAGC,EAAGC,QACTC,IAAPD,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,EACd,GACI22B,EAAgB/2B,MAAQA,KAAK+2B,cAAiB,SAAS52B,EAAGf,GAC1D,IAAK,IAAI43B,KAAK72B,EAAa,YAAN62B,GAAoB93B,OAAOiC,UAAUC,eAAeC,KAAKjC,EAAS43B,IAAIj3B,EAAgBX,EAASe,EAAG62B,EAC3H,EACA93B,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ25C,oBAAsB35C,EAAQy7C,gBAAkBz7C,EAAQ26C,eAAiB36C,EAAQw3C,kBAAoBx3C,EAAQy0C,eAAiBz0C,EAAQy8C,0BAAuB,EACrK9kB,EAAaj3B,EAAQ,OAAqBV,GAC1C23B,EAAaj3B,EAAQ,OAAeV,GACpC,IAAI6iD,EAAyBniD,EAAQ,OACrCZ,OAAOC,eAAeC,EAAS,uBAAwB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOohD,EAAuBpG,oBAAsB,IAClJ,IAAIqG,EAAmBpiD,EAAQ,OAC/BZ,OAAOC,eAAeC,EAAS,iBAAkB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOqhD,EAAiBrO,cAAgB,IAChI,IAAIsO,EAAsBriD,EAAQ,OAClCZ,OAAOC,eAAeC,EAAS,oBAAqB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOshD,EAAoBvL,iBAAmB,IACzI,IAAIwL,EAAmBtiD,EAAQ,OAC/BZ,OAAOC,eAAeC,EAAS,iBAAkB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOuhD,EAAiBrI,cAAgB,IAChI,IAAIsI,EAAoBviD,EAAQ,OAChCZ,OAAOC,eAAeC,EAAS,kBAAmB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOwhD,EAAkBxH,eAAiB,IACnI,IAAIyH,EAAwBxiD,EAAQ,MACpCZ,OAAOC,eAAeC,EAAS,sBAAuB,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAOyhD,EAAsBvJ,mBAAqB,IAC/IhiB,EAAaj3B,EAAQ,OAAqBV,E,qCC9B1C,IAAIW,EAAmBC,MAAQA,KAAKD,kBAAqBb,OAAOe,OAAU,SAASC,EAAGC,EAAGC,EAAGC,QAC7EC,IAAPD,IAAkBA,EAAKD,GAC3B,IAAIG,EAAOrB,OAAOsB,yBAAyBL,EAAGC,GACzCG,KAAS,QAASA,GAAQJ,EAAEM,WAAaF,EAAKG,UAAYH,EAAKI,gBAClEJ,EAAO,CAAEK,YAAY,EAAMC,IAAK,WAAa,OAAOV,EAAEC,EAAI,IAE5DlB,OAAOC,eAAee,EAAGG,EAAIE,EACjC,EAAM,SAASL,EAAGC,EAAGC,EAAGC,QACTC,IAAPD,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,EACd,GACI22B,EAAgB/2B,MAAQA,KAAK+2B,cAAiB,SAAS52B,EAAGf,GAC1D,IAAK,IAAI43B,KAAK72B,EAAa,YAAN62B,GAAoB93B,OAAOiC,UAAUC,eAAeC,KAAKjC,EAAS43B,IAAIj3B,EAAgBX,EAASe,EAAG62B,EAC3H,EACA93B,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD03B,EAAaj3B,EAAQ,OAAYV,E,qCChBrBU,EAAA,OAACA,EAAA,OACb,IAAIwB,EAAatB,MAAQA,KAAKsB,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMtC,GAAS,OAAOA,aAAiBoC,EAAIpC,EAAQ,IAAIoC,GAAE,SAAUG,GAAWA,EAAQvC,EAAQ,GAAI,CAC3G,OAAO,IAAKoC,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU1C,GAAS,IAAM2C,EAAKN,EAAUO,KAAK5C,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAS9C,GAAS,IAAM2C,EAAKN,EAAU,SAASrC,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKd,GAAUA,EAAOkB,KAAOR,EAAQV,EAAO7B,OAASsC,EAAMT,EAAO7B,OAAOgD,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACA/C,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQsgD,gBAAa,EACrB,MAAM3L,EAASj0C,EAAQ,OACjBm8C,EAAen8C,EAAQ,OACvByiD,EAAuBziD,EAAQ,OAC/B0C,EAAc1C,EAAQ,OAC5B,MAAM4/C,UAAmB3L,EAAOnY,YAC5Bz4B,WAAAA,CAAYq/C,EAAUn/C,GAClB0oB,MAAMy2B,GAENxiD,KAAK2I,QAAWe,GAAWpI,EAAUtB,UAAM,OAAQ,GAAQ,YACvD,OAAO,IAAI6B,SAAQ,CAACD,EAASE,IAAWR,EAAUtB,UAAM,OAAQ,GAAQ,YACpE,IACI,IAAI8c,EAAiB,IACrB,EAAIi3B,EAAOvvC,UAAU,4BAA6B+W,KAAKC,UAAU9R,IACjE,IAAI+4C,EAAqB,CACrBjxC,KAAM,kBACN8d,oBAAoB,EAAI2sB,EAAayG,mCAAmCh5C,EAAO8T,YAC/EgS,oBAAoB,EAAIysB,EAAayG,mCAAmCh5C,EAAO8lB,qBAEnFxvB,KAAK29C,OAAOt+B,8BAA6B,MACrC,EAAI00B,EAAOvvC,UAAU,iCACrBxE,KAAKqD,OAAOwB,KAAKrC,EAAYu+C,gBAAgB4B,mBAAmB,IAEhEj5C,EAAO80C,cACPiE,EAAmBnkC,4BAA8B,EAAIikC,EAAqBK,sCAAsCl5C,EAAO80C,YAAaiE,EAAmBnzB,qBAE3JxS,EAAerG,KAAKgsC,IACpB,EAAI1O,EAAOvvC,UAAU,oCAAqC+W,KAAKC,UAAUsB,IACzE9c,KAAK29C,OAAOxiC,iBAAiB2B,EAAgB5d,OAAOkf,OAAO,CAAEjC,SAAUnc,KAAK6iD,UAAYn5C,EAAO2R,gBAAiB1K,IACxGA,GAAQA,EAAKmM,kBACb,EAAIi3B,EAAOvvC,UAAU,wCAAyCmM,EAAKmM,iBACnE,EAAIi3B,EAAOvvC,UAAU,wBAAwB,EAAIuvC,EAAOt3B,YAAY9L,EAAKmM,eAAgB9c,KAAKqb,cAAcqB,UAC5G1c,KAAKqD,OAAOwB,KAAK,eAAe,EAAIkvC,EAAOt3B,YAAY9L,EAAKmM,eAAgB9c,KAAKqb,cAAcqB,UAC/F1c,KAAKqD,OAAOwB,KAAK,qBAAqB,EAAIkvC,EAAOrR,2BAA2B/xB,EAAKmM,eAAe1O,MAAOuC,EAAKmM,eAAejM,YAC3H,EAAIkjC,EAAOvvC,UAAU,sCAAsC+W,KAAKC,UAAU7K,MAC1E3Q,KAAKqD,OAAOwB,KAAK,4BAA6B8L,GAClD,IACDtO,MAAM8b,GAAY7c,EAAUtB,UAAM,OAAQ,GAAQ,aACjD,EAAIi8C,EAAa6G,qBAAqB3kC,EAASzU,EAAO8T,WAAY9T,EAAO8lB,mBAAoBxvB,KAAKqb,gBAClG,EAAI04B,EAAOvvC,UAAU,gCAAgC+W,KAAKC,UAAU2C,MAChEzU,EAAO80C,oBACD,EAAI+D,EAAqBQ,8BAA8B5kC,EAASzU,EAAO80C,cAEjF58C,EAAQuc,EACZ,MAAIrM,OAAO5P,KACP,EAAI6xC,EAAOvvC,UAAU,8BAA8B+W,KAAKC,UAAUtZ,MAClElC,KAAKqD,OAAOwB,KAAK,gBAAiB3C,GAClCJ,EAAOI,EAAE,GAEjB,CACA,MAAOqP,IACH,EAAIwiC,EAAOvvC,UAAU,yBAAyB+W,KAAKC,UAAUjK,MAC7DzP,EAAOyP,EACX,CACJ,KACJ,IACAvR,KAAKuf,eAAkBlE,GAAkB/Z,EAAUtB,UAAM,OAAQ,GAAQ,YACrE,OAAO,IAAI6B,SAAQ,CAACD,EAASE,KACzB9B,KAAK29C,OAAOp+B,eAAelE,GAAgB8C,IACnCA,EACAvc,EAAQuc,GAGRrc,GACJ,GACF,GAEV,IACA9B,KAAK8B,OAAU4H,GAAWpI,EAAUtB,UAAM,OAAQ,GAAQ,YAC1D,IACAA,KAAKob,QAAW1R,GAAWpI,EAAUtB,UAAM,OAAQ,GAAQ,YACvD,OAAO,IAAI6B,SAAQ,CAACD,EAASE,IAAWR,EAAUtB,UAAM,OAAQ,GAAQ,YACpE,IAAIgF,EAAI4J,GACR,EAAImlC,EAAOvvC,UAAU,+BAA8D,QAA7BQ,EAAKhF,KAAKqb,qBAAkC,IAAPrW,OAAgB,EAASA,EAAG6W,kBAAkB,EAAIk4B,EAAOtpC,mBAAmBf,IACvK,KAEuC,QAA7BkF,EAAK5O,KAAKqb,qBAAkC,IAAPzM,OAAgB,EAASA,EAAGiN,oBAAqB,EAAIk4B,EAAO32B,UACnGpd,KAAKgjD,sBAEHhjD,KAAK29C,OAAOx3C,KAAKuD,EAAQ,CAC3B9H,QAAU0b,IAGN,UAFOA,EAAS3B,WAChB,EAAIo4B,EAAOvvC,UAAU,8BAA8B,EAAIuvC,EAAOtpC,mBAAmB6S,IAC5E,UAAWA,GAAaA,EAAS/L,MAAO,CACzC,IAAIA,EAAQ+L,EAAS/L,MACrBzP,EAAO,IAAIiyC,EAAOvrC,gBAAgB8U,EAAS/L,MAAMrM,KAAMoY,EAASrL,OAAS,IAAMV,EAAM3H,SACzF,MAEIhI,EAAQ0b,EACZ,EAEJ4S,MAAOA,KACH,IAAIlrB,IACC,EAAI+uC,EAAO32B,WAA2C,QAA7BpY,EAAKhF,KAAKqb,qBAAkC,IAAPrW,OAAgB,EAASA,EAAG6W,mBAC3F7b,KAAKgjD,eACT,GAGZ,CACA,MAAO9gD,IACH,EAAI6xC,EAAOvvC,UAAU,yBAA0BtC,GAC/CJ,EAAOI,EACX,CACJ,KACJ,IACAlC,KAAK8I,WAAa,IAAMxH,EAAUtB,UAAM,OAAQ,GAAQ,YACpD,OAAO,IAAI6B,SAAQ,CAACD,EAASE,KACzB9B,KAAK29C,OAAOx3C,KAAK,CACb8L,OAAQ,cACT,CACCie,MAAOA,KACHtuB,GAAS,GAEd,OAAUkQ,OAAOP,IAChBwe,QAAQjtB,IAAI,gBAAgByY,KAAKC,UAAUjK,MAC3CzP,EAAOyP,EAAM,GACf,GAEV,IACAvR,KAAK29C,OAAS,IAAI5J,EAAOl6B,OAAO2oC,EAAShxC,MACzCxR,KAAKqD,OAASA,EACdrD,KAAK6iD,SAAWL,CACpB,CACAhoC,wBAAAA,CAAyBC,GACrBza,KAAK29C,OAAOnjC,yBAAyBC,EACzC,CACAuoC,aAAAA,IAEI,EAAIjP,EAAOvvC,UAAU,kCACrBxE,KAAK29C,OAAO9gC,WAAW,CAAEF,aAAc3c,KAAKqb,cAAcsB,cAQ9D,CACAuiC,cAAAA,GACI,OAAO59C,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,OAAO,IAAI6B,SAAQ,CAACD,EAASE,KACzB9B,KAAK29C,OAAOx3C,KAAK,CACb8L,OAAQ,sBACT,CACCrQ,QAAU0b,IAGN,UAFOA,EAAS3B,WAChB,EAAIo4B,EAAOvvC,UAAU,oCAAqC+W,KAAKC,UAAU8B,IACpE,UAAWA,GAAaA,EAAS/L,MAAO,CACzC,IAAIA,EAAQ+L,EAAS/L,MACrBzP,EAAO,IAAIiyC,EAAOvrC,gBAAgB8U,EAAS/L,MAAMrM,KAAMoY,EAASrL,OAAS,IAAMV,EAAM3H,SACzF,KACK,CACD,IAAIq5C,EAAgB3lC,EAASpc,OAC7BU,GAAQ,EAAI2gD,EAAqBW,uBAAuBD,GAC5D,KAELnxC,OAAOP,IACNwe,QAAQjtB,IAAI,gBAAgByY,KAAKC,UAAUjK,MAC3CzP,EAAOyP,EAAM,GACf,GAEV,GACJ,CACAmJ,iBAAAA,CAAkBP,GACdna,KAAK29C,OAAOjjC,kBAAkBP,EAClC,CACA0C,UAAAA,CAAWgC,EAAmBnS,GAC1B1M,KAAK29C,OAAO9gC,WAAWgC,EAAmBnS,EAC9C,CACA0S,mBAAAA,CAAoBvB,GAChB7d,KAAK29C,OAAOv+B,oBAAoBvB,EACpC,EAEJze,EAAQsgD,WAAaA,C,qCCxLT5/C,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACb,IAAIwB,EAAatB,MAAQA,KAAKsB,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMtC,GAAS,OAAOA,aAAiBoC,EAAIpC,EAAQ,IAAIoC,GAAE,SAAUG,GAAWA,EAAQvC,EAAQ,GAAI,CAC3G,OAAO,IAAKoC,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU1C,GAAS,IAAM2C,EAAKN,EAAUO,KAAK5C,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAS9C,GAAS,IAAM2C,EAAKN,EAAU,SAASrC,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKd,GAAUA,EAAOkB,KAAOR,EAAQV,EAAO7B,OAASsC,EAAMT,EAAO7B,OAAOgD,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACIuS,EAAmBxU,MAAQA,KAAKwU,iBAAoB,SAAUvT,GAC9D,OAAQA,GAAOA,EAAIR,WAAcQ,EAAM,CAAE,QAAWA,EACxD,EACA/B,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ+jD,2BAAwB,EAChC/jD,EAAQ2/C,gCAAkCA,EAC1C3/C,EAAQgkD,8BAAgCA,EACxChkD,EAAQ2jD,6BAA+BA,EACvC3jD,EAAQwjD,qCAAuCA,EAC/CxjD,EAAQ8jD,sBAAwBA,EAChC,MAAMnP,EAASj0C,EAAQ,OACjB64B,EAASnkB,EAAgB1U,EAAQ,QACjC28C,EAAa38C,EAAQ,OAC3B,SAAS+5C,EAAQx6C,GACb,MAAwB,kBAAVA,GAAgC,OAAVA,GAAkBmY,MAAMqiC,QAAQx6C,EACxE,CACA,SAASgkD,EAAShkD,GACd,MAAwB,kBAAVA,GAAgC,OAAVA,IAAmBmY,MAAMqiC,QAAQx6C,EACzE,CAeA,SAAS0/C,EAAgCnE,GACrC,IAAI0I,EAAkB,IAAIvP,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwB0vB,sBAChF,IAAIorB,EAAY,CACZtxC,OAAQ2oC,EAAc3oC,OACtBqe,QAASsqB,EAActqB,QACvB/e,MAAO,CACHrM,KAAMo+C,EAAgBp+C,KACtB0E,QAAS05C,EAAgB15C,UAGjC,OAAO25C,CACX,CACA,SAASH,EAA8BxI,EAAez8B,GAClD,OAAO7c,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,IAAIgF,EAAI4J,EAAIC,EAAIC,EAAIC,EACpB,KACI,EAAIglC,EAAOvvC,UAAU,+CAAgD+W,KAAKC,UAAUo/B,IACpF,IAAI4I,EAAiB,CAAC,EACtB,GAA6B,uBAAzB5I,EAAc3oC,OAAiC,CAC/C,IAAIwxC,EAAmE,QAArDz+C,EAAKmZ,EAAQX,WAAWu2B,EAAO/lB,wBAAqC,IAAPhpB,OAAgB,EAASA,EAAGkf,SAAS5L,QAAO,SAAUorC,GACjI,OAAOA,EAAS/wC,WAAWioC,EAActqB,QAC7C,IAAG,GACH,MAAMqzB,GAAa,EAAIlH,EAAWmH,sBAAsBH,GACxD,GAAI7I,EAAclxC,QAAUi6C,GAAc,YAAa/I,EAAclxC,OAAQ,CACzE,IAAIm6C,EAAcjJ,EAAclxC,OAAOE,QACvC,GAA+E,eAAhD,QAAzBgF,EAAKuP,EAAQN,cAA2B,IAAPjP,OAAgB,EAASA,EAAGsL,SAA0B,CACzF,IAAI4pC,GAAgB,IAAIjuB,aAAcC,OAAO+tB,GAC7CA,EAAclrB,EAAOtjB,QAAQygB,OAAOguB,EACxC,CAUA,OATAlJ,EAAclxC,OAAS,CACnBE,QAASi6C,EACT,OAAUF,GAEdH,EAAiB,CACb71C,UAAWg2C,IAEf,EAAI5P,EAAOvvC,UAAU,0CAA2C+W,KAAKC,UAAUioC,GAAaE,IAC5F,EAAI5P,EAAOvvC,UAAU,qCAAsC+W,KAAKC,UAAUgoC,IACnEA,CACX,CAEI,MAAM,IAAIzP,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwB0vB,qBAExE,CACK,GAA6B,oBAAzByiB,EAAc3oC,QAAyD,4BAAzB2oC,EAAc3oC,OAAsC,CACvG,GAAI,YAAa2oC,EAAclxC,QAAUkxC,EAAclxC,OAAOE,QAAS,CACnE,IAAIm6C,EAAaxoC,KAAKuV,MAAMvV,KAAKC,UAAUo/B,EAAclxC,OAAOE,UAC5Do6C,EAAiB9kD,OAAOo/B,OAAOylB,GAC/BlS,EAAa,IAAIrU,WAAWwmB,GAC5BzZ,EAAU,IAAI1T,YAAY,QAC1BotB,EAAanU,KAAKvF,EAAQzT,OAAO+a,IAkBrC,OAjBA+I,EAAclxC,OAAS,CACnBE,QAASs6C,KAAKD,IAElBl0B,QAAQjtB,IAAI,gDAAiDyY,KAAKC,UAAUo/B,EAAclxC,QAASu6C,GACtE,oBAAzBrJ,EAAc3oC,OACduxC,EAAiB,CACb,aAAgBS,EAChB,UAAa,IAGa,4BAAzBrJ,EAAc3oC,SACnBuxC,EAAiB,CACb,MAASS,EACT,UAAa,MAGrB,EAAIlQ,EAAOvvC,UAAU,0DAA2D+W,KAAKC,UAAUgoC,IACxFA,CACX,CAEI,MAAM,IAAIzP,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwB0vB,qBAExE,CACK,GAA6B,oBAAzByiB,EAAc3oC,OAA8B,CACjD,IAAIkyC,EAAoE,QAArDt1C,EAAKsP,EAAQX,WAAWu2B,EAAO1S,wBAAqC,IAAPxyB,OAAgB,EAASA,EAAGqV,SAAS5L,QAAO,SAAU8rC,GAClI,OAAOA,EAASzxC,WAAWioC,EAActqB,QAC7C,IACI+zB,EAAaF,EAAY,GAC7B,MAAMG,GAAa,EAAI7H,EAAWmH,sBAAsBS,GAExD,IADA,EAAItQ,EAAOvvC,UAAU,uCAAwC+W,KAAKC,UAAU6oC,GAAaC,GACrFA,EAAY,CACZ,KAAI,YAAa1J,EAAclxC,UAAUkxC,EAAclxC,OAAOE,SAAmD,kBAAjCgxC,EAAclxC,OAAOE,QAOjG,MAAM,IAAImqC,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwB0vB,sBAIpE,OAVIyiB,EAAclxC,OAAS,CACnB8gB,KAAM85B,EACNhQ,QAASsG,EAAclxC,OAAOE,SAMtCgxC,EAAclxC,OAAO,QAAU46C,GAC/B,EAAIvQ,EAAOvvC,UAAU,kCAAmC+W,KAAKC,UAAUgoC,IAChEA,CACX,CAEI,MAAM,IAAIzP,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwB0vB,qBAExE,CACK,GAA6B,sBAAzByiB,EAAc3oC,OAAgC,CACnD,IAAIsyC,EAAY3J,EAAclxC,OAC1B86C,EAAuE,QAAvD11C,EAAKqP,EAAQX,WAAWu2B,EAAO7lB,0BAAuC,IAAPpf,OAAgB,EAASA,EAAGoV,SAAS5L,QAAO,SAAUmsC,GACrI,OAAOA,EAAS9xC,WAAWioC,EAActqB,QAC7C,IAAG,GACCo0B,GAAe,EAAIjI,EAAWmH,sBAAsBY,GACxD,GAAID,GAAaG,EAAc,CAC3B,IAAIriC,EAAS,QACTzY,EAAU,GAAImsB,EAAQ,GAC1B,IAAI4uB,EAActiC,EAClB,IAAIuiC,EAAch2B,OAAO0R,SAASxB,SAAW,KAAOlQ,OAAO0R,SAASC,SAChE,YAAagkB,GAAaA,EAAUjgC,UACpCqgC,GAAe,cAAgBD,GAE/B,gBAAiBH,GAAaA,EAAUK,cACxCD,GAAe,kBAAoBC,GAEvC,IAAIC,EAAe,EACf,YAAaN,GAAaA,EAAUj0B,UACX,iBAArBi0B,EAAUj0B,QACVu0B,EAAe,EAEW,oBAArBN,EAAUj0B,UACfu0B,EAAe,GAEnBF,GAAe,cAAgBE,GAE/B,YAAaN,IACbI,GAAe,cAAgBJ,EAAU36C,QACzCA,EAAU26C,EAAU36C,SAEpB,UAAW26C,IACXI,GAAe,YAAcJ,EAAUxuB,MACvCA,EAAQwuB,EAAUxuB,OAEtB,MAAM8Z,GAAY,IAAIha,aAAcC,OAAO6uB,GACrCzZ,EAAM1zB,MAAMgT,KAAKqlB,GAClB/4B,KAAIo6B,GAAQA,EAAKtsC,SAAS,IAAI+zC,SAAS,EAAG,OAC1CvgC,KAAK,IAgBV,OAfAwiC,EAAclxC,OAAS,CACnB,QAAWwhC,IAEf,EAAI6I,EAAOvvC,UAAU,mCAAoC+W,KAAKC,UAAUo/B,IACxE4I,EAAiB,CACbl/B,QAASogC,EACTE,YAAaA,EACbt0B,QAASu0B,EACTF,YAAaA,EACb/6C,QAASA,EACTmsB,MAAOA,EACP1T,OAAQA,EACRM,UAAW,KAEf,EAAIoxB,EAAOvvC,UAAU,oCAAqC+W,KAAKC,UAAUgoC,IAClEA,CACX,CAEI,MAAM,IAAIzP,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwB0vB,qBAExE,CACK,GAA6B,yBAAzByiB,EAAc3oC,OAAmC,CACtD,IAAI6yC,EAA2H,QAA1G/1C,EAAiB,OAAZoP,QAAgC,IAAZA,OAAqB,EAASA,EAAQX,WAAWu2B,EAAO3S,2BAAwC,IAAPryB,OAAgB,EAASA,EAAGmV,SAAS5L,QAAO,SAAUysC,GACzL,OAAOA,EAAepyC,WAAWioC,EAActqB,QACnD,IAAG,GACH,MAAM00B,GAAgB,EAAIvI,EAAWmH,sBAAsBkB,GAC3D,IAAIG,EAAarK,EAAclxC,OAAO,WACtC,MAAMw7C,EAAsBpV,KAAKmV,GAGjC,IAFA,EAAIlR,EAAOvvC,UAAU,4CAA6C+W,KAAKC,UAAUspC,GAAgBE,IACjG,EAAIjR,EAAOvvC,UAAU,4CAA6C0gD,GAC9DD,GAAcD,EAAe,CAC7B,MAAM5N,EAAU,CACZC,SAAU,GACVC,eAAgB,IAChBC,SAAU,IACVC,IAAK,CACDC,IAAK,IACLnB,OAAQ,IAEZoB,KAAM,CAAC,CACC,KAAQ,mBACR,MAAS,CACL,OAAUsN,EACV,KAAQE,KAGpBvN,KAAM,IAQV,OANAiD,EAAclxC,OAAS,CACnB,OAAUs7C,EACV,SAAYpK,EAActqB,QAAQ/N,MAAM,KAAK,GAC7C,KAAQ60B,IAEZ,EAAIrD,EAAOvvC,UAAU,uCAAwC+W,KAAKC,UAAUgoC,IACrEA,CACX,CAEI,MAAM,IAAIzP,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwB0vB,qBAExE,EACA,EAAI4b,EAAOvvC,UAAU,sCAAuC+W,KAAKC,UAAUo/B,GAC/E,CACA,MAAOrpC,GACH,MAAMA,CACV,CACJ,GACJ,CACA,SAASwxC,EAA6B5kC,EAASy8B,GAC3C,OAAOt5C,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,IAAIgF,EACJ,IACI,GAAImZ,EAAQI,aAAc,EACtB,EAAIw1B,EAAOvvC,UAAU,6CAA8C+W,KAAKC,UAAU2C,EAAQI,gBAC1F,EAAIw1B,EAAOvvC,UAAU,mDAAoD+W,KAAKC,UAAU2C,EAAQX,aAChG,IAAK,MAAM2nC,KAAchnC,EAAQI,aAE7B,IADA,EAAIw1B,EAAOvvC,UAAU,2CAA4C+W,KAAKC,UAAU2pC,IAC5E,WAAYA,EACZ,GAA0B,uBAAtBA,EAAWlzC,OAAiC,CAC5C,IAAImzC,EAAoBD,EAAWjkD,QACnC,EAAI6yC,EAAOvvC,UAAU,yCAA0C2gD,EAAW70B,SAC1E,IAAI8jB,EAAgE,QAArDpvC,EAAKmZ,EAAQX,WAAWu2B,EAAO/lB,wBAAqC,IAAPhpB,OAAgB,EAASA,EAAGkf,SAAS5L,QAAO,SAAU87B,GAE9H,OADA,EAAIL,EAAOvvC,UAAU,8BAA+B4vC,GAC7CA,EAAQzhC,WAAWwyC,EAAW70B,QACzC,IAAG,IACH,EAAIyjB,EAAOvvC,UAAU,qCAAsC4gD,EAAmBhR,GAC1EgR,GAAqBhR,IACrB+Q,EAAWjkD,OAAS,CAChB,UAAay3B,EAAOtjB,QAAQyhB,OAAOsuB,GACnC,WAAa,EAAI3I,EAAWmH,sBAAsBxP,IAG9D,MACK,GAA0B,oBAAtB+Q,EAAWlzC,QAAsD,4BAAtBkzC,EAAWlzC,OAAsC,CACjG,IAAIozC,EAAYzK,EAActiC,QAAO,SAAUgtC,GAC3C,OAAOA,EAAcrzC,SAAWkzC,EAAWlzC,MAC/C,IAAG,GACH,GAAIozC,GAAaA,EAAU37C,QAAU,YAAa27C,EAAU37C,OAAQ,CAChE,IAAIq6C,EAAasB,EAAU37C,OAAOE,QAC9B27C,EAAgBzV,KAAKiU,GACzBh0B,QAAQjtB,IAAI,gDAAiDihD,EAAYwB,GAC/C,oBAAtBJ,EAAWlzC,OACXkzC,EAAWjkD,OAAS,CAChB,aAAgBqkD,EAChB,UAAaJ,EAAWjkD,QAGD,4BAAtBikD,EAAWlzC,SAChBkzC,EAAWjkD,OAAS,CAChB,MAASqkD,EACT,UAAaJ,EAAWjkD,QAGpC,CACJ,MACK,GAA0B,sBAAtBikD,EAAWlzC,OAAgC,CAYhD,GAX2B,cAAvBkzC,EAAW70B,QACX60B,EAAW70B,QAAU,gBAEO,mBAAvB60B,EAAW70B,QAChB60B,EAAW70B,QAAU,mBAEO,mBAAvB60B,EAAW70B,UAChB60B,EAAW70B,QAAU,oBAEzB60B,EAAWjkD,OAASqa,KAAKuV,MAAMq0B,EAAWjkD,QAC1C6uB,QAAQjtB,IAAI,yDAA0DyY,KAAKC,UAAU2pC,EAAWjkD,SAC5FikD,EAAWjkD,QAAU,cAAeikD,EAAWjkD,OAAQ,CACvD,IAAIskD,EAAiBL,EAAWjkD,OAAOyhB,UACnC6iC,GAAkBA,EAAe7yC,WAAW,QAC5C6yC,EAAiBA,EAAe9uC,MAAM,EAAG8uC,EAAel+C,QACxD69C,EAAWjkD,OAAOyhB,UAAY6iC,EAEtC,CACAz1B,QAAQjtB,IAAI,wDAAyDyY,KAAKC,UAAU2pC,EAAWjkD,QACnG,MACK,GAA0B,yBAAtBikD,EAAWlzC,OAChBkzC,EAAWjkD,OAASqa,KAAKuV,MAAMq0B,EAAWjkD,aAEzC,GAAyB,wBAArBikD,EAAWlzC,OAAkC,CAClD,IAAIy2B,EAAUyc,EAAWjkD,OACH,iBAAXwnC,IACPA,EAAUntB,KAAKuV,MAAM4X,IAEzByc,EAAWjkD,OAAS,CAACwnC,EAAQ,eAAgBA,EAAQ,eACzD,KAC8B,sBAArByc,EAAWlzC,SAChBkzC,EAAWjkD,OAASgiD,EAAsBiC,EAAWjkD,QAIrE,CACJ,CACA,MAAOqQ,GAEH,MADA,EAAIwiC,EAAOvvC,UAAU,mDAAoD+W,KAAKC,UAAUjK,IAClFA,CACV,CACJ,GACJ,CACA,SAASqxC,EAAqCl5C,EAAQ+7C,GAClD,OAAOnkD,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,KACI,EAAI+zC,EAAOvvC,UAAU,uDAAwD+W,KAAKC,UAAU9R,IAC5F,MAAMxI,EAAS,GAEf,GAAIwI,GAAUA,EAAOpC,OAAS,EAC1B,MAAM,IAAIysC,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwBiV,cAAe,qEAEnF,IAAK+nC,GAAoB/7C,GAAUA,EAAOpC,OAAS,EAC/C,MAAM,IAAIysC,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwBiV,cAAe,6FAGnF,IAAK,MAAMynC,KAAcz7C,EAarB,GAZ0B,sBAAtBy7C,EAAWlzC,SACgB,kBAAvBkzC,EAAW70B,QACX60B,EAAW70B,QAAU,YAEO,qBAAvB60B,EAAW70B,QAChB60B,EAAW70B,QAAU,iBAEO,qBAAvB60B,EAAW70B,UAChB60B,EAAW70B,QAAU,mBAIH,4BAAtB60B,EAAWlzC,OAAsC,CACjD,IAAIyzC,EAAqC,OAArBD,QAAkD,IAArBA,OAA8B,EAASA,EAAiBE,MAAKC,GAASA,EAAMxhC,UAAU7L,SAAS,YAChJ,IAAKmtC,EACD,MAAM,IAAI3R,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwBiV,cAAe,6CAA6CynC,EAAWlzC,+DAE/I,MACK,GAA0B,uBAAtBkzC,EAAWlzC,OAAiC,CACjD,KAAI,EAAIwqC,EAAWoJ,4BAIf,MAAM,IAAI9R,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwB0vB,sBAHhEgtB,EAAW70B,QAAU,EAK7B,KACK,CACD,MAAMw1B,KAAuC,OAArBL,QAAkD,IAArBA,OAA8B,EAASA,EAAiBE,MAAKC,GAASA,EAAM9gC,OAAO6gC,MAAK1gC,GAASA,EAAM1M,SAAS,GAAG4sC,EAAW70B,gBACnL,IAAKw1B,EACD,MAAM,IAAI/R,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwBiV,cAAe,6CAA6CynC,EAAWlzC,oCAAoCkzC,EAAW70B,WAE9L,CAEJ,IAAK,MAAMhZ,KAAQ5N,EAAQ,CACvB,IAAKtK,EAAQ+jD,sBAAsB5qC,SAASjB,EAAKrF,QAC7C,MAAM,IAAI8hC,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwBiV,cAAe,uDAAuDpG,EAAKrF,WAE/I,GAAoB,4BAAhBqF,EAAKrF,QACL,GAAIuF,MAAMqiC,QAAQviC,EAAK5N,QAAS,CAC5B,MAAMq8C,EAAYzuC,EAAK5N,OACvB,IAAIq8C,GAAkC,IAArBA,EAAUz+C,OAMtB,MAAIy+C,GAAaA,EAAUz+C,OAAS,EAC/B,IAAIysC,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwBiV,cAAe,0DAA0DpG,EAAKrF,WAGxI,IAAI8hC,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwBiV,cAAe,2CAA2CpG,EAAKrF,WAV1F,CACrC,MAAM+zC,EAAaD,EAAU,GACzB1C,EAAS2C,KACT1uC,EAAK5N,OAASs8C,EAEtB,CAOJ,OAEC,GAAoB,kBAAhB1uC,EAAKrF,QACV,GAAI4nC,EAAQviC,EAAK5N,QAAS,CACtB,GAAI4N,EAAK5N,QAAiC,IAAvB4N,EAAK5N,OAAOpC,OAC3B,MAAM,IAAIysC,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwBiV,cAAe,2CAA2CpG,EAAKrF,YAEnI,IAAIg0C,EAAW3uC,EAAK5N,OAAO,GAC3B,IAAIu8C,GAAgC,kBAAbA,EAMnB,MAAM,IAAIlS,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwBiV,cAAe,8CAA8CpG,EAAKrF,YALlIqF,EAAK5N,OAAS,CACVE,QAASq8C,EAMrB,OAEC,GAAoB,oBAAhB3uC,EAAKrF,QAAgD,4BAAhBqF,EAAKrF,OAAsC,CACrF,IAAIoxC,EAAS/rC,EAAK5N,WAAW,YAAa4N,EAAK5N,QAe3C,MAAM,IAAIqqC,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwBiV,cAAe,8CAA8CpG,EAAKrF,YAdlI,IAAIqF,EAAK5N,OAAOE,QAUZ,MAAM,IAAImqC,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwBiV,cAAe,8CAA8CpG,EAAKrF,YAV7G,EACrB,EAAI8hC,EAAOvvC,UAAU,wCAAyC8S,EAAK5N,OAAOE,SAC1E,IAAIA,EAAU2R,KAAKuV,MAAMvV,KAAKC,UAAUlE,EAAK5N,OAAOE,UAChDo6C,EAAiB9kD,OAAOo/B,OAAO10B,GAC/BioC,EAAa,IAAIrU,WAAWwmB,GAC5BzZ,EAAU,IAAI1T,YAAY,QAC1BotB,EAAanU,KAAKvF,EAAQzT,OAAO+a,IACrCv6B,EAAK5N,OAAOE,QAAUs6C,KAAKD,EAC/B,CAQR,MACK,GAAoB,uBAAhB3sC,EAAKrF,OAAiC,CAC3C,IAAIoxC,EAAS/rC,EAAK5N,WAAW,YAAa4N,EAAK5N,QAU3C,MAAM,IAAIqqC,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwBiV,cAAe,8CAA8CpG,EAAKrF,YATlI,IAAIqF,EAAK5N,OAAOE,SAA0C,kBAAxB0N,EAAK5N,OAAOE,QAK1C,MAAM,IAAImqC,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwBiV,cAAe,8CAA8CpG,EAAKrF,YALlE,CAChE,IAAI6xC,GAAgB,IAAIjuB,aAAcC,OAAOxe,EAAK5N,OAAOE,SACzD0N,EAAK5N,OAAO,eAAiBivB,EAAOtjB,QAAQygB,OAAOguB,EACvD,CAQR,MACK,GAAoB,sBAAhBxsC,EAAKrF,OAAgC,CAC1C,IAAIoxC,EAAS/rC,EAAK5N,QAsBd,MAAM,IAAIqqC,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwBiV,cAAe,8CAA8CpG,EAAKrF,YArBlI,IAAIqF,EAAKgZ,SAA6B,cAAjBhZ,EAAKgZ,SAA4C,mBAAjBhZ,EAAKgZ,SAAiD,mBAAjBhZ,EAAKgZ,QAiB3F,MAAM,IAAIyjB,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwBiV,cAAe,sDAAsDpG,EAAKrF,YAjBhB,CAC1H,IAAIi0C,EAAc5uC,EAAK5N,OACnBy8C,EAAav3B,OAAO0R,SAASxB,SAAW,KAAOlQ,OAAO0R,SAASC,SACnE,IAAI6lB,EAAc,EACG,cAAjB9uC,EAAKgZ,SAEiB,mBAAjBhZ,EAAKgZ,UACV81B,EAAc,GAElB9uC,EAAK5N,OAAS,CACVnF,KAAM2hD,EACNG,eAAgBF,EAChB9jC,OAAQ,QACRwiC,aAAcuB,EAEtB,CAQR,MACK,GAAoB,yBAAhB9uC,EAAKrF,OAAmC,CAC7C,IAAIoxC,EAAS/rC,EAAK5N,QAmCd,MAAM,IAAIqqC,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwBiV,cAAe,8CAA8CpG,EAAKrF,YAlClI,IAAIqF,EAAK5N,OAAOE,SAA0C,kBAAxB0N,EAAK5N,OAAOE,QA8B1C,MAAM,IAAImqC,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwBiV,cAAe,sDAAsDpG,EAAKrF,YA9B1E,CAChE,MAAMqK,EAAgBwzB,KAAKx4B,EAAK5N,OAAOE,SACvC,IAAI08C,EAAchvC,EAAKgZ,QAAQ/N,MAAM,KAAK,GAC1C,IAAI+jC,EAuBA,MAAM,IAAIvS,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwBiV,cAAe,sDAAsDpG,EAAKrF,YAtB1IqF,EAAK5N,OAAS,CACV2tC,SAAUiP,EACV/hD,KAAM,CACF8yC,SAAU,GACVC,eAAgB,IAChBC,SAAU,IACVC,IAAK,CACDC,IAAK,IACLnB,OAAQ,IAEZoB,KAAM,CAAC,CACC,KAAQ,mBACR,MAAS,CACL,OAAU,GACV,KAAQp7B,KAGpBq7B,KAAM,IAOtB,CAQR,MACK,GAAmB,oBAAfrgC,EAAKrF,OAA8B,CACxC,IAAIoxC,EAAS/rC,EAAK5N,QASd,MAAM,IAAIqqC,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwBiV,cAAe,8CAA8CpG,EAAKrF,YARlI,KAAI,YAAaqF,EAAK5N,UAAU4N,EAAK5N,OAAOE,SAA0C,kBAAxB0N,EAAK5N,OAAOE,QAItE,MAAM,IAAImqC,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwBiV,cAAe,8CAA8CpG,EAAKrF,YAHlIqF,EAAK5N,OAAOE,QAAUmxC,EAAYzjC,EAAK5N,OAAOE,QAS1D,MACK,GAAmB,mBAAf0N,EAAKrF,OAA6B,CACvC,IAAIoxC,EAAS/rC,EAAK5N,QAWd,MAAM,IAAIqqC,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwBiV,cAAe,8CAA8CpG,EAAKrF,YAVlI,KAAI,YAAaqF,EAAK5N,UAAU4N,EAAK5N,OAAOE,SAA0C,kBAAxB0N,EAAK5N,OAAOE,QAMtE,MAAM,IAAImqC,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwBiV,cAAe,8CAA8CpG,EAAKrF,YALlIqF,EAAK5N,OAAS,CACV4qC,QAASh9B,EAAK5N,OAAOE,QAUrC,EACA,EAAImqC,EAAOvvC,UAAU,6CAA8C+W,KAAKC,UAAUlE,IAClFpW,EAAOuV,KAAKa,EAChB,CACA,OAAOpW,CACX,CACA,MAAOqQ,GACH,MAAMA,CACV,CACJ,GACJ,CACA,SAASwpC,EAAYh5B,GACjB,IAAImpB,EAAM,GACV,IAAK,IAAIr3B,EAAI,EAAGA,EAAIkO,EAAIza,OAAQuM,IAC5Bq3B,GAAOnpB,EAAIipB,WAAWn3B,GAAGjP,SAAS,IAAI+zC,SAAS,EAAG,KAEtD,OAAOzN,CACX,CACA,SAASgY,EAAsBqD,GAC3B,MAAMC,EAAajrC,KAAKuV,MAAMy1B,GACxBrlD,EAAS,CACXg9B,KAAMsoB,EAAWtoB,KACjBuoB,MAAOD,EAAWC,MAClB9oC,WAAY6oC,EAAW7oC,WACvB+oC,WAAYF,EAAWE,WACvB/hC,UAAW6hC,EAAW7hC,UAAU7N,KAAK6vC,IAAI,CACrClR,OAAQkR,EAAKC,GACbtiC,QAASqiC,EAAK9uC,GAAgB,SAAX8uC,EAAK9uC,EAAe8uC,EAAK9uC,EAAI2uC,EAAWK,gBAGnE,OAAO3lD,CACX,CApiBA9B,EAAQ+jD,sBAAwBjkD,OAAO4nD,OAAO,CAC1C,gBACA,kBACA,0BACA,kBACA,oBACA,uBACA,mBACA,qBACA,uBACA,sB,qCCxCJ5nD,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ2/C,gCAAkC3/C,EAAQgkD,mCAAgC,EAClF,IAAIb,EAAuBziD,EAAQ,OACnCZ,OAAOC,eAAeC,EAAS,gCAAiC,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO0hD,EAAqBa,6BAA+B,IAClKlkD,OAAOC,eAAeC,EAAS,kCAAmC,CAAEwB,YAAY,EAAMC,IAAK,WAAc,OAAO0hD,EAAqBxD,+BAAiC,G,qCCL1Jj/C,EAAA,OAACA,EAAA,OACbZ,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ2nD,kBAAoBA,EAC5B3nD,EAAQsjD,kCAAoCA,EAC5CtjD,EAAQ0jD,oBAAsBA,EAC9B1jD,EAAQ4nD,gBAAkBA,EAC1B5nD,EAAQwgD,kBAAoBA,EAC5B,MAAM7L,EAASj0C,EAAQ,OACvB,SAASinD,EAAkB7iC,GACvB,MAAMY,EAAS,GAKf,OAJAZ,EAAS7T,SAAS+jC,IACd,MAAOnvB,EAAOqL,GAAW8jB,EAAQ7xB,MAAM,KACvCuC,EAAOrO,KAAK,GAAGwO,KAASqL,IAAU,IAE/BxL,CACX,CACA,SAAS49B,EAAkCllC,GACvC,IAAItc,EAAS,GACb,OAAKsc,GAGLte,OAAOwrB,KAAKlN,GAAYnN,SAAS4D,IACzBA,IAAQ8/B,EAAOjmB,oBAAsB7Z,IAAQ8/B,EAAO/lB,iBAAmB/Z,IAAQ8/B,EAAOzlB,iBAAmBra,IAAQ8/B,EAAO7lB,mBACrHja,GAAO8/B,EAAO1S,iBAAmBptB,IAAQ8/B,EAAO3lB,iBAAmBna,IAAQ8/B,EAAO3S,oBAAsBntB,IAAQ8/B,EAAO5S,kBAAoBltB,IAAQ8/B,EAAO7S,sBACzJ1jB,EAAWvJ,GAAK6Q,QAChB5jB,EAAOuV,KAAK,CACR2N,UAAWnQ,EACX6Q,OAAQtH,EAAWvJ,GAAK6Q,OACxBpb,OAAQ8T,EAAWvJ,GAAKvK,QAGpC,IAEGxI,GAdIA,CAef,CACA,SAAS4hD,EAAoB3kC,EAASX,EAAYgS,EAAoBnU,GAElE,MAAM4rC,EAAcA,CAACC,EAAcC,KAC/BjoD,OAAOkf,OAAO8oC,EAAcC,EAAa,EAGvCC,EAAkBA,CAACrU,EAAQsU,KAC7B,IAAK,MAAMpzC,KAAOozC,EACVA,EAAOjmD,eAAe6S,IAAQozC,EAAOpzC,GAAKqzC,SACtCD,EAAOpzC,GAAKqzC,SACPvU,EAAO9+B,GAAKqzC,SACbvU,EAAO9+B,GAAKqzC,OAAS,CAAC,GAG1BL,EAAYlU,EAAO9+B,GAAKqzC,OAAQD,EAAOpzC,GAAKqzC,SAE5CD,EAAOpzC,GAAKkqC,mBAA6C79C,IAA7ByyC,EAAO9+B,GAAKkqC,cAEpCpL,EAAO9+B,GAAK6Q,OAAO6gC,MAAK1gC,GAASA,EAAM1C,MAAM,KAAK,KAAO8kC,EAAOpzC,GAAKkqC,iBACrEpL,EAAO9+B,GAAKkqC,aAAekJ,EAAOpzC,GAAKkqC,cAIvD,EAGA3gC,GACA4pC,EAAgBjpC,EAAQX,WAAYA,GAGpCgS,GACA43B,EAAgBjpC,EAAQX,WAAYgS,GAExC,IAAK,MAAMvb,KAAOkK,EAAQX,WAAY,CAClC,MAAM4G,EAAYjG,EAAQX,WAAWvJ,IACjB,OAAdmQ,QAAoC,IAAdA,OAAuB,EAASA,EAAUF,WAA2C,IAA9BE,EAAUF,SAAS5c,eAC3F6W,EAAQX,WAAWvJ,EAElC,CACIkK,EAAQX,WAAWu2B,EAAO1S,kBAAoBljB,EAAQN,OAAO3D,UAAY65B,EAAOh2B,eAChFwpC,EAAoBppC,EAAQX,WAAWu2B,EAAO1S,kBAElDljB,EAAQ9C,cAAgBA,CAC5B,CACA,SAASksC,EAAoBC,GACzB,IACI,GAAIA,GAAgBA,EAAa3iC,MAAO,CACpC,IAAItgB,EAAOijD,EAAa3iC,MACxB3lB,OAAOwrB,KAAKnmB,GAAM8L,SAAQ4D,IACtB,MAAMqD,EAAO/S,EAAK0P,GACe,IAA7B+H,OAAO1E,EAAKmwC,aACZnwC,EAAK3J,UAAY2J,EAAKowC,oBAAoBhxC,MAAM,GAGhDY,EAAK3J,UAAY2J,EAAKowC,mBAC1B,GAER,CACJ,CACA,MAAOxlD,IACH,EAAI6xC,EAAOvvC,UAAU,uCACzB,CACJ,CA8GA,SAASwiD,EAAgB5iC,GACrB,OAAOA,EAAU7L,SAAS,IAC9B,CACA,SAASqnC,EAAkBx7B,GACvB,OAAO4iC,EAAgB5iC,GAAaA,EAAU7B,MAAM,KAAK,GAAK6B,CAClE,C,mCCnNAllB,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ2hD,qBAAkB,EAC1B3hD,EAAQ2hD,gBAAkB,CACtBC,sBAAuB,wBACvBG,kBAAmB,qBACnBwB,mBAAoB,qB,qCCLxB,IAAI5iD,EAAmBC,MAAQA,KAAKD,kBAAqBb,OAAOe,OAAU,SAASC,EAAGC,EAAGC,EAAGC,QAC7EC,IAAPD,IAAkBA,EAAKD,GAC3B,IAAIG,EAAOrB,OAAOsB,yBAAyBL,EAAGC,GACzCG,KAAS,QAASA,GAAQJ,EAAEM,WAAaF,EAAKG,UAAYH,EAAKI,gBAClEJ,EAAO,CAAEK,YAAY,EAAMC,IAAK,WAAa,OAAOV,EAAEC,EAAI,IAE5DlB,OAAOC,eAAee,EAAGG,EAAIE,EACjC,EAAM,SAASL,EAAGC,EAAGC,EAAGC,QACTC,IAAPD,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,EACd,GACI22B,EAAgB/2B,MAAQA,KAAK+2B,cAAiB,SAAS52B,EAAGf,GAC1D,IAAK,IAAI43B,KAAK72B,EAAa,YAAN62B,GAAoB93B,OAAOiC,UAAUC,eAAeC,KAAKjC,EAAS43B,IAAIj3B,EAAgBX,EAASe,EAAG62B,EAC3H,EACA93B,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD03B,EAAaj3B,EAAQ,OAAaV,GAClC23B,EAAaj3B,EAAQ,OAAaV,E,mCChBlCF,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQuoD,yBAA2BvoD,EAAQwoD,QAAUxoD,EAAQyoD,QAAUzoD,EAAQ0oD,QAAU1oD,EAAQ2oD,WAAa3oD,EAAQ4oD,SAAW5oD,EAAQ6oD,UAAY7oD,EAAQ8oD,YAAS,EACtK9oD,EAAQ8oD,OAAS,QACjB9oD,EAAQ6oD,UAAY,gCACpB7oD,EAAQ4oD,SAAW,KACnB5oD,EAAQ2oD,WAAa,EACrB3oD,EAAQ0oD,QAAU,qBAClB1oD,EAAQyoD,QAAU,GAAGzoD,EAAQ4oD,YAAY5oD,EAAQ2oD,cAAc3oD,EAAQ0oD,WACvE1oD,EAAQwoD,QAAU,oCAClBxoD,EAAQuoD,yBAA2B,S,qCCTnC,IAAI5nD,EAAmBC,MAAQA,KAAKD,kBAAqBb,OAAOe,OAAU,SAASC,EAAGC,EAAGC,EAAGC,QAC7EC,IAAPD,IAAkBA,EAAKD,GAC3B,IAAIG,EAAOrB,OAAOsB,yBAAyBL,EAAGC,GACzCG,KAAS,QAASA,GAAQJ,EAAEM,WAAaF,EAAKG,UAAYH,EAAKI,gBAClEJ,EAAO,CAAEK,YAAY,EAAMC,IAAK,WAAa,OAAOV,EAAEC,EAAI,IAE5DlB,OAAOC,eAAee,EAAGG,EAAIE,EACjC,EAAM,SAASL,EAAGC,EAAGC,EAAGC,QACTC,IAAPD,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,EACd,GACI22B,EAAgB/2B,MAAQA,KAAK+2B,cAAiB,SAAS52B,EAAGf,GAC1D,IAAK,IAAI43B,KAAK72B,EAAa,YAAN62B,GAAoB93B,OAAOiC,UAAUC,eAAeC,KAAKjC,EAAS43B,IAAIj3B,EAAgBX,EAASe,EAAG62B,EAC3H,EACA93B,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD03B,EAAaj3B,EAAQ,OAAYV,GACjC23B,EAAaj3B,EAAQ,OAAYV,E,qCCjBrBU,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACb,IAAIwB,EAAatB,MAAQA,KAAKsB,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMtC,GAAS,OAAOA,aAAiBoC,EAAIpC,EAAQ,IAAIoC,GAAE,SAAUG,GAAWA,EAAQvC,EAAQ,GAAI,CAC3G,OAAO,IAAKoC,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU1C,GAAS,IAAM2C,EAAKN,EAAUO,KAAK5C,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAS9C,GAAS,IAAM2C,EAAKN,EAAU,SAASrC,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKd,GAAUA,EAAOkB,KAAOR,EAAQV,EAAO7B,OAASsC,EAAMT,EAAO7B,OAAOgD,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACA/C,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,MAAMmD,EAAc1C,EAAQ,OACtBi0C,EAASj0C,EAAQ,OACjB6C,EAAU7C,EAAQ,OAClBqoD,EAAsBroD,EAAQ,OAC9BsoD,EAAoBtoD,EAAQ,OAClC,MAAMquB,EACFhrB,WAAAA,CAAYw5C,EAAMnrC,EAAMuqB,EAAQ14B,GAC5BrD,KAAKwR,KAAO,QACZxR,KAAKokB,UAAYu4B,EAAKv4B,UACtBpkB,KAAKqD,OAASA,EACdrD,KAAK+7B,OAASA,EACd/7B,KAAKswB,QAAUtwB,KAAK0hD,kBACpB1hD,KAAKqoD,cAAgBroD,KAAKsoD,sBAC1BtoD,KAAKwR,KAAOA,CAChB,CACA+2C,eAAAA,CAAgBnkC,GACZpkB,KAAKokB,UAAYllB,OAAOkf,OAAOpe,KAAKokB,UAAWA,EACnD,CACA0K,eAAAA,GACI,OAAO9uB,KAAKwoD,aAChB,CACAptC,OAAAA,CAAQqoB,GACJ,OAAOniC,EAAUtB,UAAM,OAAQ,GAAQ,YAGnC,IAFA,EAAI+zC,EAAOvvC,UAAU,iCAAiC,EAAIuvC,EAAOtpC,mBAAmBg5B,KACpF,EAAIsQ,EAAOvvC,UAAU,6BAA8BxE,KAAKokB,WACpDpkB,KAAKokB,UAAUQ,QAAQrM,SAASkrB,EAAKxxB,QACrC,OAAOjS,KAAK+7B,OAAO3gB,QAAQqoB,GAG3B,MAAM,IAAIsQ,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwB0vB,qBAAsB,yBAE9F,GACJ,CACAgnB,eAAAA,CAAgB7uB,EAAS8uB,GAEhBp/C,KAAKqoD,cAAc/3B,IACpBtwB,KAAKyoD,gBAAgBn4B,EAAS8uB,GAElCp/C,KAAKswB,QAAUA,EACftwB,KAAKqD,OAAOwB,KAAKrC,EAAYu+C,gBAAgBC,sBAAuB,GAAGhhD,KAAKwR,QAAQ8e,IACxF,CACAoxB,eAAAA,GACI,GAAI1hD,KAAKswB,QACL,OAAOtwB,KAAKswB,QAChB,GAAItwB,KAAKokB,UAAU+5B,aACf,OAAOn+C,KAAKokB,UAAU+5B,aAC1B,MAAM7tB,EAAUtwB,KAAKokB,UAAUU,OAAO,GACtC,IAAKwL,EACD,MAAM,IAAIxsB,MAAM,qBACpB,OAAOwsB,EAAQ/N,MAAM,KAAK,EAC9B,CAEAimC,WAAAA,GACI,MAAMtkC,EAAWlkB,KAAKokB,UAAUF,SAChC,OAAKA,EAGE,IACA,IAAIxM,IAAIwM,EAEN5L,QAAQ87B,GAAYA,EAAQ7xB,MAAM,KAAK,KAAOviB,KAAKswB,QAAQ1rB,aAE3DkS,KAAKs9B,GAAYA,EAAQ7xB,MAAM,KAAK,OAPlC,EASf,CACA+lC,mBAAAA,GACI,MAAMI,EAAO,CAAC,EASd,OARA1oD,KAAKokB,UAAUU,OAAOzU,SAAS4U,IAC3B,MAAM0jC,GAAgB,EAAIhmD,EAAQ22B,YAAYrU,GACxC2jC,GAAY,EAAIjmD,EAAQkmD,WAAW5jC,EAAOjlB,KAAKokB,WACrD,IAAI0kC,EAAe9oD,KAAK+oD,mBAAmBJ,EAAeC,GACtDE,IACAJ,EAAKC,GAAiBG,EAC1B,IAEGJ,CACX,CACAM,eAAAA,GACI,MAAM/jC,EAAQ,GAAGjlB,KAAKswB,UAChBo4B,EAAO1oD,KAAKqoD,cAAcpjC,GAChC,GAAoB,qBAATyjC,EACP,MAAM,IAAI5kD,MAAM,yBAAyBmhB,eAE7C,OAAOyjC,CACX,CACAD,eAAAA,CAAgBn4B,EAAS8uB,GACrB,MAAMsJ,EAAO1oD,KAAK+oD,mBAAmBz4B,EAAS8uB,GAC1CsJ,IACA1oD,KAAKqoD,cAAc/3B,GAAWo4B,EAEtC,CACAK,kBAAAA,CAAmBz4B,EAAS8uB,GAExB,MAAM6J,EAAM7J,EACZ,GAAK6J,EAIA,CACD,MAAMP,EAAO,IAAIN,EAAkBc,gBAAgB,IAAIf,EAAoBgB,kBAAkBF,GAAK,EAAItmD,EAAQymD,WAAW,yBACzH,OAAOV,CACX,CACJ,CACA3G,gBAAAA,CAAiBte,GACb,OAAO,CACX,EAEJrkC,EAAAA,WAAkB+uB,C,qCCtHNruB,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACb,IAAIwB,EAAatB,MAAQA,KAAKsB,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMtC,GAAS,OAAOA,aAAiBoC,EAAIpC,EAAQ,IAAIoC,GAAE,SAAUG,GAAWA,EAAQvC,EAAQ,GAAI,CAC3G,OAAO,IAAKoC,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU1C,GAAS,IAAM2C,EAAKN,EAAUO,KAAK5C,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAS9C,GAAS,IAAM2C,EAAKN,EAAU,SAASrC,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKd,GAAUA,EAAOkB,KAAOR,EAAQV,EAAO7B,OAASsC,EAAMT,EAAO7B,OAAOgD,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACA/C,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,MAAMmD,EAAc1C,EAAQ,OACtBi0C,EAASj0C,EAAQ,OACjB6C,EAAU7C,EAAQ,OAClBqoD,EAAsBroD,EAAQ,OAC9BsoD,EAAoBtoD,EAAQ,OAClC,MAAMupD,EACFlmD,WAAAA,CAAYw5C,EAAMnrC,EAAMuqB,EAAQ14B,GAC5BrD,KAAKwR,KAAOuiC,EAAO1S,gBACnBrhC,KAAKokB,UAAYu4B,EAAKv4B,UACtBpkB,KAAKqD,OAASA,EACdrD,KAAK+7B,OAASA,EACd/7B,KAAKswB,QAAUtwB,KAAK0hD,kBACpB1hD,KAAKqoD,cAAgBroD,KAAKsoD,sBAC1BtoD,KAAKwR,KAAOA,CAChB,CACA+2C,eAAAA,CAAgBnkC,GACZpkB,KAAKokB,UAAYllB,OAAOkf,OAAOpe,KAAKokB,UAAWA,EACnD,CACA0K,eAAAA,GACI,OAAO9uB,KAAKwoD,aAChB,CACAptC,OAAAA,CAAQqoB,GACJ,OAAOniC,EAAUtB,UAAM,OAAQ,GAAQ,YAGnC,OAFA,EAAI+zC,EAAOvvC,UAAU,8BAA+B+W,KAAKC,UAAUioB,KACnE,EAAIsQ,EAAOvvC,UAAU,2BAA4B+W,KAAKC,UAAUxb,KAAKokB,YACjEpkB,KAAKokB,UAAUQ,QAAQrM,SAASkrB,EAAKxxB,QAC9BjS,KAAK+7B,OAAO3gB,QAAQqoB,GAExBzjC,KAAKgpD,kBAAkB5tC,QAAQqoB,EAC1C,GACJ,CACA0b,eAAAA,CAAgB7uB,EAAS8uB,GAEhBp/C,KAAKqoD,cAAc/3B,IACpBtwB,KAAKyoD,gBAAgBn4B,EAAS8uB,GAElCp/C,KAAKswB,QAAUA,EACftwB,KAAKqD,OAAOwB,KAAKrC,EAAYu+C,gBAAgBC,sBAAuB,GAAGhhD,KAAKwR,QAAQ8e,IACxF,CACAoxB,eAAAA,GACI,GAAI1hD,KAAKswB,QACL,OAAOtwB,KAAKswB,QAChB,GAAItwB,KAAKokB,UAAU+5B,aACf,OAAOn+C,KAAKokB,UAAU+5B,aAC1B,MAAM7tB,EAAUtwB,KAAKokB,UAAUU,OAAO,GACtC,IAAKwL,EACD,MAAM,IAAIxsB,MAAM,qBACpB,OAAOwsB,EAAQ/N,MAAM,KAAK,EAC9B,CAEAimC,WAAAA,GACI,MAAMtkC,EAAWlkB,KAAKokB,UAAUF,SAChC,OAAKA,EAGE,IACA,IAAIxM,IAAIwM,EAEN5L,QAAQ87B,GAAYA,EAAQ7xB,MAAM,KAAK,KAAOviB,KAAKswB,QAAQ1rB,aAE3DkS,KAAKs9B,GAAYA,EAAQ7xB,MAAM,KAAK,OAPlC,EASf,CACA+lC,mBAAAA,GACI,MAAMI,EAAO,CAAC,EASd,OARA1oD,KAAKokB,UAAUU,OAAOzU,SAAS4U,IAC3B,MAAM0jC,GAAgB,EAAIhmD,EAAQ22B,YAAYrU,GACxC2jC,GAAY,EAAIjmD,EAAQkmD,WAAW5jC,EAAOjlB,KAAKokB,WACrD,IAAI0kC,EAAe9oD,KAAK+oD,mBAAmBJ,EAAeC,GACtDE,IACAJ,EAAKC,GAAiBG,EAC1B,IAEGJ,CACX,CACAM,eAAAA,GACI,MAAM/jC,EAAQ,GAAGjlB,KAAKswB,UAChBo4B,EAAO1oD,KAAKqoD,cAAcpjC,GAChC,GAAoB,qBAATyjC,EACP,MAAM,IAAI5kD,MAAM,yBAAyBmhB,eAE7C,OAAOyjC,CACX,CACAD,eAAAA,CAAgBn4B,EAAS8uB,GACrB,MAAMsJ,EAAO1oD,KAAK+oD,mBAAmBz4B,EAAS8uB,GAC1CsJ,IACA1oD,KAAKqoD,cAAc/3B,GAAWo4B,EAEtC,CACAK,kBAAAA,CAAmBz4B,EAAS8uB,GAExB,MAAM6J,EAAM7J,EACZ,GAAK6J,EAIA,CACD,MAAMP,EAAO,IAAIN,EAAkBc,gBAAgB,IAAIf,EAAoBgB,kBAAkBF,GAAK,EAAItmD,EAAQymD,WAAW,yBACzH,OAAOV,CACX,EANI,EAAI3U,EAAOxtC,UAAU,oCAAoC+pB,IAOjE,CACAyxB,gBAAAA,CAAiBte,GACb,OAAO,CACX,EAEJrkC,EAAAA,WAAkBiqD,C,qCCpHNvpD,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACb,IAAIwB,EAAatB,MAAQA,KAAKsB,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMtC,GAAS,OAAOA,aAAiBoC,EAAIpC,EAAQ,IAAIoC,GAAE,SAAUG,GAAWA,EAAQvC,EAAQ,GAAI,CAC3G,OAAO,IAAKoC,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU1C,GAAS,IAAM2C,EAAKN,EAAUO,KAAK5C,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAS9C,GAAS,IAAM2C,EAAKN,EAAU,SAASrC,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKd,GAAUA,EAAOkB,KAAOR,EAAQV,EAAO7B,OAASsC,EAAMT,EAAO7B,OAAOgD,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACA/C,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,MAAMmD,EAAc1C,EAAQ,OACtBi0C,EAASj0C,EAAQ,OACjB6C,EAAU7C,EAAQ,OAClBqoD,EAAsBroD,EAAQ,OAC9BsoD,EAAoBtoD,EAAQ,OAClC,MAAMwpD,EACFnmD,WAAAA,CAAYw5C,EAAM5gB,EAAQ14B,GACtBrD,KAAKwR,KAAOuiC,EAAO3S,mBACnBphC,KAAKokB,UAAYu4B,EAAKv4B,UACtBpkB,KAAKqD,OAASA,EACdrD,KAAK+7B,OAASA,EACd/7B,KAAKswB,QAAUtwB,KAAK0hD,kBACpB1hD,KAAKqoD,cAAgBroD,KAAKsoD,qBAC9B,CACAC,eAAAA,CAAgBnkC,GACZpkB,KAAKokB,UAAYllB,OAAOkf,OAAOpe,KAAKokB,UAAWA,EACnD,CACA0K,eAAAA,GACI,OAAO9uB,KAAKwoD,aAChB,CACAptC,OAAAA,CAAQqoB,GACJ,OAAOniC,EAAUtB,UAAM,OAAQ,GAAQ,YAGnC,IAFA,EAAI+zC,EAAOvvC,UAAU,iCAAkC+W,KAAKC,UAAUioB,KACtE,EAAIsQ,EAAOvvC,UAAU,8BAA+B+W,KAAKC,UAAUxb,KAAKokB,YACpEpkB,KAAKokB,UAAUQ,QAAQrM,SAASkrB,EAAKxxB,QACrC,OAAOjS,KAAK+7B,OAAO3gB,QAAQqoB,GAG3B,MAAM,IAAIsQ,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwB0vB,qBAAsB,yBAE9F,GACJ,CACAgnB,eAAAA,CAAgB7uB,EAAS8uB,GAEhBp/C,KAAKqoD,cAAc/3B,IACpBtwB,KAAKyoD,gBAAgBn4B,EAAS8uB,GAElCp/C,KAAKswB,QAAUA,EACftwB,KAAKqD,OAAOwB,KAAKrC,EAAYu+C,gBAAgBC,sBAAuB,GAAGhhD,KAAKwR,QAAQ8e,IACxF,CACAoxB,eAAAA,GACI,GAAI1hD,KAAKswB,QACL,OAAOtwB,KAAKswB,QAChB,GAAItwB,KAAKokB,UAAU+5B,aACf,OAAOn+C,KAAKokB,UAAU+5B,aAC1B,MAAM7tB,EAAUtwB,KAAKokB,UAAUU,OAAO,GACtC,IAAKwL,EACD,MAAM,IAAIxsB,MAAM,qBACpB,OAAOwsB,EAAQ/N,MAAM,KAAK,EAC9B,CAEAimC,WAAAA,GACI,MAAMtkC,EAAWlkB,KAAKokB,UAAUF,SAChC,OAAKA,EAGE,IACA,IAAIxM,IAAIwM,EAEN5L,QAAQ87B,GAAYA,EAAQ7xB,MAAM,KAAK,KAAOviB,KAAKswB,QAAQ1rB,aAE3DkS,KAAKs9B,GAAYA,EAAQ7xB,MAAM,KAAK,OAPlC,EASf,CACA+lC,mBAAAA,GACI,MAAMI,EAAO,CAAC,EASd,OARA1oD,KAAKokB,UAAUU,OAAOzU,SAAS4U,IAC3B,MAAM0jC,GAAgB,EAAIhmD,EAAQ22B,YAAYrU,GACxC2jC,GAAY,EAAIjmD,EAAQkmD,WAAW5jC,EAAOjlB,KAAKokB,WACrD,IAAI0kC,EAAe9oD,KAAK+oD,mBAAmBJ,EAAeC,GACtDE,IACAJ,EAAKC,GAAiBG,EAC1B,IAEGJ,CACX,CACAM,eAAAA,GACI,MAAM/jC,EAAQ,GAAGjlB,KAAKswB,UAChBo4B,EAAO1oD,KAAKqoD,cAAcpjC,GAChC,GAAoB,qBAATyjC,EACP,MAAM,IAAI5kD,MAAM,yBAAyBmhB,eAE7C,OAAOyjC,CACX,CACAD,eAAAA,CAAgBn4B,EAAS8uB,GACrB,MAAMsJ,EAAO1oD,KAAK+oD,mBAAmBz4B,EAAS8uB,GAC1CsJ,IACA1oD,KAAKqoD,cAAc/3B,GAAWo4B,EAEtC,CACAK,kBAAAA,CAAmBz4B,EAAS8uB,GAExB,MAAM6J,EAAM7J,EACZ,GAAK6J,EAIA,CACD,MAAMP,EAAO,IAAIN,EAAkBc,gBAAgB,IAAIf,EAAoBgB,kBAAkBF,GAAK,EAAItmD,EAAQymD,WAAW,yBACzH,OAAOV,CACX,CACJ,CACA3G,gBAAAA,CAAiBte,GACb,OAAO,CACX,EAEJrkC,EAAAA,WAAkBkqD,C,qCCrHNxpD,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACb,IAAIwB,EAAatB,MAAQA,KAAKsB,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMtC,GAAS,OAAOA,aAAiBoC,EAAIpC,EAAQ,IAAIoC,GAAE,SAAUG,GAAWA,EAAQvC,EAAQ,GAAI,CAC3G,OAAO,IAAKoC,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU1C,GAAS,IAAM2C,EAAKN,EAAUO,KAAK5C,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAS9C,GAAS,IAAM2C,EAAKN,EAAU,SAASrC,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKd,GAAUA,EAAOkB,KAAOR,EAAQV,EAAO7B,OAASsC,EAAMT,EAAO7B,OAAOgD,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACA/C,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ2uB,oBAAiB,EACzB,MAAMprB,EAAU7C,EAAQ,OAClB0C,EAAc1C,EAAQ,OACtBi0C,EAASj0C,EAAQ,OACjBsoD,EAAoBtoD,EAAQ,OAC5BqoD,EAAsBroD,EAAQ,OACpC,MAAMiuB,EACF5qB,WAAAA,CAAYw5C,EAAM5gB,EAAQ14B,GACtBrD,KAAKwR,KAAO,SACZxR,KAAKokB,UAAYu4B,EAAKv4B,UACtBpkB,KAAKqD,OAASA,EACdrD,KAAK+7B,OAASA,EACd/7B,KAAKswB,QAAUyJ,SAAS/5B,KAAK0hD,mBAE7B1hD,KAAKqoD,cAAgBroD,KAAKsoD,uBAC1B,EAAIvU,EAAOvvC,UAAU,4CAA0Cm4C,EAAKv4B,UACxE,CACAi/B,QAAAA,CAAShkD,GACL,MAAwB,kBAAVA,GAAgC,OAAVA,IAAmBmY,MAAMqiC,QAAQx6C,EACzE,CACAw6C,OAAAA,CAAQx6C,GACJ,MAAwB,kBAAVA,GAAgC,OAAVA,GAAkBmY,MAAMqiC,QAAQx6C,EACxE,CACAkqD,mBAAAA,CAAoB9lB,GAChB,IAAI+lB,EAAQ/lB,EAAK/5B,QAAiC,kBAAhB+5B,EAAK/5B,SAAwB8N,MAAMqiC,QAAQpW,EAAK/5B,QAClF,GAAoB,+BAAhB+5B,EAAKxxB,OAAyC,CAC9C,MAAM6nB,EAAgB2J,EAAKnT,QAAQ/N,MAAM,KAAK,GAExCknC,EAAgB1vB,SAASD,EAAe,IAC9C,GAAIgf,MAAM2Q,GACN,MAAM,IAAI1V,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwBkoB,oBAAqB,sCAAsCmJ,OAE/H,GAAK2J,EAAK/5B,OAGL,KAAI8/C,EAQL,MAAM,IAAIzV,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwBkoB,oBAAqB,oCAAoC8S,EAAKxxB,YARlH,CACZ,IAAIvI,EAAS+5B,EAAK/5B,OACZ,YAAaA,IACfA,EAAO,WAAa,KAAO+/C,EAAc7kD,SAAS,IAClD6+B,EAAK/5B,OAASA,EAEtB,CAGA,MAXI+5B,EAAK/5B,OAAS,CAAE4mB,QAAS,KAAOm5B,EAAc7kD,SAAS,IAY/D,MACK,GAAoB,kBAAhB6+B,EAAKxxB,QACS,yBAAhBwxB,EAAKxxB,QACW,wBAAhBwxB,EAAKxxB,QACW,sBAAhBwxB,EAAKxxB,OAAgC,CACxC,IAAKwxB,EAAK/5B,OACN,MAAM,IAAIqqC,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwBkoB,oBAAqB,mCAAmC8S,EAAKxxB,WAEjI,IAAIjS,KAAKqjD,SAAS5f,EAAK/5B,QA0BnB,MAAM,IAAIqqC,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwBkoB,oBAAqB,yCAAyC8S,EAAKxxB,WA1BvG,CAC5B,IAAIvI,EAAS+5B,EAAK/5B,OAElB,IADA,EAAIqqC,EAAOvvC,UAAU,qCAAsC+W,KAAKC,UAAU9R,IACtE,YAAaA,EAAQ,CACrB,MAAMggD,EAAkBjmB,EAAKnT,QAAQ/N,MAAM,KAAK,GAC1ConC,EAAW5vB,SAAS2vB,EAAiB,IAC3C,IACIE,EADAC,EAAoB/e,OAAOphC,EAAO4mB,SAEtC,GAAIu5B,EAAkBl3C,WAAW3S,KAAKwR,OAASiyB,EAAKnT,UAAYu5B,EAC5DD,EAAgBD,OAEf,GAAIE,EAAkBl3C,WAAW,MAClCi3C,EAAgB7vB,SAAS8vB,EAAmB,QAE3C,IAAK/Q,MAAM98B,OAAO6tC,IAInB,MAAM,IAAI9V,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwBkoB,oBAAqB,2CAA2C8S,EAAKxxB,WAHrI23C,EAAgB7vB,SAAS8vB,EAAmB,GAIhD,CACA,GAAIF,IAAaC,EACb,MAAM,IAAI7V,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwBkoB,oBAAqB,qDAAqD8S,EAAKxxB,WAEvJ,CACJ,CAIJ,CACJ,CAEA63C,UAAAA,CAAWrmB,GACP,GAAoB,+BAAhBA,EAAKxxB,QACc,4BAAhBwxB,EAAKxxB,QACW,sBAAhBwxB,EAAKxxB,QACW,wBAAhBwxB,EAAKxxB,QACR,GAAIjS,KAAK65C,QAAQpW,EAAK/5B,QAAS,CAC3B,IAAIq8C,EAAYtiB,EAAK/5B,OACrB,GAAIq8C,EAAW,CACX,GAAyB,IAArBA,EAAUz+C,OAMT,MAAIy+C,EAAUz+C,OAAS,EAClB,IAAIysC,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwBiV,cAAe,mDAAmD+lB,EAAKxxB,YAGjI,IAAI8hC,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwBiV,cAAe,oCAAoC+lB,EAAKxxB,YAVhG,CACxB,IAAI+zC,EAAaviB,EAAK/5B,OAAO,GACzB1J,KAAKqjD,SAAS2C,KACdviB,EAAK/5B,OAASs8C,EAEtB,CAOJ,CACJ,OAEC,GAAoB,yBAAhBviB,EAAKxxB,QACV,GAAIjS,KAAK65C,QAAQpW,EAAK/5B,QAAS,CAC3B,IAAIq8C,EAAYtiB,EAAK/5B,OACrB,GAAIq8C,GAAaA,EAAUz+C,OAAS,EAChC,MAAM,IAAIysC,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwBiV,cAAe,mDAAmD+lB,EAAKxxB,YAEtI,GAAI8zC,GAAkC,IAArBA,EAAUz+C,OAC5B,MAAM,IAAIysC,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwBiV,cAAe,oCAAoC+lB,EAAKxxB,YAE5H,IAAI8D,EAAa,CAAC,EAClB,GAAIgwC,GAAkC,IAArBA,EAAUz+C,OAAc,CACrC,IAAIyiD,EAAatmB,EAAK/5B,OAAO,GAC7B,IAAIqgD,GAAoC,kBAAfA,EAoBrB,MAAM,IAAIhW,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwBiV,cAAe,wDAAwD+lB,EAAKxxB,YApB9F,CAC9C,IAAI+3C,GAAU,EAQd,GAPAhqD,KAAKokB,UAAUF,SAAS7T,SAAS+jC,IAC7B,IAAI6V,GAAe,EAAItnD,EAAQihD,sBAAsBxP,GACjD6V,EAAazW,gBAAkBuW,EAAWvW,gBAC1CwW,GAAU,EACd,KAEJ,EAAIjW,EAAOvvC,UAAU,sDAAuDwlD,IACvEA,EACD,MAAM,IAAIjW,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwBiV,cAAe,sDAAsD+lB,EAAKxxB,YAE9I,IAAIjS,KAAKqjD,SAAS5f,EAAK/5B,OAAO,IAI1B,MAAM,IAAIqqC,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwBiV,cAAe,gDAAgD+lB,EAAKxxB,YAHpI8D,EAAa0tB,EAAK/5B,OAAO,EAKjC,CAIJ,MACK,GAAIq8C,GAAkC,IAArBA,EAAUz+C,OAAc,CAC1C,IAAItH,KAAKqjD,SAAS5f,EAAK/5B,OAAO,IAI1B,MAAM,IAAIqqC,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwBiV,cAAe,gDAAgD+lB,EAAKxxB,YAHpI8D,EAAa0tB,EAAK/5B,OAAO,EAKjC,CACA,IACI,IAAIwgD,EAAW3uC,KAAKC,UAAUzF,GAC9B0tB,EAAK/5B,OAAS,CACVmwB,cAAeqwB,EAEvB,CACA,MAAO3hD,GACH,MAAM,IAAIwrC,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwBiV,cAAe,0DAA0D+lB,EAAKxxB,WAClJ,CACJ,OAEC,GAAoB,kBAAhBwxB,EAAKxxB,QACNjS,KAAK65C,QAAQpW,EAAK/5B,QAAS,CAC3B,GAAI+5B,EAAK/5B,QAAU+5B,EAAK/5B,OAAOpC,OAAS,EACpC,MAAM,IAAIysC,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwBiV,cAAe,mCAAmC+lB,EAAKxxB,YAEtH,GAAIwxB,EAAK/5B,QAAiC,IAAvB+5B,EAAK/5B,OAAOpC,OAChC,MAAM,IAAIysC,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwBiV,cAAe,oCAAoC+lB,EAAKxxB,YAE5H,IAAIg0C,EAAWxiB,EAAK/5B,OAAO,GACvBygD,EAAY1mB,EAAK/5B,OAAO,GAC5B,GAAIygD,GAAkC,kBAAdA,EAAwB,CAC5C,IAAIH,GAAU,EAQd,GAPAhqD,KAAKokB,UAAUF,SAAS7T,SAAS+jC,IAC7B,IAAI6V,GAAe,EAAItnD,EAAQihD,sBAAsBxP,GACjD6V,EAAazW,gBAAkB2W,EAAU3W,gBACzCwW,GAAU,EACd,KAEJ,EAAIjW,EAAOvvC,UAAU,+CAAgDwlD,IAChEA,EACD,MAAM,IAAIjW,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwBiV,cAAe,2CAA2C+lB,EAAKxxB,WAEvI,CACA,IAAIg0C,GAAgC,kBAAbA,EAMnB,MAAM,IAAIlS,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwBiV,cAAe,sCAAsC+lB,EAAKxxB,YAL1HwxB,EAAK/5B,OAAS,CACVE,QAASq8C,EAMrB,CAER,CACAlE,gBAAAA,CAAiBte,GACb,OAAQA,EAAKxxB,QACT,IAAK,sBACL,IAAK,eACL,IAAK,cACD,OAAO,EACX,IAAK,sBACL,IAAK,sBACL,IAAK,WACL,IAAK,gBACL,IAAK,oBACL,IAAK,0BACL,IAAK,oBACL,IAAK,uBACD,OAAO,EACX,IAAK,6BAA8B,CAC/BjS,KAAK8pD,WAAWrmB,GAChBzjC,KAAKupD,oBAAoB9lB,GACzB,MAAM,cAAEklB,EAAa,WAAEyB,GAAepqD,KAAKqqD,yBAAyB5mB,GACpE,OAAQzjC,KAAKsqD,gBAAgB3B,EACjC,CACA,QACI,OAAO,EAEf,OAAO,CACX,CACA4B,8BAAAA,CAA+B9mB,GAC3BzjC,KAAKokB,UAAUF,SAAS7T,SAAS+jC,IACzBA,EAAQ77B,SAASkrB,EAAKnT,WACtBmT,EAAKnf,SAAU,EAAI3hB,EAAQihD,sBAAsBxP,GACrD,GAER,CACAh5B,OAAAA,CAAQqoB,GACJ,OAAOniC,EAAUtB,UAAM,OAAQ,GAAQ,YAMnC,OALAA,KAAK8pD,WAAWrmB,IAChB,EAAIsQ,EAAOvvC,UAAU,iCAAkC+W,KAAKC,UAAUioB,IACtEzjC,KAAKupD,oBAAoB9lB,IACzB,EAAIsQ,EAAOvvC,UAAU,mCAAoC+W,KAAKC,UAAUioB,IACxEzjC,KAAKuqD,+BAA+B9mB,GAC5BA,EAAKxxB,QACT,IAAK,sBACD,OAAOjS,KAAKwoD,cAChB,IAAK,eACD,OAAOxoD,KAAKwoD,cAChB,IAAK,cACD,OAAOzuB,SAAS/5B,KAAK0hD,mBACzB,IAAK,6BACD,aAAc1hD,KAAKwqD,kBAAkB/mB,GAEzC,IAAK,0BACD,OAAOzjC,KAAKyqD,iBAAiBhnB,GACjC,QACI,MAER,IAAIzjC,KAAKokB,UAAUQ,QAAQrM,SAASkrB,EAAKxxB,QA2BrC,OADA,EAAI8hC,EAAOvvC,UAAU,6BACRxE,KAAKgpD,kBAAkB5tC,QAAQqoB,GAtB5C,IACI,MAAMnmB,QAAiBtd,KAAK+7B,OAAO3gB,QAAQqoB,GAE3C,IADA,EAAIsQ,EAAOvvC,UAAU,uCAAwC+W,KAAKC,UAAU8B,IACxEtd,KAAKqjD,SAAS/lC,IACV,WAAYA,EAAU,CACtB,IAAIpc,EAASoc,EAASpc,OACtB,OAAIA,GAA4B,kBAAXA,GAAmC,SAAXA,GAAgC,UAAXA,EAI3Doc,EAASpc,SAHZ,EAAI6yC,EAAOvvC,UAAU,yCAAqD,SAAXtD,GAC5C,SAAXA,EAGhB,CAEJ,OAAOoc,CACX,CACA,MAAOpb,GAEH,MADA,EAAI6xC,EAAOvvC,UAAU,2EAA2EtC,aAAa6xC,EAAOvrC,kBAAmB+S,KAAKC,UAAUtZ,IAChJA,CACV,CAMR,GACJ,CACAuoD,gBAAAA,CAAiBhnB,GACb,OAAOniC,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,IAAI0qD,QAAoB1qD,KAAK+7B,OAAO3gB,QAAQqoB,GAC5C,IACI,GAAI,WAAYinB,EAAY,CACxB,IACItW,EAAUsW,EAAWxpD,OACzB,GAAIkzC,EAAS,CACT,MAAM3lB,EAAY2lB,EAAQ7xB,MAAM,KAAK,GAC/B+N,EAAU8jB,EAAQ7xB,MAAM,KAAK,GAC7B0C,EAAQwJ,EAAY,IAAM6B,EACbtwB,KAAKokB,UAGxB,GAFApkB,KAAKokB,UAAUF,SAASzN,KAAK29B,GAC7Bp0C,KAAKokB,UAAUU,OAAOrO,KAAKwO,GACvBjlB,KAAKqjD,SAAS5f,EAAK/5B,SACf,YAAa+5B,EAAK/5B,OAAQ,CAC1B,IAAIihD,EAAUlnB,EAAK/5B,OAAOihD,QACtBvL,EAASuL,EAAUA,EAAQ,QAAKrqD,EAChC8+C,IACIp/C,KAAKokB,UAAUkjC,OACftnD,KAAKokB,UAAUkjC,OAAOh3B,GAAW8uB,EAGjCp/C,KAAKokB,UAAUkjC,OAAS,CACpB,CAACh3B,GAAU8uB,GAGnBp/C,KAAKyoD,gBAAgBn4B,EAAS8uB,GAEtC,CAEJp/C,KAAKqD,OAAOwB,KAAKrC,EAAYu+C,gBAAgBI,kBAAmB,CAC5DyJ,OAAQ5qD,KAAKokB,WAErB,CACJ,MAEI,IAAI2vB,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwBiV,cAAe,cAAc+lB,EAAKxxB,uBAEpG,CACA,MAAOV,GACH,MAAM,IAAIwiC,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwBiV,cAAe,cAAc+lB,EAAKxxB,wBACtG,CACA,OAAO,IACX,GACJ,CACAs2C,eAAAA,CAAgBnkC,GACZpkB,KAAKokB,UAAYllB,OAAOkf,OAAOpe,KAAKokB,UAAWA,EACnD,CACA+6B,eAAAA,CAAgB7uB,EAAS8uB,GAGrB,GAFAp/C,KAAKswB,QAAUyJ,SAASzJ,IAEnBtwB,KAAKqoD,cAAc/3B,GAAU,CAC9B,MAAM24B,EAAM7J,IAAU,EAAIz8C,EAAQkmD,WAAW,GAAG7oD,KAAKwR,QAAQ8e,IAAWtwB,KAAKokB,WACxE6kC,EAKDjpD,KAAKyoD,gBAAgBn4B,EAAS24B,IAH9B,EAAIlV,EAAOxtC,UAAU,oCAAoC+pB,IAKjE,CACAtwB,KAAKqD,OAAOwB,KAAKrC,EAAYu+C,gBAAgBC,sBAAuB,GAAGhhD,KAAKwR,QAAQ8e,IACxF,CACAxB,eAAAA,GACI,OAAO9uB,KAAKwoD,aAChB,CACA9G,eAAAA,GACI,GAAI1hD,KAAKswB,QACL,OAAOtwB,KAAKswB,QAAQ1rB,WACxB,GAAI5E,KAAKokB,UAAU+5B,aACf,OAAOn+C,KAAKokB,UAAU+5B,aAC1B,MAAM7tB,EAAUtwB,KAAKokB,UAAUU,OAAO,GACtC,IAAKwL,EACD,MAAM,IAAIxsB,MAAM,qBACpB,OAAOwsB,EAAQ/N,MAAM,KAAK,EAC9B,CAEAimC,WAAAA,GACI,MAAMtkC,EAAWlkB,KAAKokB,UAAUF,SAEhC,OADA,EAAI6vB,EAAOvvC,UAAU,sBAAuB0f,EAAUlkB,KAAKswB,SACtDpM,EAGE,IACA,IAAIxM,IAAIwM,EAEN5L,QAAQ87B,GAAYA,EAAQ7xB,MAAM,KAAK,KAAOviB,KAAKswB,QAAQ1rB,aAE3DkS,KAAKs9B,IACC,EAAIzxC,EAAQihD,sBAAsBxP,OARtC,EAWf,CACAiW,wBAAAA,CAAyB5mB,GACrB,IAAI/5B,EAAS+5B,EAAK/5B,OACd0gD,EAAa,MACb1gD,GAAU,YAAaA,IACvB0gD,EAAa1gD,EAAO4mB,SAExB85B,EAAaA,EAAWz3C,WAAW,MAAQy3C,EAAa,KAAKA,KAC7D,EAAIrW,EAAOvvC,UAAU,gCAA8Bi/B,IACnD,EAAIsQ,EAAOvvC,UAAU,sCAAoC4lD,GACzD,MAAMzB,EAAgB5uB,SAASqwB,EAAY,IAE3C,OADA,EAAIrW,EAAOvvC,UAAU,yCAAuCmkD,GACrD,CAAEA,gBAAeyB,aAC5B,CACAI,iBAAAA,CAAkB/mB,GACd,OAAOniC,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,MAAM,cAAE2oD,EAAa,WAAEyB,GAAepqD,KAAKqqD,yBAAyB5mB,GACpE,IAAIzjC,KAAKsqD,gBAAgB3B,GAIrB,MAAM,IAAI5U,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwBgoB,oBAAqB,cAAcgT,EAAKxxB,yBAHxGjS,KAAKm/C,gBAAgB,GAAGwJ,IAKhC,GACJ,CACA2B,eAAAA,CAAgBh6B,GACZ,OAAOtwB,KAAKokB,UAAUU,OAAOvM,SAAS,GAAGvY,KAAKwR,QAAQ8e,IAC1D,CAEAy4B,kBAAAA,CAAmBz4B,EAAS8uB,GAExB,MAAM6J,EAAM7J,EACZ,GAAK6J,EAIA,CACD,MAAMP,EAAO,IAAIN,EAAkBc,gBAAgB,IAAIf,EAAoBgB,kBAAkBF,GAAK,EAAItmD,EAAQymD,WAAW,yBACzH,OAAOV,CACX,EANI,EAAI3U,EAAOxtC,UAAU,oCAAoC+pB,IAOjE,CACAg4B,mBAAAA,GACI,MAAMI,EAAO,CAAC,EAWd,OAVA1oD,KAAKokB,UAAUU,OAAOzU,SAAS4U,IAC3B,MAAM0jC,GAAgB,EAAIhmD,EAAQ22B,YAAYrU,GACxC2jC,GAAY,EAAIjmD,EAAQkmD,WAAW5jC,EAAOjlB,KAAKokB,YACrD,EAAI2vB,EAAOvvC,UAAU,4BAA6BmkD,EAAeC,GACjE,IAAIE,EAAe9oD,KAAK+oD,mBAAmBJ,EAAeC,GACtDE,IACAJ,EAAKC,GAAiBG,EAC1B,KAEJ,EAAI/U,EAAOvvC,UAAU,wBAAyBkkD,GACvCA,CACX,CACAD,eAAAA,CAAgBn4B,EAAS8uB,GACrB,MAAMsJ,EAAO1oD,KAAK+oD,mBAAmBz4B,EAAS8uB,GAC1CsJ,IACA1oD,KAAKqoD,cAAc/3B,GAAWo4B,EAEtC,CACAM,eAAAA,GACI,MAAM/jC,EAAQ,GAAGjlB,KAAKswB,UAChBo4B,EAAO1oD,KAAKqoD,cAAcpjC,GAEhC,IADA,EAAI8uB,EAAOvvC,UAAU,2BAA4BygB,EAAOyjC,GACpC,qBAATA,EACP,MAAM,IAAI5kD,MAAM,yBAAyBmhB,eAE7C,OAAOyjC,CACX,EAEJtpD,EAAQ2uB,eAAiBA,EACzB3uB,EAAAA,WAAkB2uB,C,qCCxclB,IAAIzsB,EAAatB,MAAQA,KAAKsB,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMtC,GAAS,OAAOA,aAAiBoC,EAAIpC,EAAQ,IAAIoC,GAAE,SAAUG,GAAWA,EAAQvC,EAAQ,GAAI,CAC3G,OAAO,IAAKoC,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU1C,GAAS,IAAM2C,EAAKN,EAAUO,KAAK5C,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAS9C,GAAS,IAAM2C,EAAKN,EAAU,SAASrC,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKd,GAAUA,EAAOkB,KAAOR,EAAQV,EAAO7B,OAASsC,EAAMT,EAAO7B,OAAOgD,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACIuS,EAAmBxU,MAAQA,KAAKwU,iBAAoB,SAAUvT,GAC9D,OAAQA,GAAOA,EAAIR,WAAcQ,EAAM,CAAE,QAAWA,EACxD,EACA/B,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ+pD,uBAAoB,EAC5B,MAAMtmD,EAAkB/C,EAAQ,OAC1BwlC,EAAgB9wB,EAAgB1U,EAAQ,QACxCi0C,EAASj0C,EAAQ,OACjB+qD,EAAS/qD,EAAQ,OACjB6lC,EAAuB,CACzBC,OAAQ,mBACR,eAAgB,oBAEdC,EAAsB,OACtBC,EAAqB,CACvBC,QAASJ,EACT1zB,OAAQ4zB,GAIZ,MAAMsjB,EACFhmD,WAAAA,CAAYC,EAAK0nD,GAAsB,GAMnC,GALA9qD,KAAKoD,IAAMA,EACXpD,KAAK8qD,oBAAsBA,EAC3B9qD,KAAKqD,OAAS,IAAIR,EAAgBS,aAClCtD,KAAK+qD,aAAc,EACnB/qD,KAAKgrD,aAAc,IACd,EAAIH,EAAOruB,WAAWp5B,GACvB,MAAM,IAAIU,MAAM,wDAAwDV,KAE5EpD,KAAKoD,IAAMA,EACXpD,KAAK8qD,oBAAsBA,CAC/B,CACA,aAAI1Q,GACA,OAAOp6C,KAAK+qD,WAChB,CACA,cAAI3mD,GACA,OAAOpE,KAAKgrD,WAChB,CACAhkD,EAAAA,CAAGjC,EAAOuF,GACNtK,KAAKqD,OAAO2D,GAAGjC,EAAOuF,EAC1B,CACAhC,IAAAA,CAAKvD,EAAOuF,GACRtK,KAAKqD,OAAOiF,KAAKvD,EAAOuF,EAC5B,CACAC,GAAAA,CAAIxF,EAAOuF,GACPtK,KAAKqD,OAAOkH,IAAIxF,EAAOuF,EAC3B,CACAf,cAAAA,CAAexE,EAAOuF,GAClBtK,KAAKqD,OAAOkG,eAAexE,EAAOuF,EACtC,CACAssB,IAAAA,GACI,OAAOt1B,EAAUtB,KAAMqI,eAAW,GAAQ,UAAWjF,EAAMpD,KAAKoD,WACtDpD,KAAKirD,SAAS7nD,EACxB,GACJ,CACA2D,KAAAA,GACI,OAAOzF,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,IAAKA,KAAK+qD,YACN,MAAM,IAAIjnD,MAAM,6BAEpB9D,KAAK8E,SACT,GACJ,CACAqB,IAAAA,CAAKd,GACD,OAAO/D,EAAUtB,UAAM,OAAQ,GAAQ,YAC9BA,KAAK+qD,oBACA/qD,KAAKirD,YAEf,IACI,MAAMjjB,GAAO,EAAI+L,EAAOtpC,mBAAmBpF,GACrC4iC,QAAY,EAAI3C,EAAcjwB,SAASrV,KAAKoD,IAAKlE,OAAOkf,OAAOlf,OAAOkf,OAAO,CAAC,EAAG0nB,GAAqB,CAAEkC,UACxGzjC,QAAa0jC,EAAIyB,OACvB1pC,KAAKsE,UAAU,CAAEC,QACrB,CACA,MAAOrC,GACHlC,KAAKmF,QAAQE,EAAQD,GAAIlD,EAC7B,CACJ,GACJ,CAEA+oD,QAAAA,GACI,OAAO3pD,EAAUtB,KAAMqI,eAAW,GAAQ,UAAWjF,EAAMpD,KAAKoD,KAC5D,KAAK,EAAIynD,EAAOruB,WAAWp5B,GACvB,MAAM,IAAIU,MAAM,wDAAwDV,KAE5E,GAAIpD,KAAKgrD,YACL,OAAO,IAAInpD,SAAQ,CAACD,EAASE,KACzB9B,KAAKqD,OAAOiF,KAAK,kBAAmBiJ,IAChCzP,EAAOyP,EAAM,IAEjBvR,KAAKqD,OAAOiF,KAAK,QAAQ,KACrB,GAAgC,qBAArBtI,KAAK+qD,YACZ,OAAOjpD,EAAO,IAAIgC,MAAM,0CAE5BlC,GAAS,GACX,IAGV5B,KAAKoD,IAAMA,EACXpD,KAAKgrD,aAAc,EACnB,IACI,IAAKhrD,KAAK8qD,oBAAqB,CAC3B,MAAM9iB,GAAO,EAAI+L,EAAOtpC,mBAAmB,CAAErF,GAAI,EAAG2M,QAAS,MAAOE,OAAQ,OAAQvI,OAAQ,WACtF,EAAI47B,EAAcjwB,SAASjS,EAAKlE,OAAOkf,OAAOlf,OAAOkf,OAAO,CAAC,EAAG0nB,GAAqB,CAAEkC,SACjG,CACAhoC,KAAK6K,QACT,CACA,MAAO3I,GACH,MAAMqP,EAAQvR,KAAKkrD,WAAWhpD,GAG9B,MAFAlC,KAAKqD,OAAOwB,KAAK,iBAAkB0M,GACnCvR,KAAK8E,UACCyM,CACV,CACJ,GACJ,CACA1G,MAAAA,GACI7K,KAAK+qD,aAAc,EACnB/qD,KAAKgrD,aAAc,EACnBhrD,KAAKqD,OAAOwB,KAAK,OACrB,CACAC,OAAAA,GACI9E,KAAK+qD,aAAc,EACnB/qD,KAAKgrD,aAAc,EACnBhrD,KAAKqD,OAAOwB,KAAK,QACrB,CACAP,SAAAA,CAAUpC,GACN,GAAsB,qBAAXA,EAAEqC,KACT,OACJ,MAAMc,EAA4B,kBAAXnD,EAAEqC,MAAoB,EAAIwvC,EAAOtqC,eAAevH,EAAEqC,MAAQrC,EAAEqC,KACnFvE,KAAKqD,OAAOwB,KAAK,UAAWQ,EAChC,CACAF,OAAAA,CAAQC,EAAIlD,GACR,MAAMqP,EAAQvR,KAAKkrD,WAAWhpD,GACxB0H,EAAU2H,EAAM3H,SAAW2H,EAAM3M,WACjCS,GAAU,EAAIwlD,EAAOpuB,oBAAoBr3B,EAAIwE,GACnD5J,KAAKqD,OAAOwB,KAAK,UAAWQ,EAChC,CACA6lD,UAAAA,CAAWhpD,EAAGkB,EAAMpD,KAAKoD,KACrB,OAAO,EAAIynD,EAAOtuB,sBAAsBr6B,EAAGkB,EAAK,OACpD,EAEJhE,EAAQ+pD,kBAAoBA,C,qCCvJ5B,IAAI7nD,EAAatB,MAAQA,KAAKsB,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMtC,GAAS,OAAOA,aAAiBoC,EAAIpC,EAAQ,IAAIoC,GAAE,SAAUG,GAAWA,EAAQvC,EAAQ,GAAI,CAC3G,OAAO,IAAKoC,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU1C,GAAS,IAAM2C,EAAKN,EAAUO,KAAK5C,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAS9C,GAAS,IAAM2C,EAAKN,EAAU,SAASrC,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKd,GAAUA,EAAOkB,KAAOR,EAAQV,EAAO7B,OAASsC,EAAMT,EAAO7B,OAAOgD,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACA/C,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ8pD,qBAAkB,EAC1B,MAAMrmD,EAAkB/C,EAAQ,OAC1BqrD,EAAUrrD,EAAQ,OAClBi0C,EAASj0C,EAAQ,OACjB+qD,EAAS/qD,EAAQ,OACvB,MAAMopD,UAAwBiC,EAAQC,iBAClCjoD,WAAAA,CAAY0tB,GACR9E,MAAM8E,GACN7wB,KAAKqD,OAAS,IAAIR,EAAgBS,aAClCtD,KAAKo6C,WAAY,EACjBp6C,KAAKoE,YAAa,EAClBpE,KAAKqrD,6BAA8B,EACnCrrD,KAAK6wB,WAAa7wB,KAAKsrD,cAAcz6B,GACjC7wB,KAAK6wB,WAAWupB,WAChBp6C,KAAKy/C,wBAEb,CACA92C,OAAAA,GACI,OAAOrH,EAAUtB,KAAMqI,eAAW,GAAQ,UAAWwoB,EAAa7wB,KAAK6wB,kBAC7D7wB,KAAK42B,KAAK/F,EACpB,GACJ,CACA/nB,UAAAA,GACI,OAAOxH,EAAUtB,UAAM,OAAQ,GAAQ,kBAC7BA,KAAK+G,OACf,GACJ,CACAC,EAAAA,CAAGjC,EAAOuF,GACNtK,KAAKqD,OAAO2D,GAAGjC,EAAOuF,EAC1B,CACAhC,IAAAA,CAAKvD,EAAOuF,GACRtK,KAAKqD,OAAOiF,KAAKvD,EAAOuF,EAC5B,CACAC,GAAAA,CAAIxF,EAAOuF,GACPtK,KAAKqD,OAAOkH,IAAIxF,EAAOuF,EAC3B,CACAf,cAAAA,CAAexE,EAAOuF,GAClBtK,KAAKqD,OAAOkG,eAAexE,EAAOuF,EACtC,CACA8Q,OAAAA,CAAQA,EAASmwC,GACb,OAAOjqD,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,OAAOA,KAAKwrD,eAAc,EAAIzX,EAAO3X,sBAAsBhhB,EAAQnJ,OAAQmJ,EAAQ1R,QAAU,IAAI,EAAIqqC,EAAO5X,kBAAkBv3B,YAC9H2mD,EACJ,GACJ,CAEAC,aAAAA,CAAcpwC,EAASmwC,GACnB,OAAOjqD,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,OAAO,IAAI6B,SAAQ,CAACD,EAASE,IAAWR,EAAUtB,UAAM,OAAQ,GAAQ,YACpE,IAAKA,KAAK6wB,WAAWupB,UACjB,UACUp6C,KAAK42B,MACf,CACA,MAAO10B,GACHJ,EAAOI,EACX,CAEJlC,KAAKqD,OAAO2D,GAAG,GAAGoU,EAAQhW,MAAOkY,KACzB,EAAIy2B,EAAO1X,gBAAgB/e,GAC3Bxb,EAAOwb,EAAS/L,OAGhB3P,EAAQ0b,EAASpc,OACrB,IAEJ,KACI,EAAI2pD,EAAOrmD,UAAU,yBAA0B4W,EAASmwC,SAClDvrD,KAAK6wB,WAAW1qB,KAAKiV,EAASmwC,EACxC,CACA,MAAOrpD,GACHJ,EAAOI,EACX,CACJ,KACJ,GACJ,CACAopD,aAAAA,CAAcz6B,EAAa7wB,KAAK6wB,YAC5B,OAAOA,CACX,CACAvsB,SAAAA,CAAUe,GACNrF,KAAKqD,OAAOwB,KAAK,UAAWQ,IACxB,EAAI0uC,EAAOzX,mBAAmBj3B,GAC9BrF,KAAKqD,OAAOwB,KAAK,GAAGQ,EAAQD,KAAMC,GAGlCrF,KAAKqD,OAAOwB,KAAK,UAAW,CACxBq5B,KAAM74B,EAAQ4M,OACd1N,KAAMc,EAAQqE,QAG1B,CACA5E,OAAAA,CAAQC,GAEAA,GAAwB,MAAfA,EAAMG,MACflF,KAAKqD,OAAOwB,KAAK,QAAS,IAAIf,MAAM,qDAAqDiB,EAAMG,QAAQH,EAAM0O,OAAS,IAAI1O,EAAM0O,UAAY,OAEhJzT,KAAKqD,OAAOwB,KAAK,aACrB,CACA+xB,IAAAA,GACI,OAAOt1B,EAAUtB,KAAMqI,eAAW,GAAQ,UAAWwoB,EAAa7wB,KAAK6wB,YAC/D7wB,KAAK6wB,aAAeA,GAAc7wB,KAAK6wB,WAAWupB,YAElDp6C,KAAK6wB,WAAWupB,WAChBp6C,KAAK+G,QACiB,kBAAf8pB,UACD7wB,KAAK6wB,WAAW+F,KAAK/F,GAC3BA,EAAa7wB,KAAK6wB,YAEtB7wB,KAAK6wB,WAAa7wB,KAAKsrD,cAAcz6B,SAC/B7wB,KAAK6wB,WAAW+F,OACtB52B,KAAKy/C,yBACLz/C,KAAKqD,OAAOwB,KAAK,WACrB,GACJ,CACAkC,KAAAA,GACI,OAAOzF,EAAUtB,UAAM,OAAQ,GAAQ,kBAC7BA,KAAK6wB,WAAW9pB,OAC1B,GACJ,CAEA04C,sBAAAA,GACQz/C,KAAKqrD,8BAETrrD,KAAK6wB,WAAW7pB,GAAG,WAAY3B,GAAYrF,KAAKsE,UAAUe,KAC1DrF,KAAK6wB,WAAW7pB,GAAG,SAAUjC,GAAU/E,KAAK8E,QAAQC,KACpD/E,KAAK6wB,WAAW7pB,GAAG,SAAUuK,GAAUvR,KAAKqD,OAAOwB,KAAK,QAAS0M,KACjEvR,KAAK6wB,WAAW7pB,GAAG,kBAAmBykD,GAAWzrD,KAAK8E,YACtD9E,KAAKqrD,6BAA8B,EACvC,EAEJjsD,EAAQ8pD,gBAAkBA,C,qCC5IdppD,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACb,IAAIwB,EAAatB,MAAQA,KAAKsB,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMtC,GAAS,OAAOA,aAAiBoC,EAAIpC,EAAQ,IAAIoC,GAAE,SAAUG,GAAWA,EAAQvC,EAAQ,GAAI,CAC3G,OAAO,IAAKoC,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU1C,GAAS,IAAM2C,EAAKN,EAAUO,KAAK5C,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAS9C,GAAS,IAAM2C,EAAKN,EAAU,SAASrC,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKd,GAAUA,EAAOkB,KAAOR,EAAQV,EAAO7B,OAASsC,EAAMT,EAAO7B,OAAOgD,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACA/C,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQssD,oBAAiB,EACzB,MAAMlpD,EAAc1C,EAAQ,OACtBi0C,EAASj0C,EAAQ,OACjB6C,EAAU7C,EAAQ,OAClBqoD,EAAsBroD,EAAQ,OAC9BsoD,EAAoBtoD,EAAQ,OAClC,MAAM4rD,EACFvoD,WAAAA,CAAYw5C,EAAMnrC,EAAMuqB,EAAQ14B,GAC5BrD,KAAKwR,KAAO,SACZxR,KAAKokB,UAAYu4B,EAAKv4B,UACtBpkB,KAAKqD,OAASA,EACdrD,KAAK+7B,OAASA,EACd/7B,KAAKswB,QAAUtwB,KAAK0hD,kBACpB1hD,KAAKqoD,cAAgBroD,KAAKsoD,sBAC1BtoD,KAAKwR,KAAOA,CAChB,CACA+2C,eAAAA,CAAgBnkC,GACZpkB,KAAKokB,UAAYllB,OAAOkf,OAAOpe,KAAKokB,UAAWA,EACnD,CACA0K,eAAAA,GACI,OAAO9uB,KAAKwoD,aAChB,CACAptC,OAAAA,CAAQqoB,GACJ,OAAOniC,EAAUtB,UAAM,OAAQ,GAAQ,YAGnC,IAFA,EAAI+zC,EAAOvvC,UAAU,iCAAkC+W,KAAKC,UAAUioB,KACtE,EAAIsQ,EAAOvvC,UAAU,8BAA+BxE,KAAKokB,WACrDpkB,KAAKokB,UAAUQ,QAAQrM,SAASkrB,EAAKxxB,QACrC,OAAOjS,KAAK+7B,OAAO3gB,QAAQqoB,GAG3B,MAAM,IAAIsQ,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwB0vB,qBAAsB,yBAE9F,GACJ,CACAgnB,eAAAA,CAAgB7uB,EAAS8uB,GAEhBp/C,KAAKqoD,cAAc/3B,IACpBtwB,KAAKyoD,gBAAgBn4B,EAAS8uB,GAElCp/C,KAAKswB,QAAUA,EACftwB,KAAKqD,OAAOwB,KAAKrC,EAAYu+C,gBAAgBC,sBAAuB,GAAGhhD,KAAKwR,QAAQ8e,IACxF,CACAoxB,eAAAA,GACI,GAAI1hD,KAAKswB,QACL,OAAOtwB,KAAKswB,QAChB,GAAItwB,KAAKokB,UAAU+5B,aACf,OAAOn+C,KAAKokB,UAAU+5B,aAC1B,MAAM7tB,EAAUtwB,KAAKokB,UAAUU,OAAO,GACtC,IAAKwL,EACD,MAAM,IAAIxsB,MAAM,qBACpB,OAAOwsB,EAAQ/N,MAAM,KAAK,EAC9B,CAEAimC,WAAAA,GACI,MAAMtkC,EAAWlkB,KAAKokB,UAAUF,SAChC,OAAKA,EAGE,IACA,IAAIxM,IAAIwM,EAEN5L,QAAQ87B,GAAYA,EAAQ7xB,MAAM,KAAK,KAAOviB,KAAKswB,QAAQ1rB,aAE3DkS,KAAKs9B,GAAYA,EAAQ7xB,MAAM,KAAK,OAPlC,EASf,CACA+lC,mBAAAA,GACI,MAAMI,EAAO,CAAC,EASd,OARA1oD,KAAKokB,UAAUU,OAAOzU,SAAS4U,IAC3B,MAAM0jC,GAAgB,EAAIhmD,EAAQ22B,YAAYrU,GACxC2jC,GAAY,EAAIjmD,EAAQkmD,WAAW5jC,EAAOjlB,KAAKokB,WACrD,IAAI0kC,EAAe9oD,KAAK+oD,mBAAmBJ,EAAeC,GACtDE,IACAJ,EAAKC,GAAiBG,EAC1B,IAEGJ,CACX,CACAM,eAAAA,GACI,MAAM/jC,EAAQ,GAAGjlB,KAAKswB,UAChBo4B,EAAO1oD,KAAKqoD,cAAcpjC,GAChC,GAAoB,qBAATyjC,EACP,MAAM,IAAI5kD,MAAM,yBAAyBmhB,eAE7C,OAAOyjC,CACX,CACAD,eAAAA,CAAgBn4B,EAAS8uB,GACrB,MAAMsJ,EAAO1oD,KAAK+oD,mBAAmBz4B,EAAS8uB,GAC1CsJ,IACA1oD,KAAKqoD,cAAc/3B,GAAWo4B,EAEtC,CACAK,kBAAAA,CAAmBz4B,EAAS8uB,GAExB,MAAM6J,EAAM7J,EACZ,GAAK6J,EAIA,CACD,MAAMP,EAAO,IAAIN,EAAkBc,gBAAgB,IAAIf,EAAoBgB,kBAAkBF,GAAK,EAAItmD,EAAQymD,WAAW,yBACzH,OAAOV,CACX,CACJ,CACAiD,SAAAA,CAAUr7B,GACN,OAAOtwB,KAAK4rD,iBAAiBt7B,EACjC,CAWAs7B,gBAAAA,CAAiBt7B,GAOb,OANKA,IACDA,EAAUtwB,KAAKokB,UAAU+5B,cACP,OAAZ7tB,QAAgC,IAAZA,OAAqB,EAASA,EAAQ3d,WAAW,aACvE2d,EAAU,UAAUA,MAGrBtwB,KAAKokB,UAAUF,SAAS5L,QAAO,SAAU87B,GAC5C,IAAIyX,EAAazX,EAAQ7xB,MAAM,KAC/B,OAAOspC,EAAWvkD,OAAS,GAAK8sC,EAAQzhC,WAAW2d,EACvD,IAAGxZ,KAAI,SAAUs9B,GACb,IAAIyX,EAAazX,EAAQ7xB,MAAM,KAC/B,OAAOspC,EAAW,EACtB,IAAG,EACP,CACA9J,gBAAAA,CAAiBte,GACb,OAAO,CACX,EAEJrkC,EAAQssD,eAAiBA,EACzBtsD,EAAAA,WAAkBssD,C,qCCpJN5rD,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACb,IAAIwB,EAAatB,MAAQA,KAAKsB,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMtC,GAAS,OAAOA,aAAiBoC,EAAIpC,EAAQ,IAAIoC,GAAE,SAAUG,GAAWA,EAAQvC,EAAQ,GAAI,CAC3G,OAAO,IAAKoC,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU1C,GAAS,IAAM2C,EAAKN,EAAUO,KAAK5C,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAS9C,GAAS,IAAM2C,EAAKN,EAAU,SAASrC,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKd,GAAUA,EAAOkB,KAAOR,EAAQV,EAAO7B,OAASsC,EAAMT,EAAO7B,OAAOgD,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACA/C,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,MAAMmD,EAAc1C,EAAQ,OACtBi0C,EAASj0C,EAAQ,OACjB6C,EAAU7C,EAAQ,OAClBqoD,EAAsBroD,EAAQ,OAC9BsoD,EAAoBtoD,EAAQ,OAClC,MAAMgsD,EACF3oD,WAAAA,CAAYw5C,EAAMnrC,EAAMuqB,EAAQ14B,GAC5BrD,KAAKwR,KAAO,WACZxR,KAAKokB,UAAYu4B,EAAKv4B,UACtBpkB,KAAKqD,OAASA,EACdrD,KAAK+7B,OAASA,EACd/7B,KAAKswB,QAAUtwB,KAAK0hD,kBACpB1hD,KAAKqoD,cAAgBroD,KAAKsoD,sBAC1BtoD,KAAKwR,KAAOA,CAChB,CACA+2C,eAAAA,CAAgBnkC,GACZpkB,KAAKokB,UAAYllB,OAAOkf,OAAOpe,KAAKokB,UAAWA,EACnD,CACA0K,eAAAA,GACI,OAAO9uB,KAAKwoD,aAChB,CACAptC,OAAAA,CAAQqoB,GACJ,OAAOniC,EAAUtB,UAAM,OAAQ,GAAQ,YAGnC,IAFA,EAAI+zC,EAAOvvC,UAAU,mCAAoC+W,KAAKC,UAAUioB,KACxE,EAAIsQ,EAAOvvC,UAAU,gCAAiCxE,KAAKokB,WACvDpkB,KAAKokB,UAAUQ,QAAQrM,SAASkrB,EAAKxxB,QACrC,OAAOjS,KAAK+7B,OAAO3gB,QAAQqoB,GAG3B,MAAM,IAAIsQ,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwB0vB,qBAAsB,yBAA2BsL,EAAKxxB,OAE9H,GACJ,CACAktC,eAAAA,CAAgB7uB,EAAS8uB,GAEhBp/C,KAAKqoD,cAAc/3B,IACpBtwB,KAAKyoD,gBAAgBn4B,EAAS8uB,GAElCp/C,KAAKswB,QAAUA,EACftwB,KAAKqD,OAAOwB,KAAKrC,EAAYu+C,gBAAgBC,sBAAuB,GAAGhhD,KAAKwR,QAAQ8e,IACxF,CACAoxB,eAAAA,GACI,GAAI1hD,KAAKswB,QACL,OAAOtwB,KAAKswB,QAChB,GAAItwB,KAAKokB,UAAU+5B,aACf,OAAOn+C,KAAKokB,UAAU+5B,aAC1B,MAAM7tB,EAAUtwB,KAAKokB,UAAUU,OAAO,GACtC,IAAKwL,EACD,MAAM,IAAIxsB,MAAM,qBACpB,OAAOwsB,EAAQ/N,MAAM,KAAK,EAC9B,CAEAimC,WAAAA,GACI,MAAMtkC,EAAWlkB,KAAKokB,UAAUF,SAChC,OAAKA,EAGE,IACA,IAAIxM,IAAIwM,EAEN5L,QAAQ87B,GAAYA,EAAQ7xB,MAAM,KAAK,KAAOviB,KAAKswB,QAAQ1rB,aAE3DkS,KAAKs9B,GAAYA,EAAQ7xB,MAAM,KAAK,OAPlC,EASf,CACA+lC,mBAAAA,GACI,MAAMI,EAAO,CAAC,EASd,OARA1oD,KAAKokB,UAAUU,OAAOzU,SAAS4U,IAC3B,MAAM0jC,GAAgB,EAAIhmD,EAAQ22B,YAAYrU,GACxC2jC,GAAY,EAAIjmD,EAAQkmD,WAAW5jC,EAAOjlB,KAAKokB,WACrD,IAAI0kC,EAAe9oD,KAAK+oD,mBAAmBJ,EAAeC,GACtDE,IACAJ,EAAKC,GAAiBG,EAC1B,IAEGJ,CACX,CACAM,eAAAA,GACI,MAAM/jC,EAAQ,GAAGjlB,KAAKswB,UAChBo4B,EAAO1oD,KAAKqoD,cAAcpjC,GAChC,GAAoB,qBAATyjC,EACP,MAAM,IAAI5kD,MAAM,yBAAyBmhB,eAE7C,OAAOyjC,CACX,CACAD,eAAAA,CAAgBn4B,EAAS8uB,GACrB,MAAMsJ,EAAO1oD,KAAK+oD,mBAAmBz4B,EAAS8uB,GAC1CsJ,IACA1oD,KAAKqoD,cAAc/3B,GAAWo4B,EAEtC,CACAK,kBAAAA,CAAmBz4B,EAAS8uB,GAExB,MAAM6J,EAAM7J,EACZ,GAAK6J,EAIA,CACD,MAAMP,EAAO,IAAIN,EAAkBc,gBAAgB,IAAIf,EAAoBgB,kBAAkBF,GAAK,EAAItmD,EAAQymD,WAAW,yBACzH,OAAOV,CACX,CACJ,CACA3G,gBAAAA,CAAiBte,GACb,OAAO,CACX,EAEJrkC,EAAAA,WAAkB0sD,C,qCCtHNhsD,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACb,IAAIwB,EAAatB,MAAQA,KAAKsB,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMtC,GAAS,OAAOA,aAAiBoC,EAAIpC,EAAQ,IAAIoC,GAAE,SAAUG,GAAWA,EAAQvC,EAAQ,GAAI,CAC3G,OAAO,IAAKoC,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU1C,GAAS,IAAM2C,EAAKN,EAAUO,KAAK5C,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAS9C,GAAS,IAAM2C,EAAKN,EAAU,SAASrC,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKd,GAAUA,EAAOkB,KAAOR,EAAQV,EAAO7B,OAASsC,EAAMT,EAAO7B,OAAOgD,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACA/C,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQmvB,iBAAc,EACtB,MAAM/rB,EAAc1C,EAAQ,OACtBi0C,EAASj0C,EAAQ,OACjB6C,EAAU7C,EAAQ,OAClBqoD,EAAsBroD,EAAQ,OAC9BsoD,EAAoBtoD,EAAQ,OAClC,MAAMyuB,EACFprB,WAAAA,CAAYw5C,EAAM5gB,EAAQ14B,GACtBrD,KAAKwR,KAAOuiC,EAAOzlB,gBACnBtuB,KAAKokB,UAAYu4B,EAAKv4B,UACtBpkB,KAAKqD,OAASA,EACdrD,KAAK+7B,OAASA,EACd/7B,KAAKswB,QAAUtwB,KAAK0hD,kBACpB1hD,KAAKqoD,cAAgBroD,KAAKsoD,qBAC9B,CACAC,eAAAA,CAAgBnkC,GACZpkB,KAAKokB,UAAYllB,OAAOkf,OAAOpe,KAAKokB,UAAWA,EACnD,CACAhJ,OAAAA,CAAQqoB,GACJ,OAAOniC,EAAUtB,UAAM,OAAQ,GAAQ,YAGnC,OAFA,EAAI+zC,EAAOvvC,UAAU,8BAA+B+W,KAAKC,UAAUioB,KACnE,EAAIsQ,EAAOvvC,UAAU,2BAA4BxE,KAAKokB,WAClDpkB,KAAKokB,UAAUQ,QAAQrM,SAASkrB,EAAKxxB,QAC9BjS,KAAK+7B,OAAO3gB,QAAQqoB,GAExBzjC,KAAKgpD,kBAAkB5tC,QAAQqoB,EAC1C,GACJ,CACA3U,eAAAA,GACI,OAAO9uB,KAAKwoD,aAChB,CACArJ,eAAAA,CAAgB7uB,EAAS8uB,GAChBp/C,KAAKqoD,cAAc/3B,IACpBtwB,KAAKyoD,gBAAgBn4B,EAAS8uB,GAElCp/C,KAAKswB,QAAUA,EACftwB,KAAKqD,OAAOwB,KAAKrC,EAAYu+C,gBAAgBC,sBAAuB,GAAGhhD,KAAKwR,QAAQ8e,IACxF,CACAoxB,eAAAA,GACI,GAAI1hD,KAAKswB,QACL,OAAOtwB,KAAKswB,QAChB,GAAItwB,KAAKokB,UAAU+5B,aACf,OAAOn+C,KAAKokB,UAAU+5B,aAC1B,MAAM7tB,EAAUtwB,KAAKokB,UAAUU,OAAO,GACtC,IAAKwL,EACD,MAAM,IAAIxsB,MAAM,qBACpB,OAAOwsB,EAAQ/N,MAAM,KAAK,EAC9B,CAEAimC,WAAAA,GACI,MAAMtkC,EAAWlkB,KAAKokB,UAAUF,SAChC,OAAKA,EAGE,IACA,IAAIxM,IAAIwM,EAEN5L,QAAQ87B,GAAYA,EAAQ7xB,MAAM,KAAK,KAAOviB,KAAKswB,QAAQ1rB,aAE3DkS,KAAKs9B,GAAYA,EAAQ7xB,MAAM,KAAK,OAPlC,EASf,CACA+lC,mBAAAA,GACI,MAAMI,EAAO,CAAC,EASd,OARA1oD,KAAKokB,UAAUU,OAAOzU,SAAS4U,IAC3B,MAAM0jC,GAAgB,EAAIhmD,EAAQ22B,YAAYrU,GACxC2jC,GAAY,EAAIjmD,EAAQkmD,WAAW5jC,EAAOjlB,KAAKokB,WACrD,IAAI0kC,EAAe9oD,KAAK+oD,mBAAmBJ,EAAeC,GACtDE,IACAJ,EAAKC,GAAiBG,EAC1B,IAEGJ,CACX,CACAM,eAAAA,GACI,MAAM/jC,EAAQ,GAAGjlB,KAAKswB,UAChBo4B,EAAO1oD,KAAKqoD,cAAcpjC,GAEhC,IADA,EAAI8uB,EAAOvvC,UAAU,2BAA4BygB,EAAOyjC,GACpC,qBAATA,EACP,MAAM,IAAI5kD,MAAM,yBAAyBmhB,eAE7C,OAAOyjC,CACX,CACAD,eAAAA,CAAgBn4B,EAAS8uB,GACrB,MAAMsJ,EAAO1oD,KAAK+oD,mBAAmBz4B,EAAS8uB,GAC1CsJ,KACA,EAAI3U,EAAOvvC,UAAU,kBAAmB8rB,EAAS8uB,GACjDp/C,KAAKqoD,cAAc/3B,GAAWo4B,EAEtC,CACAK,kBAAAA,CAAmBz4B,EAAS8uB,GAExB,MAAM6J,EAAM7J,EACZ,GAAK6J,EAIA,CACD,MAAMP,EAAO,IAAIN,EAAkBc,gBAAgB,IAAIf,EAAoBgB,kBAAkBF,GAAK,EAAItmD,EAAQymD,WAAW,yBACzH,OAAOV,CACX,EANI,EAAI3U,EAAOxtC,UAAU,oCAAoC+pB,IAOjE,CACAq7B,SAAAA,CAAUr7B,GACN,OAAOtwB,KAAK4rD,iBAAiBt7B,EACjC,CACAs7B,gBAAAA,CAAiBt7B,GAOb,OANKA,IACDA,EAAUtwB,KAAKokB,UAAU+5B,cACP,OAAZ7tB,QAAgC,IAAZA,OAAqB,EAASA,EAAQ3d,WAAW,UACvE2d,EAAU,OAAOA,MAGlBtwB,KAAKokB,UAAUF,SAAS5L,QAAO,SAAU87B,GAC5C,IAAIyX,EAAazX,EAAQ7xB,MAAM,KAC/B,OAAOspC,EAAWvkD,OAAS,GAAK8sC,EAAQzhC,WAAW2d,EACvD,IAAGxZ,KAAI,SAAUs9B,GACb,IAAIyX,EAAazX,EAAQ7xB,MAAM,KAC/B,OAAOspC,EAAW,EACtB,IAAG,EACP,CACA9J,gBAAAA,CAAiBte,GACb,OAAQA,EAAKxxB,QACT,IAAK,kBACL,IAAK,0BACL,IAAK,2BACL,IAAK,qCACD,OAAO,EACX,QACI,OAAO,EAEf,OAAO,CACX,EAEJ7S,EAAQmvB,YAAcA,EACtBnvB,EAAAA,WAAkBmvB,C,qCChJlB,IAAIjtB,EAAatB,MAAQA,KAAKsB,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMtC,GAAS,OAAOA,aAAiBoC,EAAIpC,EAAQ,IAAIoC,GAAE,SAAUG,GAAWA,EAAQvC,EAAQ,GAAI,CAC3G,OAAO,IAAKoC,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU1C,GAAS,IAAM2C,EAAKN,EAAUO,KAAK5C,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAS9C,GAAS,IAAM2C,EAAKN,EAAU,SAASrC,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKd,GAAUA,EAAOkB,KAAOR,EAAQV,EAAO7B,OAASsC,EAAMT,EAAO7B,OAAOgD,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACI8pD,EAAU/rD,MAAQA,KAAK+rD,QAAW,SAAUC,EAAG9pD,GAC/C,IAAI+pD,EAAI,CAAC,EACT,IAAK,IAAIj1B,KAAKg1B,EAAO9sD,OAAOiC,UAAUC,eAAeC,KAAK2qD,EAAGh1B,IAAM90B,EAAEorC,QAAQtW,GAAK,IAC9Ei1B,EAAEj1B,GAAKg1B,EAAEh1B,IACb,GAAS,MAALg1B,GAAqD,oBAAjC9sD,OAAOgtD,sBACtB,KAAIr4C,EAAI,EAAb,IAAgBmjB,EAAI93B,OAAOgtD,sBAAsBF,GAAIn4C,EAAImjB,EAAE1vB,OAAQuM,IAC3D3R,EAAEorC,QAAQtW,EAAEnjB,IAAM,GAAK3U,OAAOiC,UAAUgrD,qBAAqB9qD,KAAK2qD,EAAGh1B,EAAEnjB,MACvEo4C,EAAEj1B,EAAEnjB,IAAMm4C,EAAEh1B,EAAEnjB,IAF4B,CAItD,OAAOo4C,CACX,EACA/sD,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,MAAMmD,EAAc1C,EAAQ,OACtBi0C,EAASj0C,EAAQ,OACjB6C,EAAU7C,EAAQ,OAClBqoD,EAAsBroD,EAAQ,OAC9BsoD,EAAoBtoD,EAAQ,OAClC,MAAMuuB,EACFlrB,WAAAA,CAAYw5C,EAAM5gB,EAAQ14B,GACtBrD,KAAKwR,KAAOuiC,EAAO3lB,gBACnBpuB,KAAKokB,UAAYu4B,EAAKv4B,UACtBpkB,KAAKqD,OAASA,EACdrD,KAAK+7B,OAASA,EACd/7B,KAAKswB,QAAUtwB,KAAK0hD,kBACpB1hD,KAAKqoD,cAAgBroD,KAAKsoD,qBAC9B,CACAC,eAAAA,CAAgBnkC,GACZpkB,KAAKokB,UAAYllB,OAAOkf,OAAOpe,KAAKokB,UAAWA,EACnD,CACAi/B,QAAAA,CAAShkD,GACL,MAAwB,kBAAVA,GAAgC,OAAVA,IAAmBmY,MAAMqiC,QAAQx6C,EACzE,CACA+b,OAAAA,CAAQqoB,GACJ,OAAOniC,EAAUtB,UAAM,OAAQ,GAAQ,YACnC,IAAIgF,EAAI4J,EAAIC,EAAIC,EAGhB,IAFA,EAAIilC,EAAOvvC,UAAU,sCAAuC+W,KAAKC,UAAUioB,KAC3E,EAAIsQ,EAAOvvC,UAAU,2CAA4CxE,KAAKokB,WAClEpkB,KAAKokB,UAAUQ,QAAQrM,SAASkrB,EAAKxxB,QAAS,CAC9C,IAAKwxB,EAAK/5B,OACN,MAAM,IAAIqqC,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwBiV,cAAe,6BAEnF,GAAI1d,KAAKqjD,SAAS5f,EAAK/5B,QAAS,CAC5B,MAAMqF,EAAK00B,EAAK/5B,QAAQ,WAAE0iD,GAAer9C,EAAIs9C,EAAYN,EAAOh9C,EAAI,CAAC,eACrE,IAAIwnC,EAAwG,QAAzF3nC,EAAuC,QAAjC5J,EAAKhF,KAAKokB,UAAU/e,eAA4B,IAAPL,OAAgB,EAASA,EAAGqf,gBAA6B,IAAPzV,OAAgB,EAASA,EAAG0V,QAC5I,SAAU+nC,IACV9V,EAAc8V,EAAU7hC,OAAmG,QAAzF1b,EAAuC,QAAjCD,EAAK7O,KAAKokB,UAAU/e,eAA4B,IAAPwJ,OAAgB,EAASA,EAAGwV,gBAA6B,IAAPvV,OAAgB,EAASA,EAAGwV,UAEnKmf,EAAK/5B,OAAO,QAAU6sC,EACtB9S,EAAK/5B,OAAO,WAAa1J,KAAK0hD,kBAC9Bje,EAAK/5B,OAAO,eAAiB0iD,EAC7B,IAAI9uC,QAAiBtd,KAAK+7B,OAAO3gB,QAAQqoB,GACzC,GAAIzjC,KAAKqjD,SAAS/lC,IAAa,WAAYA,EAAU,CACjD,MAAMpc,EAAS,CACXorD,IAAKhvC,EAASpc,OAAO0D,YAIzB,OAFA,EAAImvC,EAAOvvC,UAAU,0CAA2C+W,KAAKC,UAAU8B,KAC/E,EAAIy2B,EAAOvvC,UAAU,wCAAyC+W,KAAKC,UAAUta,IACtEA,CACX,CACA,MAAM,IAAI6yC,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwBiV,cAAe,mCACnF,CAEI,MAAM,IAAIq2B,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwBiV,cAAe,kCAEvF,CACA,OAAO1d,KAAKgpD,kBAAkB5tC,QAAQqoB,EAC1C,GACJ,CACA3U,eAAAA,GACI,OAAO9uB,KAAKwoD,aAChB,CACArJ,eAAAA,CAAgB7uB,EAAS8uB,GAChBp/C,KAAKqoD,cAAc/3B,IACpBtwB,KAAKyoD,gBAAgBn4B,EAAS8uB,GAElCp/C,KAAKswB,QAAUA,EACftwB,KAAKqD,OAAOwB,KAAKrC,EAAYu+C,gBAAgBC,sBAAuB,GAAGhhD,KAAKwR,QAAQ8e,IACxF,CACAoxB,eAAAA,GACI,GAAI1hD,KAAKswB,QACL,OAAOtwB,KAAKswB,QAChB,GAAItwB,KAAKokB,UAAU+5B,aACf,OAAOn+C,KAAKokB,UAAU+5B,aAC1B,MAAM7tB,EAAUtwB,KAAKokB,UAAUU,OAAO,GACtC,IAAKwL,EACD,MAAM,IAAIxsB,MAAM,qBACpB,OAAOwsB,EAAQ/N,MAAM,KAAK,EAC9B,CAEAimC,WAAAA,GACI,IAAIxjD,EAAI4J,EACR,MAAMsV,EAAWlkB,KAAKokB,UAAUF,SAGhC,IAFA,EAAI6vB,EAAOvvC,UAAU,6BAA8B0f,IACnD,EAAI6vB,EAAOvvC,UAAU,+BAAgC+W,KAAKC,UAAUxb,KAAKokB,aACpEF,EACD,MAAO,GAEX,IAAII,EAAoG,QAAzF1V,EAAuC,QAAjC5J,EAAKhF,KAAKokB,UAAU/e,eAA4B,IAAPL,OAAgB,EAASA,EAAGqf,gBAA6B,IAAPzV,OAAgB,EAASA,EAAG0V,QAE5I,OADA,EAAIyvB,EAAOvvC,UAAU,4BAA6B8f,GAC9CA,EACO,CACHA,GAGD,EACX,CACAgkC,mBAAAA,GACI,MAAMI,EAAO,CAAC,EASd,OARA1oD,KAAKokB,UAAUU,OAAOzU,SAAS4U,IAC3B,MAAM0jC,GAAgB,EAAIhmD,EAAQ22B,YAAYrU,GACxC2jC,GAAY,EAAIjmD,EAAQkmD,WAAW5jC,EAAOjlB,KAAKokB,WACrD,IAAI0kC,EAAe9oD,KAAK+oD,mBAAmBJ,EAAeC,GACtDE,IACAJ,EAAKC,GAAiBG,EAC1B,IAEGJ,CACX,CACAM,eAAAA,GACI,MAAM/jC,EAAQ,GAAGjlB,KAAKswB,UAChBo4B,EAAO1oD,KAAKqoD,cAAcpjC,GAEhC,IADA,EAAI8uB,EAAOvvC,UAAU,2BAA4BygB,EAAOyjC,GACpC,qBAATA,EACP,MAAM,IAAI5kD,MAAM,yBAAyBmhB,eAE7C,OAAOyjC,CACX,CACAD,eAAAA,CAAgBn4B,EAAS8uB,GACrB,MAAMsJ,EAAO1oD,KAAK+oD,mBAAmBz4B,EAAS8uB,GAC1CsJ,KACA,EAAI3U,EAAOvvC,UAAU,kBAAmB8rB,EAAS8uB,GACjDp/C,KAAKqoD,cAAc/3B,GAAWo4B,EAEtC,CACAK,kBAAAA,CAAmBz4B,EAAS8uB,GAExB,MAAM6J,EAAM7J,EACZ,GAAK6J,EAIA,CACD,MAAMP,EAAO,IAAIN,EAAkBc,gBAAgB,IAAIf,EAAoBgB,kBAAkBF,GAAK,EAAItmD,EAAQymD,WAAW,yBACzH,OAAOV,CACX,EANI,EAAI3U,EAAOxtC,UAAU,oCAAoC+pB,IAOjE,CACAyxB,gBAAAA,CAAiBte,GACb,OAAQA,EAAKxxB,QACT,IAAK,sBACD,OAAO,EACX,QACI,OAAO,EAEf,OAAO,CACX,EAEJ7S,EAAAA,WAAkBivB,C,qCCtKNvuB,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACb,IAAIwB,EAAatB,MAAQA,KAAKsB,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAC1E,SAASC,EAAMtC,GAAS,OAAOA,aAAiBoC,EAAIpC,EAAQ,IAAIoC,GAAE,SAAUG,GAAWA,EAAQvC,EAAQ,GAAI,CAC3G,OAAO,IAAKoC,IAAMA,EAAII,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAU1C,GAAS,IAAM2C,EAAKN,EAAUO,KAAK5C,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAS9C,GAAS,IAAM2C,EAAKN,EAAU,SAASrC,GAAS,CAAE,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKd,GAAUA,EAAOkB,KAAOR,EAAQV,EAAO7B,OAASsC,EAAMT,EAAO7B,OAAOgD,KAAKN,EAAWI,EAAW,CAC7GH,GAAMN,EAAYA,EAAUY,MAAMf,EAASC,GAAc,KAAKS,OAClE,GACJ,EACA/C,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,MAAMmD,EAAc1C,EAAQ,OACtBi0C,EAASj0C,EAAQ,OACjB6C,EAAU7C,EAAQ,OAClBqoD,EAAsBroD,EAAQ,OAC9BsoD,EAAoBtoD,EAAQ,OAClC,MAAMysD,EACFppD,WAAAA,CAAYw5C,EAAM5gB,EAAQ14B,GACtBrD,KAAKwR,KAAOuiC,EAAO5S,iBACnBnhC,KAAKokB,UAAYu4B,EAAKv4B,UACtBpkB,KAAKqD,OAASA,EACdrD,KAAK+7B,OAASA,EACd/7B,KAAKswB,QAAUtwB,KAAK0hD,kBACpB1hD,KAAKqoD,cAAgBroD,KAAKsoD,qBAC9B,CACAC,eAAAA,CAAgBnkC,GACZpkB,KAAKokB,UAAYllB,OAAOkf,OAAOpe,KAAKokB,UAAWA,EACnD,CACA0K,eAAAA,GACI,OAAO9uB,KAAKwoD,aAChB,CACAptC,OAAAA,CAAQqoB,GACJ,OAAOniC,EAAUtB,UAAM,OAAQ,GAAQ,YAGnC,IAFA,EAAI+zC,EAAOvvC,UAAU,+BAAgC+W,KAAKC,UAAUioB,KACpE,EAAIsQ,EAAOvvC,UAAU,4BAA6B+W,KAAKC,UAAUxb,KAAKokB,YAClEpkB,KAAKokB,UAAUQ,QAAQrM,SAASkrB,EAAKxxB,QACrC,OAAOjS,KAAK+7B,OAAO3gB,QAAQqoB,GAG3B,MAAM,IAAIsQ,EAAOvrC,gBAAgBurC,EAAOtrC,wBAAwB0vB,qBAAsB,yBAE9F,GACJ,CACAgnB,eAAAA,CAAgB7uB,EAAS8uB,GAEhBp/C,KAAKqoD,cAAc/3B,IACpBtwB,KAAKyoD,gBAAgBn4B,EAAS8uB,GAElCp/C,KAAKswB,QAAUA,EACftwB,KAAKqD,OAAOwB,KAAKrC,EAAYu+C,gBAAgBC,sBAAuB,GAAGhhD,KAAKwR,QAAQ8e,IACxF,CACAoxB,eAAAA,GACI,GAAI1hD,KAAKswB,QACL,OAAOtwB,KAAKswB,QAChB,GAAItwB,KAAKokB,UAAU+5B,aACf,OAAOn+C,KAAKokB,UAAU+5B,aAC1B,MAAM7tB,EAAUtwB,KAAKokB,UAAUU,OAAO,GACtC,IAAKwL,EACD,MAAM,IAAIxsB,MAAM,qBACpB,OAAOwsB,EAAQ/N,MAAM,KAAK,EAC9B,CAEAimC,WAAAA,GACI,MAAMtkC,EAAWlkB,KAAKokB,UAAUF,SAChC,OAAKA,EAGE,IACA,IAAIxM,IAAIwM,EAEN5L,QAAQ87B,GAAYA,EAAQ7xB,MAAM,KAAK,KAAOviB,KAAKswB,QAAQ1rB,aAE3DkS,KAAKs9B,GAAYA,EAAQ7xB,MAAM,KAAK,OAPlC,EASf,CACA+lC,mBAAAA,GACI,MAAMI,EAAO,CAAC,EASd,OARA1oD,KAAKokB,UAAUU,OAAOzU,SAAS4U,IAC3B,MAAM0jC,GAAgB,EAAIhmD,EAAQ22B,YAAYrU,GACxC2jC,GAAY,EAAIjmD,EAAQkmD,WAAW5jC,EAAOjlB,KAAKokB,WACrD,IAAI0kC,EAAe9oD,KAAK+oD,mBAAmBJ,EAAeC,GACtDE,IACAJ,EAAKC,GAAiBG,EAC1B,IAEGJ,CACX,CACAM,eAAAA,GACI,MAAM/jC,EAAQ,GAAGjlB,KAAKswB,UAChBo4B,EAAO1oD,KAAKqoD,cAAcpjC,GAChC,GAAoB,qBAATyjC,EACP,MAAM,IAAI5kD,MAAM,yBAAyBmhB,eAE7C,OAAOyjC,CACX,CACAD,eAAAA,CAAgBn4B,EAAS8uB,GACrB,MAAMsJ,EAAO1oD,KAAK+oD,mBAAmBz4B,EAAS8uB,GAC1CsJ,IACA1oD,KAAKqoD,cAAc/3B,GAAWo4B,EAEtC,CACAK,kBAAAA,CAAmBz4B,EAAS8uB,GAExB,MAAM6J,EAAM7J,EACZ,GAAK6J,EAIA,CACD,MAAMP,EAAO,IAAIN,EAAkBc,gBAAgB,IAAIf,EAAoBgB,kBAAkBF,GAAK,EAAItmD,EAAQymD,WAAW,yBACzH,OAAOV,CACX,CACJ,CACA3G,gBAAAA,CAAiBte,GACb,OAAO,CACX,EAEJrkC,EAAAA,WAAkBmtD,C,qCCpHlB,IAAIxsD,EAAmBC,MAAQA,KAAKD,kBAAqBb,OAAOe,OAAU,SAASC,EAAGC,EAAGC,EAAGC,QAC7EC,IAAPD,IAAkBA,EAAKD,GAC3B,IAAIG,EAAOrB,OAAOsB,yBAAyBL,EAAGC,GACzCG,KAAS,QAASA,GAAQJ,EAAEM,WAAaF,EAAKG,UAAYH,EAAKI,gBAClEJ,EAAO,CAAEK,YAAY,EAAMC,IAAK,WAAa,OAAOV,EAAEC,EAAI,IAE5DlB,OAAOC,eAAee,EAAGG,EAAIE,EACjC,EAAM,SAASL,EAAGC,EAAGC,EAAGC,QACTC,IAAPD,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,EACd,GACI22B,EAAgB/2B,MAAQA,KAAK+2B,cAAiB,SAAS52B,EAAGf,GAC1D,IAAK,IAAI43B,KAAK72B,EAAa,YAAN62B,GAAoB93B,OAAOiC,UAAUC,eAAeC,KAAKjC,EAAS43B,IAAIj3B,EAAgBX,EAASe,EAAG62B,EAC3H,EACA93B,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD03B,EAAaj3B,EAAQ,OAAgBV,GACrC23B,EAAaj3B,EAAQ,OAAWV,E,mCChBhCF,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,G,mCCAtDH,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQgsD,iBAAmBhsD,EAAQotD,wBAAqB,EACxD,MAAMA,GAENptD,EAAQotD,mBAAqBA,EAC7B,MAAMpB,EACFjoD,WAAAA,CAAYspD,GACZ,EAEJrtD,EAAQgsD,iBAAmBA,C,mCCT3BlsD,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQw9C,UAAYx9C,EAAQgqD,eAAY,EACxC,MAAMsD,EAAU,CAAC,EACXtD,EAAan1C,GACRy4C,EAAQz4C,GAEnB7U,EAAQgqD,UAAYA,EACpB,MAAMxM,EAAYA,CAAC3oC,EAAK5U,KACpBqtD,EAAQz4C,GAAO5U,CAAK,EAExBD,EAAQw9C,UAAYA,C,qCCVpB,IAAI78C,EAAmBC,MAAQA,KAAKD,kBAAqBb,OAAOe,OAAU,SAASC,EAAGC,EAAGC,EAAGC,QAC7EC,IAAPD,IAAkBA,EAAKD,GAC3B,IAAIG,EAAOrB,OAAOsB,yBAAyBL,EAAGC,GACzCG,KAAS,QAASA,GAAQJ,EAAEM,WAAaF,EAAKG,UAAYH,EAAKI,gBAClEJ,EAAO,CAAEK,YAAY,EAAMC,IAAK,WAAa,OAAOV,EAAEC,EAAI,IAE5DlB,OAAOC,eAAee,EAAGG,EAAIE,EACjC,EAAM,SAASL,EAAGC,EAAGC,EAAGC,QACTC,IAAPD,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,EACd,GACI22B,EAAgB/2B,MAAQA,KAAK+2B,cAAiB,SAAS52B,EAAGf,GAC1D,IAAK,IAAI43B,KAAK72B,EAAa,YAAN62B,GAAoB93B,OAAOiC,UAAUC,eAAeC,KAAKjC,EAAS43B,IAAIj3B,EAAgBX,EAASe,EAAG62B,EAC3H,EACA93B,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD03B,EAAaj3B,EAAQ,OAAWV,GAChC23B,EAAaj3B,EAAQ,OAAcV,E,qCCjBvBU,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAACA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OACbZ,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQypD,UAAYA,EACpBzpD,EAAQk6B,WAAaA,EACrBl6B,EAAQwkD,qBAAuBA,EAC/BxkD,EAAQutD,uBAAyBA,EACjCvtD,EAAQwtD,aAAeA,EACvBxtD,EAAQytD,YAAcA,EACtBztD,EAAQ6/C,qBAAuBA,EAC/B7/C,EAAQymD,yBAA2BA,EACnC,MAAM9R,EAASj0C,EAAQ,OACvB,SAAS+oD,EAAUv4B,EAAS24B,EAAK6D,GAC7B,IAAI9nD,EACJ,MAAMigB,EAAQ2nC,EAAat8B,GAE3B,OAA+B,QAArBtrB,EAAKikD,EAAI3B,cAA2B,IAAPtiD,OAAgB,EAASA,EAAGigB,EAAM8nC,aACrE,EACR,CACA,SAASzzB,EAAWrU,GAChB,OAAOA,EAAM1M,SAAS,KAAO0M,EAAM1C,MAAM,KAAK,GAAK0C,CACvD,CACA,SAAS2+B,EAAqBxP,GAC1B,IAAKA,EACD,MAAO,GAEX,IACI,IAAIpvB,EAAaovB,EAAQ7xB,MAAM,KAAK7L,MAAM,GACtC4N,EAAUU,EAAW1d,OAAS,EAAI0d,EAAW5M,KAAK,KAAO,GAE7D,OADA,EAAI27B,EAAOvvC,UAAU,4CAA6C8f,EAAS8vB,GACpE9vB,CACX,CACA,MAAOpiB,GAEH,OADA,EAAI6xC,EAAOxtC,UAAU,8BAA+B6tC,GAC7C,EACX,CACJ,CA8FA,SAASuY,EAAuBr8B,GAC5B,MAAuB,kBAAZA,EACAA,EACPA,EAAQ/X,SAAS,MACVwhB,SAASzJ,EAAS,KAE7BA,EAAUA,EAAQ/X,SAAS,KAAO+X,EAAQ/N,MAAM,KAAK,GAAK+N,EACnDwoB,MAAM98B,OAAOsU,IAAYA,EAAUtU,OAAOsU,GACrD,CACA,MAAM08B,EAAiB,IACvB,SAASJ,EAAa3nC,GAClB,MAAOb,EAAW2oC,GAAa9nC,EAAM1C,MAAMyqC,GAC3C,MAAO,CAAE5oC,YAAW2oC,YACxB,CACA,SAASF,EAAYh1C,EAAI,GAAIC,EAAI,IAC7B,MAAO,IAAI,IAAIJ,IAAI,IAAIG,KAAMC,IACjC,CACA,SAASmnC,EAAqBphC,GAC1B,QAAKA,IAGkB,eAAnBA,EAAO3D,aAGP,EAAI65B,EAAO3R,gBAAgB,SAAUvkB,EAAOsR,YAAc,IAGvD02B,KACX,CACA,SAASA,IACL,IACI,QAAUj3B,OAAOq+B,SACrB,CACA,MAAO/qD,GACH,OAAO,CACX,CACJ,C,uGCpKOkD,GAAG,O,mgBAAR8nD,EAAAA,EAAAA,IAm2BM,MAn2BNC,EAm2BM,EAl2BJC,EAAAA,EAAAA,IAi2BeC,EAAA,MAn2BnBh4C,SAAAi4C,EAAAA,EAAAA,KAGM,IAAkC,EAAlCF,EAAAA,EAAAA,IAAkCG,EAAA,MAHxCl4C,SAAAi4C,EAAAA,EAAAA,KAGiB,IAAWE,EAAA,MAAAA,EAAA,MAH5BC,EAAAA,EAAAA,IAGiB,mBAHjBx7B,EAAA,KAIMm7B,EAAAA,EAAAA,IA81BUM,EAAA,MAl2BhBr4C,SAAAi4C,EAAAA,EAAAA,KAKQ,IAgBU,EAhBVF,EAAAA,EAAAA,IAgBUO,EAAA,CAhBDC,MAAM,eAAa,CACflrC,QAAM4qC,EAAAA,EAAAA,KACf,IAAiDE,EAAA,MAAAA,EAAA,MAAjDK,EAAAA,EAAAA,IAAiD,OAA5CC,MAAA,wBAA2B,eAAW,OAPvDz4C,SAAAi4C,EAAAA,EAAAA,KASU,IAIS,EAJTF,EAAAA,EAAAA,IAISW,EAAA,CAJDH,MAAM,YAAU,CATlCv4C,SAAAi4C,EAAAA,EAAAA,KAUY,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAV7B54C,SAAAi4C,EAAAA,EAAAA,KAWc,IAAgC,gBAAhCO,EAAAA,EAAAA,IAAgC,cAAxB,mBAAe,KAXrCJ,EAAAA,EAAAA,IAW8C,KAACS,EAAAA,EAAAA,IAAGC,EAAAvC,kBAAgB,MAXlE35B,EAAA,OAAAA,EAAA,KAeUm7B,EAAAA,EAAAA,IAISW,EAAA,CAJDH,MAAM,YAAU,CAflCv4C,SAAAi4C,EAAAA,EAAAA,KAgBY,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAhB7B54C,SAAAi4C,EAAAA,EAAAA,KAiBc,IAAyB,gBAAzBO,EAAAA,EAAAA,IAAyB,cAAjB,YAAQ,KAjB9BJ,EAAAA,EAAAA,IAiBuC,KAACS,EAAAA,EAAAA,IAAGE,EAAAplD,eAAa,MAjBxDipB,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAuBQm7B,EAAAA,EAAAA,IAoQUO,EAAA,CApQDC,MAAM,kBAAgB,CAClBlrC,QAAM4qC,EAAAA,EAAAA,KACf,IAAoDE,EAAA,MAAAA,EAAA,MAApDK,EAAAA,EAAAA,IAAoD,OAA/CC,MAAA,wBAA2B,kBAAc,OAzB1Dz4C,SAAAi4C,EAAAA,EAAAA,KA4BU,IAYS,EAZTF,EAAAA,EAAAA,IAYSW,EAAA,CAZDH,MAAM,YAAU,CA5BlCv4C,SAAAi4C,EAAAA,EAAAA,KA6BY,IAIS,EAJTF,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,IAAE,CA7B7B54C,SAAAi4C,EAAAA,EAAAA,KA8Bc,IAEc,EAFdF,EAAAA,EAAAA,IAEciB,EAAA,CAhC5BC,WA8BoCF,EAAAG,OA9BpC,sBAAAf,EAAA,KAAAA,EAAA,GAAAgB,GA8BoCJ,EAAAG,OAAMC,GAAGC,SAAQL,EAAAM,c,CA9BrDr5C,SAAAi4C,EAAAA,EAAAA,KA8BmE,IAErDE,EAAA,MAAAA,EAAA,MAhCdC,EAAAA,EAAAA,IA8BmE,iBA9BnEx7B,EAAA,G,gCAAAA,EAAA,KAmCYm7B,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,IAAE,CAnC7B54C,SAAAi4C,EAAAA,EAAAA,KAoCc,IAEc,EAFdF,EAAAA,EAAAA,IAEciB,EAAA,CAtC5BC,WAoCoCF,EAAAO,cApCpC,sBAAAnB,EAAA,KAAAA,EAAA,GAAAgB,GAoCoCJ,EAAAO,cAAaH,GAAGC,SAAQL,EAAAQ,qB,CApC5Dv5C,SAAAi4C,EAAAA,EAAAA,KAoCiF,IAEnEE,EAAA,MAAAA,EAAA,MAtCdC,EAAAA,EAAAA,IAoCiF,yBApCjFx7B,EAAA,G,gCAAAA,EAAA,OAAAA,EAAA,KA2CUm7B,EAAAA,EAAAA,IAWSW,EAAA,CAXDD,MAAA,0BAA2B,CA3C7Cz4C,SAAAi4C,EAAAA,EAAAA,KA4CY,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,GAAC,CA5C5B54C,SAAAi4C,EAAAA,EAAAA,KA6Cc,IAAqCE,EAAA,MAAAA,EAAA,MAArCK,EAAAA,EAAAA,IAAqC,KAAlCC,MAAA,sBAAwB,UAAM,OA7C/C77B,EAAA,KA+CYm7B,EAAAA,EAAAA,IAMSY,EAAA,CANAC,KAAM,IAAE,CA/C7B54C,SAAAi4C,EAAAA,EAAAA,KAgDc,IAIY,EAJZF,EAAAA,EAAAA,IAIYyB,EAAA,CApD1BP,WAgDkCF,EAAAU,OAhDlC,sBAAAtB,EAAA,KAAAA,EAAA,GAAAgB,GAgDkCJ,EAAAU,OAAMN,GAAEO,YAAY,SAAUN,SAAQN,EAAAa,mBAAoBC,SAAA,I,CAhD5F55C,SAAAi4C,EAAAA,EAAAA,KAiDgB,IAA0C,EAA1CF,EAAAA,EAAAA,IAA0C8B,EAAA,CAA/BC,MAAM,SAAS9vD,MAAM,YAChC+tD,EAAAA,EAAAA,IAA4C8B,EAAA,CAAjCC,MAAM,UAAU9vD,MAAM,aACjC+tD,EAAAA,EAAAA,IAAwC8B,EAAA,CAA7BC,MAAM,QAAQ9vD,MAAM,aAnD/C4yB,EAAA,G,gCAAAA,EAAA,OAAAA,EAAA,KAwDUm7B,EAAAA,EAAAA,IA6BSW,EAAA,CA7BDD,MAAA,4DAA4D,CAxD9Ez4C,SAAAi4C,EAAAA,EAAAA,KAyDY,IAGS,EAHTF,EAAAA,EAAAA,IAGSY,EAAA,CAHAC,KAAM,EAAGH,MAAA,a,CAzD9Bz4C,SAAAi4C,EAAAA,EAAAA,KA0Dc,IAA2DE,EAAA,MAAAA,EAAA,MAA3DK,EAAAA,EAAAA,IAA2D,KAAxDC,MAAA,mCAAqC,mBAAe,IACvDD,EAAAA,EAAAA,IAAwD,KAArDC,MAAA,kCAAoC,iBAAa,OA3DlE77B,EAAA,KA6DYm7B,EAAAA,EAAAA,IAaSY,EAAA,CAbAC,KAAM,IAAE,CA7D7B54C,SAAAi4C,EAAAA,EAAAA,KA8Dc,IAWY,EAXZF,EAAAA,EAAAA,IAWYyB,EAAA,CAzE1BP,WA+D2BF,EAAAgB,eA/D3B,sBAAA5B,EAAA,KAAAA,EAAA,GAAAgB,GA+D2BJ,EAAAgB,eAAcZ,GACtBC,SAAQN,EAAAkB,2BACTN,YAAY,mB,CAjE9B15C,SAAAi4C,EAAAA,EAAAA,KAoEoB,IAAoC,gBADxCJ,EAAAA,EAAAA,IAKEoC,EAAAA,GAAA,MAxElBC,EAAAA,EAAAA,IAoEuCnB,EAAAoB,kBAAZC,K,WADXC,EAAAA,EAAAA,IAKER,EAAA,CAHGj7C,IAAG,iCAAmCw7C,IACtCN,MAAOM,EACPpwD,MAAOowD,G,sCAvE5Bx9B,EAAA,G,gCAAAA,EAAA,KA2EYm7B,EAAAA,EAAAA,IASSY,EAAA,CATAC,KAAM,IAAE,CA3E7B54C,SAAAi4C,EAAAA,EAAAA,KA4Ec,IAOE,CAN2B,aAAnBc,EAAAgB,iBAAc,WADxBM,EAAAA,EAAAA,IAOEC,EAAA,CAnFhB17C,IAAA,EAAAq6C,WA8E2BF,EAAAwB,SA9E3B,sBAAApC,EAAA,KAAAA,EAAA,GAAAgB,GA8E2BJ,EAAAwB,SAAQpB,GAChBC,SAAQN,EAAA0B,6BACTd,YAAY,WACXe,SAA6B,aAAnB1B,EAAAgB,eACXtB,MAAA,gB,+CAlFlBiC,EAAAA,EAAAA,IAAA,UAAA99B,EAAA,OAAAA,EAAA,KAuFUm7B,EAAAA,EAAAA,IAUSW,EAAA,CAVDD,MAAA,0BAA2B,CAvF7Cz4C,SAAAi4C,EAAAA,EAAAA,KAwFY,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,GAAC,CAxF5B54C,SAAAi4C,EAAAA,EAAAA,KAyFc,IAAmCE,EAAA,MAAAA,EAAA,MAAnCK,EAAAA,EAAAA,IAAmC,KAAhCC,MAAA,sBAAwB,QAAI,OAzF7C77B,EAAA,KA2FYm7B,EAAAA,EAAAA,IAKSY,EAAA,CALAC,KAAM,IAAE,CA3F7B54C,SAAAi4C,EAAAA,EAAAA,KA4Fc,IAGY,EAHZF,EAAAA,EAAAA,IAGYyB,EAAA,CA/F1BP,WA4FkCF,EAAAlmB,SA5FlC,sBAAAslB,EAAA,KAAAA,EAAA,GAAAgB,GA4FkCJ,EAAAlmB,SAAQsmB,GAAGC,SAAQN,EAAA6B,qBAAsBjB,YAAY,Y,CA5FvF15C,SAAAi4C,EAAAA,EAAAA,KA6F2B,IAAyB,gBAApCJ,EAAAA,EAAAA,IAC4BoC,EAAAA,GAAA,MA9F5CC,EAAAA,EAAAA,IA6F4CnB,EAAA6B,SAAVC,K,WAAlBR,EAAAA,EAAAA,IAC4BR,EAAA,CADUj7C,IAAG,0BAA4Bi8C,IAAWf,MAAOe,EAC3E7wD,MAAO6wD,G,sCA9FnCj+B,EAAA,G,gCAAAA,EAAA,OAAAA,EAAA,KAmGUm7B,EAAAA,EAAAA,IAUSW,EAAA,CAVDD,MAAA,0BAA2B,CAnG7Cz4C,SAAAi4C,EAAAA,EAAAA,KAoGY,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,GAAC,CApG5B54C,SAAAi4C,EAAAA,EAAAA,KAqGc,IAAoCE,EAAA,MAAAA,EAAA,MAApCK,EAAAA,EAAAA,IAAoC,KAAjCC,MAAA,sBAAwB,SAAK,OArG9C77B,EAAA,KAuGYm7B,EAAAA,EAAAA,IAKSY,EAAA,CALAC,KAAM,IAAE,CAvG7B54C,SAAAi4C,EAAAA,EAAAA,KAwGc,IAGY,EAHZF,EAAAA,EAAAA,IAGYyB,EAAA,CA3G1BP,WAwGkCF,EAAA+B,MAxGlC,sBAAA3C,EAAA,KAAAA,EAAA,GAAAgB,GAwGkCJ,EAAA+B,MAAK3B,GAAGC,SAAQN,EAAAiC,kBAAmBrB,YAAY,S,CAxGjF15C,SAAAi4C,EAAAA,EAAAA,KAyGgB,IAA+C,EAA/CF,EAAAA,EAAAA,IAA+C8B,EAAA,CAApCC,MAAM,QAAS9vD,MAAO+uD,EAAAiC,MAAMC,O,mBACvClD,EAAAA,EAAAA,IAA6C8B,EAAA,CAAlCC,MAAM,OAAQ9vD,MAAO+uD,EAAAiC,MAAME,M,qBA1GtDt+B,EAAA,G,gCAAAA,EAAA,OAAAA,EAAA,KA8HUm7B,EAAAA,EAAAA,IAqBSW,EAAA,CArBDD,MAAA,0BAA2B,CA9H7Cz4C,SAAAi4C,EAAAA,EAAAA,KA+HY,IAGS,EAHTF,EAAAA,EAAAA,IAGSY,EAAA,CAHAC,KAAM,GAAC,CA/H5B54C,SAAAi4C,EAAAA,EAAAA,KAgIc,IAAsCE,EAAA,MAAAA,EAAA,MAAtCK,EAAAA,EAAAA,IAAsC,KAAnCC,MAAA,sBAAwB,WAAO,IAClCD,EAAAA,EAAAA,IAAsC,KAAnCC,MAAA,sBAAwB,WAAO,OAjIhD77B,EAAA,KAmIYm7B,EAAAA,EAAAA,IAeSY,EAAA,CAfAC,KAAM,IAAE,CAnI7B54C,SAAAi4C,EAAAA,EAAAA,KAoIc,IAOY,EAPZF,EAAAA,EAAAA,IAOYyB,EAAA,CA3I1BP,WAoIkCF,EAAAoC,eApIlC,sBAAAhD,EAAA,KAAAA,EAAA,GAAAgB,GAoIkCJ,EAAAoC,eAAchC,GAAGC,SAAQN,EAAAsC,2BAA4BxB,SAAA,GAASF,YAAY,W,CApI5G15C,SAAAi4C,EAAAA,EAAAA,KAsIoB,IAA8B,gBADlCJ,EAAAA,EAAAA,IAKYoC,EAAAA,GAAA,MA1I5BC,EAAAA,EAAAA,IAsImCnB,EAAAsC,gBAARp5C,K,WADXo4C,EAAAA,EAAAA,IAKYR,EAAA,CAHPj7C,IAAKqD,EACL63C,MAAO73C,EACPjY,MAAOiY,G,sCAzI5B2a,EAAA,G,gCAAAA,EAAA,OAAAA,EAAA,KAqJUm7B,EAAAA,EAAAA,IAOSW,EAAA,CAPDD,MAAA,0BAA2B,CArJ7Cz4C,SAAAi4C,EAAAA,EAAAA,KAsJY,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,GAAC,CAtJ5B54C,SAAAi4C,EAAAA,EAAAA,KAuJc,IAAwCE,EAAA,MAAAA,EAAA,MAAxCK,EAAAA,EAAAA,IAAwC,KAArCC,MAAA,sBAAwB,aAAS,OAvJlD77B,EAAA,KAyJYm7B,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAzJ7B54C,SAAAi4C,EAAAA,EAAAA,KA0Jc,IAA2E,EAA3EF,EAAAA,EAAAA,IAA2EuC,EAAA,CA1JzFrB,WA0JiCF,EAAAuC,cA1JjC,sBAAAnD,EAAA,KAAAA,EAAA,GAAAgB,GA0JiCJ,EAAAuC,cAAanC,GAAEO,YAAY,mB,0BA1J5D98B,EAAA,OAAAA,EAAA,KA+JUm7B,EAAAA,EAAAA,IAgBSW,EAAA,CAhBA6C,OAAQ,GAAIC,MAAM,U,CA/JrCx7C,SAAAi4C,EAAAA,EAAAA,KAgKY,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAhK7B54C,SAAAi4C,EAAAA,EAAAA,KAiKc,IAA4DE,EAAA,MAAAA,EAAA,MAA5DK,EAAAA,EAAAA,IAA4D,OAAvDC,MAAA,wBAA2B,0BAAsB,OAjKpE77B,EAAA,M,aAmKYi7B,EAAAA,EAAAA,IAWSoC,EAAAA,GAAA,MA9KrBC,EAAAA,EAAAA,IAqK+BrwD,OAAOwrB,KAAK0jC,EAAA0C,kBAApBx5C,K,WAFXo4C,EAAAA,EAAAA,IAWS1B,EAAA,CAVJC,KAAM,EAENh6C,IAAKqD,G,CAtKtBjC,SAAAi4C,EAAAA,EAAAA,KAwKc,IAKC,EALDF,EAAAA,EAAAA,IAKCiB,EAAA,CA7KfC,WAyK2BF,EAAA0C,gBAAgBx5C,GAAMy5C,QAzKjD,sBAAAvC,GAyK2BJ,EAAA0C,gBAAgBx5C,GAAMy5C,QAAOvC,EACrCsB,UAAW1B,EAAA4C,e,CA1K9B37C,SAAAi4C,EAAAA,EAAAA,KA2Ke,IAAgC,EA3K/CG,EAAAA,EAAAA,KAAAS,EAAAA,EAAAA,IA2KkBE,EAAA0C,gBAAgBx5C,GAAM9F,MAAI,MA3K5CygB,EAAA,G,yDAAAA,EAAA,G,kBAAAA,EAAA,KAiLUm7B,EAAAA,EAAAA,IAwCSW,EAAA,CAxCA6C,OAAQ,GAAIC,MAAM,SAAS/C,MAAA,uB,CAjL9Cz4C,SAAAi4C,EAAAA,EAAAA,KAkLY,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAlL7B54C,SAAAi4C,EAAAA,EAAAA,KAmLc,IAA4DE,EAAA,MAAAA,EAAA,MAA5DK,EAAAA,EAAAA,IAA4D,OAAvDC,MAAA,wBAA2B,0BAAsB,OAnLpE77B,EAAA,KAqLYm7B,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,GAAC,CArL5B54C,SAAAi4C,EAAAA,EAAAA,KAsLc,IAEc,EAFdF,EAAAA,EAAAA,IAEciB,EAAA,CAFA0C,QAAS3C,EAAA6C,kBAAkB,gBAAkBxC,SAAMjB,EAAA,KAAAA,EAAA,OAAQY,EAAA8C,mBAAmB,kB,CAtL1G77C,SAAAi4C,EAAAA,EAAAA,KAsL2H,IAE7GE,EAAA,MAAAA,EAAA,MAxLdC,EAAAA,EAAAA,IAsL2H,cAtL3Hx7B,EAAA,G,kBAAAA,EAAA,KA0LYm7B,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,GAAC,CA1L5B54C,SAAAi4C,EAAAA,EAAAA,KA2Lc,IAAuH,EAAvHF,EAAAA,EAAAA,IAAuHiB,EAAA,CAAzG0C,QAAS3C,EAAA6C,kBAAkB,aAAexC,SAAMjB,EAAA,MAAAA,EAAA,QAAQY,EAAA8C,mBAAmB,e,CA3LvG77C,SAAAi4C,EAAAA,EAAAA,KA2LqH,IAAEE,EAAA,MAAAA,EAAA,MA3LvHC,EAAAA,EAAAA,IA2LqH,UA3LrHx7B,EAAA,G,kBAAAA,EAAA,KA6LYm7B,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,GAAC,CA7L5B54C,SAAAi4C,EAAAA,EAAAA,KA8Lc,IAEc,EAFdF,EAAAA,EAAAA,IAEciB,EAAA,CAFA0C,QAAS3C,EAAA6C,kBAAkB,eAAiBxC,SAAMjB,EAAA,MAAAA,EAAA,QAAQY,EAAA8C,mBAAmB,iB,CA9LzG77C,SAAAi4C,EAAAA,EAAAA,KA8LyH,IAE3GE,EAAA,MAAAA,EAAA,MAhMdC,EAAAA,EAAAA,IA8LyH,cA9LzHx7B,EAAA,G,kBAAAA,EAAA,KAkMYm7B,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,GAAC,CAlM5B54C,SAAAi4C,EAAAA,EAAAA,KAmMc,IAEc,EAFdF,EAAAA,EAAAA,IAEciB,EAAA,CAFA0C,QAAS3C,EAAA6C,kBAAkB,mBAC3BxC,SAAMjB,EAAA,MAAAA,EAAA,QAAQY,EAAA8C,mBAAmB,qB,CApM7D77C,SAAAi4C,EAAAA,EAAAA,KAoMiF,IACnEE,EAAA,MAAAA,EAAA,MArMdC,EAAAA,EAAAA,IAoMiF,iBApMjFx7B,EAAA,G,kBAAAA,EAAA,KAwMYm7B,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,GAAC,CAxM5B54C,SAAAi4C,EAAAA,EAAAA,KAyMc,IAEc,EAFdF,EAAAA,EAAAA,IAEciB,EAAA,CAFA0C,QAAS3C,EAAA6C,kBAAkB,2CAC3BxC,SAAMjB,EAAA,MAAAA,EAAA,QAAQY,EAAA8C,mBAAmB,6C,CA1M7D77C,SAAAi4C,EAAAA,EAAAA,KA0MyG,IAC3FE,EAAA,MAAAA,EAAA,MA3MdC,EAAAA,EAAAA,IA0MyG,eA1MzGx7B,EAAA,G,kBAAAA,EAAA,KA8MYm7B,EAAAA,EAAAA,IAGSY,EAAA,CAHAC,KAAM,GAAC,CA9M5B54C,SAAAi4C,EAAAA,EAAAA,KA+Mc,IACc,EADdF,EAAAA,EAAAA,IACciB,EAAA,CADA0C,QAAS3C,EAAA6C,kBAAkB,YAAcxC,SAAMjB,EAAA,MAAAA,EAAA,QAAQY,EAAA8C,mBAAmB,c,CA/MtG77C,SAAAi4C,EAAAA,EAAAA,KA+MmH,IACrGE,EAAA,MAAAA,EAAA,MAhNdC,EAAAA,EAAAA,IA+MmH,YA/MnHx7B,EAAA,G,kBAAAA,EAAA,KAmNYm7B,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,GAAC,CAnN5B54C,SAAAi4C,EAAAA,EAAAA,KAoNc,IAEc,EAFdF,EAAAA,EAAAA,IAEciB,EAAA,CAFA0C,QAAS3C,EAAA6C,kBAAkB,eAC3BxC,SAAMjB,EAAA,MAAAA,EAAA,QAAQY,EAAA8C,mBAAmB,iB,CArN7D77C,SAAAi4C,EAAAA,EAAAA,KAqN6E,IAC/DE,EAAA,MAAAA,EAAA,MAtNdC,EAAAA,EAAAA,IAqN6E,YArN7Ex7B,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KA2NUm7B,EAAAA,EAAAA,IAWSW,EAAA,CAXA6C,OAAQ,GAAIhD,MAAM,c,CA3NrCv4C,SAAAi4C,EAAAA,EAAAA,KA4NY,IASS,EATTF,EAAAA,EAAAA,IASSY,EAAA,CATAC,KAAM,IAAE,CA5N7B54C,SAAAi4C,EAAAA,EAAAA,KA6Nc,IAOC,EAPDF,EAAAA,EAAAA,IAOC+D,EAAA,CANGjzB,KAAK,UACJkzB,QAAOjD,EAAAkD,eACR9nB,KAAK,qBACJumB,UAAW1B,EAAA4C,e,CAjO9B37C,SAAAi4C,EAAAA,EAAAA,KAkOe,IAAoB,EAlOnCG,EAAAA,EAAAA,KAAAS,EAAAA,EAAAA,IAkOkBE,EAAAkD,gBAAc,MAlOhCr/B,EAAA,G,6BAAAA,EAAA,OAAAA,EAAA,KAwOUm7B,EAAAA,EAAAA,IAWSW,EAAA,CAXA6C,OAAQ,GAAIhD,MAAM,c,CAxOrCv4C,SAAAi4C,EAAAA,EAAAA,KAyOY,IASS,EATTF,EAAAA,EAAAA,IASSY,EAAA,CATAC,KAAM,IAAE,CAzO7B54C,SAAAi4C,EAAAA,EAAAA,KA0Oc,IAOC,EAPDF,EAAAA,EAAAA,IAOC+D,EAAA,CANGjzB,KAAK,UACJkzB,QAAOjD,EAAAoD,kBACRhoB,KAAK,qBACJumB,UAAW1B,EAAA4C,e,CA9O9B37C,SAAAi4C,EAAAA,EAAAA,KA+Oe,IAAsB,EA/OrCG,EAAAA,EAAAA,KAAAS,EAAAA,EAAAA,IA+OkBE,EAAAoD,kBAAgB,MA/OlCv/B,EAAA,G,6BAAAA,EAAA,OAAAA,EAAA,KAsPUm7B,EAAAA,EAAAA,IAWSW,EAAA,CAXA6C,OAAQ,GAAIhD,MAAM,c,CAtPrCv4C,SAAAi4C,EAAAA,EAAAA,KAuPY,IASS,EATTF,EAAAA,EAAAA,IASSY,EAAA,CATAC,KAAM,IAAE,CAvP7B54C,SAAAi4C,EAAAA,EAAAA,KAwPc,IAOC,EAPDF,EAAAA,EAAAA,IAOC+D,EAAA,CANGjzB,KAAK,UACJkzB,QAAOjD,EAAAsD,oBACRloB,KAAK,qBACJumB,UAAW1B,EAAA4C,e,CA5P9B37C,SAAAi4C,EAAAA,EAAAA,KA6Pe,IAAuB,EA7PtCG,EAAAA,EAAAA,KAAAS,EAAAA,EAAAA,IA6PkBE,EAAAsD,mBAAiB,MA7PnCz/B,EAAA,G,6BAAAA,EAAA,OAAAA,EAAA,KAmQUm7B,EAAAA,EAAAA,IAWSW,EAAA,CAXA6C,OAAQ,GAAIhD,MAAM,c,CAnQrCv4C,SAAAi4C,EAAAA,EAAAA,KAoQY,IASS,EATTF,EAAAA,EAAAA,IASSY,EAAA,CATAC,KAAM,IAAE,CApQ7B54C,SAAAi4C,EAAAA,EAAAA,KAqQc,IAOC,EAPDF,EAAAA,EAAAA,IAOC+D,EAAA,CANGjzB,KAAK,SACJkzB,QAAOjD,EAAAwD,iBACRpoB,KAAK,wBACJumB,UAAW1B,EAAA4C,eAAyC,GAAxB5C,EAAAwD,cAActqD,Q,CAzQ7D+N,SAAAi4C,EAAAA,EAAAA,KA0Qe,IAAyB,EA1QxCG,EAAAA,EAAAA,KAAAS,EAAAA,EAAAA,IA0QkBE,EAAAyD,qBAAmB,MA1QrC5/B,EAAA,G,6BAAAA,EAAA,OAAAA,EAAA,M,WAgRUy9B,EAAAA,EAAAA,IAUWoC,EAAAA,GAAA,CAVDld,GAAG,QAAM,CACNwZ,EAAA2D,YAAS,WAApB7E,EAAAA,EAAAA,IAQM,OAzRlBj5C,IAAA,EAiRkC25C,MAAM,gBAAiBwD,QAAK5D,EAAA,MAAAA,EAAA,QAAA/pB,IAAE0qB,EAAA6D,YAAA7D,EAAA6D,cAAAvuB,K,EAClDoqB,EAAAA,EAAAA,IAMM,OANDD,MAAM,gBAAiBwD,QAAK5D,EAAA,MAAAA,EAAA,KAlR/CyE,EAAAA,EAAAA,KAkRyC,QAAW,Y,EACpCpE,EAAAA,EAAAA,IAES,UAFDD,MAAM,eAAgBwD,QAAK5D,EAAA,MAAAA,EAAA,QAAA/pB,IAAE0qB,EAAA6D,YAAA7D,EAAA6D,cAAAvuB,KAAY,OAEjD,eACAoqB,EAAAA,EAAAA,IAAwB,UAApB,mBAAe,KACnBT,EAAAA,EAAAA,IAAoD8E,EAAA,CAAvC7yD,MAAO+uD,EAAA+D,QAAUz8C,KAAM,IAAK08C,MAAM,K,wBAvR/DrC,EAAAA,EAAAA,IAAA,aAAA99B,EAAA,KA8RQm7B,EAAAA,EAAAA,IAmkBUO,EAAA,CAnkBDC,MAAM,kBAAgB,CAClBlrC,QAAM4qC,EAAAA,EAAAA,KACf,IAAkDE,EAAA,MAAAA,EAAA,MAAlDK,EAAAA,EAAAA,IAAkD,OAA7CC,MAAA,wBAA2B,gBAAY,OAhSxDz4C,SAAAi4C,EAAAA,EAAAA,KAmSU,IAogBU,EApgBVF,EAAAA,EAAAA,IAogBUiF,EAAA,CAvyBpB/D,WAmS4BF,EAAAkE,UAnS5B,sBAAA9E,EAAA,MAAAA,EAAA,IAAAgB,GAmS4BJ,EAAAkE,UAAS9D,GAAEtwB,KAAK,cAAeq0B,WAAWpE,EAAAqE,gB,CAnStEn9C,SAAAi4C,EAAAA,EAAAA,KAqSY,IAsEc,EAtEdF,EAAAA,EAAAA,IAsEcqF,EAAA,CAtEDtD,MAAM,MAAM39C,KAAK,Y,CArS1C6D,SAAAi4C,EAAAA,EAAAA,KAsSc,IAIS,EAJTF,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAtSzCv4C,SAAAi4C,EAAAA,EAAAA,KAuSgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAvSjC54C,SAAAi4C,EAAAA,EAAAA,KAwSkB,IAA2F,EAA3FF,EAAAA,EAAAA,IAA2F+D,EAAA,CAAhFjzB,KAAK,UAAWkzB,QAAOjD,EAAAuE,qB,CAxSpDr9C,SAAAi4C,EAAAA,EAAAA,KAwSyE,IAAwBE,EAAA,MAAAA,EAAA,MAxSjGC,EAAAA,EAAAA,IAwSyE,gCAxSzEx7B,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KA4Scm7B,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CA5SzCv4C,SAAAi4C,EAAAA,EAAAA,KA6SgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CA7SjC54C,SAAAi4C,EAAAA,EAAAA,KA8SkB,IAA6E,EAA7EF,EAAAA,EAAAA,IAA6E+D,EAAA,CAAlEjzB,KAAK,UAAWkzB,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAAwE,gB,CA9SpDt9C,SAAAi4C,EAAAA,EAAAA,KA8SmE,IAAgBE,EAAA,MAAAA,EAAA,MA9SnFC,EAAAA,EAAAA,IA8SmE,wBA9SnEx7B,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAkTcm7B,EAAAA,EAAAA,IAMSW,EAAA,CANA6C,OAAQ,GAAIhD,MAAM,c,CAlTzCv4C,SAAAi4C,EAAAA,EAAAA,KAmTgB,IAIS,EAJTF,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,IAAE,CAnTjC54C,SAAAi4C,EAAAA,EAAAA,KAoTkB,IAEY,EAFZF,EAAAA,EAAAA,IAEY+D,EAAA,CAFDjzB,KAAK,UACJkzB,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAAyE,+B,CArTrCv9C,SAAAi4C,EAAAA,EAAAA,KAqTmE,IACjDE,EAAA,MAAAA,EAAA,MAtTlBC,EAAAA,EAAAA,IAqTmE,mDArTnEx7B,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAyTcm7B,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAzTzCv4C,SAAAi4C,EAAAA,EAAAA,KA0TgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CA1TjC54C,SAAAi4C,EAAAA,EAAAA,KA2TkB,IAAgG,EAAhGF,EAAAA,EAAAA,IAAgG+D,EAAA,CAArFjzB,KAAK,UAAWkzB,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAA0E,4B,CA3TpDx9C,SAAAi4C,EAAAA,EAAAA,KA2T+E,IAAuBE,EAAA,MAAAA,EAAA,MA3TtGC,EAAAA,EAAAA,IA2T+E,+BA3T/Ex7B,EAAA,OAAAA,EAAA,OAAAA,EAAA,KA8Tcm7B,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CA9TzCv4C,SAAAi4C,EAAAA,EAAAA,KA+TgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CA/TjC54C,SAAAi4C,EAAAA,EAAAA,KAgUkB,IAA4E,EAA5EF,EAAAA,EAAAA,IAA4E+D,EAAA,CAAjEjzB,KAAK,UAAWkzB,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAA2E,kB,CAhUpDz9C,SAAAi4C,EAAAA,EAAAA,KAgUqE,IAAaE,EAAA,MAAAA,EAAA,MAhUlFC,EAAAA,EAAAA,IAgUqE,qBAhUrEx7B,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAmUcm7B,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAnUzCv4C,SAAAi4C,EAAAA,EAAAA,KAoUgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CApUjC54C,SAAAi4C,EAAAA,EAAAA,KAqUkB,IAA0F,EAA1FF,EAAAA,EAAAA,IAA0F+D,EAAA,CAA/EjzB,KAAK,UAAWkzB,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAA4E,yB,CArUpD19C,SAAAi4C,EAAAA,EAAAA,KAqU4E,IAAoBE,EAAA,MAAAA,EAAA,MArUhGC,EAAAA,EAAAA,IAqU4E,4BArU5Ex7B,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAwUcm7B,EAAAA,EAAAA,IAKSW,EAAA,CALA6C,OAAQ,GAAIhD,MAAM,c,CAxUzCv4C,SAAAi4C,EAAAA,EAAAA,KAyUgB,IAGS,EAHTF,EAAAA,EAAAA,IAGSY,EAAA,CAHAC,KAAM,IAAE,CAzUjC54C,SAAAi4C,EAAAA,EAAAA,KA0UkB,IACY,EADZF,EAAAA,EAAAA,IACY+D,EAAA,CADDjzB,KAAK,UAAWkzB,QAAOjD,EAAA6E,8B,CA1UpD39C,SAAAi4C,EAAAA,EAAAA,KA0UkF,IAChEE,EAAA,MAAAA,EAAA,MA3UlBC,EAAAA,EAAAA,IA0UkF,sCA1UlFx7B,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KA+Ucm7B,EAAAA,EAAAA,IAMSW,EAAA,CANA6C,OAAQ,GAAIhD,MAAM,c,CA/UzCv4C,SAAAi4C,EAAAA,EAAAA,KAgVgB,IAIS,EAJTF,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,IAAE,CAhVjC54C,SAAAi4C,EAAAA,EAAAA,KAiVkB,IAEY,EAFZF,EAAAA,EAAAA,IAEY+D,EAAA,CAFDjzB,KAAK,UACJkzB,QAAOjD,EAAA8E,6B,CAlVrC59C,SAAAi4C,EAAAA,EAAAA,KAkVkE,IAChDE,EAAA,MAAAA,EAAA,MAnVlBC,EAAAA,EAAAA,IAkVkE,6CAlVlEx7B,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAuVcm7B,EAAAA,EAAAA,IAMSW,EAAA,CANA6C,OAAQ,GAAIhD,MAAM,c,CAvVzCv4C,SAAAi4C,EAAAA,EAAAA,KAwVgB,IAIS,EAJTF,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,IAAE,CAxVjC54C,SAAAi4C,EAAAA,EAAAA,KAyVkB,IAEY,EAFZF,EAAAA,EAAAA,IAEY+D,EAAA,CAFDjzB,KAAK,UAAWkzB,QAAOjD,EAAA+E,0B,CAzVpD79C,SAAAi4C,EAAAA,EAAAA,KAyV8E,IAE5DE,EAAA,MAAAA,EAAA,MA3VlBC,EAAAA,EAAAA,IAyV8E,0CAzV9Ex7B,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KA+Vcm7B,EAAAA,EAAAA,IAKSW,EAAA,CALA6C,OAAQ,GAAIhD,MAAM,c,CA/VzCv4C,SAAAi4C,EAAAA,EAAAA,KAgWgB,IAGS,EAHTF,EAAAA,EAAAA,IAGSY,EAAA,CAHAC,KAAM,IAAE,CAhWjC54C,SAAAi4C,EAAAA,EAAAA,KAiWkB,IACY,EADZF,EAAAA,EAAAA,IACY+D,EAAA,CADDjzB,KAAK,UAAWkzB,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAAgF,sB,CAjWpD99C,SAAAi4C,EAAAA,EAAAA,KAiWyE,IACvDE,EAAA,MAAAA,EAAA,MAlWlBC,EAAAA,EAAAA,IAiWyE,uCAjWzEx7B,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAqWcm7B,EAAAA,EAAAA,IAKSW,EAAA,CALA6C,OAAQ,GAAIhD,MAAM,c,CArWzCv4C,SAAAi4C,EAAAA,EAAAA,KAsWgB,IAGS,EAHTF,EAAAA,EAAAA,IAGSY,EAAA,CAHAC,KAAM,IAAE,CAtWjC54C,SAAAi4C,EAAAA,EAAAA,KAuWkB,IACY,EADZF,EAAAA,EAAAA,IACY+D,EAAA,CADDjzB,KAAK,UAAWkzB,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAAiF,4B,CAvWpD/9C,SAAAi4C,EAAAA,EAAAA,KAuW+E,IAC7DE,EAAA,MAAAA,EAAA,MAxWlBC,EAAAA,EAAAA,IAuW+E,4DAvW/Ex7B,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,KA6WYm7B,EAAAA,EAAAA,IAWcqF,EAAA,CAXDtD,MAAM,MAAM39C,KAAK,Y,CA7W1C6D,SAAAi4C,EAAAA,EAAAA,KA8Wc,IAIS,EAJTF,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CA9WzCv4C,SAAAi4C,EAAAA,EAAAA,KA+WgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CA/WjC54C,SAAAi4C,EAAAA,EAAAA,KAgXkB,IAA4E,EAA5EF,EAAAA,EAAAA,IAA4E+D,EAAA,CAAjEjzB,KAAK,UAAWkzB,QAAOjD,EAAAkF,gB,CAhXpDh+C,SAAAi4C,EAAAA,EAAAA,KAgXoE,IAAcE,EAAA,MAAAA,EAAA,MAhXlFC,EAAAA,EAAAA,IAgXoE,sBAhXpEx7B,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAmXcm7B,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAnXzCv4C,SAAAi4C,EAAAA,EAAAA,KAoXgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CApXjC54C,SAAAi4C,EAAAA,EAAAA,KAqXkB,IAAsF,EAAtFF,EAAAA,EAAAA,IAAsF+D,EAAA,CAA3EjzB,KAAK,UAAWkzB,QAAOjD,EAAAmF,qB,CArXpDj+C,SAAAi4C,EAAAA,EAAAA,KAqXyE,IAAmBE,EAAA,MAAAA,EAAA,MArX5FC,EAAAA,EAAAA,IAqXyE,2BArXzEx7B,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,KA2XYm7B,EAAAA,EAAAA,IAgDcqF,EAAA,CAhDDtD,MAAM,MAAM39C,KAAK,2C,CA3X1C6D,SAAAi4C,EAAAA,EAAAA,KA4Xc,IAIS,EAJTF,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CA5XzCv4C,SAAAi4C,EAAAA,EAAAA,KA6XgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CA7XjC54C,SAAAi4C,EAAAA,EAAAA,KA8XkB,IAAiF,EAAjFF,EAAAA,EAAAA,IAAiF+D,EAAA,CAAtEjzB,KAAK,UAAWkzB,QAAOjD,EAAAoF,iB,CA9XpDl+C,SAAAi4C,EAAAA,EAAAA,KA8XqE,IAAkBE,EAAA,MAAAA,EAAA,MA9XvFC,EAAAA,EAAAA,IA8XqE,0BA9XrEx7B,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAkYcm7B,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAlYzCv4C,SAAAi4C,EAAAA,EAAAA,KAmYgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAnYjC54C,SAAAi4C,EAAAA,EAAAA,KAoYkB,IAAyF,EAAzFF,EAAAA,EAAAA,IAAyF+D,EAAA,CAA9EjzB,KAAK,UAAWkzB,QAAOjD,EAAAqF,qB,CApYpDn+C,SAAAi4C,EAAAA,EAAAA,KAoYyE,IAAsBE,EAAA,MAAAA,EAAA,MApY/FC,EAAAA,EAAAA,IAoYyE,8BApYzEx7B,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAwYcm7B,EAAAA,EAAAA,IAMSW,EAAA,CANA6C,OAAQ,GAAIhD,MAAM,c,CAxYzCv4C,SAAAi4C,EAAAA,EAAAA,KAyYgB,IAIS,EAJTF,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,IAAE,CAzYjC54C,SAAAi4C,EAAAA,EAAAA,KA0YkB,IAEY,EAFZF,EAAAA,EAAAA,IAEY+D,EAAA,CAFDjzB,KAAK,UACJkzB,QAAOjD,EAAAsF,8B,CA3YrCp+C,SAAAi4C,EAAAA,EAAAA,KA2YmE,IACjDE,EAAA,MAAAA,EAAA,MA5YlBC,EAAAA,EAAAA,IA2YmE,wCA3YnEx7B,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAgZcm7B,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAhZzCv4C,SAAAi4C,EAAAA,EAAAA,KAiZgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAjZjC54C,SAAAi4C,EAAAA,EAAAA,KAkZkB,IAA8F,EAA9FF,EAAAA,EAAAA,IAA8F+D,EAAA,CAAnFjzB,KAAK,UAAWkzB,QAAOjD,EAAAuF,yB,CAlZpDr+C,SAAAi4C,EAAAA,EAAAA,KAkZ6E,IAAuBE,EAAA,MAAAA,EAAA,MAlZpGC,EAAAA,EAAAA,IAkZ6E,+BAlZ7Ex7B,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAsZcm7B,EAAAA,EAAAA,IAMSW,EAAA,CANA6C,OAAQ,GAAIhD,MAAM,c,CAtZzCv4C,SAAAi4C,EAAAA,EAAAA,KAuZgB,IAIS,EAJTF,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,IAAE,CAvZjC54C,SAAAi4C,EAAAA,EAAAA,KAwZkB,IAEY,EAFZF,EAAAA,EAAAA,IAEY+D,EAAA,CAFDjzB,KAAK,UACJkzB,QAAOjD,EAAAwF,kC,CAzZrCt+C,SAAAi4C,EAAAA,EAAAA,KAyZuE,IACrDE,EAAA,MAAAA,EAAA,MA1ZlBC,EAAAA,EAAAA,IAyZuE,yCAzZvEx7B,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KA8Zcm7B,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CA9ZzCv4C,SAAAi4C,EAAAA,EAAAA,KA+ZgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CA/ZjC54C,SAAAi4C,EAAAA,EAAAA,KAgakB,IAAoG,EAApGF,EAAAA,EAAAA,IAAoG+D,EAAA,CAAzFjzB,KAAK,UAAWkzB,QAAOjD,EAAAyF,4B,CAhapDv+C,SAAAi4C,EAAAA,EAAAA,KAgagF,IAA0BE,EAAA,MAAAA,EAAA,MAha1GC,EAAAA,EAAAA,IAgagF,kCAhahFx7B,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAoacm7B,EAAAA,EAAAA,IAMSW,EAAA,CANA6C,OAAQ,GAAIhD,MAAM,c,CApazCv4C,SAAAi4C,EAAAA,EAAAA,KAqagB,IAIS,EAJTF,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,IAAE,CArajC54C,SAAAi4C,EAAAA,EAAAA,KAsakB,IAEY,EAFZF,EAAAA,EAAAA,IAEY+D,EAAA,CAFDjzB,KAAK,UACJkzB,QAAOjD,EAAA0F,qC,CAvarCx+C,SAAAi4C,EAAAA,EAAAA,KAua0E,IACxDE,EAAA,MAAAA,EAAA,MAxalBC,EAAAA,EAAAA,IAua0E,wCAva1Ex7B,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,KA8aYm7B,EAAAA,EAAAA,IAEcqF,EAAA,CAFDtD,MAAM,MAAM39C,KAAK,e,CA9a1C6D,SAAAi4C,EAAAA,EAAAA,KA+ac,IAAsE,EAAtEF,EAAAA,EAAAA,IAAsE0G,EAAA,CAA3DC,4BAA2B5F,EAAA6F,+BAA6B,2CA/ajF/hC,EAAA,KAkbYm7B,EAAAA,EAAAA,IAEcqF,EAAA,CAFDtD,MAAM,MAAM39C,KAAK,e,CAlb1C6D,SAAAi4C,EAAAA,EAAAA,KAmbc,IAAsE,EAAtEF,EAAAA,EAAAA,IAAsE6G,EAAA,CAA3DF,4BAA2B5F,EAAA+F,+BAA6B,2CAnbjFjiC,EAAA,KAubYm7B,EAAAA,EAAAA,IAEcqF,EAAA,CAFDtD,MAAM,UAAU39C,KAAK,mB,CAvb9C6D,SAAAi4C,EAAAA,EAAAA,KAwbc,IAA8E,EAA9EF,EAAAA,EAAAA,IAA8E+G,EAAA,CAA/DJ,4BAA2B5F,EAAAiG,mCAAiC,2CAxbzFniC,EAAA,KA2bYm7B,EAAAA,EAAAA,IAIcqF,EAAA,CAJDtD,MAAM,OAAO39C,KAAK,gB,CA3b3C6D,SAAAi4C,EAAAA,EAAAA,KA4bc,IAE4D,EAF5DF,EAAAA,EAAAA,IAE4DiH,EAAA,CADvDN,4BAA2B5F,EAAAmG,+BAC3BC,4BAA2BpG,EAAAqG,2B,yEA9b9CviC,EAAA,KAicYm7B,EAAAA,EAAAA,IAqBcqF,EAAA,CArBDtD,MAAM,QAAQ39C,KAAK,iB,CAjc5C6D,SAAAi4C,EAAAA,EAAAA,KAkcc,IAIS,EAJTF,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAlczCv4C,SAAAi4C,EAAAA,EAAAA,KAmcgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAncjC54C,SAAAi4C,EAAAA,EAAAA,KAockB,IAAkF,EAAlFF,EAAAA,EAAAA,IAAkF+D,EAAA,CAAvEjzB,KAAK,UAAWkzB,QAAOjD,EAAAsG,mB,CApcpDp/C,SAAAi4C,EAAAA,EAAAA,KAocuE,IAAiBE,EAAA,MAAAA,EAAA,MApcxFC,EAAAA,EAAAA,IAocuE,yBApcvEx7B,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAwccm7B,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAxczCv4C,SAAAi4C,EAAAA,EAAAA,KAycgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAzcjC54C,SAAAi4C,EAAAA,EAAAA,KA0ckB,IAA0F,EAA1FF,EAAAA,EAAAA,IAA0F+D,EAAA,CAA/EjzB,KAAK,UAAWkzB,QAAOjD,EAAAuG,uB,CA1cpDr/C,SAAAi4C,EAAAA,EAAAA,KA0c2E,IAAqBE,EAAA,MAAAA,EAAA,MA1chGC,EAAAA,EAAAA,IA0c2E,6BA1c3Ex7B,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KA8ccm7B,EAAAA,EAAAA,IAMSW,EAAA,CANA6C,OAAQ,GAAIhD,MAAM,c,CA9czCv4C,SAAAi4C,EAAAA,EAAAA,KA+cgB,IAIS,EAJTF,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,IAAE,CA/cjC54C,SAAAi4C,EAAAA,EAAAA,KAgdkB,IAEY,EAFZF,EAAAA,EAAAA,IAEY+D,EAAA,CAFDjzB,KAAK,UACJkzB,QAAOjD,EAAAwG,gC,CAjdrCt/C,SAAAi4C,EAAAA,EAAAA,KAidqE,IACnDE,EAAA,MAAAA,EAAA,MAldlBC,EAAAA,EAAAA,IAidqE,uCAjdrEx7B,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAwdYm7B,EAAAA,EAAAA,IAmBcqF,EAAA,CAnBDtD,MAAM,SAAS39C,KAAK,sB,CAxd7C6D,SAAAi4C,EAAAA,EAAAA,KAydc,IAIS,EAJTF,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAzdzCv4C,SAAAi4C,EAAAA,EAAAA,KA0dgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CA1djC54C,SAAAi4C,EAAAA,EAAAA,KA2dkB,IAAwF,EAAxFF,EAAAA,EAAAA,IAAwF+D,EAAA,CAA7EjzB,KAAK,UAAWkzB,QAAOjD,EAAAyG,sB,CA3dpDv/C,SAAAi4C,EAAAA,EAAAA,KA2d0E,IAAoBE,EAAA,MAAAA,EAAA,MA3d9FC,EAAAA,EAAAA,IA2d0E,4BA3d1Ex7B,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KA+dcm7B,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CA/dzCv4C,SAAAi4C,EAAAA,EAAAA,KAgegB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAhejC54C,SAAAi4C,EAAAA,EAAAA,KAiekB,IAAgF,EAAhFF,EAAAA,EAAAA,IAAgF+D,EAAA,CAArEjzB,KAAK,UAAWkzB,QAAOjD,EAAA0G,kB,CAjepDx/C,SAAAi4C,EAAAA,EAAAA,KAiesE,IAAgBE,EAAA,MAAAA,EAAA,MAjetFC,EAAAA,EAAAA,IAiesE,wBAjetEx7B,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAqecm7B,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CArezCv4C,SAAAi4C,EAAAA,EAAAA,KAsegB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAtejC54C,SAAAi4C,EAAAA,EAAAA,KAuekB,IAAkF,EAAlFF,EAAAA,EAAAA,IAAkF+D,EAAA,CAAvEjzB,KAAK,UAAWkzB,QAAOjD,EAAA2G,mB,CAvepDz/C,SAAAi4C,EAAAA,EAAAA,KAueuE,IAAiBE,EAAA,MAAAA,EAAA,MAvexFC,EAAAA,EAAAA,IAueuE,yBAvevEx7B,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,KA8eYm7B,EAAAA,EAAAA,IAsFcqF,EAAA,CAtFDtD,MAAM,UAAU39C,KAAK,c,CA9e9C6D,SAAAi4C,EAAAA,EAAAA,KAgfc,IAIS,EAJTF,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAhfzCv4C,SAAAi4C,EAAAA,EAAAA,KAifgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAjfjC54C,SAAAi4C,EAAAA,EAAAA,KAkfkB,IAA+F,EAA/FF,EAAAA,EAAAA,IAA+F+D,EAAA,CAApFjzB,KAAK,UAAWkzB,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAA4G,uB,CAlfpD1/C,SAAAi4C,EAAAA,EAAAA,KAkf0E,IAA2BE,EAAA,MAAAA,EAAA,MAlfrGC,EAAAA,EAAAA,IAkf0E,mCAlf1Ex7B,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAsfcm7B,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAtfzCv4C,SAAAi4C,EAAAA,EAAAA,KAufgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAvfjC54C,SAAAi4C,EAAAA,EAAAA,KAwfkB,IAAsF,EAAtFF,EAAAA,EAAAA,IAAsF+D,EAAA,CAA3EjzB,KAAK,UAAWkzB,QAAOjD,EAAAuE,qB,CAxfpDr9C,SAAAi4C,EAAAA,EAAAA,KAwfyE,IAAmBE,EAAA,OAAAA,EAAA,OAxf5FC,EAAAA,EAAAA,IAwfyE,2BAxfzEx7B,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KA4fcm7B,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CA5fzCv4C,SAAAi4C,EAAAA,EAAAA,KA6fgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CA7fjC54C,SAAAi4C,EAAAA,EAAAA,KA8fkB,IAAwE,EAAxEF,EAAAA,EAAAA,IAAwE+D,EAAA,CAA7DjzB,KAAK,UAAWkzB,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAAwE,gB,CA9fpDt9C,SAAAi4C,EAAAA,EAAAA,KA8fmE,IAAWE,EAAA,OAAAA,EAAA,OA9f9EC,EAAAA,EAAAA,IA8fmE,mBA9fnEx7B,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAkgBcm7B,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAlgBzCv4C,SAAAi4C,EAAAA,EAAAA,KAmgBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAngBjC54C,SAAAi4C,EAAAA,EAAAA,KAogBkB,IAAsG,EAAtGF,EAAAA,EAAAA,IAAsG+D,EAAA,CAA3FjzB,KAAK,UAAWkzB,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAAyE,+B,CApgBpDv9C,SAAAi4C,EAAAA,EAAAA,KAogBkF,IAA0BE,EAAA,OAAAA,EAAA,OApgB5GC,EAAAA,EAAAA,IAogBkF,kCApgBlFx7B,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAugBcm7B,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAvgBzCv4C,SAAAi4C,EAAAA,EAAAA,KAwgBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAxgBjC54C,SAAAi4C,EAAAA,EAAAA,KAygBkB,IAAgG,EAAhGF,EAAAA,EAAAA,IAAgG+D,EAAA,CAArFjzB,KAAK,UAAWkzB,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAA0E,4B,CAzgBpDx9C,SAAAi4C,EAAAA,EAAAA,KAygB+E,IAAuBE,EAAA,OAAAA,EAAA,OAzgBtGC,EAAAA,EAAAA,IAygB+E,+BAzgB/Ex7B,EAAA,OAAAA,EAAA,OAAAA,EAAA,KA4gBcm7B,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CA5gBzCv4C,SAAAi4C,EAAAA,EAAAA,KA6gBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CA7gBjC54C,SAAAi4C,EAAAA,EAAAA,KA8gBkB,IAA4E,EAA5EF,EAAAA,EAAAA,IAA4E+D,EAAA,CAAjEjzB,KAAK,UAAWkzB,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAA2E,kB,CA9gBpDz9C,SAAAi4C,EAAAA,EAAAA,KA8gBqE,IAAaE,EAAA,OAAAA,EAAA,OA9gBlFC,EAAAA,EAAAA,IA8gBqE,qBA9gBrEx7B,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAihBcm7B,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAjhBzCv4C,SAAAi4C,EAAAA,EAAAA,KAkhBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAlhBjC54C,SAAAi4C,EAAAA,EAAAA,KAmhBkB,IAA0F,EAA1FF,EAAAA,EAAAA,IAA0F+D,EAAA,CAA/EjzB,KAAK,UAAWkzB,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAA4E,yB,CAnhBpD19C,SAAAi4C,EAAAA,EAAAA,KAmhB4E,IAAoBE,EAAA,OAAAA,EAAA,OAnhBhGC,EAAAA,EAAAA,IAmhB4E,4BAnhB5Ex7B,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAshBcm7B,EAAAA,EAAAA,IAKSW,EAAA,CALA6C,OAAQ,GAAIhD,MAAM,c,CAthBzCv4C,SAAAi4C,EAAAA,EAAAA,KAuhBgB,IAGS,EAHTF,EAAAA,EAAAA,IAGSY,EAAA,CAHAC,KAAM,IAAE,CAvhBjC54C,SAAAi4C,EAAAA,EAAAA,KAwhBkB,IACY,EADZF,EAAAA,EAAAA,IACY+D,EAAA,CADDjzB,KAAK,UAAWkzB,QAAOjD,EAAA6E,8B,CAxhBpD39C,SAAAi4C,EAAAA,EAAAA,KAwhBkF,IAChEE,EAAA,OAAAA,EAAA,OAzhBlBC,EAAAA,EAAAA,IAwhBkF,sCAxhBlFx7B,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KA6hBcm7B,EAAAA,EAAAA,IAKSW,EAAA,CALA6C,OAAQ,GAAIhD,MAAM,c,CA7hBzCv4C,SAAAi4C,EAAAA,EAAAA,KA8hBgB,IAGS,EAHTF,EAAAA,EAAAA,IAGSY,EAAA,CAHAC,KAAM,IAAE,CA9hBjC54C,SAAAi4C,EAAAA,EAAAA,KA+hBkB,IACY,EADZF,EAAAA,EAAAA,IACY+D,EAAA,CADDjzB,KAAK,UAAWkzB,QAAOjD,EAAA8E,6B,CA/hBpD59C,SAAAi4C,EAAAA,EAAAA,KA+hBiF,IAC/DE,EAAA,OAAAA,EAAA,OAhiBlBC,EAAAA,EAAAA,IA+hBiF,2CA/hBjFx7B,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAoiBcm7B,EAAAA,EAAAA,IAMSW,EAAA,CANA6C,OAAQ,GAAIhD,MAAM,c,CApiBzCv4C,SAAAi4C,EAAAA,EAAAA,KAqiBgB,IAIS,EAJTF,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,IAAE,CAriBjC54C,SAAAi4C,EAAAA,EAAAA,KAsiBkB,IAEY,EAFZF,EAAAA,EAAAA,IAEY+D,EAAA,CAFDjzB,KAAK,UAAWkzB,QAAOjD,EAAA+E,0B,CAtiBpD79C,SAAAi4C,EAAAA,EAAAA,KAsiB8E,IAE5DE,EAAA,OAAAA,EAAA,OAxiBlBC,EAAAA,EAAAA,IAsiB8E,8CAtiB9Ex7B,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KA4iBcm7B,EAAAA,EAAAA,IAKSW,EAAA,CALA6C,OAAQ,GAAIhD,MAAM,c,CA5iBzCv4C,SAAAi4C,EAAAA,EAAAA,KA6iBgB,IAGS,EAHTF,EAAAA,EAAAA,IAGSY,EAAA,CAHAC,KAAM,IAAE,CA7iBjC54C,SAAAi4C,EAAAA,EAAAA,KA8iBkB,IACY,EADZF,EAAAA,EAAAA,IACY+D,EAAA,CADDjzB,KAAK,UAAWkzB,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAAgF,sB,CA9iBpD99C,SAAAi4C,EAAAA,EAAAA,KA8iByE,IACvDE,EAAA,OAAAA,EAAA,OA/iBlBC,EAAAA,EAAAA,IA8iByE,oCA9iBzEx7B,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAmjBcm7B,EAAAA,EAAAA,IAOSW,EAAA,CAPA6C,OAAQ,GAAIhD,MAAM,c,CAnjBzCv4C,SAAAi4C,EAAAA,EAAAA,KAojBgB,IAKS,EALTF,EAAAA,EAAAA,IAKSY,EAAA,CALAC,KAAM,IAAE,CApjBjC54C,SAAAi4C,EAAAA,EAAAA,KAqjBkB,IAGC,EAHDF,EAAAA,EAAAA,IAGC+D,EAAA,CAHUjzB,KAAK,UAAWkzB,QAAOjD,EAAA6E,8B,CArjBpD39C,SAAAi4C,EAAAA,EAAAA,KAsjBmB,IACDE,EAAA,OAAAA,EAAA,OAvjBlBC,EAAAA,EAAAA,IAsjBmB,oCAtjBnBx7B,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KA4jBcm7B,EAAAA,EAAAA,IAOSW,EAAA,CAPA6C,OAAQ,GAAIhD,MAAM,c,CA5jBzCv4C,SAAAi4C,EAAAA,EAAAA,KA6jBgB,IAKS,EALTF,EAAAA,EAAAA,IAKSY,EAAA,CALAC,KAAM,IAAE,CA7jBjC54C,SAAAi4C,EAAAA,EAAAA,KA8jBkB,IAGC,EAHDF,EAAAA,EAAAA,IAGC+D,EAAA,CAHUjzB,KAAK,UAAWkzB,QAAOjD,EAAA8E,6B,CA9jBpD59C,SAAAi4C,EAAAA,EAAAA,KA+jBmB,IACDE,EAAA,OAAAA,EAAA,OAhkBlBC,EAAAA,EAAAA,IA+jBmB,oCA/jBnBx7B,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAukBYm7B,EAAAA,EAAAA,IAyDcqF,EAAA,CAzDDtD,MAAM,MAAM39C,KAAK,a,CAvkB1C6D,SAAAi4C,EAAAA,EAAAA,KAwkBc,IAIS,EAJTF,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAxkBzCv4C,SAAAi4C,EAAAA,EAAAA,KAykBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAzkBjC54C,SAAAi4C,EAAAA,EAAAA,KA0kBkB,IAA2F,EAA3FF,EAAAA,EAAAA,IAA2F+D,EAAA,CAAhFjzB,KAAK,UAAWkzB,QAAOjD,EAAAuE,qB,CA1kBpDr9C,SAAAi4C,EAAAA,EAAAA,KA0kByE,IAAwBE,EAAA,OAAAA,EAAA,OA1kBjGC,EAAAA,EAAAA,IA0kByE,gCA1kBzEx7B,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KA8kBcm7B,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CA9kBzCv4C,SAAAi4C,EAAAA,EAAAA,KA+kBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CA/kBjC54C,SAAAi4C,EAAAA,EAAAA,KAglBkB,IAA6E,EAA7EF,EAAAA,EAAAA,IAA6E+D,EAAA,CAAlEjzB,KAAK,UAAWkzB,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAAwE,gB,CAhlBpDt9C,SAAAi4C,EAAAA,EAAAA,KAglBmE,IAAgBE,EAAA,OAAAA,EAAA,OAhlBnFC,EAAAA,EAAAA,IAglBmE,wBAhlBnEx7B,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAolBcm7B,EAAAA,EAAAA,IAMSW,EAAA,CANA6C,OAAQ,GAAIhD,MAAM,c,CAplBzCv4C,SAAAi4C,EAAAA,EAAAA,KAqlBgB,IAIS,EAJTF,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,IAAE,CArlBjC54C,SAAAi4C,EAAAA,EAAAA,KAslBkB,IAEY,EAFZF,EAAAA,EAAAA,IAEY+D,EAAA,CAFDjzB,KAAK,UACJkzB,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAAyE,+B,CAvlBrCv9C,SAAAi4C,EAAAA,EAAAA,KAulBmE,IACjDE,EAAA,OAAAA,EAAA,OAxlBlBC,EAAAA,EAAAA,IAulBmE,kDAvlBnEx7B,EAAA,OAAAA,EAAA,OAAAA,EAAA,KA2lBcm7B,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CA3lBzCv4C,SAAAi4C,EAAAA,EAAAA,KA4lBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CA5lBjC54C,SAAAi4C,EAAAA,EAAAA,KA6lBkB,IAAgG,EAAhGF,EAAAA,EAAAA,IAAgG+D,EAAA,CAArFjzB,KAAK,UAAWkzB,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAA0E,4B,CA7lBpDx9C,SAAAi4C,EAAAA,EAAAA,KA6lB+E,IAAuBE,EAAA,OAAAA,EAAA,OA7lBtGC,EAAAA,EAAAA,IA6lB+E,+BA7lB/Ex7B,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAgmBcm7B,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAhmBzCv4C,SAAAi4C,EAAAA,EAAAA,KAimBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAjmBjC54C,SAAAi4C,EAAAA,EAAAA,KAkmBkB,IAA4E,EAA5EF,EAAAA,EAAAA,IAA4E+D,EAAA,CAAjEjzB,KAAK,UAAWkzB,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAA2E,kB,CAlmBpDz9C,SAAAi4C,EAAAA,EAAAA,KAkmBqE,IAAaE,EAAA,OAAAA,EAAA,OAlmBlFC,EAAAA,EAAAA,IAkmBqE,qBAlmBrEx7B,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAqmBcm7B,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CArmBzCv4C,SAAAi4C,EAAAA,EAAAA,KAsmBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAtmBjC54C,SAAAi4C,EAAAA,EAAAA,KAumBkB,IAA0F,EAA1FF,EAAAA,EAAAA,IAA0F+D,EAAA,CAA/EjzB,KAAK,UAAWkzB,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAA4E,yB,CAvmBpD19C,SAAAi4C,EAAAA,EAAAA,KAumB4E,IAAoBE,EAAA,OAAAA,EAAA,OAvmBhGC,EAAAA,EAAAA,IAumB4E,4BAvmB5Ex7B,EAAA,OAAAA,EAAA,OAAAA,EAAA,KA0mBcm7B,EAAAA,EAAAA,IAKSW,EAAA,CALA6C,OAAQ,GAAIhD,MAAM,c,CA1mBzCv4C,SAAAi4C,EAAAA,EAAAA,KA2mBgB,IAGS,EAHTF,EAAAA,EAAAA,IAGSY,EAAA,CAHAC,KAAM,IAAE,CA3mBjC54C,SAAAi4C,EAAAA,EAAAA,KA4mBkB,IACY,EADZF,EAAAA,EAAAA,IACY+D,EAAA,CADDjzB,KAAK,UAAWkzB,QAAOjD,EAAA6E,8B,CA5mBpD39C,SAAAi4C,EAAAA,EAAAA,KA4mBkF,IAChEE,EAAA,OAAAA,EAAA,OA7mBlBC,EAAAA,EAAAA,IA4mBkF,sCA5mBlFx7B,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAinBcm7B,EAAAA,EAAAA,IAMSW,EAAA,CANA6C,OAAQ,GAAIhD,MAAM,c,CAjnBzCv4C,SAAAi4C,EAAAA,EAAAA,KAknBgB,IAIS,EAJTF,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,IAAE,CAlnBjC54C,SAAAi4C,EAAAA,EAAAA,KAmnBkB,IAEY,EAFZF,EAAAA,EAAAA,IAEY+D,EAAA,CAFDjzB,KAAK,UACJkzB,QAAOjD,EAAA8E,6B,CApnBrC59C,SAAAi4C,EAAAA,EAAAA,KAonBkE,IAChDE,EAAA,OAAAA,EAAA,OArnBlBC,EAAAA,EAAAA,IAonBkE,0CApnBlEx7B,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAynBcm7B,EAAAA,EAAAA,IAKSW,EAAA,CALA6C,OAAQ,GAAIhD,MAAM,c,CAznBzCv4C,SAAAi4C,EAAAA,EAAAA,KA0nBgB,IAGS,EAHTF,EAAAA,EAAAA,IAGSY,EAAA,CAHAC,KAAM,IAAE,CA1nBjC54C,SAAAi4C,EAAAA,EAAAA,KA2nBkB,IACY,EADZF,EAAAA,EAAAA,IACY+D,EAAA,CADDjzB,KAAK,UAAWkzB,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAAgF,sB,CA3nBpD99C,SAAAi4C,EAAAA,EAAAA,KA2nByE,IACvDE,EAAA,OAAAA,EAAA,OA5nBlBC,EAAAA,EAAAA,IA2nByE,mCA3nBzEx7B,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAkoBYm7B,EAAAA,EAAAA,IA4BcqF,EAAA,CA5BDtD,MAAM,OAAO39C,KAAK,c,CAloB3C6D,SAAAi4C,EAAAA,EAAAA,KAmoBc,IAIS,EAJTF,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAnoBzCv4C,SAAAi4C,EAAAA,EAAAA,KAooBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CApoBjC54C,SAAAi4C,EAAAA,EAAAA,KAqoBkB,IAAsF,EAAtFF,EAAAA,EAAAA,IAAsF+D,EAAA,CAA3EjzB,KAAK,UAAWkzB,QAAOjD,EAAAuE,qB,CAroBpDr9C,SAAAi4C,EAAAA,EAAAA,KAqoByE,IAAmBE,EAAA,OAAAA,EAAA,OAroB5FC,EAAAA,EAAAA,IAqoByE,2BAroBzEx7B,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAyoBcm7B,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAzoBzCv4C,SAAAi4C,EAAAA,EAAAA,KA0oBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CA1oBjC54C,SAAAi4C,EAAAA,EAAAA,KA2oBkB,IAAwE,EAAxEF,EAAAA,EAAAA,IAAwE+D,EAAA,CAA7DjzB,KAAK,UAAWkzB,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAAwE,gB,CA3oBpDt9C,SAAAi4C,EAAAA,EAAAA,KA2oBmE,IAAWE,EAAA,OAAAA,EAAA,OA3oB9EC,EAAAA,EAAAA,IA2oBmE,mBA3oBnEx7B,EAAA,OAAAA,EAAA,OAAAA,EAAA,KA+oBcm7B,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CA/oBzCv4C,SAAAi4C,EAAAA,EAAAA,KAgpBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAhpBjC54C,SAAAi4C,EAAAA,EAAAA,KAipBkB,IAA4E,EAA5EF,EAAAA,EAAAA,IAA4E+D,EAAA,CAAjEjzB,KAAK,UAAWkzB,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAA2E,kB,CAjpBpDz9C,SAAAi4C,EAAAA,EAAAA,KAipBqE,IAAaE,EAAA,OAAAA,EAAA,OAjpBlFC,EAAAA,EAAAA,IAipBqE,qBAjpBrEx7B,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAopBcm7B,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAppBzCv4C,SAAAi4C,EAAAA,EAAAA,KAqpBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CArpBjC54C,SAAAi4C,EAAAA,EAAAA,KAspBkB,IAA0F,EAA1FF,EAAAA,EAAAA,IAA0F+D,EAAA,CAA/EjzB,KAAK,UAAWkzB,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAA4E,yB,CAtpBpD19C,SAAAi4C,EAAAA,EAAAA,KAspB4E,IAAoBE,EAAA,OAAAA,EAAA,OAtpBhGC,EAAAA,EAAAA,IAspB4E,4BAtpB5Ex7B,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAypBcm7B,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAzpBzCv4C,SAAAi4C,EAAAA,EAAAA,KA0pBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CA1pBjC54C,SAAAi4C,EAAAA,EAAAA,KA2pBkB,IAAiG,EAAjGF,EAAAA,EAAAA,IAAiG+D,EAAA,CAAtFjzB,KAAK,UAAWkzB,QAAOjD,EAAA6G,0B,CA3pBpD3/C,SAAAi4C,EAAAA,EAAAA,KA2pB8E,IAAyBE,EAAA,OAAAA,EAAA,OA3pBvGC,EAAAA,EAAAA,IA2pB8E,iCA3pB9Ex7B,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAgqBYm7B,EAAAA,EAAAA,IAgCcqF,EAAA,CAhCDtD,MAAM,gBAAgB39C,KAAK,gB,CAhqBpD6D,SAAAi4C,EAAAA,EAAAA,KAiqBc,IAIS,EAJTF,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAjqBzCv4C,SAAAi4C,EAAAA,EAAAA,KAkqBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAlqBjC54C,SAAAi4C,EAAAA,EAAAA,KAmqBkB,IAAiF,EAAjFF,EAAAA,EAAAA,IAAiF+D,EAAA,CAAtEjzB,KAAK,UAAWkzB,QAAOjD,EAAAoF,iB,CAnqBpDl+C,SAAAi4C,EAAAA,EAAAA,KAmqBqE,IAAkBE,EAAA,OAAAA,EAAA,OAnqBvFC,EAAAA,EAAAA,IAmqBqE,0BAnqBrEx7B,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAuqBcm7B,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAvqBzCv4C,SAAAi4C,EAAAA,EAAAA,KAwqBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAxqBjC54C,SAAAi4C,EAAAA,EAAAA,KAyqBkB,IAAyF,EAAzFF,EAAAA,EAAAA,IAAyF+D,EAAA,CAA9EjzB,KAAK,UAAWkzB,QAAOjD,EAAAqF,qB,CAzqBpDn+C,SAAAi4C,EAAAA,EAAAA,KAyqByE,IAAsBE,EAAA,OAAAA,EAAA,OAzqB/FC,EAAAA,EAAAA,IAyqByE,8BAzqBzEx7B,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KA6qBcm7B,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CA7qBzCv4C,SAAAi4C,EAAAA,EAAAA,KA8qBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CA9qBjC54C,SAAAi4C,EAAAA,EAAAA,KA+qBkB,IAA8F,EAA9FF,EAAAA,EAAAA,IAA8F+D,EAAA,CAAnFjzB,KAAK,UAAWkzB,QAAOjD,EAAAuF,yB,CA/qBpDr+C,SAAAi4C,EAAAA,EAAAA,KA+qB6E,IAAuBE,EAAA,OAAAA,EAAA,OA/qBpGC,EAAAA,EAAAA,IA+qB6E,+BA/qB7Ex7B,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAmrBcm7B,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAnrBzCv4C,SAAAi4C,EAAAA,EAAAA,KAorBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAprBjC54C,SAAAi4C,EAAAA,EAAAA,KAqrBkB,IAAoG,EAApGF,EAAAA,EAAAA,IAAoG+D,EAAA,CAAzFjzB,KAAK,UAAWkzB,QAAOjD,EAAAyF,4B,CArrBpDv+C,SAAAi4C,EAAAA,EAAAA,KAqrBgF,IAA0BE,EAAA,OAAAA,EAAA,OArrB1GC,EAAAA,EAAAA,IAqrBgF,kCArrBhFx7B,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAyrBcm7B,EAAAA,EAAAA,IAMSW,EAAA,CANA6C,OAAQ,GAAIhD,MAAM,c,CAzrBzCv4C,SAAAi4C,EAAAA,EAAAA,KA0rBgB,IAIS,EAJTF,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,IAAE,CA1rBjC54C,SAAAi4C,EAAAA,EAAAA,KA2rBkB,IAEY,EAFZF,EAAAA,EAAAA,IAEY+D,EAAA,CAFDjzB,KAAK,UACJkzB,QAAOjD,EAAA0F,qC,CA5rBrCx+C,SAAAi4C,EAAAA,EAAAA,KA4rB0E,IACxDE,EAAA,OAAAA,EAAA,OA7rBlBC,EAAAA,EAAAA,IA4rB0E,wCA5rB1Ex7B,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAksBYm7B,EAAAA,EAAAA,IAqBcqF,EAAA,CArBDtD,MAAM,mBAAmB39C,KAAK,oB,CAlsBvD6D,SAAAi4C,EAAAA,EAAAA,KAmsBc,IAIS,EAJTF,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAnsBzCv4C,SAAAi4C,EAAAA,EAAAA,KAosBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CApsBjC54C,SAAAi4C,EAAAA,EAAAA,KAqsBkB,IAAkF,EAAlFF,EAAAA,EAAAA,IAAkF+D,EAAA,CAAvEjzB,KAAK,UAAWkzB,QAAOjD,EAAAsG,mB,CArsBpDp/C,SAAAi4C,EAAAA,EAAAA,KAqsBuE,IAAiBE,EAAA,OAAAA,EAAA,OArsBxFC,EAAAA,EAAAA,IAqsBuE,yBArsBvEx7B,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAysBcm7B,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAzsBzCv4C,SAAAi4C,EAAAA,EAAAA,KA0sBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CA1sBjC54C,SAAAi4C,EAAAA,EAAAA,KA2sBkB,IAAwF,EAAxFF,EAAAA,EAAAA,IAAwF+D,EAAA,CAA7EjzB,KAAK,UAAWkzB,QAAOjD,EAAA8G,sB,CA3sBpD5/C,SAAAi4C,EAAAA,EAAAA,KA2sB0E,IAAoBE,EAAA,OAAAA,EAAA,OA3sB9FC,EAAAA,EAAAA,IA2sB0E,4BA3sB1Ex7B,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KA+sBcm7B,EAAAA,EAAAA,IAMSW,EAAA,CANA6C,OAAQ,GAAIhD,MAAM,c,CA/sBzCv4C,SAAAi4C,EAAAA,EAAAA,KAgtBgB,IAIS,EAJTF,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,IAAE,CAhtBjC54C,SAAAi4C,EAAAA,EAAAA,KAitBkB,IAEY,EAFZF,EAAAA,EAAAA,IAEY+D,EAAA,CAFDjzB,KAAK,UACJkzB,QAAOjD,EAAA+G,+B,CAltBrC7/C,SAAAi4C,EAAAA,EAAAA,KAktBoE,IAClDE,EAAA,OAAAA,EAAA,OAntBlBC,EAAAA,EAAAA,IAktBoE,sCAltBpEx7B,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAytBYm7B,EAAAA,EAAAA,IAqBcqF,EAAA,CArBDtD,MAAM,mBAAmB39C,KAAK,oB,CAztBvD6D,SAAAi4C,EAAAA,EAAAA,KA0tBc,IAIS,EAJTF,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CA1tBzCv4C,SAAAi4C,EAAAA,EAAAA,KA2tBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CA3tBjC54C,SAAAi4C,EAAAA,EAAAA,KA4tBkB,IAAiF,EAAjFF,EAAAA,EAAAA,IAAiF+D,EAAA,CAAtEjzB,KAAK,UAAWkzB,QAAOjD,EAAAsG,mB,CA5tBpDp/C,SAAAi4C,EAAAA,EAAAA,KA4tBuE,IAAgBE,EAAA,OAAAA,EAAA,OA5tBvFC,EAAAA,EAAAA,IA4tBuE,wBA5tBvEx7B,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAguBcm7B,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAhuBzCv4C,SAAAi4C,EAAAA,EAAAA,KAiuBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAjuBjC54C,SAAAi4C,EAAAA,EAAAA,KAkuBkB,IAAwF,EAAxFF,EAAAA,EAAAA,IAAwF+D,EAAA,CAA7EjzB,KAAK,UAAWkzB,QAAOjD,EAAA8G,sB,CAluBpD5/C,SAAAi4C,EAAAA,EAAAA,KAkuB0E,IAAoBE,EAAA,OAAAA,EAAA,OAluB9FC,EAAAA,EAAAA,IAkuB0E,4BAluB1Ex7B,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAsuBcm7B,EAAAA,EAAAA,IAMSW,EAAA,CANA6C,OAAQ,GAAIhD,MAAM,c,CAtuBzCv4C,SAAAi4C,EAAAA,EAAAA,KAuuBgB,IAIS,EAJTF,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,IAAE,CAvuBjC54C,SAAAi4C,EAAAA,EAAAA,KAwuBkB,IAEY,EAFZF,EAAAA,EAAAA,IAEY+D,EAAA,CAFDjzB,KAAK,UACJkzB,QAAOjD,EAAA+G,+B,CAzuBrC7/C,SAAAi4C,EAAAA,EAAAA,KAyuBoE,IAClDE,EAAA,OAAAA,EAAA,OA1uBlBC,EAAAA,EAAAA,IAyuBoE,sCAzuBpEx7B,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAivBYm7B,EAAAA,EAAAA,IAmBcqF,EAAA,CAnBDtD,MAAM,QAAQ39C,KAAK,oB,CAjvB5C6D,SAAAi4C,EAAAA,EAAAA,KAkvBc,IAIS,EAJTF,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAlvBzCv4C,SAAAi4C,EAAAA,EAAAA,KAmvBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAnvBjC54C,SAAAi4C,EAAAA,EAAAA,KAovBkB,IAAwF,EAAxFF,EAAAA,EAAAA,IAAwF+D,EAAA,CAA7EjzB,KAAK,UAAWkzB,QAAOjD,EAAAyG,sB,CApvBpDv/C,SAAAi4C,EAAAA,EAAAA,KAovB0E,IAAoBE,EAAA,OAAAA,EAAA,OApvB9FC,EAAAA,EAAAA,IAovB0E,4BApvB1Ex7B,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAwvBcm7B,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAxvBzCv4C,SAAAi4C,EAAAA,EAAAA,KAyvBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAzvBjC54C,SAAAi4C,EAAAA,EAAAA,KA0vBkB,IAAgF,EAAhFF,EAAAA,EAAAA,IAAgF+D,EAAA,CAArEjzB,KAAK,UAAWkzB,QAAOjD,EAAA0G,kB,CA1vBpDx/C,SAAAi4C,EAAAA,EAAAA,KA0vBsE,IAAgBE,EAAA,OAAAA,EAAA,OA1vBtFC,EAAAA,EAAAA,IA0vBsE,wBA1vBtEx7B,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KA8vBcm7B,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CA9vBzCv4C,SAAAi4C,EAAAA,EAAAA,KA+vBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CA/vBjC54C,SAAAi4C,EAAAA,EAAAA,KAgwBkB,IAAkF,EAAlFF,EAAAA,EAAAA,IAAkF+D,EAAA,CAAvEjzB,KAAK,UAAWkzB,QAAOjD,EAAA2G,mB,CAhwBpDz/C,SAAAi4C,EAAAA,EAAAA,KAgwBuE,IAAiBE,EAAA,OAAAA,EAAA,OAhwBxFC,EAAAA,EAAAA,IAgwBuE,yBAhwBvEx7B,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAswBYm7B,EAAAA,EAAAA,IAmBcqF,EAAA,CAnBDtD,MAAM,MAAM39C,KAAK,oB,CAtwB1C6D,SAAAi4C,EAAAA,EAAAA,KAuwBc,IAIS,EAJTF,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAvwBzCv4C,SAAAi4C,EAAAA,EAAAA,KAwwBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAxwBjC54C,SAAAi4C,EAAAA,EAAAA,KAywBkB,IAAwF,EAAxFF,EAAAA,EAAAA,IAAwF+D,EAAA,CAA7EjzB,KAAK,UAAWkzB,QAAOjD,EAAAyG,sB,CAzwBpDv/C,SAAAi4C,EAAAA,EAAAA,KAywB0E,IAAoBE,EAAA,OAAAA,EAAA,OAzwB9FC,EAAAA,EAAAA,IAywB0E,4BAzwB1Ex7B,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KA6wBcm7B,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CA7wBzCv4C,SAAAi4C,EAAAA,EAAAA,KA8wBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CA9wBjC54C,SAAAi4C,EAAAA,EAAAA,KA+wBkB,IAAgF,EAAhFF,EAAAA,EAAAA,IAAgF+D,EAAA,CAArEjzB,KAAK,UAAWkzB,QAAOjD,EAAA0G,kB,CA/wBpDx/C,SAAAi4C,EAAAA,EAAAA,KA+wBsE,IAAgBE,EAAA,OAAAA,EAAA,OA/wBtFC,EAAAA,EAAAA,IA+wBsE,wBA/wBtEx7B,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,KAmxBcm7B,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAnxBzCv4C,SAAAi4C,EAAAA,EAAAA,KAoxBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CApxBjC54C,SAAAi4C,EAAAA,EAAAA,KAqxBkB,IAAkF,EAAlFF,EAAAA,EAAAA,IAAkF+D,EAAA,CAAvEjzB,KAAK,UAAWkzB,QAAOjD,EAAA2G,mB,CArxBpDz/C,SAAAi4C,EAAAA,EAAAA,KAqxBuE,IAAiBE,EAAA,OAAAA,EAAA,OArxBxFC,EAAAA,EAAAA,IAqxBuE,yBArxBvEx7B,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,KA2xBYm7B,EAAAA,EAAAA,IAGcqF,EAAA,CAHDtD,MAAM,WAAW39C,KAAK,oB,CA3xB/C6D,SAAAi4C,EAAAA,EAAAA,KA4xBc,IAC2E,EAD3EF,EAAAA,EAAAA,IAC2E+H,EAAA,CAD5DC,IAAI,mBAAoBrB,4BAA2B5F,EAAAkH,mCAClDd,4BAA2BpG,EAAAmH,+B,yEA7xBzDrjC,EAAA,KAgyBYm7B,EAAAA,EAAAA,IAMcqF,EAAA,CANDtD,MAAM,QAAQ39C,KAAK,U,CAhyB5C6D,SAAAi4C,EAAAA,EAAAA,KAiyBc,IAIS,EAJTF,EAAAA,EAAAA,IAISW,EAAA,CAJA6C,OAAQ,GAAIhD,MAAM,c,CAjyBzCv4C,SAAAi4C,EAAAA,EAAAA,KAkyBgB,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAlyBjC54C,SAAAi4C,EAAAA,EAAAA,KAmyBkB,IAAkF,EAAlFF,EAAAA,EAAAA,IAAkF+D,EAAA,CAAvEjzB,KAAK,UAAWkzB,QAAOjD,EAAAoH,mB,CAnyBpDlgD,SAAAi4C,EAAAA,EAAAA,KAmyBuE,IAAiBE,EAAA,OAAAA,EAAA,OAnyBxFC,EAAAA,EAAAA,IAmyBuE,yBAnyBvEx7B,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,G,gCAyyBUm7B,EAAAA,EAAAA,IAsCSY,EAAA,CAtCAwH,GAAI,GAAKC,GAAI,GAAI3H,MAAA,qB,CAzyBpCz4C,SAAAi4C,EAAAA,EAAAA,KA0yBY,IA8BS,EA9BTF,EAAAA,EAAAA,IA8BSW,EAAA,CA9BDD,MAAA,kFAAgF,CA1yBpGz4C,SAAAi4C,EAAAA,EAAAA,KA2yBc,IAGS,EAHTF,EAAAA,EAAAA,IAGSY,EAAA,CAHAC,KAAM,GAAC,CA3yB9B54C,SAAAi4C,EAAAA,EAAAA,KA4yBgB,IACWE,EAAA,OAAAA,EAAA,OADXK,EAAAA,EAAAA,IACW,KADRC,MAAA,wDAAwD,qDACpD,OA7yBvB77B,EAAA,KA+yBcm7B,EAAAA,EAAAA,IAcSY,EAAA,CAdAC,KAAM,GAAC,CA/yB9B54C,SAAAi4C,EAAAA,EAAAA,KAgzBgB,IAYY,EAZZF,EAAAA,EAAAA,IAYYyB,EAAA,CA5zB5BP,WAizB6BF,EAAA/xC,SAjzB7B,sBAAAmxC,EAAA,MAAAA,EAAA,IAAAgB,GAizB6BJ,EAAA/xC,SAAQmyC,GAChBC,SAAQN,EAAAuH,qBACT3G,YAAY,kBACXe,UAAW3B,EAAAwH,4B,CApzBhCtgD,SAAAi4C,EAAAA,EAAAA,KAuzBsB,IAAoC,gBADxCJ,EAAAA,EAAAA,IAKEoC,EAAAA,GAAA,MA3zBpBC,EAAAA,EAAAA,IAuzByCnB,EAAAoB,kBAAZC,K,WADXC,EAAAA,EAAAA,IAKER,EAAA,CAHGj7C,IAAG,iCAAmCw7C,IACtCN,MAAOM,EACPpwD,MAAOowD,G,sCA1zB9Bx9B,EAAA,G,2CAAAA,EAAA,KA8zBcm7B,EAAAA,EAAAA,IASSY,EAAA,CATAC,KAAM,IAAE,CA9zB/B54C,SAAAi4C,EAAAA,EAAAA,KA+zBgB,IAOE,CANqB,aAAbc,EAAA/xC,WAAQ,WADlBqzC,EAAAA,EAAAA,IAOEC,EAAA,CAt0BlB17C,IAAA,EAAAq6C,WAi0B6BF,EAAAwH,iBAj0B7B,sBAAApI,EAAA,MAAAA,EAAA,IAAAgB,GAi0B6BJ,EAAAwH,iBAAgBpH,GACxBC,SAAQN,EAAA0H,uBACT9G,YAAY,WACXe,UAAW3B,EAAAwH,4BAA2C,aAAbvH,EAAA/xC,SAC1CyxC,MAAA,gB,+CAr0BpBiC,EAAAA,EAAAA,IAAA,UAAA99B,EAAA,OAAAA,EAAA,KAy0BYm7B,EAAAA,EAAAA,IAKY+D,EAAA,CAJRjzB,KAAK,UAAWkzB,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAA2H,oBACtBhG,UAAW3B,EAAAwH,6BAA+BvH,EAAA2H,iB,CA30B3D1gD,SAAAi4C,EAAAA,EAAAA,KA40Ba,IAEDE,EAAA,OAAAA,EAAA,OA90BZC,EAAAA,EAAAA,IA40Ba,oCA50Bbx7B,EAAA,G,mBAAAA,EAAA,KAi1BUm7B,EAAAA,EAAAA,IAGSY,EAAA,CAHAwH,GAAI,GAAKC,GAAI,I,CAj1BhCpgD,SAAAi4C,EAAAA,EAAAA,KAk1BY,IAAoC,kBAApCO,EAAAA,EAAAA,IAAoC,OAA/BD,MAAM,eAAc,SAAK,KAC9BR,EAAAA,EAAAA,IAAwGuC,EAAA,CAn1BpHrB,WAm1B+BF,EAAA2H,gBAn1B/B,sBAAAvI,EAAA,MAAAA,EAAA,IAAAgB,GAm1B+BJ,EAAA2H,gBAAevH,GAAEtwB,KAAK,WAAY83B,KAAM,EAAGjH,YAAY,oB,0BAn1BtF98B,EAAA,KAq1BUm7B,EAAAA,EAAAA,IAGSY,EAAA,CAHAwH,GAAI,GAAKC,GAAI,I,CAr1BhCpgD,SAAAi4C,EAAAA,EAAAA,KAs1BY,IAAuC,kBAAvCO,EAAAA,EAAAA,IAAuC,OAAlCD,MAAM,eAAc,YAAQ,KACjCR,EAAAA,EAAAA,IAAmFuC,EAAA,CAv1B/FrB,WAu1B+BF,EAAA6H,QAv1B/B,sBAAAzI,EAAA,MAAAA,EAAA,IAAAgB,GAu1B+BJ,EAAA6H,QAAOzH,GAAEtwB,KAAK,WAAY83B,KAAM,EAAGjH,YAAY,O,0BAv1B9E98B,EAAA,KAy1BUm7B,EAAAA,EAAAA,IAOSW,EAAA,CAPA6C,OAAQ,GAAIhD,MAAM,c,CAz1BrCv4C,SAAAi4C,EAAAA,EAAAA,KA01BY,IAKS,EALTF,EAAAA,EAAAA,IAKSY,EAAA,CALAC,KAAM,IAAE,CA11B7B54C,SAAAi4C,EAAAA,EAAAA,KA21Bc,IAGY,EAHZF,EAAAA,EAAAA,IAGY+D,EAAA,CAHDjzB,KAAK,UAAW4xB,SAAUoG,EAAAC,gBAAkB/E,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAAhV,oB,CA31B5E9jC,SAAAi4C,EAAAA,EAAAA,KA21B+F,IAE7E,EA71BlBG,EAAAA,EAAAA,KAAAS,EAAAA,EAAAA,IA41BkBE,EAAAgI,oBAAkB,MA51BpCnkC,EAAA,G,mBAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,K,4WCCEy9B,EAAAA,EAAAA,IAwES3B,EAAA,CAxEA6C,OAAQ,IAAE,CADrBv7C,SAAAi4C,EAAAA,EAAAA,KAEI,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAFrB54C,SAAAi4C,EAAAA,EAAAA,KAGM,IAAoG,EAApGF,EAAAA,EAAAA,IAAoG+D,EAAA,CAAzFvD,MAAM,eAAe1vB,KAAK,UAAWkzB,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAAkI,mB,CAH7DhhD,SAAAi4C,EAAAA,EAAAA,KAG+E,IAAeE,EAAA,MAAAA,EAAA,MAH9FC,EAAAA,EAAAA,IAG+E,uBAH/Ex7B,EAAA,OAAAA,EAAA,KAKIm7B,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CALrB54C,SAAAi4C,EAAAA,EAAAA,KAMM,IAAsG,EAAtGF,EAAAA,EAAAA,IAAsG+D,EAAA,CAA3FvD,MAAM,eAAe1vB,KAAK,UAAWkzB,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAAmI,oB,CAN7DjhD,SAAAi4C,EAAAA,EAAAA,KAMgF,IAAgBE,EAAA,MAAAA,EAAA,MANhGC,EAAAA,EAAAA,IAMgF,wBANhFx7B,EAAA,OAAAA,EAAA,I,eAQI47B,EAAAA,EAAAA,IAAwB,OAAnBD,MAAM,QAAM,WACjBR,EAAAA,EAAAA,IAOSY,EAAA,CAPAC,KAAM,IAAE,CATrB54C,SAAAi4C,EAAAA,EAAAA,KAUM,IAA0E,gBAA1EO,EAAAA,EAAAA,IAA0E,OAArEC,MAAA,mCAAsC,6BAAyB,KACpEV,EAAAA,EAAAA,IAAwFuC,EAAA,CAA9E/B,MAAM,eAXtBU,WAW8C4H,EAAAK,WAX9C,sBAAA/I,EAAA,KAAAA,EAAA,GAAAgB,GAW8C0H,EAAAK,WAAU/H,GAAEgI,UAAA,GAAUzH,YAAY,a,wBAC1E3B,EAAAA,EAAAA,IAAwF+D,EAAA,CAA7EvD,MAAM,eAAe1vB,KAAK,UAAWkzB,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAAsI,a,CAZ7DphD,SAAAi4C,EAAAA,EAAAA,KAYyE,IAASE,EAAA,MAAAA,EAAA,MAZlFC,EAAAA,EAAAA,IAYyE,iBAZzEx7B,EAAA,I,eAaM47B,EAAAA,EAAAA,IAAI,qBACJT,EAAAA,EAAAA,IAAuGuC,EAAA,CAA7F/B,MAAM,eAdtBU,WAc8C4H,EAAAQ,mBAd9C,sBAAAlJ,EAAA,KAAAA,EAAA,GAAAgB,GAc8C0H,EAAAQ,mBAAkBlI,GAAEgI,UAAA,GAAUzH,YAAY,oB,wBAClF3B,EAAAA,EAAAA,IAAsG+D,EAAA,CAA3FvD,MAAM,eAAe1vB,KAAK,UAAWkzB,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAAwI,oB,CAf7DthD,SAAAi4C,EAAAA,EAAAA,KAegF,IAAgBE,EAAA,MAAAA,EAAA,MAfhGC,EAAAA,EAAAA,IAegF,wBAfhFx7B,EAAA,OAAAA,EAAA,I,eAiBI47B,EAAAA,EAAAA,IAAwB,OAAnBD,MAAM,QAAM,WACjBR,EAAAA,EAAAA,IAqBSY,EAAA,CArBAC,KAAM,IAAE,CAlBrB54C,SAAAi4C,EAAAA,EAAAA,KAmBM,IAAuF,EAAvFF,EAAAA,EAAAA,IAAuFuC,EAAA,CAA7E/B,MAAM,eAnBtBU,WAmB8C4H,EAAAjhB,QAnB9C,sBAAAuY,EAAA,KAAAA,EAAA,GAAAgB,GAmB8C0H,EAAAjhB,QAAOuZ,GAAEgI,UAAA,GAAUzH,YAAY,e,wBACvE3B,EAAAA,EAAAA,IAAqG+D,EAAA,CAA1FvD,MAAM,eAAe1vB,KAAK,UAAWkzB,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAAyI,oB,CApB7DvhD,SAAAi4C,EAAAA,EAAAA,KAoBgF,IAAeE,EAAA,MAAAA,EAAA,MApB/FC,EAAAA,EAAAA,IAoBgF,uBApBhFx7B,EAAA,I,eAqBM47B,EAAAA,EAAAA,IAAI,qBACJT,EAAAA,EAAAA,IACsE+D,EAAA,CAD3DvD,MAAM,eAAe1vB,KAAK,UAClCkzB,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAA0I,2B,CAvBhBxhD,SAAAi4C,EAAAA,EAAAA,KAuB0C,IAAsBE,EAAA,MAAAA,EAAA,MAvBhEC,EAAAA,EAAAA,IAuB0C,8BAvB1Cx7B,EAAA,I,eAwBM47B,EAAAA,EAAAA,IAAI,mCACJA,EAAAA,EAAAA,IAaM,OAbDC,MAAA,+FAA0F,EAC7FD,EAAAA,EAAAA,IAEK,UAFD,sCAGJA,EAAAA,EAAAA,IAEK,UAFD,0BAGJA,EAAAA,EAAAA,IAEK,UAFD,kCAGJA,EAAAA,EAAAA,IAEK,UAFD,2DAEJ,OArCR57B,EAAA,I,eAwCI47B,EAAAA,EAAAA,IAAwB,OAAnBD,MAAM,QAAM,WACjBR,EAAAA,EAAAA,IAeSY,EAAA,CAfAC,KAAM,IAAE,CAzCrB54C,SAAAi4C,EAAAA,EAAAA,KA0CM,IAAuF,EAAvFF,EAAAA,EAAAA,IAAuFuC,EAAA,CAA7E/B,MAAM,eA1CtBU,WA0C8C4H,EAAA/f,MA1C9C,sBAAAqX,EAAA,KAAAA,EAAA,GAAAgB,GA0C8C0H,EAAA/f,MAAKqY,GAAEgI,UAAA,GAAUzH,YAAY,iB,wBACrE3B,EAAAA,EAAAA,IAAoFuC,EAAA,CAA1E/B,MAAM,eA3CtBU,WA2C8C4H,EAAAY,SA3C9C,sBAAAtJ,EAAA,MAAAA,EAAA,IAAAgB,GA2C8C0H,EAAAY,SAAQtI,GAAEgI,UAAA,GAAUzH,YAAY,W,wBACxE3B,EAAAA,EAAAA,IAA8G+D,EAAA,CAAnGvD,MAAM,eAAe1vB,KAAK,UAAWkzB,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAA4I,wB,CA5C7D1hD,SAAAi4C,EAAAA,EAAAA,KA4CoF,IAAoBE,EAAA,MAAAA,EAAA,MA5CxGC,EAAAA,EAAAA,IA4CoF,4BA5CpFx7B,EAAA,I,eA6CM47B,EAAAA,EAAAA,IAUM,OAVDC,MAAA,+FAA0F,EAC7FD,EAAAA,EAAAA,IAEK,UAFD,uCAGJA,EAAAA,EAAAA,IAEK,UAFD,uCAGJA,EAAAA,EAAAA,IAEK,UAFD,yCAEJ,OAtDR57B,EAAA,I,eAyDI47B,EAAAA,EAAAA,IAAwB,OAAnBD,MAAM,QAAM,WACjBR,EAAAA,EAAAA,IAKSY,EAAA,CALAC,KAAM,IAAE,CA1DrB54C,SAAAi4C,EAAAA,EAAAA,KA2DM,IAAoG,EAApGF,EAAAA,EAAAA,IAAoGuC,EAAA,CAA1F/B,MAAM,eA3DtBU,WA2D8C4H,EAAAc,YA3D9C,sBAAAxJ,EAAA,MAAAA,EAAA,IAAAgB,GA2D8C0H,EAAAc,YAAWxI,GAAEgI,UAAA,GAAUzH,YAAY,wB,wBAC3E3B,EAAAA,EAAAA,IAAqFuC,EAAA,CAA3E/B,MAAM,eA5DtBU,WA4D8C4H,EAAAe,OA5D9C,sBAAAzJ,EAAA,MAAAA,EAAA,IAAAgB,GA4D8C0H,EAAAe,OAAMzI,GAAEgI,UAAA,GAAUzH,YAAY,c,wBACtE3B,EAAAA,EAAAA,IAAiGuC,EAAA,CAAvF/B,MAAM,eA7DtBU,WA6D8C4H,EAAAgB,WA7D9C,sBAAA1J,EAAA,MAAAA,EAAA,IAAAgB,GA6D8C0H,EAAAgB,WAAU1I,GAAEgI,UAAA,GAAUzH,YAAY,sB,wBAC1E3B,EAAAA,EAAAA,IAAsG+D,EAAA,CAA3FvD,MAAM,eAAe1vB,KAAK,UAAWkzB,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAAgJ,kB,CA9D7D9hD,SAAAi4C,EAAAA,EAAAA,KA8D8E,IAAkBE,EAAA,MAAAA,EAAA,MA9DhGC,EAAAA,EAAAA,IA8D8E,0BA9D9Ex7B,EAAA,OAAAA,EAAA,I,eAiEI47B,EAAAA,EAAAA,IAAwB,OAAnBD,MAAM,QAAM,WACjBR,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,IAAE,CAlErB54C,SAAAi4C,EAAAA,EAAAA,KAmEM,IAA6F,EAA7FF,EAAAA,EAAAA,IAA6FuC,EAAA,CAAnF/B,MAAM,eAnEtBU,WAmE+C4H,EAAAkB,UAnE/C,sBAAA5J,EAAA,MAAAA,EAAA,IAAAgB,GAmE+C0H,EAAAkB,UAAS5I,GAAEgI,UAAA,GAAUzH,YAAY,kB,wBAC1E3B,EAAAA,EAAAA,IAAsGuC,EAAA,CAA5F/B,MAAM,eApEtBU,WAoE+C4H,EAAAmB,UApE/C,sBAAA7J,EAAA,MAAAA,EAAA,IAAAgB,GAoE+C0H,EAAAmB,UAAS7I,GAAEgI,UAAA,GAAUzH,YAAY,2B,wBAC1E3B,EAAAA,EAAAA,IAAoH+D,EAAA,CAAzGvD,MAAM,eAAe1vB,KAAK,UAAWkzB,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAAmJ,yB,CArE7DjiD,SAAAi4C,EAAAA,EAAAA,KAqEqF,IAAyBE,EAAA,MAAAA,EAAA,MArE9GC,EAAAA,EAAAA,IAqEqF,iCArErFx7B,EAAA,OAAAA,EAAA,OAAAA,EAAA,G,gBA+EA,GACEzgB,KAAM,sBACN+lD,MAAO,CACLjyD,IAAKwlC,QAEP0sB,KAAAA,GACE,MAAMrhB,GAAQif,EAAAA,EAAAA,IAAI,IACZmB,GAAanB,EAAAA,EAAAA,IAAI,OACjBsB,GAAqBtB,EAAAA,EAAAA,IAAI,OACzBngB,GAAUmgB,EAAAA,EAAAA,IAAI,IACd0B,GAAW1B,EAAAA,EAAAA,IAAI,IACf4B,GAAc5B,EAAAA,EAAAA,IAAI,IAClB6B,GAAS7B,EAAAA,EAAAA,IAAI,IACb8B,GAAa9B,EAAAA,EAAAA,IAAI,IACjBgC,GAAYhC,EAAAA,EAAAA,IAAI,IAChBiC,GAAYjC,EAAAA,EAAAA,IAAI,IAEtB,MAAO,CACLjf,QACA2gB,WACA7hB,UACAshB,aACAG,qBACAM,cACAC,SACAC,aACAE,YACAC,YAEJ,EACAzyC,QAAS,CAEPyxC,cAAAA,GACEr2D,KAAKy3D,MAAM,4BAA6B,CAAC,EAAG,iBAC9C,EAEAnB,eAAAA,GACE,IAAI5sD,EAAS,CACX8gB,KAAM,iEACN8pB,QAAS,kBAEXt0C,KAAKy3D,MAAM,4BAA6B/tD,EAAQ,kBAClD,EAEA+sD,QAAAA,GACE,GAAuB,GAAnBz2D,KAAKu2D,WAEP,YADAmB,MAAM,QAGR,IAAIhuD,EAAS,CACX8gB,KAAM,GACNoqB,GAAI,qCACJv1C,MAAO,GAAGW,KAAKu2D,cAEjBv2D,KAAKy3D,MAAM,4BAA6B/tD,EAAQ,WAClD,EAEAitD,eAAAA,GACE,GAAuB,GAAnB32D,KAAKu2D,WAEP,YADAmB,MAAM,QAIR,IAAIhuD,EAAS,CACX8gB,KAAM,GACNkqB,UAAW,qCACXC,SAAU,GAAG30C,KAAK02D,qBAClBh1B,QAAS,CACPmT,QAAS,KAGb70C,KAAKy3D,MAAM,4BAA6B/tD,EAAQ,kBAClD,EAEAktD,eAAAA,GACO52D,KAAKi1C,QAIVj1C,KAAKy3D,MAAM,4BAA6B,CACtCxiB,QAASj1C,KAAKi1C,QACdvT,QAAS,CACPi2B,eAAe,IAEhB,gBARDD,MAAM,UASV,EAEAb,sBAAAA,GACO72D,KAAKi1C,QAIVj1C,KAAKy3D,MAAM,4BAA6B,CACtCxiB,QAASj1C,KAAKi1C,QACdvT,QAAS,CACPi2B,eAAe,IAEhB,uBARDD,MAAM,UASV,EAEAX,mBAAAA,GACO/2D,KAAKm2C,MAKLn2C,KAAK82D,SAKV92D,KAAKy3D,MAAM,4BAA6B,CACtCnzC,QAAStkB,KAAK82D,SACdvhB,cAAev1C,KAAKm2C,MACpBzU,QAAS,CACPmT,QAAS,OAEV,uBAVD6iB,MAAM,YALNA,MAAM,YAgBV,EACAP,aAAAA,GACOn3D,KAAKg3D,YAILh3D,KAAKi3D,OAILj3D,KAAKk3D,WAIVl3D,KAAKy3D,MAAM,4BAA6B,CACtCnzC,QAAQtkB,KAAKg3D,YACb3gB,OAAOr2C,KAAKi3D,OACZ3gB,OAAOt2C,KAAKk3D,YACX,iBAPDQ,MAAM,oCAJNA,MAAM,2BAJNA,MAAM,oCAgBV,EAEAJ,oBAAAA,GACOt3D,KAAKo3D,UAILp3D,KAAKq3D,UAIVr3D,KAAKy3D,MAAM,4BAA6B,CACtChhB,OAAOz2C,KAAKo3D,UACZ9gB,OAAOt2C,KAAKq3D,WACX,wBANDK,MAAM,uCAJNA,MAAM,6BAWV,I,WChOJ,MAAME,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAS,GAAQ,CAAC,YAAY,qBAEzF,Q,yICRElI,EAAAA,EAAAA,IAyES3B,EAAA,CAzEA6C,OAAQ,IAAE,CADrBv7C,SAAAi4C,EAAAA,EAAAA,KAEI,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAFrB54C,SAAAi4C,EAAAA,EAAAA,KAGM,IAA4G,EAA5GF,EAAAA,EAAAA,IAA4G+D,EAAA,CAAjGvD,MAAM,eAAe1vB,KAAK,UAAWkzB,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAA0J,uB,CAH7DxiD,SAAAi4C,EAAAA,EAAAA,KAGmF,IAAmBE,EAAA,MAAAA,EAAA,MAHtGC,EAAAA,EAAAA,IAGmF,2BAHnFx7B,EAAA,OAAAA,EAAA,KAKIm7B,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CALrB54C,SAAAi4C,EAAAA,EAAAA,KAMM,IAA8G,EAA9GF,EAAAA,EAAAA,IAA8G+D,EAAA,CAAnGvD,MAAM,eAAe1vB,KAAK,UAAWkzB,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAA2J,wB,CAN7DziD,SAAAi4C,EAAAA,EAAAA,KAMoF,IAAoBE,EAAA,MAAAA,EAAA,MANxGC,EAAAA,EAAAA,IAMoF,4BANpFx7B,EAAA,OAAAA,EAAA,I,eAQI47B,EAAAA,EAAAA,IAAwB,OAAnBD,MAAM,QAAM,WACjBR,EAAAA,EAAAA,IAQSY,EAAA,CARAC,KAAM,IAAE,CATrB54C,SAAAi4C,EAAAA,EAAAA,KAUM,IAA0E,gBAA1EO,EAAAA,EAAAA,IAA0E,OAArEC,MAAA,mCAAsC,6BAAyB,KACpEV,EAAAA,EAAAA,IAAwFuC,EAAA,CAA9E/B,MAAM,eAXtBU,WAW8C4H,EAAAK,WAX9C,sBAAA/I,EAAA,KAAAA,EAAA,GAAAgB,GAW8C0H,EAAAK,WAAU/H,GAAEgI,UAAA,GAAUzH,YAAY,a,wBAC1E3B,EAAAA,EAAAA,IAAgG+D,EAAA,CAArFvD,MAAM,eAAe1vB,KAAK,UAAWkzB,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAA4J,iB,CAZ7D1iD,SAAAi4C,EAAAA,EAAAA,KAY6E,IAAaE,EAAA,MAAAA,EAAA,MAZ1FC,EAAAA,EAAAA,IAY6E,qBAZ7Ex7B,EAAA,I,eAaM47B,EAAAA,EAAAA,IAAI,qBACJT,EAAAA,EAAAA,IAAuGuC,EAAA,CAA7F/B,MAAM,eAdtBU,WAc8C4H,EAAAQ,mBAd9C,sBAAAlJ,EAAA,KAAAA,EAAA,GAAAgB,GAc8C0H,EAAAQ,mBAAkBlI,GAAEgI,UAAA,GAAUzH,YAAY,oB,wBAClF3B,EAAAA,EAAAA,IAA8G+D,EAAA,CAAnGvD,MAAM,eAAe1vB,KAAK,UAAWkzB,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAA6J,wB,CAf7D3iD,SAAAi4C,EAAAA,EAAAA,KAeoF,IAAoBE,EAAA,MAAAA,EAAA,MAfxGC,EAAAA,EAAAA,IAeoF,4BAfpFx7B,EAAA,OAAAA,EAAA,I,eAkBI47B,EAAAA,EAAAA,IAAwB,OAAnBD,MAAM,QAAM,WACjBR,EAAAA,EAAAA,IAqBSY,EAAA,CArBAC,KAAM,IAAE,CAnBrB54C,SAAAi4C,EAAAA,EAAAA,KAoBM,IAAuF,EAAvFF,EAAAA,EAAAA,IAAuFuC,EAAA,CAA7E/B,MAAM,eApBtBU,WAoB8C4H,EAAAjhB,QApB9C,sBAAAuY,EAAA,KAAAA,EAAA,GAAAgB,GAoB8C0H,EAAAjhB,QAAOuZ,GAAEgI,UAAA,GAAUzH,YAAY,e,wBACvE3B,EAAAA,EAAAA,IAAyG+D,EAAA,CAA9FvD,MAAM,eAAe1vB,KAAK,UAAWkzB,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAA8J,wB,CArB7D5iD,SAAAi4C,EAAAA,EAAAA,KAqBoF,IAAeE,EAAA,MAAAA,EAAA,MArBnGC,EAAAA,EAAAA,IAqBoF,uBArBpFx7B,EAAA,I,eAsBM47B,EAAAA,EAAAA,IAAI,qBACJT,EAAAA,EAAAA,IAC0E+D,EAAA,CAD/DvD,MAAM,eAAe1vB,KAAK,UAClCkzB,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAA+J,+B,CAxBhB7iD,SAAAi4C,EAAAA,EAAAA,KAwB8C,IAAsBE,EAAA,MAAAA,EAAA,MAxBpEC,EAAAA,EAAAA,IAwB8C,8BAxB9Cx7B,EAAA,I,eAyBM47B,EAAAA,EAAAA,IAAI,mCACJA,EAAAA,EAAAA,IAaM,OAbDC,MAAA,+FAA0F,EAC7FD,EAAAA,EAAAA,IAEK,UAFD,0CAGJA,EAAAA,EAAAA,IAEK,UAFD,0BAGJA,EAAAA,EAAAA,IAEK,UAFD,kCAGJA,EAAAA,EAAAA,IAEK,UAFD,2DAEJ,OAtCR57B,EAAA,I,eAyCI47B,EAAAA,EAAAA,IAAwB,OAAnBD,MAAM,QAAM,WACjBR,EAAAA,EAAAA,IAgBSY,EAAA,CAhBAC,KAAM,IAAE,CA1CrB54C,SAAAi4C,EAAAA,EAAAA,KA2CM,IAAuF,EAAvFF,EAAAA,EAAAA,IAAuFuC,EAAA,CAA7E/B,MAAM,eA3CtBU,WA2C8C4H,EAAA/f,MA3C9C,sBAAAqX,EAAA,KAAAA,EAAA,GAAAgB,GA2C8C0H,EAAA/f,MAAKqY,GAAEgI,UAAA,GAAUzH,YAAY,iB,wBACrE3B,EAAAA,EAAAA,IAAoFuC,EAAA,CAA1E/B,MAAM,eA5CtBU,WA4C8C4H,EAAAY,SA5C9C,sBAAAtJ,EAAA,MAAAA,EAAA,IAAAgB,GA4C8C0H,EAAAY,SAAQtI,GAAEgI,UAAA,GAAUzH,YAAY,W,wBACxE3B,EAAAA,EAAAA,IACyE+D,EAAA,CAD9DvD,MAAM,eAAe1vB,KAAK,UAClCkzB,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAAgK,4B,CA9ChB9iD,SAAAi4C,EAAAA,EAAAA,KA8C2C,IAAwBE,EAAA,MAAAA,EAAA,MA9CnEC,EAAAA,EAAAA,IA8C2C,gCA9C3Cx7B,EAAA,I,eA+CM47B,EAAAA,EAAAA,IAUM,OAVDC,MAAA,+FAA0F,EAC7FD,EAAAA,EAAAA,IAEK,UAFD,2CAGJA,EAAAA,EAAAA,IAEK,UAFD,uCAGJA,EAAAA,EAAAA,IAEK,UAFD,yCAEJ,OAxDR57B,EAAA,I,eA2DI47B,EAAAA,EAAAA,IAAwB,OAAnBD,MAAM,QAAM,WACjBR,EAAAA,EAAAA,IAKSY,EAAA,CALAC,KAAM,IAAE,CA5DrB54C,SAAAi4C,EAAAA,EAAAA,KA6DM,IAAoG,EAApGF,EAAAA,EAAAA,IAAoGuC,EAAA,CAA1F/B,MAAM,eA7DtBU,WA6D8C4H,EAAAc,YA7D9C,sBAAAxJ,EAAA,MAAAA,EAAA,IAAAgB,GA6D8C0H,EAAAc,YAAWxI,GAAEgI,UAAA,GAAUzH,YAAY,wB,wBAC3E3B,EAAAA,EAAAA,IAAqFuC,EAAA,CAA3E/B,MAAM,eA9DtBU,WA8D8C4H,EAAAe,OA9D9C,sBAAAzJ,EAAA,MAAAA,EAAA,IAAAgB,GA8D8C0H,EAAAe,OAAMzI,GAAEgI,UAAA,GAAUzH,YAAY,c,wBACtE3B,EAAAA,EAAAA,IAAiGuC,EAAA,CAAvF/B,MAAM,eA/DtBU,WA+D8C4H,EAAAgB,WA/D9C,sBAAA1J,EAAA,MAAAA,EAAA,IAAAgB,GA+D8C0H,EAAAgB,WAAU1I,GAAEgI,UAAA,GAAUzH,YAAY,sB,wBAC1E3B,EAAAA,EAAAA,IAAkH+D,EAAA,CAAvGvD,MAAM,eAAe1vB,KAAK,UAAWkzB,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAAiK,sB,CAhE7D/iD,SAAAi4C,EAAAA,EAAAA,KAgEkF,IAA0BE,EAAA,MAAAA,EAAA,MAhE5GC,EAAAA,EAAAA,IAgEkF,kCAhElFx7B,EAAA,OAAAA,EAAA,I,eAmEI47B,EAAAA,EAAAA,IAAwB,OAAnBD,MAAM,QAAM,WACjBR,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,IAAE,CApErB54C,SAAAi4C,EAAAA,EAAAA,KAqEM,IAA6F,EAA7FF,EAAAA,EAAAA,IAA6FuC,EAAA,CAAnF/B,MAAM,eArEtBU,WAqE+C4H,EAAAkB,UArE/C,sBAAA5J,EAAA,MAAAA,EAAA,IAAAgB,GAqE+C0H,EAAAkB,UAAS5I,GAAEgI,UAAA,GAAUzH,YAAY,kB,wBAC1E3B,EAAAA,EAAAA,IAAsGuC,EAAA,CAA5F/B,MAAM,eAtEtBU,WAsE+C4H,EAAAmB,UAtE/C,sBAAA7J,EAAA,MAAAA,EAAA,IAAAgB,GAsE+C0H,EAAAmB,UAAS7I,GAAEgI,UAAA,GAAUzH,YAAY,2B,wBAC1E3B,EAAAA,EAAAA,IAAgI+D,EAAA,CAArHvD,MAAM,eAAe1vB,KAAK,UAAWkzB,QAAK5D,EAAA,MAAAA,EAAA,IAAAgB,GAAEL,EAAAkK,6B,CAvE7DhjD,SAAAi4C,EAAAA,EAAAA,KAuEyF,IAAiCE,EAAA,MAAAA,EAAA,MAvE1HC,EAAAA,EAAAA,IAuEyF,yCAvEzFx7B,EAAA,OAAAA,EAAA,OAAAA,EAAA,G,CAgFA,OACEzgB,KAAM,sBACN+lD,MAAO,CACLjyD,IAAKwlC,QAEP0sB,KAAAA,GACE,MAAMrhB,GAAQif,EAAAA,EAAAA,IAAI,IACZmB,GAAanB,EAAAA,EAAAA,IAAI,OACjBsB,GAAqBtB,EAAAA,EAAAA,IAAI,OACzBngB,GAAUmgB,EAAAA,EAAAA,IAAI,IACd0B,GAAW1B,EAAAA,EAAAA,IAAI,IACf4B,GAAc5B,EAAAA,EAAAA,IAAI,IAClB6B,GAAS7B,EAAAA,EAAAA,IAAI,IACb8B,GAAa9B,EAAAA,EAAAA,IAAI,IACjBgC,GAAYhC,EAAAA,EAAAA,IAAI,IAChBiC,GAAYjC,EAAAA,EAAAA,IAAI,IACtB,MAAO,CACLjf,QACA2gB,WACA7hB,UACAshB,aACAG,qBACAM,cACAC,SACAC,aACAE,YACAC,YAEJ,EACAzyC,QAAS,CAEPizC,kBAAAA,GACE73D,KAAKy3D,MAAM,4BAA6B,CAAC,EAAG,qBAC9C,EAEAK,mBAAAA,GACE,IAAIpuD,EAAS,CACX8gB,KAAM,iEACN8pB,QAAS,gcAEXt0C,KAAKy3D,MAAM,4BAA6B/tD,EAAQ,sBAClD,EAEAquD,YAAAA,GACE,GAAuB,GAAnB/3D,KAAKu2D,WAEP,YADAmB,MAAM,QAGR,IAAIhuD,EAAS,CACX8gB,KAAM,GACNoqB,GAAI,qCACJv1C,MAAO,GAAGW,KAAKu2D,cAEjBv2D,KAAKy3D,MAAM,4BAA6B/tD,EAAQ,eAClD,EAEAsuD,mBAAAA,GACE,GAAuB,GAAnBh4D,KAAKu2D,WAEP,YADAmB,MAAM,QAIR,IAAIhuD,EAAS,CACX8gB,KAAM,GACNkqB,UAAW,qCACXC,SAAU,GAAG30C,KAAK02D,qBAClBh1B,QAAS,CACPmT,QAAS,KAGb70C,KAAKy3D,MAAM,4BAA6B/tD,EAAQ,sBAClD,EAEAuuD,mBAAAA,GACOj4D,KAAKi1C,QAIVj1C,KAAKy3D,MAAM,4BAA6B,CACtCxiB,QAASj1C,KAAKi1C,QACdvT,QAAS,CACPi2B,eAAe,IAEhB,oBARDD,MAAM,UASV,EAEAQ,0BAAAA,GACOl4D,KAAKi1C,QAIVj1C,KAAKy3D,MAAM,4BAA6B,CACtCxiB,QAASj1C,KAAKi1C,QACdvT,QAAS,CACPi2B,eAAe,IAEhB,2BARDD,MAAM,UASV,EAEAS,uBAAAA,GACOn4D,KAAKm2C,MAKLn2C,KAAK82D,SAKV92D,KAAKy3D,MAAM,4BAA6B,CACtCnzC,QAAStkB,KAAK82D,SACdvhB,cAAev1C,KAAKm2C,MACpBzU,QAAS,CACPmT,QAAS,OAEV,2BAVD6iB,MAAM,YALNA,MAAM,YAgBV,EAEAU,iBAAAA,GACOp4D,KAAKg3D,YAILh3D,KAAKi3D,OAILj3D,KAAKk3D,WAIVl3D,KAAKy3D,MAAM,4BAA6B,CACtCnzC,QAAQtkB,KAAKg3D,YACb3gB,OAAOr2C,KAAKi3D,OACZ3gB,OAAOt2C,KAAKk3D,YACX,qBAPDQ,MAAM,oCAJNA,MAAM,2BAJNA,MAAM,oCAgBV,EAEAW,wBAAAA,GACOr4D,KAAKo3D,UAILp3D,KAAKq3D,UAIVr3D,KAAKy3D,MAAM,4BAA6B,CACtChhB,OAAOz2C,KAAKo3D,UACZ9gB,OAAOt2C,KAAKq3D,WACX,4BANDK,MAAM,uCAJNA,MAAM,6BAWV,ICjOJ,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAS,GAAQ,CAAC,YAAY,qBAEzF,Q,kHCsNEhI,EAAAA,EAAAA,IAmCS3B,EAAA,CAnCA6C,OAAQ,GAAIhD,MAAM,c,CA/N7Bv4C,SAAAi4C,EAAAA,EAAAA,KAgOI,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAhOrB54C,SAAAi4C,EAAAA,EAAAA,KAiOM,IAAoG,EAApGF,EAAAA,EAAAA,IAAoG+D,EAAA,CAAzFvD,MAAM,eAAe1vB,KAAK,UAAWkzB,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAAmK,mB,CAjO7DjjD,SAAAi4C,EAAAA,EAAAA,KAiO+E,IAAeE,EAAA,KAAAA,EAAA,KAjO9FC,EAAAA,EAAAA,IAiO+E,uBAjO/Ex7B,EAAA,OAAAA,EAAA,KAmOIm7B,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAnOrB54C,SAAAi4C,EAAAA,EAAAA,KAoOM,IAAsG,EAAtGF,EAAAA,EAAAA,IAAsG+D,EAAA,CAA3FvD,MAAM,eAAe1vB,KAAK,UAAWkzB,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAAoK,oB,CApO7DljD,SAAAi4C,EAAAA,EAAAA,KAoOgF,IAAgBE,EAAA,KAAAA,EAAA,KApOhGC,EAAAA,EAAAA,IAoOgF,wBApOhFx7B,EAAA,OAAAA,EAAA,KAsOIm7B,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAtOrB54C,SAAAi4C,EAAAA,EAAAA,KAuOM,IAAsH,EAAtHF,EAAAA,EAAAA,IAAsH+D,EAAA,CAA3GvD,MAAM,eAAe1vB,KAAK,UAAWkzB,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAAqK,4B,CAvO7DnjD,SAAAi4C,EAAAA,EAAAA,KAuOwF,IAAwBE,EAAA,MAAAA,EAAA,MAvOhHC,EAAAA,EAAAA,IAuOwF,gCAvOxFx7B,EAAA,OAAAA,EAAA,KAyOIm7B,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAzOrB54C,SAAAi4C,EAAAA,EAAAA,KA0OM,IAA+G,EAA/GF,EAAAA,EAAAA,IAA+G+D,EAAA,CAApGvD,MAAM,eAAe1vB,KAAK,UAAWkzB,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAAsK,yB,CA1O7DpjD,SAAAi4C,EAAAA,EAAAA,KA0OqF,IAAoBE,EAAA,MAAAA,EAAA,MA1OzGC,EAAAA,EAAAA,IA0OqF,4BA1OrFx7B,EAAA,OAAAA,EAAA,KA6OIm7B,EAAAA,EAAAA,IAGSY,EAAA,CAHAC,KAAM,IAAE,CA7OrB54C,SAAAi4C,EAAAA,EAAAA,KA8OM,IAAwH,EAAxHF,EAAAA,EAAAA,IAAwH+D,EAAA,CAA7GvD,MAAM,eAAe1vB,KAAK,UAAWkzB,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAAuK,kC,CA9O7DrjD,SAAAi4C,EAAAA,EAAAA,KA8O8F,IAAoBE,EAAA,MAAAA,EAAA,MA9OlHC,EAAAA,EAAAA,IA8O8F,4BA9O9Fx7B,EAAA,I,eA+OM47B,EAAAA,EAAAA,IAA8E,OAAzEC,MAAA,mCAAsC,iCAA6B,OA/O9E77B,EAAA,KAkPIm7B,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,IAAE,CAlPrB54C,SAAAi4C,EAAAA,EAAAA,KAmPM,IAAmG,EAAnGF,EAAAA,EAAAA,IAAmG+D,EAAA,CAAxFvD,MAAM,eAAe1vB,KAAK,UAAWkzB,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAAwK,mB,CAnP7DtjD,SAAAi4C,EAAAA,EAAAA,KAmP+E,IAAcE,EAAA,MAAAA,EAAA,MAnP7FC,EAAAA,EAAAA,IAmP+E,sBAnP/Ex7B,EAAA,I,eAoPM47B,EAAAA,EAAAA,IAA6E,OAAxEC,MAAA,mCAAsC,gCAA4B,mBACvED,EAAAA,EAAAA,IAAkH,OAA7GC,MAAA,mCAAqC,sEAAkE,OArPlH77B,EAAA,I,eAwPI47B,EAAAA,EAAAA,IAAwB,OAAnBD,MAAM,QAAM,WACjBR,EAAAA,EAAAA,IAGSY,EAAA,CAHAC,KAAM,IAAE,CAzPrB54C,SAAAi4C,EAAAA,EAAAA,KA0PM,IACkG,EADlGF,EAAAA,EAAAA,IACkG+D,EAAA,CADvFvD,MAAM,eAAe1vB,KAAK,UACzBkzB,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAAyK,sC,CA3PzBvjD,SAAAi4C,EAAAA,EAAAA,KA2P8D,IAA8BE,EAAA,MAAAA,EAAA,MA3P5FC,EAAAA,EAAAA,IA2P8D,sCA3P9Dx7B,EAAA,OAAAA,EAAA,KA8PIm7B,EAAAA,EAAAA,IAGSY,EAAA,CAHAC,KAAM,IAAE,CA9PrB54C,SAAAi4C,EAAAA,EAAAA,KA+PM,IAC4G,EAD5GF,EAAAA,EAAAA,IAC4G+D,EAAA,CADjGvD,MAAM,eAAe1vB,KAAK,UACzBkzB,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAA0K,gD,CAhQzBxjD,SAAAi4C,EAAAA,EAAAA,KAgQwE,IAA8BE,EAAA,MAAAA,EAAA,MAhQtGC,EAAAA,EAAAA,IAgQwE,sCAhQxEx7B,EAAA,OAAAA,EAAA,OAAAA,EAAA,G,2DAKA,GACEzgB,KAAM,sBACNoT,QAAS,CACP0zC,cAAAA,GACEt4D,KAAKy3D,MAAM,4BAA6B,GAAI,iBAC9C,EAGA,qBAAMc,GACJ,MAAMh0D,EAAO,CACX,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAClE,IAAK,IAAK,IAAK,KAEXstC,EAAa,IAAIrU,WAAWj5B,GAClC,IAAImK,EAAQ,CACV9E,QAASioC,GAEX7xC,KAAKy3D,MAAM,4BAA6B/oD,EAAO,kBACjD,EAEA,6BAAM8pD,GACJ,MAAMj0D,EAAO,CACX,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAClE,IAAK,IAAK,IAAK,KAEXstC,EAAa,IAAIrU,WAAWj5B,GAClC,IAAImK,EAAQ,CACV9E,QAASioC,GAEX7xC,KAAKy3D,MAAM,4BAA6B/oD,EAAO,0BACjD,EAEA+pD,oBAAAA,GAEE,MAAMniB,EAAS,IAETwiB,EACF,qEAGEC,EAAK,IAAIC,EAAAA,GACRC,GAAQF,EAAGG,WAAWH,EAAGthB,IAAK,CAACnB,IACtCyiB,EAAGI,gBAAgB,CAACF,GAAOH,GAC3B,MAAMpqD,EAAQ,CACZ0qD,iBAAkBL,EAClB3kB,QAAS,CAAC,EACVnvB,MAAO,cACPyc,QAAS,CACP23B,aAAa,IAIjBr5D,KAAKy3D,MAAM,4BAA6B/oD,EAAO,sBACjD,EAEA,oBAAMiqD,GACJ,IAAI5kC,EAAWnF,OAAOmF,SACtBA,EAASorB,gBACL,cACA,uCAEJ,IAAI56C,EAAO,CACT0N,OAAQ,kBACRvI,OAAQ,CACN,qEACA,2DAIJ1J,KAAKy3D,MAAM,4BAA6BlzD,EAAM,cAChD,EAGA,uCAAMq0D,GAEJ,MAAMtiB,EAAS,IAETwiB,EACF,qEAGEC,EAAK,IAAIC,EAAAA,GACRC,GAAQF,EAAGG,WAAWH,EAAGthB,IAAK,CAACnB,IACtCyiB,EAAGI,gBAAgB,CAACF,GAAOH,GAC3B,MAAMpqD,EAAQ,CACZ0qD,iBAAkBL,EAClBr3B,QAAS,CACP23B,aAAa,KAKVC,EAASC,SAAqBv5D,KAAKw5D,4BACtC9qD,GAEJA,EAAM4qD,QAAUA,EAChB5qD,EAAM6qD,YAAcA,EAEpBv5D,KAAKy3D,MAAM,4BAA6B/oD,EAAO,sBACjD,EAGA,iDAAMmqD,GAEJ,MAAMviB,EAAS,IAETwiB,EACF,qEAGEC,EAAK,IAAIC,EAAAA,GACRC,GAAQF,EAAGG,WAAWH,EAAGthB,IAAK,CAACnB,IACtCyiB,EAAGI,gBAAgB,CAACF,GAAOH,GAE3B,MAAMpqD,EAAQ,CACZ0qD,iBAAkBL,EAClBr3B,QAAS,CACP23B,aAAa,KAKVC,EAASC,SAAqBv5D,KAAKw5D,4BACtC9qD,GAEJA,EAAM4qD,QAAUA,EAChB5qD,EAAM6qD,YAAcA,EACpBv5D,KAAKy3D,MAAM,4BAA6B/oD,EAAO,gCACjD,EAGA,iCAAM8qD,CAA4B9qD,GAEhC,IAAI+qD,EAAc,CAAC,GAAI,IAWvB,GATI,YAAa/qD,GACbA,EAAM4qD,QAAQhyD,OAAS,GACvB,gBAAiBoH,GACjBA,EAAM6qD,YAAYjyD,OAAS,IAE7BmyD,EAAc,CAAC/qD,EAAM4qD,QAAS5qD,EAAM6qD,gBAIhC,qBAAsB7qD,GAC1B,OAAO,IAAI7M,SAASD,IAClBA,EAAQ63D,EAAY,IAWxB,IAAIC,EAAiB9qC,OAAOmF,SAAS4mB,6BAA6B,OAClE,GAA6B,GAAzB+e,EAAepyD,OACjB,OAAO,IAAIzF,SAASD,IAClBA,EAAQ63D,EAAY,IAIxB,IACE,IAAIra,GAASua,EAAAA,EAAAA,GAAe,WAC5Bva,EAAS,gDACT,MAAMwa,EAAY,IAAIC,EAAAA,EAAU,CAAEz2D,IAAKg8C,IAGvC1wC,EAAM0qD,iBAAiBU,UAAUJ,EAAe,IAChD,MAAMx4D,QAAewN,EAAM0qD,iBAAiBW,MAAM,CAChDh+B,OAAQ69B,IAEJN,EAAUU,EAAO94D,GAAQ0D,SAAS,UAClC20D,QAAoBP,EAAAA,EAAexuC,KAAK8uC,GAAShnC,SACvDmnC,EAAc,CAACH,EAASC,EAC1B,CAAE,MAAOhoD,GACP,OAAO,IAAI1P,SAASD,IAClBA,EAAQ63D,EAAY,GAExB,CAEA,OAAO,IAAI53D,SAASD,IAClBA,EAAQ63D,EAAY,GAExB,EAGAf,6BAAAA,GAEE,MAAMpiB,EAAS,IAETwiB,EACJ,qEAGIC,EAAK,IAAIC,EAAAA,GACRC,GAAQF,EAAGG,WAAWH,EAAGthB,IAAK,CAACnB,IACtCyiB,EAAGI,gBAAgB,CAACF,GAAOH,GAC3B,MAAMpqD,EAAQ,CACZ0qD,iBAAkBL,EAClB3kB,QAAS,CAAC,EACVnvB,MAAO,cACPyc,QAAS,CACP23B,aAAa,IAIjBr5D,KAAK+1D,gBAAkBx6C,KAAKC,UAAU9M,GACtC1O,KAAKi6D,sBAAwBvrD,EAC7B1O,KAAKk6D,iBAAmB,+BAC1B,IClNJ,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAS,GAAQ,CAAC,YAAY,qBAEzF,Q,kHC2IExK,EAAAA,EAAAA,IAyBS3B,EAAA,CAzBA6C,OAAQ,GAAIhD,MAAM,c,CApJ7Bv4C,SAAAi4C,EAAAA,EAAAA,KAqJI,IAOS,EAPTF,EAAAA,EAAAA,IAOSY,EAAA,CAPAC,KAAM,IAAE,CArJrB54C,SAAAi4C,EAAAA,EAAAA,KAsJM,IAAsG,EAAtGF,EAAAA,EAAAA,IAAsG+D,EAAA,CAA3FvD,MAAM,eAAe1vB,KAAK,UAAWkzB,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAAgM,yB,CAtJ7D9kD,SAAAi4C,EAAAA,EAAAA,KAsJqF,IAAWE,EAAA,KAAAA,EAAA,KAtJhGC,EAAAA,EAAAA,IAsJqF,mBAtJrFx7B,EAAA,I,aAuJM47B,EAAAA,EAAAA,IAIM,OAJDC,MAAA,+FAA0F,EAC7FD,EAAAA,EAAAA,IAEK,UAFD,2BAEJ,OA1JR57B,EAAA,I,aA6JI47B,EAAAA,EAAAA,IAAwB,OAAnBD,MAAM,QAAM,WAEjBR,EAAAA,EAAAA,IAaSY,EAAA,CAbAC,KAAM,IAAE,CA/JrB54C,SAAAi4C,EAAAA,EAAAA,KAgKM,IAEY,EAFZF,EAAAA,EAAAA,IAEY+D,EAAA,CAFDvD,MAAM,eAAe1vB,KAAK,UAAWkzB,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAAiM,0BAAyB,K,CAhKtF/kD,SAAAi4C,EAAAA,EAAAA,KAgK6F,IAEvFE,EAAA,KAAAA,EAAA,KAlKNC,EAAAA,EAAAA,IAgK6F,yBAhK7Fx7B,EAAA,I,aAoKM47B,EAAAA,EAAAA,IAOM,OAPDC,MAAA,+FAA0F,EAC7FD,EAAAA,EAAAA,IAEK,UAFD,sCAGJA,EAAAA,EAAAA,IAEK,UAFD,yBAEJ,OA1KR57B,EAAA,OAAAA,EAAA,G,gBAIA,GACEzgB,KAAM,2BACNoT,QAAS,CACP,0BAAMu1C,GAEJ,GADAn6D,KAAKskB,QAAUtkB,KAAKq6D,oBACC,KAAjBr6D,KAAKskB,QAEP,YADAozC,MAAM,uBAIR,IAAI9f,EAAW53C,KAAK43C,SACpB53C,KAAKy3D,MAAM,4BAA6Bl8C,KAAKC,UAAUo8B,IACvD,IAAI7jB,EAAW,IAAIglB,EAAAA,oBAAoBnqB,OAAOmF,UAC1CkU,QAAYlU,EAASgE,YAAY/3B,KAAKskB,QAASszB,EAAU,oBAC7D,GAAI3P,EAAI/iC,KAAM,CACZ,GAAgB,KAAZ+iC,EAAI/iC,KAAa,CACnB,IAAII,EAAM,yDACVoyD,MAAMpyD,GACNtF,KAAKy3D,MAAM,4BAA6BnyD,EAAK,uBAC/C,CAEA,YADAtF,KAAKy3D,MAAM,4BAA6BxvB,EAAK,uBAE/C,CACAlY,QAAQjtB,IAAImlC,GAEZ,MAAMqyB,EAAc,IAAIC,EAAAA,GAAY,CAAEC,QAAS,qDAC/C,IAAIC,EAAK,QACT,MAAMrmB,EAAU,IAAIsmB,EAAAA,GAAQJ,EAAat6D,KAAKskB,QAASm2C,GACvD,IAAIE,EAAO36D,KACXo0C,EAAQwmB,cAAchjB,EAAU3P,GAAK5lC,MAAK,SAAUw4D,GAClDF,EAAKlD,MAAM,4BAA6B,UAAYoD,EAAU,KAAO5yB,EAAK,uBAC5E,IAAGn2B,OAAM,SAAUP,GACjBopD,EAAKlD,MAAM,4BAA6B,UAAYlmD,EAAQ,KAAO02B,EAAK,uBAC1E,GACF,EAEA,8BAAMmyB,GAEJ,GADAp6D,KAAKskB,QAAUtkB,KAAKq6D,oBACC,KAAjBr6D,KAAKskB,QAEP,YADAozC,MAAM,uBAIR,IAAIx1C,EAAM44C,EAAAA,GAAQC,YAAY,OAC9B,MAAMC,EAAmBC,EAAAA,GAASC,QAAQ,CACxCtmB,GAAI,qEACJv1C,MAAO6iB,IAKHi5C,EAAkB,qEAElBC,EAAe,CACnB3hB,MAAO,CACL,CACE4hB,iBAAkBF,EAClBG,YAAa,WACbC,SAAUP,KAKhBh7D,KAAKy3D,MAAM,4BAA6Bl8C,KAAKC,UAAU4/C,IACvD,IAAIrnC,EAAW,IAAIglB,EAAAA,oBAAoBnqB,OAAOmF,UAE1C4mC,EAAO36D,KACX+zB,EAASolB,gBAAgBn5C,KAAKskB,QAAS82C,EAAc,oBAAoB/4D,MAAK,SAAS4lC,GACrFlY,QAAQjtB,IAAI,mCAAoCmlC,GAChD0yB,EAAKlD,MAAM,4BAA6BxvB,EAAK,2BAC/C,IAAGn2B,OAAM,SAASP,GAChB,GAAkB,KAAdA,EAAMrM,KAAa,CACrB,IAAII,EAAM,yDACVoyD,MAAMpyD,GACNq1D,EAAKlD,MAAM,4BAA6BnyD,EAAK,2BAC/C,MACEq1D,EAAKlD,MAAM,4BAA6BlmD,EAAO,2BAEnD,GACF,EAEA8oD,iBAAAA,GACE,IAAItmC,EAAW,IAAIglB,EAAAA,oBAAoBnqB,OAAOmF,UAC9C,MAAMzP,EAAUyP,EAASsgB,WAAW,qBAAqB/vB,QACzD,OAAOA,CACT,EAEAk3C,YAAAA,GACE,IAAIznC,EAAW,IAAIglB,EAAAA,oBAAoBnqB,OAAOmF,UAC9C,MAAMqgB,EAAUrgB,EAASsgB,WAAW,oBAGpC,OAFAtkB,QAAQjtB,IAAI,iBACZitB,QAAQjtB,IAAIsxC,GACL,kEACT,GAGF7vC,IAAAA,GACE,MAAMqzC,EAAW,CACb,OAAU,CACR,QAAW,mBACX,KAAQ,WACR,QAAW,KAEb,QAAW,CACT,SAAY,0BACZ,QAAW,sBAEb,YAAe,MACf,MAAS,CACP,eAAkB,CAChB,CACE,KAAQ,OACR,KAAQ,QAEV,CACE,KAAQ,UACR,KAAQ,QAEV,CACE,KAAQ,UACR,KAAQ,SAGZ,IAAO,CACL,CACE,KAAQ,UACR,KAAQ,QAEV,CACE,KAAQ,WACR,KAAQ,WAMlB,MAAO,CACLA,WAEJ,GCxIF,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAS,GAAQ,CAAC,YAAY,qBAEzF,Q,2LC0IE8X,EAAAA,EAAAA,IAmDS3B,EAAA,CAnDA6C,OAAQ,GAAIhD,MAAM,c,CAnJ7Bv4C,SAAAi4C,EAAAA,EAAAA,KAoJI,IAES,EAFTF,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CApJrB54C,SAAAi4C,EAAAA,EAAAA,KAqJM,IAAuG,EAAvGF,EAAAA,EAAAA,IAAuG+D,EAAA,CAA5FvD,MAAM,eAAe1vB,KAAK,UAAWkzB,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAAsN,qB,CArJ7DpmD,SAAAi4C,EAAAA,EAAAA,KAqJiF,IAAgBE,EAAA,KAAAA,EAAA,KArJjGC,EAAAA,EAAAA,IAqJiF,wBArJjFx7B,EAAA,OAAAA,EAAA,KAuJIm7B,EAAAA,EAAAA,IAESY,EAAA,CAFAC,KAAM,IAAE,CAvJrB54C,SAAAi4C,EAAAA,EAAAA,KAwJM,IAA2G,EAA3GF,EAAAA,EAAAA,IAA2G+D,EAAA,CAAhGvD,MAAM,eAAe1vB,KAAK,UAAWkzB,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAAuN,uB,CAxJ7DrmD,SAAAi4C,EAAAA,EAAAA,KAwJmF,IAAkBE,EAAA,KAAAA,EAAA,KAxJrGC,EAAAA,EAAAA,IAwJmF,0BAxJnFx7B,EAAA,OAAAA,EAAA,I,eA2JI47B,EAAAA,EAAAA,IAAwB,OAAnBD,MAAM,QAAM,WAGjBR,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,IAAE,CA9JrB54C,SAAAi4C,EAAAA,EAAAA,KA+JM,IAEY,EAFZF,EAAAA,EAAAA,IAEY+D,EAAA,CAFDvD,MAAM,eAAe1vB,KAAK,UAAWkzB,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAAwN,sBAAqB,K,CA/JlFtmD,SAAAi4C,EAAAA,EAAAA,KA+JyF,IAEnFE,EAAA,MAAAA,EAAA,MAjKNC,EAAAA,EAAAA,IA+JyF,wCA/JzFx7B,EAAA,OAAAA,EAAA,KAoKIm7B,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,IAAE,CApKrB54C,SAAAi4C,EAAAA,EAAAA,KAqKM,IAEY,EAFZF,EAAAA,EAAAA,IAEY+D,EAAA,CAFDvD,MAAM,eAAe1vB,KAAK,UAAWkzB,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAAyN,qCAAoC,K,CArKjGvmD,SAAAi4C,EAAAA,EAAAA,KAqKwG,IAElGE,EAAA,MAAAA,EAAA,MAvKNC,EAAAA,EAAAA,IAqKwG,wCArKxGx7B,EAAA,OAAAA,EAAA,KA0KIm7B,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,IAAE,CA1KrB54C,SAAAi4C,EAAAA,EAAAA,KA2KM,IAEY,EAFZF,EAAAA,EAAAA,IAEY+D,EAAA,CAFDvD,MAAM,eAAe1vB,KAAK,UAAWkzB,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAA0N,oCAAmC,K,CA3KhGxmD,SAAAi4C,EAAAA,EAAAA,KA2KuG,IAEjGE,EAAA,MAAAA,EAAA,MA7KNC,EAAAA,EAAAA,IA2KuG,uCA3KvGx7B,EAAA,OAAAA,EAAA,I,eAgLI47B,EAAAA,EAAAA,IAAwB,OAAnBD,MAAM,QAAM,WAGjBR,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,IAAE,CAnLrB54C,SAAAi4C,EAAAA,EAAAA,KAoLM,IAEY,EAFZF,EAAAA,EAAAA,IAEY+D,EAAA,CAFDvD,MAAM,eAAe1vB,KAAK,UAAWkzB,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAAwN,sBAAqB,K,CApLlFtmD,SAAAi4C,EAAAA,EAAAA,KAoL0F,IAEpFE,EAAA,MAAAA,EAAA,MAtLNC,EAAAA,EAAAA,IAoL0F,+CApL1Fx7B,EAAA,OAAAA,EAAA,KAyLIm7B,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,IAAE,CAzLrB54C,SAAAi4C,EAAAA,EAAAA,KA0LM,IAEY,EAFZF,EAAAA,EAAAA,IAEY+D,EAAA,CAFDvD,MAAM,eAAe1vB,KAAK,UAAWkzB,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAAyN,qCAAoC,K,CA1LjGvmD,SAAAi4C,EAAAA,EAAAA,KA0LyG,IAEnGE,EAAA,MAAAA,EAAA,MA5LNC,EAAAA,EAAAA,IA0LyG,+CA1LzGx7B,EAAA,OAAAA,EAAA,KA+LIm7B,EAAAA,EAAAA,IAISY,EAAA,CAJAC,KAAM,IAAE,CA/LrB54C,SAAAi4C,EAAAA,EAAAA,KAgMM,IAEY,EAFZF,EAAAA,EAAAA,IAEY+D,EAAA,CAFDvD,MAAM,eAAe1vB,KAAK,UAAWkzB,QAAK5D,EAAA,KAAAA,EAAA,GAAAgB,GAAEL,EAAA0N,oCAAmC,K,CAhMhGxmD,SAAAi4C,EAAAA,EAAAA,KAgMwG,IAElGE,EAAA,MAAAA,EAAA,MAlMNC,EAAAA,EAAAA,IAgMwG,8CAhMxGx7B,EAAA,OAAAA,EAAA,OAAAA,EAAA,G,qCAMA,GACEzgB,KAAM,uBACNoT,QAAS,CAEP,sBAAM62C,GACJz7D,KAAKy3D,MAAM,4BAA6B,cACxC,IAAI1jC,EAAW,IAAI8mB,EAAAA,gBAAgBjsB,OAAOmF,UACtCkU,QAAYlU,EAASgE,YAAY,aAAc,gBACnD,GAAIkQ,EAAI/iC,KAEN,YADAlF,KAAKy3D,MAAM,4BAA6BxvB,EAAK,oBAG/C,IAAI6zB,EAAU,IAAIC,EAAAA,GAAQ,CACxB,SAAY,0BACZ,QAAW,CAAC,EACZ,WAAc,KAGhB,MAAMn4C,QAAek4C,EAAQE,IAAIpB,cAAc,KAAOZ,EAAOxvC,KAAK,cAAc5lB,SAAS,OAAQqjC,EAAKlU,EAASsgB,WAAW,gBAAgB/vB,SAC1ItkB,KAAKy3D,MAAM,4BAA6B,UAAY7zC,EAAS,KAAOqkB,EAAK,mBAC3E,EAEA,wBAAMyzB,GACJ17D,KAAKy3D,MAAM,4BAA6B,cACxC,IAAI1jC,EAAW,IAAI8mB,EAAAA,gBAAgBjsB,OAAOmF,UACtCkU,QAAYlU,EAASinB,cAAc,aAAc,gBACrD,GAAI/S,EAAI/iC,KAEN,YADAlF,KAAKy3D,MAAM,4BAA6BxvB,EAAK,oBAG/C,IAAI6zB,EAAU,IAAIC,EAAAA,GAAQ,CACxB,SAAY,0BACZ,QAAW,CAAC,EACZ,WAAc,KAEhB,MAAME,QAAsBH,EAAQE,IAAIE,gBAAgB,aAAcj0B,GACtElY,QAAQjtB,IAAI,mCAAoCm5D,GAChDlsC,QAAQjtB,IAAI,6BAA8BixB,EAASsgB,WAAW,gBAAgB/vB,SAC9E,MAAMV,EAASq4C,IAAkBloC,EAASsgB,WAAW,gBAAgB/vB,QACrEtkB,KAAKy3D,MAAM,4BAA6B,UAAY7zC,EAAS,KAAQqkB,EAAK,mBAC5E,EAEA,0BAAM0zB,CAAqBQ,GACzB,IAAIpoC,EAAW,IAAI8mB,EAAAA,gBAAgBjsB,OAAOmF,UACpC+nC,EAAU,IAAIC,EAAAA,GAAQ,CACxB,SAAY,0BACZ,QAAW,CAAC,EACZ,WAAc,KAEdz3C,EAAUyP,EAASsgB,WAAW,gBAAgB/vB,QAClD,MAAM80B,QAAoB0iB,EAAQM,mBAAmBC,QAAQ,qCAAsC,IAAM/3C,GAGzG,GAFAtkB,KAAKy3D,MAAM,4BAA6Bre,GAEpC+iB,EAAY,CACd,IAAIl0B,QAAYlU,EAASiE,gBAAiBohB,EAAa,gBACvDp5C,KAAKy3D,MAAM,4BAA6BxvB,EAAK,uBAC/C,KAAO,CACL,IAAI8wB,QAAWhlC,EAASmF,uBAAuBkgB,EAAY,gBAC3Dp5C,KAAKy3D,MAAM,4BAA6BsB,EAAI,0BAC9C,CACF,EAEA,iBAAMuD,GACJ,IAAIR,EAAU,IAAIC,EAAAA,GAAQ,CACxB,SAAY,0BACZ,QAAW,CAAC,EACZ,WAAc,KAEZQ,EAAkB,6CAEtB,IACE,MAAMjhB,QAAiBwgB,EAAQE,IAAIM,YAAYC,GACzCC,EAAMlhB,EAASkhB,IAAIC,OACzB1sC,QAAQjtB,IAAI,WACZitB,QAAQjtB,IAAI05D,EACd,CAAE,MAAOjrD,GACPwe,QAAQjtB,IAAI,8BAA+ByO,EAC7C,CACF,EAEA,yCAAMqqD,CAAoCO,GAExC,IAAIL,EAAU,IAAIC,EAAAA,GAAQ,CACxB,SAAY,0BACZ,QAAW,CAAC,EACZ,WAAc,KAEZQ,EAAkB,6CAClBxoC,EAAW,IAAI8mB,EAAAA,gBAAgBjsB,OAAOmF,UACtCzP,EAAUyP,EAASsgB,WAAW,gBAAgB/vB,QAClD,MAAMo4C,EAAY,CAChB,CAACx+B,KAAM,UAAW7+B,MAAO,GACzB,CAAC6+B,KAAM,UAAW7+B,MAAO,GACzB,CAAC6+B,KAAM,UAAW7+B,MAAO,IAErBk1C,QAAYunB,EAAQM,mBAAmBO,qBAAqBJ,EAAiB,iCAAkC,CAAC,EAAGG,EAAWp4C,GAIpI,GAHAyL,QAAQjtB,IAAI,uBACZitB,QAAQjtB,IAAIyxC,GACZv0C,KAAKy3D,MAAM,4BAA6BljB,EAAI6E,aACxC+iB,EAAY,CACd,IAAIpD,QAAWhlC,EAASiE,gBAAiBuc,EAAI6E,YAAY,gBACzDp5C,KAAKy3D,MAAM,4BAA6BsB,EAAI,0BAC9C,KAAO,CACL,IAAIA,QAAWhlC,EAASmF,uBAAuBqb,EAAI6E,YAAY,gBAC/Dp5C,KAAKy3D,MAAM,4BAA6BsB,EAAI,0BAC9C,CACF,EAEA,wCAAM8C,CAAmCM,GACvC,IAAII,EAAkB,6CAClBxoC,EAAW,IAAI8mB,EAAAA,gBAAgBjsB,OAAOmF,UACtCzP,EAAUyP,EAASsgB,WAAW,gBAAgB/vB,QAClD,MAAMo4C,EAAY,CAChB,CAACx+B,KAAM,UAAW7+B,MAAOk9D,GACzB,CAACr+B,KAAM,UAAW7+B,MAAO,MAE3B,IAAIy8D,EAAU,IAAIC,EAAAA,GAAQ,CACxB,SAAY,0BACZ,QAAW,CAAC,EACZ,WAAc,KAEhB,MAAMxnB,QAAYunB,EAAQM,mBAAmBO,qBAAqBJ,EAAiB,2BAA4B,CAAC,EAAGG,EAAWp4C,GAE9H,IAAI80B,EAAc7E,EAAI6E,YAGtB,GAFAp5C,KAAKy3D,MAAM,4BAA6Bre,GAEpC+iB,EAAY,CACd,IAAIpD,QAAWhlC,EAASiE,gBAAgBohB,EAAY,gBACpDp5C,KAAKy3D,MAAM,4BAA6BsB,EAAI,0BAC9C,KAAO,CACL,IAAIA,QAAWhlC,EAASmF,uBAAuBkgB,EAAY,gBAC3Dp5C,KAAKy3D,MAAM,4BAA6BsB,EAAI,0BAC9C,CAEF,ICrIJ,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAS,GAAQ,CAAC,YAAY,qBAEzF,Q,qBVgiCA,MAAM,iBAAC6D,IAAoB98D,EAAQ,QAC7B,WAAC+8D,IAAc/8D,EAAQ,OAQ7B,IAAIg9D,KAEJ,MAAMC,GAAY,CAChB,EAAG,CAACvrD,KAAM,MAAOu/C,SAAS,GAC1B,GAAI,CAACv/C,KAAM,MAAOu/C,SAAS,GAC3B,IAAK,CAACv/C,KAAM,UAAWu/C,SAAS,GAChC,IAAK,CAACv/C,KAAM,OAAQu/C,SAAS,GAC7B,WAAY,CAACv/C,KAAM,MAAOu/C,SAAS,GACnC,cAAe,CAACv/C,KAAM,MAAOu/C,SAAS,GACtC,cAAe,CAACv/C,KAAM,MAAOu/C,SAAS,GACtC,gBAAiB,CAACv/C,KAAM,QAASu/C,SAAS,GAC1C,0CAA2C,CACzCv/C,KAAM,SACNu/C,SAAS,GAEX,0CAA2C,CACzCv/C,KAAM,cACNu/C,SAAS,GAEX,eAAgB,CACdv/C,KAAM,gBACNu/C,SAAS,GAEX,mBAAoB,CAACv/C,KAAM,mBAAoBu/C,SAAS,GACxD,mBAAoB,CAACv/C,KAAM,mBAAoBu/C,SAAS,GACxD,kBAAmB,CAACv/C,KAAM,UAAWu/C,SAAS,GAC9C,mBAAoB,CAACv/C,KAAM,QAASu/C,SAAS,GAC7C,qBAAsB,CAACv/C,KAAM,SAAUu/C,SAAS,GAChD,mBAAoB,CAACv/C,KAAM,MAAOu/C,SAAS,GAC3C,iBAAkB,CAACv/C,KAAM,iBAAkBu/C,SAAS,GACpD,eAAgB,CAACv/C,KAAM,OAAQu/C,SAAS,GACxC,OAAQ,CAACv/C,KAAM,kBAAmBu/C,SAAS,GAC3C,KAAM,CAACv/C,KAAM,QAASu/C,SAAS,GAC/B,QAAY,CAACv/C,KAAM,UAAWu/C,SAAS,GACvC,mBAAoB,CAACv/C,KAAM,WAAYu/C,SAAS,IAG5CiM,GAAgC,CACpC,OAGF,IAAIC,GAAe,IAAIvlD,IAAI,IACvBwlD,GAAiB,CAAC,SAAU,UAAW,SACvCC,GAAyB,OACzBC,GAAmB,eACnBC,GAAmB,QACnBC,GAAgBjN,EAAAA,MAAMC,MAG1B,IACE9+C,KAAM,MACNq6C,WAAY,CACV0R,qBAAoB,EACpBC,UAAS,KACTC,SAAQ,EACRC,aAAY,EACZC,SAAQ,EACRC,cAAaA,GAGfpG,KAAAA,GACE,MAAMrB,GAAkBf,EAAAA,EAAAA,KAAI,GAE5B,MAAO,CACLe,kBAEJ,EACA5xD,KAAMA,KACG,CACL+tD,UAAW,WACXuL,UAAW,GACXC,cAAe,GACfC,iBAAkB,GAClBpN,cAAe,GACfqN,gBAAiB,IACjBC,QAAS,GACT5rC,cAAc,EACdm/B,iBAAkB,UAClBE,kBAAmB,iBACnBJ,eAAgB,YAChBO,oBAAqB,aACrBqM,YAAa,GACbC,YAAa,GACbpI,gBAAiB,GACjBqI,cAAe,WACfhI,mBAAoB,OACpBxE,cAAe,GACfqE,QAAS,GACToI,mBAAoB,GACpBtM,WAAW,EACXuM,eAAe,EACfnM,QAAS,+BACTnpD,cAAe,GACfgoD,eAAe,EACfF,gBAAiBiM,GACjB9L,kBAAoB3gC,GACX2sC,GAAasB,IAAIjuC,GAE1Bi+B,OAA+C,SAAvCjpC,aAAa7V,QAAQ,eAC7Bk/C,cAAwD,SAAzCrpC,aAAa7V,QAAQ,iBACpCq/C,OAAQoO,GACR1N,iBAAkB,CAAC,OAAQ,OAAQ,YACnCJ,eAAgB+N,GAChBvN,SAAUwN,GACVnN,QAAS,CACP,QACA,QACA,QACA,KACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SAEFO,eAAgB,GAChBgO,mBAAoB,GACpB9N,eAAgB,CACd,+BACA,qBACA,kCACA,+BACA,uCACA,uBACA,mCACA,kCACA,0BACA,mBACA,qBACA,uBACA,sBAGFxoB,SAAUm1B,GACVlN,MAAOmN,GACPjN,MAAOA,EAAAA,MACPh0C,SAAU8gD,GACVvH,iBAAkBwH,GAClB1O,aAAe+P,IACbn5C,aAAalM,QAAQ,cAAe,GAAGqlD,KACvCn+B,SAASo+B,QAAQ,EAEnB9P,oBAAsB6P,IACpBn5C,aAAalM,QAAQ,gBAAiB,GAAGqlD,IAAY,EAEvDvN,mBAAqB5gC,IACnBP,QAAQjtB,IAAI,gCAAgCwtB,GACxC2sC,GAAasB,IAAIjuC,GACnB2sC,GAAa7yC,OAAOkG,GAEpB2sC,GAAatlD,IAAI2Y,EACnB,EAEFquC,uBAAwB,KAG5BC,SAAU,CACRhT,iBAAkB,WAChB,OAAO5rD,KAAK4xD,aACd,GAEFhtC,QAAS,CACP65C,SAAAA,CAAUnuC,GACR,OAAOtwB,KAAK6+D,eAAeN,IAAIjuC,EACjC,EAEAwuC,UAAAA,CAAWC,GACT,GAAIA,EAAUz3D,OAAS,EAAG,CACxB,MAAM03D,EAAgB9/D,OAAOkf,OAAO,CAAC,EAAGpe,KAAK8wD,iBAC7C,IAAK,MAAMxgC,KAAWyuC,EAChBC,EAAc1uC,KAChB0uC,EAAc1uC,GAASygC,SAAWiO,EAAc1uC,GAASygC,SAG7D/wD,KAAK8wD,gBAAkBkO,CACzB,CAEAh/D,KAAKgxD,eAAgB,CACvB,EAEA,oBAAMwB,CAAeyM,GACnB,MAAMC,EAAUD,EAAI1H,MAAQ0H,EAAI1H,MAAM/lD,KAAOytD,EAAIztD,KACjDxR,KAAKo+D,cAAgBc,EACrBnvC,QAAQjtB,IAAI,UAAWo8D,GAElBtwC,OAAOmF,UACVhE,QAAQxe,MAAM,aAIdvR,KAAKm2D,gBADQ,oBAAX+I,EAMJtwC,OAAOmF,SAASorB,gBAAgBn/C,KAAKo+D,cACvC,EAEA,oBAAM/M,GAGJ,IAAI8N,EAFJpvC,QAAQjtB,IAAI,oFACZ8rB,OAAO8U,aAAc,EAUnBy7B,EARGn/D,KAAKuuD,OAQG6Q,EAAAA,sBAAsBztD,KAAK,CACpC23B,aAAc,CACZC,KAAM,kEACN/3B,KAAM,4BACNioB,YAAY,gDAEd4lC,qBAAsB,CACpBjQ,eAAgB+N,GAChBrO,OAAQ,OAEV5mB,SAAUm1B,GACViC,cAAe,CACbnP,MAAOmN,MAnBAzhB,EAAAA,qBAAqBlqC,KAAK,CACnC23B,aAAc,CACZ93B,KAAM,mBACN+3B,KAAM,sDAqBZ41B,EAAS98D,MAAM0xB,IAmBb,GAlBAnF,OAAOmF,SAAWA,EAClBnF,OAAOwxB,YAAc,IAAIrG,EAAAA,eAAenrB,OAAOmF,UAC/CnF,OAAOwxB,YAAY1F,gBAAgBpnB,IAC7BvD,QAAQjtB,IAAI,gCAAiCyY,KAAKC,UAAU8X,GAAY,IACtE/qB,IACFwnB,QAAQjtB,IAAI,sCAAuCyF,EAAI,IAIzDqmB,OAAOmF,oBAAoBqrC,EAAAA,uBAC7BxwC,OAAOmF,SAASwrC,oBAAoBh8D,IAClCwsB,QAAQjtB,IAAI,wBAAwByY,KAAKC,UAAUjY,KAAS,IAIhEwsB,QAAQjtB,IAAI,iBAAkBixB,GAC9BhE,QAAQjtB,IAAI,yBAA0ByY,KAAKC,UAAUuY,EAAS5V,UAE1D4V,EAAS5V,SAASX,WAAY,CAChC,MAAMuhD,EAAY,GAClBhvC,QAAQjtB,IAAI,aAAcixB,EAAS5V,QAAQX,YAC3Cte,OAAO0W,QAAQme,EAAS5V,QAAQX,YAAYnN,SAAQ,EAAE4D,EAAK5U,MAC7C,WAAR4U,EACF5U,EAAMylB,OAAOzU,SAAS4U,IACpB85C,EAAUtoD,KAAKsjB,SAAS9U,EAAM8kB,UAAU,IAAI,IAG9C1qC,EAAMylB,OAAOzU,SAAS4U,IACpB85C,EAAUtoD,KAAKwO,EAAM,GAEzB,IAGF8K,QAAQjtB,IAAI,mBAAoBi8D,GAChC/+D,KAAK8+D,WAAWC,EAClB,MACE/+D,KAAK8+D,WAAW,IAGlB/qC,EAAS/sB,GAAG,eAAgBw4D,KACrBxiD,EAAAA,EAAAA,iBACChd,KAAKy/D,UACHD,GAAQx/D,KAAKuuD,QAAWvuD,KAAK2uD,gBAC/B3uD,KAAKmyD,QAAUqN,EACfx/D,KAAK+xD,WAAY,IAIvBhiC,QAAQjtB,IAAI,yBAA0B08D,EAAI,IAG5CzrC,EAAS/sB,GAAG,wBAAyBiqB,IACnClB,QAAQjtB,IAAI,kCAAmCyY,KAAKC,UAAUyV,IAC9DjxB,KAAK46D,cAAc3pC,EAAM,IAG3B8C,EAAS/sB,GAAG,qBAAsBw4D,KAC5BxiD,EAAAA,EAAAA,iBACEhd,KAAKy/D,UACHD,GAAQx/D,KAAKuuD,QAAWvuD,KAAK2uD,gBAC/B3uD,KAAKmyD,QAAUqN,EACfx/D,KAAK+xD,WAAY,IAIvBhiC,QAAQjtB,IAAI,+BAAgC08D,EAAI,IAIlDzrC,EAAS/sB,GAAG,sBAAsB,KAChC+oB,QAAQjtB,IAAI,gCAAgC,IAG9CixB,EAAS/sB,GAAG,WAAYmX,IACtB4R,QAAQjtB,IAAI,2BAA4Bqb,EAAQ,IAElD4V,EAAS/sB,GAAG,aAAcmX,IACxB4R,QAAQjtB,IAAI,6BAA8Bqb,GAC1Cne,KAAK4xD,cAAgB,WAAW,IAElC79B,EAAS/sB,GAAG,cAAc,EAAEoH,YAC1B2hB,QAAQjtB,IAAI,wBAAwBsL,KACpCpO,KAAK4xD,cAAgB,kBAAkB,IAEzC79B,EAAS/sB,GAAG,kBAAkB,EAAEoH,YAC9B2hB,QAAQjtB,IAAI,4BAA4BsL,IAAQ,IAElD2lB,EAAS/sB,GAAG,kBAAmBmX,IAC7B4R,QAAQjtB,IAAI,2BAA4ByY,KAAKC,UAAU2C,GAAS,IAGlE4V,EAAS/sB,GAAG,kBAAmBmX,IACzBA,IACFne,KAAKi2D,QAAU16C,KAAKC,UAAU2C,IAEhC4R,QAAQjtB,IAAI,2BAA4ByY,KAAKC,UAAU2C,GAAS,GAChE,GAGN,EAEA,uBAAMozC,GACJxhC,QAAQjtB,IAAI,wCAAwC4B,KAAKC,SACrDiqB,OAAOmF,SACT/zB,KAAK0/D,aAEL3vC,QAAQjtB,IAAI,6CAEhB,EAEA,yBAAM2uD,GAEJ,GADA1hC,QAAQjtB,IAAI,wCAAwC4B,KAAKC,SACrDiqB,OAAOmF,UACT,GAAInF,OAAOmF,oBAAoB8nB,EAAAA,qBAC7B,GAAIjtB,OAAOmF,SAASqmB,YAClB,IACE,IAAIxwC,QAAgBglB,OAAOmF,SAASirB,mBAElCh/C,KAAKi2D,QADe,iBAAXrsD,EACMA,EAEA2R,KAAKC,UAAU5R,EAElC,CAAE,MAAO1H,GACPlC,KAAKi2D,QAAU16C,KAAKC,UAAUtZ,EAChC,MAEAlC,KAAKi2D,QAAU,qBAKnBlmC,QAAQjtB,IAAI,0CAEhB,EAEA,sBAAM6uD,GACJ,IACE5hC,QAAQjtB,IAAI,qCAEZ,IAAIixB,EAAWnF,OAAOmF,eAChBA,EAASjrB,aACf9I,KAAK4xD,cAAgB,cACvB,CAAE,MAAOrgD,GACPwe,QAAQjtB,IAAI,0BAA2ByO,EAAM3H,SAC7C5J,KAAKgJ,cAAgBuI,EAAM3H,OAC7B,CACF,EAEA,yBAAM8oD,GACJ,IAAInuD,EAAO,CAAC0N,OAAQ,uBACpBjS,KAAK+1D,gBAAkBx6C,KAAKC,UAAUjX,EACxC,EACA,iBAAMouD,GACJ,IAAIpuD,EAAO,CAAC0N,OAAQ,eACpBjS,KAAK+1D,gBAAkBx6C,KAAKC,UAAUjX,EACxC,EACA,gCAAMquD,GACJ,IAAIruD,EAAO,CACT0N,OAAQ,6BACRvI,OAAQ,CACN,CACE4mB,QAAS,UAIftwB,KAAK+1D,gBAAkBx6C,KAAKC,UAAUjX,EACxC,EAEA,6BAAMsuD,GACJ,IAAItuD,EAAO,CACT0N,OAAQ,0BACRvI,OAAQ,CACNi2D,kBAAmB,CAAC,4BACpBrvC,QAAS,OACTsvC,UAAW,OACXC,eAAgB,CAACruD,KAAM,OAAQsuD,OAAQ,OAAQC,SAAU,IACzDpV,QAAS,CAAC,yBAId3qD,KAAK+1D,gBAAkBx6C,KAAKC,UAAUjX,EACxC,EAEAq/C,oBAAAA,CAAqBxP,GACnB,IAAKA,EACH,MAAO,GAET,IACE,IAAIpvB,EAAaovB,EAAQ7xB,MAAM,KAAK7L,MAAM,GACtC4N,EAAUU,EAAW1d,OAAS,EAAI0d,EAAW5M,KAAK,KAAO,GAC7D,OAAOkM,CACT,CAAE,MAAOpiB,GACP,MAAO,EACT,CAEF,EAEA89D,4BAAAA,CAA6B1vC,GAE3B,GADAP,QAAQjtB,IAAI,gCAAiCwtB,GACzC1B,OAAOmF,UAAYnF,OAAOmF,SAAS5V,SAAWmS,EAAS,CACzD,IAAIrc,EAAMqc,EAAQ/X,SAAS,KAAO+X,EAAQ/N,MAAM,KAAK,GAAK+N,EACtDlM,EAAYwK,OAAOmF,SAAS5V,QAAQX,WACxC,GAAY,WAARvJ,EAAkB,CACpB,IAAIgsD,EAAe77C,EAAUnQ,GAC7B,GAAIgsD,GAAgBA,EAAa/7C,SAAU,CACzC,IAAIA,EAAW+7C,EAAa/7C,SAC5B,MAAO,IACF,IAAIxM,IACHwM,EAEK5L,QAAQ87B,GAAYA,EAAQ77B,SAAS+X,EAAQ,OAE7CxZ,KAAKs9B,GACGp0C,KAAK4jD,qBAAqBxP,MAK/C,CAEF,CACF,CAEF,EAEA,mBAAM0e,GACJ,GAA2B,aAAvB9yD,KAAKo+D,cAA8B,CASrC,IAAIl6C,EAAWlkB,KAAKggE,6BAA6BhgE,KAAKo+D,eAClD95C,EAAUJ,EAAS,GACvB6L,QAAQjtB,IAAI,UAAWwhB,EAAS/I,KAAKC,UAAU0I,IAE/C,IAAIg8C,EAAU,CACZjuD,OAAQ,gBACRvI,OAAQ,CACN,qFACA4a,IAIJtkB,KAAK+1D,gBAAkBx6C,KAAKC,UAAU0kD,EACxC,MAAO,GACoB,eAAvBlgE,KAAKo+D,eACkB,eAAvBp+D,KAAKo+D,cACP,CAUA,IAAI+B,EAAc,CAChBluD,OAAQ,gBACRvI,OAAQ,CACNE,QACI,uFAGR5J,KAAK+1D,gBAAkBx6C,KAAKC,UAAU2kD,EACxC,MAAO,GAA2B,cAAvBngE,KAAKo+D,cAA+B,CAC7C,IAAI75D,EAAO,CACT0N,OAAQ,gBACRvI,OAAQ,CACNE,QACI,uFAIR5J,KAAK+1D,gBAAkBx6C,KAAKC,UAAUjX,EACxC,CACF,EAEA,8BAAMywD,GACJ,IAAIzwD,EAAO,CACT0N,OAAQ,sBACRqe,QAAS,aACT5mB,OAAQ,CACNrK,MAAO,kBACPo4C,IAAK,UACL7C,GAAI,6CACJpqB,KAAM,6CACNjmB,KAAM,+sBAGVvE,KAAK+1D,gBAAkBx6C,KAAKC,UAAUjX,EACxC,EACA,6BAAM6uD,GACJ,MAAM/tD,EAAU,mz6BAChB,GAA2B,aAAvBrF,KAAKo+D,cAA8B,CASrC,IAAIl6C,QAAiB0K,OAAOmF,SAAS3Y,QACnC,CAAEnJ,OAAQ,uBACV,YAEEqS,EAAUJ,EAAS,GACvB6L,QAAQjtB,IAAI,UAAWwhB,EAAS/I,KAAKC,UAAU0I,IAE/C,IAAIg8C,EAAU,CACZjuD,OAAQ,gBACRvI,OAAQ,CACNrE,EACAif,IAIJtkB,KAAK+1D,gBAAkBx6C,KAAKC,UAAU0kD,EACxC,MAAO,GACkB,eAAvBlgE,KAAKo+D,eACkB,eAAvBp+D,KAAKo+D,cACL,CAUA,IAAI+B,EAAc,CAChBluD,OAAQ,gBACRvI,OAAQ,CACNE,QACEvE,IAGNrF,KAAK+1D,gBAAkBx6C,KAAKC,UAAU2kD,EACxC,MAAO,GAA2B,cAAvBngE,KAAKo+D,cAA+B,CAC7C,IAAI75D,EAAO,CACT0N,OAAQ,gBACRvI,OAAQ,CACNE,QACEvE,IAINrF,KAAK+1D,gBAAkBx6C,KAAKC,UAAUjX,EACxC,CACF,EAEA,0BAAMwuD,GAiBJ,IAAI7uC,EAAWlkB,KAAKggE,6BAA6BhgE,KAAKo+D,eAElD95C,EAAUJ,EAAS,GACvB6L,QAAQjtB,IAAI,UAAWwhB,EAAS/I,KAAKC,UAAU0I,IAE/C,IAAI3f,EAAO,CACT0N,OAAQ,uBACRvI,OAAQ,CACN4a,EACA,CACE87C,MAAO,CACLC,aAAc,CACZ,CACE7uD,KAAM,OACN0sB,KAAM,UAER,CACE1sB,KAAM,UACN0sB,KAAM,UAER,CACE1sB,KAAM,UACN0sB,KAAM,WAER,CACE1sB,KAAM,oBACN0sB,KAAM,YAGVoiC,OAAQ,CACN,CACE9uD,KAAM,OACN0sB,KAAM,UAER,CACE1sB,KAAM,SACN0sB,KAAM,YAGVqiC,KAAM,CACJ,CACE/uD,KAAM,OACN0sB,KAAM,UAER,CACE1sB,KAAM,KACN0sB,KAAM,UAER,CACE1sB,KAAM,WACN0sB,KAAM,YAIZsiC,YAAa,OACbC,OAAQ,CACNjvD,KAAM,aACNud,QAAS,IACTuB,QAAS,EACTowC,kBAAmB,8CAErB92D,QAAS,CACP4gB,KAAM,CACJhZ,KAAM,MACNqM,OAAQ,8CAEV+2B,GAAI,CACFpjC,KAAM,MACNqM,OAAQ,8CAEV8iD,SAAU,kBAMlB3gE,KAAK+1D,gBAAkBx6C,KAAKC,UAAUjX,EACxC,EACA,kCAAMyuD,GACJ,IAAIzuD,EAAO,CAAC,EACe,aAAvBvE,KAAKo+D,cACP75D,EAAO,CACL0N,OAAQ,sBACRvI,OAAQ,CACN8gB,KAAM,6CACN8F,QAAS,MACTskB,GAAI,6CACJv1C,MAAO,iBACPuhE,qBAAsB,aACtBnpB,IAAK,SACLopB,aAAc,gBAGc,eAAvB7gE,KAAKo+D,cACd75D,EAAO,CACL0N,OAAQ,sBACRvI,OAAQ,CACNo3D,SAAU,eACV/qC,MAAO,SACPxxB,KAAM,KACNlF,MAAO,OACPu1C,GAAI,6CACJmsB,SAAU,SACVv2C,KAAM,+CAGsB,cAAvBxqB,KAAKo+D,cACd75D,EAAO,CACL0N,OAAQ,sBACRvI,OAAQ,CACN+tC,IAAK,SACLp4C,MAAO,iBACPmrB,KAAM,6CACNs2C,SAAU,aACVlsB,GAAI,6CACJtkB,QAAS,SAGmB,eAAvBtwB,KAAKo+D,gBACd75D,EAAO,CACL0N,OAAQ,sBACRvI,OAAQ,CACN8gB,KAAM,6CACNoqB,GAAI,6CACJv1C,MAAO,MACPixB,QAAS,UAKf,IAAIpM,EAAWlkB,KAAKggE,6BAA6BhgE,KAAKo+D,eAElD95C,EAAUJ,EAAS,GACvB6L,QAAQjtB,IAAI,eAAgBwhB,GAC5B/f,EAAKmF,OAAO,MAAQ4a,EACpB/f,EAAKmF,OAAO,QAAU4a,EACtBtkB,KAAK+1D,gBAAkBx6C,KAAKC,UAAUjX,EACxC,EAEA,iCAAM0uD,GACJ,IAAI1uD,EAAO,CAAC,EAEe,aAAvBvE,KAAKo+D,cACP75D,EAAO,CACL0N,OAAQ,sBACRvI,OAAQ,CACN8gB,KAAM,6CACNjmB,KAAM,6IACNqwC,GAAI,+CAGwB,eAAvB50C,KAAKo+D,cACd75D,EAAO,CACL0N,OAAQ,sBACRvI,OAAQ,CACN8gB,KAAM,6CACNjmB,KAAM,6IACNqwC,GAAI,+CAGwB,cAAvB50C,KAAKo+D,cACd75D,EAAO,CACL0N,OAAQ,sBACRvI,OAAQ,CACN8gB,KAAM,6CACNnrB,MAAO,MACPo4C,IAAK,SACLqpB,SAAU,aACVv8D,KAAM,6IACNqwC,GAAI,+CAGwB,eAAvB50C,KAAKo+D,gBACd75D,EAAO,CACL0N,OAAQ,sBACRvI,OAAQ,CACN8gB,KAAM,6CACNjmB,KAAM,6IACNqwC,GAAI,gDAKV,IAAI1wB,EAAWlkB,KAAKggE,6BAA6BhgE,KAAKo+D,eAElD95C,EAAUJ,EAAS,GACvB6L,QAAQjtB,IAAI,eAAgBwhB,GAC5B/f,EAAKmF,OAAO,QAAU4a,EACtBtkB,KAAK+1D,gBAAkBx6C,KAAKC,UAAUjX,EACxC,EAEA,8BAAM2uD,GACJ,IAAI3uD,EAAO,CAAC,EACe,aAAvBvE,KAAKo+D,cACP75D,EAAO,CACL0N,OAAQ,sBACRvI,OAAQ,CACN+tC,IAAK,UACLlzC,KAAM,60GACNqwC,GAAI,6CACJv1C,MAAO,MACPmrB,KAAM,+CAGsB,eAAvBxqB,KAAKo+D,gBACd75D,EAAO,CACL0N,OAAQ,sBACRvI,OAAQ,CACN+tC,IAAK,UACLlzC,KAAM,60GACNqwC,GAAI,6CACJv1C,MAAO,MACPmrB,KAAM,gDAKZ,IAAIzI,EAAMxG,KAAKC,UAAUjX,GACzBwrB,QAAQjtB,IAAI,iBAAeif,EAAIza,QAC/B,IAAI4c,EAAWlkB,KAAKggE,6BAA6BhgE,KAAKo+D,eAElD95C,EAAUJ,EAAS,GACvB6L,QAAQjtB,IAAI,eAAgBwhB,GAC5B/f,EAAKmF,OAAO,QAAU4a,EACtBtkB,KAAK+1D,gBAAkBx6C,KAAKC,UAAUjX,EACxC,EAEA,wBAAMwwD,GACJ,IACE,IAAIxwD,EAAO,CACT0N,OAAQ,2BACRvI,OAAQ,CAAC,uEAEX1J,KAAK+1D,gBAAkBx6C,KAAKC,UAAUjX,GAEtC,IAAIrD,QAAe0tB,OAAOmF,SAAS3Y,QAAQ7W,EAAMvE,KAAKo+D,eACtDruC,QAAQjtB,IAAI,wCAAqCyY,KAAKC,UAAUta,MAG9DlB,KAAKi2D,QADc,iBAAV/0D,EACMA,EAEAqa,KAAKC,UAAUta,EAElC,CAAC,MAAOgB,GACNlC,KAAKi2D,QAAU16C,KAAKC,UAAUtZ,EAChC,CAEF,EACA,uBAAMixD,GACJ,IAAI5uD,EAAO,CAAC,EACe,aAAvBvE,KAAKo+D,cACP75D,EAAO,CACL0N,OAAQ,oBACRvI,OAAQ,CACNw0B,KAAM,QACNwD,QAAS,CACPpd,QAAS,6CACTw7C,OAAQ,UACRkB,MACI,0FACJjB,SAAU,KAIgB,eAAvB//D,KAAKo+D,cACd75D,EAAO,CACL0N,OAAQ,oBACRvI,OAAQ,CACNw0B,KAAM,QACNwD,QAAS,CACPpd,QAAS,6CACTw7C,OAAQ,OACRkB,MAAO,yDACPjB,SAAU,KAIgB,cAAvB//D,KAAKo+D,gBACd75D,EAAO,CACL0N,OAAQ,oBACRvI,OAAQ,CACNw0B,KAAM,QACNwD,QAAS,CACPpd,QAAS,6CACTw7C,OAAQ,MACRkB,MAAO,gDACPjB,SAAU,OAMlB//D,KAAK+1D,gBAAkBx6C,KAAKC,UAAUjX,EACxC,EAEA,yBAAM+uD,GACJ,IAAI/uD,EAAO,CACT,SAAY,CAAC,CACX,QAAW,mDACX,OAAU,YACV,QAAW,6MAEb,WAAc,cACd,QAAW,QAEbvE,KAAK+1D,gBAAkBx6C,KAAKC,UAAUjX,EACxC,EACA8uD,cAAAA,GACErzD,KAAK+1D,gBAAkB,0BACvB,IAAI70D,EAAS0tB,OAAOwxB,YAAYhM,UAE9Bp0C,KAAKi2D,QADH/0D,EACaqa,KAAKC,UAAUta,GAEf,MAEnB,EAEA,qBAAM+/D,GACJlxC,QAAQjtB,IAAI,kCAAmC8rB,OAAOwxB,YAAYhG,aAClErqB,QAAQjtB,IAAI,gCAAiCyY,KAAKC,UAAUoT,OAAOwxB,YAAYhM,YAC/ErkB,QAAQjtB,IAAI,+BAAgCyY,KAAKC,UAAUoT,OAAOwxB,YAAYviC,UAChF,EAEA,0BAAMqjD,GAEJ,MAAM5jD,QAAiB6jD,MAAM,4GACvB58D,QAAa+Y,EAASosB,OAC5B3Z,QAAQjtB,IAAI,WAAYyY,KAAKC,UAAUjX,UACjCvE,KAAK8yD,gBACPsO,QAAQ,kCACVphE,KAAKm5C,iBAIT,EAEA,qBAAMA,GACJ,KAAIn5C,KAAKo+D,cAAczrD,WAAW,UAC3B3S,KAAKo+D,cAAczrD,WAAW,aAC9B3S,KAAKo+D,cAAczrD,WAAW,WAC9B3S,KAAKo+D,cAAczrD,WAAW,UAC9B3S,KAAKo+D,cAAczrD,WAAW,WASrC,GANAod,QAAQjtB,IAAI,kBAAmB8rB,OAAOmF,UACtChE,QAAQjtB,IAAI,4BAA6B9C,KAAK+1D,iBACzCnnC,OAAOmF,UACVhE,QAAQxe,MAAM,aAGZvR,KAAK+1D,iBAAmBnnC,OAAOmF,SAAU,CAE3C,MAAMstC,EAAW9lD,KAAKuV,MAAM9wB,KAAK+1D,iBACjC,IACEhmC,QAAQjtB,IAAI,iCAAkCu+D,EAASpvD,QAEvD,IAAIqe,EAAU,WAWd,GAVItwB,KAAKo+D,gBACP9tC,EAAUtwB,KAAKo+D,cACfruC,QAAQjtB,IACJ,2CACA9C,KAAKo+D,gBAGXruC,QAAQjtB,IAAI,wBAAyB4B,KAAKC,OAC1CorB,QAAQjtB,IAAI,eAAewtB,GAEZ,eAAXA,EAA0B,CAC5B,MAAMgxC,EAAU,IAAIC,EAAAA,EAAW3yC,OAAOmF,UACtC,IAAIytC,EAAY,iBAChB,GAA6B,kBAAzBxhE,KAAKk6D,iBAAsC,CAC7C,IAAIh5D,EAASogE,EAAQjtB,aAEnBr0C,KAAKi2D,QADc,iBAAV/0D,EACMA,EAEAqa,KAAKC,UAAUta,EAElC,CACA,GAA6B,uBAAzBlB,KAAKk6D,iBACPsH,QAAkBF,EAAQtpC,gBACtBh4B,KAAKi6D,uBAETj6D,KAAKi2D,QAAU16C,KAAKC,UAAUgmD,QACzB,GAA6B,iCAAzBxhE,KAAKk6D,iBACdsH,QAAkBF,EAAQG,0BACtBzhE,KAAKi6D,uBAETj6D,KAAKi2D,QAAU16C,KAAKC,UAAUgmD,QACzB,GAA6B,mBAAzBxhE,KAAKk6D,iBACdnqC,QAAQjtB,IAAI,kBAAmB9C,KAAKi6D,uBACpCuH,QAAkBF,EAAQvpC,YAAY/3B,KAAKi6D,uBAC3Cj6D,KAAKi2D,QAAU16C,KAAKC,UAAUgmD,GAE9BxhE,KAAK0hE,oBAAoBF,GAAWn/D,MAAKkyC,IACvCv0C,KAAKi2D,QAAU,qBAAqB1hB,EAAIrzC,WAAWqzC,EAAIjvC,UAAUtF,KAAKi2D,SAAQ,SAE3E,GAA6B,2BAAzBj2D,KAAKk6D,iBACdnqC,QAAQjtB,IACJ,0BACA9C,KAAKi6D,uBAETuH,QAAkBF,EAAQvmC,oBACtB/6B,KAAKi6D,uBAETj6D,KAAKi2D,QAAU16C,KAAKC,UAAUgmD,GAE9BxhE,KAAK0hE,oBAAoBF,GAAWn/D,MAAKkyC,IACvCv0C,KAAKi2D,QAAU,qBAAqB1hB,EAAIrzC,WAAWqzC,EAAIjvC,UAAUtF,KAAKi2D,SAAQ,SAE3E,GAA6B,eAAzBj2D,KAAKk6D,iBAAmC,CACjDnqC,QAAQjtB,IAAI,eAAgB9C,KAAKi6D,uBACjClqC,QAAQjtB,IACJ,yBAAsByY,KAAKC,UAAU6lD,MAEzC,MAAMp5B,QAAYrZ,OAAOmF,SAAS3Y,QAAQimD,EAAU/wC,GACpDP,QAAQjtB,IAAI,yBAAsByY,KAAKC,UAAUta,MAE/ClB,KAAKi2D,QADW,iBAAPhuB,EACMA,EAEA1sB,KAAKC,UAAUysB,EAElC,CAEA,YADAlY,QAAQjtB,IAAI,wBAAyB4B,KAAKC,MAE5C,CAAO,GAAgB,aAAZ2rB,EAAwB,CACjCP,QAAQjtB,IACJ,wCAAqCyY,KAAKC,UAAU6lD,MAExD,IAAIngE,QAAe0tB,OAAOwxB,YAAYjH,gBAAgBkoB,GAStD,OARAtxC,QAAQjtB,IACJ,qCAAkCyY,KAAKC,UAAUta,WAGnDlB,KAAKi2D,QADc,iBAAV/0D,EACMA,EAEAqa,KAAKC,UAAUta,GAGlC,CAEA,GAAe,eAAXovB,EAA0B,CAC5B,MAAMqxC,EAAa,IAAI9tB,EAAAA,eAAejlB,OAAOmF,UAC7C,IAAI6tC,EAAY,iBAyChB,YAvC6B,mBAAzB5hE,KAAK6hE,kBACPD,QAAkBD,EAAW5pC,YAAYzH,EAAStwB,KAAK8hE,sBAAsB,YAC7E9hE,KAAKi2D,QAAU16C,KAAKC,UAAUomD,IACI,YAAzB5hE,KAAK6hE,kBACdD,QAAkBD,EAAWx7D,KAAKmqB,EAAStwB,KAAK8hE,uBAChD9hE,KAAKi2D,QAAU16C,KAAKC,UAAUomD,IACI,gBAAzB5hE,KAAK6hE,kBACdD,QAAkBD,EAAW3sB,SAAS1kB,EAAStwB,KAAK8hE,sBAAsB7sB,QAASj1C,KAAK8hE,sBAAsBpgC,SAE9G1hC,KAAK+hE,YAAYH,GAAWv/D,MAAK2/D,IAC/BhiE,KAAKi2D,QAAU16C,KAAKC,UAAUwmD,EAAQ,IACrClwD,OAAMP,IACPvR,KAAKi2D,QAAU1kD,CAAI,KAEa,iBAAzBvR,KAAK6hE,kBACdD,QAAkBD,EAAWzsB,UAAU5kB,EAAStwB,KAAK8hE,sBAAsB1sB,SAAUp1C,KAAK8hE,sBAAsBpgC,SAChH1hC,KAAKi2D,QAAU16C,KAAKC,UAAUomD,IACI,uBAAzB5hE,KAAK6hE,kBACdD,QAAkBD,EAAWrsB,gBAAgBhlB,EAAStwB,KAAK8hE,sBAAsBx9C,QAAStkB,KAAK8hE,sBAAsBvsB,cAAev1C,KAAK8hE,sBAAsBpgC,SAC/J1hC,KAAKi2D,QAAU16C,KAAKC,UAAUomD,IACI,uBAAzB5hE,KAAK6hE,kBACdD,QAAkBD,EAAWtsB,gBAAgB/kB,EAAStwB,KAAK8hE,sBAAsB7sB,QAASj1C,KAAK8hE,sBAAsBpgC,SACrH1hC,KAAKi2D,QAAU16C,KAAKC,UAAUomD,IACI,mBAAzB5hE,KAAK6hE,kBACdD,QAAkBD,EAAWltB,YAAYnkB,EAAStwB,KAAK8hE,sBAAsBptB,UAAW10C,KAAK8hE,sBAAsBntB,SAAU30C,KAAK8hE,sBAAsBpgC,SACxJ1hC,KAAKi2D,QAAU16C,KAAKC,UAAUomD,IACI,kBAAzB5hE,KAAK6hE,kBACdD,EAAYD,EAAWttB,WAAW/jB,GAClCtwB,KAAKi2D,QAAU16C,KAAKC,UAAUomD,IACG,kBAA1B5hE,KAAK6hE,kBACZ9xC,QAAQjtB,IAAI,eAAYyY,KAAKC,UAAUxb,KAAK8hE,wBAC5CF,QAAkBD,EAAWvrB,UAAU9lB,EAAQtwB,KAAK8hE,sBAAsBx9C,QAAQtkB,KAAK8hE,sBAAsBzrB,OAAOr2C,KAAK8hE,sBAAsBxrB,QAC/It2C,KAAKi2D,QAAU16C,KAAKC,UAAUomD,IACG,yBAA1B5hE,KAAK6hE,mBACZ9xC,QAAQjtB,IAAI,eAAYyY,KAAKC,UAAUxb,KAAK8hE,wBAC5CF,QAAkBD,EAAWnrB,iBAAiBlmB,EAAQtwB,KAAK8hE,sBAAsBrrB,OAAOz2C,KAAK8hE,sBAAsBxrB,QACnHt2C,KAAKi2D,QAAU16C,KAAKC,UAAUomD,IAIlC,CAEA,GAAe,mBAAXtxC,EAA8B,CAChC,MAAMqxC,EAAa,IAAI9tB,EAAAA,eAAejlB,OAAOmF,UAC7C,IAAIkuC,EAAgB,iBAyCpB,YAvCiC,uBAA7BjiE,KAAKkiE,sBACPD,QAAsBN,EAAW5pC,YAAYzH,EAAStwB,KAAKmiE,0BAA0B,YACrFniE,KAAKi2D,QAAU16C,KAAKC,UAAUymD,IACQ,gBAA7BjiE,KAAKkiE,sBACdD,QAAsBN,EAAWx7D,KAAKmqB,EAAStwB,KAAKmiE,2BACpDniE,KAAKi2D,QAAU16C,KAAKC,UAAUymD,IACQ,oBAA7BjiE,KAAKkiE,sBACdD,QAAsBN,EAAW3sB,SAAS1kB,EAAStwB,KAAKmiE,0BAA0BltB,QAASj1C,KAAKmiE,0BAA0BzgC,SAC1H1hC,KAAK+hE,YAAYE,GAAe5/D,MAAK2/D,IACnChiE,KAAKi2D,QAAU16C,KAAKC,UAAUwmD,EAAQ,IACrClwD,OAAMP,IACPvR,KAAKi2D,QAAU1kD,CAAI,KAEiB,qBAA7BvR,KAAKkiE,sBACdD,QAAsBN,EAAWzsB,UAAU5kB,EAAStwB,KAAKmiE,0BAA0B/sB,SAAUp1C,KAAKmiE,0BAA0BzgC,SAC5H1hC,KAAKi2D,QAAU16C,KAAKC,UAAUymD,IACQ,2BAA7BjiE,KAAKkiE,sBACdD,QAAsBN,EAAWrsB,gBAAgBhlB,EAAStwB,KAAKmiE,0BAA0B79C,QAAStkB,KAAKmiE,0BAA0B5sB,cAAev1C,KAAKmiE,0BAA0BzgC,SAC/K1hC,KAAKi2D,QAAU16C,KAAKC,UAAUymD,IACQ,2BAA7BjiE,KAAKkiE,sBACdD,QAAsBN,EAAWtsB,gBAAgB/kB,EAAStwB,KAAKmiE,0BAA0BltB,QAASj1C,KAAKmiE,0BAA0BzgC,SACjI1hC,KAAKi2D,QAAU16C,KAAKC,UAAUymD,IACQ,uBAA7BjiE,KAAKkiE,sBACdD,QAAsBN,EAAWltB,YAAYnkB,EAAStwB,KAAKmiE,0BAA0BztB,UAAW10C,KAAKmiE,0BAA0BxtB,SAAU30C,KAAKmiE,0BAA0BzgC,SAExK1hC,KAAKi2D,QAAU16C,KAAKC,UAAUymD,IACQ,sBAA7BjiE,KAAKkiE,sBACdD,EAAgBN,EAAWttB,WAAW/jB,GACtCtwB,KAAKi2D,QAAU16C,KAAKC,UAAUymD,IACO,sBAA9BjiE,KAAKkiE,sBACZnyC,QAAQjtB,IAAI,mBAAgByY,KAAKC,UAAUxb,KAAKmiE,4BAChDP,QAAkBD,EAAWvrB,UAAU9lB,EAAQtwB,KAAKmiE,0BAA0B79C,QAAQtkB,KAAKmiE,0BAA0B9rB,OAAOr2C,KAAKmiE,0BAA0B7rB,QAC3Jt2C,KAAKi2D,QAAU16C,KAAKC,UAAUomD,IACO,6BAA9B5hE,KAAKkiE,uBACZnyC,QAAQjtB,IAAI,mBAAgByY,KAAKC,UAAUxb,KAAKmiE,4BAChDP,QAAkBD,EAAWnrB,iBAAiBlmB,EAAQtwB,KAAKmiE,0BAA0B1rB,OAAOz2C,KAAKmiE,0BAA0B7rB,QAC3Ht2C,KAAKi2D,QAAU16C,KAAKC,UAAUomD,IAIlC,CAEA7xC,QAAQjtB,IAAI,qCAAkCyY,KAAKC,UAAU6lD,MAC7D,IAAIngE,QAAe0tB,OAAOmF,SAAS3Y,QAAQimD,EAAU/wC,GACrDP,QAAQjtB,IAAI,qCAAkCyY,KAAKC,UAAUta,MAE7D6uB,QAAQjtB,IAAI,wBAAyB4B,KAAKC,OAExC3E,KAAKi2D,QADc,iBAAV/0D,EACMA,EAEAqa,KAAKC,UAAUta,GAEhC6uB,QAAQjtB,IAAI,0BAA2B9C,KAAKi2D,QAC9C,CAAE,MAAO1kD,GACPwe,QAAQxe,MAAM,qBAAsBA,EAAM3H,SAEtC2H,EAAMrM,OAASuD,EAAAA,wBAAwB8nB,mBACzCvwB,KAAKi2D,QAAU1kD,EAAM3H,QAErB5J,KAAKi2D,QAAU,mBAAqB1kD,EAAM3H,OAE9C,CACF,MACE8tD,MAAM,gCAEV,EAEAqK,WAAAA,CAAYK,GAEV,IADA,IAAI5/C,EAAQ,GACH3O,EAAI,EAAGA,EAAIuuD,EAAO96D,OAAQuM,GAAK,EACtC2O,EAAM/L,KAAKsjB,SAASqoC,EAAOz0B,OAAO95B,EAAG,GAAI,KAE3C,MAAM0kC,EAAS,IAAI/a,WAAWhb,GACxB6/C,EAAO,IAAIC,KAAK,CAAC/pB,IACvB,OAAO,IAAI12C,SAAQ,CAACD,EAASE,KAC3B,MAAMygE,EAAS,IAAIC,WACnBD,EAAOE,OAAS,SAAUvgE,GACxB,IAAIwgE,EAAaxgE,EAAE6wC,OAAO7xC,OAAOqhB,MAAM,KAAK,GAC5C3gB,EAAQ8gE,EACV,EACAH,EAAOz7D,QAAU,SAAU5E,GACzBJ,EAAOI,EACT,EACAqgE,EAAOI,cAAcN,EAAK,GAE9B,EACA9M,iBAAAA,GACE,IAAIqN,EAAW,CACb,YAAe,EACf,MAAS,mEACT,SAAY,mEACZ,UAAa,gBACb,SAAY,CACV,IAAO,mBACP,OAAU,2BACV,KAAQ,mBACR,KAAQ,oDAEV,SAAY,CAAC,CACX,KAAQ,kBACR,mBAAsB,CAAC,CAAC,UAAa,QAAS,OAAU,CAAC,eACzD,mBAAsB,GACtB,sBAAyB,CAAC,CACxB,QAAW,YACX,OAAU,oBACV,OAAU,CACR,KAAQ,CACN,SAAW,EACX,aAAe,EACf,SAAW,EACX,QAAW,YACX,MAAS,QACR,eAAkB,2BAA4B,OAAU,QAAS,aAAgB,SAI1F,SAAY,QAEVl5B,EAAOnuB,KAAKC,UAAUonD,GAC1B,MAAM/yB,GAAY,IAAIha,aAAcC,OAAO4T,GAC3C,IAAI4B,EAAS,GACbuE,EAAUx/B,SAAQ6gC,IAChB5F,GAAUR,OAAOC,aAAamG,EAAK,IAGrC,IAAI2xB,EAAW/yB,KAAKxE,GACpBvb,QAAQjtB,IAAI,aAAc+/D,GAC1BA,EAAWA,EAAS1wD,QAAQ,MAAO,KACnC4d,QAAQjtB,IAAI,aAAc+/D,GAC1BA,EAAWA,EAAS1wD,QAAQ,MAAO,KACnC4d,QAAQjtB,IAAI,aAAc+/D,GAC1BA,EAAWA,EAAS1wD,QAAQ,MAAO,IACnC4d,QAAQjtB,IAAI,aAAc+/D,GAE1B,IAAIC,GAAUhgC,EAAAA,EAAAA,mBAAiB1W,EAAAA,EAAAA,sBAAqBy2C,IACpD9yC,QAAQjtB,IAAI,aAAcggE,GAC1B9iE,KAAKmyD,QAAU2Q,EACf9iE,KAAK+xD,WAAY,CACnB,EAGA,gBAAM2N,GAGJ,IAQIqD,EAAWC,EAAWC,EAAQC,EAAQC,EAAUC,EAAQC,EAAWC,EAASC,EAR5EC,EAAmB,GACnBC,EAAiB,GAEjBC,EAAe,CACjB,0CACA,0CACA,gBAE0FC,GAAa,EAErGC,EAAY,CACd,eAGEC,EAAY,CACd,cACA,mBAGF,MAAM/+C,EAAS5lB,OAAO0W,QAAQ5V,KAAK8wD,iBAC9Bx4C,QAAQ2M,GAAUA,EAAM,GAAG8rC,UAC3Bj6C,KAAKmO,GAAUA,EAAM,KAC1B8K,QAAQjtB,IAAI,gBAAgBgiB,EAAOwZ,YACnCxZ,EAAOzU,SAAQ,SAAUigB,GAGvB,OAFAP,QAAQjtB,IAAI,gCAAgCwtB,KAExCozC,EAAanrD,SAAS+X,IACxBkzC,EAAiB/sD,KAAK6Z,QACtB0yC,GAAY,IAGQ,iBAAX1yC,GAAuBA,EAAQ3d,WAAW,QACnD6wD,EAAiB/sD,KAAK6Z,QACtB8yC,GAAS,IAGW,iBAAX9yC,IAAwBA,EAAQ3d,WAAW,UAAY2d,EAAQ3d,WAAW,cACnF6wD,EAAiB/sD,KAAK6Z,QACtB6yC,GAAW,IAGS,iBAAX7yC,GAAuBA,EAAQ3d,WAAW,QACnD6wD,EAAiB/sD,KAAK6Z,QACtB0yC,GAAY,IAGQ,iBAAX1yC,GAAuBA,EAAQ3d,WAAW,WACnD6wD,EAAiB/sD,KAAK6Z,QACtB+yC,GAAY,IAGQ,iBAAX/yC,GAAuBA,EAAQ3d,WAAW,SACnD6wD,EAAiB/sD,KAAK6Z,QACtBgzC,GAAU,IAIU,iBAAXhzC,GAAuBA,EAAQ3d,WAAW,aACnD6wD,EAAiB/sD,KAAK6Z,QACtBizC,GAAc,IAIZK,EAAUrrD,SAAS+X,IACrBP,QAAQjtB,IAAI,+BAA+BwtB,KAC3CkzC,EAAiB/sD,KAAK6Z,QACtB2yC,GAAS,IAIPY,EAAUtrD,SAAS+X,IACrBP,QAAQjtB,IAAI,+BAA+BwtB,KAC3CkzC,EAAiB/sD,KAAK6Z,QACtB4yC,GAAS,KAGK,QAAZ5yC,IACFqzC,GAAa,GAEfZ,GAAY,OACZS,EAAiB/sD,KAAK,UAAU6Z,KAClC,IAGA2sC,GAAa5sD,SAAQ,SAAUigB,GAE7B,GADAP,QAAQjtB,IAAI,mCAAmCwtB,IAC3CozC,EAAanrD,SAAS+X,GAI1B,MAAsB,iBAAXA,GAAuBA,EAAQ3d,WAAW,QACnD6wD,EAAiB/sD,KAAK6Z,QACtB0yC,GAAY,SAGVY,EAAUrrD,SAAS+X,IAKnBuzC,EAAUtrD,SAAS+X,IAInBA,EAAQ3d,WAAW,OARrB8wD,EAAehtD,KAAK6Z,GAatBmzC,EAAehtD,KAAK,UAAU6Z,MAtB5BmzC,EAAehtD,KAAK6Z,EAuBxB,IAEAP,QAAQjtB,IAAI,yBAAyByY,KAAKC,UAAUgoD,MACpD,IA+MIM,EA/MAC,EAAc,CAAC,EACnB,GAAIP,GAAoBA,EAAiBl8D,OAAS,EAAG,CACnD,IAAI08D,EAAc,CAAC,EAiFnB,GA/EIjB,IAGAiB,EAAYpZ,OADV+Y,EACmB,CACnB7+C,OAAQ0+C,EAAiBlrD,QAAQhB,GAC7BA,EAAK3E,WAAW,YAEpBwrC,aAAcqlB,EAAiBlrD,QAAQhB,GACnCA,EAAK3E,WAAW,YAClB,GACF20C,OAAQ,CACN,IAAM,6BAIW,CACnBxiC,OAAQ0+C,EAAiBlrD,QAAQhB,GAC7BA,EAAK3E,WAAW,YAEpBwrC,aAAcqlB,EAAiBlrD,QAAQhB,GACnCA,EAAK3E,WAAW,YAClB,KAKJqwD,IACFgB,EAAYvvC,OAAS,CACnB3P,OAAQ0+C,EAAiBlrD,QACpBhB,GACGA,EAAK3E,WAAW,WAChB2E,EAAK3E,WAAW,UAChB2E,EAAK3E,WAAW,SAExBwrC,aAAcqlB,EAAiBlrD,QAC1BhB,GACGA,EAAK3E,WAAW,WAChB2E,EAAK3E,WAAW,UAChB2E,EAAK3E,WAAW,SACtB,KAIF0wD,IACFW,EAAYC,OAAS,CACnBn/C,OAAQ0+C,EAAiBlrD,QACpBhB,GACGA,EAAK3E,WAAW,YAExBwrC,aAAcqlB,EAAiBlrD,QAC1BhB,GACGA,EAAK3E,WAAW,YACtB,KAGF2wD,IACFU,EAAYE,KAAO,CACjBp/C,OAAQ0+C,EAAiBlrD,QACpBhB,GACGA,EAAK3E,WAAW,UAExBwrC,aAAcqlB,EAAiBlrD,QAC1BhB,GACGA,EAAK3E,WAAW,UACtB,KAGF4wD,IACFS,EAAYG,SAAW,CACrBr/C,OAAQ0+C,EAAiBlrD,QACpBhB,GACGA,EAAK3E,WAAW,cAExBwrC,aAAcqlB,EAAiBlrD,QAC1BhB,GACGA,EAAK3E,WAAW,cACtB,KAGFywD,EAAQ,CAGV,IAAIhqC,EAAY,CACd/U,SAAU,CACR7S,KAAM,aAGNxR,KAAK2wD,gBACPv3B,EAAY,CACV/U,SAAU,CACR7S,KAAM,YAERkT,UAAW,CACTlT,KAAM,YACNnM,QAASrF,KAAK2wD,iBAMpBqT,EAAYI,IAAM,CAChBt/C,OAAQ0+C,EAAiBlrD,QAAOhB,GAAQA,EAAK3E,WAAW,SACxDwrC,aAAcqlB,EAAiBlrD,QAAOhB,GAAQA,EAAK3E,WAAW,SAAQ,GACtEjJ,OAAQ0vB,EAEZ,CAoBA,GAlBI6pC,IACFe,EAAYtvC,IAAM,CAChB5P,OAAQ0+C,EAAiBlrD,QAAQhB,GAASA,EAAK3E,WAAW,SAC1DwrC,aAAcqlB,EAAiBlrD,QAAQhB,GACnCA,EAAK3E,WAAW,SAClB,GACF20C,OAAQ,CACN,cAAe,mDAIjB6b,IACFa,EAAYlsC,MAAQ,CAClBhT,OAAQ0+C,EAAiBlrD,QAAOhB,GAAQA,EAAK3E,WAAW,UAAY2E,EAAK3E,WAAW,cACpFwrC,aAAcqlB,EAAiBlrD,QAAOhB,GAAQA,EAAK3E,WAAW,UAAY2E,EAAK3E,WAAW,cAAa,KAIvGuwD,EAAQ,CACV,IAAIW,EAAYL,EAAiBlrD,QAAOhB,GAAQA,EAAK3E,WAAW,QAAU2E,EAAK3E,WAAW,aAC1FqxD,EAAYK,IAAM,CAChBv/C,OAAQ++C,EACR1lB,aAAc0lB,EAAU,GAE5B,CACA9zC,QAAQjtB,IAAI,qBAAqByY,KAAKC,UAAUwoD,MAChDD,EAAY,cAAgBC,EAC5Bj0C,QAAQjtB,IAAIyY,KAAKC,UAAUuoD,GAC7B,CAEA,GAAIN,GAAkBA,EAAen8D,OAAS,EAAG,CAC/C,MAAMg9D,EAAU,CAAC,EAEXC,EAAed,EAAenrD,QAAQhB,GAASA,EAAK3E,WAAW,YACjE4xD,EAAaj9D,OAAS,IACxBg9D,EAAQ,UAAY,CAClBx/C,OAAQy/C,EACRpmB,aAAcomB,EAAa,KAI/B,MAAMb,EAAeD,EAAenrD,QAAQhB,GAASA,EAAK3E,WAAW,YACjE+wD,EAAap8D,OAAS,IACxBg9D,EAAQ,UAAY,CAClBx/C,OAAQ4+C,EACRvlB,aAAculB,EAAa,KAI/B,MAAMc,EAAYf,EAAenrD,QAAQhB,GAASA,EAAK3E,WAAW,SAClE,GAAI6xD,EAAUl9D,OAAS,EAAG,CAExB,IAAI8xB,EAAY,CACd/U,SAAU,CACR7S,KAAM,aAGNxR,KAAK2wD,gBACPv3B,EAAY,CACV/U,SAAU,CACR7S,KAAM,YAERkT,UAAW,CACTlT,KAAM,YACNnM,QAASrF,KAAK2wD,iBAMpB2T,EAAQ,OAAS,CACfx/C,OAAQ0/C,EACRrmB,aAAcqmB,EAAU,GACxB96D,OAAQ0vB,EAEZ,CAEA,MAAMyqC,EAAYJ,EAAenrD,QAAQhB,GAASA,EAAK3E,WAAW,SAC9DkxD,EAAUv8D,OAAS,IACrBg9D,EAAQ,OAAS,CACfx/C,OAAQ++C,EACR1lB,aAAc0lB,EAAU,KAI5BE,EAAY,sBAAwBO,CACtC,CAEA,GAAgC,IAA5Bd,EAAiBl8D,QAA0C,IAA1Bm8D,EAAen8D,OAGlD,YADAowD,MAAM,gDAGR3nC,QAAQjtB,IAAI,sBACZitB,QAAQjtB,IAAIihE,GAGZ,IAAIU,EAAczkE,KAAK0kE,+BACnB91C,OAAOmF,oBAAoBqrC,EAAAA,sBAG3B0E,EADEW,GAAeA,EAAYn9D,OAAS,EACtBsnB,OAAOmF,SAAS4wC,iBAAiBZ,EAAaxoD,KAAKuV,MAAMvV,KAAKC,UAAUipD,KAExE71C,OAAOmF,SAAS6wC,UAAUb,IAGxC/jE,KAAK2uD,cACPoV,EAAY1oD,cAAgB,CAC1BqB,SAAS,EACTb,kBAAkB,EAClBc,aAAc,QAGhBonD,EAAY1oD,cAAgB,CAC1BgB,SAAU8gD,IAIZ2G,EADEW,GAAeA,EAAYn9D,OAAS,EACtBsnB,OAAOmF,SAASwqB,eAAewlB,EAAaxoD,KAAKuV,MAAMvV,KAAKC,UAAUipD,KAEtE71C,OAAOmF,SAASprB,QAAQo7D,UAItCD,EACDzhE,MAAMnB,IAUL,GARAlB,KAAK4xD,cAAgB,YACjB5xD,KAAKy/D,SACPz/D,KAAK+xD,WAAY,GAEf7wD,IACFlB,KAAKi2D,QAAU16C,KAAKC,UAAUta,IAG5B0tB,OAAOmF,SAAS5V,SAAWyQ,OAAOmF,SAAS5V,QAAQX,WAAY,CACjE,IAAI4mD,EAAMx1C,OAAOmF,SAAS5V,QAAQX,WAAW,OAC7CuS,QAAQjtB,IAAI,UAAWshE,GACnBA,GACFpkE,KAAKihE,iBAET,KAEDnvD,OAAOP,IACY,KAAdA,EAAMrM,KACRkB,YAAW,KACTsxD,MAAMnmD,EAAM3H,QAAQ,GACnB,IACM2H,EAAM3H,SACf8tD,MAAMnmD,EAAM3H,SAEdmmB,QAAQxe,MAAM,SAAUA,EAAM,GAEtC,EAEAmzD,4BAAAA,GACE,IAAIG,EAAa,GAqMjB,OApMA7kE,KAAKwwD,eAAengD,SAAQ4B,IAC1B,OAAQA,GACN,IAAK,+BACH4yD,EAAWpuD,KAAK,CACdxE,OAAQ,0BACRqe,QAAS,WACT5mB,OAAQ,CACNi2D,kBAAmB,CAAC,4BACpBrvC,QAAS,OACTsvC,UAAW,OACXC,eAAgB,CAACruD,KAAM,OAAQsuD,OAAQ,OAAQC,SAAU,IACzDpV,QAAS,CAAC,0BAGd,MACF,IAAK,qBACHka,EAAWpuD,KACP,CACExE,OAAQ,gBACRqe,QAAS,WACT5mB,OAAQ,CACN,wFAGR,MACF,IAAK,kCACHm7D,EAAWpuD,KACP,CACE,QAAW,0CACX,OAAU,qBACV,OAAU,CACR,QAAW,kBAInB,MACF,IAAK,+BACL,IAAK,uCAAwC,CAC3C,IAAIquD,EAAU,CACZ,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAClE,IAAK,IAAK,IAAK,KAEbjzB,EAAa,IAAIrU,WAAWsnC,GAC5BC,EAAgB,kBACpB/kE,KAAKi6D,sBAAwB,CAC3BrwD,QAASioC,GAGP5/B,EAAOU,WAAW,6BACpBoyD,EAAgB,2BAElBF,EAAWpuD,KACP,CACExE,OAAQ8yD,EACRz0C,QAAS,cACT5mB,OAAQ,CACNE,QAASioC,KAIjB,KACF,CACA,IAAK,uBACHgzB,EAAWpuD,KACP,CACExE,OAAQ,kBACRqe,QAAS,cACT5mB,OAAQ,CACNE,QAAS,oBAIjB,MACF,IAAK,mCACHi7D,EAAWpuD,KACP,CACE,QAAW,gBACX,OAAU,oBACV,OAAU,CACR6N,SAAS,EACTsgC,aAAa,EACbt0B,SAAS,EACT1mB,QAAS,cACTmsB,MAAO,UAIf,MACF,IAAK,kCACH8uC,EAAWpuD,KACP,CACE,QAAW,qBACX,OAAU,uBACV,OAAU,CACR7M,QAAS,iBAKjB,MACF,IAAK,0BACHi7D,EAAWpuD,KACP,CACE6Z,QAAS,WACTre,OAAQ,qBACRvI,OAAQ,CACNE,QAAS,gBAIjB,MACF,IAAK,qBACHi7D,EAAWpuD,KACP,CACExE,OAAQ,uBAEd,MACF,IAAK,mBACH4yD,EAAWpuD,KACP,CACE6Z,QAAS,eACTre,OAAQ,mBACRvI,OAAQ,CACNE,QAAS,gBAIjB,MACF,IAAK,qBACHi7D,EAAWpuD,KACP,CACE6Z,QAAS,eACTre,OAAQ,qBACRvI,OAAQ,CACNE,QAAS,gBAIjB,MAGF,IAAK,uBAAwB,CAC3B,MAAMguC,EAAW,CACf,OAAU,CACR,QAAW,mBACX,KAAQ,WACR,QAAW,KAEb,QAAW,CACT,SAAY,0BACZ,QAAW,sBAEb,YAAe,MACf,MAAS,CACP,eAAkB,CAChB,CACE,KAAQ,OACR,KAAQ,QAEV,CACE,KAAQ,UACR,KAAQ,QAEV,CACE,KAAQ,UACR,KAAQ,SAGZ,IAAO,CACL,CACE,KAAQ,UACR,KAAQ,QAEV,CACE,KAAQ,WACR,KAAQ,WAKhBitB,EAAWpuD,KAAK,CACd6Z,QAAS,mBACTre,OAAQ,uBACRvI,OAAQ,CACNs7D,eAAgB,GAChB9rB,UAAWtB,IAGjB,CACE,MACF,QAEE,MACJ,IAEF53C,KAAKw+D,mBAAqBqG,EACnBA,CAET,EAEA7S,UAAAA,GACEhyD,KAAK+xD,WAAY,CACnB,EAEA0N,IAAAA,GACE,MAAMwF,EAAgB/1C,UAAUkZ,UAChCrY,QAAQjtB,IAAI,4BAA6BmiE,GAEzC,MAAMC,EAAS,CACb,UACA,SACA,YACA,gBACA,OACA,QAEF,IAAIC,GAAO,EACX,IAAK,IAAIpkE,EAAI,EAAGA,EAAImkE,EAAO59D,OAAQvG,IACjC,GAAIkkE,EAAc33B,QAAQ43B,EAAOnkE,IAAM,EAAG,CACxCokE,GAAO,EACP,KACF,CAEF,OAAOA,CACT,EACAC,gBAAAA,GACE,MAAMH,EAAgB/1C,UAAUkZ,UAC1B88B,EAAS,CAAC,SAAU,UAC1B,IAAIC,GAAO,EACX,IAAK,IAAIpkE,EAAI,EAAGA,EAAImkE,EAAO59D,OAAQvG,IACjC,GAAIkkE,EAAc33B,QAAQ43B,EAAOnkE,IAAM,EAAG,CACxCokE,GAAO,EACP,KACF,CAEF,OAAOA,CACT,EAGA,qBAAM5R,GAEJ,IACE,IAAIhvD,EAAO,CACT0N,OAAQ,qBACRvI,OAAQ,CACNE,QAAS,eACTy7D,OAAQ,KAGZrlE,KAAK+1D,gBAAkBx6C,KAAKC,UAAUjX,GACtC,IAAIwvB,EAAW,IAAIuxC,EAAAA,EAAkB12C,OAAOmF,UAExCnqB,QAAgBmqB,EAASgE,YACzB,eACA/3B,KAAKo+D,eAETruC,QAAQjtB,IAAI,6BAA8ByY,KAAKC,UAAU5R,IACzD,MAAM27D,EAAUC,IAAAA,KAAU7hD,SAASC,QAC/B,IAAIiS,aAAcC,OAAO,gBACzBlsB,EAAQ+Y,UACR,IAAI8iD,EAAAA,UAAU77D,EAAQ+D,WAAW+3D,WAErC31C,QAAQjtB,IAAIyiE,GAGVvlE,KAAKi2D,QAAUsP,CAInB,CAAE,MAAOrjE,GACP6tB,QAAQjtB,IAAI,4BAA6ByY,KAAKC,UAAUtZ,IACxDlC,KAAKi2D,QAAU/zD,EAAE0H,OACnB,CAEF,EAEA,uBAAM6qD,GAEJ,IAAIlwD,EAAO,CACT+f,SAAS,EACTsgC,aAAa,EACbt0B,SAAS,EACT1mB,QAAS,cACTmsB,MAAO,QAGLhC,EAAW,IAAI4xC,EAAAA,EAAiB/2C,OAAOmF,UACvCnqB,QAAgBmqB,EAASgE,YAAYxzB,EAAMvE,KAAKo+D,eACpDp+D,KAAK+1D,gBAAkBx6C,KAAKC,UAAUjX,GAEpCvE,KAAKi2D,QADe,iBAAXrsD,EACMA,EAEA2R,KAAKC,UAAU5R,EAElC,EAEA,2BAAM8qD,GACJ,IAAI3gC,EAAW,IAAI4xC,EAAAA,EAAiB/2C,OAAOmF,UAC3C,MAAM6xC,EAAS,IAAIC,EAAAA,IAAY,CAACphD,QAASqhD,EAAAA,IAAQxqC,UAC3CxD,EAAQ,IAAIiuC,EAAAA,IAAMH,GAkBxB,IACE,MAAMxsB,QAAoBthB,EAAMshB,YAAY2gB,MAAMiM,OAAO,CACvDC,OAAQlyC,EAASsgB,WAAWr0C,KAAKo+D,eAAe95C,QAChD/f,KAAM,CAEJ2hE,SAAU,0GAEVC,cAAe,CAAC,6BAA8B,6FAA8F,2FAA4F,4FACxOC,kBAAmB,CAAC,QAAS,CAAC,QAAS,CAAC,KAAM,CAAC,YAGnDr2C,QAAQjtB,IAAI,qBAEZ9C,KAAK+1D,iBAAkBtrD,EAAAA,EAAAA,mBAAkB2uC,GAEzC,IAAIxvC,QAAgBmqB,EAASiE,gBAAgBohB,EAAap5C,KAAKo+D,eAE7Dp+D,KAAKi2D,QADe,iBAAXrsD,EACMA,EAEA2R,KAAKC,UAAU5R,EAElC,CAAC,MAAO1H,GAENlC,KAAKi2D,QAAU16C,KAAKC,UAAUtZ,EAChC,CAEF,EAEA,0BAAM+yD,GACJ,IAAIlhC,EAAW,IAAI4xC,EAAAA,EAAiB/2C,OAAOmF,UAC3C,MAAM6xC,EAAS,IAAIC,EAAAA,IAAY,CAACphD,QAASqhD,EAAAA,IAAQxqC,UAC3CxD,EAAQ,IAAIiuC,EAAAA,IAAMH,GAmBlBxsB,QAAoBthB,EAAMshB,YAAY2gB,MAAMiM,OAAO,CACvDC,OAAQlyC,EAASsgB,WAAWr0C,KAAKo+D,eAAe95C,QAChD/f,KAAM,CAEJ2hE,SAAU,oFAEVC,cAAe,CAAC,6BAA8B,mFAAoF,4FAClIC,kBAAmB,CAAC,QAAS,SAIjCpmE,KAAK+1D,iBAAkBtrD,EAAAA,EAAAA,mBAAkB2uC,GAEzC,IAAIxvC,QAAgBmqB,EAASiE,gBAAgBohB,EAAap5C,KAAKo+D,eAE7Dp+D,KAAKi2D,QADe,iBAAXrsD,EACMA,EAEA2R,KAAKC,UAAU5R,EAElC,EAEA,mCAAMsrD,GACJ,IAAInhC,EAAW,IAAI4xC,EAAAA,EAAiB/2C,OAAOmF,UAC3C,MAAM6xC,EAAS,IAAIC,EAAAA,IAAY,CAACphD,QAASqhD,EAAAA,IAAQxqC,UAC3CxD,EAAQ,IAAIiuC,EAAAA,IAAMH,GAmBlBxsB,QAAoBthB,EAAMshB,YAAY2gB,MAAMiM,OAAO,CACvDC,OAAQlyC,EAASsgB,WAAWr0C,KAAKo+D,eAAe95C,QAChD/f,KAAM,CAEJ2hE,SAAU,oFAEVC,cAAe,CAAC,6BAA8B,mFAAoF,4FAClIC,kBAAmB,CAAC,QAAS,SAIjCpmE,KAAK+1D,iBAAkBtrD,EAAAA,EAAAA,mBAAkB2uC,GAEzC,IAAIxvC,QAAgBmqB,EAASkE,yBAAyBmhB,EAAap5C,KAAKo+D,eAEtEp+D,KAAKi2D,QADe,iBAAXrsD,EACMA,EAEA2R,KAAKC,UAAU5R,EAElC,EAEA,oCAAM+qD,GACJ,IAAI5gC,EAAW,IAAI4xC,EAAAA,EAAiB/2C,OAAOmF,UAC3C,MAAM6xC,EAAS,IAAIC,EAAAA,IAAY,CAACphD,QAASqhD,EAAAA,IAAQxqC,UAC3CxD,EAAQ,IAAIiuC,EAAAA,IAAMH,GAClBxsB,QAAoBthB,EAAMshB,YAAY2gB,MAAMiM,OAAO,CACvDC,OAAQlyC,EAASsgB,WAAWr0C,KAAKo+D,eAAe95C,QAChD/f,KAAM,CAEJ2hE,SAAU,0GAEVC,cAAe,CAAC,6BAA8B,6FAA8F,2FAA4F,4FACxOC,kBAAmB,CAAC,QAAS,CAAC,QAAS,CAAC,KAAM,CAAC,YAUnDpmE,KAAK+1D,iBAAkBtrD,EAAAA,EAAAA,mBAAkB2uC,GAEzC,IAAIxvC,QAAgBmqB,EAASkE,yBAAyBmhB,EAAap5C,KAAKo+D,eAEtEp+D,KAAKi2D,QADe,iBAAXrsD,EACMA,EAEA2R,KAAKC,UAAU5R,EAElC,EAEA,kCAAM6pD,GACJ,IAAI1/B,EAAW,IAAIuxC,EAAAA,EAAkB12C,OAAOmF,UAExCsxC,EAAS,IAAII,EAAAA,UACb1xC,EAASsgB,WAAW,2CAA2C/vB,SAEnE,MAAMuM,EAAa,IAAIw1C,EAAAA,WAAWrmE,KAAKsmE,kBACjC,UAACC,SAAmB11C,EAAW21C,qBAC/BC,EAA8B,IAAIC,EAAAA,mBAAmB,CACzDC,SAAUtB,EACVuB,gBAAiBL,EACjBM,aAAc,CACZC,EAAAA,cAAcC,SAAS,CACrBC,WAAY,IAAIvB,EAAAA,UAAU1xC,EAASsgB,aAAa/vB,SAChD2iD,SAAU,IAAIxB,EAAAA,UAAU1xC,EAASsgB,aAAa/vB,SAC9C4iD,SAAU,WAGbC,qBAEH,IAAI/tB,EAAc,IAAIguB,EAAAA,qBAAqBX,GAC3CzmE,KAAK+1D,iBAAkBtrD,EAAAA,EAAAA,mBAAkB2uC,GAEzC,IAAIl4C,QAAe6yB,EAASiE,gBACxBohB,EACAp5C,KAAKo+D,eAETruC,QAAQjtB,IAAI,6BAA8ByY,KAAKC,UAAUta,IAEvDlB,KAAKi2D,QADc,iBAAV/0D,EACMA,EAEAqa,KAAKC,UAAUta,EAElC,EAEA,yCAAM2yD,GACJ,IAAI9/B,EAAW,IAAIuxC,EAAAA,EAAkB12C,OAAOmF,UAExCsxC,EAAS,IAAII,EAAAA,UAAU1xC,EAASsgB,aAAa/vB,SACjD,MAAMuM,EAAa,IAAIw1C,EAAAA,WAAWrmE,KAAKsmE,kBACjC,UAACC,SAAmB11C,EAAW21C,qBAC/BC,EAA8B,IAAIC,EAAAA,mBAAmB,CACzDC,SAAUtB,EACVuB,gBAAiBL,EACjBM,aAAc,CACZC,EAAAA,cAAcC,SAAS,CACrBC,WAAY,IAAIvB,EAAAA,UAAU1xC,EAASsgB,aAAa/vB,SAChD2iD,SAAU,IAAIxB,EAAAA,UAAU1xC,EAASsgB,aAAa/vB,SAC9C4iD,SAAU,WAGbC,qBAEH,IAAI/tB,EAAc,IAAIguB,EAAAA,qBAAqBX,GAC3CzmE,KAAK+1D,iBAAkBtrD,EAAAA,EAAAA,mBAAkB2uC,GAEzC,IAAIl4C,QAAe6yB,EAASmF,uBACxBkgB,EACAp5C,KAAKo+D,eAETruC,QAAQjtB,IAAI,6BAA8ByY,KAAKC,UAAUta,IAEvDlB,KAAKi2D,QADc,iBAAV/0D,EACMA,EAEAqa,KAAKC,UAAUta,EAElC,EAEA,sCAAMyyD,GACJ,IAAI5/B,EAAW,IAAIuxC,EAAAA,EAAkB12C,OAAOmF,UAC5C,MAAMlD,EAAa,IAAIw1C,EAAAA,WAAWrmE,KAAKsmE,kBACjC,UAACC,SAAmB11C,EAAW21C,qBACrC,IAAInB,EAAS,IAAII,EAAAA,UAAU1xC,EAASsgB,aAAa/vB,SACjD,MAAMmiD,EAA8B,IAAIC,EAAAA,mBAAmB,CACzDC,SAAUtB,EACVuB,gBAAiBL,EACjBM,aAAc,CACZC,EAAAA,cAAcC,SAAS,CACrBC,WAAY,IAAIvB,EAAAA,UAAU1xC,EAASsgB,aAAa/vB,SAChD2iD,SAAU,IAAIxB,EAAAA,UAAU1xC,EAASsgB,aAAa/vB,SAC9C4iD,SAAU,WAGbC,qBAEH,IAAI/tB,EAAc,IAAIguB,EAAAA,qBAAqBX,GAC3CzmE,KAAK+1D,iBAAkBtrD,EAAAA,EAAAA,mBAAkB2uC,GAEzC,IAAIl4C,QAAe6yB,EAASiF,oBACxB,CAACogB,GACDp5C,KAAKo+D,eAETruC,QAAQjtB,IAAI,6BAA8ByY,KAAKC,UAAUta,IAEvDlB,KAAKi2D,QADc,iBAAV/0D,EACMA,EAEAqa,KAAKC,UAAUta,EAElC,EAEA,yBAAMsyD,GACJ,MAAM3iC,EAAa,IAAIw1C,EAAAA,WAAWrmE,KAAKsmE,kBACjC,UAACC,SAAmB11C,EAAW21C,qBACrC,IAAIzyC,EAAW,IAAIuxC,EAAAA,EAAkB12C,OAAOmF,UAC5C,MAAMqlB,EAAc,IAAIiuB,EAAAA,YAAY,CAClCC,SAAU,IAAI7B,EAAAA,UAAU1xC,EAASsgB,aAAa/vB,SAC9CsiD,gBAAiBL,IAChB5uD,IACCmvD,EAAAA,cAAcC,SAAS,CACrBC,WAAY,IAAIvB,EAAAA,UAAU1xC,EAASsgB,aAAa/vB,SAChD2iD,SAAU,IAAIxB,EAAAA,UAAU1xC,EAASsgB,aAAa/vB,SAC9C4iD,SAAU,OAIhBlnE,KAAK+1D,iBAAkBtrD,EAAAA,EAAAA,mBAAkB2uC,GACzC,IAAIl4C,QAAe6yB,EAASiE,gBACxBohB,EACAp5C,KAAKo+D,eAETruC,QAAQjtB,IAAI,6BAA8ByY,KAAKC,UAAUta,IAEvDlB,KAAKi2D,QADc,iBAAV/0D,EACMA,EAEAqa,KAAKC,UAAUta,EAElC,EAEA,6BAAMwyD,GACJ,MAAM7iC,EAAa,IAAIw1C,EAAAA,WAAWrmE,KAAKsmE,kBACjC,UAACC,SAAmB11C,EAAW21C,qBAErC,IAAIzyC,EAAW,IAAIuxC,EAAAA,EAAkB12C,OAAOmF,UAC5C,MAAMqlB,EAAc,IAAIiuB,EAAAA,YAAY,CAClCC,SAAU,IAAI7B,EAAAA,UAAU1xC,EAASsgB,aAAa/vB,SAC9CsiD,gBAAiBL,IAChB5uD,IACCmvD,EAAAA,cAAcC,SAAS,CACrBC,WAAY,IAAIvB,EAAAA,UAAU1xC,EAASsgB,aAAa/vB,SAChD2iD,SAAU,IAAIxB,EAAAA,UAAU1xC,EAASsgB,aAAa/vB,SAC9C4iD,SAAU,SAGhBlnE,KAAK+1D,iBAAkBtrD,EAAAA,EAAAA,mBAAkB2uC,GAEzC,IAAIl4C,QAAe6yB,EAASiF,oBACxB,CAACogB,GACDp5C,KAAKo+D,eAGPp+D,KAAKi2D,QADc,iBAAV/0D,EACMA,EAEAqa,KAAKC,UAAUta,EAElC,EAEAolE,aAAAA,GACE,IAAIrd,EAAM,gDAQV,MAP2B,4CAAvBjpD,KAAKo+D,cACPnV,EAAM,iDAC0B,4CAAvBjpD,KAAKo+D,cACdnV,EAAM,uDAC0B,iBAAvBjpD,KAAKo+D,gBACdnV,EAAM,2DAEDA,CACT,EAEA,gCAAM2K,GAEJ,MAAM/iC,EAAa,IAAIw1C,EAAAA,WAAWrmE,KAAKsmE,kBACjC,UAACC,SAAmB11C,EAAW21C,qBAErC,IAAIzyC,EAAW,IAAIuxC,EAAAA,EAAkB12C,OAAOmF,UAC5C,MAAMqlB,EAAc,IAAIiuB,EAAAA,YAAY,CAClCC,SAAU,IAAI7B,EAAAA,UAAU1xC,EAASsgB,aAAa/vB,SAC9CsiD,gBAAiBL,IAChB5uD,IACCmvD,EAAAA,cAAcC,SAAS,CACrBC,WAAY,IAAIvB,EAAAA,UAAU1xC,EAASsgB,aAAa/vB,SAChD2iD,SAAU,IAAIxB,EAAAA,UAAU1xC,EAASsgB,aAAa/vB,SAC9C4iD,SAAU,SAGhBlnE,KAAK+1D,iBAAkBtrD,EAAAA,EAAAA,mBAAkB2uC,GAEzC,IAAIl4C,QAAe6yB,EAASmF,uBACxBkgB,EACAp5C,KAAKo+D,eAGPp+D,KAAKi2D,QADc,iBAAV/0D,EACMA,EAEAqa,KAAKC,UAAUta,EAElC,EAEA,0BAAM0zD,GACJ,IAAI7gC,EAAW,IAAI6iB,EAAAA,kBAAkBhoB,OAAOmF,UACxCnqB,QAAgBmqB,EAASmjB,cAAcl3C,KAAKo+D,cAAerqC,EAASsgB,WAAWr0C,KAAKo+D,eAAe95C,QAAS,eAChH,GAAsB,iBAAX1a,EACT5J,KAAKi2D,QAAUrsD,MACV,CACL,IAAIixD,QAAgB76D,KAAKunE,2BAA2BxzC,EAASsgB,WAAWr0C,KAAKo+D,eAAe95C,QAAS,cAAe1a,EAAQ+Y,UAAW/Y,EAAQ49D,QAAQnoE,OACvJ0wB,QAAQjtB,IAAI,SAAU+3D,GACtB76D,KAAKi2D,QAAU,UAAY4E,EAAUt/C,KAAKC,UAAU5R,EACtD,CACF,EAEA,gCAAM29D,CAA2BE,EAAQljE,EAAMoe,EAAW0iD,GACxD,IACEt1C,QAAQjtB,IAAI,qCAAsC2kE,GAClD13C,QAAQjtB,IAAI,mCAAoCyY,KAAKC,UAAUjX,IAC/DwrB,QAAQjtB,IAAI,wCAAyC6f,GACrDoN,QAAQjtB,IAAI,qCAAsCuiE,GAGlD,MAAOhjD,OAAQqlD,GAAa7K,GAAW4K,GAEjCE,EAAkB3N,EAAOxvC,KAAK7H,EAAW,UAEzCilD,EAAiB,IAAIpqC,WAAWmqC,GAEhCE,EAAoB7N,EAAOxvC,KAAK66C,EAAQ,UAExCyC,EAAmB,IAAItqC,WAAWqqC,GAGxC,aAAajL,GACT8K,EACAD,EACAljE,EACAujE,EACAF,EAEN,CAAE,MAAOr/D,GAEP,OADAwnB,QAAQxe,MAAM,uBAAwBhJ,IAC/B,CACT,CACF,EAEA,sBAAMssD,GACJ,IAAI9gC,EAAW,IAAI6iB,EAAAA,kBAAkBhoB,OAAOmF,UAgBxCqjB,EAAU,CACZ,SAAY,YACZ,eAAkB,SAClB,SAAY,MACZ,IAAO,CAAC,IAAO,SAAU,OAAU,CAAC,CAAC,MAAS,QAAS,OAAU,UACjE,KAAQ,CAAC,CACP,KAAQ,2CACR,MAAS,CACP,OAAU,8CACV,OAAU,CAAC,CACT,QAAW,OACX,gBAAmB,wEAClB,CACD,QAAW,MACX,gBAAmB,yEAErB,SAAY,CAAC,MAAS,QAAS,OAAU,OACzC,qBAAwB,OAG5B,KAAQ,KACR,eAAkB,WAClB,YAAe,CACb,oBAAsB,EACtB,gBAAkB,EAClB,IAAO,CAAC,IAAO,SAAU,OAAU,CAAC,CAAC,MAAS,QAAS,OAAU,YAerEp3C,KAAK+1D,iBAAkBtrD,EAAAA,EAAAA,mBAAkB2sC,GACzC,IAAInP,QAAYlU,EAAS8jB,UAAU73C,KAAKo+D,cAAerqC,EAASsgB,WAAWr0C,KAAKo+D,eAAe95C,QAAS8yB,GAGtGp3C,KAAKi2D,QADW,iBAAPhuB,EACMA,EAKA1sB,KAAKC,UAAUysB,EAElC,EAEAqQ,eAAAA,CAAgB1uC,GACd,IAAI2uC,EAASyhB,EAAOxvC,KAAK,IACzB,IAEI+tB,EADqB,kBAAZ3uC,EACAowD,EAAOxvC,KAAK5gB,EAAQuI,QAAQ,KAAM,IAAK,OAEvC6nD,EAAOxvC,KAAK5gB,EAEzB,CAAE,MAAOrB,GACPwnB,QAAQjtB,IAAI,0BAA0ByF,IACxC,CACA,OAAOgwC,CACT,EAGA,uBAAMuc,GACJ,IAAI/gC,EAAW,IAAI6iB,EAAAA,kBAAkBhoB,OAAOmF,UAExCqjB,EAAU,CACZ,UAAap3C,KAAKs4C,gBAAgB,8YAClC,cAAiBt4C,KAAKs4C,gBAAgB,wNACtC,QAAW,YACX,cAAiB,UAInBt4C,KAAK+1D,iBAAkBtrD,EAAAA,EAAAA,mBAAkB2sC,GACzC,IAAInP,QAAYlU,EAASkkB,WAAWj4C,KAAKo+D,cAAerqC,EAASsgB,WAAWr0C,KAAKo+D,eAAe95C,QAAS8yB,GAEvGp3C,KAAKi2D,QADW,iBAAPhuB,EACMA,EAIA1sB,KAAKC,UAAUysB,EAElC,EAEA+rB,6BAAAA,CAA8BtqD,EAAQy7D,GACpCnlE,KAAK+1D,gBAAkBx6C,KAAKC,UAAU9R,GACtC1J,KAAKi6D,sBAAwBvwD,EAC7B1J,KAAKk6D,iBAAmBiL,CAC1B,EAEAjR,6BAAAA,CAA8BxqD,EAAQy7D,GACpCnlE,KAAK+1D,gBAAkBx6C,KAAKC,UAAU9R,GACtC1J,KAAK8hE,sBAAwBp4D,EAC7B1J,KAAK6hE,iBAAmBsD,EACxBp1C,QAAQjtB,IAAI,QAAS4G,GACrBqmB,QAAQjtB,IAAI,SAAUqiE,EACxB,EAEA/Q,iCAAAA,CAAkC1qD,EAAQy7D,GACxCnlE,KAAK+1D,gBAAkBx6C,KAAKC,UAAU9R,GACtC1J,KAAKmiE,0BAA4Bz4D,EACjC1J,KAAKkiE,qBAAuBiD,EAC5Bp1C,QAAQjtB,IAAI,QAAS4G,GACrBqmB,QAAQjtB,IAAI,SAAUqiE,EACxB,EACA3Q,yBAAAA,CAA0BtzD,GAEtBlB,KAAKi2D,QADc,iBAAV/0D,EACMA,EAEAqa,KAAKC,UAAUta,EAElC,EACAozD,8BAAAA,CAA+B5qD,GAE3B1J,KAAK+1D,gBADc,iBAAVrsD,EACcA,EAEA6R,KAAKC,UAAU9R,EAE1C,EAEA4rD,6BAAAA,CAA8Bp0D,GAE1BlB,KAAKi2D,QADc,iBAAV/0D,EACMA,EAEAqa,KAAKC,UAAUta,EAElC,EAEAm0D,kCAAAA,CAAmC3rD,GAE/B1J,KAAK+1D,gBADc,iBAAVrsD,EACcA,EAEA6R,KAAKC,UAAU9R,EAE1C,EAEAslD,kBAAAA,CAAmBF,GACjBoO,GAAiBpO,EACb9uD,KAAKuuD,SACP3/B,OAAOmF,SAASg0C,UAAY,CAC1B1I,qBAAsB,CACpBjQ,eAAgB+N,GAChBrO,OAA0B,IAAlBA,EAAOxnD,OAAe,MAAQwnD,GAExC5mB,SAAUm1B,GACViC,cAAe,CACbnP,MAAOmN,KAIf,EAEAjO,0BAAAA,CAA2BD,GACzB+N,GAA4C,aAAnB/N,EAAgCpvD,KAAK4vD,SAAWR,EAErEpvD,KAAKuuD,OACP3/B,OAAOmF,SAASg0C,UAAY,CAC1B1I,qBAAsB,CACpBjQ,eAAgB+N,GAChBrO,OAAkC,IAA1BoO,GAAe51D,OAAe,MAAQ41D,IAEhDh1B,SAAUm1B,GACViC,cAAe,CACbnP,MAAOmN,KAIP1uC,OAAOmF,SAAS1Y,cAClBuT,OAAOmF,SAAS1Y,cAAcgB,SAAW8gD,GAEzCvuC,OAAOmF,SAAS1Y,cAAgB,CAC9BgB,SAAU8gD,GAIlB,EAEAtN,4BAAAA,CAA6BD,GAC3B7/B,QAAQjtB,IAAI,+BAAgC8sD,GAC5CuN,GAAyBvN,EAErB5vD,KAAKuuD,OACP3/B,OAAOmF,SAASg0C,UAAY,CAC1B1I,qBAAsB,CACpBjQ,eAAgBQ,EAChBd,OAAkC,IAA1BoO,GAAe51D,OAAe,MAAQ41D,IAEhDh1B,SAAUm1B,GACViC,cAAe,CACbnP,MAAOmN,KAIP1uC,OAAOmF,SAAS1Y,cAClBuT,OAAOmF,SAAS1Y,cAAcgB,SAAWuzC,EAEzChhC,OAAOmF,SAAS1Y,cAAgB,CAC9BgB,SAAUuzC,EAIlB,EAEAI,oBAAAA,CAAqB9nB,GACnBm1B,GAAmBn1B,EACfloC,KAAKuuD,SACP3/B,OAAOmF,SAASg0C,UAAY,CAC1B1I,qBAAsB,CACpBjQ,eAAgB+N,GAChBrO,OAAkC,IAA1BoO,GAAe51D,OAAe,MAAQ41D,IAEhDh1B,SAAUA,EACVo3B,cAAe,CACbnP,MAAOmN,KAIf,EACA7M,0BAAAA,GACE1gC,QAAQjtB,IAAI,gCAAiC9C,KAAKwwD,eACpD,EAEAwX,iBAAAA,CAAkBp+D,EAAS+Y,EAAWslD,GAIpC,GAHAl4C,QAAQjtB,IAAI,iCAAkC8G,GAC9CmmB,QAAQjtB,IAAI,mCAAoC6f,GAChDoN,QAAQjtB,IAAI,oCAAqCmlE,IAC5Cr+D,IAAY+Y,EACf,MAAO,GAET,IAAIulD,EAAkBt+D,EACtB,GAAIA,EAAQ+I,WAAW,MAAO,CAC5Bu1D,EAAkBA,EAAgB/1D,QAAQ,MAAO,IACjD,IAAI4P,EAAM,GACV,IAAK,IAAIlO,EAAI,EAAGA,EAAIq0D,EAAgB5gE,OAAQuM,GAAK,EAAG,CAClD,MAAMq9B,EAAOg3B,EAAgBxxD,MAAM7C,EAAGA,EAAI,GAC1CkO,GAAO+oB,OAAOC,aAAahR,SAASmX,EAAM,IAC5C,CACAg3B,EAAkBnmD,CACpB,CACAgO,QAAQjtB,IAAI,yCAA0ColE,GAGtD,MAAMC,EAAmBC,EAAAA,GAA2BF,EAAiBvlD,GAErE,OADAoN,QAAQjtB,IAAI,sCAAuCqlE,GAC5CA,EAAiB30B,gBAAkBy0B,EAAWz0B,aACvD,EAEA,mBAAMonB,CAAcyN,GAElB,GAAIz5C,OAAOmF,UAAYnF,OAAOmF,SAAS5V,SAAWkqD,GAAQA,EAAK/gE,OAAS,EAAG,CACzE,IAAIghE,EAAa,CAAC,EAClB,IAAK,IAAInjB,KAAckjB,EACrB,GAAI,WAAYljB,GAAc,WAAYA,EAAY,CACpD,IAAIojB,EAAcvoE,KAAKw+D,mBAAmBlmD,QAAOhB,GAAQA,EAAKrF,SAAWkzC,EAAWlzC,SAAQ,GAG5F,GAFA8d,QAAQjtB,IAAI,cAAeyY,KAAKC,UAAU+sD,IAC1Cx4C,QAAQjtB,IAAI,cAAeyY,KAAKC,UAAU2pC,IAChB,kBAAtBA,EAAWlzC,OAA4B,CACzC,IAAIg2D,EAAajoE,KAAKggE,6BAA6B7a,EAAW70B,SAC9D23C,EAAaA,EAAW,GACxBl4C,QAAQjtB,IAAI,iBAAkBmlE,GAC9B,IAAIO,EAAaD,EAAY7+D,OAAO,GACpCqmB,QAAQjtB,IAAI,iBAAkByY,KAAKC,UAAUgtD,IAC7CF,EAAWnjB,EAAWlzC,QAAUjS,KAAKgoE,kBAAkBQ,EAAYrjB,EAAWjkD,OAAQ+mE,EACxF,MAAO,GAA0B,uBAAtB9iB,EAAWlzC,OAAiC,CACrD,IAAIw2D,EAAgBtjB,EAAWjkD,OAC/B,GAAI,cAAeunE,GAAiB,cAAeA,EAAe,CAChE,MAAMC,EAAYlD,IAAAA,KAAU7hD,SAASC,QACjC,IAAIiS,aAAcC,OAAO,gBACzB2yC,EAAc9lD,UACd,IAAI8iD,EAAAA,UAAUgD,EAAc96D,WAAW+3D,WAE3C4C,EAAWnjB,EAAWlzC,QAAUy2D,CAClC,MACEJ,EAAWnjB,EAAWlzC,SAAU,CAEpC,MAAO,GAA0B,4BAAtBkzC,EAAWlzC,QAA8D,oBAAtBkzC,EAAWlzC,OAA8B,CACrG,IAAIuvD,EAAYxhE,KAAK0hE,oBAAoBvc,EAAWjkD,QACpDonE,EAAWnjB,EAAWlzC,eAAiBuvD,GAAWtgE,MACpD,MAAO,GAA0B,oBAAtBikD,EAAWlzC,OAEpBq2D,EAAWnjB,EAAWlzC,QAAU,wBAE3B,GAA0B,sBAAtBkzC,EAAWlzC,OAAgC,CACpD,IAAI02D,EAAexjB,EAAWjkD,OAC1Bw/C,EAAgB,IAAIilB,EAAAA,EAAiB/2C,OAAOmF,UAC5C60C,EAAiBloB,EAAcrM,WAAW8Q,EAAW70B,UAAU3iB,UAE/D2mC,EAAUq0B,EAAahmD,UACvB2xB,EAAQ3hC,WAAW,QACrB2hC,EAAUA,EAAQ59B,MAAM,EAAG49B,EAAQhtC,SAGrCyoB,QAAQjtB,IAAI,+CAAgD8lE,EAAgBt0B,GAC5Eg0B,EAAWnjB,EAAWlzC,QAAUuzD,IAAAA,KAAU7hD,SAASC,OAC/Co2C,EAAOxvC,KAAKm+C,EAAahkB,aACzBqV,EAAOxvC,KAAK8pB,EAAS,OACrB0lB,EAAOxvC,KAAKo+C,EAAgB,OAElC,MAAO,GAA0B,yBAAtBzjB,EAAWlzC,OAAmC,CACvD,IAAI2uC,EAAiB,IAAIhK,EAAAA,kBAAkBhoB,OAAOmF,UAC9CixB,EAAgBpE,EAAevM,WAAW8Q,EAAW70B,UAAUhM,QAC/DukD,EAAgB1jB,EAAWjkD,OAC3B25D,QAAgB76D,KAAKunE,2BAA2BviB,EAAe,cAAe6jB,EAAclmD,UAAWkmD,EAAcrB,QAAQnoE,OACjIipE,EAAWnjB,EAAWlzC,QAAU4oD,CAElC,MAAO,GAA0B,qBAAtB1V,EAAWlzC,OAA+B,CACnD,IAAI62D,EAAc3jB,EAAWjkD,OACzB46D,EAAU,IAAIC,EAAAA,GAAQ,CACxB,SAAY,0BACZ,QAAW,CAAC,EACZ,WAAc,KAEZhoC,EAAW,IAAI8mB,EAAAA,gBAAgBjsB,OAAOmF,UAC1Cu0C,EAAWnjB,EAAWlzC,cAAgB6pD,EAAQE,IAAIpB,cAAc,KAAOZ,EAAOxvC,KAAK,cAAc5lB,SAAS,OAAQkkE,EAAa/0C,EAASsgB,WAAW,gBAAgB/vB,QACrK,MAAO,GAA0B,uBAAtB6gC,EAAWlzC,OAAiC,CACrD,IAAI62D,EAAc3jB,EAAWjkD,OACzB46D,EAAU,IAAIC,EAAAA,GAAQ,CACxB,SAAY,0BACZ,QAAW,CAAC,EACZ,WAAc,KAEhB,MAAME,QAAsBH,EAAQE,IAAIE,gBAAgB,aAAc4M,GACtE,IAAI/0C,EAAW,IAAI8mB,EAAAA,gBAAgBjsB,OAAOmF,UAE1Cu0C,EAAWnjB,EAAWlzC,QAAUgqD,IAAkBloC,EAASsgB,WAAW,gBAAgB/vB,OACxF,MAAO,GAA0B,yBAAtB6gC,EAAWlzC,OAAmC,CACvD,IAAIg2B,EAAMkd,EAAWjkD,OACjB02C,EAAW53C,KAAK2+D,uBAEpB,MAAMrE,EAAc,IAAIyO,EAAAA,GAAoB,CAACvO,QAAS,qDAEtD,IAAIzmC,EAAW,IAAIglB,EAAAA,oBAAoBnqB,OAAOmF,UAC1CzP,EAAUyP,EAASsgB,WAAW,oBAAoB/vB,QAClDm2C,EAAK,QACT,MAAMrmB,EAAU,IAAI40B,EAAAA,GAAgB1O,EAAah2C,EAASm2C,GAE1D,IAAIE,EAAO36D,KACXo0C,EAAQwmB,cAAchjB,EAAU3P,GAAK5lC,MAAK,SAAUw4D,GAClDF,EAAK5E,gBAAkB,sBAAsB8E,GAC/C,IAAG/oD,OAAM,SAAUP,GACjBopD,EAAK5E,gBAAkB,sBAAsBxkD,GAC/C,IACA+2D,EAAWnjB,EAAWlzC,QAAU,oCAClC,MACEq2D,EAAWnjB,EAAWlzC,QAAU,kBAGpC,KAAW,WAAYkzC,GAAc,UAAWA,IAC9CmjB,EAAWnjB,EAAWlzC,QAAUkzC,EAAW5zC,OAK/Cwe,QAAQjtB,IAAI,iBAAkByY,KAAKC,UAAU8sD,IAC7CtoE,KAAK+1D,gBAAkB,eAAiBx6C,KAAKC,UAAU8sD,EACzD,MACEv4C,QAAQjtB,IAAI,uDAIhB,EAEAstD,iBAAAA,CAAkBD,GAChBmN,GAAgBnN,EACZnwD,KAAKuuD,SACP3/B,OAAOmF,SAASg0C,UAAY,CAC1B1I,qBAAsB,CACpBjQ,eAAgB+N,GAChBrO,OAAkC,IAA1BoO,GAAe51D,OAAe,MAAQ41D,IAEhDh1B,SAAUm1B,GACViC,cAAe,CACbnP,MAAOA,IAIf,EAEA,yBAAMuR,CAAoBuH,GACxB,IAAIC,EAAYD,EACZ/nE,GAAS,EACToE,EAAM,GACV,IAEE,MAAMg8D,EAAU,IAAIC,EAAAA,EAAW3yC,OAAOmF,UACtC,IAAIqgB,EAAUktB,EAAQjtB,aACtBtkB,QAAQjtB,IAAI,sBAAsBsxC,EAAQ9vB,WAG1C,IAAI0yB,QAAemyB,EAAAA,EAAAA,IAA+BnpE,KAAKi6D,sBAAsBrwD,QAASs/D,EAAUvmD,WAC5F2B,EAAU0yB,EAAOoyB,eACrBr5C,QAAQjtB,IAAI,mBAAmBwhB,KAG/ByL,QAAQjtB,IAAI,mBAAmBsxC,EAAQzmC,aACvCoiB,QAAQjtB,IAAI,kBAAkBk0C,EAAOqyB,cACrCnoE,EAAUkzC,EAAQ9vB,UAAYA,GAAa8vB,EAAQzmC,YAAcqpC,EAAOqyB,WAExE/jE,EAAM,mBAAmB8uC,EAAQ9vB,UAAYA,wBAA8B8vB,EAAQzmC,YAAcqpC,EAAOqyB,aACxGt5C,QAAQjtB,IAAI,6BAA8Bk0C,EAC5C,CAAE,MAAO90C,GACP6tB,QAAQjtB,IAAI,4BAA6BZ,EAC3C,CACA,MAAO,CACLhB,SACAoE,MAEJ,EAGAowD,oBAAAA,CAAqBhnD,GACnB1O,KAAKqc,SAAW3N,CAClB,EAEAmnD,sBAAAA,CAAuBnnD,GACrB1O,KAAK41D,iBAAmBlnD,CAC1B,EAEAonD,gBAAAA,GACE,GAAI91D,KAAK+1D,gBAAiB,CACxB,MAAMuT,EAAiB/tD,KAAKuV,MAAM9wB,KAAK+1D,iBACvCuT,EAAejtD,SAA6B,aAAlBrc,KAAKqc,SAA0Brc,KAAK41D,iBAAmB51D,KAAKqc,SACtFrc,KAAK+1D,gBAAkBx6C,KAAKC,UAAU8tD,EACxC,CACF,EAEA3T,wBAAAA,GACE,OAAOqH,GAA8BrX,MAAM4jB,GAAMvpE,KAAKo+D,cAAczrD,WAAW42D,IACjF,GAEFC,OAAAA,GAOE,EAGFC,OAAAA,GAEE,IAAIC,EAAYvhE,SAASwhE,cAAc,UACvCD,EAAUE,IAAM,8CAChBF,EAAUtkE,GAAK,QACf+C,SAAS0hE,qBAAqB,QAAQ,GAAGC,YAAYJ,GAErD1pE,KAAKqyB,cAAe,EACpBlqB,SAAS4hE,MAAQ,cACjB/pE,KAAKqxD,iBACLrxD,KAAKqxD,iBAELthC,QAAQjtB,IAAI,SACR9C,KAAKgqE,MAAMC,kBACbjqE,KAAK2+D,wBAAyBuL,EAAAA,EAAAA,IAAMlqE,KAAKgqE,MAAMC,iBAAiBryB,UAChE7nB,QAAQjtB,IAAI,QAAS9C,KAAK2+D,yBAE1B5uC,QAAQjtB,IAAI,MAEhB,GWzyHF,MAAM,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAASqnE,GAAQ,CAAC,YAAY,qBAEzF,UCJA,MAAMC,IAAMC,EAAAA,EAAAA,IAAUC,IAEtBF,GAAIG,IAAIC,EAAAA,GACRJ,GAAIK,MAAM,O,uvCCPNC,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBtqE,IAAjBuqE,EACH,OAAOA,EAAazrE,QAGrB,IAAI0rE,EAASJ,EAAyBE,GAAY,CACjDxlE,GAAIwlE,EACJG,QAAQ,EACR3rE,QAAS,CAAC,GAUX,OANA4rE,EAAoBJ,GAAUvpE,KAAKypE,EAAO1rE,QAAS0rE,EAAQA,EAAO1rE,QAASurE,GAG3EG,EAAOC,QAAS,EAGTD,EAAO1rE,OACf,CAGAurE,EAAoBxqE,EAAI6qE,E,WC5BxBL,EAAoBM,KAAO,CAAC,C,eCA5B,IAAIC,EAAW,GACfP,EAAoBQ,EAAI,SAASjqE,EAAQkqE,EAAU3pC,EAAI4pC,GACtD,IAAGD,EAAH,CAMA,IAAIE,EAAeC,IACnB,IAAS13D,EAAI,EAAGA,EAAIq3D,EAAS5jE,OAAQuM,IAAK,CACrCu3D,EAAWF,EAASr3D,GAAG,GACvB4tB,EAAKypC,EAASr3D,GAAG,GACjBw3D,EAAWH,EAASr3D,GAAG,GAE3B,IAJA,IAGI9R,GAAY,EACPypE,EAAI,EAAGA,EAAIJ,EAAS9jE,OAAQkkE,MACpB,EAAXH,GAAsBC,GAAgBD,IAAansE,OAAOwrB,KAAKigD,EAAoBQ,GAAGh5C,OAAM,SAASle,GAAO,OAAO02D,EAAoBQ,EAAEl3D,GAAKm3D,EAASI,GAAK,IAChKJ,EAASv1D,OAAO21D,IAAK,IAErBzpE,GAAY,EACTspE,EAAWC,IAAcA,EAAeD,IAG7C,GAAGtpE,EAAW,CACbmpE,EAASr1D,OAAOhC,IAAK,GACrB,IAAI43D,EAAIhqC,SACEnhC,IAANmrE,IAAiBvqE,EAASuqE,EAC/B,CACD,CACA,OAAOvqE,CArBP,CAJCmqE,EAAWA,GAAY,EACvB,IAAI,IAAIx3D,EAAIq3D,EAAS5jE,OAAQuM,EAAI,GAAKq3D,EAASr3D,EAAI,GAAG,GAAKw3D,EAAUx3D,IAAKq3D,EAASr3D,GAAKq3D,EAASr3D,EAAI,GACrGq3D,EAASr3D,GAAK,CAACu3D,EAAU3pC,EAAI4pC,EAwB/B,C,eC5BAV,EAAoBe,EAAI,SAASZ,GAChC,IAAIa,EAASb,GAAUA,EAAOrqE,WAC7B,WAAa,OAAOqqE,EAAO,UAAY,EACvC,WAAa,OAAOA,CAAQ,EAE7B,OADAH,EAAoBiB,EAAED,EAAQ,CAAE9zD,EAAG8zD,IAC5BA,CACR,C,eCPA,IACIE,EADAC,EAAW5sE,OAAOozC,eAAiB,SAASD,GAAO,OAAOnzC,OAAOozC,eAAeD,EAAM,EAAI,SAASA,GAAO,OAAOA,EAAI05B,SAAW,EAQpIpB,EAAoB1e,EAAI,SAAS5sD,EAAO2sE,GAEvC,GADU,EAAPA,IAAU3sE,EAAQW,KAAKX,IAChB,EAAP2sE,EAAU,OAAO3sE,EACpB,GAAoB,kBAAVA,GAAsBA,EAAO,CACtC,GAAW,EAAP2sE,GAAa3sE,EAAMoB,WAAY,OAAOpB,EAC1C,GAAW,GAAP2sE,GAAoC,oBAAf3sE,EAAMgD,KAAqB,OAAOhD,CAC5D,CACA,IAAI60C,EAAKh1C,OAAOe,OAAO,MACvB0qE,EAAoBc,EAAEv3B,GACtB,IAAI+3B,EAAM,CAAC,EACXJ,EAAiBA,GAAkB,CAAC,KAAMC,EAAS,CAAC,GAAIA,EAAS,IAAKA,EAASA,IAC/E,IAAI,IAAII,EAAiB,EAAPF,GAAY3sE,EAAyB,iBAAX6sE,KAAyBL,EAAev+B,QAAQ4+B,GAAUA,EAAUJ,EAASI,GACxHhtE,OAAOitE,oBAAoBD,GAAS77D,SAAQ,SAAS4D,GAAOg4D,EAAIh4D,GAAO,WAAa,OAAO5U,EAAM4U,EAAM,CAAG,IAI3G,OAFAg4D,EAAI,WAAa,WAAa,OAAO5sE,CAAO,EAC5CsrE,EAAoBiB,EAAE13B,EAAI+3B,GACnB/3B,CACR,C,eCxBAy2B,EAAoBiB,EAAI,SAASxsE,EAASgtE,GACzC,IAAI,IAAIn4D,KAAOm4D,EACXzB,EAAoBzqE,EAAEksE,EAAYn4D,KAAS02D,EAAoBzqE,EAAEd,EAAS6U,IAC5E/U,OAAOC,eAAeC,EAAS6U,EAAK,CAAErT,YAAY,EAAMC,IAAKurE,EAAWn4D,IAG3E,C,eCPA02D,EAAoB0B,EAAI,WACvB,GAA0B,kBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOtsE,MAAQ,IAAIusE,SAAS,cAAb,EAChB,CAAE,MAAOrqE,GACR,GAAsB,kBAAX0sB,OAAqB,OAAOA,MACxC,CACA,CAPuB,E,eCAxB+7C,EAAoBzqE,EAAI,SAASmyC,EAAKm6B,GAAQ,OAAOttE,OAAOiC,UAAUC,eAAeC,KAAKgxC,EAAKm6B,EAAO,C,eCCtG7B,EAAoBc,EAAI,SAASrsE,GACX,qBAAXqtE,QAA0BA,OAAOC,aAC1CxtE,OAAOC,eAAeC,EAASqtE,OAAOC,YAAa,CAAErtE,MAAO,WAE7DH,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,GACvD,C,eCNAsrE,EAAoBgC,IAAM,SAAS7B,GAGlC,OAFAA,EAAO8B,MAAQ,GACV9B,EAAO+B,WAAU/B,EAAO+B,SAAW,IACjC/B,CACR,C,eCCA,IAAIgC,EAAkB,CACrB,IAAK,GAaNnC,EAAoBQ,EAAEK,EAAI,SAASuB,GAAW,OAAoC,IAA7BD,EAAgBC,EAAgB,EAGrF,IAAIC,EAAuB,SAASC,EAA4B1oE,GAC/D,IAKIqmE,EAAUmC,EALV3B,EAAW7mE,EAAK,GAChB2oE,EAAc3oE,EAAK,GACnB4oE,EAAU5oE,EAAK,GAGIsP,EAAI,EAC3B,GAAGu3D,EAASzlB,MAAK,SAASvgD,GAAM,OAA+B,IAAxB0nE,EAAgB1nE,EAAW,IAAI,CACrE,IAAIwlE,KAAYsC,EACZvC,EAAoBzqE,EAAEgtE,EAAatC,KACrCD,EAAoBxqE,EAAEyqE,GAAYsC,EAAYtC,IAGhD,GAAGuC,EAAS,IAAIjsE,EAASisE,EAAQxC,EAClC,CAEA,IADGsC,GAA4BA,EAA2B1oE,GACrDsP,EAAIu3D,EAAS9jE,OAAQuM,IACzBk5D,EAAU3B,EAASv3D,GAChB82D,EAAoBzqE,EAAE4sE,EAAiBC,IAAYD,EAAgBC,IACrED,EAAgBC,GAAS,KAE1BD,EAAgBC,GAAW,EAE5B,OAAOpC,EAAoBQ,EAAEjqE,EAC9B,EAEIksE,EAAqBj7B,KAAK,8BAAgCA,KAAK,+BAAiC,GACpGi7B,EAAmB/8D,QAAQ28D,EAAqB3mE,KAAK,KAAM,IAC3D+mE,EAAmB32D,KAAOu2D,EAAqB3mE,KAAK,KAAM+mE,EAAmB32D,KAAKpQ,KAAK+mE,G,IC/CvF,IAAIC,EAAsB1C,EAAoBQ,OAAE7qE,EAAW,CAAC,MAAM,WAAa,OAAOqqE,EAAoB,MAAQ,IAClH0C,EAAsB1C,EAAoBQ,EAAEkC,E","sources":["webpack://okxconnectdemo/../packages/core/src/connect/commands.js","webpack://okxconnectdemo/../packages/core/src/connect/connect.js","webpack://okxconnectdemo/../packages/core/src/connect/connectionManager.js","webpack://okxconnectdemo/../packages/core/src/connect/connectionSplitPackages.js","webpack://okxconnectdemo/../packages/core/src/connect/constants.js","webpack://okxconnectdemo/../packages/core/src/connect/engine.js","webpack://okxconnectdemo/../packages/core/src/connect/index.js","webpack://okxconnectdemo/../packages/core/src/connect/jwt.js","webpack://okxconnectdemo/../packages/core/src/connect/jwtconstants.js","webpack://okxconnectdemo/../packages/core/src/connect/sessionUtils.js","webpack://okxconnectdemo/../packages/core/src/connect/storage.js","webpack://okxconnectdemo/../packages/core/src/connect/storageconstants.js","webpack://okxconnectdemo/../packages/core/src/connect/walletConnectionConstants.js","webpack://okxconnectdemo/../packages/core/src/connect/walletConnectionManager.js","webpack://okxconnectdemo/../packages/core/src/connector/appwallet-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/iconnector.js","webpack://okxconnectdemo/../packages/core/src/connector/index.js","webpack://okxconnectdemo/../packages/core/src/connector/inject-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/okxwallet-inject-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/tgwallet-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/ws-connector.js","webpack://okxconnectdemo/../packages/core/src/crypto/crypto.js","webpack://okxconnectdemo/../packages/core/src/index.js","webpack://okxconnectdemo/../packages/core/src/inject/InjectUtils.js","webpack://okxconnectdemo/../packages/core/src/inject/index.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/AptosProvider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/SolProvider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/TONProvider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/eip155Provider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/index.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/sui-provider.js","webpack://okxconnectdemo/../packages/core/src/protocol/chains.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/engine.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/json-rpc.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/connect-event.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/connect-wallet.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/wallet-info.js","webpack://okxconnectdemo/../packages/core/src/protocol/constants.js","webpack://okxconnectdemo/../packages/core/src/protocol/error/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/error/okx-connect.error.js","webpack://okxconnectdemo/../packages/core/src/protocol/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/misc.js","webpack://okxconnectdemo/../packages/core/src/utils/call-for-success.js","webpack://okxconnectdemo/../packages/core/src/utils/index.js","webpack://okxconnectdemo/../packages/core/src/utils/log.js","webpack://okxconnectdemo/../packages/core/src/utils/media.js","webpack://okxconnectdemo/../packages/core/src/utils/report.js","webpack://okxconnectdemo/../packages/core/src/utils/reportconstants.js","webpack://okxconnectdemo/../packages/core/src/utils/request.js","webpack://okxconnectdemo/../packages/core/src/utils/safejson.js","webpack://okxconnectdemo/../packages/core/src/utils/stringUtils.js","webpack://okxconnectdemo/../packages/core/src/utils/tma-api.js","webpack://okxconnectdemo/../packages/core/src/utils/url.js","webpack://okxconnectdemo/../packages/core/src/utils/utils.js","webpack://okxconnectdemo/../packages/core/src/utils/web-api.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXBtcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXCosmosProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXStarknetProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTonProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTronProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXUniversalProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/sign-client/client.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/ConnectMethodUtils.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/namespaces.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/events.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/values.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/aptos.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/btc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/cosmos.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/eip155.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcConnection.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/solana.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/starknet.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/sui.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/ton.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/tron.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/misc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/providers.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/globals.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/misc.js","webpack://okxconnectdemo/./src/App.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue?1b44","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue?e4fb","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue?aa83","webpack://okxconnectdemo/./src/components/StarknetTransactionPanel.vue","webpack://okxconnectdemo/./src/components/StarknetTransactionPanel.vue?1a06","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue?089a","webpack://okxconnectdemo/./src/App.vue?7ccd","webpack://okxconnectdemo/./src/main.js","webpack://okxconnectdemo/webpack/bootstrap","webpack://okxconnectdemo/webpack/runtime/amd options","webpack://okxconnectdemo/webpack/runtime/chunk loaded","webpack://okxconnectdemo/webpack/runtime/compat get default export","webpack://okxconnectdemo/webpack/runtime/create fake namespace object","webpack://okxconnectdemo/webpack/runtime/define property getters","webpack://okxconnectdemo/webpack/runtime/global","webpack://okxconnectdemo/webpack/runtime/hasOwnProperty shorthand","webpack://okxconnectdemo/webpack/runtime/make namespace object","webpack://okxconnectdemo/webpack/runtime/node module decorator","webpack://okxconnectdemo/webpack/runtime/jsonp chunk loading","webpack://okxconnectdemo/webpack/startup"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_METHOD_BATCH_FETCHMSG = exports.CONNECT_METHOD_FETCHMSG = exports.CONNECT_METHOD_RECEIVE = exports.CONNECT_METHOD_UNSUB = exports.CONNECT_METHOD_SUB = exports.CONNECT_METHOD_PUBLISH = exports.CONNECT_METHOD_LOGIN = exports.CONNECT_METHOD_PUSH = void 0;\n// --------------- ws methods -------------\nexports.CONNECT_METHOD_PUSH = \"push\";\nexports.CONNECT_METHOD_LOGIN = \"login\";\nexports.CONNECT_METHOD_PUBLISH = \"publish\";\nexports.CONNECT_METHOD_SUB = \"subscribe\";\nexports.CONNECT_METHOD_UNSUB = \"unsubscribe\";\nexports.CONNECT_METHOD_RECEIVE = \"receive\";\nexports.CONNECT_METHOD_FETCHMSG = \"fetchMessages\";\nexports.CONNECT_METHOD_BATCH_FETCHMSG = \"batchFetchMessages\";\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXWalletConnector = void 0;\nconst constants_1 = require(\"./constants\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils\");\nconst utils_2 = require(\"../utils/utils\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst log = __importStar(require(\"../utils/log\"));\nconst protocol_1 = require(\"../protocol\");\nconst report_1 = require(\"../utils/report\");\nconst WS = (0, utils_2.resolveWebSocketImplementation)();\nclass OKXWalletConnector {\n    constructor(url) {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.state = constants_1.ConnectorState.InitState;\n        this.selectedUrlIndex = 0;\n        // reconnect\n        this.retryCount = 0;\n        // default timeout limit: 8 sec\n        this.timeOutLimit = 8000;\n        if (!(0, utils_2.checkWSUrl)(url)) {\n            throw new Error(`CONNECTOR: invalid url ${url}`);\n        }\n        this.url = url;\n        this.heartbeatTimer = null;\n        this.connectionTimeoutTimer = null;\n        this.connectURLStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY + storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n    }\n    get connecting() {\n        return this.state == constants_1.ConnectorState.Connecting;\n    }\n    // ------------------------------------------------------\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        log.logDebug('get received data');\n        log.logDebug(e);\n        if (typeof e.data === \"string\") {\n            let rsp = e.data;\n            if (rsp === \"pong\") {\n                log.logDebug(`CONNECT: receive pong ${Date.now().toString()}`);\n                return;\n            }\n        }\n        this.events.emit(\"payload\", e.data);\n    }\n    onClose(event) {\n        var _a;\n        log.logDebug('socket get closed: ', (_a = this.socket) === null || _a === void 0 ? void 0 : _a.url, event.code);\n        this.socket = undefined;\n        this.events.emit(\"close\", event);\n    }\n    onError(id, e) {\n        const payload = { id: id, msg: e.toString() };\n        this.events.emit(\"payload\", payload);\n    }\n    onopen(socket) {\n        socket.onmessage = (event) => this.onPayload(event);\n        socket.onclose = (event) => this.onClose(event);\n        this.socket = socket;\n        this.state = constants_1.ConnectorState.Connected;\n        this.events.emit(\"open\");\n    }\n    // ------------------------------------------------------\n    emitError(errorEvent) {\n        this.events.emit(\"fail\", errorEvent);\n    }\n    // ------------------------------------------------------\n    heartbeat() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.heartbeatTimer) {\n                clearTimeout(this.heartbeatTimer);\n            }\n            if (this.state != constants_1.ConnectorState.Connected && this.state != constants_1.ConnectorState.OnError) {\n                log.logDebug('heart beat close');\n                return;\n            }\n            if (!this.socket) {\n                log.logDebug('socket not exist');\n                if (this.state == constants_1.ConnectorState.Connected || this.state == constants_1.ConnectorState.OnError) {\n                    log.logDebug('socket reconnect by heartbeat');\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                        this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n                    }\n                }\n                return;\n            }\n            if (this.socket.readyState !== WebSocket.OPEN) {\n                log.logDebug('socket not ready');\n                if (this.state == constants_1.ConnectorState.Connected || this.state == constants_1.ConnectorState.OnError) {\n                    log.logDebug('socket reconnect by heartbeat with state', this.state, this.socket.readyState);\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                        this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n                    }\n                }\n                return;\n            }\n            log.logDebug(`send ping heart beat: ${Date.now().toString()}, ${this.socket}`);\n            this.socket.send(\"ping\");\n            this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n        });\n    }\n    registOpen(url = this.url, inRetry = false) {\n        if (!(0, utils_2.checkWSUrl)(url)) {\n            throw new Error(`CONNECTOR: invalid url ${url}`);\n        }\n        this.url = url;\n        if (!inRetry) {\n            log.logDebug('Connection connect:', this.url, new Date().toUTCString());\n        }\n        this.state = constants_1.ConnectorState.Connecting;\n        const origin = new URLSearchParams(url).get(\"origin\");\n        return new Promise((resolve, reject) => {\n            const socket = new WS(url, []);\n            log.logDebug('Connection connect Begin:', this.url, new Date().toUTCString());\n            this.startTimeOutTimer(socket);\n            if ((0, utils_2.hasBuiltInWebSocket)()) {\n                log.logDebug('Add socket error handler');\n                socket.onerror = () => {\n                    reject(new Error('socket error'));\n                    socket.close();\n                };\n            }\n            else {\n                log.logDebug('Add socket error handler');\n                socket.on(\"error\", () => {\n                    reject(new Error('socket error'));\n                    socket.close();\n                });\n            }\n            socket.onopen = () => {\n                log.logDebug('socket opened');\n                this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.FINISHED);\n                this.onopen(socket);\n                this.heartbeat();\n                resolve(socket);\n            };\n        });\n    }\n    checkMaxRetry() {\n        log.logDebug('current retry count:', this.retryCount, 'of', constants_1.OKXCONNECTOR_WS_URL_LIST.length);\n        return this.retryCount > (constants_1.OKXCONNECTOR_WS_URL_LIST.length * 3);\n    }\n    connectionTryNext() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.checkMaxRetry()) {\n                //TODO: mark descent\n                this.retryCount += 1;\n                let nextUrl = this.getNextSelectUrl();\n                log.logDebug('Connection retry:', nextUrl, new Date().toUTCString());\n                return this.registOpen(nextUrl, true);\n            }\n            else {\n                log.logDebug('Max Connection retry ', this.retryCount, new Date().toUTCString());\n            }\n        });\n    }\n    startTimeOutTimer(socket) {\n        if (this.connectionTimeoutTimer) {\n            this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.CANCELED);\n        }\n        this.pendingSocket = socket;\n        this.connectionTimeoutTimer = setTimeout(() => {\n            if (this.pendingSocket) {\n                this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.TIME_OUT);\n            }\n        }, this.timeOutLimit);\n    }\n    resetTimeOutTimer(code) {\n        var _a;\n        // 1. cancel connecting pending sockets\n        if (code == constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.TIME_OUT) {\n            // 2. remove timer\n            clearTimeout(this.connectionTimeoutTimer);\n            (_a = this.pendingSocket) === null || _a === void 0 ? void 0 : _a.close();\n            this.pendingSocket = undefined;\n            log.reportEvent(report_1.OKXReportType.LOG, 'timeout', this.retryCount.toString());\n            throw new Error('socket timeout');\n        }\n        else {\n            this.pendingSocket = undefined;\n            // 2. remove timer\n            clearTimeout(this.connectionTimeoutTimer);\n        }\n    }\n    cacheSuccessUrlSelect() {\n        this.connectURLStorage.saveContent(this.selectedUrlIndex.toString(), storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n    }\n    // private getSuccessUrlSelect(): string {\n    //     let selectIndex = this.connectURLStorage.getItem(OKXCONNECTOR_CACHE_KEY)?.content\n    //     let index = 0\n    //     if (selectIndex) {\n    //         index = Number(selectIndex)\n    //     }\n    //     this.selectedUrlIndex = index\n    //     return OKXCONNECTOR_WS_URL_LIST[index]\n    // }\n    getNextSelectUrl() {\n        this.selectedUrlIndex += 1;\n        this.selectedUrlIndex = this.selectedUrlIndex % constants_1.OKXCONNECTOR_WS_URL_LIST.length;\n        return constants_1.OKXCONNECTOR_WS_URL_LIST[this.selectedUrlIndex];\n    }\n    // ------------------------------------------------------\n    onVisibleChanged() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (document.visibilityState === 'visible') {\n                // check and restore\n                log.logDebug(`get changed ${this.state}, ${this.socket}`);\n                if (this.state == constants_1.ConnectorState.Connected && typeof this.socket === \"undefined\") {\n                    log.logDebug('CONNECTION need reopen');\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                    }\n                    return;\n                }\n            }\n        });\n    }\n    tryRegistOpen() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (this.connecting) {\n                log.logDebug('tryRegistOpen => connecting state');\n                return new Promise((resolve, reject) => {\n                    this.events.once('fail', (e) => {\n                        log.logDebug('tryRegistOpen => connecting fail listener', e);\n                        return reject(e);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.socket == \"undefined\") {\n                            return reject(new Error(\"Connect lost\"));\n                        }\n                        return resolve(this.socket);\n                    });\n                });\n            }\n            log.logDebug('tryRegistOpen => try registOpen until retry limit is hit');\n            let inRetry = false;\n            while (!this.checkMaxRetry() && !this.socket) {\n                try {\n                    log.logDebug('tryRegistOpen => call registOpen, try count:', this.retryCount, inRetry);\n                    yield this.registOpen(url, inRetry);\n                }\n                catch (err) {\n                    log.logDebug('tryRegistOpen => registOpen failed', err);\n                    this.retryCount += 1;\n                    url = this.getNextSelectUrl();\n                    inRetry = true;\n                }\n            }\n            log.logDebug('tryRegistOpen => exit while loop', this.retryCount, this.socket);\n            if (!this.socket && this.checkMaxRetry()) {\n                log.logDebug('tryRegistOpen => failed to open a socket', this.retryCount, this.socket);\n                this.retryCount = 0;\n                this.state = constants_1.ConnectorState.OnError;\n                this.emitError(new Error('tryRegistOpen failed'));\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CONNECTION_ERROR, \"Failed to connect\");\n            }\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.tryRegistOpen();\n                // listener for reconnect\n                document.removeEventListener('visibilitychange', this.onVisibleChanged.bind(this));\n                document.addEventListener('visibilitychange', this.onVisibleChanged.bind(this));\n            }\n            catch (e) {\n                log.logDebug('connect => failed to connect', e);\n                throw e;\n            }\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.state = constants_1.ConnectorState.Disconnected;\n            return new Promise((resolve, reject) => {\n                if (typeof this.socket === \"undefined\") {\n                    // reject(new Error(\"CONNECTION closed\"))\n                    resolve();\n                    return;\n                }\n                this.socket.onclose = (event) => {\n                    this.onClose(event);\n                    resolve();\n                };\n                this.socket.close();\n                if (this.heartbeatTimer) {\n                    clearTimeout(this.heartbeatTimer);\n                }\n            });\n        });\n    }\n    currentStatus() {\n        return {\n            state: this.state,\n            url: this.url\n        };\n    }\n    // event will be jsonstr\n    /// @params Promise\n    /// @params success/failed callback\n    addListener(event, decrypt, success, failed, splitCheckComplete) {\n        if (this.listenPayloadHandler) {\n            this.events.removeListener(\"payload\", this.listenPayloadHandler);\n        }\n        this.listenPayloadHandler = (e) => __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            log.logDebug(`<<< get payload ${e}`);\n            let parsedEvent = (0, utils_1.safeJsonParse)(e);\n            // parse the data to chose success or failed\n            if (parsedEvent.params && parsedEvent.params.data) {\n                let rawMsg = (_a = parsedEvent.params.data) === null || _a === void 0 ? void 0 : _a.message;\n                let skipMsg = false;\n                if (rawMsg) {\n                    // 在这里增加检测流程，如果当前包是“分包”，而且没有finalMessage则不继续触发failed/success结果\n                    if (splitCheckComplete) {\n                        let checkResult = yield splitCheckComplete(parsedEvent.params.data);\n                        skipMsg = checkResult.isSplitPackage && (!checkResult.finalMessage);\n                        if (checkResult.isSplitPackage) {\n                            if (checkResult.finalMessage && checkResult.finalMessage.length > 0) {\n                                log.logDebug('CONNECT: update raw msg content');\n                                rawMsg = checkResult.finalMessage;\n                            }\n                            else {\n                                log.logDebug('CONNECT: skip raw msg content');\n                                skipMsg = true;\n                            }\n                        }\n                    }\n                }\n                if (!skipMsg) {\n                    try {\n                        let msg = decrypt(rawMsg);\n                        if (msg === undefined) {\n                            log.logDebug(`CONNECT: decrypt undefined`);\n                            failed(event, 'Decrypt undefined');\n                        }\n                        else {\n                            success(event, msg);\n                        }\n                    }\n                    catch (e) {\n                        log.logDebug(`CONNECT: decrypt failed: ${e}`);\n                        failed(event, e.message);\n                    }\n                }\n            }\n        });\n        this.events.on(\"payload\", this.listenPayloadHandler);\n        if (this.failHandler) {\n            this.events.removeListener(\"fail\", this.failHandler);\n        }\n        this.failHandler = (e) => {\n            if (e) {\n                log.logDebug(`CONNECT failed: ${e}`);\n                failed(event, e.message);\n            }\n            else {\n                failed(event, \"Unkonow error\");\n            }\n        };\n        this.events.on(\"fail\", this.failHandler);\n    }\n    addPackageParse(callback) {\n        if (this.payloadHandler) {\n            this.events.removeListener(\"payload\", this.payloadHandler);\n        }\n        this.payloadHandler = (e) => __awaiter(this, void 0, void 0, function* () {\n            // parse the data to chose success or failed\n            log.logDebug(`CONNECTION @[${new Date().toUTCString()}] <<<< received e:${e}`);\n            let param = (0, utils_1.safeJsonParse)(e);\n            yield callback(param);\n        });\n        this.events.on(\"payload\", this.payloadHandler);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    send(doLogin, payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (typeof this.socket === \"undefined\") {\n                    log.logDebug(`>>> send payload undefined ${payload}`);\n                    // this.socket = await this.registOpen();\n                    yield doLogin();\n                }\n                log.logDebug(`CONNECTION @[${new Date().toUTCString()}]>>> send payload ${(0, utils_1.safeJsonStringify)(payload)}`);\n                if (this.socket) {\n                    this.socket.send((0, utils_1.safeJsonStringify)(payload));\n                }\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    getMsgPayloadFromHistory(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof msg === \"undefined\")\n                return;\n            let tmpMsg = {\n                params: {\n                    data: msg\n                }\n            };\n            let jsonstr = (0, utils_1.safeJsonStringify)(msg);\n            log.logDebug('get received data from history');\n            log.logDebug(jsonstr);\n            jsonstr = (0, utils_1.safeJsonStringify)(tmpMsg);\n            this.events.emit(\"payload\", jsonstr);\n        });\n    }\n    onOpen(callback) {\n        if (this.openHandler) {\n            this.events.removeListener(\"open\", this.openHandler);\n        }\n        this.openHandler = () => __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> ws opened: `);\n            yield callback();\n        });\n        this.events.on(\"open\", this.openHandler);\n        this.cacheSuccessUrlSelect();\n    }\n}\nexports.OKXWalletConnector = OKXWalletConnector;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionManager = void 0;\nconst connect_1 = require(\"./connect\");\nconst commands_1 = require(\"./commands\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst jwtconstants_1 = require(\"./jwtconstants\");\nconst constants_1 = require(\"./constants\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils/utils\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst jwt_1 = require(\"./jwt\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst report_1 = require(\"../utils/report\");\nconst url_1 = require(\"../utils/url\");\nconst connectionSplitPackages_1 = require(\"./connectionSplitPackages\");\nclass ConnectionManager {\n    constructor(appname = undefined) {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.splitManager = new connectionSplitPackages_1.ConnectionSplitPackages('dapp');\n        // local storage\n        this.connectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY_DAPP + appname, storageconstants_1.OKXCONNECTOR_CACHE_KEY_DAPP);\n        this.tonsdkConnectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_TON_KEY + appname, storageconstants_1.OKXCONNECTOR_TON_KEY);\n        this.crypto = new crypto_1.SessionCrypto();\n        let inTMA = (0, url_1.isInTMA)();\n        (0, log_1.logDebug)('do init:', inTMA);\n        log.reportLog('connection manager do init');\n        if (inTMA) {\n            // recovery from cache\n            const keyPairInfo = this.getCachedCryptoKeyPair();\n            (0, log_1.logDebug)('use same pk:', keyPairInfo);\n            this.crypto = new crypto_1.SessionCrypto(keyPairInfo);\n        }\n        this.jwtKeyPair = this.getCachedJWTKeyPair();\n        this.saveJWTKeyPair(this.jwtKeyPair);\n        // wss connection\n        this.connector = new connect_1.OKXWalletConnector(constants_1.OKXCONNECTOR_WS_URL_1);\n        this.packageId = Date.now();\n        // connection state\n        this.connectedWalletPK = '';\n        this.currentTopic = '';\n        log.logDebug(`this.connectedWalletPK  constructor   ${this.connectedWalletPK}`);\n    }\n    refreshPackageId() {\n        let nowDate = Date.now();\n        if (nowDate == this.packageId) {\n            this.packageId = nowDate + 1;\n        }\n        this.packageId = nowDate;\n    }\n    saveCryptoKeyPair(keyPair) {\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(keyPair);\n        // encrypt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_CRYPTO_KEY);\n    }\n    getCachedCryptoKeyPair() {\n        // decrypt kp\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_CRYPTO_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            log.logDebug('get cached crypto key:');\n            log.logDebug(content);\n            let keyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            return keyPairInfo;\n        }\n        else {\n            this.connectStorage.clearCache();\n        }\n        return null;\n    }\n    saveJWTKeyPair(keyPair) {\n        var strkeyPair = {\n            publicKey: (0, utils_1.toHexString)(keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(keyPair.secretKey)\n        };\n        log.logDebug('save jwt kp');\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(strkeyPair);\n        log.logDebug(cacheInfo);\n        // encrypt jwt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_JWT_KEY);\n    }\n    getCachedJWTKeyPair() {\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            // TODO: decrypt jwt kp\n            log.logDebug('get cached jwt kp:');\n            log.logDebug(content);\n            let strKeyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            log.logDebug('save jwt kp');\n            log.logDebug(strKeyPairInfo);\n            var keyPair = {\n                publicKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.publicKey),\n                secretKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.secretKey)\n            };\n            return keyPair;\n        }\n        else {\n            return (0, jwt_1.generateKeyPair)();\n        }\n    }\n    isWalletPKReady() {\n        log.logDebug(`isWalletPKReady  ===> ${this.connectedWalletPK}`);\n        return this.connectedWalletPK.length > 0;\n    }\n    makeJWT(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, jwt_1.signJWT)(topic, jwtconstants_1.OKXCONNECTOR_JWT_SIDE, jwtconstants_1.OKXCONNECTOR_JWT_TTL, // 24h\n            this.jwtKeyPair);\n        });\n    }\n    parsePackage(input_1) {\n        return __awaiter(this, arguments, void 0, function* (input, ignoreACK = false) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o;\n            this.events.emit(input.id, input);\n            // send back ACK\n            if (!ignoreACK) {\n                yield this.sendACK(input.id, true);\n                let topic = (_a = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE)) === null || _a === void 0 ? void 0 : _a.content;\n                if (topic) {\n                    let inputObj = input;\n                    if ((_c = (_b = inputObj.params) === null || _b === void 0 ? void 0 : _b.data) === null || _c === void 0 ? void 0 : _c.messageId) {\n                        // change into split check receive\n                        let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload((_e = (_d = inputObj.params) === null || _d === void 0 ? void 0 : _d.data) === null || _e === void 0 ? void 0 : _e.message);\n                        if (msgPlayloadObject) {\n                            let msgObject = {\n                                topicId: (_g = (_f = inputObj.params) === null || _f === void 0 ? void 0 : _f.data) === null || _g === void 0 ? void 0 : _g.topic,\n                                messageId: (_j = (_h = inputObj.params) === null || _h === void 0 ? void 0 : _h.data) === null || _j === void 0 ? void 0 : _j.messageId,\n                                messageObject: msgPlayloadObject,\n                                publishedAt: (_l = (_k = inputObj.params) === null || _k === void 0 ? void 0 : _k.data) === null || _l === void 0 ? void 0 : _l.publishedAt,\n                            };\n                            let checkResult = yield this.splitManager.onReceivedPackageCheck(msgObject);\n                            if (checkResult.completeMessageIdList) {\n                                checkResult.completeMessageIdList.forEach((msgId) => __awaiter(this, void 0, void 0, function* () {\n                                    // 发送receive\n                                    this.refreshPackageId();\n                                    yield this.sendReceive(this.packageId.toString(), msgId, topic);\n                                }));\n                            }\n                        }\n                        else {\n                            this.refreshPackageId();\n                            yield this.sendReceive(this.packageId.toString(), (_o = (_m = inputObj.params) === null || _m === void 0 ? void 0 : _m.data) === null || _o === void 0 ? void 0 : _o.messageId, topic);\n                        }\n                    }\n                }\n            }\n        });\n    }\n    restoreConnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.reportLog('connection manager restore connection');\n            log.logDebug(`connectionManager  restoreConenct   ${topic}`);\n            if ((typeof topic !== 'string') || topic.length === 0) {\n                throw new Error('CONNECTION: invalid topic');\n            }\n            log.logDebug(`connectionManager  restoreConenct   disconnect`);\n            yield this.disconnect(true);\n            this.connectStorage.saveContent(topic, storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`connectionManager  restoreConenct   conect`);\n            yield this.connect(true);\n        });\n    }\n    getConnectInfo() {\n        var topic = (0, utils_1.generateTopic)();\n        log.logDebug(`generate topic token: ${topic}`);\n        log.reportLog('connection manager generate connection info');\n        this.currentTopic = topic;\n        const info = {\n            channelId: topic,\n            clientId: this.crypto.stringifyKeypair().publicKey,\n        };\n        return info;\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            this.timeLog = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---enter->\", this.timeLog);\n            log.reportLog('connection manager begin connect');\n            let lastConnectId = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            //1. generate topic & jwt\n            var topic = this.currentTopic;\n            log.logDebug(`generate topic token: ${topic}`);\n            // crypto keypair\n            if (fromRestore) {\n                if (typeof lastConnectId !== 'undefined' && lastConnectId !== null) {\n                    log.logDebug(`read last connect id: ${lastConnectId}`);\n                    topic = lastConnectId.content;\n                }\n                var cachedSenderPublicKey = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                if (cachedSenderPublicKey) {\n                    this.connectedWalletPK = cachedSenderPublicKey.content;\n                    (0, log_1.logDebug)(`connectionManager connect() this.connectedWalletPK : ${this.connectedWalletPK}`);\n                }\n                log.reportLog('connection manager do restore connection');\n            }\n            if (fromRestore) {\n                // recovery from cache\n                const keyPairInfo = this.getCachedCryptoKeyPair();\n                if (keyPairInfo) {\n                    this.crypto = new crypto_1.SessionCrypto(keyPairInfo);\n                }\n            }\n            log.logDebug(`use crypto client id: ${this.crypto.stringifyKeypair().publicKey}`);\n            // cache topic\n            this.connectStorage.saveContent(topic, storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            var jwtToken = yield this.makeJWT(topic);\n            log.logDebug(`generate jwt token: ${jwtToken}`);\n            this.connectStorage.saveContent(jwtToken, 'jwt');\n            return new Promise((resolve, reject) => {\n                // 1. when websocket opened\n                this.connector.onOpen(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug(`1. connector on open`);\n                    log.reportLog('1. connect ws open');\n                    const timeOne = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---open->\", timeOne - this.timeLog);\n                    //2. send jwt to login\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when login');\n                            log.reportLog('2. connect login failed');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // throw error\n                            reject(error);\n                        }\n                        //3. send subscribe\n                        this.refreshPackageId();\n                        this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                            // ack\n                            if (rsp && rsp.error) {\n                                log.logError('failed when subscribe');\n                                log.reportLog('3. connect subscribe failed');\n                                yield this.connector.disconnect();\n                                var error = new Error();\n                                error.message = rsp.error.message;\n                                error.name = rsp.error.code.toString();\n                                // throw error\n                                reject(error);\n                            }\n                            this.refreshPackageId();\n                            log.logDebug(`4. subscribe callback then send fetch: ${this.packageId}`);\n                            log.reportLog('4. subscribe callback then send fetch');\n                            const timeF = new Date().getTime();\n                            (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n                            // 4. fetch messages\n                            yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                            // 5. split init\n                            log.logDebug(`5. splitmanager init: ${this.packageId}`);\n                            log.reportLog('5. splitmanager init');\n                            yield this.splitManager.init(this.sendRaw.bind(this));\n                            resolve();\n                        }));\n                        log.logDebug(`3. login callback then send subscribe: ${this.packageId}`);\n                        log.reportLog('3. connect subscribe failed');\n                        const timeTh = new Date().getTime();\n                        (0, log_1.logDebug)(\"ConnectTime---login callback->\", timeTh - this.timeLog);\n                        yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                            log.logDebug('CONNECT: reconnect before send');\n                            yield this.connector.connect()\n                                .catch((err) => {\n                                (0, log_1.logDebug)('ConnectionManager connect error', err);\n                                reject(err);\n                            });\n                        }), {\n                            id: this.packageId.toString(),\n                            jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                            method: commands_1.CONNECT_METHOD_SUB,\n                            params: {\n                                topic: topic\n                            }\n                        });\n                    }));\n                    log.logDebug(`2. login called`);\n                    log.reportLog('2. connection manager connect call login');\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        yield this.connector.connect()\n                            .catch((err) => {\n                            (0, log_1.logDebug)('ConnectionManager connect error', err);\n                            reject(err);\n                        });\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_LOGIN,\n                        params: {\n                            token: jwtToken\n                        }\n                    });\n                    // 4. listen when dapp back to front, receive wallet public key\n                    this.connector.addPackageParse((event) => {\n                        var _a;\n                        log.logDebug(`connect: parse package`);\n                        log.logDebug(event);\n                        if (!(\"params\" in event) || !(\"data\" in event[\"params\"])) {\n                            this.parsePackage(event, true);\n                            return;\n                        }\n                        let rawMsg = (_a = event.params.data) === null || _a === void 0 ? void 0 : _a.message;\n                        if (typeof rawMsg !== 'undefined') {\n                            rawMsg = rawMsg.replace(/'/g, '\"');\n                            let parsedMessage = (0, safejson_1.safeJsonParse)(rawMsg);\n                            if (typeof parsedMessage !== 'string' && \"clientId\" in parsedMessage && parsedMessage.clientId && parsedMessage.clientId.length > 0) {\n                                this.connectedWalletPK = parsedMessage.clientId;\n                                log.logDebug(`this.connectedWalletPK  addPackageParse   ${this.connectedWalletPK}`);\n                                // exchange sender public key\n                                // cache wallet public key\n                                this.connectStorage.saveContent(this.connectedWalletPK, storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                                // cache crypto keypair\n                                this.saveCryptoKeyPair(this.crypto.stringifyKeypair());\n                            }\n                        }\n                        // ignore receive echo\n                        this.parsePackage(event, event.method === commands_1.CONNECT_METHOD_RECEIVE);\n                    });\n                }));\n                this.connector.connect().catch((err) => {\n                    (0, log_1.logDebug)('ConnectionManager connect error', err);\n                    reject(err);\n                });\n            });\n        });\n    }\n    disconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            yield this.connector.disconnect();\n            log.reportLog('connect disconnect');\n            //clean cached topic\n            //如果是恢复连接，就不清理解密public key\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            if (!fromRestore) {\n                this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                this.connectedWalletPK = '';\n                (0, log_1.logDebug)(`connectionManager disconnect() this.connectedWalletPK : ${this.connectedWalletPK}`);\n            }\n        });\n    }\n    updateProtocolVersion(topic, protocolVersion) {\n        this.splitManager.updateTopicSenderVersion(topic, protocolVersion);\n    }\n    addListener(event, success, fail) {\n        this.connector.addListener((0, safejson_1.safeJsonStringify)(event), (rawMsg) => {\n            rawMsg = rawMsg.replace(/'/g, '\"');\n            log.logDebug(`addListener ===> ${rawMsg}`);\n            if (typeof rawMsg !== 'undefined') {\n                var msgObj = (0, safejson_1.safeJsonParse)(rawMsg);\n                var msg = msgObj.message;\n                let result;\n                if (msg.trimStart().startsWith('{')) {\n                    result = msg;\n                }\n                else {\n                    if (msgObj.clientId && msgObj.clientId.length > 0) {\n                        this.connectedWalletPK = msgObj.clientId;\n                        this.connectStorage.saveContent(this.connectedWalletPK, storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                        log.logDebug(`this.connectedWalletPK  addListener   ${this.connectedWalletPK}`);\n                        log.logDebug(`this.cryptoKey  addListener   ${(0, utils_1.toHexString)(this.crypto.keyPair.publicKey)}`);\n                        // cache crypto keypair\n                        this.saveCryptoKeyPair(this.crypto.stringifyKeypair());\n                    }\n                    result = this.crypto.decrypt(msg, this.connectedWalletPK);\n                }\n                log.logDebug(`addListener ===> ${result}`);\n                return result;\n            }\n            return undefined;\n        }, success, fail, (inputDataObj) => {\n            // 判断获取是否是分包，如果是则返回合包结果，如果不是则继续\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(inputDataObj.message);\n                if (msgPlayloadObject) {\n                    let msgObject = {\n                        topicId: inputDataObj.topic,\n                        messageId: inputDataObj === null || inputDataObj === void 0 ? void 0 : inputDataObj.messageId,\n                        messageObject: msgPlayloadObject,\n                        publishedAt: inputDataObj === null || inputDataObj === void 0 ? void 0 : inputDataObj.publishedAt,\n                    };\n                    let msgResult = yield this.splitManager.onReceivedPackageCheck(msgObject);\n                    resolve(msgResult);\n                }\n                else {\n                    resolve({\n                        isSplitPackage: false,\n                    });\n                }\n            }));\n        });\n    }\n    sendRaw(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`message send =====> ${msg}`);\n            log.reportLog('connect send raw msg');\n            let message = msg;\n            log.logDebug(`message send =====encrypt message.length>>>> ${message.length}`);\n            // only one topic\n            let topic = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`message send =====topic>>>> ${topic === null || topic === void 0 ? void 0 : topic.content}`);\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                method: commands_1.CONNECT_METHOD_PUBLISH,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                params: {\n                    message: {\n                        topic: topic === null || topic === void 0 ? void 0 : topic.content,\n                        message: message,\n                        ttl: constants_1.OKXCONNECTOR_MESSAGE_TTL\n                    }\n                } // crypted\n            };\n            this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                // ack\n                if (rsp && rsp.error) {\n                    log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                }\n                else if (rsp && !rsp.error) {\n                    log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                }\n            }));\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n            return this.packageId;\n        });\n    }\n    sendEncryptedMsg(topic_1, encryptedMsg_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, encryptedMsg, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL) {\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                method: commands_1.CONNECT_METHOD_PUBLISH,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                params: {\n                    message: {\n                        topic: topic,\n                        message: encryptedMsg,\n                        ttl: ttl\n                    }\n                } // crypted\n            };\n            this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                // ack\n                if (rsp && rsp.error) {\n                    log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                }\n                else if (rsp && !rsp.error) {\n                    log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                }\n            }));\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    send(msg_1) {\n        return __awaiter(this, arguments, void 0, function* (msg, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL) {\n            // make send msg payload\n            log.logDebug(`message send =====> ${msg}`);\n            log.reportLog('connect send msg');\n            if (!this.isWalletPKReady()) {\n                // channel not ready\n                throw new Error('connection not finish');\n            }\n            let message = this.crypto.encrypt(msg, this.connectedWalletPK);\n            log.logDebug(`message send =====encrypt message.length>>>> ${message.length}`);\n            log.reportEvent(report_1.OKXReportType.LOG, 'msg_size', message.length.toString());\n            // only one topic\n            let topic = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`message send =====topic>>>> ${topic === null || topic === void 0 ? void 0 : topic.content}`);\n            // before send message check split\n            yield this.splitManager.sendSplitPackages(topic === null || topic === void 0 ? void 0 : topic.content, message, this.sendEncryptedMsg.bind(this), this.sendRaw.bind(this));\n            // await this.sendEncryptedMsg(topic?.content, message, ttl)\n            // this.refreshPackageId()\n            // const payload : ConnectPayloadReq = {\n            //    id : this.packageId.toString(),\n            //    method: CONNECT_METHOD_PUBLISH,\n            //    jsonrpc: CONNECT_JSONRPC_VER,\n            //    params: {\n            //       message: {\n            //          topic: topic?.content,\n            //          message: message,\n            //          ttl: ttl\n            //       }\n            //    } // crypted\n            // }\n            // this.events.once(this.packageId.toString(), async (rsp:ConnectPayloadRsp)=>{\n            //    // ack\n            //    if (rsp && rsp.error) {\n            //       log.logError(`@${new Date().toUTCString()} >>> failed when send msg`)\n            //    } else if ( rsp && !rsp.error) {\n            //       log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`)\n            //    }\n            // })\n            // await this.connector.send(async ()=>{\n            //    log.logDebug('CONNECT: reconnect before send')\n            //    return await this.connector.connect();\n            // }, payload)\n            return this.packageId;\n        });\n    }\n    sendACK(msgId_1, success_1) {\n        return __awaiter(this, arguments, void 0, function* (msgId, success, reason = undefined) {\n            if (success === true) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    result: true\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n            else if (reason) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    error: {\n                        code: reason.code, //int\n                        message: reason.message\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    // send receive\n    sendReceive(msgId, messageId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECEIVE,\n                params: {\n                    data: {\n                        messageId: messageId,\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    // send receive\n    // 1. fetch all \n    // 2. send back receive\n    // 3. check has more, if so, repeat from 1st step\n    sendFetchAndConsumeMessages(msgId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(msgId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic == topic) {\n                                let messageId = msg.messageId;\n                                log.reportLog('5. get fetch result');\n                                // fetch result receive control\n                                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(msg.message);\n                                if (msgPlayloadObject) {\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                    log.logDebug('skip receive');\n                                }\n                                else {\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                    // send receive command to relay server\n                                    this.refreshPackageId();\n                                    yield this.sendReceive(this.packageId.toString(), messageId, topic);\n                                }\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            log.reportLog('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_FETCHMSG,\n                params: {\n                    data: {\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    cleanCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.reportLog('connection cache clean called');\n            this.connectStorage.clearCache();\n        });\n    }\n    saveSessionContent(key, data) {\n        if (!data) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(data);\n        this.connectStorage.encryptStoreMsg(jsonData, storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n    }\n    getSessionContent(key) {\n        let jsonStr = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        if (jsonStr) {\n            let object = (0, safejson_1.safeJsonParse)(jsonStr);\n            return object;\n        }\n        return undefined;\n    }\n    getCurrentConnectionReady() {\n        return this.isWalletPKReady();\n    }\n}\nexports.ConnectionManager = ConnectionManager;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionSplitPackages = void 0;\nconst storageconstants_1 = require(\"./storageconstants\");\nconst localforage_1 = __importDefault(require(\"localforage\"));\nconst utils_1 = require(\"../utils/utils\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst ConnectionSplitSupportedVersionLimit = 2;\nconst ConnectionSplitSupportedSizeLimit = 63000;\n// test\n//  const ConnectionSplitSupportedSizeLimit = 500\nconst ConnectionReceiveKey = 'ConnectionReceiveKey';\nconst ConnectionSendKey = 'ConnectionSendKey';\nconst ConnectionTopicVersionKey = 'ConnectionSenderVersionKey';\nclass ConnectionSplitPackages {\n    constructor(side) {\n        // 发送队列, 保存分片数据，需要断点续传发送，\n        this.splitMessageSendArray = new Map();\n        // 接收队列, 保存回包数据，需要冗余去重复\n        this.splitMessageReceivedArray = new Map();\n        // sender 版本校验缓存\n        this.splitMessageSenderVersionMap = new Map();\n        this.splitPackageCache = localforage_1.default.createInstance({\n            name: storageconstants_1.OKXCONNECTOR_STORAGE_PROTOCOL_CACHE + side\n        });\n    }\n    init(sendRawMsg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // 1. 恢复缓存\n            yield this.recoverFromCache();\n            //2. 缓存中发送队列重发\n            if (this.splitMessageSendArray.size > 0) {\n                for (const [topic, payloadList] of this.splitMessageSendArray.entries()) {\n                    for (let i = 0; i < payloadList.length;) {\n                        const payload = payloadList[i];\n                        try {\n                            // 尝试发送消息\n                            yield sendRawMsg((0, safejson_1.safeJsonStringify)(payload), topic);\n                            log.logDebug(`Successfully sent payload: ${(0, safejson_1.safeJsonStringify)(payload)} to topic: ${topic}`);\n                            // 成功后移除元素\n                            payloadList.splice(i, 1);\n                        }\n                        catch (error) {\n                            log.logError(`Failed to send payload: ${(0, safejson_1.safeJsonStringify)(payload)} to topic: ${topic}`, error);\n                            // 重试逻辑（最多重试 3 次）\n                            payload.retryCount = (payload.retryCount || 0) + 1;\n                            if (payload.retryCount > 3) {\n                                log.logError(`Payload failed after 3 retries: ${(0, safejson_1.safeJsonStringify)(payload)}`);\n                                payloadList.splice(i, 1); // 放弃重试，移除元素\n                            }\n                            else {\n                                i++; // 跳过当前元素，继续处理下一个\n                            }\n                        }\n                    }\n                }\n                yield this.syncCache();\n            }\n        });\n    }\n    tryParseMessageSplitPayload(message) {\n        var _a;\n        let result = undefined;\n        try {\n            if (message.trimStart().startsWith('{')) {\n                let messageObj = (0, safejson_1.safeJsonParse)(message);\n                if (messageObj\n                    && messageObj.protocol_version\n                    && messageObj.protocol_version >= 2) {\n                    let protocolMessageObject = messageObj;\n                    if (protocolMessageObject.package_group_id && ((_a = protocolMessageObject.package_group_id) === null || _a === void 0 ? void 0 : _a.length) > 0) {\n                        result = messageObj;\n                    }\n                }\n            }\n            else {\n                (0, log_1.logDebug)('not split packages');\n            }\n        }\n        catch (error) {\n            (0, log_1.logDebug)('not split packages');\n        }\n        return result;\n    }\n    updateTopicSenderVersion(topic, protocolVersion) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.splitMessageSenderVersionMap.set(topic, protocolVersion);\n            yield this.syncCache();\n            (0, log_1.logDebug)('get update topic sender version: ', topic, protocolVersion);\n        });\n    }\n    /**\n     * topic\n     * message 待发送的消息体\n     * sendMsg 正常发送消息的方法\n     * sendRawMsg 发送明文格式，即拆包消息的方法\n    */\n    sendSplitPackages(topic, message, sendMsg, sendRawMsg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // 1. 长度校验拆分子包\n            // 2. 确认连接协议最大支持版本\n            // 3. 分包缓存\n            // 4. 缓存包发送\n            // 5. ACK确认并清理缓存\n            if (!topic) {\n                log.logError('sendSplitPackages invalid topic');\n                return;\n            }\n            let senderVersion = this.splitMessageSenderVersionMap.get(topic);\n            let msgLength = message.length;\n            try {\n                if (msgLength < ConnectionSplitSupportedSizeLimit) {\n                    throw new Error(`no need to split (size:${msgLength})`);\n                }\n                if (!senderVersion || (senderVersion && senderVersion < ConnectionSplitSupportedVersionLimit)) {\n                    throw new Error(`version not support split (version: ${senderVersion})`);\n                }\n                const msg_parts = [];\n                let msg_part_length = ConnectionSplitSupportedSizeLimit;\n                for (let i = 0; i < message.length; i += msg_part_length) {\n                    if (i + msg_part_length < message.length) {\n                        msg_parts.push(message.slice(i, i + msg_part_length));\n                    }\n                    else {\n                        msg_parts.push(message.slice(i));\n                    }\n                }\n                let groupId = (0, utils_1.generateGroupId)();\n                let splitMessagePackages = msg_parts.map((msg, index) => {\n                    // make msg split parts\n                    let msgObj = {\n                        topicId: topic,\n                        protocol_version: ConnectionSplitSupportedVersionLimit,\n                        total_count: msg_parts.length,\n                        package_index: index,\n                        package_group_id: groupId,\n                        content: msg\n                    };\n                    return msgObj;\n                });\n                // save cache\n                this.mergePackageArray(true, splitMessagePackages);\n                // try send out\n                for (let i = 0; i < splitMessagePackages.length;) {\n                    const msgObj = splitMessagePackages[i];\n                    const payload = (0, safejson_1.safeJsonStringify)(msgObj);\n                    try {\n                        // 尝试发送消息\n                        yield sendRawMsg(payload, topic);\n                        log.logDebug(`Successfully sent payload: ${payload} to topic: ${topic}`);\n                        // 成功后移除元素\n                        splitMessagePackages.splice(i, 1);\n                    }\n                    catch (error) {\n                        log.logError(`Failed to send payload: ${payload} to topic: ${topic}`, error);\n                        // 重试逻辑（最多重试 3 次）\n                        msgObj.retryCount = (msgObj.retryCount || 0) + 1;\n                        if (msgObj.retryCount > 3) {\n                            log.logError(`Payload failed after 3 retries: ${payload}`);\n                            splitMessagePackages.splice(i, 1); // 放弃重试，移除元素\n                        }\n                        else {\n                            i++; // 跳过当前元素，继续处理下一个\n                        }\n                    }\n                }\n                // clean cache\n                this.splitMessageSendArray.set(topic, []);\n                yield this.syncCache();\n            }\n            catch (e) {\n                (0, log_1.logDebug)('send split packages no split');\n                (0, log_1.logDebug)(e);\n                yield sendMsg(topic, message);\n            }\n        });\n    }\n    onReceivedPackageCheck(payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // 1. merge 进入缓存\n            this.mergePackageArray(false, [payload]);\n            let completeMap = new Map();\n            let inputTopic = payload.topicId;\n            // 2. 返回检查结果,输出完整message结果\n            this.splitMessageReceivedArray.forEach((itemList, topic) => {\n                if (topic == payload.topicId) {\n                    itemList.forEach((item) => {\n                        if (item.messageObject.package_group_id) {\n                            let messageCache = completeMap.get(item.messageObject.package_group_id);\n                            if (!messageCache) {\n                                messageCache = new Array();\n                            }\n                            messageCache.push(item);\n                            completeMap.set(item.messageObject.package_group_id, messageCache);\n                        }\n                    });\n                }\n            });\n            (0, log_1.logDebug)('on received message, check message cache');\n            let checkResult = {\n                isSplitPackage: false,\n                // finalMessage: undefined,\n                // completeMessageIdList: undefined \n            };\n            if (payload.messageObject.package_group_id) {\n                checkResult.isSplitPackage = true;\n                let messageCache = completeMap.get(payload.messageObject.package_group_id);\n                // 判断是否收齐\n                if (messageCache === null || messageCache === void 0 ? void 0 : messageCache.length) {\n                    let index_check = new Set();\n                    messageCache.forEach((item) => {\n                        if (item.messageObject.package_index !== undefined) {\n                            index_check.add(item.messageObject.package_index);\n                        }\n                    });\n                    if (index_check.size == payload.messageObject.total_count) {\n                        // 满足条件，更新checkResult\n                        messageCache.sort((a, b) => {\n                            if ((a.messageObject.package_index || a.messageObject.package_index === 0)\n                                && (b.messageObject.package_index || b.messageObject.package_index === 0)) {\n                                return a.messageObject.package_index - b.messageObject.package_index;\n                            }\n                            else {\n                                return 0;\n                            }\n                        });\n                        let messageList = messageCache.reduce((msgList, item) => {\n                            msgList.push(item.messageObject.content);\n                            return msgList;\n                        }, []);\n                        let messageIdList = messageCache.reduce((msgIdList, item) => {\n                            msgIdList.push(item.messageId);\n                            return msgIdList;\n                        }, []);\n                        checkResult.isSplitPackage = true;\n                        checkResult.finalMessage = messageList.join('');\n                        checkResult.completeMessageIdList = messageIdList;\n                        // 清理缓存\n                        let receivedList = this.splitMessageReceivedArray.get(inputTopic);\n                        if (receivedList) {\n                            receivedList = receivedList.filter((item) => {\n                                return !messageIdList.includes(item.messageId);\n                            });\n                            this.splitMessageReceivedArray.set(inputTopic, receivedList);\n                        }\n                        yield this.syncCache();\n                    }\n                }\n            }\n            // 抛出，交给manager来发送receive\n            return checkResult;\n        });\n    }\n    /* -------------------------- */\n    /** private methods */\n    /* -------------------------- */\n    mergePackageArray(isSending, inputPayloadArray) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('append sending array');\n            if (isSending) {\n                let inputSendArray = inputPayloadArray;\n                let filtedArray = inputSendArray.filter((payload) => {\n                    let inputTopic = payload.topicId;\n                    let accept = true;\n                    let sendCacheArray = this.splitMessageSendArray.get(inputTopic);\n                    sendCacheArray === null || sendCacheArray === void 0 ? void 0 : sendCacheArray.forEach((cachedPayload) => {\n                        if (cachedPayload.package_group_id == payload.package_group_id\n                            && cachedPayload.total_count == payload.total_count\n                            && cachedPayload.package_index == payload.package_index) {\n                            accept = false;\n                        }\n                    });\n                    return accept;\n                });\n                if (filtedArray.length > 0) {\n                    let inputTopic = filtedArray[0].topicId;\n                    let sendArray = this.splitMessageSendArray.get(inputTopic);\n                    if (!sendArray) {\n                        sendArray = new Array();\n                    }\n                    sendArray = sendArray.concat(filtedArray);\n                    this.splitMessageSendArray.set(inputTopic, sendArray);\n                    (0, log_1.logDebug)('append sending array (after filted): ', sendArray);\n                }\n            }\n            else {\n                let inputReceiveArray = inputPayloadArray;\n                let filtedArray = inputReceiveArray.filter((payload) => {\n                    let inputTopic = payload.topicId;\n                    let accept = true;\n                    let receiveCacheArray = this.splitMessageReceivedArray.get(inputTopic);\n                    receiveCacheArray === null || receiveCacheArray === void 0 ? void 0 : receiveCacheArray.forEach((cachedPayload) => {\n                        if (cachedPayload.messageId == payload.messageId) {\n                            accept = false;\n                        }\n                    });\n                    return accept;\n                });\n                if (filtedArray.length > 0) {\n                    let inputTopic = filtedArray[0].topicId;\n                    let receiveArray = this.splitMessageReceivedArray.get(inputTopic);\n                    if (!receiveArray) {\n                        receiveArray = new Array();\n                    }\n                    receiveArray = receiveArray.concat(filtedArray);\n                    this.splitMessageReceivedArray.set(inputTopic, receiveArray);\n                    (0, log_1.logDebug)('append received array (after filted): ', receiveArray);\n                }\n            }\n        });\n    }\n    syncCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('sync split message cache');\n            yield this.splitPackageCache.setItem(ConnectionReceiveKey, this.splitMessageReceivedArray);\n            yield this.splitPackageCache.setItem(ConnectionSendKey, this.splitMessageSendArray);\n            yield this.splitPackageCache.setItem(ConnectionTopicVersionKey, this.splitMessageSenderVersionMap);\n        });\n    }\n    recoverFromCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // rec\n            let rec_array = yield this.splitPackageCache.getItem(ConnectionReceiveKey);\n            if (rec_array) {\n                this.splitMessageReceivedArray = rec_array;\n            }\n            else {\n                this.splitMessageReceivedArray = new Map();\n            }\n            //send\n            let send_array = yield this.splitPackageCache.getItem(ConnectionSendKey);\n            if (send_array) {\n                this.splitMessageSendArray = send_array;\n            }\n            else {\n                this.splitMessageSendArray = new Map();\n            }\n            // topic/version cach\n            let topic = yield this.splitPackageCache.getItem(ConnectionTopicVersionKey);\n            if (topic) {\n                this.splitMessageSenderVersionMap = topic;\n            }\n            else {\n                this.splitMessageSenderVersionMap = new Map();\n            }\n        });\n    }\n}\nexports.ConnectionSplitPackages = ConnectionSplitPackages;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectorState = exports.CONNECT_PROTOCOL_VER = exports.CONNECT_JSONRPC_VER = exports.OKXCONNECTOR_MESSAGE_TTL = exports.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE = exports.OKXCONNECTOR_WS_URL_LIST = exports.OKXCONNECTOR_WS_URL_IDX_KEY = exports.OKXCONNECTOR_WS_URL_3 = exports.OKXCONNECTOR_WS_URL_2 = exports.OKXCONNECTOR_WS_URL_1 = exports.EVENT_EMITTER_MAX_LISTENERS = exports.OKXCONNECTOR_PROTOCOL_VERSION = void 0;\nexports.OKXCONNECTOR_PROTOCOL_VERSION = 2;\nexports.EVENT_EMITTER_MAX_LISTENERS = 10;\nexports.OKXCONNECTOR_WS_URL_1 = \"wss://wsdexpri.okx.com/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_2 = \"wss://wsdexpri.okx.ac/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_3 = \"wss://wsdexpri.coinall.ltd/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_IDX_KEY = \"wuik\";\nexports.OKXCONNECTOR_WS_URL_LIST = [\n    exports.OKXCONNECTOR_WS_URL_1,\n    exports.OKXCONNECTOR_WS_URL_2,\n    exports.OKXCONNECTOR_WS_URL_3,\n];\nexports.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE = {\n    TIME_OUT: 3990,\n    CANCELED: 3991,\n    FINISHED: 3992,\n};\nexports.OKXCONNECTOR_MESSAGE_TTL = 300000;\n// --------------- JSON RPC ---------------\nexports.CONNECT_JSONRPC_VER = \"2.0\";\n// --------------- Protocol Version -------\nexports.CONNECT_PROTOCOL_VER = 2;\nexports.ConnectorState = {\n    InitState: 0,\n    Connecting: 1,\n    Connected: 2,\n    Disconnected: 3,\n    OnError: 4,\n};\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Engine = void 0;\nconst protocol_1 = require(\"../protocol\");\nconst constants_1 = require(\"./constants\");\nconst utils_1 = require(\"../utils\");\nconst iconnector_1 = require(\"../connector/iconnector\");\nconst connectionManager_1 = require(\"./connectionManager\");\nconst sessionUtils_1 = require(\"./sessionUtils\");\nconst wallet_info_1 = require(\"../protocol/connect/wallet-info\");\nclass Engine {\n    constructor(appName) {\n        this.connectors = [];\n        this.useConnector = undefined;\n        this.connectionManager = new connectionManager_1.ConnectionManager(appName);\n        this.addConnectionListener();\n    }\n    getConnector() {\n        if (this.useConnector) {\n            return this.useConnector;\n        }\n    }\n    setAccountChangeListener(accountChangeListener) {\n        this.accountChangeListener = accountChangeListener;\n        (0, utils_1.logDebug)(\"setAccountChangeListener: engine\", accountChangeListener);\n        for (const connector of this.connectors) {\n            connector.setAccountChangeListener(accountChangeListener);\n        }\n    }\n    registerConnector(connectors) {\n        this.connectors = connectors;\n        for (const connector of connectors) {\n            connector.setConnectionManager(this.connectionManager);\n        }\n    }\n    hasWsConnector() {\n        for (const connector of this.connectors) {\n            if (this.isWsConnector(connector)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    isWsConnector(connector) {\n        if (!connector)\n            return false;\n        return (connector.getTag() === iconnector_1.OKX_TG_WALLET\n            || connector.getTag() === iconnector_1.OKX_APP_WALLET);\n    }\n    isInjectedConnector(connector) {\n        if (!connector)\n            return false;\n        return connector.getTag() === iconnector_1.OKX_INJECT_WALLET;\n    }\n    universalConnect(request, sessionConfig, connectInfoAndUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.addConnectionListener();\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b, _c, _d;\n                try {\n                    (0, utils_1.logDebug)(\"engine universalConnect request :\", JSON.stringify(request));\n                    (0, utils_1.logDebug)(\"engine universalConnect sessionConfig :\", JSON.stringify(sessionConfig));\n                    let universalRequest = [];\n                    request.forEach((item) => {\n                        let name = item.name;\n                        if (name.startsWith(\"requestAccounts\") || name.startsWith(\"ton\")) {\n                            universalRequest.push(item);\n                        }\n                    });\n                    (0, utils_1.logDebug)(\"engine universalConnect universalRequest :\", JSON.stringify(universalRequest));\n                    const connectInfo = this.connectionManager.getConnectInfo();\n                    const requestId = Date.now().toString();\n                    let openUniversalLink = (_a = sessionConfig.openUniversalUrl) !== null && _a !== void 0 ? _a : false;\n                    const universalConnectRequest = {\n                        protocolVer: Number(protocol_1.tonConnectSdkVersion),\n                        topic: connectInfo.channelId,\n                        clientId: connectInfo.clientId,\n                        requestId: requestId,\n                        dAppInfo: sessionConfig.dappInfo,\n                        requests: universalRequest,\n                        redirect: (_b = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _b !== void 0 ? _b : \"none\"\n                    };\n                    const base64Encoded = (0, utils_1.encodeConnectParams)(universalConnectRequest);\n                    universalConnectRequest.redirect = (_c = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _c !== void 0 ? _c : \"none\";\n                    (0, utils_1.logDebug)('engine universalConnect ==>>universalConnectRequest:', JSON.stringify(universalConnectRequest));\n                    var openOKXLink = \"\";\n                    // open app wallet\n                    if (openUniversalLink) {\n                        openOKXLink = (0, utils_1.getOKXLink)(universalConnectRequest, sessionConfig.useMini, sessionConfig.tmaReturnUrl);\n                        (0, utils_1.logDebug)('engine universalConnect ==>>openOKXLink:', openOKXLink);\n                    }\n                    const openMethod = () => {\n                        if (this.connectors.length == 1 && this.connectors[0].getTag() === iconnector_1.OKX_INJECT_WALLET) {\n                            return this.connectors[0].openWallet({\n                                connectRequest: universalConnectRequest\n                            });\n                        }\n                        else {\n                            if (sessionConfig.useMini) {\n                                return (0, utils_1.openOKXTMAWalletlinkWithFallback)(openOKXLink);\n                            }\n                            if ((0, utils_1.useShortLink)()) {\n                                return (0, utils_1.openOKXUniversalLink)(openOKXLink);\n                            }\n                            return (0, utils_1.openOKXDeeplinkWithFallback)(openOKXLink);\n                        }\n                    };\n                    (0, utils_1.logDebug)('engine universalConnect ==>>openOKXLink:', openOKXLink);\n                    const isIOS = (0, utils_1.isIos)();\n                    if (isIOS && openUniversalLink) {\n                        (0, utils_1.logDebug)(`engine universalConnect ==>>isIOS: ${isIOS}   openUniversalLink: ${openUniversalLink}`);\n                        openMethod();\n                    }\n                    this.addOnConnectResultListener((response) => {\n                        var _a, _b, _c, _d;\n                        try {\n                            this.addOnConnectResultListener(undefined);\n                            let connectResponse = response;\n                            if (connectResponse.method == \"connect\") {\n                                (0, utils_1.logDebug)(\"engin  universalConnect success connectResponse:>>>\", JSON.stringify(connectResponse));\n                                let namespaces = (0, sessionUtils_1.buildNameSpacesByConnectResponse)(connectResponse);\n                                if (namespaces) {\n                                    let walletName = undefined;\n                                    if (((_b = (_a = connectResponse.payload) === null || _a === void 0 ? void 0 : _a.responses) === null || _b === void 0 ? void 0 : _b[0]) && \"walletName\" in connectResponse.payload.responses[0]) {\n                                        walletName = connectResponse.payload.responses[0]['walletName'];\n                                    }\n                                    let appName = (_c = connectResponse.payload) === null || _c === void 0 ? void 0 : _c.wallet.appName;\n                                    var tag;\n                                    switch (appName) {\n                                        case wallet_info_1.OKXWalletName:\n                                            tag = iconnector_1.OKX_APP_WALLET;\n                                            break;\n                                        case wallet_info_1.OKXMiniWalletName:\n                                            tag = iconnector_1.OKX_TG_WALLET;\n                                            break;\n                                        case wallet_info_1.OKXInjectWalletName:\n                                            tag = iconnector_1.OKX_INJECT_WALLET;\n                                            break;\n                                    }\n                                    var connector = this.connectors.find((connector) => connector.getTag() === tag);\n                                    if (!connector) {\n                                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n                                    }\n                                    let session = Object.assign({ topic: connectInfo.channelId, sessionConfig: sessionConfig, namespaces: namespaces }, (connectResponse.payload && {\n                                        wallet: Object.assign(Object.assign({}, connectResponse.payload.wallet), { walletName: walletName })\n                                    }));\n                                    let methodsResponse = connectResponse.payload.responses.find(item => item.name === 'requestAccounts');\n                                    if (methodsResponse && methodsResponse.connectRequestMethods) {\n                                        session.signResponse = methodsResponse.connectRequestMethods;\n                                    }\n                                    (0, utils_1.logDebug)(\"engin  universalConnect success session:>>>\", JSON.stringify(session));\n                                    if (this.isWsConnector(connector)) {\n                                        (0, utils_1.logDebug)(\"engine update protocol version\");\n                                        this.connectionManager.updateProtocolVersion(connectInfo.channelId, connectResponse.payload.wallet.maxProtocolVersion);\n                                    }\n                                    resolve(session);\n                                    this.setUseConnector(connector);\n                                }\n                                else {\n                                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n                                }\n                            }\n                            else if (connectResponse.method == \"connect_error\" && ((_d = connectResponse.payload) === null || _d === void 0 ? void 0 : _d.code) != undefined) {\n                                throw new protocol_1.OKXConnectError(connectResponse.payload.code);\n                            }\n                        }\n                        catch (e) {\n                            reject(e);\n                        }\n                    });\n                    if (this.hasWsConnector()) {\n                        yield ((_d = this.connectionManager) === null || _d === void 0 ? void 0 : _d.disconnect(false));\n                        try {\n                            yield this.connectionManager.connect();\n                        }\n                        catch (e) {\n                            (0, utils_1.logDebug)('Engine universalConnect error', e);\n                            throw e;\n                        }\n                        (0, utils_1.logDebug)('engin  universalConnect ==>> connectInfoAndUrl:', connectInfoAndUrl);\n                        this.sendSession(base64Encoded);\n                    }\n                    if (!isIOS && openUniversalLink) {\n                        openMethod();\n                    }\n                    (0, utils_1.logDebug)('engin  universalConnect ==>> connectInfoAndUrl:', connectInfoAndUrl);\n                    if (connectInfoAndUrl) {\n                        const info = {\n                            connectRequest: universalConnectRequest,\n                            redirect: sessionConfig.redirect,\n                            tmaReturnUrl: sessionConfig.tmaReturnUrl,\n                        };\n                        (0, utils_1.logDebug)(\"universalConnect connectInfoAndUrl info :\", JSON.stringify(info));\n                        connectInfoAndUrl(info);\n                    }\n                }\n                catch (error) {\n                    (0, utils_1.logDebug)(\"Engine universalConnect catch error\", error);\n                    reject(error);\n                }\n            }));\n        });\n    }\n    addOnConnectResultListener(connectResultListener) {\n        for (const connector of this.connectors) {\n            if (this.isInjectedConnector(connector)) {\n                connector.setOnConnectResultListener(connectResultListener);\n            }\n        }\n        this.connectResultListener = connectResultListener;\n    }\n    openWallet(engineConnectInfo, connector) {\n        var _a;\n        if (connector) {\n            connector.openWallet(engineConnectInfo);\n        }\n        else {\n            (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.openWallet(engineConnectInfo);\n        }\n    }\n    send(request, requestAnswer, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            if (!this.isInjectedConnector(this.getConnector())) {\n                if (\"fromOKXTonsdk\" in request) {\n                    delete request.fromOKXTonsdk;\n                }\n            }\n            return (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.send(request, requestAnswer, ttl);\n        });\n    }\n    clearData() {\n        var _a;\n        (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.clearData();\n    }\n    addDisconnectListener(disconnecter) {\n        var _a;\n        (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.addDisconnectListener(disconnecter);\n    }\n    saveSessionContent(key, data) {\n        this.connectionManager.saveSessionContent(key, data);\n    }\n    getSessionContent(key) {\n        var _a;\n        var session = this.connectionManager.getSessionContent(key);\n        if (session) {\n            var tag = \"\";\n            if (typeof session === \"object\") {\n                tag = this.getTagByappName((_a = session.wallet) === null || _a === void 0 ? void 0 : _a.appName);\n            }\n            if (this.connectors.find((connector) => {\n                return connector.getTag() === tag;\n            })) {\n                return session;\n            }\n        }\n        return undefined;\n    }\n    getTagByappName(appName) {\n        var tag = '';\n        if (appName) {\n            switch (appName) {\n                case wallet_info_1.OKXWalletName:\n                    tag = iconnector_1.OKX_APP_WALLET;\n                    break;\n                case wallet_info_1.OKXMiniWalletName:\n                    tag = iconnector_1.OKX_TG_WALLET;\n                    break;\n                case wallet_info_1.OKXInjectWalletName:\n                    tag = iconnector_1.OKX_INJECT_WALLET;\n            }\n        }\n        return tag;\n    }\n    setConnectConnector(wallet) {\n        var tag = this.getTagByappName(wallet === null || wallet === void 0 ? void 0 : wallet.appName);\n        if (!tag)\n            return;\n        this.setUseConnector(this.connectors.find((connector) => {\n            return connector.getTag() === tag;\n        }));\n    }\n    setUseConnector(connector) {\n        this.useConnector = connector;\n        if (this.isWsConnector(connector)) {\n            connector.addConnectionListener();\n        }\n    }\n    // for es connect\n    setSessionConnectingListener(sessionConnectingListener) {\n        this.sessionConnectingListener = sessionConnectingListener;\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.restoreconnect(sessionInfo, onConnectResult));\n        });\n    }\n    restoreconnectFromTopic(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.isWsConnector(this.getConnector())) {\n                yield this.getConnector().restoreconnectFromTopic(topic);\n            }\n        });\n    }\n    getCurrentConnectionReady(namespaceKeys) {\n        var _a;\n        return !!((_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.getCurrentConnectionReady(namespaceKeys));\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            var _a;\n            yield ((_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.connectManagerDisconnect(fromRestore));\n        });\n    }\n    sendSession(sessionInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, utils_1.logDebug)('[Connect] sendSession called:', sessionInfo);\n            const requestId = Date.now().toString();\n            let request = {\n                method: 'session_info',\n                params: { protocolVersion: constants_1.CONNECT_PROTOCOL_VER, sessionInfo: sessionInfo }\n            };\n            yield this.connectionManager.sendRaw(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId })));\n        });\n    }\n    addConnectionListener() {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.addListener(\"sdk_response\", (event, msg) => {\n            var jsonResponse = (0, utils_1.safeJsonParse)(msg);\n            (0, utils_1.logDebug)(`Engine ==>> addListener ==> success ==> ${jsonResponse}`);\n            if (jsonResponse.method === 'connect' || jsonResponse.method === 'connect_error') {\n                if (this.connectResultListener) {\n                    this.connectResultListener(jsonResponse);\n                }\n            }\n            else if (jsonResponse.method === \"session_connecting\") {\n                (0, utils_1.logDebug)(\"Engine ==>> handleResponse_4  ===> sessionConnectingListener\");\n                if (this.sessionConnectingListener) {\n                    (0, utils_1.logDebug)(\"Engine ==>> handleResponse_4  ===> sessionConnectingListener not null\");\n                    this.sessionConnectingListener();\n                    this.sessionConnectingListener = undefined;\n                }\n            }\n        }, function () {\n        });\n    }\n}\nexports.Engine = Engine;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = exports.Engine = exports.WalletConnectionManager = exports.ConnectionManager = exports.OKXWalletConnector = void 0;\nvar connect_1 = require(\"./connect\");\nObject.defineProperty(exports, \"OKXWalletConnector\", { enumerable: true, get: function () { return connect_1.OKXWalletConnector; } });\nvar connectionManager_1 = require(\"./connectionManager\");\nObject.defineProperty(exports, \"ConnectionManager\", { enumerable: true, get: function () { return connectionManager_1.ConnectionManager; } });\nvar walletConnectionManager_1 = require(\"./walletConnectionManager\");\nObject.defineProperty(exports, \"WalletConnectionManager\", { enumerable: true, get: function () { return walletConnectionManager_1.WalletConnectionManager; } });\nvar engine_1 = require(\"./engine\");\nObject.defineProperty(exports, \"Engine\", { enumerable: true, get: function () { return engine_1.Engine; } });\nvar storage_1 = require(\"./storage\");\nObject.defineProperty(exports, \"Storage\", { enumerable: true, get: function () { return storage_1.Storage; } });\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MULTICODEC_ED25519_LENGTH = exports.MULTICODEC_ED25519_HEADER = exports.MULTICODEC_ED25519_BASE = exports.MULTICODEC_ED25519_ENCODING = exports.DID_METHOD = exports.DID_PREFIX = exports.DID_DELIMITER = exports.KEY_PAIR_SEED_LENGTH = exports.DATA_ENCODING = exports.JSON_ENCODING = exports.JWT_ENCODING = exports.JWT_DELIMITER = exports.JWT_IRIDIUM_TYP = exports.JWT_IRIDIUM_ALG = exports.JWTHeaderType = void 0;\nexports.generateKeyPair = generateKeyPair;\nexports.decodeJSON = decodeJSON;\nexports.encodeJSON = encodeJSON;\nexports.encodeIss = encodeIss;\nexports.decodeIss = decodeIss;\nexports.encodeSig = encodeSig;\nexports.decodeSig = decodeSig;\nexports.encodeData = encodeData;\nexports.decodeData = decodeData;\nexports.encodeJWT = encodeJWT;\nexports.decodeJWT = decodeJWT;\nexports.signJWT = signJWT;\nexports.verifyJWT = verifyJWT;\nconst ed25519 = __importStar(require(\"@stablelib/ed25519\"));\nconst safejson_1 = require(\"../utils/safejson\");\nconst utils_1 = require(\"../utils/utils\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst log = __importStar(require(\"../utils/log\"));\nconst stringUtils_1 = require(\"../utils/stringUtils\");\nexports.JWTHeaderType = \"dapp\";\nexports.JWT_IRIDIUM_ALG = \"EdDSA\";\nexports.JWT_IRIDIUM_TYP = \"JWT\";\nexports.JWT_DELIMITER = \".\";\nexports.JWT_ENCODING = \"base64url\";\nexports.JSON_ENCODING = \"utf8\";\nexports.DATA_ENCODING = \"utf8\";\nexports.KEY_PAIR_SEED_LENGTH = 32;\nexports.DID_DELIMITER = \":\";\nexports.DID_PREFIX = \"did\";\nexports.DID_METHOD = \"key\";\nexports.MULTICODEC_ED25519_ENCODING = \"base58btc\";\nexports.MULTICODEC_ED25519_BASE = \"z\";\nexports.MULTICODEC_ED25519_HEADER = \"K36\";\nexports.MULTICODEC_ED25519_LENGTH = 32;\nfunction generateKeyPair() {\n    // let local_seed = randomBytes(KEY_PAIR_SEED_LENGTH)\n    // return ed25519.generateKeyPairFromSeed(local_seed);\n    return tweetnacl_1.default.sign.keyPair();\n}\nfunction decodeJSON(str) {\n    return (0, safejson_1.safeJsonParse)((0, stringUtils_1.okxtoString)((0, stringUtils_1.okxfromString)(str, exports.JWT_ENCODING), exports.JSON_ENCODING));\n}\nfunction encodeJSON(val) {\n    return (0, stringUtils_1.okxtoString)((0, stringUtils_1.okxfromString)((0, safejson_1.safeJsonStringify)(val), exports.JSON_ENCODING), exports.JWT_ENCODING);\n}\nfunction encodeIss(publicKey) {\n    log.logDebug(`publicKey: ${(0, utils_1.toHexString)(publicKey)}`);\n    var publicKeyStr = (0, stringUtils_1.okxtoString)(publicKey, exports.MULTICODEC_ED25519_ENCODING);\n    return [exports.DID_PREFIX, exports.DID_METHOD, publicKeyStr].join(exports.DID_DELIMITER);\n}\nfunction decodeIss(issuer) {\n    const [prefix, method, multicodec] = issuer.split(exports.DID_DELIMITER);\n    if (prefix !== exports.DID_PREFIX || method !== exports.DID_METHOD) {\n        throw new Error(`Issuer must be a DID with method \"key\"`);\n    }\n    if (multicodec === undefined) {\n        throw new Error('multicodec is undefined');\n    }\n    const publicKey = (0, stringUtils_1.okxfromString)(multicodec, exports.MULTICODEC_ED25519_ENCODING);\n    if (publicKey === undefined || publicKey.length !== exports.MULTICODEC_ED25519_LENGTH) {\n        throw new Error(`Issuer must be a public key with length 32 bytes`);\n    }\n    return publicKey;\n}\n// ---------- Signature ----------------------------------------------- //\nfunction encodeSig(bytes) {\n    return (0, stringUtils_1.okxtoString)(bytes, exports.JWT_ENCODING);\n}\nfunction decodeSig(encoded) {\n    return (0, stringUtils_1.okxfromString)(encoded, exports.JWT_ENCODING);\n}\n// ---------- Data ----------------------------------------------- //\nfunction encodeData(params) {\n    return (0, stringUtils_1.okxfromString)([encodeJSON(params.header), encodeJSON(params.payload)].join(exports.JWT_DELIMITER), exports.DATA_ENCODING);\n}\nfunction decodeData(data) {\n    var _a, _b;\n    const params = (0, stringUtils_1.okxtoString)(data, exports.DATA_ENCODING).split(exports.JWT_DELIMITER);\n    const header = decodeJSON((_a = params[0]) !== null && _a !== void 0 ? _a : '{}');\n    const payload = decodeJSON((_b = params[1]) !== null && _b !== void 0 ? _b : '{}');\n    return { header, payload };\n}\n// ---------- JWT ----------------------------------------------- //\nfunction encodeJWT(params) {\n    return [encodeJSON(params.header), encodeJSON(params.payload), encodeSig(params.signature)].join(exports.JWT_DELIMITER);\n}\nfunction decodeJWT(jwt) {\n    var _a, _b, _c;\n    const params = jwt.split(exports.JWT_DELIMITER);\n    const header = decodeJSON((_a = params[0]) !== null && _a !== void 0 ? _a : '{}');\n    const payload = decodeJSON((_b = params[1]) !== null && _b !== void 0 ? _b : '{}');\n    const signature = decodeSig((_c = params[2]) !== null && _c !== void 0 ? _c : '{}');\n    const data = (0, stringUtils_1.okxfromString)(params.slice(0, 2).join(exports.JWT_DELIMITER), exports.DATA_ENCODING);\n    return { header, payload, signature, data };\n}\nfunction signJWT(sub_1, aud_1, ttl_1, keyPair_1) {\n    return __awaiter(this, arguments, void 0, function* (sub, aud, ttl, keyPair, iat = Math.floor(Date.now())) {\n        const header = { alg: exports.JWT_IRIDIUM_ALG, typ: exports.JWT_IRIDIUM_TYP };\n        const iss = encodeIss(keyPair.publicKey);\n        const exp = iat + ttl;\n        const act = \"authenticate user\";\n        const payload = { iss, sub, aud, act, iat, exp };\n        const data = encodeData({ header, payload });\n        // const signature = ed25519.sign(keyPair.secretKey, data);\n        log.logDebug(`get sec kp: ${keyPair.secretKey} {${keyPair.secretKey.length}}`);\n        const signature = tweetnacl_1.default.sign.detached(data, keyPair.secretKey);\n        return encodeJWT({ header, payload, signature });\n    });\n}\nfunction verifyJWT(jwt) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { header, payload, data, signature } = decodeJWT(jwt);\n        if (header.alg !== exports.JWT_IRIDIUM_ALG || header.typ !== exports.JWT_IRIDIUM_TYP) {\n            throw new Error(\"JWT must use EdDSA algorithm\");\n        }\n        const publicKey = decodeIss(payload.iss);\n        return ed25519.verify(publicKey, data, signature);\n    });\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCONNECTOR_JWT_TTL = exports.OKXCONNECTOR_JWT_WALLET_SIDE = exports.OKXCONNECTOR_JWT_SIDE = void 0;\nexports.OKXCONNECTOR_JWT_SIDE = \"wallet\";\nexports.OKXCONNECTOR_JWT_WALLET_SIDE = \"dapp\";\nexports.OKXCONNECTOR_JWT_TTL = 86400000;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildNameSpacesByConnectResponse = buildNameSpacesByConnectResponse;\nexports.buildRequestAccountNameSpacesByConnectResponse = buildRequestAccountNameSpacesByConnectResponse;\nexports.buildAccountNameSpaces = buildAccountNameSpaces;\nconst log_1 = require(\"../utils/log\");\nfunction buildNameSpacesByConnectResponse(connectResponse) {\n    let requestAccountNameSpaces = buildRequestAccountNameSpacesByConnectResponse(connectResponse);\n    return requestAccountNameSpaces;\n}\nfunction buildRequestAccountNameSpacesByConnectResponse(connectResponse) {\n    let result = {};\n    (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start connectResponse111>>', JSON.stringify(connectResponse));\n    let universalResponse = connectResponse.payload.responses.find(item => item.name === 'requestAccounts');\n    if (universalResponse && universalResponse.accounts) {\n        let filterAccount = [];\n        for (const item of universalResponse.accounts) {\n            if (item.namespace === \"ton\") {\n                if (item.data && item.data.ton_addr) {\n                    if (item.data.ton_addr.address && item.data.ton_addr.address.length > 0) {\n                        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start TON>>', JSON.stringify(item));\n                        filterAccount.push(item);\n                    }\n                }\n            }\n            else {\n                (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start other>>', JSON.stringify(item));\n                filterAccount.push(item);\n            }\n        }\n        universalResponse.accounts = filterAccount;\n    }\n    const tonAddress = connectResponse.payload.responses.find(item => item.name === 'ton_addr');\n    const tonProof = connectResponse.payload.responses.find(item => item.name === 'ton_proof');\n    if (tonAddress && !universalResponse) { //adapt tonsdk\n        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse adapt ton data >>');\n        let address = tonAddress.address;\n        address = 'ton:' + tonAddress.network + \":\" + address;\n        let data = {\n            ton_addr: tonAddress\n        };\n        if (tonProof) {\n            data.ton_proof = tonProof;\n        }\n        universalResponse = {\n            name: \"requestAccounts\",\n            accounts: [{\n                    namespace: 'ton',\n                    addresses: [address],\n                    methods: ['ton_sendTransaction'],\n                    extra: {},\n                    data: data,\n                }]\n        };\n    }\n    (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse end universalResponse>>>', JSON.stringify(universalResponse));\n    buildAccountNameSpaces(universalResponse.accounts, result);\n    return result;\n}\nfunction buildAccountNameSpaces(accounts, result) {\n    accounts.forEach(item => {\n        var chains = [];\n        var accounts = [];\n        item.addresses.forEach(addressItem => {\n            var addressArr = addressItem.split(\":\");\n            (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse addressArr>>', addressArr.length);\n            if (addressArr.length >= 3) {\n                let chain = addressArr.slice(0, 2).join(\":\");\n                chains.push(chain);\n                accounts.push(addressItem);\n                (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse chain:>>', chain, \"addressItem:\", addressItem);\n            }\n        });\n        if (item.data && item.data.ton_addr) {\n            item.data.ton_addr.name = 'ton_addr';\n        }\n        if (item.data && item.data.ton_proof) {\n            item.data.ton_proof.name = 'ton_proof';\n        }\n        result[item.namespace] = {\n            chains: chains,\n            accounts: accounts,\n            methods: item.methods,\n            extra: item.extra,\n            payload: item.data\n        };\n        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse result>>', JSON.stringify(result));\n    });\n}\n/*export function buildTonNameSpaceByConnectResponse(connectResponse: ConnectResponseSuccess): Namespaces | undefined {\n    const tonAddrItem: TonAddressItemReply = connectResponse.payload.responses.find(\n        item => item.name === 'ton_addr'\n    ) as TonAddressItemReply;\n\n    const tonProfItem: TonProofItemReply = connectResponse.payload.responses.find(\n        item => item.name === 'ton_proof'\n    ) as TonProofItemReply;\n\n    if (!tonAddrItem) {\n        return undefined\n    }\n\n    return {\n        NameSpaceKeyTON: {\n            chains: [tonAddrItem.network],\n            accounts: [],\n            methods: connectResponse.payload.wallet.features?.ton,\n            payload: {\n                tonAccount: {\n                    address: tonAddrItem.address,\n                    chain: tonAddrItem.network,\n                    walletStateInit: tonAddrItem.walletStateInit,\n                    publicKey: tonAddrItem.publicKey\n                },\n                tonProof: tonProfItem\n            }\n        }\n    }\n}*/\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = void 0;\nconst storageconstants_1 = require(\"./storageconstants\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst utils_1 = require(\"../utils/utils\");\nconst utils_2 = require(\"../utils\");\nconst log = __importStar(require(\"../utils/log\"));\nconst utils_3 = require(\"../utils\");\nconst crypto_js_1 = require(\"crypto-js\");\nclass Storage {\n    constructor(subKey, beforeKey = undefined) {\n        const localStorage = (0, utils_1.resolveLocalStorage)();\n        // 0. check and upgrade beforeKey\n        log.logDebug('------ update before cache ------');\n        if (beforeKey) {\n            this.checkAndUpgradeCache(beforeKey, subKey);\n        }\n        // 1. load data from local storage\n        this.storeKey = '';\n        this.cipherIV = '';\n        this.subKey = subKey;\n        log.logDebug('--------get current local storage --------');\n        log.logDebug(localStorage);\n        const cacheStr = localStorage.getItem(Storage.cacheKey + subKey);\n        if (typeof cacheStr === \"undefined\" || cacheStr === null) {\n            log.logDebug(\"with no cache\");\n            this.cache = {};\n            return;\n        }\n        log.logDebug(cacheStr);\n        if ((cacheStr === null || cacheStr === void 0 ? void 0 : cacheStr.length) > 0) {\n            var cacheObj = (0, utils_2.safeJsonParse)(cacheStr);\n            this.cache = cacheObj;\n        }\n        log.logDebug(`get cache obj: ${this.cache}`);\n        if (typeof this.cache === 'undefined' || this.cache == null) {\n            this.cache = {};\n        }\n    }\n    checkAndUpgradeCache(fromCacheKey, toCacheKey) {\n        if (fromCacheKey && fromCacheKey.length > 0 && toCacheKey && toCacheKey.length > 0) {\n            // 1. get all infos from from-cache-key\n            log.logDebug('--------get current local storage --------');\n            log.logDebug(localStorage);\n            const cacheStr = localStorage.getItem(Storage.cacheKey + fromCacheKey);\n            if (typeof cacheStr === \"undefined\" || cacheStr === null) {\n                log.logDebug(\"no pre cache content\");\n                return;\n            }\n            log.logDebug(cacheStr);\n            if ((cacheStr === null || cacheStr === void 0 ? void 0 : cacheStr.length) > 0) {\n                // 2. save to to-cache-key\n                log.logDebug(\"write in cache content: \", fromCacheKey, '->', toCacheKey);\n                localStorage.setItem(Storage.cacheKey + toCacheKey, cacheStr);\n                // 3. clean from item\n                log.logDebug(\"clean in cache content: \", fromCacheKey);\n                localStorage.removeItem(Storage.cacheKey + fromCacheKey);\n            }\n        }\n        else {\n            log.logDebug('no pre cache key:', fromCacheKey);\n        }\n    }\n    saveContent(content, key, id = '-') {\n        let item = {\n            id: id,\n            timestamp: Date.now().toString(),\n            content: content\n        };\n        this.saveItem(item, key);\n    }\n    saveItem(item, key) {\n        let localKey = Storage.cacheKey + this.subKey;\n        const localStorage = (0, utils_1.resolveLocalStorage)();\n        log.logDebug(this.cache);\n        log.logDebug(`get cache obj: ${this.cache}, ${key}, ${item}`);\n        this.cache[key] = item;\n        let totalCacheStr = (0, utils_2.safeJsonStringify)(this.cache);\n        log.logDebug(`STORAGE: ${key} @ ${this.cache}`);\n        localStorage.setItem(localKey, totalCacheStr);\n    }\n    getItem(key) {\n        log.logDebug(`STORAGE >> getItem: ${key} @ ${this.cache}`);\n        return this.cache[key];\n    }\n    getCachedPBKDF2InfoKey() {\n        var _a, _b, _c, _d;\n        const pwLen = 32;\n        const saltLen = 24;\n        if (this.storeKey.length > 0 && ((_a = this.cipherIV) === null || _a === void 0 ? void 0 : _a.length) > 0) {\n            return {\n                pw: this.storeKey,\n                iv: this.cipherIV\n            };\n        }\n        let salt = (_b = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGER_CRYPTO_SALT)) === null || _b === void 0 ? void 0 : _b.content;\n        if (!salt) {\n            salt = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(saltLen));\n            this.saveContent(salt, storageconstants_1.OKXCONNECTOR_STORAGER_CRYPTO_SALT);\n        }\n        let pw = (_c = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD)) === null || _c === void 0 ? void 0 : _c.content;\n        if (!pw) {\n            pw = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(pwLen));\n            this.saveContent(pw, storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD);\n        }\n        let cipherIV = (_d = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV)) === null || _d === void 0 ? void 0 : _d.content;\n        if (!cipherIV) {\n            // let ivBuffer = Buffer.from(nacl.randomBytes(16))\n            let ivBuffer = tweetnacl_1.default.randomBytes(16);\n            cipherIV = (0, utils_1.toHexString)(ivBuffer);\n            this.saveContent(cipherIV, storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV);\n        }\n        this.cipherIV = cipherIV;\n        this.storeKey = (0, crypto_js_1.PBKDF2)(pw, salt, { iterations: 10 }).toString();\n        return {\n            pw: this.storeKey,\n            iv: this.cipherIV\n        };\n    }\n    encryptStoreMsg(msg, key) {\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg start ${Date.now()}`);\n        let storeInfo = this.getCachedPBKDF2InfoKey();\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg mid ${Date.now()}`);\n        var result = crypto_js_1.AES.encrypt(msg, storeInfo.pw).toString();\n        this.saveContent(result, key);\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg end ${Date.now()}`);\n    }\n    getAndDecrypt(key) {\n        (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt start ${Date.now()}`);\n        let item = this.getItem(key);\n        if (item && item.content) {\n            let storeInfo = this.getCachedPBKDF2InfoKey();\n            (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt mid ${Date.now()}`);\n            let result = crypto_js_1.AES.decrypt(item.content, storeInfo.pw).toString(crypto_js_1.enc.Utf8);\n            (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt end ${Date.now()}`);\n            return result;\n        }\n        return null;\n    }\n    clearCache(key = undefined) {\n        if (key === undefined) {\n            // clean all\n            this.cache = {};\n            let localKey = Storage.cacheKey + this.subKey;\n            localStorage.setItem(localKey, '');\n        }\n        else {\n            let localKey = Storage.cacheKey + this.subKey;\n            const localStorage = (0, utils_1.resolveLocalStorage)();\n            log.logDebug(this.cache);\n            this.cache[key] = null;\n            let totalCacheStr = (0, utils_2.safeJsonStringify)(this.cache);\n            log.logDebug(`STORAGE: clean key ${key} @ ${this.cache}`);\n            localStorage.setItem(localKey, totalCacheStr);\n        }\n    }\n}\nexports.Storage = Storage;\nStorage.cacheKey = 'OKXStorageKey';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCONNECTOR_STORAGE_PROTOCOL_CACHE = exports.OKXCONNECTOR_STORAGE_CIPHER_METHOD = exports.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV = exports.OKXCONNECTOR_STORAGER_CRYPTO_SALT = exports.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD = exports.OKXCONNECTOR_TON_KEY = exports.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE = exports.OKXCONNECTOR_TOKEN_CACHE = exports.OKXCONNECTOR_JWT_KEY = exports.OKXCONNECTOR_SESSION_PREFIX_KEY = exports.OKXCONNECTOR_CRYPTO_KEY = exports.OKXCONNECTOR_CACHE_KEY_DAPP = exports.OKXCONNECTOR_CACHE_KEY = void 0;\nexports.OKXCONNECTOR_CACHE_KEY = \"ck\";\nexports.OKXCONNECTOR_CACHE_KEY_DAPP = \"ck_dapp\";\nexports.OKXCONNECTOR_CRYPTO_KEY = \"cck_k\";\nexports.OKXCONNECTOR_SESSION_PREFIX_KEY = \"cspk_\";\nexports.OKXCONNECTOR_JWT_KEY = \"cjk_k\";\nexports.OKXCONNECTOR_TOKEN_CACHE = \"ct\";\nexports.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE = \"csp\";\nexports.OKXCONNECTOR_TON_KEY = \"OKXStorage_ctc\";\nexports.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD = \"scp\";\nexports.OKXCONNECTOR_STORAGER_CRYPTO_SALT = \"scs\";\nexports.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV = \"scpc\";\nexports.OKXCONNECTOR_STORAGE_CIPHER_METHOD = \"aes-256-cbc\";\nexports.OKXCONNECTOR_STORAGE_PROTOCOL_CACHE = 'okx_connect_split_cache_key';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnectionManagerEvent = exports.WalletConnectionManagerTopicInfoCacheKey = void 0;\nexports.WalletConnectionManagerTopicInfoCacheKey = \"wcmtic\";\nexports.WalletConnectionManagerEvent = {\n    RECEIVE_REQUEST: \"payload\"\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnectionManager = void 0;\nconst connect_1 = require(\"./connect\");\nconst commands_1 = require(\"./commands\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst jwtconstants_1 = require(\"./jwtconstants\");\nconst constants_1 = require(\"./constants\");\nconst walletConnectionConstants_1 = require(\"./walletConnectionConstants\");\nconst connectionSplitPackages_1 = require(\"./connectionSplitPackages\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils/utils\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst jwt_1 = require(\"./jwt\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst utils_2 = require(\"../utils\");\nclass WalletConnectionManager {\n    constructor() {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.communicateEvents = new eventemitter3_1.EventEmitter();\n        this.splitManager = new connectionSplitPackages_1.ConnectionSplitPackages('wallet');\n        log.logDebug('connect manager construct');\n        // local storage\n        this.connectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n        this.jwtKeyPair = this.getCachedJWTKeyPair();\n        this.saveJWTKeyPair(this.jwtKeyPair);\n        // wss connection\n        this.connector = new connect_1.OKXWalletConnector(constants_1.OKXCONNECTOR_WS_URL_1);\n        this.packageId = Date.now();\n        // connection state\n        this.sessionCryptoInfoMap = new Map();\n        // log.logDebug(`this.connectedWalletPK  constructor   ${this.connectedWalletPK}`)\n        this.inLogin = false;\n        this.isLogined = false;\n    }\n    refreshPackageId(offset = 0) {\n        let nowDate = Date.now() + offset;\n        if (nowDate == this.packageId) {\n            this.packageId = nowDate + 1;\n        }\n        this.packageId = nowDate;\n    }\n    saveCryptoKeyPair(topicId, keyPair) {\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(keyPair);\n        // encrypt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_CRYPTO_KEY + topicId);\n    }\n    getCachedCryptoKeyPair(topicId) {\n        // decrypt kp\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_CRYPTO_KEY + topicId);\n        const content = kp;\n        if (typeof content == 'string') {\n            log.logDebug('get cached crypto key:');\n            log.logDebug(content);\n            let keyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            return keyPairInfo;\n        }\n        else {\n            this.connectStorage.clearCache();\n        }\n        return null;\n    }\n    saveJWTKeyPair(keyPair) {\n        var strkeyPair = {\n            publicKey: (0, utils_1.toHexString)(keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(keyPair.secretKey)\n        };\n        log.logDebug('save jwt kp');\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(strkeyPair);\n        log.logDebug(cacheInfo);\n        // encrypt jwt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        log.logDebug('after save jwt kp');\n    }\n    getCachedJWTKeyPair() {\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            // TODO: decrypt jwt kp\n            log.logDebug('get cached jwt kp:');\n            log.logDebug(content);\n            let strKeyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            log.logDebug('save jwt kp');\n            log.logDebug(strKeyPairInfo);\n            var keyPair = {\n                publicKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.publicKey),\n                secretKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.secretKey)\n            };\n            return keyPair;\n        }\n        else {\n            return (0, jwt_1.generateKeyPair)();\n        }\n    }\n    isTopicPublicKeyExist(topicId) {\n        log.logDebug(`isTopicPublicKeyExist  ===> ${topicId}`);\n        return this.sessionCryptoInfoMap.get(topicId);\n    }\n    makeJWT(timestampStr) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, jwt_1.signJWT)(timestampStr, jwtconstants_1.OKXCONNECTOR_JWT_WALLET_SIDE, jwtconstants_1.OKXCONNECTOR_JWT_TTL, // 24h\n            this.jwtKeyPair);\n        });\n    }\n    parseInternalMsg(internalMsg) {\n        try {\n            let internalObj = (0, safejson_1.safeJsonParse)(internalMsg);\n            let origin = internalObj['ivur-igbfft-ptjip'];\n            if (origin && origin.length > 0) {\n                let originContent = (0, utils_2.base64decode)(origin, true);\n                return originContent.toString();\n            }\n        }\n        catch (error) {\n            log.logError('parse internal msg', error);\n        }\n    }\n    updateClientId(topic, clientId) {\n        let sessionInfo = this.sessionCryptoInfoMap.get(topic);\n        (0, log_1.logDebug)('updateClientId', sessionInfo, topic, clientId);\n        if (sessionInfo && clientId && clientId.length > 0) {\n            if (sessionInfo.cid) {\n                // check\n                let lastCheck = (0, utils_1.getLastSixMd5Hash)(clientId);\n                if (sessionInfo.cid == lastCheck) {\n                    sessionInfo.dappPublicKey = clientId;\n                }\n                else {\n                    log.logError('cid check failed', sessionInfo, topic, clientId);\n                }\n            }\n            else {\n                sessionInfo.dappPublicKey = clientId;\n            }\n            // \n            this.syncCacheSessionInfo();\n        }\n        return false;\n    }\n    parsePackage(topic_1, input_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, input, ignoreACK = false) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s;\n            this.events.emit(input.id, input);\n            // emit event\n            let sessionInfo = this.sessionCryptoInfoMap.get(topic);\n            log.logDebug('get sessionInfo for decrypt topic:', topic);\n            log.logDebug('get sessionInfo for decrypt:', input.id, topic, sessionInfo, this.sessionCryptoInfoMap);\n            let ignoreReceive = false;\n            if (sessionInfo && input.params.data) {\n                if ((_a = input.params.data) === null || _a === void 0 ? void 0 : _a.message) {\n                    // try parse internal message\n                    if ((_b = input.params.data) === null || _b === void 0 ? void 0 : _b.isInternalData) {\n                        let inner_message = (_c = input.params.data) === null || _c === void 0 ? void 0 : _c.message;\n                        let inner_topic = (_d = input.params.data) === null || _d === void 0 ? void 0 : _d.topic;\n                        let originContent = this.parseInternalMsg(inner_message);\n                        (0, log_1.logDebug)('parse internal origin: ', originContent);\n                        if (originContent && originContent.length > 0) {\n                            this.communicateEvents.emit(\"origin\", originContent, inner_topic);\n                        }\n                    }\n                    else {\n                        // try parse message base64\n                        try {\n                            let message = (_e = input.params.data) === null || _e === void 0 ? void 0 : _e.message;\n                            if (message.trimStart().startsWith('{')) {\n                                // 判断是否是分包数据\n                                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(message);\n                                if (msgPlayloadObject) {\n                                    (0, log_1.logDebug)('parse split msg object: ', msgPlayloadObject);\n                                    // 屏蔽后续的receive逻辑\n                                    ignoreReceive = true;\n                                    let msgObject = {\n                                        topicId: (_g = (_f = input.params) === null || _f === void 0 ? void 0 : _f.data) === null || _g === void 0 ? void 0 : _g.topic,\n                                        messageId: (_j = (_h = input.params) === null || _h === void 0 ? void 0 : _h.data) === null || _j === void 0 ? void 0 : _j.messageId,\n                                        messageObject: msgPlayloadObject,\n                                        publishedAt: (_l = (_k = input.params) === null || _k === void 0 ? void 0 : _k.data) === null || _l === void 0 ? void 0 : _l.publishedAt,\n                                    };\n                                    let checkResult = yield this.splitManager.onReceivedPackageCheck(msgObject);\n                                    if (checkResult.completeMessageIdList) {\n                                        checkResult.completeMessageIdList.forEach((msgId) => __awaiter(this, void 0, void 0, function* () {\n                                            // 发送批量receive\n                                            this.refreshPackageId();\n                                            yield this.sendReceive(this.packageId.toString(), msgId, topic);\n                                        }));\n                                    }\n                                    // 抛出finalmessage\n                                    if (checkResult.finalMessage) {\n                                        let message = sessionInfo.crypto.decryptWallet(checkResult.finalMessage, sessionInfo.dappPublicKey);\n                                        (0, log_1.logDebug)('<<< receive msg from split:', topic, message);\n                                        this.communicateEvents.emit(topic, message);\n                                    }\n                                }\n                                else {\n                                    let messageObj = (0, safejson_1.safeJsonParse)(message);\n                                    if (messageObj.method) {\n                                        if (messageObj.method == 'session_info') {\n                                            let sessionInfoString = messageObj.params.sessionInfo;\n                                            let base64Content = (0, utils_2.base64decode)(sessionInfoString, false);\n                                            (0, log_1.logDebug)(\"wallet connection manager requset base64Content:\", base64Content);\n                                            (0, log_1.logDebug)(\"base64Content:\" + base64Content);\n                                            let inner_connection = base64Content.toObject();\n                                            this.updateClientId(topic, inner_connection.clientId);\n                                        }\n                                        (0, log_1.logDebug)('<<< parse raw msg:', topic, messageObj);\n                                        this.communicateEvents.emit(topic, message);\n                                    }\n                                }\n                            }\n                            else {\n                                let message = sessionInfo.crypto.decryptWallet((_m = input.params.data) === null || _m === void 0 ? void 0 : _m.message, sessionInfo.dappPublicKey);\n                                (0, log_1.logDebug)('<<< receive msg:', topic, message);\n                                this.communicateEvents.emit(topic, message);\n                            }\n                        }\n                        catch (error) {\n                            let message = sessionInfo.crypto.decryptWallet((_o = input.params.data) === null || _o === void 0 ? void 0 : _o.message, sessionInfo.dappPublicKey);\n                            (0, log_1.logDebug)('<<< receive msg:', topic, message);\n                            this.communicateEvents.emit(topic, message);\n                        }\n                    }\n                }\n                else {\n                }\n            }\n            // send back ACK\n            if (!ignoreACK) {\n                yield this.sendACK(input.id, true);\n                if (topic && !ignoreReceive) {\n                    let inputObj = input;\n                    if ((_q = (_p = inputObj.params) === null || _p === void 0 ? void 0 : _p.data) === null || _q === void 0 ? void 0 : _q.messageId) {\n                        this.refreshPackageId();\n                        yield this.sendReceive(this.packageId.toString(), (_s = (_r = inputObj.params) === null || _r === void 0 ? void 0 : _r.data) === null || _s === void 0 ? void 0 : _s.messageId, topic);\n                    }\n                }\n            }\n        });\n    }\n    recovrySessionInfoFromCache() {\n        // get topic ids and keys from session\n        // WalletConnectionCryptoCacheMap\n        // {[topicId]: {cryptoKeypair: {publicKey:string, secretKey:string}, dappPublicKey:clientId}}\n        let jsonStr = this.connectStorage.getAndDecrypt(walletConnectionConstants_1.WalletConnectionManagerTopicInfoCacheKey);\n        log.logDebug('get cached sessionInfos:', jsonStr);\n        if (jsonStr) {\n            let cacheMap = (0, safejson_1.safeJsonParse)(jsonStr);\n            for (let topicId in cacheMap) {\n                let topicItem = cacheMap[topicId];\n                log.logDebug('make topicItem:', topicItem);\n                let cryptoItem = {\n                    topic: topicId,\n                    crypto: new crypto_1.SessionCrypto({\n                        publicKey: topicItem.cryptoKeyPair.publicKey,\n                        secretKey: topicItem.cryptoKeyPair.secretKey\n                    }),\n                    dappPublicKey: topicItem.dappPublicKey,\n                    cid: topicItem.cid\n                };\n                this.sessionCryptoInfoMap.set(topicId, cryptoItem);\n            }\n        }\n        log.logDebug('get cached sessionInfos map:', this.sessionCryptoInfoMap);\n    }\n    syncCacheSessionInfo() {\n        let cacheMap = {};\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            log.logDebug('for each Keys', topicId);\n            if (cryptoItem) {\n                cacheMap[topicId] = {\n                    cryptoKeyPair: cryptoItem.crypto.stringifyKeypair(),\n                    dappPublicKey: cryptoItem.dappPublicKey,\n                    cid: cryptoItem.cid\n                };\n            }\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(cacheMap);\n        log.logDebug('sync cache sessionInfos:', jsonData);\n        this.connectStorage.encryptStoreMsg(jsonData, walletConnectionConstants_1.WalletConnectionManagerTopicInfoCacheKey);\n    }\n    cacheSessionInfo(topic, sessionInfo, sync = true) {\n        let dappPublicKey = sessionInfo.dappPublicKey;\n        // 1. search dapp public related topic ids\n        let duplicatedTopics = [];\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            log.logDebug('for each Keys', topicId);\n            if (cryptoItem.dappPublicKey == dappPublicKey) {\n                log.logDebug('duplicated dapp public key:', topicId, dappPublicKey);\n                duplicatedTopics.push(topicId);\n            }\n        }\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            if (duplicatedTopics.includes(topicId)) {\n                this.sessionCryptoInfoMap.delete(topicId);\n            }\n        }\n        // discard useless topics\n        log.logDebug('cleaned connect session cache:', this.sessionCryptoInfoMap);\n        // 2. remove previous connected topic ids\n        // 3. write in current topic\n        this.sessionCryptoInfoMap.set(topic, sessionInfo);\n        // TODO: search domain info and then delete \n        log.logDebug('cache sessionInfo:', topic, sessionInfo, this.sessionCryptoInfoMap);\n        if (sync) {\n            this.syncCacheSessionInfo();\n        }\n        return duplicatedTopics;\n    }\n    updateProtocolVersion(topic, protocolVersion) {\n        this.splitManager.updateTopicSenderVersion(topic, protocolVersion);\n    }\n    // add and subscribe topic\n    appendTopic(topic, sessionPublicKey, cid) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('4.1. get append Topic:', topic);\n            // 1. check if connected\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.isLogined) {\n                    var error = new Error();\n                    error.message = \"connection is not logined\";\n                    error.name = \"append error\";\n                    // throw error\n                    reject(error);\n                    return;\n                }\n                // 2. subscribe topic and session public key\n                let cryptoItem = {\n                    topic: topic,\n                    crypto: new crypto_1.SessionCrypto(),\n                    dappPublicKey: sessionPublicKey ? sessionPublicKey : \"\",\n                    cid: cid\n                };\n                let duplicatedTopics = this.cacheSessionInfo(topic, cryptoItem, false);\n                // make sure cache session info before subscribe\n                yield this.subscribeTopics(Array.from([topic]));\n                this.refreshPackageId();\n                log.logDebug(`5. subscribe callback then fetch append message: ${this.packageId}, ${topic}`);\n                log.reportLog(`5. subscribe callback then fetch append message`);\n                const timeF = new Date().getTime();\n                (0, log_1.logDebug)(\"Append --subscribe callback->\", timeF - this.timeLog);\n                resolve(duplicatedTopics);\n            }));\n        });\n    }\n    confirmAppendingTopics() {\n        this.syncCacheSessionInfo();\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.timeLog = new Date().getTime();\n            (0, log_1.logDebug)(\"[Wallet] ConnectTime---enter->\", this.timeLog);\n            log.reportLog('wallet connect connect called');\n            // 0. get cached topics and infos\n            let timestampStr = Date.now().toString();\n            var jwtToken = yield this.makeJWT(timestampStr);\n            log.logDebug(`generate jwt token: ${jwtToken}`);\n            this.connectStorage.saveContent(jwtToken, 'jwt');\n            this.recovrySessionInfoFromCache();\n            // 1.\n            return new Promise((resolve, reject) => {\n                // 1. when websocket opened\n                this.inLogin = true;\n                this.connector.onOpen(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug(`1. connector on open`);\n                    log.reportLog('1. wallet connect connect on open');\n                    const timeOne = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---open->\", timeOne - this.timeLog);\n                    //2. send jwt to login\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when login');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // throw error\n                            reject(error);\n                        }\n                        else {\n                            this.isLogined = true;\n                            resolve();\n                            // 3. subscribe cached topics\n                            log.logDebug('3. subscribe cached topics', this.sessionCryptoInfoMap);\n                            log.reportLog('3. wallet connect connect subscribe cached topics');\n                            if (this.sessionCryptoInfoMap.size > 0) {\n                                yield this.subscribeTopics(Array.from(this.sessionCryptoInfoMap.keys()));\n                            }\n                        }\n                    }));\n                    log.logDebug(`2. login called`);\n                    log.reportLog('2. wallet connect login called');\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        return yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_LOGIN,\n                        params: {\n                            token: jwtToken\n                        }\n                    });\n                }));\n                this.connector.connect().catch((err) => {\n                    (0, log_1.logDebug)('WalletConnectionManager connect error', err);\n                    reject(err);\n                });\n                // add callback\n                this.connector.addPackageParse((event) => {\n                    var _a, _b;\n                    log.logDebug(`connect: parse package`);\n                    log.logDebug(event);\n                    if (!(\"params\" in event) || !(\"data\" in event[\"params\"])) {\n                        this.parsePackage(\"\", event, true);\n                        return;\n                    }\n                    // ignore receive echo\n                    if ((_a = event.params.data) === null || _a === void 0 ? void 0 : _a.topic) {\n                        this.parsePackage((_b = event.params.data) === null || _b === void 0 ? void 0 : _b.topic, event, event.method === commands_1.CONNECT_METHOD_RECEIVE);\n                    }\n                });\n                // this.connector.addListener(safeJsonStringify(event), (rawMsg: string)=> {\n                //    rawMsg = rawMsg.replace(/'/g, '\"')\n                //    log.logDebug(`addListener ===> ${rawMsg}`)\n                //    if (typeof rawMsg !== 'undefined') {\n                //       var msgObj = safeJsonParse(rawMsg)\n                //       var msg = msgObj.message\n                //       let crypto = \n                //       var result = this.crypto.decrypt(msg, this.connectedWalletPK)\n                //       log.logDebug(`addListener ===> ${result}`)\n                //       return result\n                //    }\n                //    return undefined\n                // }, ()=>{\n                //    // emit success\n                // }, ()=>{\n                //    // emit fail\n                // })\n            });\n        });\n    }\n    // 获取对应topic session下的钱包公钥\n    // 在返回approve时需要填充到clientId字段中\n    getSessionPublicKey(topicId) {\n        if (this.isTopicPublicKeyExist(topicId)) {\n            let item = this.sessionCryptoInfoMap.get(topicId);\n            if (item) {\n                return (0, utils_1.toHexString)(item.crypto.keyPair.publicKey);\n            }\n        }\n        return undefined;\n    }\n    getCurrentCachedTopicIdList() {\n        return Array.from(this.sessionCryptoInfoMap.keys());\n    }\n    disconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            yield this.connector.disconnect();\n            //clean cached topic\n            //如果是恢复连接，就不清理解密public key\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            if (!fromRestore) {\n                this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n            }\n        });\n    }\n    sendRaw(msg, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (topic) {\n                yield this.sendMsg(topic, msg, constants_1.OKXCONNECTOR_MESSAGE_TTL);\n            }\n        });\n    }\n    sendMsg(topic, message, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (message) {\n                this.refreshPackageId();\n                const payload = {\n                    id: this.packageId.toString(),\n                    method: commands_1.CONNECT_METHOD_PUBLISH,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    params: {\n                        message: {\n                            topic: topic,\n                            message: message,\n                            ttl: ttl\n                        }\n                    } // crypted\n                };\n                this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                    // ack\n                    if (rsp && rsp.error) {\n                        log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                    }\n                    else if (rsp && !rsp.error) {\n                        log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                    }\n                }));\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    send(topic_1, msg_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, msg, needPublicKey = false, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL, useRaw = false) {\n            var _a, _b;\n            // make send msg payload\n            log.logDebug(`message send =====> ${msg}`);\n            if (!this.isTopicPublicKeyExist(topic)) {\n                // channel not ready\n                throw new Error('connection not finish');\n            }\n            let connectedDappPK = (_a = this.sessionCryptoInfoMap.get(topic)) === null || _a === void 0 ? void 0 : _a.dappPublicKey;\n            let cryptoObject = (_b = this.sessionCryptoInfoMap.get(topic)) === null || _b === void 0 ? void 0 : _b.crypto;\n            let messageObj = undefined;\n            if (useRaw) {\n                messageObj = {\n                    message: msg,\n                };\n            }\n            let useCrypto = false;\n            if (cryptoObject && connectedDappPK && !useRaw) {\n                let message = cryptoObject.encryptWallet(msg, connectedDappPK);\n                useCrypto = true;\n                messageObj = {\n                    message: message,\n                };\n            }\n            if (messageObj) {\n                if (needPublicKey && cryptoObject) {\n                    messageObj.clientId = (0, utils_1.toHexString)(cryptoObject.keyPair.publicKey);\n                    // let privateKey = toHexString(cryptoObject.keyPair.secretKey)\n                    // log.logDebug(`message send use dapp publicKey =====> ${connectedDappPK}`)\n                    // log.logDebug(`message send use publicKey =====> ${messageObj.clientId}`)\n                    // log.logDebug(`message send use secretKey =====> ${privateKey}`)\n                }\n                let messageStr = (0, safejson_1.safeJsonStringify)(messageObj);\n                if (!useRaw && useCrypto) {\n                    yield this.splitManager.sendSplitPackages(topic, messageStr, this.sendMsg.bind(this), this.sendRaw.bind(this));\n                }\n                else {\n                    yield this.sendMsg(topic, messageStr, ttl);\n                }\n            }\n        });\n    }\n    sendACK(msgId_1, success_1) {\n        return __awaiter(this, arguments, void 0, function* (msgId, success, reason = undefined) {\n            if (success === true) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    result: true\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n            else if (reason) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    error: {\n                        code: reason.code, //int\n                        message: reason.message\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    // send receive\n    sendReceive(msgId, messageId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECEIVE,\n                params: {\n                    data: {\n                        messageId: messageId,\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendUnsubscribe(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: make disconnect payload\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), {\n                id: this.packageId.toString(),\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_UNSUB,\n                params: {\n                    topic: topic\n                }\n            });\n            // remove topicId\n            this.sessionCryptoInfoMap.delete(topic);\n            this.syncCacheSessionInfo();\n        });\n    }\n    // send receive\n    // 1. fetch all \n    // 2. send back receive\n    // 3. check has more, if so, repeat from 1st step\n    sendFetchAndConsumeMessages(msgId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(msgId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic == topic) {\n                                let messageId = msg.messageId;\n                                yield this.connector.getMsgPayloadFromHistory(msg);\n                                // send receive command to relay server\n                                this.refreshPackageId();\n                                yield this.sendReceive(this.packageId.toString(), messageId, topic);\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_FETCHMSG,\n                params: {\n                    data: {\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendBatchFetchAndConsumeMessages(packageId, topicIdList) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(packageId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic) {\n                                // send receive command to relay server\n                                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(msg.message);\n                                if (msgPlayloadObject) {\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                }\n                                else {\n                                    let messageId = msg.messageId;\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                    this.refreshPackageId(i);\n                                    yield this.sendReceive(this.packageId.toString(), messageId, msg.topic);\n                                }\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendBatchFetchAndConsumeMessages(this.packageId.toString(), topicIdList);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            log.reportLog('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: packageId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_BATCH_FETCHMSG,\n                params: {\n                    topics: topicIdList,\n                    withInternalData: true\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                yield this.connector.connect();\n            }), payload);\n        });\n    }\n    cleanCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.connectStorage.clearCache();\n        });\n    }\n    saveSessionContent(key, data) {\n        if (!data) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(data);\n        this.connectStorage.encryptStoreMsg(jsonData, storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n    }\n    getSessionContent(key) {\n        let jsonStr = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        if (jsonStr) {\n            let object = (0, safejson_1.safeJsonParse)(jsonStr);\n            return object;\n        }\n        return undefined;\n    }\n    // subscribe then fetch messages for each topics\n    subscribeTopics(topicIdList) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)(\"4. topicid list\", topicIdList);\n            log.reportLog(\"4. topicid list\");\n            this.refreshPackageId();\n            const timeF = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let finishCount = 0;\n                //3. send subscribe\n                for (let idx = 0; idx < topicIdList.length; ++idx) {\n                    let topicId = topicIdList[idx];\n                    this.refreshPackageId(idx);\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when subscribe');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // reject(error)\n                            finishCount += 1;\n                            if (finishCount == topicIdList.length) {\n                                resolve();\n                            }\n                        }\n                        this.refreshPackageId(idx);\n                        const timeF = new Date().getTime();\n                        (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n                        finishCount += 1;\n                        if (finishCount == topicIdList.length) {\n                            // 4. fetch messages\n                            log.logDebug(`5. send fetch msg: ${this.packageId}, ${topicId}`);\n                            yield this.sendBatchFetchAndConsumeMessages(this.packageId.toString(), topicIdList);\n                            // 5. split manager resend\n                            yield this.splitManager.init(this.sendRaw.bind(this));\n                            resolve();\n                        }\n                    }));\n                    log.logDebug(`3. login callback then send subscribe: ${this.packageId}, ${topicId}`);\n                    log.reportLog('3. login callback then send subscribe');\n                    const timeTh = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---login callback->\", timeTh - this.timeLog);\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        return yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_SUB,\n                        params: {\n                            topic: topicId\n                        }\n                    });\n                }\n            }));\n        });\n    }\n}\nexports.WalletConnectionManager = WalletConnectionManager;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AppwalletConnector = void 0;\nconst ws_connector_1 = require(\"./ws-connector\");\nconst iconnector_1 = require(\"./iconnector\");\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../protocol/constants\");\nclass AppwalletConnector extends ws_connector_1.WsConnector {\n    static getConnector() {\n        if (!this.instance) {\n            this.instance = new AppwalletConnector();\n        }\n        return this.instance;\n    }\n    constructor() {\n        super();\n        this.walletName = 'OKX App';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectApp';\n    }\n    getTag() {\n        return iconnector_1.OKX_APP_WALLET;\n    }\n    openWallet(engineConnectInfo) {\n        var _a;\n        if (engineConnectInfo && engineConnectInfo.connectRequest) {\n            let connectRequest = engineConnectInfo.connectRequest;\n            (0, utils_1.logDebug)(`appwallet-connector openwallet before useSHortLink engineConnectInfo.connectRequest JSON ${JSON.stringify(engineConnectInfo)}`);\n            if ((0, utils_1.useShortLink)()) {\n                let shortUniversalLink = (0, utils_1.getOKXLink)(connectRequest);\n                (0, utils_1.openOKXUniversalLink)(shortUniversalLink);\n            }\n            else {\n                (0, utils_1.logDebug)(`appwallet-connector openwallet else connectRequest ${connectRequest}`);\n                let appConnectEncodeParams = (0, utils_1.encodeConnectParams)(Object.assign(Object.assign({}, connectRequest), { redirect: (_a = engineConnectInfo.redirect) !== null && _a !== void 0 ? _a : \"none\" }));\n                let appDeepLink = (0, utils_1.getAppWalletDeepLink)(appConnectEncodeParams);\n                (0, utils_1.openOKXDeeplinkWithFallback)(appDeepLink);\n            }\n        }\n        else {\n            if ((0, utils_1.isOS)('android')) {\n                (0, utils_1.openDeeplinkWithFallback)(constants_1.stackDeepLink, () => { });\n            }\n            else {\n                (0, utils_1.openLinkBlank)(constants_1.standardUniversalLink);\n            }\n        }\n    }\n}\nexports.AppwalletConnector = AppwalletConnector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_TG_WALLET = exports.OKX_APP_WALLET = exports.OKX_INJECT_WALLET = void 0;\nexports.OKX_INJECT_WALLET = \"okx_inject_wallet\";\nexports.OKX_APP_WALLET = \"okx_app_wallet\";\nexports.OKX_TG_WALLET = \"okx_tg_wallet\";\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OkxwalletInjectConnector = exports.WsConnector = exports.TgwalletConnector = exports.InjectConnector = exports.OKX_INJECT_WALLET = exports.OKX_APP_WALLET = exports.OKX_TG_WALLET = exports.AppwalletConnector = void 0;\nvar appwallet_connector_1 = require(\"./appwallet-connector\");\nObject.defineProperty(exports, \"AppwalletConnector\", { enumerable: true, get: function () { return appwallet_connector_1.AppwalletConnector; } });\nvar iconnector_1 = require(\"./iconnector\");\nObject.defineProperty(exports, \"OKX_TG_WALLET\", { enumerable: true, get: function () { return iconnector_1.OKX_TG_WALLET; } });\nObject.defineProperty(exports, \"OKX_APP_WALLET\", { enumerable: true, get: function () { return iconnector_1.OKX_APP_WALLET; } });\nObject.defineProperty(exports, \"OKX_INJECT_WALLET\", { enumerable: true, get: function () { return iconnector_1.OKX_INJECT_WALLET; } });\nvar inject_connector_1 = require(\"./inject-connector\");\nObject.defineProperty(exports, \"InjectConnector\", { enumerable: true, get: function () { return inject_connector_1.InjectConnector; } });\nvar tgwallet_connector_1 = require(\"./tgwallet-connector\");\nObject.defineProperty(exports, \"TgwalletConnector\", { enumerable: true, get: function () { return tgwallet_connector_1.TgwalletConnector; } });\nvar ws_connector_1 = require(\"./ws-connector\");\nObject.defineProperty(exports, \"WsConnector\", { enumerable: true, get: function () { return ws_connector_1.WsConnector; } });\nvar okxwallet_inject_connector_1 = require(\"./okxwallet-inject-connector\");\nObject.defineProperty(exports, \"OkxwalletInjectConnector\", { enumerable: true, get: function () { return okxwallet_inject_connector_1.OkxwalletInjectConnector; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InjectConnector = void 0;\nconst protocol_1 = require(\"../protocol\");\nconst utils_1 = require(\"../utils\");\nconst iconnector_1 = require(\"./iconnector\");\nconst SolProvider_1 = require(\"../inject/provider/SolProvider\");\nconst wallet_info_1 = require(\"../protocol/connect/wallet-info\");\nconst AptosProvider_1 = require(\"../inject/provider/AptosProvider\");\nconst media_1 = require(\"../utils/media\");\nconst TONProvider_1 = require(\"../inject/provider/TONProvider\");\nconst inject_1 = require(\"../inject\");\nconst sui_provider_1 = require(\"../inject/provider/sui-provider\");\nconst utils_2 = require(\"../utils/utils\");\nconst sessionUtils_1 = require(\"../connect/sessionUtils\");\nclass InjectConnector {\n    constructor() {\n        this.disconnectListener = [];\n        this.providerMap = new Map();\n        this.accountChangedEVMHandler = null;\n        this.accountChangedSolanaPublicKeyHandler = null;\n        this.accountChangedTONHandler = null;\n        this.disconnectHandler = null;\n        this.walletName = \"\";\n        this.walletNameKey = '';\n        this.enable = true;\n        this.providerMap.set(protocol_1.NameSpaceKeyEip155, new inject_1.Eip155Provider());\n        this.providerMap.set(protocol_1.NameSpaceKeySOL, new SolProvider_1.SolProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeyAptos, new AptosProvider_1.AptosProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeyTON, new TONProvider_1.TONProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeySui, new sui_provider_1.SuiProvider());\n    }\n    setAccountChangeListener(accountChangeListener) {\n        (0, utils_1.logDebug)(\"setAccountChangeListener: inject\", accountChangeListener);\n        this.accountChangeListener = accountChangeListener;\n    }\n    setConnectionManager(connectionManager) {\n        this.connectionManager = connectionManager;\n    }\n    getInjectProvider(nameSpace) {\n        for (const [mapKey, value] of this.providerMap.entries()) {\n            if (nameSpace.includes(mapKey)) {\n                return value;\n            }\n        }\n        return undefined;\n    }\n    openWallet(engineConnectInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c;\n            (0, utils_1.logDebug)(\"InjectEngine connect begin:\", JSON.stringify(engineConnectInfo));\n            if (!engineConnectInfo) {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR);\n            }\n            this.dappInfo = engineConnectInfo.connectRequest.dAppInfo;\n            var universalConnectRequest = engineConnectInfo.connectRequest;\n            try {\n                if (window && window.okxwallet) {\n                    if (universalConnectRequest.requests) {\n                        let requestAccounts = universalConnectRequest.requests\n                            .find(item => item.name === \"requestAccounts\");\n                        let version = yield window.okxwallet.getVersion();\n                        let result = {\n                            method: \"connect\",\n                            requestId: universalConnectRequest.requestId,\n                            payload: {\n                                wallet: {\n                                    platform: (_a = navigator.platform) !== null && _a !== void 0 ? _a : \"/\",\n                                    appName: wallet_info_1.OKXInjectWalletName,\n                                    appVersion: version !== null && version !== void 0 ? version : \"1.0.0\",\n                                    maxProtocolVersion: 1,\n                                },\n                                responses: []\n                            },\n                        };\n                        let responseItem = {\n                            name: \"requestAccounts\",\n                            accounts: [],\n                        };\n                        result.payload.responses.push(responseItem);\n                        yield this.disconnect();\n                        const required = (_b = requestAccounts.requiredNamespaces) !== null && _b !== void 0 ? _b : [];\n                        const optional = (_c = requestAccounts.optionalNamespaces) !== null && _c !== void 0 ? _c : [];\n                        let needPop = true;\n                        let signalChain = false;\n                        if (required.length + optional.length === 1 && !(0, media_1.isDevice)(\"mobile\")) {\n                            const singleItem = required.length === 1 ? required[0] : optional[0];\n                            const singleProvider = this.getInjectProvider(singleItem.namespace);\n                            yield (singleProvider === null || singleProvider === void 0 ? void 0 : singleProvider.connect(singleItem, this.dappInfo));\n                            signalChain = true;\n                            needPop = false;\n                        }\n                        var accounts = yield this.getAccountByRequestWallets(needPop, false, signalChain, required, optional);\n                        if (accounts) {\n                            responseItem.accounts.push(...accounts);\n                            if (responseItem.accounts.length === 0) {\n                                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect connectAccounts is null\");\n                            }\n                        }\n                        else {\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect requestWallets is null\");\n                        }\n                        if (this.connectResultListener) {\n                            if (this.disconnectHandler) {\n                                window.okxwallet.removeListener('disconnect', this.disconnectHandler);\n                            }\n                            this.disconnectHandler = () => {\n                                console.log(\"window.okxwallet disconnect:\");\n                                this.disconnectListener.forEach(listener => listener());\n                                this.disconnectListener = [];\n                            };\n                            window.okxwallet.on('disconnect', this.disconnectHandler);\n                            this.connectResultListener(result);\n                        }\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR);\n                }\n            }\n            catch (error) {\n                var code = protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR;\n                var message = '';\n                if (error instanceof protocol_1.OKXConnectError) {\n                    code = error.code;\n                    message = error.message;\n                }\n                if (this.connectResultListener) {\n                    this.connectResultListener({\n                        requestId: \"-1\",\n                        method: 'connect_error',\n                        payload: {\n                            code: code\n                        }\n                    });\n                }\n            }\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, utils_1.logDebug)('InjectEngine ==>> disconnect  okxwallet.disconnect()');\n            if (window.okxwallet) {\n                yield window.okxwallet.disconnect();\n                (0, utils_1.logDebug)('InjectEngine ==>> disconnect end okxwallet.disconnect()');\n            }\n        });\n    }\n    getRequestId() {\n        const requestId = Date.now().toString();\n        (0, utils_1.logDebug)('InjectEngine ==>> getRequestId ==>', requestId);\n        return requestId;\n    }\n    send(request, requestAnswer) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                (0, utils_1.logDebug)(\"InjectEngine send  > request:\", (0, utils_1.safeJsonStringify)(request));\n                let newRequest = request;\n                if (newRequest.method === 'disconnect') {\n                    yield this.disconnect();\n                    this.disconnectListener.forEach(listener => listener());\n                    this.disconnectListener = [];\n                    (_a = requestAnswer.onAck) === null || _a === void 0 ? void 0 : _a.call(requestAnswer);\n                    return;\n                }\n                if ('fromOKXTonsdk' in request && !!request.fromOKXTonsdk) {\n                    yield this.checkTonsdkWalletMatch();\n                    delete request.fromOKXTonsdk;\n                }\n                else {\n                    yield this.checkWalletMatch();\n                }\n                const injectProvider = this.getInjectProvider(newRequest.chainId);\n                if (injectProvider) {\n                    injectProvider.send(newRequest).then(result => {\n                        var _a;\n                        (0, utils_1.logDebug)(\"InjectEngine ==>> send > result:\", result);\n                        (_a = requestAnswer.resolve) === null || _a === void 0 ? void 0 : _a.call(requestAnswer, result);\n                    }).catch(error => {\n                        var _a;\n                        let code = error.code;\n                        if (code === 4001) {\n                            code = protocol_1.OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR;\n                        }\n                        let errorResponse = {\n                            requestId: this.getRequestId(),\n                            method: request.method,\n                            error: {\n                                code: code,\n                                message: error.message\n                            }\n                        };\n                        (0, utils_1.logDebug)(\"InjectEngine ==>> send > errorResponse:\", JSON.stringify(errorResponse));\n                        (_a = requestAnswer.resolve) === null || _a === void 0 ? void 0 : _a.call(requestAnswer, errorResponse);\n                    });\n                    return;\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"InjectEngine ==>> send  ===> error:\", error);\n                return Promise.reject(error);\n            }\n        });\n    }\n    checkTonsdkWalletMatch() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            let stored = (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.tonsdkConnectStorage.getItem('ton_connect_info_adapter_universal');\n            if (!stored || !(stored === null || stored === void 0 ? void 0 : stored.content)) {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            const content = stored === null || stored === void 0 ? void 0 : stored.content;\n            let connection = JSON.parse(content);\n            let localItem = connection.connectEvent.payload.items.find((item) => {\n                if ('name' in item) {\n                    return item.name === 'ton_addr';\n                }\n                return false;\n            });\n            let localAddress = undefined;\n            if (localItem && 'address' in localItem) {\n                localAddress = localItem.address;\n            }\n            if (!localAddress) {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED);\n            }\n            (0, utils_1.logDebug)(`inject-connector localTonaddress : ${localAddress}`);\n            const result = yield window.okxTonWallet.tonconnect.restoreConnection();\n            if (result.event === 'connect') {\n                if (localAddress === result.payload.items[0].address) {\n                    return;\n                }\n            }\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED);\n        });\n    }\n    checkWalletMatch() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                var _a;\n                let sessionLocal = (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getSessionContent('connectSession');\n                if (!sessionLocal) {\n                    reject(new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED));\n                }\n                this.restoreconnect(sessionLocal, (session) => {\n                    if (session) {\n                        resolve();\n                    }\n                    else {\n                        reject(new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED));\n                    }\n                });\n            });\n        });\n    }\n    checkAccountChanged() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                let sessionLocal = (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getSessionContent('connectSession');\n                if (!sessionLocal) {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED);\n                }\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --sessionInfo:\", JSON.stringify(sessionLocal));\n                let requiredNamespaces = this.getRequireNameSpaceFromSession(sessionLocal);\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --requiredNamespaces:\", JSON.stringify(requiredNamespaces));\n                // 使用 await 等待异步操作完成\n                let accounts = yield this.getAccountByRequestWallets(false, true, false, requiredNamespaces, []);\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --accounts:\", JSON.stringify(accounts));\n                if (accounts) {\n                    let resultNameSpace = {};\n                    (0, sessionUtils_1.buildAccountNameSpaces)(accounts, resultNameSpace);\n                    if (!this.compareAndModifyNamespaces(sessionLocal.namespaces, resultNameSpace)) {\n                        (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --result sessionLocal:\", JSON.stringify(sessionLocal));\n                        if (this.accountChangeListener) {\n                            (0, utils_1.logDebug)(\"inject-connector checkAccountChanged -accountChangeListener:\", this.accountChangeListener);\n                            this.accountChangeListener(sessionLocal);\n                        }\n                        else {\n                            (0, utils_1.logDebug)(\"inject-connector checkAccountChanged disconnect:\");\n                            yield this.disconnect();\n                        }\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect requestWallets is null\");\n                }\n            }\n            catch (e) {\n                (0, utils_1.logDebug)(\"inject-connector restoreconnect catch error\", JSON.stringify(e));\n                throw e;\n            }\n        });\n    }\n    compareAndModifyNamespaces(nameSpaces1, nameSpaces2) {\n        let isAccountsSame = true;\n        for (const key in nameSpaces1) {\n            if (nameSpaces2[key]) {\n                const ns1 = nameSpaces1[key];\n                const ns2 = nameSpaces2[key];\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged ns1:\", JSON.stringify(ns1));\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged ns2:\", JSON.stringify(ns2));\n                const areAccountsSame = JSON.stringify([...ns1.accounts].sort()) === JSON.stringify([...ns2.accounts].sort());\n                if (!areAccountsSame) {\n                    isAccountsSame = false;\n                    ns1.accounts = [...ns2.accounts];\n                    ns1.extra = Object.assign({}, ns2.extra);\n                    ns1.payload = Object.assign({}, ns2.payload);\n                }\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged new ns1:\", JSON.stringify(ns1));\n            }\n        }\n        (0, utils_1.logDebug)(`inject-connector checkAccountChanged compareAndModifyNamespaces ===> ${isAccountsSame}`);\n        return isAccountsSame;\n    }\n    clearData() {\n        this.connectResultListener = undefined;\n    }\n    addDisconnectListener(disconnecter) {\n        this.disconnectListener.push(disconnecter);\n    }\n    setOnConnectResultListener(connectResultListener) {\n        this.connectResultListener = connectResultListener;\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (_ = false) {\n        });\n    }\n    getCurrentConnectionReady(namespaceKeys) {\n        if (!namespaceKeys) {\n            return false;\n        }\n        const allReady = namespaceKeys.every(namespaceKey => { var _a; return (_a = this.getInjectProvider(namespaceKey)) === null || _a === void 0 ? void 0 : _a.connectReady(); });\n        return allReady;\n    }\n    getTag() {\n        return iconnector_1.OKX_INJECT_WALLET;\n    }\n    toJSON() {\n        return \"inject-connector\";\n    }\n    getRequireNameSpaceFromSession(sessionInfo) {\n        var _a, _b;\n        var requiredNamespaces = [];\n        for (let namespacesKey in sessionInfo.namespaces) {\n            let nameSpace = sessionInfo.namespaces[namespacesKey];\n            let connectWalletNameSpace = {\n                namespace: namespacesKey,\n                chains: nameSpace.chains\n            };\n            if (namespacesKey === protocol_1.NameSpaceKeyAptos) {\n                let aptosChains = [];\n                nameSpace.chains.forEach((chainStr) => {\n                    let aptosChain = (0, utils_2.replaceAptosChainName)(chainStr);\n                    aptosChains.push(aptosChain);\n                });\n                connectWalletNameSpace = {\n                    namespace: namespacesKey,\n                    chains: aptosChains\n                };\n            }\n            else if (namespacesKey === protocol_1.NameSpaceKeyTON) {\n                let ton_proof_result_Item = undefined;\n                let proofItem = undefined;\n                if ((_a = nameSpace.payload) === null || _a === void 0 ? void 0 : _a.ton_proof) {\n                    ton_proof_result_Item = (_b = nameSpace.payload) === null || _b === void 0 ? void 0 : _b.ton_proof;\n                    if (ton_proof_result_Item.proof.payload) {\n                        proofItem = {\n                            name: \"ton_proof\",\n                            payload: ton_proof_result_Item.proof.payload\n                        };\n                    }\n                }\n                connectWalletNameSpace = {\n                    namespace: namespacesKey,\n                    chains: nameSpace.chains,\n                    params: {\n                        ton_addr: { name: 'ton_addr' },\n                        ton_proof: proofItem\n                    },\n                };\n            }\n            requiredNamespaces.push(connectWalletNameSpace);\n        }\n        return requiredNamespaces;\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        var _a;\n        if (!window.okxwallet) {\n            onConnectResult(null);\n            return;\n        }\n        this.dappInfo = (_a = sessionInfo.sessionConfig) === null || _a === void 0 ? void 0 : _a.dappInfo;\n        (0, utils_1.logDebug)(\"inject-connector restoreconnect --sessionInfo:\", JSON.stringify(sessionInfo));\n        var requiredNamespaces = this.getRequireNameSpaceFromSession(sessionInfo);\n        (0, utils_1.logDebug)(\"inject-connector restoreconnect --requiredNamespaces:\", JSON.stringify(requiredNamespaces));\n        this.getAccountByRequestWallets(false, false, false, requiredNamespaces, [])\n            .then((accounts) => {\n            (0, utils_1.logDebug)(\"inject-connector restoreconnect --accounts:\", JSON.stringify(accounts));\n            //compare account with sessionInfo\n            let allEqual = true;\n            for (let namespacesKey in sessionInfo.namespaces) {\n                var accountsItem = accounts.find((item) => item.namespace === namespacesKey);\n                var sessionAccounts = sessionInfo.namespaces[namespacesKey].accounts;\n                if (!accountsItem) {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"resotreconnect error: accountItem error\");\n                }\n                const areEqual = accountsItem.addresses.length === sessionAccounts.length &&\n                    accountsItem.addresses.slice().sort().every((value, index) => {\n                        if (namespacesKey === protocol_1.NameSpaceKeyAptos) {\n                            let aptosAdd = sessionAccounts.slice().sort()[index];\n                            (0, utils_1.logDebug)(\"check aptos address -value and aptosAdd--\", value, aptosAdd);\n                            aptosAdd = (0, utils_2.replaceAptosChainName)(aptosAdd);\n                            return aptosAdd === value;\n                        }\n                        else {\n                            return value === sessionAccounts.slice().sort()[index];\n                        }\n                    });\n                if (!areEqual) {\n                    allEqual = false;\n                }\n            }\n            if (allEqual) {\n                onConnectResult(sessionInfo);\n            }\n            else {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"resotreconnect error: address not as same as session\");\n            }\n        }).catch((e) => {\n            (0, utils_1.logDebug)(\"inject-connector restoreconnect catch error\", JSON.stringify(e));\n            onConnectResult(null);\n        });\n    }\n    getAccountByRequestWallets(needPop, isAccountChange, signalChain, requiredNamespaces, optionalNamespaces) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                var walletInfo = [];\n                var accountResult = [];\n                if ((0, media_1.isDevice)(\"mobile\")) {\n                    var walletInfoItem = yield window.okxwallet.connectWallet(needPop, {\n                        requiredNamespaces: requiredNamespaces,\n                        optionalNamespaces: optionalNamespaces\n                    });\n                    walletInfo.push(walletInfoItem);\n                }\n                else {\n                    walletInfo = (yield window.okxwallet.requestWallets(needPop));\n                }\n                var allNameSpace = [...(requiredNamespaces !== null && requiredNamespaces !== void 0 ? requiredNamespaces : []), ...(optionalNamespaces !== null && optionalNamespaces !== void 0 ? optionalNamespaces : [])];\n                let walletInfoFirst = walletInfo[0];\n                (0, utils_1.logDebug)(\" InjectEngine connect connectAccounts:\", JSON.stringify(walletInfoFirst));\n                let eventkey;\n                let hasTON = false;\n                if (allNameSpace && walletInfoFirst && walletInfoFirst.address) {\n                    for (const [mapKey, provider] of this.providerMap.entries()) {\n                        let itemResult = yield provider.parseConnectResponse(needPop, isAccountChange, signalChain, allNameSpace, walletInfoFirst, this.dappInfo);\n                        if (itemResult) {\n                            eventkey = mapKey;\n                            accountResult.push(itemResult);\n                            if (mapKey === protocol_1.NameSpaceKeyTON) {\n                                hasTON = true;\n                            }\n                        }\n                    }\n                }\n                // check require\n                let cheeckRequire = requiredNamespaces.every(requireItem => {\n                    // requireItem.namespace\n                    let resultSel = accountResult.find(resultItem => {\n                        return resultItem.namespace === requireItem.namespace;\n                    });\n                    if (resultSel) {\n                        let hasChainAdd = requireItem.chains.every(chain => {\n                            let addItem = resultSel.addresses.find(address => {\n                                return address.startsWith(chain + \":\");\n                            });\n                            return !!addItem;\n                        });\n                        return hasChainAdd;\n                    }\n                    return false;\n                });\n                (0, utils_1.logDebug)(\"InjectEngine connect requiredNamespaces:\", JSON.stringify(requiredNamespaces));\n                (0, utils_1.logDebug)(\"InjectEngine connect accountResult:\", JSON.stringify(accountResult));\n                if (!cheeckRequire) {\n                    yield this.disconnect();\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED);\n                }\n                if (!(0, media_1.isDevice)(\"mobile\")) {\n                    this.configEventWithKey(eventkey, hasTON);\n                    yield window.okxwallet.requestWallets(needPop);\n                }\n                return accountResult;\n            }\n            catch (e) {\n                if (e && typeof e === \"object\" && \"code\" in e) {\n                    if (e.code === 4001) {\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR);\n                    }\n                }\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n            }\n        });\n    }\n    configEventWithKey(key, hasTON) {\n        if (window.okxwallet && key) {\n            if (this.accountChangedEVMHandler) {\n                window.okxwallet.removeListener('accountsChanged', this.accountChangedEVMHandler);\n            }\n            if (this.accountChangedSolanaPublicKeyHandler) {\n                window.okxwallet.solana.removeListener('accountChanged', this.accountChangedSolanaPublicKeyHandler);\n                window.okxwallet.sui.removeListener('accountChanged', this.accountChangedSolanaPublicKeyHandler);\n            }\n            if (this.accountChangedTONHandler) {\n                window.okxTonWallet.tonconnect.off('accountChanged', this.accountChangedTONHandler);\n            }\n            if (hasTON) {\n                console.log(\"window.okxwallet configEventWithKey:\", key);\n                this.accountChangedTONHandler = () => {\n                    console.log(\"window.okxwallet configEventWithKey_TON:\", Date.now(), key);\n                    this.checkAccountChanged().catch(e => {\n                        console.log(\"window.okxwallet configEventWithKey error: \", e);\n                    });\n                };\n                window.okxTonWallet.tonconnect.on('accountChanged', this.accountChangedTONHandler);\n            }\n            else {\n                switch (key) {\n                    case protocol_1.NameSpaceKeyEip155:\n                        {\n                            console.log(\"window.okxwallet configEventWithKey:\", key);\n                            this.accountChangedEVMHandler = (accounts) => {\n                                console.log(\"window.okxwallet configEventWithKey_evm:\", Date.now(), key, accounts);\n                                if (accounts && accounts.length > 0) { //\n                                    this.checkAccountChanged().catch(e => {\n                                        console.log(\"window.okxwallet configEventWithKey error: \", e);\n                                    });\n                                }\n                            };\n                            window.okxwallet.on('accountsChanged', this.accountChangedEVMHandler);\n                        }\n                        break;\n                    case protocol_1.NameSpaceKeySOL:\n                        {\n                            console.log(\"window.okxwallet configEventWithKey:\", key);\n                            this.accountChangedSolanaPublicKeyHandler = (publicKey) => {\n                                console.log(\"window.okxwallet configEventWithKey_solana:\", Date.now(), key, publicKey);\n                                if (publicKey) {\n                                    this.checkAccountChanged().catch(e => {\n                                        console.log(\"window.okxwallet configEventWithKey error: \", e);\n                                    });\n                                }\n                            };\n                            window.okxwallet.solana.on('accountChanged', this.accountChangedSolanaPublicKeyHandler);\n                        }\n                        break;\n                    case protocol_1.NameSpaceKeySui:\n                        {\n                            console.log(\"window.okxwallet configEventWithKey:\", key);\n                            this.accountChangedSolanaPublicKeyHandler = (publicKey) => {\n                                console.log(\"window.okxwallet configEventWithKey_sui:\", Date.now(), key, publicKey);\n                                if (publicKey) {\n                                    this.checkAccountChanged().catch(e => {\n                                        console.log(\"window.okxwallet configEventWithKey error: \", e);\n                                    });\n                                }\n                            };\n                            window.okxwallet.sui.on('accountChanged', this.accountChangedSolanaPublicKeyHandler);\n                        }\n                        break;\n                    case protocol_1.NameSpaceKeyTON:\n                        {\n                            console.log(\"window.okxwallet configEventWithKey:\", key);\n                        }\n                        break;\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n}\nexports.InjectConnector = InjectConnector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OkxwalletInjectConnector = void 0;\nconst inject_connector_1 = require(\"./inject-connector\");\nclass OkxwalletInjectConnector extends inject_connector_1.InjectConnector {\n    static getConnector() {\n        if (!this.instance) {\n            this.instance = new OkxwalletInjectConnector();\n        }\n        return this.instance;\n    }\n    constructor() {\n        super();\n        this.walletName = 'OKX Wallet extension';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectInjected';\n    }\n}\nexports.OkxwalletInjectConnector = OkxwalletInjectConnector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TgwalletConnector = void 0;\nconst ws_connector_1 = require(\"./ws-connector\");\nconst iconnector_1 = require(\"./iconnector\");\nconst utils_1 = require(\"../utils\");\nclass TgwalletConnector extends ws_connector_1.WsConnector {\n    static getConnector() {\n        if (!this.instance) {\n            this.instance = new TgwalletConnector();\n        }\n        return this.instance;\n    }\n    constructor() {\n        super();\n        this.walletName = 'OKX Mini Wallet';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectMini';\n    }\n    getTag() {\n        return iconnector_1.OKX_TG_WALLET;\n    }\n    openWallet(engineConnectInfo) {\n        var _a;\n        var encodeTGParams;\n        if (engineConnectInfo && engineConnectInfo.connectRequest) {\n            encodeTGParams = (0, utils_1.encodeTWAConnectURLParams)(Object.assign(Object.assign({}, engineConnectInfo.connectRequest), { redirect: \"none\" }));\n        }\n        var tgUrl = (0, utils_1.getTelegramWalletTWAUrl)(encodeTGParams, (_a = engineConnectInfo === null || engineConnectInfo === void 0 ? void 0 : engineConnectInfo.tmaReturnUrl) !== null && _a !== void 0 ? _a : \"back\");\n        (0, utils_1.openOKXTMAWalletlinkWithFallback)(tgUrl);\n    }\n}\nexports.TgwalletConnector = TgwalletConnector;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WsConnector = void 0;\nconst safejson_1 = require(\"../utils/safejson\");\nconst log_1 = require(\"../utils/log\");\nclass WsConnector {\n    constructor() {\n        this.disconnectListener = [];\n        this.walletName = '';\n        this.walletNameKey = '';\n        this.enable = true;\n        this.pendingRequests = new Map();\n        // report api begin\n        (0, log_1.getDefaultReporter)().beginReport();\n    }\n    setAccountChangeListener(accountChangeListener) {\n        this.accountChangeListener = accountChangeListener;\n    }\n    setConnectionManager(connectionManager) {\n        this.connectionManager = connectionManager;\n    }\n    addConnectionListener() {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.addListener(\"sdk_response\", (event, msg) => {\n            var jsonResponse = (0, safejson_1.safeJsonParse)(msg);\n            (0, log_1.logDebug)(`Engine ==>> addListener ==> success ==> ${jsonResponse}`);\n            this.handleResponse(event, jsonResponse);\n        }, function () {\n        });\n    }\n    addDisconnectListener(disconnecter) {\n        this.disconnectListener.push(disconnecter);\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.disconnect(fromRestore));\n        });\n    }\n    openWallet(engineConnectInfo) {\n    }\n    bindRequestForPromise(requestId, resolve) {\n        this.pendingRequests.set(requestId, resolve);\n    }\n    send(request, requestAnswer, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            (0, log_1.logDebug)('Engine ==>> send  request==>', JSON.stringify(request));\n            const requestId = this.getRequestId();\n            try {\n                let packageId = yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.send(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId })), ttl));\n                if (packageId) {\n                    (_b = this.connectionManager) === null || _b === void 0 ? void 0 : _b.events.once(packageId.toString(), (event) => {\n                        var _a;\n                        (0, log_1.logDebug)(`Engine ==> send => onAck => ${(0, safejson_1.safeJsonStringify)(event)}`);\n                        if (event && event.result) {\n                            (_a = requestAnswer.onAck) === null || _a === void 0 ? void 0 : _a.call(requestAnswer);\n                        }\n                    });\n                }\n                if (requestAnswer.resolve) {\n                    this.bindRequestForPromise(requestId, requestAnswer.resolve);\n                }\n            }\n            catch (e) {\n                return Promise.reject(e);\n            }\n        });\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.restoreConnect(sessionInfo.topic));\n            onConnectResult(sessionInfo);\n        });\n    }\n    restoreconnectFromTopic(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.restoreConnect(topic));\n        });\n    }\n    getRequestId() {\n        const requestId = Date.now().toString();\n        (0, log_1.logDebug)('Engine ==>> getRequestId ==>', requestId);\n        return requestId;\n    }\n    handleResponse(event, response) {\n        (0, log_1.logDebug)(`Engine ==>> handleResponse_1  ======>response: ${(0, safejson_1.safeJsonStringify)(response)}`, event);\n        if (\"requestId\" in response) {\n            (0, log_1.logDebug)(\"Engine ==>> handleResponse_2  ===> in response\");\n            let requestId = response.requestId;\n            const resolve = this.pendingRequests.get(requestId);\n            if (resolve) {\n                (0, log_1.logDebug)(\"Engine ==>> handleResponse_3  ===> find resolve:\", resolve);\n                resolve(response);\n                // 从pendingRequests中删除这个Promise\n                this.pendingRequests.delete(requestId);\n            }\n            else {\n                (0, log_1.logDebug)(\"Engine ==>> handleResponse_3  ===> not find resolve:\");\n                if (response.method === \"disconnect\") {\n                    this.disconnectListener.forEach(listener => listener());\n                    this.disconnectListener = [];\n                    this.clearData();\n                }\n            }\n        }\n    }\n    getCurrentConnectionReady() {\n        var _a;\n        return !!((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getCurrentConnectionReady());\n    }\n    saveSessionContent(key, data) {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.saveSessionContent(key, data);\n    }\n    getSessionContent(key) {\n        var _a;\n        return (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getSessionContent(key);\n    }\n    setOnConnectResultListener(connectResultListener) {\n        this.connectResultListener = connectResultListener;\n    }\n    getTag() {\n        return \"\";\n    }\n    toJSON() {\n        return \"ws-connector\";\n    }\n    clearData() {\n        this.pendingRequests.clear();\n    }\n}\nexports.WsConnector = WsConnector;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SessionCrypto = void 0;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst utils_1 = require(\"../utils/utils\");\nclass SessionCrypto {\n    constructor(keyPair = undefined) {\n        this.nonceLength = 24;\n        this.sessionKeyPair = keyPair ? this.createKeypairFromString(keyPair) : this.createKeypair();\n    }\n    createKeypair() {\n        return tweetnacl_1.default.box.keyPair();\n    }\n    createKeypairFromString(keyPair) {\n        return {\n            publicKey: (0, utils_1.hexToByteArray)(keyPair.publicKey),\n            secretKey: (0, utils_1.hexToByteArray)(keyPair.secretKey),\n        };\n    }\n    createNonce() {\n        return tweetnacl_1.default.randomBytes(this.nonceLength);\n    }\n    get keyPair() {\n        return this.sessionKeyPair;\n    }\n    // dapp 加密:\n    // base64(hex（nonce+加密内容）)\n    encrypt(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl_1.default.box(encodedMessage, nonce, (0, utils_1.hexToByteArray)(receiverPublicKey), this.keyPair.secretKey);\n        let concatInfo = (0, utils_1.concatUint8Arrays)(nonce, encrypted);\n        var hexResult = (0, utils_1.toHexString)(concatInfo);\n        var encodedResult = new TextEncoder().encode(hexResult);\n        return (0, utils_1.base64encode)(encodedResult, false);\n    }\n    // 钱包加密内容\n    // 注意：没有中间hex的环节\n    // base64（nonce+加密内容)\n    encryptWallet(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl_1.default.box(encodedMessage, nonce, (0, utils_1.hexToByteArray)(receiverPublicKey), this.keyPair.secretKey);\n        let concatInfo = (0, utils_1.concatUint8Arrays)(nonce, encrypted);\n        return (0, utils_1.base64encode)(concatInfo, false);\n    }\n    // dapp 解密\n    // base64(split(nonce+加密内容))\n    decrypt(message, senderPublicKey) {\n        let base64Content = (0, utils_1.base64decode)(message, true);\n        let messageByteArray = base64Content.toUint8Array();\n        const [nonce, internalMessage] = (0, utils_1.splitToUint8Arrays)(messageByteArray, this.nonceLength);\n        const decrypted = tweetnacl_1.default.box.open(internalMessage, nonce, (0, utils_1.hexToByteArray)(senderPublicKey), this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${(0, utils_1.toHexString)(this.keyPair.publicKey)} \\n keypair secretkey: ${(0, utils_1.toHexString)(this.keyPair.secretKey)}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    // dapp 解密\n    // base64(hextoByte(split(nonce+加密内容)))\n    decryptWallet(message, senderPublicKey) {\n        let base64Content = (0, utils_1.base64decode)(message, true);\n        let messageByteArray = (0, utils_1.hexToByteArray)(base64Content.toString());\n        const [nonce, internalMessage] = (0, utils_1.splitToUint8Arrays)(messageByteArray, this.nonceLength);\n        const decrypted = tweetnacl_1.default.box.open(internalMessage, nonce, (0, utils_1.hexToByteArray)(senderPublicKey), this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${(0, utils_1.toHexString)(this.keyPair.publicKey)} \\n keypair secretkey: ${(0, utils_1.toHexString)(this.keyPair.secretKey)}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    stringifyKeypair() {\n        return {\n            publicKey: (0, utils_1.toHexString)(this.keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(this.keyPair.secretKey)\n        };\n    }\n}\nexports.SessionCrypto = SessionCrypto;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./connect\"), exports);\n__exportStar(require(\"./protocol\"), exports);\n__exportStar(require(\"./utils\"), exports);\n__exportStar(require(\"./inject\"), exports);\n__exportStar(require(\"./connector\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuiMethods = exports.TONMethods = exports.AptosMethods = exports.SOLANAMethods = exports.Eip55Methods = void 0;\nexports.hasOKXInjectedProvider = hasOKXInjectedProvider;\nfunction hasOKXInjectedProvider() {\n    if (typeof getWindowProviderNamespace(\"okxwallet\") !== 'undefined') {\n        return true;\n    }\n    return false;\n}\nfunction getWindowProviderNamespace(namespace) {\n    const providerSearch = (provider, namespace) => {\n        const [property, ...path] = namespace.split('.');\n        const _provider = provider[property];\n        if (_provider) {\n            if (path.length === 0)\n                return _provider;\n            return providerSearch(_provider, path.join('.'));\n        }\n    };\n    if (typeof window !== 'undefined')\n        return providerSearch(window, namespace);\n}\nexports.Eip55Methods = [\n    \"personal_sign\",\n    \"eth_signTypedData_v4\",\n    \"eth_sendTransaction\",\n    \"wallet_addEthereumChain\",\n    \"wallet_watchAsset\",\n    \"wallet_switchEthereumChain\",\n    \"eth_requestAccounts\",\n    \"eth_accounts\",\n    \"eth_chainId\"\n];\nexports.SOLANAMethods = [\n    \"solana_signTransaction\",\n    \"solana_signMessage\",\n    \"solana_signAllTransactions\",\n    \"solana_signAndSendTransaction\"\n];\nexports.AptosMethods = [\n    \"aptos_signMessage\",\n    \"aptos_signTransaction\",\n    \"aptos_signAndSubmitTransaction\"\n];\nexports.TONMethods = [\n    \"ton_sendTransaction\",\n];\nexports.SuiMethods = [\n    \"sui_signMessage\",\n    \"sui_signPersonalMessage\",\n    \"sui_signTransactionBlock\",\n    \"sui_signAndExecuteTransactionBlock\"\n];\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./InjectUtils\"), exports);\n__exportStar(require(\"./provider\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AptosProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nconst media_1 = require(\"../../utils/media\");\nclass AptosProvider {\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                (0, utils_1.logDebug)(\"AptosProvider send request:\", (0, utils_1.safeJsonStringify)(request));\n                yield this.restoreConnect();\n                const method = request.method;\n                let result;\n                switch (method) {\n                    case \"aptos_signMessage\":\n                        {\n                            if (request.injectParams) {\n                                let message = yield window.okxwallet.aptos.signMessage(request.injectParams);\n                                result = {\n                                    method: request.method,\n                                    result: message.signature,\n                                };\n                                (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                                return result;\n                            }\n                            else {\n                                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                            }\n                        }\n                        break;\n                    case \"aptos_signTransaction\":\n                        {\n                            (0, utils_1.logDebug)(\"AptosProvider Method>>>> :\", method);\n                            let message = yield window.okxwallet.aptos.signTransaction(request.params);\n                            result = {\n                                method: request.method,\n                                result: message,\n                            };\n                            (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                            return result;\n                        }\n                        break;\n                    case \"aptos_signAndSubmitTransaction\":\n                        {\n                            (0, utils_1.logDebug)(\"AptosProvider Method>>>> :\", method);\n                            let message = yield window.okxwallet.aptos.signAndSubmitTransaction(request.params);\n                            result = {\n                                method: request.method,\n                                result: message.hash,\n                            };\n                            (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                            return result;\n                        }\n                        break;\n                    default:\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, ` method: '${method}'`);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"AptosProvider send error:\", error);\n                throw error;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    disconnect() {\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return window.okxwallet.aptos.connect();\n        }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let connectChain = [];\n            connectWalletNameSpace.forEach(item => {\n                if (item.namespace === protocol_1.NameSpaceKeyAptos) {\n                    connectChain.push(...item.chains);\n                }\n            });\n            let addresses = [];\n            let extra = {};\n            (0, utils_1.logDebug)(\"AptosProvider parseConnectResponse connectChain\", JSON.stringify(connectChain));\n            connectChain.forEach((chainStr) => {\n                let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                    return (addressItem.chainId === \"637\" && addressItem.coinType === 637) || (addressItem.namespaceChainId === chainStr);\n                });\n                if (selectedAddress) {\n                    addresses.push(chainStr + \":\" + selectedAddress.address);\n                    extra[chainStr] = {\n                        publicKey: selectedAddress.publicKey\n                    };\n                }\n            });\n            (0, utils_1.logDebug)(\"AptosProvider parseConnectResponse addresses\", JSON.stringify(addresses));\n            if (addresses && addresses.length > 0) {\n                let nameSpaceResponse = {\n                    namespace: protocol_1.NameSpaceKeyAptos,\n                    addresses: addresses,\n                    methods: [...InjectUtils_1.AptosMethods],\n                    extra: extra\n                };\n                return nameSpaceResponse;\n            }\n            return undefined;\n        });\n    }\n    connect(nameSpace, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return window.okxwallet.aptos.connect();\n        });\n    }\n}\nexports.AptosProvider = AptosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass SolProvider {\n    // TOOD\n    // 问题: 是否需要切链  不切链, 主网 测试网络  sonic 如何区别\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                yield this.restoreConnect();\n                (0, utils_1.logDebug)(\"SolProvider send request:\", JSON.stringify(request));\n                const method = request.method;\n                let result;\n                if (request.injectParams) {\n                    switch (method) {\n                        case \"solana_signMessage\":\n                            {\n                                if (request.injectParams && typeof request.injectParams === 'object' && 'message' in request.injectParams) {\n                                    var message = (_a = request.injectParams) === null || _a === void 0 ? void 0 : _a.message;\n                                    const encodedMessage = new TextEncoder().encode(message);\n                                    const signedMessage = yield window.okxwallet.solana.signMessage(encodedMessage, \"utf8\");\n                                    result = {\n                                        method: request.method,\n                                        result: bs58_1.default.encode(signedMessage.signature),\n                                    };\n                                    (0, utils_1.logDebug)(\"SolProvider send result:\", JSON.stringify(signedMessage));\n                                    return result;\n                                }\n                                else {\n                                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                                }\n                            }\n                            break;\n                        case \"solana_signTransaction\":\n                            {\n                                let bufferResult = yield window.okxwallet.solana.signTransaction(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send bufferResult:\", JSON.stringify(bufferResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: bufferResult,\n                                };\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                                return result;\n                            }\n                            break;\n                        case \"solana_signAllTransactions\":\n                            {\n                                let allResult = yield window.okxwallet.solana.signAllTransactions(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(allResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: allResult,\n                                };\n                                return result;\n                            }\n                            break;\n                        case \"solana_signAndSendTransaction\":\n                            {\n                                var signAndSendResult = yield window.okxwallet.solana.signAndSendTransaction(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(signAndSendResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: signAndSendResult,\n                                };\n                                return result;\n                            }\n                            break;\n                        default:\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, `method: '${method}'`);\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"SolProvider send error:\", error);\n                throw error;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    disconnect() {\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return this.connect(undefined);\n        }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let connectChain = [];\n            connectWalletNameSpace.forEach(item => {\n                if (item.namespace === protocol_1.NameSpaceKeySOL) {\n                    connectChain.push(...item.chains);\n                }\n            });\n            let addresses = [];\n            let extra = {};\n            let accounts = {};\n            // if (!isDevice(\"mobile\")){\n            //      accounts = await window.okxwallet.solana.connect()\n            //     logDebug(\"parseConnectResponse solana.connect() :\",JSON.stringify(accounts))\n            // }\n            connectChain.forEach((chainStr) => {\n                let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                    return (addressItem.chainId === \"501\" && addressItem.coinType === 501)\n                        || (addressItem.namespaceChainId === chainStr);\n                });\n                if (selectedAddress) {\n                    addresses.push(chainStr + \":\" + selectedAddress.address);\n                    if (accounts && \"publicKey\" in accounts) {\n                        extra[chainStr] = accounts;\n                    }\n                    else {\n                        extra[chainStr] = {\n                            publicKey: selectedAddress.publicKey\n                        };\n                    }\n                }\n            });\n            if (addresses && addresses.length > 0) {\n                let nameSpaceResponse = {\n                    namespace: protocol_1.NameSpaceKeySOL,\n                    addresses: addresses,\n                    methods: [...InjectUtils_1.SOLANAMethods],\n                    extra: extra\n                };\n                (0, utils_1.logDebug)(\"parseConnectResponse nameSpaceResponse :\", JSON.stringify(nameSpaceResponse));\n                return nameSpaceResponse;\n            }\n            return undefined;\n        });\n    }\n    connect(nameSpace, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return window.okxwallet.solana.connect();\n        });\n    }\n}\nexports.SolProvider = SolProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TONProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass TONProvider {\n    constructor() {\n        this.signalChainConnectResult = undefined;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                (0, utils_1.logDebug)(\"TONProvider send request:\", (0, utils_1.safeJsonStringify)(request));\n                // await this.restoreConnect()//To initialize data in Discover\n                let tonParams = null;\n                switch (request.method) {\n                    case \"ton_sendTransaction\":\n                        if (request.params) {\n                            tonParams = {\n                                method: \"sendTransaction\",\n                                params: [JSON.stringify(request.params)],\n                                id: Date.now().toString()\n                            };\n                            (0, utils_1.logDebug)(\"TONProvider tonParams first:\", JSON.stringify(tonParams));\n                        }\n                        break;\n                    default:\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n                if (tonParams) {\n                    const resultMe = yield window.okxTonWallet.tonconnect.send(tonParams);\n                    (0, utils_1.logDebug)(\"TONProvider send request result:\", (0, utils_1.safeJsonStringify)(resultMe));\n                    if (resultMe.error) {\n                        throw new protocol_1.OKXConnectError(resultMe.error.code, resultMe.error.message);\n                    }\n                    return {\n                        result: resultMe.result,\n                        method: request.method,\n                    };\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"TONProvider encountered an error:\", error);\n                throw error;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    restoreConnect() {\n        // if (isDevice(\"mobile\") && window.okxTonWallet){\n        //     return  window.okxTonWallet.tonconnect.restoreConnection()\n        // }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeyTON) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                connectChain.forEach((chainStr) => {\n                    let currentChain = (0, utils_1.getChainId)(chainStr);\n                    let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                        return (addressItem.chainId === \"607\" && addressItem.coinType === 607)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                    if (selectedAddress) {\n                        addresses.push(chainStr + \":\" + selectedAddress.address);\n                        extra[chainStr] = {\n                            publicKey: selectedAddress.publicKey\n                        };\n                    }\n                });\n                (0, utils_1.logDebug)(\"tonprovider parseConnectResponse needPop and addresses: \", needPop, JSON.stringify(addresses));\n                if (addresses && addresses.length > 0) {\n                    let tonItem = connectWalletNameSpace.find(tonItem => {\n                        return tonItem.namespace === protocol_1.NameSpaceKeyTON;\n                    });\n                    (0, utils_1.logDebug)(\"tonprovider parseConnectResponse ton: \", JSON.stringify(tonItem));\n                    let tonResult = undefined;\n                    if (tonItem && tonItem.params && dappInfo && dappInfo.manifestUrl) {\n                        this.dappInfo = dappInfo;\n                        let itmes = [tonItem.params.ton_addr];\n                        let params = {\n                            manifestUrl: dappInfo.manifestUrl,\n                            items: itmes\n                        };\n                        let needProof = needPop || accountChange;\n                        if (needProof && tonItem.params.ton_proof) {\n                            itmes.push(tonItem.params.ton_proof);\n                        }\n                        (0, utils_1.logDebug)(\"parseConnectResponse ton connect params: \", JSON.stringify(params));\n                        if ((0, media_1.isDevice)(\"mobile\")) {\n                            tonResult = (yield window.okxTonWallet.tonconnect.connect(2, params));\n                        }\n                        else {\n                            if (needPop || accountChange) {\n                                tonResult = (yield window.okxTonWallet.tonconnect.connect(2, params));\n                            }\n                            else {\n                                //No proof is needed here, the result is only used for address verification\n                                tonResult = (yield window.okxTonWallet.tonconnect.restoreConnection());\n                            }\n                        }\n                    }\n                    else {\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"manifestUrl is nil\");\n                    }\n                    if (signalChain && this.signalChainConnectResult) {\n                        tonResult = this.signalChainConnectResult;\n                        this.signalChainConnectResult = undefined;\n                    }\n                    (0, utils_1.logDebug)(\"parseConnectResponse ton connect result: \", JSON.stringify(tonResult));\n                    if (tonResult && tonItem) {\n                        if (tonResult.event === \"connect_error\") {\n                            throw new protocol_1.OKXConnectError(tonResult.payload.code, tonResult.payload.message);\n                        }\n                        else {\n                            let ton_addr = tonResult.payload.items.find(item => item.name === \"ton_addr\");\n                            let ton_proof = tonResult.payload.items.find(item => item.name === \"ton_proof\");\n                            (0, utils_1.logDebug)(\"tonprovider connect isSignalChain: \", signalChain);\n                            let nameSpaceResponse = {\n                                namespace: protocol_1.NameSpaceKeyTON,\n                                addresses: addresses,\n                                methods: [...InjectUtils_1.TONMethods],\n                                extra: extra,\n                                data: {\n                                    ton_addr: ton_addr,\n                                    ton_proof: ton_proof,\n                                    manifestUrl: dappInfo.manifestUrl\n                                }\n                            };\n                            return nameSpaceResponse;\n                        }\n                    }\n                }\n                return undefined;\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"tonprovider parseConnectResponse error: \", JSON.stringify(error));\n                throw error;\n            }\n        });\n    }\n    connect(nameSpace, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (nameSpace && dappInfo && dappInfo.manifestUrl && nameSpace.params) {\n                this.dappInfo = dappInfo;\n                let itmes = [nameSpace.params.ton_addr];\n                let params = {\n                    manifestUrl: dappInfo.manifestUrl,\n                    items: itmes\n                };\n                if (nameSpace.params.ton_proof) {\n                    itmes.push(nameSpace.params.ton_proof);\n                }\n                (0, utils_1.logDebug)(\"tonprovider connect params: \", JSON.stringify(params));\n                try {\n                    let tonResult = yield window.okxTonWallet.tonconnect.connect(2, params);\n                    (0, utils_1.logDebug)(\"tonprovider connect tonResult: \", JSON.stringify(tonResult));\n                    this.signalChainConnectResult = tonResult;\n                    return tonResult;\n                }\n                catch (error) {\n                    (0, utils_1.logDebug)(\"tonprovider connect error: \", JSON.stringify(error));\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"tonconnect error\");\n                }\n            }\n            else {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"manifestUrl or params is nil\");\n            }\n        });\n    }\n}\nexports.TONProvider = TONProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Eip155Provider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass Eip155Provider {\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                (0, utils_1.logDebug)(\"Eip155Provider send request:\", (0, utils_1.safeJsonStringify)(request));\n                yield this.restoreConnect(); //To initialize data in Discover\n                let ethParams = null;\n                switch (request.method) {\n                    case \"personal_sign\":\n                        if (request.params && \"message\" in request.params) {\n                            ethParams = {\n                                method: request.method,\n                                params: [\n                                    request.params.message,\n                                    request.address,\n                                ],\n                            };\n                        }\n                        break;\n                    case \"eth_sendTransaction\":\n                    case \"wallet_addEthereumChain\":\n                    case \"wallet_switchEthereumChain\":\n                        {\n                            if (request.params) {\n                                ethParams = {\n                                    method: request.method,\n                                    params: [request.params],\n                                };\n                            }\n                        }\n                        break;\n                    case \"eth_signTypedData_v4\":\n                        {\n                            if (request.params && \"typedDataJson\" in request.params && ((_a = request.params) === null || _a === void 0 ? void 0 : _a.typedDataJson) && typeof request.params.typedDataJson === \"string\") {\n                                ethParams = {\n                                    method: request.method,\n                                    params: [\n                                        request.address,\n                                        request.params.typedDataJson,\n                                    ],\n                                };\n                            }\n                        }\n                        break;\n                    case \"wallet_watchAsset\":\n                        {\n                            if (request.params) {\n                                ethParams = {\n                                    method: request.method,\n                                    params: request.params,\n                                };\n                            }\n                        }\n                        break;\n                    default:\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n                if (ethParams) {\n                    // 特殊处理 \"wallet_switchEthereumChain\"\n                    if ((request.method === \"wallet_switchEthereumChain\" || request.method === \"wallet_addEthereumChain\")\n                        && request.params\n                        && \"chainId\" in request.params) {\n                        (0, utils_1.logDebug)(\"Eip155Provider send request switch requestParams:\", (0, utils_1.safeJsonStringify)(ethParams));\n                        const switchChainId = parseInt(request.params.chainId, 16).toString();\n                        yield window.okxwallet.request(ethParams);\n                        const resultSwitch = `eip155:${switchChainId}:${request.address}`;\n                        (0, utils_1.logDebug)(\"Eip155Provider send request switch result:\", resultSwitch);\n                        return {\n                            result: resultSwitch,\n                            method: request.method,\n                        };\n                    }\n                    else {\n                        const chain = (0, utils_1.getChainId)(request.chainId);\n                        const chainHex = `0x${Number(chain).toString(16)}`;\n                        (0, utils_1.logDebug)(\"Eip155Provider current chainId:\", chain, chainHex);\n                        if (chainHex) {\n                            yield window.okxwallet.request({\n                                method: \"wallet_switchEthereumChain\",\n                                params: [{ chainId: chainHex }],\n                            });\n                            (0, utils_1.logDebug)(\"Eip155Provider send request requestParams:\", chainHex, (0, utils_1.safeJsonStringify)(ethParams));\n                            const resultMe = yield window.okxwallet.request(ethParams);\n                            (0, utils_1.logDebug)(\"Eip155Provider send request result:\", (0, utils_1.safeJsonStringify)(resultMe));\n                            return {\n                                result: resultMe,\n                                method: request.method,\n                            };\n                        }\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"Eip155Provider encountered an error:\", error);\n                throw error;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return window.okxwallet.request({ method: 'eth_requestAccounts' });\n        }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeyEip155) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                connectChain.forEach((chainStr) => {\n                    let currentChain = (0, utils_1.getChainId)(chainStr);\n                    let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                        return (addressItem.chainId === currentChain && addressItem.coinType === 60)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                    if (selectedAddress) {\n                        addresses.push(chainStr + \":\" + selectedAddress.address);\n                        extra[chainStr] = {\n                            publicKey: selectedAddress.publicKey\n                        };\n                    }\n                });\n                if (addresses && addresses.length > 0) {\n                    let nameSpaceResponse = {\n                        namespace: protocol_1.NameSpaceKeyEip155,\n                        addresses: addresses,\n                        methods: [...InjectUtils_1.Eip55Methods],\n                        extra: extra\n                    };\n                    return nameSpaceResponse;\n                }\n                return undefined;\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    connect(nameSpace, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return window.okxwallet.request({ method: 'eth_requestAccounts' });\n        });\n    }\n}\nexports.Eip155Provider = Eip155Provider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./eip155Provider\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuiProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass SuiProvider {\n    constructor() {\n        // const GlobalWallet: {\n        //     [key: string]: any;\n        //     register: (wallet: any) => void;\n        // } = {\n        //     register: (wallet) => {\n        //         GlobalWallet[wallet.chainName] = wallet; // 动态添加属性\n        //     },\n        // }\n        // const event = new CustomEvent('wallet-standard:app-ready', { detail: GlobalWallet });\n        // window.dispatchEvent(event);\n        // this.suiWallet = GlobalWallet[\"suiMainnet\"]\n    }\n    connectReady() {\n        return true;\n    }\n    getSuiPublicKey() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const suiAccount = yield this.connect(undefined);\n            let publicKey = suiAccount.accounts[0].publicKey;\n            return publicKey;\n        });\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeySui) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                if (connectChain.length == 0) {\n                    return undefined;\n                }\n                const suiPublicKey = yield this.getSuiPublicKey();\n                connectChain.forEach((chainStr) => {\n                    var _a;\n                    let currentChain = (0, utils_1.getChainId)(chainStr);\n                    let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                        return (addressItem.coinType === 784)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                    if (selectedAddress) {\n                        addresses.push(chainStr + \":\" + selectedAddress.address);\n                        extra[chainStr] = {\n                            publicKey: (_a = selectedAddress.publicKey) !== null && _a !== void 0 ? _a : suiPublicKey\n                        };\n                    }\n                });\n                if (addresses && addresses.length > 0) {\n                    let nameSpaceResponse = {\n                        namespace: protocol_1.NameSpaceKeySui,\n                        addresses: addresses,\n                        methods: [...InjectUtils_1.SuiMethods],\n                        extra: extra\n                    };\n                    return nameSpaceResponse;\n                }\n                return undefined;\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return this.connect(undefined);\n        }\n        return Promise.resolve();\n    }\n    getSuiWallet() {\n        return window.okxwallet.sui;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.restoreConnect();\n                (0, utils_1.logDebug)(\"suiProvider send request:\", JSON.stringify(request));\n                const method = request.method;\n                let result;\n                if (request.injectParams && this.getSuiWallet()) {\n                    let originalRarams = request.injectParams;\n                    switch (method) {\n                        case \"sui_signTransactionBlock\":\n                            const injectSignResult = yield this.getSuiWallet().features['sui:signTransactionBlock'].signTransactionBlock(originalRarams);\n                            //{transactionBlockBytes: 'AAACAAhmAAAAAAAAAAAgcveY+LcJkCRT1LtVxlZh6eBBVKUGdl…7bLNXSJ4Qz1jZurage0aGdH6Zb+4CAAAAAAAAIAo1AAAAAAAA', hash: '2pxcesyfKVCs3EegDYUDeQ28m3V3tn5VR32aUZSdg3dc', signature: 'ADDzSloxm5wEQX4BaTMJEON9t/xGgZ66ybiy5uT4TUimdl6Q9/…NeA3YOy/QsAD4XwjQ0rSuNkeKyfNy+VZPtJsmnKWswbGHSw=='}\n                            result = {\n                                method: \"sui_signTransactionBlock\",\n                                result: injectSignResult.signature\n                            };\n                            break;\n                        case \"sui_signAndExecuteTransactionBlock\":\n                            const injectSendResult = yield this.getSuiWallet().features['sui:signAndExecuteTransactionBlock'].signAndExecuteTransactionBlock(originalRarams);\n                            result = {\n                                method: \"sui_signAndExecuteTransactionBlock\",\n                                result: injectSendResult.digest\n                            };\n                            break;\n                        case \"sui_signMessage\":\n                            const injectResult = yield this.getSuiWallet().features['sui:signMessage'].signMessage(originalRarams);\n                            result = {\n                                method: \"sui_signMessage\",\n                                result: injectResult.signature\n                            };\n                            break;\n                        case \"sui_signPersonalMessage\":\n                            const injectPersonalResult = yield this.getSuiWallet().features['sui:signPersonalMessage'].signPersonalMessage(originalRarams);\n                            result = {\n                                method: \"sui_signPersonalMessage\",\n                                result: injectPersonalResult.signature\n                            };\n                            break;\n                    }\n                }\n                return result;\n            }\n            catch (e) {\n                (0, utils_1.logDebug)(\"suiProvider send error:\", e);\n                throw e;\n            }\n        });\n    }\n    connect(nameSpace, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            return (_a = this.getSuiWallet()) === null || _a === void 0 ? void 0 : _a.features['standard:connect'].connect();\n        });\n    }\n}\nexports.SuiProvider = SuiProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TON_CHAINS = exports.COSMOS_CHAINS = exports.APTOS_CHAINS = exports.SUI_CHAINS = exports.SOLANA_CHAINS = exports.BTC_CHAINS = void 0;\nexports.BTC_CHAINS = {\n    MAINNET: 'btc:mainnet',\n    FRACTAL: 'fractal:mainnet',\n};\nexports.SOLANA_CHAINS = {\n    MAINNET: 'solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp',\n    TESTNET: 'solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z',\n    SONIC_TESTNET: 'sonic:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z'\n};\nexports.SUI_CHAINS = {\n    MAINNET: 'sui:mainnet'\n};\nexports.APTOS_CHAINS = {\n    MAINNET: 'aptos:mainnet' // aptos mainnet\n};\nexports.COSMOS_CHAINS = {\n    COSMOS_MAINNET: 'cosmos:cosmoshub-4'\n};\nexports.TON_CHAINS = {\n    MAINNET: 'ton:-239', // mainnet\n};\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IEngine = exports.ISignClient = exports.ISignClientEvents = exports.IEngineEvents = void 0;\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nclass IEngineEvents extends eventemitter3_1.default {\n    constructor() {\n        super();\n    }\n}\nexports.IEngineEvents = IEngineEvents;\nclass ISignClientEvents extends eventemitter3_1.default {\n    constructor() {\n        super();\n    }\n}\nexports.ISignClientEvents = ISignClientEvents;\nclass ISignClient {\n    constructor(data) {\n        this.data = data;\n    }\n}\nexports.ISignClient = ISignClient;\nclass IEngine {\n    constructor(client) {\n        this.client = client;\n    }\n}\nexports.IEngine = IEngine;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXWalletName = exports.creatOKXInjectWalletInfo = exports.creatOKXMiniAppWalletInfo = exports.creatOKXWalletInfo = exports.ISignClientEvents = exports.IEngine = exports.IEngineEvents = exports.ISignClient = exports.getBigIntRpcId = exports.formatJsonRpcRequest = exports.isJsonRpcError = exports.isJsonRpcResponse = exports.parseConnectionError = exports.isHttpUrl = exports.formatJsonRpcError = void 0;\nvar json_rpc_1 = require(\"./json-rpc\");\nObject.defineProperty(exports, \"formatJsonRpcError\", { enumerable: true, get: function () { return json_rpc_1.formatJsonRpcError; } });\nObject.defineProperty(exports, \"isHttpUrl\", { enumerable: true, get: function () { return json_rpc_1.isHttpUrl; } });\nObject.defineProperty(exports, \"parseConnectionError\", { enumerable: true, get: function () { return json_rpc_1.parseConnectionError; } });\nObject.defineProperty(exports, \"isJsonRpcResponse\", { enumerable: true, get: function () { return json_rpc_1.isJsonRpcResponse; } });\nObject.defineProperty(exports, \"isJsonRpcError\", { enumerable: true, get: function () { return json_rpc_1.isJsonRpcError; } });\nObject.defineProperty(exports, \"formatJsonRpcRequest\", { enumerable: true, get: function () { return json_rpc_1.formatJsonRpcRequest; } });\nObject.defineProperty(exports, \"getBigIntRpcId\", { enumerable: true, get: function () { return json_rpc_1.getBigIntRpcId; } });\nvar engine_1 = require(\"./engine\");\nObject.defineProperty(exports, \"ISignClient\", { enumerable: true, get: function () { return engine_1.ISignClient; } });\nObject.defineProperty(exports, \"IEngineEvents\", { enumerable: true, get: function () { return engine_1.IEngineEvents; } });\nObject.defineProperty(exports, \"IEngine\", { enumerable: true, get: function () { return engine_1.IEngine; } });\nObject.defineProperty(exports, \"ISignClientEvents\", { enumerable: true, get: function () { return engine_1.ISignClientEvents; } });\n__exportStar(require(\"./ton\"), exports);\nvar wallet_info_1 = require(\"./wallet-info\");\nObject.defineProperty(exports, \"creatOKXWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXWalletInfo; } });\nObject.defineProperty(exports, \"creatOKXMiniAppWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXMiniAppWalletInfo; } });\nObject.defineProperty(exports, \"creatOKXInjectWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXInjectWalletInfo; } });\nObject.defineProperty(exports, \"OKXWalletName\", { enumerable: true, get: function () { return wallet_info_1.OKXWalletName; } });\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isJsonRpcPayload = isJsonRpcPayload;\nexports.isJsonRpcRequest = isJsonRpcRequest;\nexports.isJsonRpcResponse = isJsonRpcResponse;\nexports.isJsonRpcResult = isJsonRpcResult;\nexports.isJsonRpcError = isJsonRpcError;\nexports.payloadId = payloadId;\nexports.getBigIntRpcId = getBigIntRpcId;\nexports.formatJsonRpcRequest = formatJsonRpcRequest;\nexports.formatJsonRpcResult = formatJsonRpcResult;\nexports.formatJsonRpcError = formatJsonRpcError;\nexports.isReservedErrorCode = isReservedErrorCode;\nexports.getError = getError;\nexports.getErrorByCode = getErrorByCode;\nexports.formatErrorMessage = formatErrorMessage;\nexports.isHttpUrl = isHttpUrl;\nexports.isWsUrl = isWsUrl;\nexports.parseConnectionError = parseConnectionError;\nfunction isJsonRpcPayload(payload) {\n    return (typeof payload === \"object\" &&\n        \"id\" in payload &&\n        \"jsonrpc\" in payload &&\n        payload.jsonrpc === \"2.0\");\n}\nfunction isJsonRpcRequest(payload) {\n    return isJsonRpcPayload(payload) && \"method\" in payload;\n}\nfunction isJsonRpcResponse(payload) {\n    return isJsonRpcPayload(payload) && (isJsonRpcResult(payload) || isJsonRpcError(payload));\n}\nfunction isJsonRpcResult(payload) {\n    return \"result\" in payload;\n}\nfunction isJsonRpcError(payload) {\n    return \"error\" in payload;\n}\nconst okx_connect_error_1 = require(\"../error/okx-connect.error\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nclass IncrementalRandomGenerator {\n    constructor(bits) {\n        this.i = 1;\n        const typedArray = bits === 8 ? new Uint8Array(1) : bits === 16 ? new Uint16Array(1) : new Uint32Array(1);\n        if (bits) {\n            this.initialValue = tweetnacl_1.default.randomBytes(bits / 8)[0];\n        }\n        else {\n            this.initialValue = 0;\n        }\n    }\n    getNextValue() {\n        return this.initialValue + this.i++;\n    }\n}\nconst uint8Generator = new IncrementalRandomGenerator(8);\nconst uint16Generator = new IncrementalRandomGenerator(16);\nfunction payloadId() {\n    const date = Date.now() * 1000;\n    const extra = uint8Generator.getNextValue();\n    return date + extra;\n}\nfunction getBigIntRpcId() {\n    const date = BigInt(Date.now()) * BigInt(1000000);\n    const extra = BigInt(uint16Generator.getNextValue());\n    return date + extra;\n}\nfunction formatJsonRpcRequest(method, params, id) {\n    return {\n        id: id || payloadId(),\n        jsonrpc: \"2.0\",\n        method,\n        params,\n    };\n}\nfunction formatJsonRpcResult(id, result) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        result,\n    };\n}\nfunction formatJsonRpcError(id, error, data) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        error: formatErrorMessage(error, data),\n    };\n}\nfunction isReservedErrorCode(code) {\n    return okx_connect_error_1.RESERVED_ERROR_CODES.includes(code);\n}\nfunction getError(type) {\n    if (!Object.keys(okx_connect_error_1.STANDARD_ERROR_MAP).includes(type)) {\n        return okx_connect_error_1.STANDARD_ERROR_MAP[okx_connect_error_1.DEFAULT_ERROR];\n    }\n    return okx_connect_error_1.STANDARD_ERROR_MAP[type];\n}\nfunction getErrorByCode(code) {\n    const match = Object.values(okx_connect_error_1.STANDARD_ERROR_MAP).find((e) => e.code === code);\n    if (!match) {\n        return okx_connect_error_1.STANDARD_ERROR_MAP[okx_connect_error_1.DEFAULT_ERROR];\n    }\n    return match;\n}\nfunction formatErrorMessage(error, data) {\n    if (typeof error === \"undefined\") {\n        return getError(okx_connect_error_1.INTERNAL_ERROR);\n    }\n    if (typeof error === \"string\") {\n        error = Object.assign(Object.assign({}, getError(okx_connect_error_1.SERVER_ERROR)), { message: error });\n    }\n    if (typeof data !== \"undefined\") {\n        error.data = data;\n    }\n    if (isReservedErrorCode(error.code)) {\n        error = getErrorByCode(error.code);\n    }\n    return error;\n}\nfunction getUrlProtocol(url) {\n    const matches = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!matches || !matches.length)\n        return;\n    return matches[0];\n}\nfunction matchRegexProtocol(url, regex) {\n    const protocol = getUrlProtocol(url);\n    if (typeof protocol === \"undefined\")\n        return false;\n    return new RegExp(regex).test(protocol);\n}\nfunction isHttpUrl(url) {\n    return matchRegexProtocol(url, \"^https?:\");\n}\nfunction isWsUrl(url) {\n    return matchRegexProtocol(url, \"^wss?:\");\n}\nfunction parseConnectionError(e, url, type) {\n    return e.message.includes(\"getaddrinfo ENOTFOUND\") || e.message.includes(\"connect ECONNREFUSED\")\n        ? new Error(`Unavailable ${type} RPC url at ${url}`)\n        : e;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_ITEM_ERROR_CODES = void 0;\nvar CONNECT_ITEM_ERROR_CODES;\n(function (CONNECT_ITEM_ERROR_CODES) {\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(CONNECT_ITEM_ERROR_CODES || (exports.CONNECT_ITEM_ERROR_CODES = CONNECT_ITEM_ERROR_CODES = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TONCHAIN = void 0;\nvar TONCHAIN;\n(function (TONCHAIN) {\n    TONCHAIN[\"MAINNET\"] = \"-239\";\n})(TONCHAIN || (exports.TONCHAIN = TONCHAIN = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_ITEM_ERROR_CODES = exports.TONCHAIN = void 0;\nvar connect_wallet_1 = require(\"./connect-wallet\");\nObject.defineProperty(exports, \"TONCHAIN\", { enumerable: true, get: function () { return connect_wallet_1.TONCHAIN; } });\nvar connect_event_1 = require(\"./connect-event\");\nObject.defineProperty(exports, \"CONNECT_ITEM_ERROR_CODES\", { enumerable: true, get: function () { return connect_event_1.CONNECT_ITEM_ERROR_CODES; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXInjectWalletName = exports.OKXMiniWalletName = exports.OKXWalletName = void 0;\nexports.creatOKXWalletInfo = creatOKXWalletInfo;\nexports.creatOKXMiniAppWalletInfo = creatOKXMiniAppWalletInfo;\nexports.creatOKXInjectWalletInfo = creatOKXInjectWalletInfo;\nexports.OKXWalletName = \"OKX Wallet\";\nexports.OKXMiniWalletName = \"OKX Mini Wallet\";\nexports.OKXInjectWalletName = \"OKX Inject Wallet\";\nfunction creatOKXWalletInfo() {\n    return {\n        \"appName\": \"okxAppWallet\",\n        \"name\": exports.OKXWalletName,\n        \"imageUrl\": \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\"\n    };\n}\nfunction creatOKXMiniAppWalletInfo() {\n    return {\n        \"appName\": \"okxMiniApp\",\n        \"name\": exports.OKXMiniWalletName,\n        \"imageUrl\": \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\"\n    };\n}\nfunction creatOKXInjectWalletInfo() {\n    return {\n        \"appName\": \"okxInjectWallet\",\n        \"name\": exports.OKXInjectWalletName,\n        \"imageUrl\": \"\"\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_MINI_WALLET_NAME = exports.OKX_APP_WALLET_NAME = exports.stackDeepLink = exports.tgwalletAppName = exports.tgwalletName = exports.tonConnectSdkVersion = exports.shortUniversalLink = exports.standardDeeplink = exports.downloadUrl = exports.standardUniversalLink = exports.okxDeeplink = void 0;\nexports.getTestTwaUrl = getTestTwaUrl;\nexports.getTestTgTwaUrl = getTestTgTwaUrl;\nexports.getBotNameAndAppName = getBotNameAndAppName;\nexports.okxDeeplink = 'okx://web3';\nexports.standardUniversalLink = typeof window !== \"undefined\" && window.location.hostname.includes(\"okx.com\")\n    ? \"https://link.okx.com/download\"\n    : \"https://www.okx.com/download\";\nexports.downloadUrl = \"https://www.okx.com/download\";\n// export const standardUniversalLink = 'http://localhost:5173';\nexports.standardDeeplink = `${exports.okxDeeplink}/wallet/connect`;\nexports.shortUniversalLink = `https://www.okx.com/ul/connect`;\n// export const standardDeeplink = 'http://localhost:5173';\nexports.tonConnectSdkVersion = '1';\n// export const tgwalletName: string = \"TCTestqdqwdqwdqBot\"\nexports.tgwalletName = \"OKX_WALLET_BOT\";\nexports.tgwalletAppName = \"start\";\n// https://t.me/OKX_WALLET_BOT/start\nexports.stackDeepLink = 'okx://web3?stack=true';\nfunction getTestTwaUrl() {\n    return window.okxTesttwaUrl;\n}\nfunction getTestTgTwaUrl() {\n    return window.okxTestTgtwaUrl;\n}\nfunction getBotNameAndAppName(url) {\n    const urlObj = new URL(url);\n    const pathnameParts = urlObj.pathname.split('/').filter(Boolean);\n    if (pathnameParts.length >= 2) {\n        const botName = pathnameParts[0]; // 获取 'test_12312313123_bot'\n        const appName = pathnameParts[1]; // 获取 'testtest'\n        return { botName, appName };\n    }\n}\nexports.OKX_APP_WALLET_NAME = 'OKX Wallet';\nexports.OKX_MINI_WALLET_NAME = 'OKX Mini Wallet';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_CONNECT_ERROR_CODES = exports.OKXConnectError = void 0;\nvar okx_connect_error_1 = require(\"./okx-connect.error\");\nObject.defineProperty(exports, \"OKXConnectError\", { enumerable: true, get: function () { return okx_connect_error_1.OKXConnectError; } });\nObject.defineProperty(exports, \"OKX_CONNECT_ERROR_CODES\", { enumerable: true, get: function () { return okx_connect_error_1.OKX_CONNECT_ERROR_CODES; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_ERROR = exports.STANDARD_ERROR_MAP = exports.SERVER_ERROR_CODE_RANGE = exports.RESERVED_ERROR_CODES = exports.SERVER_ERROR = exports.INTERNAL_ERROR = exports.INVALID_PARAMS = exports.METHOD_NOT_FOUND = exports.INVALID_REQUEST = exports.PARSE_ERROR = exports.OKX_CONNECT_ERROR_CODES = exports.OKXConnectError = void 0;\nclass OKXConnectError extends Error {\n    constructor(code, message) {\n        if (message == undefined) {\n            message = getDefaultMessageByCode(code);\n        }\n        super(message);\n        this.code = code;\n        this.message = `${OKXConnectError.prefix} ${message ? '\\n' + message : ''}`;\n        Object.setPrototypeOf(this, OKXConnectError.prototype);\n    }\n    toJSON() {\n        return {\n            message: this.message,\n            code: this.code\n        };\n    }\n}\nexports.OKXConnectError = OKXConnectError;\nOKXConnectError.prefix = '[OKX_CONNECT_SDK_ERROR]';\nfunction getDefaultMessageByCode(code) {\n    if (code == OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR) {\n        return \"unknown error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR) {\n        return \"bad request error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.ALREADY_CONNECTED_ERROR) {\n        return \"already connected error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR) {\n        return \"not connected error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.UNKNOWN_APP_ERROR) {\n        return \"unknown app error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n        return \"user rejects error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR_CAUSE_REGISTER) {\n        return \"wallet address are registering\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED) {\n        return \"method not supported\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.CONNECTION_ERROR) {\n        return \"connect error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED) {\n        return \"chain not supported\";\n    }\n    return \"unknown error\";\n}\nvar OKX_CONNECT_ERROR_CODES;\n(function (OKX_CONNECT_ERROR_CODES) {\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"BAD_REQUEST_ERROR\"] = 1] = \"BAD_REQUEST_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"ALREADY_CONNECTED_ERROR\"] = 11] = \"ALREADY_CONNECTED_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"NOT_CONNECTED_ERROR\"] = 12] = \"NOT_CONNECTED_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"UNKNOWN_APP_ERROR\"] = 100] = \"UNKNOWN_APP_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"USER_REJECTS_ERROR\"] = 300] = \"USER_REJECTS_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"USER_REJECTS_ERROR_CAUSE_REGISTER\"] = 301] = \"USER_REJECTS_ERROR_CAUSE_REGISTER\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"CHAIN_NOT_SUPPORTED\"] = 500] = \"CHAIN_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"WALLET_NOT_SUPPORTED\"] = 600] = \"WALLET_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"CONNECTION_ERROR\"] = 700] = \"CONNECTION_ERROR\";\n})(OKX_CONNECT_ERROR_CODES || (exports.OKX_CONNECT_ERROR_CODES = OKX_CONNECT_ERROR_CODES = {}));\nexports.PARSE_ERROR = \"PARSE_ERROR\";\nexports.INVALID_REQUEST = \"INVALID_REQUEST\";\nexports.METHOD_NOT_FOUND = \"METHOD_NOT_FOUND\";\nexports.INVALID_PARAMS = \"INVALID_PARAMS\";\nexports.INTERNAL_ERROR = \"INTERNAL_ERROR\";\nexports.SERVER_ERROR = \"SERVER_ERROR\";\nexports.RESERVED_ERROR_CODES = [-32700, -32600, -32601, -32602, -32603];\nexports.SERVER_ERROR_CODE_RANGE = [-32000, -32099];\nexports.STANDARD_ERROR_MAP = {\n    [exports.PARSE_ERROR]: { code: -32700, message: \"Parse error\" },\n    [exports.INVALID_REQUEST]: { code: -32600, message: \"Invalid Request\" },\n    [exports.METHOD_NOT_FOUND]: { code: -32601, message: \"Method not found\" },\n    [exports.INVALID_PARAMS]: { code: -32602, message: \"Invalid params\" },\n    [exports.INTERNAL_ERROR]: { code: -32603, message: \"Internal error\" },\n    [exports.SERVER_ERROR]: { code: -32000, message: \"Server error\" },\n};\nexports.DEFAULT_ERROR = exports.SERVER_ERROR;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TON_CHAINS = exports.COSMOS_CHAINS = exports.APTOS_CHAINS = exports.SUI_CHAINS = exports.SOLANA_CHAINS = exports.BTC_CHAINS = exports.downloadUrl = exports.okxDeeplink = exports.tonConnectSdkVersion = exports.standardDeeplink = exports.standardUniversalLink = exports.NameSpaceKeyStarknet = exports.NameSpaceKeyTron = exports.NameSpaceKeyCosmos = exports.NameSpaceKeyAptos = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.NameSpaceKeyTON = exports.NameSpaceKeySOL = exports.NameSpaceKeyEip155 = void 0;\n__exportStar(require(\"./error\"), exports);\nvar misc_1 = require(\"./misc\");\nObject.defineProperty(exports, \"NameSpaceKeyEip155\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyEip155; } });\nObject.defineProperty(exports, \"NameSpaceKeySOL\", { enumerable: true, get: function () { return misc_1.NameSpaceKeySOL; } });\nObject.defineProperty(exports, \"NameSpaceKeyTON\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyTON; } });\nObject.defineProperty(exports, \"NameSpaceKeySui\", { enumerable: true, get: function () { return misc_1.NameSpaceKeySui; } });\nObject.defineProperty(exports, \"NameSpaceKeyBtc\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyBtc; } });\nObject.defineProperty(exports, \"NameSpaceKeyAptos\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyAptos; } });\nObject.defineProperty(exports, \"NameSpaceKeyCosmos\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyCosmos; } });\nObject.defineProperty(exports, \"NameSpaceKeyTron\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyTron; } });\nObject.defineProperty(exports, \"NameSpaceKeyStarknet\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyStarknet; } });\nvar constants_1 = require(\"./constants\");\nObject.defineProperty(exports, \"standardUniversalLink\", { enumerable: true, get: function () { return constants_1.standardUniversalLink; } });\nObject.defineProperty(exports, \"standardDeeplink\", { enumerable: true, get: function () { return constants_1.standardDeeplink; } });\nObject.defineProperty(exports, \"tonConnectSdkVersion\", { enumerable: true, get: function () { return constants_1.tonConnectSdkVersion; } });\nObject.defineProperty(exports, \"okxDeeplink\", { enumerable: true, get: function () { return constants_1.okxDeeplink; } });\nObject.defineProperty(exports, \"downloadUrl\", { enumerable: true, get: function () { return constants_1.downloadUrl; } });\n__exportStar(require(\"./connect\"), exports);\nvar chains_1 = require(\"./chains\");\nObject.defineProperty(exports, \"BTC_CHAINS\", { enumerable: true, get: function () { return chains_1.BTC_CHAINS; } });\nObject.defineProperty(exports, \"SOLANA_CHAINS\", { enumerable: true, get: function () { return chains_1.SOLANA_CHAINS; } });\nObject.defineProperty(exports, \"SUI_CHAINS\", { enumerable: true, get: function () { return chains_1.SUI_CHAINS; } });\nObject.defineProperty(exports, \"APTOS_CHAINS\", { enumerable: true, get: function () { return chains_1.APTOS_CHAINS; } });\nObject.defineProperty(exports, \"COSMOS_CHAINS\", { enumerable: true, get: function () { return chains_1.COSMOS_CHAINS; } });\nObject.defineProperty(exports, \"TON_CHAINS\", { enumerable: true, get: function () { return chains_1.TON_CHAINS; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NameSpaceKeyStarknet = exports.NameSpaceKeyTron = exports.NameSpaceKeyCosmos = exports.NameSpaceKeyAptos = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.NameSpaceKeyTON = exports.NameSpaceKeySOL = exports.NameSpaceKeyEip155 = void 0;\nexports.NameSpaceKeyEip155 = \"eip155\";\nexports.NameSpaceKeySOL = \"solana\";\nexports.NameSpaceKeyTON = \"ton\";\nexports.NameSpaceKeySui = \"sui\";\nexports.NameSpaceKeyBtc = \"btc\";\nexports.NameSpaceKeyAptos = \"aptos\";\nexports.NameSpaceKeyCosmos = \"cosmos\";\nexports.NameSpaceKeyTron = \"tron\";\nexports.NameSpaceKeyStarknet = \"starknet\";\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.callForSuccess = callForSuccess;\nexports.delay = delay;\n/**\n * Function to call ton api until we get response.\n * Because ton network is pretty unstable we need to make sure response is final.\n * @param {T} fn - function to call\n * @param {CallForSuccessOptions} [options] - optional configuration options\n */\nfunction callForSuccess(fn, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b;\n        const attempts = (_a = options === null || options === void 0 ? void 0 : options.attempts) !== null && _a !== void 0 ? _a : 3;\n        const delayMs = (_b = options === null || options === void 0 ? void 0 : options.delayMs) !== null && _b !== void 0 ? _b : 800;\n        if (typeof fn !== 'function') {\n            throw new Error(`Expected a function, got ${typeof fn}`);\n        }\n        let i = 0;\n        let lastError;\n        while (i < attempts) {\n            try {\n                return yield fn();\n            }\n            catch (err) {\n                lastError = err;\n                i++;\n                if (i < attempts) {\n                    yield delay(delayMs);\n                }\n            }\n        }\n        throw lastError;\n    });\n}\n/**\n * Delays the execution of code for a specified number of milliseconds.\n * @param {number} timeout - The number of milliseconds to delay the execution.\n * @param {DelayOptions} [options] - Optional configuration options for the delay.\n * @return {Promise<void>} - A promise that resolves after the specified delay, or rejects if the delay is aborted.\n */\nfunction delay(timeout, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            var _a, _b;\n            if ((_a = options === null || options === void 0 ? void 0 : options.signal) === null || _a === void 0 ? void 0 : _a.aborted) {\n                reject(new Error('Delay aborted'));\n                return;\n            }\n            const timeoutId = setTimeout(() => resolve(), timeout);\n            (_b = options === null || options === void 0 ? void 0 : options.signal) === null || _b === void 0 ? void 0 : _b.addEventListener('abort', () => {\n                clearTimeout(timeoutId);\n                reject(new Error('Delay aborted'));\n            });\n        });\n    });\n}\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkMetaData = exports.versionCompare = exports.isBrowser = exports.isOS = exports.isMobileUserAgent = exports.openDeeplinkWithFallback = exports.openLinkBlank = exports.openLink = exports.getChainId = exports.useShortLink = exports.toSafeBase64FromBase64 = exports.isValidObject = exports.isIos = exports.base64decode = exports.base64encode = exports.splitToUint8Arrays = exports.concatUint8Arrays = exports.toHexString = exports.hexToByteArray = exports.getOKXLink = exports.openOKXUniversalLink = exports.getAppWalletShortDeepLink = exports.encodeTWAConnectURLParams = exports.encodeConnectParams = exports.openOKXTMAWalletlinkWithFallback = exports.getTelegramWalletTWAUrl = exports.getAppWalletDeepLink = exports.encodeTelegramUrlParameters = exports.isTelegramUrl = exports.openOKXDeeplinkWithFallback = exports.openOKXDeeplink = exports.getUniversalLink = exports.safeJsonStringify = exports.safeJsonParse = exports.getDefaultReporter = exports.reportEvent = exports.reportLog = exports.logWarning = exports.logError = exports.logDebug = exports.callForSuccess = void 0;\nvar call_for_success_1 = require(\"./call-for-success\");\nObject.defineProperty(exports, \"callForSuccess\", { enumerable: true, get: function () { return call_for_success_1.callForSuccess; } });\nvar log_1 = require(\"./log\");\nObject.defineProperty(exports, \"logDebug\", { enumerable: true, get: function () { return log_1.logDebug; } });\nObject.defineProperty(exports, \"logError\", { enumerable: true, get: function () { return log_1.logError; } });\nObject.defineProperty(exports, \"logWarning\", { enumerable: true, get: function () { return log_1.logWarning; } });\nObject.defineProperty(exports, \"reportLog\", { enumerable: true, get: function () { return log_1.reportLog; } });\nObject.defineProperty(exports, \"reportEvent\", { enumerable: true, get: function () { return log_1.reportEvent; } });\nObject.defineProperty(exports, \"getDefaultReporter\", { enumerable: true, get: function () { return log_1.getDefaultReporter; } });\n__exportStar(require(\"./reportconstants\"), exports);\n__exportStar(require(\"./report\"), exports);\nvar safejson_1 = require(\"./safejson\");\nObject.defineProperty(exports, \"safeJsonParse\", { enumerable: true, get: function () { return safejson_1.safeJsonParse; } });\nObject.defineProperty(exports, \"safeJsonStringify\", { enumerable: true, get: function () { return safejson_1.safeJsonStringify; } });\nvar url_1 = require(\"./url\");\nObject.defineProperty(exports, \"getUniversalLink\", { enumerable: true, get: function () { return url_1.getUniversalLink; } });\nObject.defineProperty(exports, \"openOKXDeeplink\", { enumerable: true, get: function () { return url_1.openOKXDeeplink; } });\nObject.defineProperty(exports, \"openOKXDeeplinkWithFallback\", { enumerable: true, get: function () { return url_1.openOKXDeeplinkWithFallback; } });\nObject.defineProperty(exports, \"isTelegramUrl\", { enumerable: true, get: function () { return url_1.isTelegramUrl; } });\nObject.defineProperty(exports, \"encodeTelegramUrlParameters\", { enumerable: true, get: function () { return url_1.encodeTelegramUrlParameters; } });\nObject.defineProperty(exports, \"getAppWalletDeepLink\", { enumerable: true, get: function () { return url_1.getAppWalletDeepLink; } });\nObject.defineProperty(exports, \"getTelegramWalletTWAUrl\", { enumerable: true, get: function () { return url_1.getTelegramWalletTWAUrl; } });\nObject.defineProperty(exports, \"openOKXTMAWalletlinkWithFallback\", { enumerable: true, get: function () { return url_1.openOKXTMAWalletlinkWithFallback; } });\nObject.defineProperty(exports, \"encodeConnectParams\", { enumerable: true, get: function () { return url_1.encodeConnectParams; } });\nObject.defineProperty(exports, \"encodeTWAConnectURLParams\", { enumerable: true, get: function () { return url_1.encodeTWAConnectURLParams; } });\nObject.defineProperty(exports, \"getAppWalletShortDeepLink\", { enumerable: true, get: function () { return url_1.getAppWalletShortDeepLink; } });\nObject.defineProperty(exports, \"openOKXUniversalLink\", { enumerable: true, get: function () { return url_1.openOKXUniversalLink; } });\nObject.defineProperty(exports, \"getOKXLink\", { enumerable: true, get: function () { return url_1.getOKXLink; } });\nvar utils_1 = require(\"./utils\");\nObject.defineProperty(exports, \"hexToByteArray\", { enumerable: true, get: function () { return utils_1.hexToByteArray; } });\nObject.defineProperty(exports, \"toHexString\", { enumerable: true, get: function () { return utils_1.toHexString; } });\nObject.defineProperty(exports, \"concatUint8Arrays\", { enumerable: true, get: function () { return utils_1.concatUint8Arrays; } });\nObject.defineProperty(exports, \"splitToUint8Arrays\", { enumerable: true, get: function () { return utils_1.splitToUint8Arrays; } });\nObject.defineProperty(exports, \"base64encode\", { enumerable: true, get: function () { return utils_1.base64encode; } });\nObject.defineProperty(exports, \"base64decode\", { enumerable: true, get: function () { return utils_1.base64decode; } });\nObject.defineProperty(exports, \"isIos\", { enumerable: true, get: function () { return utils_1.isIos; } });\nObject.defineProperty(exports, \"isValidObject\", { enumerable: true, get: function () { return utils_1.isValidObject; } });\nObject.defineProperty(exports, \"toSafeBase64FromBase64\", { enumerable: true, get: function () { return utils_1.toSafeBase64FromBase64; } });\nObject.defineProperty(exports, \"useShortLink\", { enumerable: true, get: function () { return utils_1.useShortLink; } });\nObject.defineProperty(exports, \"getChainId\", { enumerable: true, get: function () { return utils_1.getChainId; } });\nvar web_api_1 = require(\"./web-api\");\nObject.defineProperty(exports, \"openLink\", { enumerable: true, get: function () { return web_api_1.openLink; } });\nObject.defineProperty(exports, \"openLinkBlank\", { enumerable: true, get: function () { return web_api_1.openLinkBlank; } });\nObject.defineProperty(exports, \"openDeeplinkWithFallback\", { enumerable: true, get: function () { return web_api_1.openDeeplinkWithFallback; } });\nObject.defineProperty(exports, \"isMobileUserAgent\", { enumerable: true, get: function () { return web_api_1.isMobileUserAgent; } });\nObject.defineProperty(exports, \"isOS\", { enumerable: true, get: function () { return web_api_1.isOS; } });\nObject.defineProperty(exports, \"isBrowser\", { enumerable: true, get: function () { return web_api_1.isBrowser; } });\nvar tma_api_1 = require(\"./tma-api\");\nObject.defineProperty(exports, \"versionCompare\", { enumerable: true, get: function () { return tma_api_1.versionCompare; } });\nvar request_1 = require(\"./request\");\nObject.defineProperty(exports, \"checkMetaData\", { enumerable: true, get: function () { return request_1.checkMetaData; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getDefaultReporter = getDefaultReporter;\nexports.logDebug = logDebug;\nexports.logError = logError;\nexports.logWarning = logWarning;\nexports.reportEvent = reportEvent;\nexports.reportLog = reportLog;\nconst debug = false;\nconst forceReport = false;\nconst report_1 = require(\"./report\");\nconst defaultReporter = new report_1.OKXReporter();\nfunction getDefaultReporter() {\n    return defaultReporter;\n}\nconst packageJson = require('../../package.json');\nconst version = packageJson.version;\nfunction logDebug(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.log(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction logError(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.error(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n            if (forceReport || !debug) {\n                let content = '';\n                content += [...args].reduce((result, item) => {\n                    if (typeof item == 'string') {\n                        result += ',' + item;\n                    }\n                    else if (typeof item == 'object') {\n                        result += JSON.stringify(item);\n                    }\n                });\n                defaultReporter.sendRecordContent(content, report_1.OKXReportType.LOG, '');\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction logWarning(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.warn(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction reportEvent(type, action, content) {\n    return __awaiter(this, void 0, void 0, function* () {\n        yield defaultReporter.sendRecordContent(content, type, action);\n    });\n}\nfunction reportLog(content_1) {\n    return __awaiter(this, arguments, void 0, function* (content, action = 'default') {\n        // await defaultReporter.sendRecordContent(content, OKXReportType.LOG, action)\n    });\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mediaNotTouch = exports.mediaTouch = exports.maxWidth = void 0;\nexports.isDevice = isDevice;\nexports.media = media;\nexports.mediaMin = mediaMin;\nexports.mediaMax = mediaMax;\nexports.mediaMinMax = mediaMinMax;\nconst web_api_1 = require(\"../utils/web-api\");\nconst tma_api_1 = require(\"../utils/tma-api\");\nconst url_1 = require(\"./url\");\nconst log_1 = require(\"./log\");\nexports.maxWidth = {\n    mobile: 440,\n    tablet: 1020\n};\nfunction isDevice(device) {\n    var _a;\n    const window = (0, url_1.getWindow)();\n    if (!window) {\n        return device === 'desktop';\n    }\n    // TODO: remove this check when weba will fix viewport width\n    if ((0, tma_api_1.isTmaPlatform)('weba')) {\n        return true;\n    }\n    const width = window.innerWidth;\n    switch (device) {\n        case 'desktop':\n            return width > exports.maxWidth.tablet;\n        case 'tablet':\n            return width > exports.maxWidth.mobile;\n        default:\n        case 'mobile':\n            let isMobile = width <= exports.maxWidth.mobile || (0, web_api_1.isOS)('ios', 'android', 'ipad');\n            if (isMobile) {\n                const isTelegram = !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n                const maxTouchPoints = navigator.maxTouchPoints || 0;\n                if (isTelegram && maxTouchPoints === 0) {\n                    isMobile = false;\n                }\n                (0, log_1.logDebug)(\"isDevice mobile isTelegram and maxTouchPoints:\", isMobile, isTelegram, maxTouchPoints);\n            }\n            return isMobile;\n    }\n}\nfunction media(device) {\n    switch (device) {\n        case 'mobile':\n            return `@media (max-width: ${exports.maxWidth.mobile}px)`;\n        case 'tablet':\n            return `@media (max-width: ${exports.maxWidth.tablet}px) (min-width: ${exports.maxWidth.mobile}px)`;\n        default:\n        case 'desktop':\n            return `@media (min-width: ${exports.maxWidth.tablet}px)`;\n    }\n}\nfunction mediaMin(px) {\n    return `@media (min-width: ${px}px)`;\n}\nfunction mediaMax(px) {\n    return `@media (max-width: ${px}px)`;\n}\nfunction mediaMinMax(pxMin, pxMax) {\n    return `@media (min-width: ${pxMin}px) and (max-width: ${pxMax}px)`;\n}\nexports.mediaTouch = '@media (hover: none)';\nexports.mediaNotTouch = '@media not all and (hover: none)';\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXReporter = exports.OKXReportSide = exports.OKXReportType = exports.versionStr = void 0;\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst log_1 = require(\"./log\");\nconst url_1 = require(\"./url\");\nconst utils_1 = require(\"../utils\");\nconst localforage_1 = __importDefault(require(\"localforage\"));\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nexports.versionStr = '1.6.8';\nconst reportApiList = [\n    'https://www.okx.com/dappstat/wallet-connect',\n    'https://www.okx.ac/dappstat/wallet-connect'\n];\nconst reportCacheKey = 'OKX_RP_CK';\nconst reportUUIDKey = 'OKX_RP_UUID_CK';\nconst MAX_LIMIT_REPORTCOUNT = 100;\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"*/*\",\n    \"Content-Type\": \"text/plain\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\nexports.OKXReportType = {\n    PAGE_IN: 'page_in',\n    PAGE_OUT: 'page_out',\n    CLICK: 'click',\n    LOG: 'log',\n};\nexports.OKXReportSide = {\n    DAPP: 'dapp',\n    WALLET: 'wallet',\n};\nclass IReporter {\n}\nconst fetchWithTimeout = (url, options, timeout = 5000) => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n    const fetchPromise = (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, options), { signal }));\n    const timeoutPromise = new Promise((_, reject) => setTimeout(() => {\n        controller.abort();\n        reject(new Error('Request timed out'));\n    }, timeout));\n    return Promise.race([fetchPromise, timeoutPromise]);\n};\nconst fetchListWithTimeout = (urls_1, ...args_1) => __awaiter(void 0, [urls_1, ...args_1], void 0, function* (urls, options = {}, timeout = 5000) {\n    for (const url of urls) {\n        try {\n            const controller = new AbortController();\n            const signal = controller.signal;\n            const fetchPromise = (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, options), { signal }));\n            const timeoutPromise = new Promise((_, reject) => setTimeout(() => {\n                controller.abort();\n                reject(new Error('Request timed out'));\n            }, timeout));\n            const response = yield Promise.race([fetchPromise, timeoutPromise]);\n            if (response.ok) {\n                return response;\n            }\n            if (response.status == 502) {\n                console.error(`Fetch error status 502`, url);\n                return response;\n            }\n        }\n        catch (error) {\n            console.error(`Fetch error for ${url}:`, error);\n        }\n    }\n    console.error(`'All fetch attempts failed.'`);\n    throw new Error('All fetch attempts failed.');\n});\nclass OKXReporter {\n    constructor() {\n        this.currentSide = exports.OKXReportSide.DAPP;\n        this.currentVersion = exports.versionStr;\n        this.storage = localforage_1.default.createInstance({\n            name: \"OKXReporter\"\n        });\n        this.recordList = new Array();\n        this.currentUUID = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(16));\n    }\n    configVersionAndSide(version, side, appname) {\n        this.currentVersion = version;\n        this.currentSide = side;\n        this.appName = appname;\n    }\n    get recordCacheKey() {\n        return reportCacheKey + \"@\" + this.appName;\n    }\n    get reportPlatform() {\n        if ((0, utils_1.isMobileUserAgent)()) {\n            if ((0, utils_1.isIos)()) {\n                return 'iOS';\n            }\n            else {\n                return 'android';\n            }\n        }\n        else {\n            return 'pc';\n        }\n    }\n    beginReport() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.startErrorCatching();\n            let records = yield this.storage.getItem(this.recordCacheKey);\n            let uuid = yield this.storage.getItem(reportUUIDKey);\n            if (uuid) {\n                this.currentUUID = uuid;\n            }\n            else {\n                this.storage.setItem(reportUUIDKey, this.currentUUID);\n            }\n            if (records) {\n                this.recordList = records;\n                (0, log_1.logDebug)('resume records from cache length: ', this.recordList.length);\n                yield this.sendCachedRecords();\n            }\n        });\n    }\n    startErrorCatching() {\n        let window = (0, url_1.getWindow)();\n        if (window) {\n            (0, log_1.logDebug)('begin capture console error');\n            // window.onerror = (event: Event | string, source?: string, lineno?: number, colno?: number, error?: Error) => {\n            //     logDebug('capture error info:', error, source)\n            //     this.markRecord(error?.message+'/'+error?.name+'/'+error?.stack, OKXReportType.LOG, '', this.currentSide)\n            // }\n        }\n    }\n    cachedErrors() {\n        return this.recordList;\n    }\n    sendRecord(record) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    const body = JSON.stringify(record);\n                    (0, log_1.logDebug)('[REPORT] record: ', body);\n                    const res = yield fetchListWithTimeout(reportApiList, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body: body }));\n                    (0, log_1.logDebug)('[REPORT] get rsp:', res);\n                    if (res && res.status && res.status == 200) {\n                        this.recordList = this.recordList.filter((item) => {\n                            return item.timestamp != record.timestamp || item.content != record.content;\n                        });\n                        yield this.storage.setItem(this.recordCacheKey, this.recordList);\n                        resolve(true);\n                    }\n                    else {\n                        reject(false);\n                    }\n                }\n                catch (e) {\n                    (0, log_1.logDebug)('send record error:', e);\n                    resolve(true);\n                    // reject(e)\n                }\n            }));\n        });\n    }\n    sendRecordContent(content, type, action) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            let path = (_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.location.pathname;\n            let location = (_b = (0, url_1.getWindow)()) === null || _b === void 0 ? void 0 : _b.location.origin;\n            if (path && location) {\n                location = location + path;\n            }\n            let language = (_c = (0, url_1.getWindow)()) === null || _c === void 0 ? void 0 : _c.navigator.language;\n            let ua = (_d = (0, url_1.getWindow)()) === null || _d === void 0 ? void 0 : _d.navigator.userAgent;\n            let platform = this.reportPlatform;\n            let reportItem = {\n                uuid: this.currentUUID,\n                version: this.currentVersion,\n                content: content,\n                action: action,\n                side: this.currentSide,\n                timestamp: new Date().getTime(),\n                url: location,\n                lang: language,\n                type: type,\n                platform: platform,\n                \"user-agent\": ua\n            };\n            yield this.markRecordItem(reportItem);\n            yield this.sendRecord(reportItem);\n        });\n    }\n    sendCachedRecords() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let sendList = this.recordList.map(record => this.sendRecord(record));\n                (0, log_1.logDebug)('[REPORT] submit & clean recorded caches begin @', new Date().toUTCString());\n                Promise.allSettled(sendList).then((results) => {\n                    (0, log_1.logDebug)('[REPORT] submit & clean recorded caches ends @', new Date().toUTCString());\n                    let keepIndex = [];\n                    results.forEach((result, index) => {\n                        if (result.status == \"rejected\") {\n                            keepIndex.push(index);\n                        }\n                    });\n                    this.recordList = this.recordList.filter((_, index) => !keepIndex.includes(index));\n                    this.storage.setItem(this.recordCacheKey, this.recordList).then(function (value) {\n                        resolve();\n                    }).catch(function (err) {\n                        reject(err);\n                    });\n                });\n            }));\n        });\n    }\n    markRecordItem(item) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.recordList.push(item);\n            if (this.recordList.length > MAX_LIMIT_REPORTCOUNT) {\n                let offset = this.recordList.length - MAX_LIMIT_REPORTCOUNT;\n                this.recordList.splice(0, offset);\n            }\n            return new Promise((resolve, reject) => {\n                this.storage.setItem(this.recordCacheKey, this.recordList).then(function (value) {\n                    resolve(item);\n                }).catch(function (err) {\n                    reject(err);\n                });\n            });\n        });\n    }\n    markRecord(content, type, action, side) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            let path = (_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.location.pathname;\n            let location = (_b = (0, url_1.getWindow)()) === null || _b === void 0 ? void 0 : _b.location.origin;\n            if (path && location) {\n                location = location + path;\n            }\n            let language = (_c = (0, url_1.getWindow)()) === null || _c === void 0 ? void 0 : _c.navigator.language;\n            let platform = this.reportPlatform;\n            let ua = (_d = (0, url_1.getWindow)()) === null || _d === void 0 ? void 0 : _d.navigator.userAgent;\n            let reportItem = {\n                uuid: this.currentUUID,\n                version: this.currentVersion,\n                content: content,\n                action: action,\n                side: side,\n                timestamp: new Date().getTime(),\n                url: location,\n                lang: language,\n                type: type,\n                platform: platform,\n                \"user-agent\": ua\n            };\n            return yield this.markRecordItem(reportItem);\n        });\n    }\n}\nexports.OKXReporter = OKXReporter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Report_WalletType_Key = exports.Report_Proceed_QRCode_Click = exports.Report_ChooseType_Download_Click = exports.Report_ChooseType_ConnectWallet_Click = exports.Report_Proceed_Retry_Click = exports.Report_ChooseType_ConnectWallet_View = exports.Report_Loading_ConnectWallet_View = exports.Report_Proceed_QRCode_View = exports.Report_Proceed_Proceed_View = void 0;\nexports.Report_Proceed_Proceed_View = \"OKXConnectSDK_Proceed_Proceed_View\";\nexports.Report_Proceed_QRCode_View = \"OKXConnectSDK_Proceed_QRCode_View\";\nexports.Report_Loading_ConnectWallet_View = \"OKXConnectSDK_Loading_ConnectWallet_View\";\nexports.Report_ChooseType_ConnectWallet_View = \"OKXConnectSDK_ChooseType_ConnectWallet_View\";\nexports.Report_Proceed_Retry_Click = \"OKXConnectSDK_Proceed_Retry_Click\";\nexports.Report_ChooseType_ConnectWallet_Click = \"OKXConnectSDK_ChooseType_ConnectWallet_Click\";\nexports.Report_ChooseType_Download_Click = \"OKXConnectSDK_ChooseType_Download_Click\";\nexports.Report_Proceed_QRCode_Click = \"OKXConnectSDK_Proceed_QRCode_Click\";\nexports.Report_WalletType_Key = 'wallet_type';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkMetaData = checkMetaData;\nconst protocol_1 = require(\"../protocol\");\nfunction checkMetaData(dappMetaData) {\n    if (!dappMetaData) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"You have to specify a `dappMetaData`in the options.\");\n    }\n    if (!dappMetaData.name) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"dappName is required\");\n    }\n    if (!dappMetaData.icon) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"icon is required\");\n    }\n    return true;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.safeJsonParse = safeJsonParse;\nexports.safeJsonStringify = safeJsonStringify;\nconst log_1 = require(\"./log\");\nconst JSONStringify = (data) => JSON.stringify(data, (_, value) => (typeof value === \"bigint\" ? value.toString() + \"n\" : value));\n/*\n  Function to parse JSON.\n  If JSON has values in our custom format BigInt (strings with \"n\" character at the end), we just parse them to BigInt values.\n  If JSON has big number values, but not in our custom format, we copy it, and in a copy we convert those values to our custom format,\n  then parse them to BigInt values.\n  Other values (not big numbers and not our custom format BigInt values) are not affected and parsed as native JSON.parse() would parse them.\n*/\nconst JSONParse = (json) => {\n    /*\n      Big numbers are found and marked using Regex with this condition:\n      Number's length is bigger than 16 || Number's length is 16 and any numerical digit of the number is greater than that of the Number.MAX_SAFE_INTEGER\n      Additionally, it skips values that are strings (between double quotes).\n      */\n    // prettier-ignore\n    // eslint-disable-next-line no-useless-escape\n    const numbersBiggerThanMaxInt = /:(\\b\\d{17,}|\\b(?:[9](?:[1-9]07199254740991|0[1-9]7199254740991|00[8-9]199254740991|007[2-9]99254740991|007199[3-9]54740991|0071992[6-9]4740991|00719925[5-9]740991|007199254[8-9]40991|0071992547[5-9]0991|00719925474[1-9]991|00719925474099[2-9])))(?=[,\\}\\]]|$)/g;\n    const serializedData = json.replace(numbersBiggerThanMaxInt, (match, group) => `:\"${group}n\"`);\n    try {\n        return JSON.parse(serializedData, (_, value) => {\n            const isCustomFormatBigInt = typeof value === \"string\" && value.match(/^\\d+n$/);\n            if (isCustomFormatBigInt)\n                return BigInt(value.substring(0, value.length - 1));\n            return value;\n        });\n    }\n    catch (e) {\n        return JSON.parse(json);\n    }\n};\nfunction safeJsonParse(value) {\n    if (typeof value !== \"string\") {\n        (0, log_1.logDebug)(value);\n        throw new Error(`Cannot safe json parse value of type ${typeof value}`);\n    }\n    try {\n        return JSONParse(value);\n    }\n    catch (e) {\n        // eslint-disable-next-line no-console\n        console.error(\"safeJsonParse error:\", e);\n        return value;\n    }\n}\nfunction safeJsonStringify(value) {\n    return typeof value === \"string\" ? value : JSONStringify(value) || \"\";\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.okxfromString = okxfromString;\nexports.okxtoString = okxtoString;\nexports.alloc = alloc;\nexports.allocUnsafe = allocUnsafe;\nconst basics_1 = require(\"multiformats/basics\");\nconst log_1 = require(\"../utils/log\");\nfunction okxfromString(string, encoding = 'utf8') {\n    const base = BASES[encoding];\n    (0, log_1.logDebug)(\"okxfromstring ====> \");\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    return base.decoder.decode(`${base.prefix}${string}`);\n}\nfunction okxtoString(array, encoding = 'utf8') {\n    const base = BASES[encoding];\n    (0, log_1.logDebug)(\"okxtoString ====> \");\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    return base.encoder.encode(array).substring(1);\n}\nfunction alloc(size = 0) {\n    return new Uint8Array(size);\n}\nfunction allocUnsafe(size = 0) {\n    return new Uint8Array(size);\n}\nfunction createCodec(name, prefix, encode, decode) {\n    return {\n        name,\n        prefix,\n        encoder: {\n            name,\n            prefix,\n            encode\n        },\n        decoder: { decode }\n    };\n}\nconst string = createCodec('utf8', 'u', buf => {\n    const decoder = new TextDecoder('utf8');\n    return 'u' + decoder.decode(buf);\n}, str => {\n    const encoder = new TextEncoder();\n    return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n    let result = 'a';\n    for (let i = 0; i < buf.length; i++) {\n        let bufNum = buf[i];\n        if (bufNum && String.fromCharCode(bufNum)) {\n            result += String.fromCharCode(bufNum);\n        }\n    }\n    return result;\n}, str => {\n    str = str.substring(1);\n    const buf = allocUnsafe(str.length);\n    for (let i = 0; i < str.length; i++) {\n        buf[i] = str.charCodeAt(i);\n    }\n    return buf;\n});\nconst BASES = Object.assign({ utf8: string, 'utf-8': string, hex: basics_1.bases.base16, latin1: ascii, ascii: ascii, binary: ascii }, basics_1.bases);\n","\"use strict\";\nvar _a, _b, _c, _d, _e, _f, _g;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isTmaPlatform = isTmaPlatform;\nexports.isInTMA = isInTMA;\nexports.inTg = inTg;\nexports.isInTelegramBrowser = isInTelegramBrowser;\nexports.sendExpand = sendExpand;\nexports.sendOpenTelegramLink = sendOpenTelegramLink;\nexports.versionCompare = versionCompare;\nconst url_1 = require(\"./url\");\nconst log_1 = require(\"./log\");\nconst protocol_1 = require(\"../protocol\");\nconst web_api_1 = require(\"./web-api\");\nlet initParams = {};\ntry {\n    let locationHash = location.hash.toString();\n    initParams = urlParseHashParams(locationHash);\n}\ncatch (e) { }\nlet tmaPlatform = 'unknown';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppPlatform) {\n    tmaPlatform = (_a = initParams.tgWebAppPlatform) !== null && _a !== void 0 ? _a : 'unknown';\n}\nif (tmaPlatform === 'unknown') {\n    const window = (0, url_1.getWindow)();\n    tmaPlatform = (_d = (_c = (_b = window === null || window === void 0 ? void 0 : window.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : 'unknown';\n}\nlet webAppVersion = '6.0';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppVersion) {\n    webAppVersion = initParams.tgWebAppVersion;\n}\nif (!webAppVersion) {\n    const window = (0, url_1.getWindow)();\n    webAppVersion = (_g = (_f = (_e = window === null || window === void 0 ? void 0 : window.Telegram) === null || _e === void 0 ? void 0 : _e.WebApp) === null || _f === void 0 ? void 0 : _f.version) !== null && _g !== void 0 ? _g : '6.0';\n}\n/**\n * Returns true if the app is running in TMA on the specified platform.\n * @param platforms\n */\nfunction isTmaPlatform(...platforms) {\n    return platforms.includes(tmaPlatform);\n}\n/**\n * Returns true if the app is running in TMA.\n */\nfunction isInTMA() {\n    var _a;\n    return tmaPlatform !== 'unknown' || !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n}\nfunction inTg() {\n    // return true\n    return isInTelegramBrowser() || isInTMA();\n}\n/**\n * Returns true if the app is running in the Telegram browser.\n */\nfunction isInTelegramBrowser() {\n    var _a;\n    const isTelegramWebview = !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebview);\n    return (isInTMA() || isTelegramWebview) && tmaPlatform === 'unknown';\n}\n/**\n * Expand the app window.\n */\nfunction sendExpand() {\n    postEvent('web_app_expand', {});\n}\n/**\n * Opens link in TMA or in new tab and returns a function that closes the tab.\n * @param link The link to open.\n * @param fallback The function to call if the link can't be opened in TMA.\n */\nfunction sendOpenTelegramLink(link, fallback) {\n    const url = new URL(link);\n    if (url.protocol !== 'http:' && url.protocol !== 'https:') {\n        if (fallback) {\n            return fallback();\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Url protocol is not supported: ${url}`);\n    }\n    if (url.hostname !== 't.me') {\n        if (fallback) {\n            return fallback();\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Url host is not supported: ${url}`);\n    }\n    const pathFull = url.pathname + url.search;\n    if (isIframe() || versionAtLeast('6.1')) {\n        postEvent('web_app_open_tg_link', { path_full: pathFull });\n    }\n    else {\n        (0, web_api_1.openLinkBlank)('https://t.me' + pathFull);\n    }\n}\nfunction isIframe() {\n    try {\n        const window = (0, url_1.getWindow)();\n        if (!window) {\n            return false;\n        }\n        return window.parent != null && window !== window.parent;\n    }\n    catch (e) {\n        return false;\n    }\n}\nfunction postEvent(eventType, eventData) {\n    try {\n        const window = (0, url_1.getWindow)();\n        if (!window) {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Can't post event to parent window: window is not defined`);\n        }\n        if (window.TelegramWebviewProxy !== undefined) {\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.TelegramWebviewProxy.postEvent(eventType, JSON.stringify(eventData));\n        }\n        else if (window.external && 'notify' in window.external) {\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.external.notify(JSON.stringify({ eventType: eventType, eventData: eventData }));\n        }\n        else if (isIframe()) {\n            const trustedTarget = '*';\n            const message = JSON.stringify({ eventType: eventType, eventData: eventData });\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.parent.postMessage(message, trustedTarget);\n        }\n        else {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Can't post event to TMA`);\n        }\n    }\n    catch (e) {\n        (0, log_1.logError)(`Can't post event to parent window: ${e}`);\n    }\n}\nfunction urlParseHashParams(locationHash) {\n    locationHash = locationHash.replace(/^#/, '');\n    let params = {};\n    if (!locationHash.length) {\n        return params;\n    }\n    if (locationHash.indexOf('=') < 0 && locationHash.indexOf('?') < 0) {\n        params._path = urlSafeDecode(locationHash);\n        return params;\n    }\n    let qIndex = locationHash.indexOf('?');\n    if (qIndex >= 0) {\n        let pathParam = locationHash.substr(0, qIndex);\n        params._path = urlSafeDecode(pathParam);\n        locationHash = locationHash.substr(qIndex + 1);\n    }\n    let query_params = urlParseQueryString(locationHash);\n    for (let k in query_params) {\n        params[k] = query_params[k];\n    }\n    return params;\n}\nfunction urlSafeDecode(urlencoded) {\n    try {\n        urlencoded = urlencoded.replace(/\\+/g, '%20');\n        return decodeURIComponent(urlencoded);\n    }\n    catch (e) {\n        return urlencoded;\n    }\n}\nfunction urlParseQueryString(queryString) {\n    let params = {};\n    if (!queryString.length) {\n        return params;\n    }\n    let queryStringParams = queryString.split('&');\n    let i, param, paramName, paramValue;\n    for (i = 0; i < queryStringParams.length; i++) {\n        param = queryStringParams[i].split('=');\n        paramName = urlSafeDecode(param[0]);\n        paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n        params[paramName] = paramValue;\n    }\n    return params;\n}\nfunction versionCompare(v1, v2) {\n    if (typeof v1 !== 'string')\n        v1 = '';\n    if (typeof v2 !== 'string')\n        v2 = '';\n    let v1List = v1.replace(/^\\s+|\\s+$/g, '').split('.');\n    let v2List = v2.replace(/^\\s+|\\s+$/g, '').split('.');\n    let a, i, p1, p2;\n    a = Math.max(v1List.length, v2List.length);\n    for (i = 0; i < a; i++) {\n        p1 = parseInt(v1List[i]) || 0;\n        p2 = parseInt(v2List[i]) || 0;\n        if (p1 === p2)\n            continue;\n        if (p1 > p2)\n            return 1;\n        return -1;\n    }\n    return 0;\n}\nfunction versionAtLeast(ver) {\n    return versionCompare(webAppVersion, ver) >= 0;\n}\n","\"use strict\";\nvar _a, _b, _c, _d;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.removeUrlLastSlash = removeUrlLastSlash;\nexports.addPathToUrl = addPathToUrl;\nexports.getUniversalLink = getUniversalLink;\nexports.openOKXDeeplink = openOKXDeeplink;\nexports.openOKXUniversalLink = openOKXUniversalLink;\nexports.openOKXDeeplinkWithFallback = openOKXDeeplinkWithFallback;\nexports.getWindow = getWindow;\nexports.isTelegramUrl = isTelegramUrl;\nexports.encodeTelegramUrlParameters = encodeTelegramUrlParameters;\nexports.encodeConnectParams = encodeConnectParams;\nexports.encodeTWAConnectURLParams = encodeTWAConnectURLParams;\nexports.getAppWalletDeepLink = getAppWalletDeepLink;\nexports.getAppWalletShortDeepLink = getAppWalletShortDeepLink;\nexports.getTelegramWalletTWAUrl = getTelegramWalletTWAUrl;\nexports.openOKXTMAWalletlinkWithFallback = openOKXTMAWalletlinkWithFallback;\nexports.isInTMA = isInTMA;\nexports.isInTelegramBrowser = isInTelegramBrowser;\nexports.getOKXLink = getOKXLink;\nconst protocol_1 = require(\"../protocol\");\nconst log_1 = require(\"./log\");\nconst constants_1 = require(\"../protocol/constants\");\nconst utils_1 = require(\"./utils\");\nconst tma_api_1 = require(\"./tma-api\");\nconst constants_2 = require(\"../connect/constants\");\nfunction removeUrlLastSlash(url) {\n    if (url.slice(-1) === '/') {\n        return url.slice(0, -1);\n    }\n    return url;\n}\nfunction addPathToUrl(url, path) {\n    return removeUrlLastSlash(url) + '/' + path;\n}\nfunction getUniversalLink(deeplinkUrl, useStandardUniversalLink = false) {\n    console.log(\"getUniversalLink deeplinkUrl:\", deeplinkUrl, \", useStandardUniversalLink:\", useStandardUniversalLink);\n    /*const replaceStrWithParam = `${standardDeeplink}?param=`\n    if(!useStandardUniversalLink && deeplinkUrl.startsWith(replaceStrWithParam)){\n        const cleanUrl = deeplinkUrl.replace(replaceStrWithParam, '');\n        logDebug(\"getUniversalLink cleanUrl:\",cleanUrl)\n        const deeplinkEncodeUrl= encodeURIComponent(cleanUrl);\n        logDebug(\"getUniversalLink standardUniversalLink:\",standardUniversalLink)\n        logDebug(\"getUniversalLink `${shortUniversalLink}?param=${deeplinkEncodeUrl}`:\",`${shortUniversalLink}?param=${deeplinkEncodeUrl}`)\n        return `${shortUniversalLink}?param=${deeplinkEncodeUrl}`;\n    }else if(!useStandardUniversalLink && deeplinkUrl == standardDeeplink){\n        logDebug(\"getUniversalLink shortUniversalLink:\",shortUniversalLink)\n        return shortUniversalLink;\n    }else {\n        const deeplinkEncodeUrl= encodeURIComponent(deeplinkUrl);\n        console.log(\"getUniversalLink standardUniversalLink:\",standardUniversalLink)\n\n        return `${standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`;\n    }*/\n    const deeplinkEncodeUrl = encodeURIComponent(deeplinkUrl);\n    console.log(\"getUniversalLink standardUniversalLink:\", protocol_1.standardUniversalLink);\n    console.log(\"getUniversalLink standardUniversalLink:\", `${protocol_1.standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`);\n    return `${protocol_1.standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`;\n}\nfunction openOKXDeeplink(deeplinkUrl) {\n    var _a;\n    const fullUrl = getUniversalLink(deeplinkUrl);\n    const isTelegram = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n    console.log(\"openOKXDeeplink fullUrl:\", fullUrl);\n    if (!(0, utils_1.isIos)()) {\n        let newWindow = null;\n        if (isTelegram) {\n            newWindow = window.open(deeplinkUrl, '_blank');\n        }\n        else {\n            window.location.href = deeplinkUrl;\n        }\n    }\n    else {\n        openOKXUniversalLink(fullUrl);\n    }\n}\nfunction openOKXUniversalLink(fullUrl) {\n    if (!(0, utils_1.isIos)()) {\n        // if (isTelegram) {\n        window.open(fullUrl, '_blank');\n        // } else {\n        //     window.location.href = fullUrl;\n        // }\n    }\n    else {\n        if (isInTMA()) {\n            window.open(fullUrl, '_blank');\n        }\n        else {\n            console.log(\"windowOpen[before]: \", Date.now());\n            if (window === null || window === void 0 ? void 0 : window.okxLogDebug) {\n                window.open(fullUrl, '_blank');\n            }\n            else {\n                window.open(fullUrl, '_self');\n            }\n            console.log(\"windowOpen[after]: \", Date.now());\n        }\n    }\n}\nfunction openOKXDeeplinkWithFallback(deeplinkUrl) {\n    var _a;\n    const fullUrl = getUniversalLink(deeplinkUrl);\n    const isTelegram = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n    console.log(\"openOKXDeeplinkWithFallback fullUrl:\", fullUrl);\n    let deepLinkOpened = false;\n    const timeoutDuration = 3000; // 1.5秒的等待时间\n    const downloadUrl = protocol_1.standardUniversalLink;\n    console.log(\"openOKXDeeplinkWithFallback standardUniversalLink:\", protocol_1.standardUniversalLink);\n    if (!(0, utils_1.isIos)()) {\n        let newWindow = null;\n        var fallbackToDownloadPage = () => {\n            if (!deepLinkOpened) {\n                if (newWindow) {\n                    newWindow.open(fullUrl, '_self');\n                }\n                else {\n                    window.open(fullUrl, '_blank');\n                }\n            }\n        };\n        if (isTelegram) {\n            newWindow = window.open(deeplinkUrl, '_blank');\n        }\n        else {\n            window.location.href = deeplinkUrl;\n        }\n        setTimeout(fallbackToDownloadPage, timeoutDuration);\n        window.addEventListener('blur', () => {\n            deepLinkOpened = true;\n        }, { once: true });\n        document.addEventListener('visibilitychange', () => {\n            if (document.visibilityState === 'hidden') {\n                deepLinkOpened = true;\n            }\n        });\n    }\n    else {\n        if (isTelegram) {\n            window.open(fullUrl, '_blank');\n        }\n        else {\n            console.log(\"windowOpen[before]: \", Date.now());\n            if (window === null || window === void 0 ? void 0 : window.okxLogDebug) {\n                window.open(fullUrl, '_blank');\n            }\n            else {\n                window.open(fullUrl, '_self');\n            }\n            console.log(\"windowOpen[after]: \", Date.now());\n        }\n    }\n}\nfunction getWindow() {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    return undefined;\n}\nfunction isTelegramUrl(link) {\n    if (!link) {\n        return false;\n    }\n    const url = new URL(link);\n    return url.protocol === 'tg:' || url.hostname === 't.me';\n}\nfunction encodeTelegramUrlParameters(parameters) {\n    let encodedParameters = parameters;\n    encodedParameters = encodedParameters.replace(/\\./g, '%2E');\n    encodedParameters = encodedParameters.replace(/-/g, '%2D');\n    encodedParameters = encodedParameters.replace(/_/g, '%5F');\n    encodedParameters = encodedParameters.replace(/&/g, '-');\n    encodedParameters = encodedParameters.replace(/=/g, '__');\n    encodedParameters = encodedParameters.replace(/%/g, '--');\n    return encodedParameters;\n}\nfunction encodeConnectParams(connectRequest) {\n    let connectRequestWithVersion = Object.assign(Object.assign({}, connectRequest), { protocolVersion: constants_2.CONNECT_PROTOCOL_VER });\n    const connectRequestStr = JSON.stringify(connectRequestWithVersion);\n    (0, log_1.logDebug)(\"url encodeConnectParams connectRequestStr \", connectRequestStr);\n    const utf8Array = new TextEncoder().encode(connectRequestStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    // .replace(/\\+/g, '-')\n    // .replace(/\\//g, '_')\n    // .replace(/=+$/, ''); //Compatible with older versions of iOS. Cannot be added directly  (Base64 URL Safe)\n    (0, log_1.logDebug)(\"url encodeConnectParams base64Encoded \", base64Encoded);\n    return base64Encoded;\n}\nfunction encodeTWAConnectURLParams(connectRequest) {\n    const connectRequestStr = JSON.stringify({ topic: connectRequest.topic, clientId: connectRequest.clientId });\n    (0, log_1.logDebug)(\"url encodeConnectParams connectRequestStr\", connectRequestStr);\n    const utf8Array = new TextEncoder().encode(connectRequestStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    return base64Encoded;\n}\nfunction getAppWalletDeepLink(connectParam) {\n    return `${protocol_1.standardDeeplink}?param=${connectParam}`;\n}\nfunction getAppWalletShortDeepLink(topic, clientId) {\n    return `${constants_1.shortUniversalLink}?topic=${topic}${(0, utils_1.getLastSixMd5Hash)(clientId)}`;\n}\n//  make telegram okx wallet TWA url\nfunction getTelegramWalletTWAUrl(connectParam, redirectStr) {\n    let base64Content = { okxconnect: \"\", redirect: \"\", extraparams: \"\", fromtg: false };\n    if (connectParam) {\n        base64Content.okxconnect = connectParam;\n    }\n    if (redirectStr) {\n        base64Content.redirect = redirectStr;\n    }\n    if (!isInTMA()) {\n        base64Content.fromtg = false;\n    }\n    else {\n        base64Content.fromtg = true;\n    }\n    (0, log_1.logDebug)('getTelegramWalletTWAUrl redirect:', base64Content.redirect);\n    let base64ContentStr = JSON.stringify(base64Content);\n    const utf8Array = new TextEncoder().encode(base64ContentStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    const urlSafeBase64 = (0, utils_1.toSafeBase64FromBase64)(base64Encoded);\n    (0, log_1.logDebug)('[TWA] open link:', base64Content, base64Encoded);\n    if (connectParam || redirectStr) {\n        if (!isInTMA()) {\n            // return `http://localhost:5173?tgWebAppStartParam=${urlSafeBase64}`\n            if ((0, constants_1.getTestTwaUrl)()) {\n                return `${(0, constants_1.getTestTwaUrl)()}?tgWebAppStartParam=${urlSafeBase64}`;\n            }\n            else if ((0, constants_1.getTestTgTwaUrl)()) {\n                let result = (0, constants_1.getBotNameAndAppName)((0, constants_1.getTestTgTwaUrl)());\n                if (result) {\n                    let { botName, appName } = result;\n                    return `tg://resolve?domain=${botName}&appname=${appName}&startapp=${urlSafeBase64}`;\n                }\n                return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}&startapp=${urlSafeBase64}`;\n            }\n            else {\n                return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}&startapp=${urlSafeBase64}`;\n            }\n        }\n        else {\n            if ((0, constants_1.getTestTgTwaUrl)()) {\n                return `${(0, constants_1.getTestTgTwaUrl)()}?startapp=${urlSafeBase64}`;\n            }\n            else {\n                return `https://t.me/${constants_1.tgwalletName}/start?startapp=${urlSafeBase64}`;\n            }\n        }\n    }\n    if (!isInTMA()) {\n        // return \"http://localhost:5173\"\n        if ((0, constants_1.getTestTwaUrl)()) {\n            return `${(0, constants_1.getTestTwaUrl)()}`;\n        }\n        else if ((0, constants_1.getTestTgTwaUrl)()) {\n            let result = (0, constants_1.getBotNameAndAppName)((0, constants_1.getTestTgTwaUrl)());\n            if (result) {\n                let { botName, appName } = result;\n                return `tg://resolve?domain=${botName}&appname=${appName}`;\n            }\n            return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}`;\n        }\n        else {\n            return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}`;\n        }\n    }\n    else {\n        if ((0, constants_1.getTestTgTwaUrl)()) {\n            return `${(0, constants_1.getTestTgTwaUrl)()}`;\n        }\n        else {\n            return `https://t.me/${constants_1.tgwalletName}/start`;\n        }\n    }\n}\n//  open TWA url in telegram\nfunction openOKXTMAWalletlinkWithFallback(twaDeepLink) {\n    var _a, _b, _c, _d, _e;\n    (0, log_1.logDebug)('[TWA] open link:', twaDeepLink, \"isInTMA ==> \", isInTMA());\n    if (!isInTMA()) {\n        if ((0, constants_1.getTestTwaUrl)()) {\n            window.open(twaDeepLink, '_blank');\n        }\n        else {\n            window.open(twaDeepLink, '_self');\n        }\n    }\n    else {\n        if ((_b = (_a = getWindow()) === null || _a === void 0 ? void 0 : _a.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) {\n            (_e = (_d = (_c = getWindow()) === null || _c === void 0 ? void 0 : _c.Telegram) === null || _d === void 0 ? void 0 : _d.WebApp) === null || _e === void 0 ? void 0 : _e.openTelegramLink(twaDeepLink);\n        }\n        else {\n            (0, tma_api_1.sendOpenTelegramLink)(twaDeepLink);\n        }\n    }\n}\n/**\n * Returns true if the app is running in TMA.\n */\nfunction urlSafeDecode(urlencoded) {\n    try {\n        urlencoded = urlencoded.replace(/\\+/g, '%20');\n        return decodeURIComponent(urlencoded);\n    }\n    catch (e) {\n        return urlencoded;\n    }\n}\nfunction urlParseQueryString(queryString) {\n    let params = {};\n    if (!queryString.length) {\n        return params;\n    }\n    let queryStringParams = queryString.split('&');\n    let i, param, paramName, paramValue;\n    for (i = 0; i < queryStringParams.length; i++) {\n        param = queryStringParams[i].split('=');\n        paramName = urlSafeDecode(param[0]);\n        paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n        params[paramName] = paramValue;\n    }\n    return params;\n}\nfunction urlParseHashParams(locationHash) {\n    locationHash = locationHash.replace(/^#/, '');\n    let params = {};\n    if (!locationHash.length) {\n        return params;\n    }\n    if (locationHash.indexOf('=') < 0 && locationHash.indexOf('?') < 0) {\n        params._path = urlSafeDecode(locationHash);\n        return params;\n    }\n    let qIndex = locationHash.indexOf('?');\n    if (qIndex >= 0) {\n        let pathParam = locationHash.substr(0, qIndex);\n        params._path = urlSafeDecode(pathParam);\n        locationHash = locationHash.substr(qIndex + 1);\n    }\n    let query_params = urlParseQueryString(locationHash);\n    for (let k in query_params) {\n        params[k] = query_params[k];\n    }\n    return params;\n}\nlet initParams = {};\ntry {\n    let locationHash = location.hash.toString();\n    initParams = urlParseHashParams(locationHash);\n}\ncatch (e) { }\nlet tmaPlatform = 'unknown';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppPlatform) {\n    tmaPlatform = (_a = initParams.tgWebAppPlatform) !== null && _a !== void 0 ? _a : 'unknown';\n}\nif (tmaPlatform === 'unknown') {\n    const window = getWindow();\n    tmaPlatform = (_d = (_c = (_b = window === null || window === void 0 ? void 0 : window.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : 'unknown';\n}\nfunction isInTMA() {\n    var _a;\n    return tmaPlatform !== 'unknown' || !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n}\n/**\n * Returns true if the app is running in the Telegram browser.\n */\nfunction isInTelegramBrowser() {\n    var _a;\n    const isTelegramWebview = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebview);\n    return (isInTMA() || isTelegramWebview) && tmaPlatform === 'unknown';\n}\nfunction getOKXLink(connectRequest, useMini = false, tmaReturnUrl) {\n    (0, log_1.logDebug)(`url  getOKXLink() called connectRequest==> ${JSON.stringify(connectRequest)}  useMini=> ${useMini}  tmaReturnUrl==> ${tmaReturnUrl}`);\n    if (useMini) {\n        if (connectRequest) {\n            var encodeTGParams = encodeTWAConnectURLParams(connectRequest);\n            return getTelegramWalletTWAUrl(encodeTGParams, tmaReturnUrl !== null && tmaReturnUrl !== void 0 ? tmaReturnUrl : \"back\");\n        }\n        else {\n            return getTelegramWalletTWAUrl(undefined, tmaReturnUrl !== null && tmaReturnUrl !== void 0 ? tmaReturnUrl : \"back\");\n        }\n    }\n    else {\n        if ((0, utils_1.useShortLink)()) {\n            if (connectRequest) {\n                return getAppWalletShortDeepLink(connectRequest.topic, connectRequest.clientId);\n            }\n            else {\n                return constants_1.shortUniversalLink;\n            }\n        }\n        else {\n            if (connectRequest) {\n                const base64Encoded = encodeConnectParams(connectRequest);\n                return `${protocol_1.standardDeeplink}?param=${base64Encoded}`;\n            }\n            else {\n                return protocol_1.standardDeeplink;\n            }\n        }\n    }\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isValidObject = exports.RANDOM_LENGTH = exports.isBrowser = exports.resolveLocalStorage = exports.hasLocalStorage = exports.hasBuiltInWebSocket = exports.resolveWebSocketImplementation = void 0;\nexports.hexToByteArray = hexToByteArray;\nexports.getChainId = getChainId;\nexports.toHexString = toHexString;\nexports.concatUint8Arrays = concatUint8Arrays;\nexports.splitToUint8Arrays = splitToUint8Arrays;\nexports.base64encode = base64encode;\nexports.base64decode = base64decode;\nexports.checkWSUrl = checkWSUrl;\nexports.hashKey = hashKey;\nexports.generateRandomBytes32 = generateRandomBytes32;\nexports.generateTopic = generateTopic;\nexports.generateGroupId = generateGroupId;\nexports.isIos = isIos;\nexports.getLastSixMd5Hash = getLastSixMd5Hash;\nexports.toSafeBase64FromBase64 = toSafeBase64FromBase64;\nexports.useShortLink = useShortLink;\nexports.replaceAptosChainName = replaceAptosChainName;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst tweetnacl_util_1 = __importDefault(require(\"tweetnacl-util\"));\nconst to_string_1 = require(\"uint8arrays/to-string\");\nconst sha256_1 = require(\"@stablelib/sha256\");\nconst safejson_1 = require(\"./safejson\");\nconst log_1 = require(\"./log\");\nconst stringUtils_1 = require(\"../utils/stringUtils\");\nconst crypto_js_1 = __importDefault(require(\"crypto-js\"));\nconst BASE16 = \"base16\";\nfunction hexToByteArray(hexString) {\n    if (hexString.length % 2 !== 0) {\n        throw new Error(`Cannot convert ${hexString} to bytesArray`);\n    }\n    const result = new Uint8Array(hexString.length / 2);\n    for (let i = 0; i < hexString.length; i += 2) {\n        result[i / 2] = parseInt(hexString.slice(i, i + 2), 16);\n    }\n    return result;\n}\nfunction getChainId(chain) {\n    return chain.includes(\":\") ? chain.split(\":\")[1] : chain;\n}\nfunction toHexString(byteArray) {\n    let hexString = '';\n    byteArray.forEach(byte => {\n        hexString += ('0' + (byte & 0xff).toString(16)).slice(-2);\n    });\n    return hexString;\n}\nfunction concatUint8Arrays(buffer1, buffer2) {\n    const mergedArray = new Uint8Array(buffer1.length + buffer2.length);\n    mergedArray.set(buffer1);\n    mergedArray.set(buffer2, buffer1.length);\n    return mergedArray;\n}\nfunction splitToUint8Arrays(array, index) {\n    if (index >= array.length) {\n        throw new Error('Index is out of buffer');\n    }\n    const subArray1 = array.slice(0, index);\n    const subArray2 = array.slice(index);\n    return [subArray1, subArray2];\n}\nfunction encodeUint8Array(value, urlSafe) {\n    const encoded = tweetnacl_util_1.default.encodeBase64(value);\n    if (!urlSafe) {\n        return encoded;\n    }\n    return encodeURIComponent(encoded);\n}\nfunction decodeToUint8Array(value, urlSafe) {\n    if (urlSafe) {\n        value = decodeURIComponent(value);\n    }\n    return tweetnacl_util_1.default.decodeBase64(value);\n}\nfunction base64encode(value, urlSafe) {\n    let uint8Array;\n    if (value instanceof Uint8Array) {\n        uint8Array = value;\n    }\n    else {\n        if (typeof value !== 'string') {\n            value = (0, safejson_1.safeJsonStringify)(value);\n        }\n        uint8Array = tweetnacl_util_1.default.decodeUTF8(value);\n    }\n    return encodeUint8Array(uint8Array, urlSafe);\n}\nfunction base64decode(value, urlSafe) {\n    const decodedUint8Array = decodeToUint8Array(value, urlSafe);\n    return {\n        toString() {\n            return tweetnacl_util_1.default.encodeUTF8(decodedUint8Array);\n        },\n        toObject() {\n            try {\n                return (0, safejson_1.safeJsonParse)(tweetnacl_util_1.default.encodeUTF8(decodedUint8Array));\n            }\n            catch (e) {\n                return null;\n            }\n        },\n        toUint8Array() {\n            return decodedUint8Array;\n        }\n    };\n}\nfunction checkWSUrl(url) {\n    const match = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!match || !match.length) {\n        return false;\n    }\n    let scheme = match[0];\n    if (scheme === undefined) {\n        return false;\n    }\n    return new RegExp(\"^wss?:\").test(scheme);\n}\nconst resolveWebSocketImplementation = () => {\n    if (typeof WebSocket !== \"undefined\") {\n        return WebSocket;\n    }\n    else if (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") {\n        return global.WebSocket;\n    }\n    else if (typeof window !== \"undefined\" && typeof window.WebSocket !== \"undefined\") {\n        return window.WebSocket;\n    }\n    else if (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\") {\n        return self.WebSocket;\n    }\n    return WebSocket;\n    //\n    // return require(\"ws\");\n};\nexports.resolveWebSocketImplementation = resolveWebSocketImplementation;\nconst hasBuiltInWebSocket = () => typeof WebSocket !== \"undefined\" ||\n    (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") ||\n    (typeof window !== \"undefined\" && typeof window.WebSocket !== \"undefined\") ||\n    (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\");\nexports.hasBuiltInWebSocket = hasBuiltInWebSocket;\nconst hasLocalStorage = () => (typeof global !== \"undefined\" && (typeof global.localStorage !== \"undefined\")) ||\n    (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\");\nexports.hasLocalStorage = hasLocalStorage;\nconst resolveLocalStorage = () => {\n    if (typeof global !== \"undefined\" && typeof global.localStorage !== \"undefined\") {\n        return global.localStorage;\n    }\n    else if (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\") {\n        return window.localStorage;\n    }\n    return localStorage;\n};\nexports.resolveLocalStorage = resolveLocalStorage;\nconst isBrowser = () => typeof window !== \"undefined\";\nexports.isBrowser = isBrowser;\nexports.RANDOM_LENGTH = 32;\nfunction hashKey(key, encode = BASE16) {\n    (0, log_1.logDebug)(`hash key called ${key}`);\n    const result = (0, sha256_1.hash)((0, stringUtils_1.okxfromString)(key, encode));\n    return (0, to_string_1.toString)(result, encode);\n}\nfunction generateRandomBytes32() {\n    return tweetnacl_1.default.randomBytes(exports.RANDOM_LENGTH);\n}\nfunction generateTopic() {\n    let randomBytes32 = generateRandomBytes32();\n    (0, log_1.logDebug)(`generate topic called ${randomBytes32}`);\n    return hashKey((0, to_string_1.toString)(randomBytes32, BASE16));\n}\nfunction generateGroupId() {\n    let randomBytes32 = tweetnacl_1.default.randomBytes(16);\n    (0, log_1.logDebug)(`generate groupid called ${randomBytes32}`);\n    return hashKey((0, to_string_1.toString)(randomBytes32, BASE16));\n}\nconst isValidObject = (obj) => Object.getPrototypeOf(obj) === Object.prototype && Object.keys(obj).length;\nexports.isValidObject = isValidObject;\nfunction isIos() {\n    const userAgent = navigator.userAgent;\n    const maxTouchPoints = navigator.maxTouchPoints || 0;\n    // 检测 iPhone、iPod 和传统的 iPad\n    const isIOSDevice = /iPad|iPhone|iPod/.test(userAgent) && !window.MSStream;\n    // 针对 iPadOS 13 及以上的设备进行额外判断\n    const isIPadOS = (userAgent.includes('Mac') && maxTouchPoints > 1);\n    (0, log_1.logDebug)(`utils isIos >>>isIOSDevice: ${isIOSDevice}    >> isIPadOS: ${isIPadOS}`);\n    // 如果是 iOS 设备或者是 iPadOS 设备，返回 true\n    return isIOSDevice || isIPadOS;\n}\nfunction getLastSixMd5Hash(input) {\n    // 生成 MD5 哈希\n    const hash = crypto_js_1.default.MD5(input).toString();\n    // 获取最后六位\n    return hash.slice(-6);\n}\nfunction toSafeBase64FromBase64(base64) {\n    return base64\n        .replace(/=/g, \"\")\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\");\n}\nfunction useShortLink() {\n    // return !!(window as any).useShortLink;\n    return true;\n}\nfunction replaceAptosChainName(chainId) {\n    let newChain = chainId;\n    if (chainId.includes(\"aptos:mainnet\")) {\n        newChain = chainId.replace(\"aptos:mainnet\", \"aptos:637\");\n    }\n    else if (chainId.includes(\"movement:testnet\")) {\n        newChain = chainId.replace(\"movement:testnet\", \"aptos:70000060\");\n    }\n    else if (chainId.includes(\"movement:mainnet\")) {\n        newChain = chainId.replace(\"movement:mainnet\", \"aptos:70000066\");\n    }\n    return newChain;\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.openLink = openLink;\nexports.openLinkBlank = openLinkBlank;\nexports.openDeeplinkWithFallback = openDeeplinkWithFallback;\nexports.isMobileUserAgent = isMobileUserAgent;\nexports.getUserAgent = getUserAgent;\nexports.isOS = isOS;\nexports.isBrowser = isBrowser;\nconst ua_parser_js_1 = __importDefault(require(\"ua-parser-js\"));\nconst log_1 = require(\"./log\");\nconst tma_api_1 = require(\"./tma-api\");\nfunction openLink(href, target = '_self') {\n    (0, log_1.logDebug)('openLink', href, target);\n    window.open(href, target, 'noopener noreferrer');\n}\nfunction openLinkBlank(href) {\n    openLink(href, '_blank');\n}\nfunction openDeeplinkWithFallback(href, fallback) {\n    const doFallback = () => {\n        if (isBrowser('safari') || (isOS('android') && isBrowser('firefox'))) {\n            // Safari does not support fallback to direct link.\n            return;\n        }\n        fallback();\n    };\n    const fallbackTimeout = setTimeout(() => doFallback(), 500);\n    window.addEventListener('blur', () => clearTimeout(fallbackTimeout), { once: true });\n    if (isOS('android') && (0, tma_api_1.inTg)()) {\n        openLink(href, '_blank');\n    }\n    else {\n        openLink(href, '_self');\n    }\n}\nfunction isMobileUserAgent() {\n    let check = false;\n    (function (a) {\n        if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) ||\n            /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.slice(0, 4)))\n            check = true;\n    })(navigator.userAgent ||\n        navigator.vendor ||\n        window.opera);\n    return check;\n}\nfunction getUserAgent() {\n    var _a, _b, _c;\n    const results = new ua_parser_js_1.default().getResult();\n    const osName = (_a = results.os.name) === null || _a === void 0 ? void 0 : _a.toLowerCase();\n    const deviceModel = (_b = results.device.model) === null || _b === void 0 ? void 0 : _b.toLowerCase();\n    let os;\n    switch (true) {\n        case deviceModel === 'ipad':\n            os = 'ipad';\n            break;\n        case osName === 'ios':\n            os = 'ios';\n            break;\n        case osName === 'android':\n            os = 'android';\n            break;\n        case osName === 'mac os':\n            os = 'macos';\n            break;\n        case osName === 'linux':\n            os = 'linux';\n            break;\n        case osName === null || osName === void 0 ? void 0 : osName.includes('windows'):\n            os = 'windows';\n            break;\n    }\n    const browserName = (_c = results.browser.name) === null || _c === void 0 ? void 0 : _c.toLowerCase();\n    let browser;\n    switch (true) {\n        case browserName === 'chrome':\n            browser = 'chrome';\n            break;\n        case browserName === 'firefox':\n            browser = 'firefox';\n            break;\n        case browserName === null || browserName === void 0 ? void 0 : browserName.includes('safari'):\n            browser = 'safari';\n            break;\n        case browserName === null || browserName === void 0 ? void 0 : browserName.includes('opera'):\n            browser = 'opera';\n            break;\n    }\n    return {\n        os,\n        browser\n    };\n}\nfunction isOS(...os) {\n    return os.includes(getUserAgent().os);\n}\nfunction isBrowser(...browser) {\n    return browser.includes(getUserAgent().browser);\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXBtcProvider = void 0;\nconst _1 = require(\"./\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXBtcProvider {\n    constructor(provider) {\n        this.caip = [\n            \"btc:mainnet\",\n            \"fractal:mainnet\"\n        ];\n        this.provider = provider;\n    }\n    getAddressForChainId(chainId) {\n        var _a, _b;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let accounts = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        });\n        if (accounts == undefined || accounts.length < 0) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `no connected account`);\n        }\n        let account = accounts[0];\n        const address = account.split(':')[2];\n        return address;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let extra = (_c = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.extra) === null || _c === void 0 ? void 0 : _c[chainId];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"compressedPublicKey\"];\n        }\n        return {\n            address: this.getAddressForChainId(chainId),\n            publicKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param signStr\n     * @param chainId\n     * @param type\n     * @returns\n     */\n    signMessage(chainId, signStr, type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (signStr === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signMessage parmas error`);\n            }\n            let params = {\n                signStr: signStr,\n                from: this.getAddressForChainId(chainId)\n            };\n            if (type) {\n                params.type = type;\n            }\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signMessage\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param toAddress\n     * @param satoshis\n     * @param options { feeRate: 0 }\n     * @returns\n     */\n    sendBitcoin(chainId, toAddress, satoshis, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            let params = {\n                from: this.getAddressForChainId(chainId),\n                to: toAddress,\n                value: (satoshis / 100000000).toString(),\n            };\n            if (options === null || options === void 0 ? void 0 : options.feeRate) {\n                params[\"satBytes\"] = options.feeRate.toString();\n            }\n            let result = yield this.send(chainId, params);\n            if (result !== undefined && ('txhash' in result)) {\n                // return txhash directly\n                return result.txhash;\n            }\n            // or return unexpected result\n            return result;\n        });\n    }\n    //  from - string：当前连接的钱包的 BTC 地址\n    //  to - string：接受 BTC 的地址\n    //  value - string：发送 BTC 的数量\n    //  satBytes - string： (可选) 自定义费率\n    //  memo - string： (可选) 指定 outputs OP_RETURN 内容 示例\n    //  memoPos - number： (可选) 指定 outputs OP_RETURN 输出位置，如果传了 memo 则必须传入 memoPos 指定位置，否则 memo 不生效\n    send(chainId, input) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (!this.checkParameters(input, 'to', 'value')) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send parmas  error`);\n            }\n            input[\"from\"] = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: 'btc_send',\n                    params: input\n                }, chainId);\n                if ('result' in ret) {\n                    return {\n                        txhash: ret.result\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param psbtHex string 要签名的 psbt 的十六进制字符串\n     * @param options object { autoFinalized: 0 }\n     */\n    signPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.signPsbts(chainId, [psbtHex], [options]).then(psbtResults => {\n                    let results = JSON.parse(psbtResults);\n                    resolve(results[0]);\n                }).catch(error => {\n                    reject(error);\n                });\n            });\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHexs Array\n     * @param options Array [{ autoFinalized: 0 }]\n     * @returns\n     */\n    signPsbts(chainId, psbtHexs, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHexs === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHexs: psbtHexs,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signPsbts\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHex string\n     * @param options object\n     * @returns\n     */\n    signAndPushPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHex === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHex: psbtHex,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signAndPushPsbt\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return JSON.parse(ret.result);\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param address string, receiver address\n     * @param inscriptionId string, 铭文 ID + 协议，没有传协议则默认是 Ordinals NFT ，目前仅支持 Ordinals 及 Atomicals 协议\n     * @param options object, { feeRate: number } custom rates\n     */\n    sendInscription(chainId, address, inscriptionId, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let extension = {\n                address: address,\n                inscriptionId: inscriptionId,\n                options: options\n            };\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (address === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method sendInscription params error`);\n            }\n            var feeRate = 0;\n            if (options && ('feeRate' in options)) {\n                feeRate = options.feeRate;\n            }\n            let coinId = '';\n            let from = this.getAddressForChainId(chainId);\n            var protocolId = 7; //ProtocolIdBRCNFT\n            if (inscriptionId !== 'undefined') {\n                let atomicSuffix = \"-Atomicals\";\n                let ordinalsSuffix = \"-Ordinals\";\n                if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(atomicSuffix.toLowerCase())) {\n                    protocolId = 8; //WXRCProtocolIdARCNFT\n                    inscriptionId = this.removeSuffix(inscriptionId, atomicSuffix);\n                }\n                else if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(ordinalsSuffix.toLowerCase())) {\n                    inscriptionId = this.removeSuffix(inscriptionId, ordinalsSuffix);\n                }\n            }\n            let params = {\n                scenario: 5,\n                feeRate: feeRate,\n                txType: \"20\",\n                to: address,\n                batchBean: [\n                    {\n                        coinAmount: \"1\",\n                        nftId: inscriptionId,\n                        protocolId: protocolId,\n                        coinId: coinId,\n                        inscriptionId: \"\",\n                        from: from\n                    }\n                ],\n                extension: extension\n            };\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_sendInscription\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    sendRunes(chainId, address, runeid, amount, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!chainId || !address || !runeid || !amount) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `The parameter is empty. Please check`);\n                }\n                let ns = this.checkChainId(chainId);\n                let protocolId = undefined;\n                if (ns != undefined) {\n                    if (ns.startsWith(\"btc\")) {\n                        protocolId = 13;\n                    }\n                    else if (ns.startsWith(\"fractal\")) {\n                        protocolId = 16;\n                    }\n                }\n                if (ns == undefined || protocolId == undefined) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n                }\n                let fromAddress = this.getAddressForChainId(chainId); // string\n                let params = {\n                    fromAddress: fromAddress,\n                    protocolId: protocolId,\n                    address: address, //String\n                    runeid: runeid, //String\n                    amount: amount, // String\n                    options: options\n                };\n                (0, core_1.logDebug)(\"OKXBtcProvider sendRunes -->\", JSON.stringify(params));\n                const ret = yield this.provider.request({\n                    method: \"btc_sendRunes\",\n                    params: params\n                }, chainId);\n                return ret.result;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    inscribeTransfer(chainId, ticker, amount) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!chainId || !ticker || !amount) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `The parameter is empty. Please check`);\n                }\n                let ns = this.checkChainId(chainId);\n                let protocolId = undefined;\n                if (ns != undefined) {\n                    if (ns.startsWith(\"btc\")) {\n                        protocolId = 1;\n                    }\n                    else if (ns.startsWith(\"fractal\")) {\n                        protocolId = 14;\n                    }\n                }\n                if (ns == undefined || protocolId == undefined) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n                }\n                let fromAddress = this.getAddressForChainId(chainId); // string\n                let params = {\n                    fromAddress: fromAddress,\n                    protocolId: protocolId,\n                    ticker: ticker, //String\n                    amount: amount, // String\n                };\n                (0, core_1.logDebug)(\"OKXBtcProvider inscribeTransfer -->\", JSON.stringify(params));\n                const ret = yield this.provider.request({\n                    method: \"btc_inscribeTransfer\",\n                    params: params\n                }, chainId);\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    removeSuffix(str, suffix) {\n        if (str.endsWith(suffix)) {\n            return str.slice(0, str.length - suffix.length);\n        }\n        return str;\n    }\n    checkParameters(params, ...keys) {\n        var unexistKeys = [];\n        keys.forEach(key => {\n            if (!(`${key}` in params)) {\n                unexistKeys.push(key);\n            }\n        });\n        if (unexistKeys.length > 0) {\n            console.log('not find key: ', unexistKeys.join(\",\"));\n            return false;\n        }\n        return true;\n    }\n    /**\n     *\n     * @param chainId eg. btc:mainnet\n     * @returns eg. btc\n     */\n    checkChainId(chainId) {\n        if (this.caip.includes(chainId)) {\n            let [namespaceKey, _] = chainId.split(\":\");\n            return namespaceKey;\n        }\n        return undefined;\n    }\n}\nexports.OKXBtcProvider = OKXBtcProvider;\nexports.default = OKXBtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCosmosProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXCosmosProvider {\n    constructor(provider) {\n        this.provider = provider;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e, _f;\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount chainId:\", chainId);\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount namespaces:\", JSON.stringify((_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces));\n        let account = (_c = (_b = this.provider.session) === null || _b === void 0 ? void 0 : _b.namespaces[core_1.NameSpaceKeyCosmos]) === null || _c === void 0 ? void 0 : _c.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount account:\", JSON.stringify(account));\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount address:\", address);\n        let extra = (_f = (_e = (_d = this.provider.session) === null || _d === void 0 ? void 0 : _d.namespaces[core_1.NameSpaceKeyCosmos]) === null || _e === void 0 ? void 0 : _e.extra) === null || _f === void 0 ? void 0 : _f[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n            console.log(\"aptos_publicKey\", publicKey);\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            algo: \"secp256k1\",\n            address: address,\n            bech32Address: address,\n            pubKey: this.hexToUint8Array(publicKey),\n        };\n    }\n    signArbitrary(chainId, signerAddress, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const base64Encoded = window.btoa(data);\n            const signDoc = {\n                chain_id: \"\",\n                account_number: \"0\",\n                sequence: \"0\",\n                fee: {\n                    gas: \"0\",\n                    amount: []\n                },\n                msgs: [{\n                        \"type\": \"sign/MsgSignData\",\n                        \"value\": {\n                            \"signer\": signerAddress,\n                            \"data\": base64Encoded\n                        }\n                    }],\n                memo: \"\"\n            };\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signArbitrary\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chain_id\": chainId.split(\":\")[1],\n                    \"data\": signDoc\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    if (typeof ret.result == \"string\") {\n                        return JSON.parse(ret.result);\n                    }\n                    else {\n                        return ret.result;\n                    }\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAmino(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (signDoc.msgs[0].type == \"sign/MsgSignData\") {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signArbitrary\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chain_id\": chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        return ret.result;\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    return error;\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                }\n            }\n            else {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signAmino\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chainId\": chainId.split(\":\")[1],\n                        \"sign_doc\": signDoc,\n                        \"signOptions\": signOptions\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        const resData = JSON.parse(ret.result);\n                        console.log(\"signdoc\", signDoc, resData.signDoc);\n                        signDoc.fee = resData.signDoc.fee;\n                        return { signed: signDoc, signature: resData.signature };\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                    return error;\n                }\n            }\n        });\n    }\n    signDirect(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const object = {\n                bodyBytes: this.bufferToHex(signDoc.bodyBytes),\n                authInfoBytes: this.bufferToHex(signDoc.authInfoBytes),\n                chainId: signDoc.chainId,\n                accountNumber: signDoc.accountNumber ? signDoc.accountNumber.toString() : null,\n                signOptions: signOptions ? signOptions : null\n            };\n            let data = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signDirect\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chainId\": chainId.split(\":\")[1],\n                    \"sign_doc\": object,\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    const res = JSON.parse(ret.result);\n                    console.log(\"signdirect result\", res);\n                    signDoc.authInfoBytes = this.messageToBuffer(res.signDoc.authInfoBytes);\n                    return { signed: signDoc, signature: res.signature };\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    messageToBuffer(message) {\n        var buffer = Uint8Array.from([]);\n        try {\n            if (typeof message === \"string\") {\n                buffer = this.hexToUint8Array(message.replace(\"0x\", \"\"));\n            }\n            else {\n                buffer = Uint8Array.from(message);\n            }\n        }\n        catch (err) {\n            console.log(`messageToBuffer error: ${err}`);\n        }\n        return buffer;\n    }\n    bufferToHex(arr) {\n        let output = [...new Uint8Array(arr)]\n            .map(x => x.toString(16).padStart(2, '0'))\n            .join('');\n        return '0x' + output;\n    }\n    hexToUint8Array(hexString) {\n        if (hexString.length % 2 !== 0) {\n            throw \"Invalid hexString\";\n        }\n        var arrayBuffer = new Uint8Array(hexString.length / 2);\n        for (var i = 0; i < hexString.length; i += 2) {\n            var byteValue = parseInt(hexString.substr(i, 2), 16);\n            if (isNaN(byteValue)) {\n                throw \"Invalid hexString\";\n            }\n            arrayBuffer[i / 2] = byteValue;\n        }\n        return arrayBuffer;\n    }\n}\nexports.OKXCosmosProvider = OKXCosmosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXStarknetProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXStarknetProvider {\n    constructor(provider) {\n        this.STARKNET_CHAIN_ID = \"starknet:mainnet\";\n        this.provider = provider;\n    }\n    getChain(chainId) {\n        if (chainId == null) {\n            chainId = this.STARKNET_CHAIN_ID;\n        }\n        if (chainId != this.STARKNET_CHAIN_ID) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, \"The chainId:\" + chainId + \"is wrong for OKXStarknetProvider\");\n        }\n        return chainId;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyStarknet]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyStarknet]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address,\n            pubKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param chainId\n     * @param signerAddress\n     * @param data: { types, primaryType, domain, message } as TypedData\n     * @returns [signedDataR, signedDataS]\n     */\n    signMessage(signerAddress, typedData, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            if (signerAddress.length == 0) {\n                signerAddress = this.getAccount(chainId)[\"address\"];\n            }\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"starknet_signMessage\",\n                \"params\": {\n                    \"accountAddress\": signerAddress,\n                    \"typedData\": typedData\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    let results = ret.result;\n                    if (typeof results == 'string') {\n                        results = JSON.parse(results);\n                    }\n                    return [results[\"signedDataR\"], results[\"signedDataS\"]];\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     * sendTransaction\n     * @param chainId\n     * @param signerAddress\n     * @param transaction\n     * @returns { transaction_hash }\n     */\n    sendTransaction(signerAddress, transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let transactionData = {\n                \"accountAddress\": signerAddress,\n                \"executionRequest\": transaction\n            };\n            let data = {\n                \"method\": \"starknet_sendTransaction\",\n                \"params\": {\n                    \"data\": JSON.stringify(transactionData),\n                    \"from\": signerAddress\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return { transaction_hash: ret.result };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * signMessage old API（rarely used, no need provide to external）\n     * @param chainId\n     * @param payload\n     * @returns {transaction_hash, class_hash}\n     */\n    signMessageDeclareContractPayload(payload, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            try {\n                let data = {\n                    \"method\": \"starknet_signMessage\",\n                    \"params\": payload\n                };\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return {\n                        \"transaction_hash\": ret.result[\"txHash\"],\n                        \"class_hash\": ret.result[\"classHash\"]\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     * sendTransaction old API（rarely used, no need provide to external）\n     * @param chainId\n     * @param signerAddress\n     * @param calls\n     * @param abis\n     * @param transactionsDetail\n     * @returns { transaction_hash }\n     */\n    /// todo： \n    /// 修改方法名\n    /// chainId 放后面\n    sendMessageExecuteTransactionDetail(signerAddress, calls, abis, transactionsDetail, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            const transactions = Array.isArray(calls) ? calls : [calls];\n            const executionRequest = {\n                \"calls\": transactions,\n                \"abis\": abis,\n                \"transactionsDetail\": {\n                    \"nonce\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.nonce,\n                    \"maxFee\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.nonce,\n                    \"version\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.version,\n                }\n            };\n            return this.sendTransaction(signerAddress, executionRequest, chainId);\n        });\n    }\n}\nexports.OKXStarknetProvider = OKXStarknetProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTonProvider = void 0;\nconst _1 = require(\"./\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTonProvider {\n    constructor(generator) {\n        this.statusChangeSubscriptions = [];\n        this.statusChangeErrorSubscriptions = [];\n        this.provider = generator;\n        this.provider.on(\"connect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event connect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"reconnect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event reconnect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"disconnect\", () => {\n            (0, core_1.logDebug)(\"OKXTONProvider event disconnect:\");\n            this.statusChangeSubscriptions.forEach(callback => callback(null));\n        });\n        this.provider.on(\"connect_error\", (error) => {\n            (0, core_1.logDebug)(\"OKXTONProvider event connect_error:\", JSON.stringify(error));\n            this.statusChangeErrorSubscriptions.forEach(errorsHandler => errorsHandler(error));\n        });\n    }\n    connected() {\n        if (this.provider.connected()) {\n            return !!this.provider.session.namespaces[\"ton\"];\n        }\n        return false;\n    }\n    account() {\n        try {\n            if (!this.provider.session) {\n                return null;\n            }\n            let tonNameSpace = this.provider.session.namespaces['ton'];\n            if (!tonNameSpace || !tonNameSpace.payload || !tonNameSpace.payload.ton_addr) {\n                return null;\n            }\n            let ton_addr = tonNameSpace.payload.ton_addr;\n            return {\n                address: ton_addr.address,\n                chain: ton_addr.network,\n                walletStateInit: ton_addr.walletStateInit,\n                publicKey: ton_addr.publicKey,\n            };\n        }\n        catch (e) {\n            (0, core_1.logDebug)(\"OKXTONProvider account  error:\", JSON.stringify(e));\n            return null;\n        }\n    }\n    wallet() {\n        if (this.connected()) {\n            try {\n                let sessionWallet = this.provider.session.wallet;\n                let tonDeviceInfo = {\n                    platform: sessionWallet.platform,\n                    appName: sessionWallet.appName,\n                    appVersion: sessionWallet.appVersion,\n                    maxProtocolVersion: sessionWallet.maxProtocolVersion,\n                    features: ['ton_sendTransaction'],\n                };\n                const wallet = {\n                    device: tonDeviceInfo,\n                    provider: \"http\",\n                    account: this.account()\n                };\n                let tonNameSpace = this.provider.session.namespaces['ton'];\n                if (tonNameSpace && tonNameSpace.payload && tonNameSpace.payload.ton_proof) {\n                    wallet.connectItems = {\n                        tonProof: tonNameSpace.payload.ton_proof\n                    };\n                }\n                (0, core_1.logDebug)(\"OKXTONProvider wallet :\", JSON.stringify(wallet));\n                return wallet;\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"OKXTONProvider wallet  error:\", JSON.stringify(e));\n                return null;\n            }\n        }\n        return null;\n    }\n    onStatusChange(callback, errorsHandler) {\n        this.statusChangeSubscriptions.push(callback);\n        if (errorsHandler) {\n            this.statusChangeErrorSubscriptions.push(errorsHandler);\n        }\n        return () => {\n            this.statusChangeSubscriptions = this.statusChangeSubscriptions.filter(item => item !== callback);\n            if (errorsHandler) {\n                this.statusChangeErrorSubscriptions = this.statusChangeErrorSubscriptions.filter(item => item !== errorsHandler);\n            }\n        };\n    }\n    sendTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (transaction.network && transaction.network !== core_1.TONCHAIN.MAINNET) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, 'OKXTONProvider sendTransaction network error');\n            }\n            if (!transaction.network) {\n                transaction.network = core_1.TONCHAIN.MAINNET;\n            }\n            if (this.provider.session) {\n                if (!transaction.from) {\n                    const accounts = this.provider.requestAccountsWithNamespace('ton');\n                    transaction.from = accounts[0];\n                }\n            }\n            const requestParams = {\n                method: \"ton_sendTransaction\",\n                params: transaction,\n            };\n            let chain = 'ton:' + core_1.TONCHAIN.MAINNET;\n            (0, core_1.logDebug)(\"OKXTONProvider sendTransaction transaction----:\", chain, JSON.stringify(requestParams));\n            return this.provider.request(requestParams, chain);\n        });\n    }\n}\nexports.OKXTonProvider = OKXTonProvider;\nexports.default = OKXTonProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTronProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTronProvider {\n    constructor(provider) {\n        this.TRON_CHAIN_ID = \"tron:mainnet\";\n        this.provider = provider;\n    }\n    getChain(chainId) {\n        if (chainId == null) {\n            chainId = this.TRON_CHAIN_ID;\n        }\n        if (chainId != this.TRON_CHAIN_ID) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, \"The chainId:\" + chainId + \"is wrong for OKXTronProvider\");\n        }\n        return chainId;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        chainId = this.getChain(chainId);\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyTron]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyTron]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address\n        };\n    }\n    stringToHex(str) {\n        let hex = '';\n        for (let i = 0; i < str.length; i++) {\n            hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n        }\n        return hex;\n    }\n    signMessage(data, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessage\",\n                \"params\": {\n                    \"message\": this.stringToHex(data)\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signMessageV2(data, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessageV2\",\n                \"params\": {\n                    \"message\": data\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let data = {\n                \"method\": \"tron_signTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    let signedTx;\n                    if (typeof ret.result == \"string\") {\n                        signedTx = JSON.parse(ret.result);\n                    }\n                    else {\n                        signedTx = ret.result;\n                    }\n                    let realSignTx = {};\n                    realSignTx.visible = signedTx.visible;\n                    realSignTx.txID = signedTx.txID;\n                    let rawData = {};\n                    rawData.contract = signedTx.raw_data.contract;\n                    rawData.expiration = signedTx.raw_data.expiration;\n                    rawData.ref_block_bytes = signedTx.raw_data.ref_block_bytes;\n                    rawData.fee_limit = signedTx.raw_data.fee_limit;\n                    rawData.ref_block_hash = signedTx.raw_data.ref_block_hash;\n                    rawData.timestamp = signedTx.raw_data.timestamp;\n                    realSignTx.raw_data = rawData;\n                    realSignTx.raw_data_hex = signedTx.raw_data_hex;\n                    realSignTx.signature = signedTx.signature;\n                    return realSignTx;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAndSendTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let data = {\n                \"method\": \"tron_signAndSendTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n}\nexports.OKXTronProvider = OKXTronProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXUniversalProvider = void 0;\nconst eip155_1 = require(\"./provider/providers/eip155\");\nconst sui_1 = require(\"./provider/providers/sui\");\nconst constants_1 = require(\"./provider/constants\");\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nconst client_1 = require(\"./packages/sign-client/client\");\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"./packages/utils/namespaces\");\nconst solana_1 = __importDefault(require(\"./provider/providers/solana\"));\nconst btc_1 = __importDefault(require(\"./provider/providers/btc\"));\nconst aptos_1 = __importDefault(require(\"./provider/providers/aptos\"));\nconst ton_1 = __importDefault(require(\"./provider/providers/ton\"));\nconst cosmos_1 = __importDefault(require(\"./provider/providers/cosmos\"));\nconst tron_1 = __importDefault(require(\"./provider/providers/tron\"));\nconst utils_1 = require(\"./provider/utils\");\nconst packages_1 = require(\"./packages\");\nconst provider_1 = require(\"./provider\");\nconst starknet_1 = __importDefault(require(\"./provider/providers/starknet\"));\nclass OKXUniversalProvider {\n    static init(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider init() called');\n            (0, core_1.checkMetaData)(opts.dappMetaData);\n            // ignore rpc provider check by default\n            (0, utils_1.setGlobal)('disableProviderPing', true);\n            let provider;\n            if (window && window.okxConnectUniversalinwindow && window.okxConnectUniversalinwindow instanceof OKXUniversalProvider) {\n                (0, core_1.logDebug)('OKXUniversalConnect init() old called');\n                provider = window.okxConnectUniversalinwindow;\n            }\n            else {\n                (0, core_1.logDebug)('OKXUniversalConnect init() new called');\n                provider = new OKXUniversalProvider(opts);\n                if (window) {\n                    window.okxConnectUniversalinwindow = provider;\n                }\n                yield provider.initialize();\n            }\n            (0, core_1.getDefaultReporter)().configVersionAndSide('universalprovider-1.5.2', 'dapp', provider.providerOpts.dappMetaData.name);\n            return provider;\n        });\n    }\n    constructor(opts) {\n        this.rpcProviders = {};\n        this.events = new eventemitter3_1.default();\n        if (!opts.connector || opts.connector.length == 0) {\n            opts.connector = [core_1.AppwalletConnector.getConnector(), core_1.TgwalletConnector.getConnector()];\n        }\n        this.providerOpts = opts;\n    }\n    request(args, chain) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider request() called');\n            (0, core_1.reportLog)('OKXUniversalProvider request() called');\n            if (!this.connected()) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            (0, core_1.logDebug)('OKXUniversalProvider request()  connected ');\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return yield this.getProvider(namespace).request(requestParam);\n        });\n    }\n    buildRequestParamFromRequest(args, chain) {\n        var _a;\n        (0, core_1.logDebug)(\"UniversalProvider request args >>>>>>>: \", chain, (0, core_1.safeJsonStringify)(args));\n        let [namespace, chainId] = this.validateChain(chain);\n        if (!this.session) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Please call connect() before request()\");\n        }\n        let keyArr = Object.keys(this.session.namespaces);\n        if (!chain && keyArr && keyArr.length > 1) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Multiple chains have been linked, the request method requires chain`);\n        }\n        if (namespace == \"aptos\" && chainId == \"mainnet\") {\n            namespace = \"aptos\";\n            chainId = \"637\";\n        }\n        if (namespace == \"movement\" && chainId == \"testnet\") {\n            namespace = \"aptos\";\n            chainId = \"70000060\";\n        }\n        if (namespace == \"movement\" && chainId == \"mainnet\") {\n            namespace = \"aptos\";\n            chainId = \"70000066\";\n        }\n        const requestParam = Object.assign(Object.assign({}, args), { chainId: `${namespace}:${chainId}`, redirect: (_a = args.redirect) !== null && _a !== void 0 ? _a : this.sessionConfig.redirect });\n        return { namespace, requestParam };\n    }\n    enable() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.client) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (!this.session) {\n                if (this.connectOpts) {\n                    yield this.connect(this.connectOpts);\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n                }\n            }\n            const accounts = yield this.requestAccounts();\n            return accounts;\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider disconnect() called');\n            (0, core_1.reportLog)('provider disconnect called');\n            if (!this.session) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                let called = false;\n                const onRequestSent = () => __awaiter(this, void 0, void 0, function* () {\n                    if (!called) {\n                        called = true;\n                        yield this.disconnectAndEmit();\n                        yield this.cleanup();\n                        resolve();\n                        (0, core_1.logDebug)(\"UniversalProvider disconnect Disconnected\");\n                        (0, core_1.reportLog)('provider disconnect disconnected');\n                    }\n                });\n                try {\n                    yield this.client.disconnect();\n                    yield onRequestSent();\n                }\n                catch (e) {\n                    yield onRequestSent();\n                }\n            }));\n        });\n    }\n    disconnectAndEmit() {\n        var _a, _b;\n        this.client.engine.connectManagerDisconnect();\n        this.events.emit(\"disconnect\", { topic: (_a = this.session) === null || _a === void 0 ? void 0 : _a.topic });\n        this.events.emit(\"session_delete\", { topic: (_b = this.session) === null || _b === void 0 ? void 0 : _b.topic });\n    }\n    aptosChainNameToGeneralId(chainId) {\n        if (chainId == \"aptos:mainnet\") {\n            return \"aptos:637\";\n        }\n        else if (chainId == \"movement:testnet\") {\n            return \"aptos:70000060\";\n        }\n        else if (chainId == \"movement:mainnet\") {\n            return \"aptos:70000066\";\n        }\n        else {\n            return chainId;\n        }\n    }\n    replaceAptos(opts) {\n        var _a, _b;\n        let aptosNameSpace = (_a = opts.namespaces) === null || _a === void 0 ? void 0 : _a[\"aptos\"];\n        if (aptosNameSpace != undefined) {\n            let realNS = this.replaceAptosInner(aptosNameSpace);\n            if (opts.namespaces != undefined && \"aptos\" in opts.namespaces && realNS != undefined) {\n                opts.namespaces.aptos = realNS;\n            }\n        }\n        let optionAptosNameSpace = (_b = opts.optionalNamespaces) === null || _b === void 0 ? void 0 : _b[\"aptos\"];\n        if (optionAptosNameSpace != undefined) {\n            let realOptionNS = this.replaceAptosInner(optionAptosNameSpace);\n            if (opts.optionalNamespaces != undefined && \"aptos\" in opts.optionalNamespaces && realOptionNS != undefined) {\n                opts.optionalNamespaces.aptos = realOptionNS;\n            }\n        }\n        return opts;\n    }\n    replaceAptosInner(aptosNameSpace) {\n        var _a;\n        if (aptosNameSpace != undefined) {\n            aptosNameSpace.chains = (_a = aptosNameSpace.chains) === null || _a === void 0 ? void 0 : _a.map(chainId => {\n                return this.aptosChainNameToGeneralId(chainId);\n            });\n            if (aptosNameSpace.defaultChain != undefined) {\n                aptosNameSpace.defaultChain = this.aptosChainNameToGeneralId(aptosNameSpace.defaultChain);\n            }\n        }\n        return aptosNameSpace;\n    }\n    replaceAptosGeneralIdWithNetName(chainId) {\n        if (chainId.includes(\"aptos:637\")) {\n            chainId = chainId.replace(\"aptos:637\", \"aptos:mainnet\");\n        }\n        else if (chainId.includes(\"aptos:70000060\")) {\n            chainId = chainId.replace(\"aptos:70000060\", \"movement:testnet\");\n        }\n        else if (chainId.includes(\"aptos:70000066\")) {\n            chainId = chainId.replace(\"aptos:70000066\", \"movement:mainnet\");\n        }\n        return chainId;\n    }\n    replaceSessionAptos(session) {\n        var _a;\n        let namespaces = (_a = session === null || session === void 0 ? void 0 : session.namespaces) === null || _a === void 0 ? void 0 : _a[\"aptos\"];\n        if (namespaces != undefined && namespaces.chains != undefined) {\n            namespaces.chains = namespaces.chains.map(chain => {\n                return this.replaceAptosGeneralIdWithNetName(chain);\n            });\n            namespaces.accounts = namespaces.accounts.map((account) => {\n                return this.replaceAptosGeneralIdWithNetName(account);\n            });\n            let extra = {};\n            Object.keys(namespaces.extra || {}).forEach((key, index) => {\n                let newKey = this.replaceAptosGeneralIdWithNetName(key);\n                extra[this.replaceAptosGeneralIdWithNetName(key)] = Object.values((session === null || session === void 0 ? void 0 : session.namespaces[\"aptos\"].extra) || {})[index];\n            });\n            namespaces.extra = extra;\n        }\n        (0, core_1.logDebug)(\"replaceSessionAptos\", session);\n    }\n    connected() {\n        (0, core_1.logDebug)('OKXUniversalProvider connected() called');\n        (0, core_1.reportLog)('provider connected called');\n        let disconnectInner = () => {\n            try {\n                this.cleanup();\n                this.client.engine.connectManagerDisconnect();\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"Error during disconnect:\", e);\n            }\n        };\n        try {\n            if (!this.session)\n                return false;\n            if (!this.client.engine.getCurrentConnectionReady(Object.keys(this.session.namespaces))) {\n                disconnectInner();\n                return false;\n            }\n            return true;\n        }\n        catch (e) {\n            disconnectInner();\n            return false;\n        }\n    }\n    connectAndSign(opts, signRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() called');\n            const updatedOpts = Object.assign(Object.assign({}, opts), { signRequest });\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() opts:', JSON.stringify(opts));\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() signRequest:', JSON.stringify(signRequest));\n            return yield this.connect(updatedOpts);\n        });\n    }\n    connect(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider connect() called');\n            (0, core_1.reportLog)('provider connect called');\n            if (!this.client) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (this.connected()) {\n                return this.session;\n            }\n            opts = this.replaceAptos(opts);\n            (0, core_1.logDebug)(`OKXUniversalProvider connect >>>>`, JSON.stringify(opts));\n            if (opts.sessionConfig === undefined) {\n                opts.sessionConfig = {};\n            }\n            if (opts.sessionConfig.openUniversalUrl === undefined) {\n                opts.sessionConfig.openUniversalUrl = (0, core_1.isMobileUserAgent)();\n            }\n            this.setNamespaces(opts);\n            try {\n                (0, core_1.logDebug)(`UniversalProvider connect opts.stringify ====> ${JSON.stringify(opts)}`);\n                //Connect\n                let session = yield this.client.connect(opts);\n                (0, core_1.logDebug)(`UniversalProvider connect success ====> ${JSON.stringify(session)}`);\n                if (session) {\n                    this.replaceSessionAptos(session);\n                    this.session = session;\n                    this.client.session = session;\n                    this.setConnectConnector();\n                    (0, core_1.logDebug)(`OKXUniversalProvider connect success opts>>>>`, JSON.stringify(opts));\n                    this.onConnect();\n                    if (opts.signRequest && opts.signRequest.length > 0) {\n                        let requestItem = opts.signRequest[0];\n                        let signResponseList = [];\n                        if (typeof window !== \"undefined\" && window && window.okxConnectUniversalUIinwindow) { //from UI\n                            (0, core_1.logDebug)(`OKXUniversalProvider connect success, us UI SDK>>>>`);\n                            if (this.session.signResponse && this.session.signResponse.length > 0) { // >=6.96\n                                signResponseList = this.session.signResponse;\n                            }\n                        }\n                        else {\n                            (0, core_1.logDebug)(`OKXUniversalProvider connect success, us Universal SDK>>>>`);\n                            if (this.session.signResponse && this.session.signResponse.length > 0) { // >=6.96\n                                signResponseList = this.session.signResponse;\n                            }\n                            else {\n                                signResponseList.push((0, packages_1.creatNotSupportMethodItemReplay)(requestItem));\n                            }\n                        }\n                        (0, core_1.logDebug)(`UniversalProvider connect success connectRequestReply ====> ${JSON.stringify(signResponseList)}`);\n                        setTimeout(() => {\n                            this.events.emit(\"connect_signResponse\", signResponseList);\n                        }, 100);\n                    }\n                    return session;\n                }\n                return undefined;\n            }\n            catch (error) {\n                (0, core_1.logDebug)(`UniversalProvider connect error ====> `, JSON.stringify(error));\n                throw error;\n            }\n        });\n    }\n    syncAllAddresses() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if ((0, provider_1.syncAddressAvailable)(this.session.wallet)) {\n                return this.client.syncAllAddress();\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n            }\n        });\n    }\n    setConnectConnector() {\n        var _a;\n        this.client.setConnectConnector((_a = this.session) === null || _a === void 0 ? void 0 : _a.wallet);\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    setDefaultChain(chain, rpcUrl) {\n        (0, core_1.logDebug)('OKXUniversalProvider setDefaultChain() called');\n        // chain = this.aptosChainNameToGeneralId(chain)\n        try {\n            // ignore without active session\n            if (!this.connected())\n                return;\n            const [namespace, chainId] = this.validateChain(chain);\n            const provider = this.getProvider(namespace);\n            provider.setDefaultChain(chainId, rpcUrl);\n        }\n        catch (error) {\n            // ignore the error if the fx is used prematurely before namespaces are set\n            if (!/Please call connect/.test(error.message))\n                throw error;\n        }\n    }\n    checkStorage() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let sessionInfoStr = yield this.getFromStore(\"connectSession\");\n            (0, core_1.logDebug)(sessionInfoStr);\n            if (sessionInfoStr) {\n                (0, core_1.logDebug)(`checkStorage error start`);\n                try {\n                    let sessionInfo = sessionInfoStr;\n                    this.session = sessionInfo;\n                    this.client.session = this.session;\n                    this.setConnectConnector();\n                    yield this.client.restoreconnect(sessionInfo);\n                    this.sessionConfig = sessionInfo.sessionConfig;\n                    this.client.sessionConfig = this.sessionConfig;\n                    (0, core_1.logDebug)('[evm u-provider] do reconnection', this.session);\n                    this.createProviders();\n                    this.registerEventListeners();\n                    setTimeout(() => {\n                        this.events.emit(\"reconnect\", { session: this.session });\n                    }, 100);\n                }\n                catch (e) {\n                    yield this.cleanup();\n                    (0, core_1.logDebug)(`checkStorage error ${JSON.stringify(e)}`);\n                }\n            }\n        });\n    }\n    initialize() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider initialize() called');\n            (0, core_1.reportLog)('provider initialize called');\n            const data = Object.assign({ url: window.location.hostname, origin: window.location.origin }, this.providerOpts.dappMetaData);\n            this.client = new client_1.SignClient(data, this.events);\n            this.registerConnector(this.providerOpts.connector);\n            yield this.checkStorage();\n        });\n    }\n    createProviders() {\n        if (!this.client) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n        }\n        if (!this.connected()) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Session not initialized. Please call connect() before enable()\");\n        }\n        const providersToCreate = [\n            ...new Set(Object.keys(this.session.namespaces)\n                .filter((namespace) => { var _a, _b; return ((_b = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.accounts) === null || _b === void 0 ? void 0 : _b.length) > 0; })\n                .map((namespace) => (0, namespaces_1.parseNamespaceKey)(namespace))),\n        ];\n        this.rpcProviders = {};\n        providersToCreate.forEach((namespace) => {\n            if (!this.session)\n                return;\n            const namespacesValue = this.session.namespaces;\n            const currentNameSpace = namespacesValue[namespace];\n            (0, core_1.logDebug)(\"init eip155 >> \", currentNameSpace);\n            switch (namespace) {\n                case \"eip155\":\n                    const opts = {\n                        namespace: currentNameSpace\n                    };\n                    this.rpcProviders[namespace] = new eip155_1.Eip155Provider(opts, this.client, this.events);\n                    break;\n                case \"solana\":\n                    const opts1 = {\n                        namespace: currentNameSpace\n                    };\n                    let solanaProvider = new solana_1.default(opts1, \"solana\", this.client, this.events);\n                    this.rpcProviders[namespace] = solanaProvider;\n                    let sonicProvider = new solana_1.default(opts1, \"sonic\", this.client, this.events);\n                    this.rpcProviders['sonic'] = sonicProvider;\n                    let svmProvider = new solana_1.default(opts1, \"svm\", this.client, this.events);\n                    this.rpcProviders['svm'] = svmProvider;\n                    // this.rpcProviders[namespace] = new SolanaProvider(opts1, () => { return this.session; });\n                    break;\n                case \"ton\":\n                    const optsTon = {\n                        namespace: currentNameSpace\n                    };\n                    let tonProvider = new ton_1.default(optsTon, this.client, this.events);\n                    this.rpcProviders[namespace] = tonProvider;\n                    break;\n                case \"sui\":\n                    const optsSui = {\n                        namespace: currentNameSpace\n                    };\n                    let suiProvider = new sui_1.SuiProvider(optsSui, this.client, this.events);\n                    suiProvider.name = \"sui\";\n                    this.rpcProviders[namespace] = suiProvider;\n                    break;\n                case \"btc\":\n                    const optsBtc = {\n                        namespace: currentNameSpace\n                    };\n                    let btcProvider = new btc_1.default(optsBtc, \"btc\", this.client, this.events);\n                    this.rpcProviders[\"btc\"] = btcProvider;\n                    let fbProvider = new btc_1.default(optsBtc, \"fractal\", this.client, this.events);\n                    this.rpcProviders[\"fractal\"] = fbProvider;\n                    break;\n                case \"aptos\":\n                    let aptosProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"aptos\", this.client, this.events);\n                    this.rpcProviders[namespace] = aptosProvider;\n                    let moveProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"movement\", this.client, this.events);\n                    this.rpcProviders[\"movement\"] = moveProvider;\n                    break;\n                case \"cosmos\":\n                    let cosmosProvider = new cosmos_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = cosmosProvider;\n                    break;\n                case \"tron\":\n                    let tronProvider = new tron_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = tronProvider;\n                    break;\n                case \"starknet\":\n                    let starknetProvider = new starknet_1.default({\n                        namespace: currentNameSpace\n                    }, \"starknet\", this.client, this.events);\n                    this.rpcProviders[namespace] = starknetProvider;\n                    break;\n            }\n        });\n    }\n    registerEventListeners() {\n        if (typeof this.client === \"undefined\") {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client is not initialized\");\n        }\n        this.client.engine.addDisconnectListener(() => {\n            this.disconnectAndEmit();\n            this.cleanup();\n        });\n        this.on(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, (caip2ChainId) => {\n            this.onChainChanged(caip2ChainId);\n        });\n        this.on(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, (nameSpaces) => {\n            if (nameSpaces) {\n                const nameSpacekey = Object.keys(nameSpaces)[0];\n                if (this.session) {\n                    this.session.namespaces[nameSpacekey] = nameSpaces[nameSpacekey];\n                    if (this.session) {\n                        this.persist(\"connectSession\", this.session);\n                        this.events.emit(\"session_update\", this.session);\n                    }\n                    (0, core_1.logDebug)(\"PROVIDER_EVENTS.UPDATE_NAMESPACES this.session... ->>>\", JSON.stringify(this.session));\n                }\n            }\n        });\n    }\n    getProvider(namespace) {\n        (0, core_1.logDebug)('current get providers', this.rpcProviders);\n        (0, core_1.logDebug)('query namespace: ', namespace);\n        return this.rpcProviders[namespace];\n    }\n    setNamespaces(params) {\n        this.connectOpts = params;\n        const { namespaces, sessionConfig } = params;\n        const data = {\n            origin: window.location.origin,\n            url: window.location.hostname,\n            name: this.providerOpts.dappMetaData.name,\n            icon: this.providerOpts.dappMetaData.icon,\n            manifestUrl: this.providerOpts.dappMetaData.manifestUrl,\n        };\n        this.sessionConfig = Object.assign({ dappInfo: data }, sessionConfig);\n        (0, core_1.logDebug)(\"setNamespaces sessionConfig>>>\", this.sessionConfig);\n        this.client.sessionConfig = this.sessionConfig;\n        this.persist(\"sessionConfig\", sessionConfig);\n    }\n    validateChain(chain) {\n        var _a;\n        let [namespace, chainId] = (chain === null || chain === void 0 ? void 0 : chain.split(\":\")) || [\"\", \"\"];\n        if (!this.session || !this.session.namespaces || !Object.keys(this.session.namespaces).length) {\n            (0, core_1.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        if (namespace) {\n            if (!this.isChainNamespaceInSession(namespace)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace '${namespace}' is not configured. Please call connect() first with namespace config.`);\n            }\n            if (chainId && chain) {\n                (0, core_1.logDebug)('this.session.namespaces -->> ', namespace, JSON.stringify(this.session.namespaces));\n                const chainsArr = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.chains;\n                (0, core_1.logDebug)('get chainsArr & chain', JSON.stringify(chainsArr), chain);\n                if (chainsArr && !chainsArr.includes(chain)) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace not include the chain '${chain}'`);\n                }\n            }\n        }\n        if (namespace && chainId) {\n            (0, core_1.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        let defaultNamespace = (0, namespaces_1.parseNamespaceKey)(Object.keys(this.session.namespaces)[0]);\n        const defaultChain = this.rpcProviders[defaultNamespace].getDefaultChain();\n        (0, core_1.logDebug)('get default chain:', defaultChain);\n        return [defaultNamespace, defaultChain];\n    }\n    isChainNamespaceInSession(namespaceStr) {\n        var _a, _b;\n        if (Object.keys(((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces) || {})\n            .map((key) => (0, namespaces_1.parseNamespaceKey)(key))\n            .includes(namespaceStr)) {\n            return true;\n        }\n        let isChainNamespaceInSession = false;\n        Object.values(((_b = this.session) === null || _b === void 0 ? void 0 : _b.namespaces) || {})\n            .forEach(namespace => {\n            namespace.chains.forEach(chain => {\n                if (chain.split(\":\")[0] == namespaceStr) {\n                    isChainNamespaceInSession = true;\n                }\n            });\n        });\n        return isChainNamespaceInSession;\n    }\n    requestAccountsWithNamespace(namespace) {\n        return this.getProvider(namespace).requestAccounts();\n    }\n    requestDefaultChainWithNamespace(namespace) {\n        return this.getProvider(namespace).getDefaultChain();\n    }\n    requestAccounts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const [namespace] = this.validateChain();\n            return yield this.getProvider(namespace).requestAccounts();\n        });\n    }\n    onChainChanged(caip2Chain) {\n        var _a;\n        if (!((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces))\n            return;\n        const [namespace, chainId] = this.validateChain(caip2Chain);\n        if (!chainId)\n            return;\n        if (this.session.namespaces[namespace]) {\n            this.session.namespaces[namespace].defaultChain = chainId;\n            this.persist(\"connectSession\", this.session);\n        }\n        this.events.emit(\"chainChanged\", chainId);\n    }\n    onConnect() {\n        this.createProviders();\n        if (this.session) {\n            this.persist(\"connectSession\", this.session);\n            console.log(\"window.okxwallet save session:\", Date.now());\n        }\n        this.events.emit(\"connect\", { session: this.session });\n        this.registerEventListeners();\n    }\n    cleanup() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.session = undefined;\n            this.client.session = undefined;\n            this.setConnectConnector();\n            this.sessionProperties = undefined;\n            this.persist(\"optionalNamespaces\", undefined);\n            this.persist(\"sessionProperties\", undefined);\n            this.persist(\"connectSession\", undefined);\n        });\n    }\n    persist(key, data) {\n        (0, core_1.logDebug)('[evm u-provider] persisit data', key, data);\n        return this.client.engine.saveSessionContent(key, data);\n    }\n    getFromStore(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.client.engine.getSessionContent(key);\n        });\n    }\n    showRequestModal(args, chain) {\n        try {\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return this.getProvider(namespace).showRequestModal(requestParam);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    openWallet(engineConnectInfo, connector) {\n        this.client.openWallet(engineConnectInfo, connector);\n    }\n    registerConnector(connectors) {\n        this.client.registerConnector(connectors);\n        this.client.setAccountChangeListener(session => {\n            (0, core_1.logDebug)(\"accountChangeListener session：\", this.events.listenerCount('accountChanged'), JSON.stringify(session));\n            try {\n                if (session && this.events.listenerCount('accountChanged')) {\n                    this.replaceSessionAptos(session);\n                    this.session = session;\n                    this.client.session = session;\n                    if (this.session) {\n                        this.persist(\"connectSession\", this.session);\n                        console.log(\"window.okxwallet save session:\", Date.now());\n                    }\n                    this.setConnectConnector();\n                    this.createProviders();\n                    this.events.emit(\"accountChanged\", this.session);\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"setAccountChangeListener error:\", JSON.stringify(error));\n            }\n        });\n    }\n}\nexports.OKXUniversalProvider = OKXUniversalProvider;\nexports.default = OKXUniversalProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXStarknetProvider = exports.OKXTronProvider = exports.OKXTonProvider = exports.OKXCosmosProvider = exports.OKXBtcProvider = exports.OKXUniversalProvider = void 0;\n__exportStar(require(\"./provider/types\"), exports);\n__exportStar(require(\"./packages\"), exports);\nvar OKXUniversalProvider_1 = require(\"./OKXUniversalProvider\");\nObject.defineProperty(exports, \"OKXUniversalProvider\", { enumerable: true, get: function () { return OKXUniversalProvider_1.OKXUniversalProvider; } });\nvar OKXBtcProvider_1 = require(\"./OKXBtcProvider\");\nObject.defineProperty(exports, \"OKXBtcProvider\", { enumerable: true, get: function () { return OKXBtcProvider_1.OKXBtcProvider; } });\nvar OKXCosmosProvider_1 = require(\"./OKXCosmosProvider\");\nObject.defineProperty(exports, \"OKXCosmosProvider\", { enumerable: true, get: function () { return OKXCosmosProvider_1.OKXCosmosProvider; } });\nvar OKXTonProvider_1 = require(\"./OKXTonProvider\");\nObject.defineProperty(exports, \"OKXTonProvider\", { enumerable: true, get: function () { return OKXTonProvider_1.OKXTonProvider; } });\nvar OKXTronProvider_1 = require(\"./OKXTronProvider\");\nObject.defineProperty(exports, \"OKXTronProvider\", { enumerable: true, get: function () { return OKXTronProvider_1.OKXTronProvider; } });\nvar OKXStarknetProvider_1 = require(\"./OKXStarknetProvider\");\nObject.defineProperty(exports, \"OKXStarknetProvider\", { enumerable: true, get: function () { return OKXStarknetProvider_1.OKXStarknetProvider; } });\n__exportStar(require(\"@okxconnect/core\"), exports);\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignClient = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"../utils/namespaces\");\nconst ConnectMethodUtils_1 = require(\"../utils/ConnectMethodUtils\");\nconst constants_1 = require(\"../../provider/constants\");\nclass SignClient extends core_1.ISignClient {\n    constructor(metaData, events) {\n        super(metaData);\n        // ---------- Engine ----------------------------------------------- //\n        this.connect = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    var connectRequest = [];\n                    (0, core_1.logDebug)(`client connect params >>>`, JSON.stringify(params));\n                    var requestAccountItem = {\n                        name: \"requestAccounts\",\n                        requiredNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.namespaces),\n                        optionalNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.optionalNamespaces),\n                    };\n                    this.engine.setSessionConnectingListener(() => {\n                        (0, core_1.logDebug)(`sessionConnectingListener >>>`);\n                        this.events.emit(constants_1.PROVIDER_EVENTS.SESSION_CONNECTING);\n                    });\n                    if (params.signRequest) {\n                        requestAccountItem.connectRequestMethods = yield (0, ConnectMethodUtils_1.connectMethodsToConnectWalletMethods)(params.signRequest, requestAccountItem.requiredNamespaces);\n                    }\n                    connectRequest.push(requestAccountItem);\n                    (0, core_1.logDebug)(`client connect connectRequest >>>`, JSON.stringify(connectRequest));\n                    this.engine.universalConnect(connectRequest, Object.assign({ dappInfo: this.metadata }, params.sessionConfig), (info) => {\n                        if (info && info.connectRequest) {\n                            (0, core_1.logDebug)(`universalConect info.connectRequest :`, info.connectRequest);\n                            (0, core_1.logDebug)(`universalConect url:`, (0, core_1.getOKXLink)(info.connectRequest, this.sessionConfig.useMini));\n                            this.events.emit(\"display_uri\", (0, core_1.getOKXLink)(info.connectRequest, this.sessionConfig.useMini));\n                            this.events.emit(\"short_display_uri\", (0, core_1.getAppWalletShortDeepLink)(info.connectRequest.topic, info.connectRequest.clientId));\n                            (0, core_1.logDebug)(`universalConect EngineConnectInfo  ${JSON.stringify(info)}`);\n                            this.events.emit(\"okx_engine_connect_params\", info);\n                        }\n                    }).then((session) => __awaiter(this, void 0, void 0, function* () {\n                        (0, namespaces_1.fillParamsToSession)(session, params.namespaces, params.optionalNamespaces, this.sessionConfig);\n                        (0, core_1.logDebug)(`signClient: connect: session ${JSON.stringify(session)}`);\n                        if (params.signRequest) {\n                            yield (0, ConnectMethodUtils_1.connectMethodsResponseUpdate)(session, params.signRequest);\n                        }\n                        resolve(session);\n                    })).catch((e) => {\n                        (0, core_1.logDebug)(`signClient: connect: catch ${JSON.stringify(e)}`);\n                        this.events.emit(\"connect_error\", e);\n                        reject(e);\n                    });\n                }\n                catch (error) {\n                    (0, core_1.logDebug)(`signClient: connect:  ${JSON.stringify(error)}`);\n                    reject(error);\n                }\n            }));\n        });\n        this.restoreconnect = (sessionConfig) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.restoreconnect(sessionConfig, (session) => {\n                    if (session) {\n                        resolve(session);\n                    }\n                    else {\n                        reject();\n                    }\n                });\n            });\n        });\n        this.reject = (params) => __awaiter(this, void 0, void 0, function* () {\n        });\n        this.request = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                (0, core_1.logDebug)(\"clint request --params>>>> >\", (_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl, (0, core_1.safeJsonStringify)(params));\n                try {\n                    // this.sessionConfig\n                    if (((_b = this.sessionConfig) === null || _b === void 0 ? void 0 : _b.openUniversalUrl) && (0, core_1.isIos)()) {\n                        this.openOKXWallet();\n                    }\n                    yield this.engine.send(params, {\n                        resolve: (response) => {\n                            delete response.requestId;\n                            (0, core_1.logDebug)(\"clint request --response >\", (0, core_1.safeJsonStringify)(response));\n                            if (('error' in response) && response.error) {\n                                let error = response.error;\n                                reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                            }\n                            else {\n                                resolve(response);\n                            }\n                        },\n                        onAck: () => {\n                            var _a;\n                            if (!(0, core_1.isIos)() && ((_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl)) {\n                                this.openOKXWallet();\n                            }\n                        }\n                    });\n                }\n                catch (e) {\n                    (0, core_1.logDebug)(\"clint request --error:\", e);\n                    reject(e);\n                }\n            }));\n        });\n        this.disconnect = () => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"disconnect\"\n                }, {\n                    onAck: () => {\n                        resolve();\n                    }\n                }, 86400000).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n        this.engine = new core_1.Engine(metaData.name);\n        this.events = events;\n        this.metadata = metaData;\n    }\n    setAccountChangeListener(accountChangeListener) {\n        this.engine.setAccountChangeListener(accountChangeListener);\n    }\n    openOKXWallet() {\n        // if (this.openUniversalUrl){\n        (0, core_1.logDebug)('bridge-provider ==>> connect_5');\n        this.engine.openWallet({ tmaReturnUrl: this.sessionConfig.tmaReturnUrl });\n        // if (this.sessionConfig?.useMini){\n        //     let url = getTelegramWalletTWAUrl(undefined,this.sessionConfig.tmaReturnUrl)\n        //     openOKXTMAWalletlinkWithFallback(url)\n        // }else{\n        //     openOKXDeeplink(standardDeeplink);\n        // }\n        // }\n    }\n    syncAllAddress() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"sync_all_addresses\"\n                }, {\n                    resolve: (response) => {\n                        delete response.requestId;\n                        (0, core_1.logDebug)(\"clint syncAllAddress --response >\", JSON.stringify(response));\n                        if (('error' in response) && response.error) {\n                            let error = response.error;\n                            reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                        }\n                        else {\n                            let allAddressStr = response.result;\n                            resolve((0, ConnectMethodUtils_1.syncResoonseToRequire)(allAddressStr));\n                        }\n                    }\n                }).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n    }\n    registerConnector(connectors) {\n        this.engine.registerConnector(connectors);\n    }\n    openWallet(engineConnectInfo, connector) {\n        this.engine.openWallet(engineConnectInfo, connector);\n    }\n    setConnectConnector(wallet) {\n        this.engine.setConnectConnector(wallet);\n    }\n}\nexports.SignClient = SignClient;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.connectSupportMethods = void 0;\nexports.creatNotSupportMethodItemReplay = creatNotSupportMethodItemReplay;\nexports.connectMethodsAdaptOldVersion = connectMethodsAdaptOldVersion;\nexports.connectMethodsResponseUpdate = connectMethodsResponseUpdate;\nexports.connectMethodsToConnectWalletMethods = connectMethodsToConnectWalletMethods;\nexports.syncResoonseToRequire = syncResoonseToRequire;\nconst core_1 = require(\"@okxconnect/core\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst provider_1 = require(\"../../provider\");\nfunction isArray(value) {\n    return typeof value === \"object\" && value !== null && Array.isArray(value);\n}\nfunction isRecord(value) {\n    return typeof value === \"object\" && value !== null && !Array.isArray(value);\n}\n// \"wallet_addEthereumChain\",\n// \"solana_signMessage\",  There are risks\nexports.connectSupportMethods = Object.freeze([\n    \"personal_sign\",\n    \"sui_signMessage\",\n    \"sui_signPersonalMessage\",\n    \"btc_signMessage\",\n    \"aptos_signMessage\",\n    \"cosmos_signArbitrary\",\n    \"tron_signMessage\",\n    \"tron_signMessageV2\",\n    \"starknet_signMessage\",\n    \"sync_all_addresses\"\n]);\nfunction creatNotSupportMethodItemReplay(requestParams) {\n    let notSupportError = new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n    var errorItem = {\n        method: requestParams.method,\n        chainId: requestParams.chainId,\n        error: {\n            code: notSupportError.code,\n            message: notSupportError.message\n        },\n    };\n    return errorItem;\n}\nfunction connectMethodsAdaptOldVersion(requestParams, session) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b, _c, _d, _e;\n        try {\n            (0, core_1.logDebug)(\"connectMethodsAdaptOldVersion start params :\", JSON.stringify(requestParams));\n            let callBackParams = {};\n            if (requestParams.method === \"solana_signMessage\") {\n                let solAccount = (_a = session.namespaces[core_1.NameSpaceKeySOL]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account1) {\n                    return account1.startsWith(requestParams.chainId);\n                })[0];\n                const solAddress = (0, provider_1.fromAccountToAddress)(solAccount);\n                if (requestParams.params && solAddress && \"message\" in requestParams.params) {\n                    let realMessage = requestParams.params.message;\n                    if (((_b = session.wallet) === null || _b === void 0 ? void 0 : _b.appName) == \"OKX Wallet\") {\n                        let encodeMessage = new TextEncoder().encode(realMessage);\n                        realMessage = bs58_1.default.encode(encodeMessage);\n                    }\n                    requestParams.params = {\n                        message: realMessage,\n                        \"pubkey\": solAddress\n                    };\n                    callBackParams = {\n                        publicKey: solAddress\n                    };\n                    (0, core_1.logDebug)(\"solana_signMessage account and address:\", JSON.stringify(solAccount), solAddress);\n                    (0, core_1.logDebug)(\"solana_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"sui_signMessage\" || requestParams.method === \"sui_signPersonalMessage\") {\n                if (\"message\" in requestParams.params && requestParams.params.message) {\n                    let suiMessage = JSON.parse(JSON.stringify(requestParams.params.message));\n                    let convertedArray = Object.values(suiMessage);\n                    let uint8Array = new Uint8Array(convertedArray);\n                    let decoder = new TextDecoder(\"utf8\");\n                    let b64encoded = btoa(decoder.decode(uint8Array));\n                    requestParams.params = {\n                        message: atob(b64encoded),\n                    };\n                    console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", JSON.stringify(requestParams.params), b64encoded);\n                    if (requestParams.method === \"sui_signMessage\") {\n                        callBackParams = {\n                            \"messageBytes\": b64encoded,\n                            \"signature\": \"\"\n                        };\n                    }\n                    else if (requestParams.method === \"sui_signPersonalMessage\") {\n                        callBackParams = {\n                            \"bytes\": b64encoded,\n                            \"signature\": \"\"\n                        };\n                    }\n                    (0, core_1.logDebug)(\"sui_signMessage/sui_signPersonalMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"btc_signMessage\") {\n                let btcAccounts = (_c = session.namespaces[core_1.NameSpaceKeyBtc]) === null || _c === void 0 ? void 0 : _c.accounts.filter(function (account2) {\n                    return account2.startsWith(requestParams.chainId);\n                });\n                let btcAccount = btcAccounts[0];\n                const btcAddress = (0, provider_1.fromAccountToAddress)(btcAccount);\n                (0, core_1.logDebug)(\"btc_signMessage account and address:\", JSON.stringify(btcAccount), btcAddress);\n                if (btcAddress) {\n                    if (\"message\" in requestParams.params && requestParams.params.message && typeof requestParams.params.message === 'string') {\n                        requestParams.params = {\n                            from: btcAddress,\n                            signStr: requestParams.params.message\n                        };\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                    }\n                    requestParams.params[\"from\"] = btcAddress;\n                    (0, core_1.logDebug)(\"btc_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"aptos_signMessage\") {\n                let paramData = requestParams.params;\n                let aptosAccount = (_d = session.namespaces[core_1.NameSpaceKeyAptos]) === null || _d === void 0 ? void 0 : _d.accounts.filter(function (account3) {\n                    return account3.startsWith(requestParams.chainId);\n                })[0];\n                let aptosAddress = (0, provider_1.fromAccountToAddress)(aptosAccount);\n                if (paramData && aptosAddress) {\n                    let prefix = \"APTOS\";\n                    let message = \"\", nonce = \"\";\n                    var fullMessage = prefix;\n                    let application = window.location.protocol + \"//\" + window.location.hostname;\n                    if (\"address\" in paramData && paramData.address) {\n                        fullMessage += \"\\naddress: \" + aptosAddress;\n                    }\n                    if (\"application\" in paramData && paramData.application) {\n                        fullMessage += \"\\napplication: \" + application;\n                    }\n                    let aptosChainId = 1;\n                    if (\"chainId\" in paramData && paramData.chainId) {\n                        if (paramData.chainId == \"aptos:mainnet\") {\n                            aptosChainId = 1;\n                        }\n                        else if (paramData.chainId == \"movement:testnet\") {\n                            aptosChainId = 2;\n                        }\n                        fullMessage += \"\\nchainId: \" + aptosChainId;\n                    }\n                    if (\"message\" in paramData) {\n                        fullMessage += \"\\nmessage: \" + paramData.message;\n                        message = paramData.message;\n                    }\n                    if (\"nonce\" in paramData) {\n                        fullMessage += \"\\nnonce: \" + paramData.nonce;\n                        nonce = paramData.nonce;\n                    }\n                    const utf8Array = new TextEncoder().encode(fullMessage);\n                    const hex = Array.from(utf8Array)\n                        .map(byte => byte.toString(16).padStart(2, \"0\"))\n                        .join(\"\");\n                    requestParams.params = {\n                        \"message\": hex,\n                    };\n                    (0, core_1.logDebug)(\"aptos_signMessage requestParams:\", JSON.stringify(requestParams));\n                    callBackParams = {\n                        address: aptosAddress,\n                        application: application,\n                        chainId: aptosChainId,\n                        fullMessage: fullMessage,\n                        message: message,\n                        nonce: nonce,\n                        prefix: prefix,\n                        signature: \"\",\n                    };\n                    (0, core_1.logDebug)(\"aptos_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"cosmos_signArbitrary\") {\n                let cosmosAccount = (_e = session === null || session === void 0 ? void 0 : session.namespaces[core_1.NameSpaceKeyCosmos]) === null || _e === void 0 ? void 0 : _e.accounts.filter(function (account_cosmos) {\n                    return account_cosmos.startsWith(requestParams.chainId);\n                })[0];\n                const cosmosAddress = (0, provider_1.fromAccountToAddress)(cosmosAccount);\n                let cosmosData = requestParams.params[\"message\"];\n                const cosmosBase64Encoded = btoa(cosmosData);\n                (0, core_1.logDebug)(\"cosmos_signArbitrary account and address:\", JSON.stringify(cosmosAccount), cosmosAddress);\n                (0, core_1.logDebug)(\"cosmos_signArbitrary cosmosBase64Encoded:\", cosmosBase64Encoded);\n                if (cosmosData && cosmosAddress) {\n                    const signDoc = {\n                        chain_id: \"\",\n                        account_number: \"0\",\n                        sequence: \"0\",\n                        fee: {\n                            gas: \"0\",\n                            amount: []\n                        },\n                        msgs: [{\n                                \"type\": \"sign/MsgSignData\",\n                                \"value\": {\n                                    \"signer\": cosmosAddress,\n                                    \"data\": cosmosBase64Encoded\n                                }\n                            }],\n                        memo: \"\"\n                    };\n                    requestParams.params = {\n                        \"signer\": cosmosAddress,\n                        \"chain_id\": requestParams.chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    };\n                    (0, core_1.logDebug)(\"cosmos_signArbitrary callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            (0, core_1.logDebug)(\"sol_handleSignatureData end params:\", JSON.stringify(requestParams));\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\nfunction connectMethodsResponseUpdate(session, requestParams) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a;\n        try {\n            if (session.signResponse) {\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate signResponse:\", JSON.stringify(session.signResponse));\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate session.namespaces:\", JSON.stringify(session.namespaces));\n                for (const methodItem of session.signResponse) {\n                    (0, core_1.logDebug)(\"connectMethodsResponseUpdate methodItem:\", JSON.stringify(methodItem));\n                    if (\"result\" in methodItem) {\n                        if (methodItem.method === \"solana_signMessage\") {\n                            let solanaSuccessData = methodItem.result;\n                            (0, core_1.logDebug)(\"solana_signMessage methodItem.chainId:\", methodItem.chainId);\n                            let account = (_a = session.namespaces[core_1.NameSpaceKeySOL]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account) {\n                                (0, core_1.logDebug)(\"solana_signMessage account:\", account);\n                                return account.startsWith(methodItem.chainId);\n                            })[0];\n                            (0, core_1.logDebug)(\"solana_signMessage result account:\", solanaSuccessData, account);\n                            if (solanaSuccessData && account) {\n                                methodItem.result = {\n                                    \"signature\": bs58_1.default.decode(solanaSuccessData),\n                                    \"publicKey\": (0, provider_1.fromAccountToAddress)(account)\n                                };\n                            }\n                        }\n                        else if (methodItem.method === \"sui_signMessage\" || methodItem.method === \"sui_signPersonalMessage\") {\n                            let suiMethod = requestParams.filter(function (requestMethod) {\n                                return requestMethod.method === methodItem.method;\n                            })[0];\n                            if (suiMethod && suiMethod.params && \"message\" in suiMethod.params) {\n                                let suiMessage = suiMethod.params.message;\n                                let suiMessageb64 = btoa(suiMessage);\n                                console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", suiMessage, suiMessageb64);\n                                if (methodItem.method === \"sui_signMessage\") {\n                                    methodItem.result = {\n                                        \"messageBytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                                else if (methodItem.method === \"sui_signPersonalMessage\") {\n                                    methodItem.result = {\n                                        \"bytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                            }\n                        }\n                        else if (methodItem.method === \"aptos_signMessage\") {\n                            if (methodItem.chainId === \"aptos:637\") {\n                                methodItem.chainId = \"aptos:mainnet\";\n                            }\n                            else if (methodItem.chainId === \"aptos:70000060\") {\n                                methodItem.chainId = \"movement:testnet\";\n                            }\n                            else if (methodItem.chainId === \"aptos:70000066\") {\n                                methodItem.chainId = \"movement:mainnet\";\n                            }\n                            methodItem.result = JSON.parse(methodItem.result);\n                            console.log(\"aptos_signMessage result methodItem.result before:>>>>\", JSON.stringify(methodItem.result));\n                            if (methodItem.result && \"signature\" in methodItem.result) {\n                                let aptosSignature = methodItem.result.signature;\n                                if (aptosSignature && aptosSignature.startsWith(\"0x\")) {\n                                    aptosSignature = aptosSignature.slice(2, aptosSignature.length);\n                                    methodItem.result.signature = aptosSignature;\n                                }\n                            }\n                            console.log(\"aptos_signMessage result methodItem.result after:>>>>\", JSON.stringify(methodItem.result));\n                        }\n                        else if (methodItem.method === \"cosmos_signArbitrary\") {\n                            methodItem.result = JSON.parse(methodItem.result);\n                        }\n                        else if (methodItem.method == 'starknet_signMessage') {\n                            let results = methodItem.result;\n                            if (typeof results == 'string') {\n                                results = JSON.parse(results);\n                            }\n                            methodItem.result = [results[\"signedDataR\"], results[\"signedDataS\"]];\n                        }\n                        else if (methodItem.method == 'sync_all_addresses') {\n                            methodItem.result = syncResoonseToRequire(methodItem.result);\n                        }\n                    }\n                }\n            }\n        }\n        catch (error) {\n            (0, core_1.logDebug)(\"connectMethodsResponseUpdate signResponse Error:\", JSON.stringify(error));\n            throw error;\n        }\n    });\n}\nfunction connectMethodsToConnectWalletMethods(params, requireNameSpace) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods requestMethods:\", JSON.stringify(params));\n            const result = [];\n            //TODO  后面需要打开限制\n            if (params && params.length > 1) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connectAndSign/openModalAndSign signRequest only support one data`);\n            }\n            if (!requireNameSpace && params && params.length > 0) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error , RequestMethods cannot be added when the NameSpace is empty`);\n            }\n            // check chianId\n            for (const methodItem of params) {\n                if (methodItem.method === \"aptos_signMessage\") { //update chainId\n                    if (methodItem.chainId === \"aptos:mainnet\") {\n                        methodItem.chainId = \"aptos:637\";\n                    }\n                    else if (methodItem.chainId === \"movement:testnet\") {\n                        methodItem.chainId = \"aptos:70000060\";\n                    }\n                    else if (methodItem.chainId === \"movement:mainnet\") {\n                        methodItem.chainId = \"aptos:70000066\";\n                    }\n                }\n                // check chianId\n                if (methodItem.method === \"wallet_addEthereumChain\") {\n                    var includeEip155 = requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.namespace.includes(\"eip155\"));\n                    if (!includeEip155) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', the EVM chain needs to be included in the NameSpace`);\n                    }\n                }\n                else if (methodItem.method === \"sync_all_addresses\") {\n                    if ((0, provider_1.syncAddressHostAvailable)()) {\n                        methodItem.chainId = \"\";\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                    }\n                }\n                else {\n                    const includeChain = !!(requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.chains.some(chain => chain.includes(`${methodItem.chainId}`))));\n                    if (!includeChain) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', NameSpace must contain '${methodItem.chainId}'`);\n                    }\n                }\n            }\n            for (const item of params) {\n                if (!exports.connectSupportMethods.includes(item.method)) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect requestMethods not support method, method: '${item.method}'`);\n                }\n                if (item.method === \"wallet_addEthereumChain\") {\n                    if (Array.isArray(item.params)) {\n                        const paramsArr = item.params;\n                        if (paramsArr && paramsArr.length === 1) {\n                            const firstParam = paramsArr[0];\n                            if (isRecord(firstParam)) {\n                                item.params = firstParam;\n                            }\n                        }\n                        else if (paramsArr && paramsArr.length > 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params only support one data, method: '${item.method}'`);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is nil, method: '${item.method}'`);\n                        }\n                    }\n                }\n                else if (item.method === \"personal_sign\") {\n                    if (isArray(item.params)) {\n                        if (item.params && item.params.length !== 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params error,  method: '${item.method}' `);\n                        }\n                        let firstObj = item.params[0];\n                        if (firstObj && typeof firstObj === 'string') {\n                            item.params = {\n                                message: firstObj\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                }\n                else if (item.method === \"sui_signMessage\" || item.method === \"sui_signPersonalMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message) {\n                            (0, core_1.logDebug)(\"sui_signMessage item.params.message :\", item.params.message);\n                            let message = JSON.parse(JSON.stringify(item.params.message));\n                            let convertedArray = Object.values(message);\n                            let uint8Array = new Uint8Array(convertedArray);\n                            let decoder = new TextDecoder(\"utf8\");\n                            let b64encoded = btoa(decoder.decode(uint8Array));\n                            item.params.message = atob(b64encoded);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"solana_signMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            let encodeMessage = new TextEncoder().encode(item.params.message);\n                            item.params[\"bs58Message\"] = bs58_1.default.encode(encodeMessage);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"aptos_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (item.chainId && (item.chainId === \"aptos:637\" || item.chainId === \"aptos:70000060\" || item.chainId === \"aptos:70000066\")) {\n                            var aptosParams = item.params;\n                            var currentURL = window.location.protocol + \"//\" + window.location.hostname;\n                            let signChainId = 1;\n                            if (item.chainId === \"aptos:637\") {\n                            }\n                            else if (item.chainId === \"aptos:70000060\") {\n                                signChainId = 2;\n                            }\n                            item.params = {\n                                data: aptosParams,\n                                applicationUrl: currentURL,\n                                prefix: \"APTOS\",\n                                aptosChainId: signChainId\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"cosmos_signArbitrary\") {\n                    if (isRecord(item.params)) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            const base64Encoded = btoa(item.params.message);\n                            let cosmosChain = item.chainId.split(\":\")[1];\n                            if (cosmosChain) {\n                                item.params = {\n                                    chain_id: cosmosChain,\n                                    data: {\n                                        chain_id: \"\",\n                                        account_number: \"0\",\n                                        sequence: \"0\",\n                                        fee: {\n                                            gas: \"0\",\n                                            amount: []\n                                        },\n                                        msgs: [{\n                                                \"type\": \"sign/MsgSignData\",\n                                                \"value\": {\n                                                    \"signer\": \"\", //address\n                                                    \"data\": base64Encoded\n                                                }\n                                            }],\n                                        memo: \"\"\n                                    }\n                                };\n                            }\n                            else {\n                                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                            }\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params message is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method == \"tron_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (\"message\" in item.params && item.params.message && typeof item.params.message === 'string') {\n                            item.params.message = stringToHex(item.params.message);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method == \"btc_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (\"message\" in item.params && item.params.message && typeof item.params.message === 'string') {\n                            item.params = {\n                                signStr: item.params.message\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods item:\", JSON.stringify(item));\n                result.push(item);\n            }\n            return result;\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\nfunction stringToHex(str) {\n    let hex = '';\n    for (let i = 0; i < str.length; i++) {\n        hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n    }\n    return hex;\n}\nfunction syncResoonseToRequire(responseAddressStr) {\n    const allAddress = JSON.parse(responseAddressStr);\n    const result = {\n        type: allAddress.type,\n        isEvm: allAddress.isEvm,\n        walletName: allAddress.walletName,\n        deriveName: allAddress.deriveName,\n        addresses: allAddress.addresses.map((addr) => ({\n            coinId: addr.ci,\n            address: addr.a && addr.a !== 'null' ? addr.a : allAddress.evmAddress,\n        })),\n    };\n    return result;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.creatNotSupportMethodItemReplay = exports.connectMethodsAdaptOldVersion = void 0;\nvar ConnectMethodUtils_1 = require(\"./ConnectMethodUtils\");\nObject.defineProperty(exports, \"connectMethodsAdaptOldVersion\", { enumerable: true, get: function () { return ConnectMethodUtils_1.connectMethodsAdaptOldVersion; } });\nObject.defineProperty(exports, \"creatNotSupportMethodItemReplay\", { enumerable: true, get: function () { return ConnectMethodUtils_1.creatNotSupportMethodItemReplay; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAccountsChains = getAccountsChains;\nexports.nameSpaceToConnectWalletNameSpace = nameSpaceToConnectWalletNameSpace;\nexports.fillParamsToSession = fillParamsToSession;\nexports.isCaipNamespace = isCaipNamespace;\nexports.parseNamespaceKey = parseNamespaceKey;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getAccountsChains(accounts) {\n    const chains = [];\n    accounts.forEach((account) => {\n        const [chain, chainId] = account.split(\":\");\n        chains.push(`${chain}:${chainId}`);\n    });\n    return chains;\n}\nfunction nameSpaceToConnectWalletNameSpace(namespaces) {\n    var result = [];\n    if (!namespaces) {\n        return result;\n    }\n    Object.keys(namespaces).forEach((key) => {\n        if (key === core_1.NameSpaceKeyEip155 || key === core_1.NameSpaceKeySOL || key === core_1.NameSpaceKeySui || key === core_1.NameSpaceKeyAptos\n            || key == core_1.NameSpaceKeyBtc || key === core_1.NameSpaceKeyTON || key === core_1.NameSpaceKeyCosmos || key === core_1.NameSpaceKeyTron || key === core_1.NameSpaceKeyStarknet) {\n            if (namespaces[key].chains) {\n                result.push({\n                    namespace: key,\n                    chains: namespaces[key].chains,\n                    params: namespaces[key].params,\n                });\n            }\n        }\n    });\n    return result;\n}\nfunction fillParamsToSession(session, namespaces, optionalNamespaces, sessionConfig) {\n    // Helper function to merge rpcMaps\n    const mergeRpcMap = (targetRpcMap, sourceRpcMap) => {\n        Object.assign(targetRpcMap, sourceRpcMap);\n    };\n    // Merge function for namespaces\n    const mergeNamespaces = (target, source) => {\n        for (const key in source) {\n            if (source.hasOwnProperty(key) && source[key].rpcMap) {\n                if (source[key].rpcMap) {\n                    if (!target[key].rpcMap) {\n                        target[key].rpcMap = {};\n                    }\n                    // 合并 rpcMap\n                    mergeRpcMap(target[key].rpcMap, source[key].rpcMap);\n                }\n                if (source[key].defaultChain && target[key].defaultChain === undefined) {\n                    //defaultChain need in session nameSpace\n                    if (target[key].chains.some(chain => chain.split(\":\")[1] === source[key].defaultChain)) {\n                        target[key].defaultChain = source[key].defaultChain;\n                    }\n                }\n            }\n        }\n    };\n    // 合并 namespaces\n    if (namespaces) {\n        mergeNamespaces(session.namespaces, namespaces);\n    }\n    // 合并 optionalNamespaces\n    if (optionalNamespaces) {\n        mergeNamespaces(session.namespaces, optionalNamespaces);\n    }\n    for (const key in session.namespaces) {\n        const namespace = session.namespaces[key];\n        if (!(namespace === null || namespace === void 0 ? void 0 : namespace.accounts) || namespace.accounts.length === 0) {\n            delete session.namespaces[key];\n        }\n    }\n    if (session.namespaces[core_1.NameSpaceKeyBtc] && session.wallet.appName === core_1.OKXWalletName) {\n        fixMobileBtcSession(session.namespaces[core_1.NameSpaceKeyBtc]);\n    }\n    session.sessionConfig = sessionConfig;\n}\nfunction fixMobileBtcSession(btcNameSpace) {\n    try {\n        if (btcNameSpace && btcNameSpace.extra) {\n            var data = btcNameSpace.extra;\n            Object.keys(data).forEach(key => {\n                const item = data[key];\n                if (Number(item.addressType) === 6) {\n                    item.publicKey = item.compressedPublicKey.slice(2);\n                }\n                else {\n                    item.publicKey = item.compressedPublicKey;\n                }\n            });\n        }\n    }\n    catch (e) {\n        (0, core_1.logDebug)(\"namespaces fixMobileBtcSession error\");\n    }\n}\n/**\n * util designed for Wallets that builds namespaces structure by provided supported chains, methods, events & accounts.\n * It takes required & optional namespaces provided in the session proposal\n * along with the supported chains/methods/events/accounts by the wallet and returns a structured namespaces object\n * @param {BuildApprovedNamespacesParams} params\n * @returns {SessionTypes.Namespaces}\n */\n// export function buildApprovedNamespaces(\n//   params: BuildApprovedNamespacesParams,\n// ): SessionTypes.Namespaces {\n//   const {\n//     proposal: { requiredNamespaces, optionalNamespaces = {} },\n//     supportedNamespaces,\n//   } = params;\n//   const normalizedRequired = normalizeNamespaces(requiredNamespaces);\n//   const normalizedOptional = normalizeNamespaces(optionalNamespaces);\n//\n//   // build approved namespaces\n//   const namespaces = {};\n//   Object.keys(supportedNamespaces).forEach((namespace) => {\n//     const supportedChains = supportedNamespaces[namespace].chains;\n//     const supportedMethods = supportedNamespaces[namespace].methods;\n//     const supportedEvents = supportedNamespaces[namespace].events;\n//     const supportedAccounts = supportedNamespaces[namespace].accounts;\n//\n//     supportedChains.forEach((chain) => {\n//       if (!supportedAccounts.some((account) => account.includes(chain))) {\n//         throw new Error(`No accounts provided for chain ${chain} in namespace ${namespace}`);\n//       }\n//     });\n//\n//     namespaces[namespace] = {\n//       chains: supportedChains,\n//       methods: supportedMethods,\n//       events: supportedEvents,\n//       accounts: supportedAccounts,\n//     };\n//   });\n//\n//   // verify all required namespaces are supported\n//   const err = isConformingNamespaces(requiredNamespaces, namespaces, \"approve()\");\n//   if (err) throw new Error(err.message);\n//\n//   const approvedNamespaces = {};\n//\n//   // if both required & optional namespaces are empty, return all supported namespaces by the wallet\n//   if (!Object.keys(requiredNamespaces).length && !Object.keys(optionalNamespaces).length)\n//     return namespaces;\n//\n//   // assign accounts for the required namespaces\n//   Object.keys(normalizedRequired).forEach((requiredNamespace) => {\n//     const chains = supportedNamespaces[requiredNamespace].chains.filter((chain) =>\n//       normalizedRequired[requiredNamespace]?.chains?.includes(chain),\n//     );\n//     const methods = supportedNamespaces[requiredNamespace].methods.filter((method) =>\n//       normalizedRequired[requiredNamespace]?.methods?.includes(method),\n//     );\n//     const events = supportedNamespaces[requiredNamespace].events.filter((event) =>\n//       normalizedRequired[requiredNamespace]?.events?.includes(event),\n//     );\n//\n//     const accounts = chains\n//       .map((chain: string) =>\n//         supportedNamespaces[requiredNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[requiredNamespace] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   });\n//\n//   // add optional namespaces\n//   Object.keys(normalizedOptional).forEach((optionalNamespace) => {\n//     if (!supportedNamespaces[optionalNamespace]) return;\n//\n//     const chainsToAdd = normalizedOptional[optionalNamespace]?.chains?.filter((chain) =>\n//       supportedNamespaces[optionalNamespace].chains.includes(chain),\n//     );\n//     const methodsToAdd = supportedNamespaces[optionalNamespace].methods.filter((method) =>\n//       normalizedOptional[optionalNamespace]?.methods?.includes(method),\n//     );\n//     const eventsToAdd = supportedNamespaces[optionalNamespace].events.filter((event) =>\n//       normalizedOptional[optionalNamespace]?.events?.includes(event),\n//     );\n//\n//     const accountsToAdd = chainsToAdd\n//       ?.map((chain: string) =>\n//         supportedNamespaces[optionalNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[optionalNamespace] = {\n//       chains: mergeArrays(approvedNamespaces[optionalNamespace]?.chains, chainsToAdd),\n//       methods: mergeArrays(approvedNamespaces[optionalNamespace]?.methods, methodsToAdd),\n//       events: mergeArrays(approvedNamespaces[optionalNamespace]?.events, eventsToAdd),\n//       accounts: mergeArrays(approvedNamespaces[optionalNamespace]?.accounts, accountsToAdd),\n//     };\n//   });\n//\n//   return approvedNamespaces;\n// }\nfunction isCaipNamespace(namespace) {\n    return namespace.includes(\":\");\n}\nfunction parseNamespaceKey(namespace) {\n    return isCaipNamespace(namespace) ? namespace.split(\":\")[0] : namespace;\n}\n/**\n * Converts\n * ```\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * ```\n * into\n * ```\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *```\n */\n// export function normalizeNamespaces(\n//   namespaces: ProposalTypes.RequiredNamespaces,\n// ): ProposalTypes.RequiredNamespaces {\n//   const normalizedNamespaces = {} as ProposalTypes.RequiredNamespaces;\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       methods: mergeArrays(methods, normalizedNamespaces[normalizedKey]?.methods),\n//       events: mergeArrays(events, normalizedNamespaces[normalizedKey]?.events),\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n// export function getNamespacesFromAccounts(accounts: string[]) {\n//   const namespaces = {};\n//   accounts?.forEach((account) => {\n//     const [namespace, chainId] = account.split(\":\");\n//     if (!namespaces[namespace]) {\n//       namespaces[namespace] = {\n//         accounts: [],\n//         chains: [],\n//         events: [],\n//       };\n//     }\n//     namespaces[namespace].accounts.push(account);\n//     namespaces[namespace].chains.push(`${namespace}:${chainId}`);\n//   });\n//\n//   return namespaces;\n// }\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PROVIDER_EVENTS = void 0;\nexports.PROVIDER_EVENTS = {\n    DEFAULT_CHAIN_CHANGED: \"default_chain_changed\",\n    UPDATE_NAMESPACES: \"update_name_spaces\",\n    SESSION_CONNECTING: \"session_connecting\"\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./values\"), exports);\n__exportStar(require(\"./events\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GENERIC_SUBPROVIDER_NAME = exports.RPC_URL = exports.STORAGE = exports.CONTEXT = exports.WC_VERSION = exports.PROTOCOL = exports.RELAY_URL = exports.LOGGER = void 0;\nexports.LOGGER = \"error\";\nexports.RELAY_URL = \"wss://relay.walletconnect.com\";\nexports.PROTOCOL = \"wc\";\nexports.WC_VERSION = 2;\nexports.CONTEXT = \"universal_provider\";\nexports.STORAGE = `${exports.PROTOCOL}@${exports.WC_VERSION}:${exports.CONTEXT}:`;\nexports.RPC_URL = \"https://rpc.walletconnect.com/v1/\";\nexports.GENERIC_SUBPROVIDER_NAME = \"generic\";\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./types\"), exports);\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass AptosProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"aptos\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"aptos request --args--string>\", (0, core_1.safeJsonStringify)(args));\n            (0, core_1.logDebug)(\"aptos provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = AptosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass BtcProvider {\n    constructor(opts, name, client, events) {\n        this.name = core_1.NameSpaceKeyBtc;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"btc request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"btc provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = BtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass CosmosProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyCosmos;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"cosmos request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"cosmos provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = CosmosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Eip155Provider = void 0;\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nclass Eip155Provider {\n    constructor(opts, client, events) {\n        this.name = \"eip155\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = parseInt(this.getDefaultChain());\n        // rpc\n        this.httpProviders = this.createHttpProviders();\n        (0, core_1.logDebug)(\"eip155 constructor --opts.namespace-->\", opts.namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    isArray(value) {\n        return typeof value === \"object\" && value !== null && Array.isArray(value);\n    }\n    updateRequestParams(args) {\n        let isDic = args.params && typeof args.params === 'object' && !Array.isArray(args.params);\n        if (args.method === 'wallet_switchEthereumChain') {\n            const switchChainId = args.chainId.split(\":\")[1];\n            // const hexChainId = parseInt(switchChainId, 16);\n            const decimalNumber = parseInt(switchChainId, 10);\n            if (isNaN(decimalNumber)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid decimal number,  chainId: '${switchChainId}' `);\n            }\n            if (!args.params) {\n                args.params = { chainId: '0x' + decimalNumber.toString(16) };\n            }\n            else if (isDic) { //为 Record<string, unknown>\n                let params = args.params;\n                if (!('chainId' in params)) {\n                    params['chainId'] = '0x' + decimalNumber.toString(16);\n                    args.params = params;\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params error ,  method: '${args.method}' `);\n            }\n        }\n        else if (args.method === 'personal_sign'\n            || args.method === 'eth_signTypedData_v4'\n            || args.method === 'eth_sendTransaction'\n            || args.method === 'wallet_watchAsset') {\n            if (!args.params) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params is nil, method: '${args.method}'`);\n            }\n            if (this.isRecord(args.params)) {\n                let params = args.params;\n                (0, core_1.logDebug)(\"eip155 updateRequestParams params>\", JSON.stringify(params));\n                if ('chainId' in params) {\n                    const selectedChainId = args.chainId.split(\":\")[1];\n                    const chainNum = parseInt(selectedChainId, 10);\n                    let paramsChainString = String(params.chainId);\n                    let paramsChainId;\n                    if (paramsChainString.startsWith(this.name) && args.chainId === paramsChainString) { //为\n                        paramsChainId = chainNum;\n                    }\n                    else if (paramsChainString.startsWith(\"0x\")) {\n                        paramsChainId = parseInt(paramsChainString, 16);\n                    }\n                    else if (!isNaN(Number(paramsChainString))) { //数字\n                        paramsChainId = parseInt(paramsChainString, 10);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid params.chainId format, method: '${args.method}'`);\n                    }\n                    if (chainNum !== paramsChainId) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params.chainId not equal chain,  method: '${args.method}' `);\n                    }\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid request params type, method: '${args.method}'`);\n            }\n        }\n    }\n    //adapt array\n    adaptArray(args) {\n        if (args.method === 'wallet_switchEthereumChain'\n            || args.method === 'wallet_addEthereumChain'\n            || args.method === 'wallet_watchAsset'\n            || args.method === 'eth_sendTransaction') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr) {\n                    if (paramsArr.length === 1) {\n                        let firstParam = args.params[0];\n                        if (this.isRecord(firstParam)) {\n                            args.params = firstParam;\n                        }\n                    }\n                    else if (paramsArr.length > 1) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                    }\n                }\n            }\n        }\n        else if (args.method === 'eth_signTypedData_v4') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr && paramsArr.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                }\n                else if (paramsArr && paramsArr.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let messageObj = {};\n                if (paramsArr && paramsArr.length === 2) {\n                    let addressObj = args.params[0]; //address\n                    if (addressObj && typeof addressObj === 'string') { //check address\n                        let isEqual = false;\n                        this.namespace.accounts.forEach((account) => {\n                            let chainAddress = (0, utils_1.fromAccountToAddress)(account);\n                            if (chainAddress.toLowerCase() === addressObj.toLowerCase()) {\n                                isEqual = true;\n                            }\n                        });\n                        (0, core_1.logDebug)(\"eip155 adaptArray eth_signTypedData_v4 >>>isEqual: \", isEqual);\n                        if (!isEqual) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error, not equal,  method: '${args.method}' `);\n                        }\n                        if (this.isRecord(args.params[1])) {\n                            messageObj = args.params[1];\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error , not string,  method: '${args.method}' `);\n                    }\n                }\n                else if (paramsArr && paramsArr.length === 1) {\n                    if (this.isRecord(args.params[0])) {\n                        messageObj = args.params[0];\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                    }\n                }\n                try {\n                    let messages = JSON.stringify(messageObj);\n                    args.params = {\n                        typedDataJson: messages\n                    };\n                }\n                catch (err) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params call JSON.stringify() failed,  method: '${args.method}' `);\n                }\n            }\n        }\n        else if (args.method === 'personal_sign') {\n            if (this.isArray(args.params)) {\n                if (args.params && args.params.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params error,  method: '${args.method}' `);\n                }\n                else if (args.params && args.params.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let firstObj = args.params[0];\n                let secondObj = args.params[1];\n                if (secondObj && typeof secondObj === 'string') { //check address\n                    let isEqual = false;\n                    this.namespace.accounts.forEach((account) => {\n                        let chainAddress = (0, utils_1.fromAccountToAddress)(account);\n                        if (chainAddress.toLowerCase() === secondObj.toLowerCase()) {\n                            isEqual = true;\n                        }\n                    });\n                    (0, core_1.logDebug)(\"eip155 adaptArray personal_sign >>>isEqual: \", isEqual);\n                    if (!isEqual) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error,  method: '${args.method}' `);\n                    }\n                }\n                if (firstObj && typeof firstObj === 'string') {\n                    args.params = {\n                        message: firstObj\n                    };\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is error,  method: '${args.method}' `);\n                }\n            }\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"eth_requestAccounts\":\n            case \"eth_accounts\":\n            case \"eth_chainId\":\n                return false;\n            case \"eth_sendTransaction\":\n            case \"eth_signTransaction\":\n            case \"eth_sign\":\n            case \"personal_sign\":\n            case \"eth_signTypedData\":\n            case \"wallet_addEthereumChain\":\n            case \"wallet_watchAsset\":\n            case \"eth_signTypedData_v4\":\n                return true;\n            case \"wallet_switchEthereumChain\": {\n                this.adaptArray(args);\n                this.updateRequestParams(args);\n                const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n                return !this.isChainApproved(parsedChainId);\n            }\n            default:\n                return false;\n        }\n        return false;\n    }\n    configAddressAdaptInjectWallet(args) {\n        this.namespace.accounts.forEach((account) => {\n            if (account.includes(args.chainId)) {\n                args.address = (0, utils_1.fromAccountToAddress)(account);\n            }\n        });\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.adaptArray(args);\n            (0, core_1.logDebug)(\"eip155 request --args--string>\", JSON.stringify(args));\n            this.updateRequestParams(args);\n            (0, core_1.logDebug)(\"eip155 request --params--string>\", JSON.stringify(args));\n            this.configAddressAdaptInjectWallet(args);\n            switch (args.method) {\n                case \"eth_requestAccounts\":\n                    return this.getAccounts();\n                case \"eth_accounts\":\n                    return this.getAccounts();\n                case \"eth_chainId\":\n                    return parseInt(this.getDefaultChain());\n                case \"wallet_switchEthereumChain\": {\n                    return (yield this.handleSwitchChain(args));\n                }\n                case \"wallet_addEthereumChain\":\n                    return this.addEthereumChain(args);\n                default:\n                    break;\n            }\n            if (this.namespace.methods.includes(args.method)) {\n                // personal_sign\n                // eth_signTypedData_v4\n                // eth_sendTransaction\n                // wallet_watchAsset\n                try {\n                    const response = yield this.client.request(args);\n                    (0, core_1.logDebug)(\"eip155 request --response----string>\", JSON.stringify(response));\n                    if (this.isRecord(response)) {\n                        if ('result' in response) {\n                            let result = response.result;\n                            if (result && typeof result === 'string' && (result === \"true\" || result === \"false\")) {\n                                (0, core_1.logDebug)(\"eip155 request --wallet_watchAsset>>>>\", result === \"true\");\n                                return (result === \"true\");\n                            }\n                            return response.result;\n                        }\n                    }\n                    return response;\n                }\n                catch (e) {\n                    (0, core_1.logDebug)(`eip155 request --response --error--string> e instanceof OKXConnectError ${e instanceof core_1.OKXConnectError}`, JSON.stringify(e));\n                    throw e;\n                }\n            }\n            else {\n                (0, core_1.logDebug)('[RPC] request begin');\n                return yield this.getHttpProvider().request(args);\n            }\n        });\n    }\n    addEthereumChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let resultData = (yield this.client.request(args));\n            try {\n                if ('result' in resultData) {\n                    let successData = resultData;\n                    let account = resultData.result;\n                    if (account) {\n                        const nameSpace = account.split(\":\")[0];\n                        const chainId = account.split(\":\")[1];\n                        const chain = nameSpace + ':' + chainId;\n                        let newNameSpace = this.namespace;\n                        this.namespace.accounts.push(account);\n                        this.namespace.chains.push(chain);\n                        if (this.isRecord(args.params)) {\n                            if (\"rpcUrls\" in args.params) {\n                                let rpcUrls = args.params.rpcUrls;\n                                let rpcUrl = rpcUrls ? rpcUrls[0] : undefined;\n                                if (rpcUrl) {\n                                    if (this.namespace.rpcMap) {\n                                        this.namespace.rpcMap[chainId] = rpcUrl;\n                                    }\n                                    else {\n                                        this.namespace.rpcMap = {\n                                            [chainId]: rpcUrl\n                                        };\n                                    }\n                                    this.setHttpProvider(chainId, rpcUrl);\n                                }\n                            }\n                        }\n                        this.events.emit(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, {\n                            eip155: this.namespace\n                        });\n                    }\n                }\n                else {\n                    new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request error`);\n                }\n            }\n            catch (error) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request  error`);\n            }\n            return null;\n        });\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        this.chainId = parseInt(chainId);\n        // set rpc\n        if (!this.httpProviders[chainId]) {\n            const rpc = rpcUrl || (0, utils_1.getRpcUrl)(`${this.name}:${chainId}`, this.namespace);\n            if (!rpc) {\n                // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n                (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            }\n            else {\n                this.setHttpProvider(chainId, rpc);\n            }\n        }\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId.toString();\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // ---------- Private ----------------------------------------------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"eip155 getAccounts \", accounts, this.chainId);\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => {\n                return (0, utils_1.fromAccountToAddress)(account);\n            })),\n        ];\n    }\n    getHexChainIdFromRequest(args) {\n        let params = args.params;\n        let hexChainId = \"0x0\";\n        if (params && \"chainId\" in params) {\n            hexChainId = params.chainId;\n        }\n        hexChainId = hexChainId.startsWith(\"0x\") ? hexChainId : `0x${hexChainId}`;\n        (0, core_1.logDebug)(\"handleSwitchChain -->args \", args);\n        (0, core_1.logDebug)(\"handleSwitchChain -->hexChainId \", hexChainId);\n        const parsedChainId = parseInt(hexChainId, 16);\n        (0, core_1.logDebug)(\"handleSwitchChain -->parsedChainId \", parsedChainId);\n        return { parsedChainId, hexChainId };\n    }\n    handleSwitchChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n            if (this.isChainApproved(parsedChainId)) {\n                this.setDefaultChain(`${parsedChainId}`);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, `the method ${args.method} request  error`);\n            }\n        });\n    }\n    isChainApproved(chainId) {\n        return this.namespace.chains.includes(`${this.name}:${chainId}`);\n    }\n    // rpc\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            //   throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            (0, core_1.logDebug)('get parsed chain and rpc:', parsedChainId, parsedRpc);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        (0, core_1.logDebug)('get http providermap:', http);\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n}\nexports.Eip155Provider = Eip155Provider;\nexports.default = Eip155Provider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcConnection = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\n// Source: https://nodejs.org/api/events.html#emittersetmaxlistenersn\nconst EVENT_EMITTER_MAX_LISTENERS_DEFAULT = 10;\nclass JsonRpcConnection {\n    constructor(url, disableProviderPing = false) {\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n        this.events = new eventemitter3_1.EventEmitter();\n        this.isAvailable = false;\n        this.registering = false;\n        if (!(0, core_2.isHttpUrl)(url)) {\n            throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n        }\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n    }\n    get connected() {\n        return this.isAvailable;\n    }\n    get connecting() {\n        return this.registering;\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            yield this.register(url);\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                throw new Error(\"Connection already closed\");\n            }\n            this.onClose();\n        });\n    }\n    send(payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                yield this.register();\n            }\n            try {\n                const body = (0, core_1.safeJsonStringify)(payload);\n                const res = yield (0, cross_fetch_1.default)(this.url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                const data = yield res.json();\n                this.onPayload({ data });\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    register() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (!(0, core_2.isHttpUrl)(url)) {\n                throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n            }\n            if (this.registering) {\n                return new Promise((resolve, reject) => {\n                    this.events.once(\"register_error\", (error) => {\n                        reject(error);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.isAvailable === \"undefined\") {\n                            return reject(new Error(\"HTTP connection is missing or invalid\"));\n                        }\n                        resolve();\n                    });\n                });\n            }\n            this.url = url;\n            this.registering = true;\n            try {\n                if (!this.disableProviderPing) {\n                    const body = (0, core_1.safeJsonStringify)({ id: 1, jsonrpc: \"2.0\", method: \"test\", params: [] });\n                    yield (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                }\n                this.onOpen();\n            }\n            catch (e) {\n                const error = this.parseError(e);\n                this.events.emit(\"register_error\", error);\n                this.onClose();\n                throw error;\n            }\n        });\n    }\n    onOpen() {\n        this.isAvailable = true;\n        this.registering = false;\n        this.events.emit(\"open\");\n    }\n    onClose() {\n        this.isAvailable = false;\n        this.registering = false;\n        this.events.emit(\"close\");\n    }\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        const payload = typeof e.data === \"string\" ? (0, core_1.safeJsonParse)(e.data) : e.data;\n        this.events.emit(\"payload\", payload);\n    }\n    onError(id, e) {\n        const error = this.parseError(e);\n        const message = error.message || error.toString();\n        const payload = (0, core_2.formatJsonRpcError)(id, message);\n        this.events.emit(\"payload\", payload);\n    }\n    parseError(e, url = this.url) {\n        return (0, core_2.parseConnectionError)(e, url, \"HTTP\");\n    }\n}\nexports.JsonRpcConnection = JsonRpcConnection;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcProvider = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst types_1 = require(\"../../types\");\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nclass JsonRpcProvider extends types_1.IJSONRpcProvider {\n    constructor(connection) {\n        super(connection);\n        this.events = new eventemitter3_1.EventEmitter();\n        this.connected = false;\n        this.connecting = false;\n        this.hasRegisteredEventListeners = false;\n        this.connection = this.setConnection(connection);\n        if (this.connection.connected) {\n            this.registerEventListeners();\n        }\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            yield this.open(connection);\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.close();\n        });\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    request(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.requestStrict((0, core_1.formatJsonRpcRequest)(request.method, request.params || [], (0, core_1.getBigIntRpcId)().toString()), // casting to any is required in order to use BigInt as rpcId\n            context);\n        });\n    }\n    // ---------- Protected ----------------------------------------------- //\n    requestStrict(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.connection.connected) {\n                    try {\n                        yield this.open();\n                    }\n                    catch (e) {\n                        reject(e);\n                    }\n                }\n                this.events.on(`${request.id}`, (response) => {\n                    if ((0, core_1.isJsonRpcError)(response)) {\n                        reject(response.error);\n                    }\n                    else {\n                        resolve(response.result);\n                    }\n                });\n                try {\n                    (0, core_2.logDebug)('[RPC] >>> send request', request, context);\n                    yield this.connection.send(request, context);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }));\n        });\n    }\n    setConnection(connection = this.connection) {\n        return connection;\n    }\n    onPayload(payload) {\n        this.events.emit(\"payload\", payload);\n        if ((0, core_1.isJsonRpcResponse)(payload)) {\n            this.events.emit(`${payload.id}`, payload);\n        }\n        else {\n            this.events.emit(\"message\", {\n                type: payload.method,\n                data: payload.params,\n            });\n        }\n    }\n    onClose(event) {\n        // Code 3000 indicates an abnormal closure signalled by the relay -> emit an error in this case.\n        if (event && event.code === 3000) {\n            this.events.emit(\"error\", new Error(`WebSocket connection closed abnormally with code: ${event.code} ${event.reason ? `(${event.reason})` : \"\"}`));\n        }\n        this.events.emit(\"disconnect\");\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            if (this.connection === connection && this.connection.connected)\n                return;\n            if (this.connection.connected)\n                this.close();\n            if (typeof connection === \"string\") {\n                yield this.connection.open(connection);\n                connection = this.connection;\n            }\n            this.connection = this.setConnection(connection);\n            yield this.connection.open();\n            this.registerEventListeners();\n            this.events.emit(\"connect\");\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.connection.close();\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    registerEventListeners() {\n        if (this.hasRegisteredEventListeners)\n            return;\n        this.connection.on(\"payload\", (payload) => this.onPayload(payload));\n        this.connection.on(\"close\", (event) => this.onClose(event));\n        this.connection.on(\"error\", (error) => this.events.emit(\"error\", error));\n        this.connection.on(\"register_error\", (_error) => this.onClose());\n        this.hasRegisteredEventListeners = true;\n    }\n}\nexports.JsonRpcProvider = JsonRpcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolanaProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SolanaProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"solana\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"solana request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"solana provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    //   {\n    //     \"chains\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\" ],\n    //     \"accounts\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp:F7wnJc5wiBGy1k87jv6gyNwE3jMEWd18oTQiYsF1xVG7\"],\n    //     \"methods\": [\n    //         \"solana_signTransaction\",\n    //         \"solana_signMessage\"\n    //     ],\n    //     \"defaultChain\": \"5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\"\n    // }\n    // TODO:确认上面的defaultChain是否正确（没有solana前缀）\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"solana\"))) {\n                chainId = `solana:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.SolanaProvider = SolanaProvider;\nexports.default = SolanaProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass StarknetProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"starknet\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"starknet request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"starknet provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Wallet doesn't support\" + args.method);\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = StarknetProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuiProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SuiProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeySui;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"sui request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"sui provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"sui\"))) {\n                chainId = `sui:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"sui_signMessage\":\n            case \"sui_signPersonalMessage\":\n            case \"sui_signTransactionBlock\":\n            case \"sui_signAndExecuteTransactionBlock\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.SuiProvider = SuiProvider;\nexports.default = SuiProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TONProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTON;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            (0, core_1.logDebug)(\"TONProvider request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"TONProvider request provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                if (!args.params) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params is nil\");\n                }\n                if (this.isRecord(args.params)) {\n                    const _e = args.params, { validUntil } = _e, newParams = __rest(_e, [\"validUntil\"]);\n                    let fromAddress = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n                    if ('from' in newParams) {\n                        fromAddress = newParams.from || ((_d = (_c = this.namespace.payload) === null || _c === void 0 ? void 0 : _c.ton_addr) === null || _d === void 0 ? void 0 : _d.address);\n                    }\n                    args.params['from'] = fromAddress;\n                    args.params['network'] = this.getDefaultChain();\n                    args.params['valid_until'] = validUntil;\n                    let response = yield this.client.request(args);\n                    if (this.isRecord(response) && 'result' in response) {\n                        const result = {\n                            boc: response.result.toString()\n                        };\n                        (0, core_1.logDebug)(\"TONProvider request provider response: \", JSON.stringify(response));\n                        (0, core_1.logDebug)(\"TONProvider request provider result: \", JSON.stringify(result));\n                        return result;\n                    }\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton_send request response is nil\");\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params type add nil\");\n                }\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        var _a, _b;\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"ton getAccounts accounts :\", accounts);\n        (0, core_1.logDebug)(\"ton getAccounts .namespace :\", JSON.stringify(this.namespace));\n        if (!accounts) {\n            return [];\n        }\n        let address = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n        (0, core_1.logDebug)(\"ton getAccounts address :\", address);\n        if (address) {\n            return [\n                address\n            ];\n        }\n        return [];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"ton_sendTransaction\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.default = TONProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TronProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTron;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"tron request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"tron provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = TronProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./providers\"), exports);\n__exportStar(require(\"./misc\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IJSONRpcProvider = exports.IJSONRpcConnection = void 0;\nclass IJSONRpcConnection {\n}\nexports.IJSONRpcConnection = IJSONRpcConnection;\nclass IJSONRpcProvider {\n    constructor(opt) {\n    }\n}\nexports.IJSONRpcProvider = IJSONRpcProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setGlobal = exports.getGlobal = void 0;\nconst globals = {};\nconst getGlobal = (key) => {\n    return globals[key];\n};\nexports.getGlobal = getGlobal;\nconst setGlobal = (key, value) => {\n    globals[key] = value;\n};\nexports.setGlobal = setGlobal;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./misc\"), exports);\n__exportStar(require(\"./globals\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRpcUrl = getRpcUrl;\nexports.getChainId = getChainId;\nexports.fromAccountToAddress = fromAccountToAddress;\nexports.convertChainIdToNumber = convertChainIdToNumber;\nexports.parseChainId = parseChainId;\nexports.mergeArrays = mergeArrays;\nexports.syncAddressAvailable = syncAddressAvailable;\nexports.syncAddressHostAvailable = syncAddressHostAvailable;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getRpcUrl(chainId, rpc, projectId) {\n    var _a;\n    const chain = parseChainId(chainId);\n    // no default\n    return (((_a = rpc.rpcMap) === null || _a === void 0 ? void 0 : _a[chain.reference]) ||\n        ``);\n}\nfunction getChainId(chain) {\n    return chain.includes(\":\") ? chain.split(\":\")[1] : chain;\n}\nfunction fromAccountToAddress(account) {\n    if (!account) {\n        return \"\";\n    }\n    try {\n        let addressArr = account.split(\":\").slice(2);\n        let address = addressArr.length > 0 ? addressArr.join(\":\") : \"\";\n        (0, core_1.logDebug)(\"fromAccountToAddress address and account:\", address, account);\n        return address;\n    }\n    catch (e) {\n        (0, core_1.logError)(\"fromAccountToAddress error:\", account);\n        return \"\";\n    }\n}\n// export function validateChainApproval(chain: string, chains: string[]): void {\n//   if (!chains.includes(chain)) {\n//     throw new Error(\n//       `Chain '${chain}' not approved. Please use one of the following: ${chains.toString()}`,\n//     );\n//   }\n// }\n// export function getChainsFromApprovedSession(accounts: string[]): string[] {\n//   return accounts.map((address) => `${address.split(\":\")[0]}:${address.split(\":\")[1]}`);\n// }\n// export function getAccountsFromSession(namespace: string, session: SessionTypes.Struct): string[] {\n//   // match namespaces e.g. eip155 with eip155:1\n//   const matchedNamespaceKeys = Object.keys(session.namespaces).filter((key) =>\n//     key.includes(namespace),\n//   );\n//   if (!matchedNamespaceKeys.length) return [];\n//   const accounts: string[] = [];\n//   matchedNamespaceKeys.forEach((key) => {\n//     const accountsForNamespace = session.namespaces[key].accounts;\n//     accounts.push(...accountsForNamespace);\n//   });\n//   return accounts;\n// }\n// export function mergeRequiredOptionalNamespaces(\n//   required: NamespaceConfig = {},\n//   optional: NamespaceConfig = {},\n// ){\n//   const requiredNamespaces = normalizeNamespaces(required);\n//   const optionalNamespaces = normalizeNamespaces(optional);\n//    return merge.merge(requiredNamespaces,optionalNamespaces)\n// }\n/**\n * Converts\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * into\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *\n */\n// export function normalizeNamespaces(namespaces: NamespaceConfig): NamespaceConfig {\n//   const normalizedNamespaces: NamespaceConfig = {};\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const rpcMap = values.rpcMap || {};\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       ...values,\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       rpcMap: { ...rpcMap, ...normalizedNamespaces[normalizedKey]?.rpcMap },\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n//\n// export function parseCaip10Account(caip10Account: string): string {\n//   return caip10Account.includes(\":\") ? caip10Account.split(\":\")[2] : caip10Account;\n// }\n/**\n * Populates the chains array for each namespace with the chains extracted from the accounts if are otherwise missing\n */\n// export function populateNamespacesChains(\n//   namespaces: SessionTypes.Namespaces,\n// ): Record<string, SessionTypes.Namespace> {\n//   const parsedNamespaces: Record<string, SessionTypes.Namespace> = {};\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const accounts = values.accounts || [];\n//     // If the key includes a CAIP separator `:` we know it's a namespace + chainId (e.g. `eip155:1`)\n//     const chains = isCaipNamespace(key)\n//       ? [key]\n//       : values.chains\n//       ? values.chains\n//       : getChainsFromApprovedSession(values.accounts);\n//     parsedNamespaces[key] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   }\n//   return parsedNamespaces;\n// }\nfunction convertChainIdToNumber(chainId) {\n    if (typeof chainId === \"number\")\n        return chainId;\n    if (chainId.includes(\"0x\")) {\n        return parseInt(chainId, 16);\n    }\n    chainId = chainId.includes(\":\") ? chainId.split(\":\")[1] : chainId;\n    return isNaN(Number(chainId)) ? chainId : Number(chainId);\n}\nconst CAIP_DELIMITER = \":\";\nfunction parseChainId(chain) {\n    const [namespace, reference] = chain.split(CAIP_DELIMITER);\n    return { namespace, reference };\n}\nfunction mergeArrays(a = [], b = []) {\n    return [...new Set([...a, ...b])];\n}\nfunction syncAddressAvailable(wallet) {\n    if (!wallet) {\n        return false;\n    }\n    if (wallet.appName !== 'OKX Wallet') {\n        return false;\n    }\n    if ((0, core_1.versionCompare)('6.97.0', wallet.appVersion) > 0) {\n        return false;\n    }\n    return syncAddressHostAvailable();\n}\nfunction syncAddressHostAvailable() {\n    try {\n        return !!(window.okxGlobal);\n    }\n    catch (e) {\n        return false;\n    }\n}\n","<template>\n  <div id=\"app\">\n    <el-container>\n      <el-header>OKX Connect</el-header>\n      <el-main>\n        <el-card class=\"wallet-info\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Wallet Info</div>\n          </template>\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Wallet Address:</strong> {{ getWalletAddress }}\n            </el-col>\n          </el-row>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Status :</strong> {{ currentStatus }}\n            </el-col>\n          </el-row>\n\n        </el-card>\n\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Connect Params</div>\n          </template>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"withUI\" @change=\"handleWithUI\">\n                Show UI\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"universalToTG\" @change=\"handleUniversalToTG\">\n                Use mini wallet\n              </el-checkbox>\n            </el-col>\n          </el-row>\n\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Modals</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"modals\" placeholder=\"Modals\" @change=\"handleModalsSelect\" multiple>\n                <el-option label=\"Before\" value=\"before\"/>\n                <el-option label=\"Success\" value=\"success\"/>\n                <el-option label=\"Error\" value=\"error\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center; justify-content: space-between;\">\n            <el-col :span=\"6\" style=\"gap: 2px\">\n              <p style=\"font-size: 11pt; margin: 0px\">Return Strategy</p>\n              <p style=\"font-size: 9pt; margin: 0px\">(Mobile only)</p>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-select\n                  v-model=\"returnStrategy\"\n                  @change=\"handleReturnStrategySelect\"\n                  placeholder=\"Return Strategy\"\n              >\n                <el-option\n                    v-for=\"strategy in returnStrategies\"\n                    :key=\"`return-strategy-select-option-${strategy}`\"\n                    :label=\"strategy\"\n                    :value=\"strategy\"\n                />\n              </el-select>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-input\n                  v-if=\"returnStrategy === 'deeplink'\"\n                  v-model=\"deeplink\"\n                  @change=\"handleReturnStrategyDeeplink\"\n                  placeholder=\"Deeplink\"\n                  :disabled=\"returnStrategy !== 'deeplink'\"\n                  style=\"margin: 0px\"\n              />\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Lang</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"language\" @change=\"handleLanguageSelect\" placeholder=\"Language\">\n                <el-option v-for=\"locale in locales\" :key=\"`language-select-option-${locale}`\" :label=\"locale\"\n                           :value=\"locale\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Theme</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"theme\" @change=\"handleThemeSelect\" placeholder=\"Theme\">\n                <el-option label=\"LIGHT\" :value=\"THEME.LIGHT\"/>\n                <el-option label=\"DARK\" :value=\"THEME.DARK\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <!--          <el-row>-->\n          <!--          <el-row style=\"align-items: center\">-->\n          <!--            <el-col :span=\"4\">-->\n          <!--              <p style=\"font-size: 11pt\">Connect</p>-->\n          <!--              <p style=\"font-size: 11pt\">Methods</p>-->\n          <!--            </el-col>-->\n          <!--            <el-col :span=\"20\">-->\n          <!--              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" placeholder=\"Methods\">-->\n          <!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n          <!--                           :value=\"methods\" />-->\n\n          <!--              </el-select>-->\n          <!--            </el-col>-->\n          <!--          </el-row>-->\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Connect</p>\n              <p style=\"font-size: 11pt\">Methods</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" multiple placeholder=\"methods\">\n                <el-option\n                    v-for=\"item in connectMethods\"\n                    :key=\"item\"\n                    :label=\"item\"\n                    :value=\"item\">\n                </el-option>\n              </el-select>\n\n\n              <!--              <el-select v-model=\"selectedMethod\" placeholder=\"Methods\" @change=\"handleConnectMethodsSelect\" multiple>-->\n              <!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n              <!--                           :value=\"methods\" />-->\n              <!--              </el-select>-->\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">ton_proof</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-input v-model=\"tonProofValue\" placeholder=\"input ton_proof\"></el-input>\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" align=\"middle\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Required Chains</div>\n            </el-col>\n            <el-col\n                :span=\"6\"\n                v-for=\"item in Object.keys(availableChains)\"\n                :key=\"item\"\n            >\n              <el-checkbox\n                  v-model=\"availableChains[item].checked\"\n                  :disabled=\"!areChainsInit\"\n              >{{ availableChains[item].name }}\n              </el-checkbox\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" align=\"middle\" style=\"margin-top: 20px\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Optional Chains</div>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:43114')\" @change=\"() => handleOptionChange('eip155:43114')\">\n                AVAX\n              </el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:10')\" @change=\"() => handleOptionChange('eip155:10')\">OP</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:8453')\" @change=\"() => handleOptionChange('eip155:8453')\">\n                BASE\n              </el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:99781165')\"\n                           @change=\"() => handleOptionChange('eip155:99781165')\">Nonexist\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp')\"\n                           @change=\"() => handleOptionChange('solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp')\">Solana\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('ton:-239')\" @change=\"() => handleOptionChange('ton:-239')\">Ton\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('btc:mainnet')\"\n                           @change=\"() => handleOptionChange('btc:mainnet')\">btc\n              </el-checkbox>\n            </el-col>\n\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"initBtnClicked\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectInitStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"connectBtnClicked\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectStatusStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"syncAllAddressClick\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ syncAllAddressStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"danger\"\n                  @click=\"disconnectAction\"\n                  icon=\"el-icon-switch-button\"\n                  :disabled=\"!areChainsInit || walletAddress.length == 0\"\n              >{{ disconnectStatusStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <teleport to=\"body\">\n            <div v-if=\"showModal\" class=\"modal-overlay\" @click=\"closeModal\">\n              <div class=\"modal-content\" @click.stop>\n                <button class=\"close-button\" @click=\"closeModal\">\n                  &times;\n                </button>\n                <h2>Scan to connect</h2>\n                <qrcode-vue :value=\"qrValue\" :size=\"350\" level=\"L\"/>\n              </div>\n            </div>\n          </teleport>\n        </el-card>\n\n        <!-- 发送交易 -->\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Transactions</div>\n          </template>\n\n          <el-tabs v-model=\"activeTab\" type=\"border-card\" @tab-click=\"clickActiveTab\">\n            <!-- ETH -->\n            <el-tab-pane label=\"ETH\" name=\"eip155:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to Fuse)\n                  </el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send ETH)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve TONCoin)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(eth mint\n                    nft)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add SPX6900)\n                  </el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"oversized_personal_sign()\">oversized_personal_sign(about 70k, split limit 63k)\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TON\" name=\"ton:-239\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_getAccount\">ton_getAccount</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_sendTransaction\">ton_sendTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- solana -->\n            <el-tab-pane label=\"Sol\" name=\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- Sui-->\n            <el-tab-pane label=\"Sui\" name=\"sui:mainnet\">\n              <SuiPanel @generateTransactionParams=\"sui_generateTransactionParams\"/>\n            </el-tab-pane>\n            <!-- BTC -->\n            <el-tab-pane label=\"BTC\" name=\"btc:mainnet\">\n              <BTCPanel @generateTransactionParams=\"btc_generateTransactionParams\"/>\n            </el-tab-pane>\n\n            <!-- Fractal BTC -->\n            <el-tab-pane label=\"Fractal\" name=\"fractal:mainnet\">\n              <FractalPanel @generateTransactionParams=\"fractal_generateTransactionParams\"/>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Tron\" name=\"tron:mainnet\">\n              <TronTransactionPanel\n                  @generateTransactionParams=\"tron_generateTransactionParams\"\n                  @generateTransactionResult=\"tron_getTransactionResult\"/>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Aptos\" name=\"aptos:mainnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signTransaction\">aptos_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"aptos_signAndSubmitTransaction\">aptos_signAndSubmitTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Cosmos\" name=\"cosmos:cosmoshub-4\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <!-- Polygon-->\n            <el-tab-pane label=\"Polygon\" name=\"eip155:137\">\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"Polygon_RPCRequest()\">Polygon_RPCRequest(Polygon)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send POL)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve sushi)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(polygon mint\n                    nft)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add LGNS)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\"\n                  >eth_sendTransaction(转账FUSE)\n                  </el-button\n                  >\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\"\n                  >eth_sendTransaction(授权USDC)\n                  </el-button\n                  >\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- BSC-->\n            <el-tab-pane label=\"BNB\" name=\"eip155:56\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to BNB)\n                  </el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send BNB)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve POSI)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add FET)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Fuse\" name=\"eip155:122\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_swap\">eth_sendTransaction(Swap)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Sonic testnet\" name=\"svm:70000062\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Movement:testnet\" name=\"movement:testnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"move_signTransaction\">move_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"move_signAndSubmitTransaction\">move_signAndSubmitTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Movement:mainnet\" name=\"movement:mainnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">move_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"move_signTransaction\">move_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"move_signAndSubmitTransaction\">move_signAndSubmitTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n\n            <el-tab-pane label=\"osmos\" name=\"cosmos:osmosis-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"SEI\" name=\"cosmos:pacific-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Starknet\" name=\"starknet:mainnet\">\n              <StarknetPanel ref=\"starknetPanelRef\" @generateTransactionParams=\"starknet_generateTransactionParams\"\n                             @generateTransactionResult=\"starknet_getTransactionResult\"/>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TEST \" name=\"test:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"testBase64UrlSafe\">testBase64UrlSafe</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n          </el-tabs>\n\n          <el-col :xs=\"24\" :sm=\"24\" style=\"margin: 16px 0px;\">\n            <el-row style=\"align-items: center; justify-content: space-between; margin-bottom: 8px;\">\n              <el-col :span=\"4\">\n                <p style=\"font-size: 11pt; margin: 0px; text-align: start\">Redirect param (only for ETH, Polygon, BNB,\n                  Fuse)</p>\n              </el-col>\n              <el-col :span=\"9\">\n                <el-select\n                    v-model=\"redirect\"\n                    @change=\"handleRedirectSelect\"\n                    placeholder=\"Return Strategy\"\n                    :disabled=\"!canChainAddRedirectParam()\"\n                >\n                  <el-option\n                      v-for=\"strategy in returnStrategies\"\n                      :key=\"`return-strategy-select-option-${strategy}`\"\n                      :label=\"strategy\"\n                      :value=\"strategy\"\n                  />\n                </el-select>\n              </el-col>\n              <el-col :span=\"10\">\n                <el-input\n                    v-if=\"redirect === 'deeplink'\"\n                    v-model=\"redirectDeeplink\"\n                    @change=\"handleRedirectDeeplink\"\n                    placeholder=\"Deeplink\"\n                    :disabled=\"!canChainAddRedirectParam() || redirect !== 'deeplink'\"\n                    style=\"margin: 0px\"\n                />\n              </el-col>\n            </el-row>\n            <el-button\n                type=\"primary\" @click=\"addRedirectParam()\"\n                :disabled=\"!canChainAddRedirectParam() || !testTransaction\"\n            >\n              Add redirect param to data\n            </el-button>\n          </el-col>\n\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Data:</div>\n            <el-input v-model=\"testTransaction\" type=\"textarea\" :rows=\"5\" placeholder=\"sendTransactions\"></el-input>\n          </el-col>\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Result :</div>\n            <el-input v-model=\"testboc\" type=\"textarea\" :rows=\"5\" placeholder=\"boc\"></el-input>\n          </el-col>\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button type=\"primary\" :disabled=\"sendBtnDisabled\" @click=\"sendTransaction()\">{{\n                  testTransactionStr\n                }}\n              </el-button>\n            </el-col>\n          </el-row>\n        </el-card>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<style scoped>\n/* 重置全局边距和内边距 */\nbody,\nhtml {\n  margin: 0;\n  padding: 0;\n  height: 100%;\n}\n\n/* 确保 app 容器占满整个视口 */\n#app {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin: 0 auto;\n  /* 居中 */\n  max-width: 600px;\n  /* 设置最大宽度 */\n  padding: 0 20px;\n  /* 添加一些左右内边距 */\n}\n\n/* 调整 el-container 样式 */\n.el-container {\n  min-height: 100vh;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n}\n\n/* 调整 el-header 样式 */\n.el-header {\n  background-color: #333333;\n  color: white;\n  height: 50px;\n  line-height: 50px;\n  font-size: 18px;\n  font-weight: bold;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n}\n\n/* 调整 el-main 样式 */\n.el-main {\n  padding: 70px 0 20px;\n  /* 增加顶部内边距以避免被固定header遮挡 */\n  flex-grow: 1;\n}\n\n.el-card {\n  margin-bottom: 20px;\n}\n\n.info-row {\n  margin-bottom: 10px;\n}\n\n.input-label {\n  margin-bottom: 5px;\n  text-align: left;\n}\n\n.el-input {\n  margin-bottom: 10px;\n}\n\n/* 通用按钮样式 */\n.wallet-actions .el-button,\n.transaction .el-button,\n.clear-cache .el-button {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 40px;\n}\n\n.wallet-actions .el-button span,\n.transaction .el-button span,\n.clear-cache .el-button span {\n  margin: 0 auto;\n}\n\n/* 按钮行间距 */\n.wallet-actions .button-row,\n.transaction .button-row {\n  margin-bottom: 8px;\n}\n\n.wallet-actions .button-row:last-child,\n.transaction .button-row:last-child {\n  margin-bottom: 0;\n}\n\n/* 调整图标和文字的对齐 */\n.wallet-actions .el-button [class^=\"el-icon-\"],\n.transaction .el-button [class^=\"el-icon-\"],\n.clear-cache .el-button [class^=\"el-icon-\"] {\n  margin-right: 5px;\n  vertical-align: middle;\n}\n\n/* 新增：调整发送交易按钮与输入框的间距 */\n.transaction .el-row:not(:last-child) {\n  margin-bottom: 10px;\n}\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  text-align: center;\n  position: relative;\n  max-width: 90%;\n  width: 400px;\n}\n\n.close-button {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  font-size: 24px;\n  border: none;\n  background: none;\n  cursor: pointer;\n}\n\n/* 响应式调整 */\n@media (max-width: 600px) {\n  #app {\n    padding: 0 10px;\n  }\n\n  .el-main {\n    padding: 60px 0 10px;\n  }\n}\n</style>\n<script>\nimport {OKX_CONNECT_ERROR_CODES, safeJsonStringify, getAppWalletDeepLink, getUniversalLink} from \"@okxconnect/core\"\nimport {\n  OKXBtcProvider,\n  OKXUniversalProvider,\n  OKXCosmosProvider,\n  OKXTonProvider,\n  OKXTronProvider,\n  OKXStarknetProvider\n} from \"@okxconnect/universal-provider\"\nimport {OKXSolanaProvider} from \"@okxconnect/solana-provider\";\nimport {\n  Connection,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n  TransactionMessage,\n  VersionedTransaction\n} from '@solana/web3.js';\nimport {OKXSuiProvider as SuiAdapter} from \"@okxconnect/sui-provider\"\nimport QrcodeVue from 'qrcode.vue'\n\nimport {OKXAptosProvider} from \"@okxconnect/aptos-provider\";\nimport {Aptos, AptosConfig, Network} from \"@aptos-labs/ts-sdk\";\n\nimport BTCPanel from \"./components/BtcTransactionPanel.vue\";\nimport FractalPanel from \"./components/FractalTransactionPanel.vue\"\nimport SuiPanel from \"./components/SuiTransactionPanel.vue\";\nimport StarknetPanel from \"./components/StarknetTransactionPanel.vue\";\n\nimport {OKXUniversalConnectUI, THEME} from \"@okxconnect/ui\";\nimport {ethers} from 'ethers';\nimport VConsole from 'vconsole';\nimport nacl from \"tweetnacl\";\n\nconst {verifyADR36Amino} = require('@keplr-wallet/cosmos')\nconst {fromBech32} = require('@cosmjs/encoding')\nimport {verifyPersonalMessageSignature} from '@mysten/sui/verify';\nimport {useShortLink} from \"@okxconnect/core\";\nimport TronTransactionPanel from \"@/components/TronTransactionPanel.vue\";\nimport {TronWeb} from \"tronweb\";\nimport {RpcProvider as StarknetRpcProvider, Account as StarknetAccount} from \"starknet\";\nimport {ref, toRaw} from \"vue\";\n\nnew VConsole();\n\nconst allChains = {\n  1: {name: \"Eth\", checked: false},\n  56: {name: \"BNB\", checked: false},\n  137: {name: \"Polygon\", checked: false},\n  122: {name: \"Fuse\", checked: false},\n  \"ton:-239\": {name: \"TON\", checked: false},\n  \"btc:mainnet\": {name: \"BTC\", checked: false},\n  \"sui:mainnet\": {name: \"Sui\", checked: false},\n  \"aptos:mainnet\": {name: \"Aptos\", checked: false},\n  \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\": {\n    name: \"Solana\",\n    checked: false,\n  },\n  \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\": {\n    name: \"Sol testnet\",\n    checked: false,\n  },\n  \"svm:70000062\": {\n    name: \"Sonic testnet\",\n    checked: false,\n  },\n  \"movement:testnet\": {name: \"Movement:testnet\", checked: false},\n  \"movement:mainnet\": {name: \"Movement:mainnet\", checked: false},\n  \"fractal:mainnet\": {name: \"Fractal\", checked: false},\n  \"cosmos:osmosis-1\": {name: \"Osmos\", checked: false},\n  \"cosmos:cosmoshub-4\": {name: \"Cosmos\", checked: false},\n  \"cosmos:pacific-1\": {name: \"SEI\", checked: false},\n  \"cosmos:abvdefg\": {name: \"cosmos:abvdefg\", checked: false},\n  \"tron:mainnet\": {name: \"tron\", checked: false},\n  997865: {name: \"Non Exist chain\", checked: false},\n  2020: {name: \"Ronin\", checked: false},\n  1666600000: {name: \"Harmony\", checked: false},\n  \"starknet:mainnet\": {name: \"starknet\", checked: false}\n};\n\nconst chainsThatCanAddRedirectParam = [\n  \"eip\"\n]\n\nvar optionChains = new Set([]);\nvar selectedModals = [\"before\", \"success\", \"error\"];\nvar selectedReturnStrategy = \"none\";\nvar selectedDeepLink = \"tg://resolve\";\nvar selectedLanguage = \"en_US\";\nvar selectedTheme = THEME.LIGHT;\n\n// import QrcodeVue from 'qrcode.vue'\nexport default {\n  name: \"App\",\n  components: {\n    TronTransactionPanel,\n    QrcodeVue,\n    BTCPanel,\n    FractalPanel,\n    SuiPanel,\n    StarknetPanel\n  },\n\n  setup() {\n    const sendBtnDisabled = ref(false)\n\n    return {\n      sendBtnDisabled\n    }\n  },\n  data: () => {\n    return {\n      activeTab: \"eip155:1\",\n      testTopic: \"\",\n      testPublicKey: \"\",\n      testProofPayload: \"\",\n      tonProofValue: \"\",\n      pendingDeepLink: \"-\",\n      logList: [],\n      connectReady: false,\n      connectStatusStr: \"Connect\",\n      syncAllAddressStr: \"syncAllAddress\",\n      connectInitStr: \"init test\",\n      disconnectStatusStr: \"Disconnect\",\n      localPubKey: \"\",\n      localSecKey: \"\",\n      testTransaction: \"\",\n      selectedChain: \"eip155:1\",\n      testTransactionStr: \"Send\",\n      walletAddress: \"\",\n      testboc: \"\",\n      ProofPayloadVerify: \"\",\n      showModal: false,\n      showVerifyRow: false,\n      qrValue: \"https://www.okx.com/download\",\n      currentStatus: \"\",\n      areChainsInit: false,\n      availableChains: allChains,\n      isOptionalChecked: (chainId) => {\n        return optionChains.has(chainId);\n      },\n      withUI: localStorage.getItem(\"autoRefresh\") != \"false\",\n      universalToTG: localStorage.getItem(\"universalToTG\") != \"false\",\n      modals: selectedModals,\n      returnStrategies: [\"none\", \"back\", \"deeplink\"],\n      returnStrategy: selectedReturnStrategy,\n      deeplink: selectedDeepLink,\n      locales: [\n        \"en_US\",\n        \"ru_RU\",\n        \"zh_CN\",\n        \"zh\",\n        \"ar_AE\",\n        \"cs_CZ\",\n        \"de_DE\",\n        \"es_ES\",\n        \"es_LAT\",\n        \"fr_FR\",\n        \"id_ID\",\n        \"it_IT\",\n        \"nl_NL\",\n        \"pl_PL\",\n        \"pt_BR\",\n        \"pt_PT\",\n        \"ro_RO\",\n        \"tr_TR\",\n        \"uk_UA\",\n        \"vi_VN\",\n        \"zh_TW\"\n      ],\n      selectedMethod: [],\n      selectedMethodData: [],\n      connectMethods: [\n        \"wallet_addEthereumChain(ETH)\",\n        \"personal_sign(ETH)\",\n        \"solana_signMessage(Sol mainnet)\",\n        \"sui_signMessage(Sui mainnet)\",\n        \"sui_signPersonalMessage(Sui mainnet)\",\n        \"btc_signMessage(BTC)\",\n        \"aptos_signMessage(aptos mainnet)\",\n        \"cosmos_signArbitrary(cosmoshub)\",\n        \"test_noSupport_eth(ETH)\",\n        \"tron_signMessage\",\n        \"tron_signMessageV2\",\n        \"starknet_signMessage\",\n        \"sync_all_addresses\"\n      ],\n\n      language: selectedLanguage,\n      theme: selectedTheme,\n      THEME: THEME,\n      redirect: selectedReturnStrategy,\n      redirectDeeplink: selectedDeepLink,\n      handleWithUI: (isChecked) => {\n        localStorage.setItem(\"autoRefresh\", `${isChecked}`);\n        location.reload();\n      },\n      handleUniversalToTG: (isChecked) => {\n        localStorage.setItem(\"universalToTG\", `${isChecked}`);\n      },\n      handleOptionChange: (chainId) => {\n        console.log(\"handleOptionChange ->chainId:\",chainId)\n        if (optionChains.has(chainId)) {\n          optionChains.delete(chainId);\n        } else {\n          optionChains.add(chainId);\n        }\n      },\n      starknetPanelTypedData: ''\n    };\n  },\n  computed: {\n    getWalletAddress: function () {\n      return this.walletAddress;\n    },\n  },\n  methods: {\n    isChecked(chainId) {\n      return this.selectedChains.has(chainId);\n    },\n\n    initChains(newChains) {\n      if (newChains.length > 0) {\n        const updatedChains = Object.assign({}, this.availableChains);\n        for (const chainId of newChains) {\n          if (updatedChains[chainId]) {\n            updatedChains[chainId].checked = !updatedChains[chainId].checked;\n          }\n        }\n        this.availableChains = updatedChains;\n      }\n\n      this.areChainsInit = true;\n    },\n\n    async clickActiveTab(tab) {\n      const tabName = tab.props ? tab.props.name : tab.name;\n      this.selectedChain = tabName;\n      console.log(`已切换到链 :`, tabName);\n\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (tabName == \"starknet:mainnet\") {\n        this.sendBtnDisabled = true\n      } else {\n        this.sendBtnDisabled = false\n      }\n\n      window.provider.setDefaultChain(this.selectedChain);\n    },\n\n    async initBtnClicked() {\n      console.log(\"initBtnClickedddinitBtnClickedddinitBtnClickedddinitBtnClickedddinitBtnClickeddd\")\n      window.okxLogDebug = true\n      var initCall;\n      if (!this.withUI) {\n        initCall = OKXUniversalProvider.init({\n          dappMetaData: {\n            name: \"univer test dapp\",\n            icon: \"https://avatars.githubusercontent.com/u/37784886\",\n          },\n        });\n      } else {\n        initCall = OKXUniversalConnectUI.init({\n          dappMetaData: {\n            icon: \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\",\n            name: \"OKX WalletConnect UI Demo\",\n            manifestUrl:\"https://app.ston.fi/tonconnect-manifest.json\"\n          },\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: 'all',\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme\n          },\n        });\n      }\n\n      initCall.then((provider) => {\n        window.provider = provider;\n        window.tonProvider = new OKXTonProvider(window.provider);\n        window.tonProvider.onStatusChange((walletInfo) => {\n              console.log('TONConnection onStatusChange:', JSON.stringify(walletInfo));\n            }, (err) => {\n              console.log('TONConnection onStatusChange error:', err);\n            }\n        )\n\n        if (window.provider instanceof OKXUniversalConnectUI) {\n          window.provider.onModalStateChange((state) => {\n            console.log(`onModalStateChange   ${JSON.stringify(state)}`)\n          })\n        }\n\n        console.log(\"init finished:\", provider);\n        console.log(\"init finished session:\", JSON.stringify(provider.session));\n\n        if (provider.session?.namespaces) {\n          const newChains = [];\n          console.log(\"namespaces\", provider.session.namespaces);\n          Object.entries(provider.session.namespaces).forEach(([key, value]) => {\n            if (key === \"eip155\") {\n              value.chains.forEach((chain) => {\n                newChains.push(parseInt(chain.substring(7)));\n              });\n            } else {\n              value.chains.forEach((chain) => {\n                newChains.push(chain);\n              });\n            }\n          });\n\n          console.log(\"existing chains:\", newChains);\n          this.initChains(newChains);\n        } else {\n          this.initChains([]);\n        }\n\n        provider.on(\"display_uri\", (uri) => {\n          if (!useShortLink()) {\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>display_uri  ==> \", uri);\n        });\n\n        provider.on(\"connect_signResponse\", (items) => {\n          console.log(\"通知>>>connect_signResponse  ==> \", JSON.stringify(items));\n          this.verifyMessage(items)\n        })\n\n        provider.on(\"short_display_uri\", (uri) => {\n          if (useShortLink()) {\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>short_display_uri  ==> \", uri);\n        });\n\n\n        provider.on(\"session_connecting\", () => {\n          console.log(\"通知>>>session_connecting  ==> \");\n        });\n\n        provider.on(\"connect\", (session) => {\n          console.log(\"通知>>>get connect session\", session);\n        });\n        provider.on(\"reconnect\", (session) => {\n          console.log(\"通知>>>get reconnect session\", session);\n          this.walletAddress = \"connected\";\n        });\n        provider.on(\"disconnect\", ({topic}) => {\n          console.log(`通知>>>get disconnect  ${topic}`);\n          this.walletAddress = \"disconnecteddddd\";\n        });\n        provider.on(\"session_delete\", ({topic}) => {\n          console.log(`通知>>>get session_delete  ${topic}`);\n        });\n        provider.on(\"session_update\", (session) => {\n          console.log(`通知>>>get session_update `, JSON.stringify(session));\n        });\n\n        provider.on(\"accountChanged\", (session) => {\n          if (session){\n            this.testboc = JSON.stringify(session);\n          }\n          console.log(`通知>>>get accountChanged `, JSON.stringify(session));\n        });\n\n      });\n    },\n\n    async connectBtnClicked() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        this.testTonSdk();\n      } else {\n        console.log(`connectBtnClicked provider not finish init`);\n      }\n    },\n\n    async syncAllAddressClick() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        if (window.provider instanceof OKXUniversalProvider) {\n          if (window.provider.connected()) {\n            try {\n              let message = await window.provider.syncAllAddresses()\n              if (typeof message == \"string\") {\n                this.testboc = message\n              } else {\n                this.testboc = JSON.stringify(message)\n              }\n            } catch (e) {\n              this.testboc = JSON.stringify(e)\n            }\n          } else {\n            this.testboc = \"not connected\"\n          }\n        }\n\n      } else {\n        console.log(`syncAllAddress provider not finish init`);\n      }\n    },\n\n    async disconnectAction() {\n      try {\n        console.log(\"get disconnect wallet btn clicked\");\n        // await TON.disconnect();\n        var provider = window.provider;\n        await provider.disconnect();\n        this.walletAddress = \"disconnected\";\n      } catch (error) {\n        console.log(\"Disconnect  error ==>> \", error.message);\n        this.currentStatus = error.message;\n      }\n    },\n\n    async eth_requestAccounts() {\n      var data = {method: \"eth_requestAccounts\"};\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_chainId() {\n      var data = {method: \"eth_chainId\"};\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_switchEthereumChain() {\n      var data = {\n        method: \"wallet_switchEthereumChain\",\n        params: [\n          {\n            chainId: \"0x7a\"\n          }\n        ]\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_addEthereumChain() {\n      var data = {\n        method: \"wallet_addEthereumChain\",\n        params: {\n          blockExplorerUrls: [\"https://explorer.fuse.io\"],\n          chainId: \"0x7a\",\n          chainName: \"Fuse\",\n          nativeCurrency: {name: \"Fuse\", symbol: \"FUSE\", decimals: 18},\n          rpcUrls: [\"https://rpc.fuse.io\"],\n        },\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    fromAccountToAddress(account) {\n      if (!account) {\n        return \"\"\n      }\n      try {\n        let addressArr = account.split(\":\").slice(2);\n        let address = addressArr.length > 0 ? addressArr.join(\":\") : \"\";\n        return address;\n      } catch (e) {\n        return \"\"\n      }\n\n    },\n\n    requestEVMAccountWithSession(chainId) {\n      console.log(\"requestAccountWithSession >>>\", chainId);\n      if (window.provider && window.provider.session && chainId) {\n        let key = chainId.includes(\":\") ? chainId.split(\":\")[0] : chainId;\n        let namespace = window.provider.session.namespaces\n        if (key === \"eip155\") {\n          let evmNameSpace = namespace[key];\n          if (evmNameSpace && evmNameSpace.accounts) {\n            let accounts = evmNameSpace.accounts;\n            return [\n              ...new Set(\n                  accounts\n                      // get the accounts from the active chain\n                      .filter((account) => account.includes(chainId+\":\"))\n                      // remove namespace & chainId from the string\n                      .map((account) => {\n                        return this.fromAccountToAddress(account);\n                      })\n              ),\n            ];\n\n          }\n\n        }\n      }\n      return undefined\n    },\n\n    async personal_sign() {\n      if (this.selectedChain === \"eip155:1\") {\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0x1ca023f10e157d148deed210f8bee193657a1eaa7f187909e20a9dc3b071dbc364c41fde37960c05093359f410a061ec8a7dca8c0c39fc7c1e24de8a3329775d1b\n\n        var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n        var address = accounts[0];\n        console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n        var dataETH = {\n          method: \"personal_sign\",\n          params: [\n            \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n            address,\n          ],\n        };\n\n        this.testTransaction = JSON.stringify(dataETH);\n      } else if (\n          this.selectedChain === \"eip155:137\" ||\n          this.selectedChain === \"eip155:122\"\n      ) {\n        // method\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0xebda9cfa2af43999058dffa0107031d1ef7fc0252dca85dcbd22ea097af922ca39b64d509ef61ce42b7641c5840b8a80337ffd1411b13e87e2260a3f1b6c151c1b\n\n        var dataPolygon = {\n          method: \"personal_sign\",\n          params: {\n            message:\n                \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n        this.testTransaction = JSON.stringify(dataPolygon);\n      } else if (this.selectedChain === \"eip155:56\") {\n        var data = {\n          method: \"personal_sign\",\n          params: {\n            message:\n                \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n\n        this.testTransaction = JSON.stringify(data);\n      }\n    },\n\n    async eth_sendTransaction_swap() {\n      var data = {\n        method: \"eth_sendTransaction\",\n        chainId: \"eip155:122\",\n        params: {\n          value: \"0x38d7ea4c68000\",\n          gas: \"0x2665f\",\n          to: \"0xf2614A233c7C3e7f08b1F887Ba133a13f1eb2c55\",\n          from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n          data: \"0x2646478b000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00000000000000000000000000000000000000000000000000038d7ea4c68000000000000000000000000000620fd5fa44be6af63715ef4e65ddfa0387ad13f5000000000000000000000000000000000000000000000000000000000000001b000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000700301ffff0201602352A9Eb5234466Eac23E59e7B99bCaE79C39c0BE9e53fd7EDaC9F859882AfdDa116645287C629040BE9e53fd7EDaC9F859882AfdDa116645287C62900602352A9Eb5234466Eac23E59e7B99bCaE79C39c01f2F3e73be57031114dd1f4E75c1DD87658be7F0E000bb800000000000000000000000000000000\",\n        },\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async oversized_personal_sign() {\n      const payload = ``\n      if (this.selectedChain === \"eip155:1\") {\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0x1ca023f10e157d148deed210f8bee193657a1eaa7f187909e20a9dc3b071dbc364c41fde37960c05093359f410a061ec8a7dca8c0c39fc7c1e24de8a3329775d1b\n\n        var accounts = await window.provider.request(\n          { method: \"eth_requestAccounts\" },\n          \"eip155:1\"\n        );\n        var address = accounts[0];\n        console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n        var dataETH = {\n          method: \"personal_sign\",\n          params: [\n            payload,\n            address,\n          ],\n        };\n\n        this.testTransaction = JSON.stringify(dataETH);\n      } else if (\n        this.selectedChain === \"eip155:137\" ||\n        this.selectedChain === \"eip155:122\"\n      ) {\n        // method\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0xebda9cfa2af43999058dffa0107031d1ef7fc0252dca85dcbd22ea097af922ca39b64d509ef61ce42b7641c5840b8a80337ffd1411b13e87e2260a3f1b6c151c1b\n\n        var dataPolygon = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              payload,\n          },\n        };\n        this.testTransaction = JSON.stringify(dataPolygon);\n      } else if (this.selectedChain === \"eip155:56\") {\n        var data = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              payload,\n          },\n        };\n\n        this.testTransaction = JSON.stringify(data);\n      }\n    },\n\n    async eth_signTypedData_v4() {\n      // method\n      // eth_signTypedData\n      // address\n      // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n      // valid\n      // true\n      // result\n      // 0xa8bb3c6b33a119d2d567c7632195c21988df778006082742125a591f5c633f716107883a37f7de6531a6312a5f69022135bf46fe5ab77905b62c82b3395f985e1b\n      //\n\n      // var data = {\n      //   \"method\": \"eth_signTypedData_v4\",\n      //   \"params\": {\n      //     \"typedDataJson\":\"{\\\"types\\\":{\\\"EIP712Domain\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"version\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"chainId\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"name\\\":\\\"verifyingContract\\\",\\\"type\\\":\\\"address\\\"}],\\\"Person\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"wallet\\\",\\\"type\\\":\\\"address\\\"}],\\\"Mail\\\":[{\\\"name\\\":\\\"from\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"to\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"contents\\\",\\\"type\\\":\\\"string\\\"}]},\\\"primaryType\\\":\\\"Mail\\\",\\\"domain\\\":{\\\"name\\\":\\\"Ether Mail\\\",\\\"version\\\":\\\"1\\\",\\\"chainId\\\":1,\\\"verifyingContract\\\":\\\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\\\"},\\\"message\\\":{\\\"from\\\":{\\\"name\\\":\\\"Cow\\\",\\\"wallet\\\":\\\"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\\\"},\\\"to\\\":{\\\"name\\\":\\\"Bob\\\",\\\"wallet\\\":\\\"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\\\"},\\\"contents\\\":\\\"Hello, Bob!\\\"}}\"\n      // }}\n\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n      var data = {\n        method: \"eth_signTypedData_v4\",\n        params: [\n          address,\n          {\n            types: {\n              EIP712Domain: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"version\",\n                  type: \"string\",\n                },\n                {\n                  name: \"chainId\",\n                  type: \"uint256\",\n                },\n                {\n                  name: \"verifyingContract\",\n                  type: \"address\",\n                },\n              ],\n              Person: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"wallet\",\n                  type: \"address\",\n                },\n              ],\n              Mail: [\n                {\n                  name: \"from\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"to\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"contents\",\n                  type: \"string\",\n                },\n              ],\n            },\n            primaryType: \"Mail\",\n            domain: {\n              name: \"Ether Mail\",\n              version: \"1\",\n              chainId: 1,\n              verifyingContract: \"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\",\n            },\n            message: {\n              from: {\n                name: \"Cow\",\n                wallet: \"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\",\n              },\n              to: {\n                name: \"Bob\",\n                wallet: \"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\",\n              },\n              contents: \"Hello, Bob!\",\n            },\n          },\n        ],\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_sendTransaction_transfer() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            chainId: \"0x1\",\n            to: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            value: \"0x5af3107a4000\",\n            maxPriorityFeePerGas: \"0x3b9aca00\",\n            gas: \"0x5e56\",\n            maxFeePerGas: \"0x2643b9db8\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gasPrice: \"0x17003f6530\",\n            nonce: \"0x0d30\",\n            data: \"0x\",\n            value: \"0x00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasLimit: \"0x5208\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x5e56\",\n            value: \"0x5af3107a4000\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasPrice: \"0x3b9aca00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            chainId: \"0x38\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:122\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            value: \"0x0\",\n            chainId: \"0x7a\",\n          }\n        }\n      }\n\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"to\"] = address;\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_approve() {\n      var data = {};\n\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000000000000022d473030f116ddee9f6b43ac78ba3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x582d872a1b094fc48f5de31d3b73f2d9be47def1\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000f6f8096ac575b0\",\n            to: \"0x0b3F868E0BE5597D5DB7fEB59E1CADBb0fdDa50a\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            value: \"0x0\",\n            gas: \"0xe117\",\n            gasPrice: \"0xb2d05e00\",\n            data: \"0x095ea7b300000000000000000000000031c2f6fcff4f8759b3bd5bf0e1084a055615c768ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x5CA42204cDaa70d5c773946e69dE942b85CA6706\",\n          },\n        };\n      } else if (this.selectedChain === 'eip155:122') {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000000000000013b3\",\n            to: \"0x620fd5fa44BE6af63715Ef4E65DDFA0387aD13F5\",\n          },\n        };\n      }\n\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_mint() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x4cacb\",\n            data: \"0xa64dfa75000000000000000000000000ed688002f3797599db8b4feacfe8b1dda0df1c8d000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cecb15396825a895ff8da8fc2d2c77a234dccee00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f6261667962656968643737366b6177706e71336f6f6a6635693274787a76617737737164656b34616a776472637472703261366f626b70723773792f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x30795\",\n            data: \"0xa64dfa75000000000000000000000000341b3687f0309778f08f29336b2c4b9c38b9f110000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f62616679626569686a6279676b68747a71376b68377434336266686e676e793236337668766f6578716a6d6e377161716166366e717a64743777712f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      }\n\n      let str = JSON.stringify(data);\n      console.log(\"-----长度--->\", str.length);\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async Polygon_RPCRequest() {\n      try {\n        var data = {\n          method: \"eth_getTransactionByHash\",\n          params: [\"0xd62fa4ea3cf7ee3bf6f5302b764490730186ed6a567c283517e8cb3c36142e1a\"],\n        };\n        this.testTransaction = JSON.stringify(data);\n\n        var result = await window.provider.request(data, this.selectedChain)\n        console.log(`请求数据回调 Polygon_RPCRequest ----->> ${JSON.stringify(result)}`)\n\n        if (typeof result == \"string\") {\n          this.testboc = result;\n        } else {\n          this.testboc = JSON.stringify(result);\n        }\n      }catch (e) {\n        this.testboc = JSON.stringify(e);\n      }\n\n    },\n    async wallet_watchAsset() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xe0f63a424a4439cbe457d80e4f4b51ad25b2c56c\",\n              symbol: \"SPX6900\",\n              image:\n                  \"https://assets.coingecko.com/coins/images/31401/standard/sticker_%281%29.jpg?1702371083\",\n              decimals: 8,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xeB51D9A39AD5EEF215dC0Bf39a8821ff804A0F01\",\n              symbol: \"LGNS\",\n              image: \"https://polygonscan.com/token/images/originlgns_32.png\",\n              decimals: 9,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0x031b41e504677879370e9dbcf937283a8691fa7f\",\n              symbol: \"FET\",\n              image: \"https://bscscan.com/token/images/fetch_32.png\",\n              decimals: 18,\n            },\n          },\n        };\n      }\n\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async ton_sendTransaction() {\n      var data = {\n        \"messages\": [{\n          \"address\": \"EQARULUYsmJq1RiZ-YiH-IJLcAZUVkVff-KBPwEmmaQGH6aC\",\n          \"amount\": \"186000000\",\n          \"payload\": \"te6cckEBAgEAhgABaw+KfqUAAACKXw/PUzD0JAgA7zuZAqJxsqAciTilI8/iTnGEeq62piAAHtRKd6wOcJwQLBuBAwEAlSWThWGAEPckSDVNSvvmJOKMGCE4qb+zE0NdQGXsIPpYy63RDznGJO33ACoTmz7CXpV552d6ANFof7NJCUxG8kSbhHYZT5CrVcQGUCH+joo=\"\n        }],\n        \"validUntil\": 1736161561913,\n        \"network\": '-239'\n      }\n      this.testTransaction = JSON.stringify(data)\n    },\n    ton_getAccount() {\n      this.testTransaction = \"这里是同步获取 不再需要点击 <<发送交易>>\"\n      let result = window.tonProvider.account()\n      if (result) {\n        this.testboc = JSON.stringify(result);\n      } else {\n        this.testboc = 'null'\n      }\n    },\n\n    async tonUniversalLog() {\n      console.log(\"ton 信息: tonProvider  connected:\", window.tonProvider.connected())\n      console.log(\"ton 信息: tonProvider  account:\", JSON.stringify(window.tonProvider.account()))\n      console.log(\"ton 信息: tonProvider  wallet:\", JSON.stringify(window.tonProvider.wallet()))\n    },\n\n    async sendTransactionAlert() {\n      //\n      const response = await fetch(`https://apitest.fireverse.ai/oauth/okx/getNonce?publicAddress=0x0cecb15396825a895ff8da8fc2d2c77a234dccee`);\n      const data = await response.json();\n      console.log(\"请求数据----\", JSON.stringify(data))\n      await this.personal_sign()\n      if (confirm(\"Are you want to sign message?\")) {\n        this.sendTransaction();\n      }\n\n      // window.open(\"https://www.okx.com/download?deeplink=okx%3A%2F%2Fweb3%2Fwallet%2Fconnect\",'_self')\n    },\n\n    async sendTransaction() {\n      if (this.selectedChain.startsWith(\"aptos\")\n          || this.selectedChain.startsWith(\"movement\")\n          || this.selectedChain.startsWith(\"solana\")\n          || this.selectedChain.startsWith(\"sonic\")\n          || this.selectedChain.startsWith(\"cosmos\")) {\n        return\n      }\n      console.log(\"sendTransaction\", window.provider);\n      console.log(\"sendTransaction内容11------\", this.testTransaction);\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (this.testTransaction && window.provider) {\n        // eslint-disable-next-line no-undef\n        const sendData = JSON.parse(this.testTransaction);\n        try {\n          console.log(\"sendTransaction-----22method>>\", sendData.method);\n\n          let chainId = \"eip155:1\";\n          if (this.selectedChain) {\n            chainId = this.selectedChain;\n            console.log(\n                \"sendTransaction-----this.selectedChain>>\",\n                this.selectedChain\n            );\n          }\n          console.log(\"windowOpen[click_1]: \", Date.now());\n          console.log(\"交易的ChainId: \",chainId);\n\n          if (chainId == \"sui:mainnet\") {\n            const adapter = new SuiAdapter(window.provider);\n            var suiResult = \"invalid result\";\n            if (this.currentSuiMethod == 'sui_getAccount') {\n              let result = adapter.getAccount()\n              if (typeof result == \"string\") {\n                this.testboc = result\n              } else {\n                this.testboc = JSON.stringify(result)\n              }\n            }\n            if (this.currentSuiMethod == \"sui_signTransaction\") {\n              suiResult = await adapter.signTransaction(\n                  this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signAndExecuteTransaction\") {\n              suiResult = await adapter.signAndExecuteTransaction(\n                  this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signMessage\") {\n              console.log(\"signMessage----\", this.currentSuiTransaction);\n              suiResult = await adapter.signMessage(this.currentSuiTransaction);\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_signPersonalMessage\") {\n              console.log(\n                  \"signPersonalMessage----\",\n                  this.currentSuiTransaction\n              );\n              suiResult = await adapter.signPersonalMessage(\n                  this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_testRpc\") {\n              console.log(\"test rpc----\", this.currentSuiTransaction);\n              console.log(\n                  `请求数据发送 rpc ----->> ${JSON.stringify(sendData)}`\n              );\n              const res = await window.provider.request(sendData, chainId);\n              console.log(`请求数据回调 rpc ----->> ${JSON.stringify(result)}`);\n              if (typeof res == \"string\") {\n                this.testboc = res;\n              } else {\n                this.testboc = JSON.stringify(res);\n              }\n            }\n            console.log(\"windowOpen[click_2]: \", Date.now());\n            return;\n          } else if (chainId === \"ton:-239\") {\n            console.log(\n                `请求数据发送 sendTransaction ---ton-->> ${JSON.stringify(sendData)}`\n            );\n            let result = await window.tonProvider.sendTransaction(sendData)\n            console.log(\n                `请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`\n            );\n            if (typeof result == \"string\") {\n              this.testboc = result;\n            } else {\n              this.testboc = JSON.stringify(result);\n            }\n            return\n          }\n\n          if (chainId == 'btc:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var btcResult = 'invalid result'\n\n            if (this.currentBtcMethod == 'btc_signMessage') {\n              btcResult = await btcAdapter.signMessage(chainId, this.currentBtcTransaction[\"signStr\"])\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_send') {\n              btcResult = await btcAdapter.send(chainId, this.currentBtcTransaction)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signPsbt') {\n              btcResult = await btcAdapter.signPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n\n              this.hexToBase64(btcResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentBtcMethod == 'btc_signPsbts') {\n              btcResult = await btcAdapter.signPsbts(chainId, this.currentBtcTransaction.psbtHexs, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_sendInscription') {\n              btcResult = await btcAdapter.sendInscription(chainId, this.currentBtcTransaction.address, this.currentBtcTransaction.inscriptionId, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signAndPushPsbt') {\n              btcResult = await btcAdapter.signAndPushPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_sendBitcoin') {\n              btcResult = await btcAdapter.sendBitcoin(chainId, this.currentBtcTransaction.toAddress, this.currentBtcTransaction.satoshis, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_getAccount') {\n              btcResult = btcAdapter.getAccount(chainId)\n              this.testboc = JSON.stringify(btcResult)\n            }else if(this.currentBtcMethod === \"btc_sendRunes\"){\n              console.log(\"BTC参数--->\",JSON.stringify(this.currentBtcTransaction))\n              btcResult = await btcAdapter.sendRunes(chainId,this.currentBtcTransaction.address,this.currentBtcTransaction.runeid,this.currentBtcTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }else if(this.currentBtcMethod === \"btc_inscribeTransfer\"){\n              console.log(\"BTC参数--->\",JSON.stringify(this.currentBtcTransaction))\n              btcResult = await btcAdapter.inscribeTransfer(chainId,this.currentBtcTransaction.ticker,this.currentBtcTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }\n\n            return\n          }\n\n          if (chainId == 'fractal:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var fractalResult = 'invalid result'\n\n            if (this.currentFractalMethod == 'fractal_signMessage') {\n              fractalResult = await btcAdapter.signMessage(chainId, this.currentFractalTransaction['signStr'])\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_send') {\n              fractalResult = await btcAdapter.send(chainId, this.currentFractalTransaction)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signPsbt') {\n              fractalResult = await btcAdapter.signPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.hexToBase64(fractalResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentFractalMethod == 'fractal_signPsbts') {\n              fractalResult = await btcAdapter.signPsbts(chainId, this.currentFractalTransaction.psbtHexs, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_sendInscription') {\n              fractalResult = await btcAdapter.sendInscription(chainId, this.currentFractalTransaction.address, this.currentFractalTransaction.inscriptionId, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signAndPushPsbt') {\n              fractalResult = await btcAdapter.signAndPushPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_sendBitcoin') {\n              fractalResult = await btcAdapter.sendBitcoin(chainId, this.currentFractalTransaction.toAddress, this.currentFractalTransaction.satoshis, this.currentFractalTransaction.options)\n\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_getAccount') {\n              fractalResult = btcAdapter.getAccount(chainId)\n              this.testboc = JSON.stringify(fractalResult)\n            }else if(this.currentFractalMethod === \"fractal_sendRunes\"){\n              console.log(\"fractal参数--->\",JSON.stringify(this.currentFractalTransaction))\n              btcResult = await btcAdapter.sendRunes(chainId,this.currentFractalTransaction.address,this.currentFractalTransaction.runeid,this.currentFractalTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }else if(this.currentFractalMethod === \"fractal_inscribeTransfer\"){\n              console.log(\"fractal参数--->\",JSON.stringify(this.currentFractalTransaction))\n              btcResult = await btcAdapter.inscribeTransfer(chainId,this.currentFractalTransaction.ticker,this.currentFractalTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }\n\n            return\n          }\n\n          console.log(`请求数据发送 sendTransaction ----->> ${JSON.stringify(sendData)}`)\n          var result = await window.provider.request(sendData, chainId)\n          console.log(`请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`)\n\n          console.log(\"windowOpen[click_3]: \", Date.now());\n          if (typeof result == \"string\") {\n            this.testboc = result;\n          } else {\n            this.testboc = JSON.stringify(result);\n          }\n          console.log(\"方法数据回调 --this.testboc--\", this.testboc);\n        } catch (error) {\n          console.error(\"方法数据回调失败 --Error--\", error.message);\n\n          if (error.code === OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n            this.testboc = error.message;\n          } else {\n            this.testboc = \"wrong signature！\" + error.message;\n          }\n        }\n      } else {\n        alert(\"Please input transaction data\");\n      }\n    },\n\n    hexToBase64(hexStr) {\n      var bytes = [];\n      for (var i = 0; i < hexStr.length; i += 2) {\n        bytes.push(parseInt(hexStr.substr(i, 2), 16));\n      }\n      const buffer = new Uint8Array(bytes)\n      const blob = new Blob([buffer]);\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = function (e) {\n          var base64Data = e.target.result.split(\",\")[1]\n          resolve(base64Data);\n        };\n        reader.onerror = function (e) {\n          reject(e);\n        };\n        reader.readAsDataURL(blob);\n      });\n    },\n    testBase64UrlSafe() {\n      let datatest = {\n        \"protocolVer\": 1,\n        \"topic\": \"8a7a4c3be73802d0ae2587123ade7bb79f27433b9aa3ca589a2208a2089eecfd\",\n        \"clientId\": \"5f1bbf9eac92160affa7ef04d0a710817ddb6d8c22ebbd6263e86f059930b404\",\n        \"requestId\": \"1731383250054\",\n        \"dAppInfo\": {\n          \"url\": \"connect.oker.vip\",\n          \"origin\": \"https://connect.oker.vip\",\n          \"name\": \"univer test dapp\",\n          \"icon\": \"https://avatars.githubusercontent.com/u/37784886\"\n        },\n        \"requests\": [{\n          \"name\": \"requestAccounts\",\n          \"requiredNamespaces\": [{\"namespace\": \"aptos\", \"chains\": [\"aptos:637\"]}],\n          \"optionalNamespaces\": [],\n          \"connectRequestMethods\": [{\n            \"chainId\": \"aptos:637\",\n            \"method\": \"aptos_signMessage\",\n            \"params\": {\n              \"data\": {\n                \"address\": true,\n                \"application\": true,\n                \"chainId\": true,\n                \"message\": \"123 中文测试!\",\n                \"nonce\": \"1234\"\n              }, \"applicationUrl\": \"https://connect.oker.vip\", \"prefix\": \"APTOS\", \"aptosChainId\": \"1\"\n            }\n          }]\n        }],\n        \"redirect\": \"none\"\n      }\n      let json = JSON.stringify(datatest)\n      const utf8Array = new TextEncoder().encode(json);\n      let binary = '';\n      utf8Array.forEach(byte => {\n        binary += String.fromCharCode(byte);\n      });\n\n      let firstStr = btoa(binary)\n      console.log(\"字符串编码1>>>>\", firstStr)\n      firstStr = firstStr.replace(/\\+/g, '-')  // 替换 '+'\n      console.log(\"字符串编码2>>>>\", firstStr)\n      firstStr = firstStr.replace(/\\//g, '_')  // 替换 '/'\n      console.log(\"字符串编码3>>>>\", firstStr)\n      firstStr = firstStr.replace(/=+$/, '');  // 移除 '=';\n      console.log(\"字符串编码4>>>>\", firstStr)\n\n      let showUrl = getUniversalLink(getAppWalletDeepLink(firstStr))\n      console.log(\"字符串编码5>>>>\", showUrl)\n      this.qrValue = showUrl;\n      this.showModal = true;\n    },\n\n\n    async testTonSdk() {\n      // 1. connect\n      //  create sub providers for each namespace/chain\n      let nameSpacesChains = [];\n      let optSpaceChains = [];\n\n      let solanaChains = [\n        \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n        \"svm:70000062\",\n      ];\n      let hasEip155, hasSolana, hasSui, hasBtc, hasAptos, hasTon, hasCosmos, hasTron, hasStarknet,hasPolygon = false\n\n      let suiChains = [\n        \"sui:mainnet\",\n      ];\n\n      let btcChains = [\n        \"btc:mainnet\",\n        \"fractal:mainnet\"\n      ];\n\n      const chains = Object.entries(this.availableChains)\n          .filter((chain) => chain[1].checked)\n          .map((chain) => chain[0]);\n      console.log(`chains  ===> ${chains.values()}`)\n      chains.forEach(function (chainId) {\n        console.log(`chains.forEach chainId  ===> ${chainId}`)\n\n        if (solanaChains.includes(chainId)) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"ton\")) {\n          nameSpacesChains.push(chainId)\n          hasTon = true\n          return\n        }\n        if (typeof chainId == 'string' && (chainId.startsWith(\"aptos\") || chainId.startsWith(\"movement\"))) {\n          nameSpacesChains.push(chainId)\n          hasAptos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId)\n          hasSolana = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"cosmos\")) {\n          nameSpacesChains.push(chainId)\n          hasCosmos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"tron\")) {\n          nameSpacesChains.push(chainId)\n          hasTron = true\n          return\n        }\n\n        if (typeof chainId == 'string' && chainId.startsWith(\"starknet\")) {\n          nameSpacesChains.push(chainId)\n          hasStarknet = true\n          return\n        }\n\n        if (suiChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`);\n          nameSpacesChains.push(chainId);\n          hasSui = true;\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`)\n          nameSpacesChains.push(chainId)\n          hasBtc = true\n          return\n        }\n        if (chainId === \"137\"){\n          hasPolygon = true\n        }\n        hasEip155 = true\n        nameSpacesChains.push(`eip155:${chainId}`)\n      })\n\n\n      optionChains.forEach(function (chainId) {\n        console.log(\"optionChains.forEach 。chainId：》》\",chainId)\n        if (solanaChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n        if (typeof chainId == \"string\" && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (suiChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          optSpaceChains.push(chainId)\n          return\n        }\n        if (chainId.startsWith('ton')) {\n          optSpaceChains.push(chainId)\n          return\n        }\n\n        optSpaceChains.push(`eip155:${chainId}`)\n      })\n\n      console.log(`namespaceChains  ===> ${JSON.stringify(nameSpacesChains)}`);\n      var connectData = {};\n      if (nameSpacesChains && nameSpacesChains.length > 0) {\n        var requireData = {};\n\n        if (hasEip155) {\n\n          if (hasPolygon){\n            requireData.eip155 = {\n              chains: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              ),\n              defaultChain: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              )[0],\n              rpcMap: {\n                \"137\":\"https://polygon.drpc.org\"\n              }\n            };\n          }else {\n            requireData.eip155 = {\n              chains: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              ),\n              defaultChain: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              )[0],\n            };\n          }\n\n        }\n        if (hasSolana) {\n          requireData.solana = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"solana\") ||\n                    item.startsWith(\"sonic\") ||\n                    item.startsWith(\"svm\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"solana\") ||\n                    item.startsWith(\"sonic\") ||\n                    item.startsWith(\"svm\")\n            )[0],\n          };\n        }\n\n        if (hasCosmos) {\n          requireData.cosmos = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            )[0],\n          }\n        }\n        if (hasTron) {\n          requireData.tron = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            )[0],\n          }\n        }\n        if (hasStarknet) {\n          requireData.starknet = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"starknet\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"starknet\")\n            )[0],\n          }\n        }\n        if (hasTon) {\n\n          //\n          let tonParams = {\n            ton_addr: {\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue) {\n            tonParams = {\n              ton_addr: {\n                name: 'ton_addr',\n              },\n              ton_proof: {\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          requireData.ton = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"ton\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"ton\"))[0],\n            params: tonParams,\n          };\n        }\n\n        if (hasSui) {\n          requireData.sui = {\n            chains: nameSpacesChains.filter((item) => item.startsWith(\"sui\")),\n            defaultChain: nameSpacesChains.filter((item) =>\n                item.startsWith(\"sui\")\n            )[0],\n            rpcMap: {\n              \"sui:mainnet\": \"https://www.okx.com/fullnode/sui/discover/rpc\"\n            }\n          };\n        }\n        if (hasAptos) {\n          requireData.aptos = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\"))[0]\n          }\n        }\n\n        if (hasBtc) {\n          let btcChains = nameSpacesChains.filter(item => item.startsWith(\"btc\") || item.startsWith(\"fractal\"))\n          requireData.btc = {\n            chains: btcChains,\n            defaultChain: btcChains[0]\n          }\n        }\n        console.log(`requireData  ===> ${JSON.stringify(requireData)}`)\n        connectData['namespaces'] = requireData;\n        console.log(JSON.stringify(connectData))\n      }\n\n      if (optSpaceChains && optSpaceChains.length > 0) {\n        const optData = {};\n\n        const eip155Chains = optSpaceChains.filter((item) => item.startsWith(\"eip155\"));\n        if (eip155Chains.length > 0) {\n          optData[\"eip155\"] = {\n            chains: eip155Chains,\n            defaultChain: eip155Chains[0],\n          };\n        }\n\n        const solanaChains = optSpaceChains.filter((item) => item.startsWith(\"solana\"));\n        if (solanaChains.length > 0) {\n          optData[\"solana\"] = {\n            chains: solanaChains,\n            defaultChain: solanaChains[0],\n          };\n        }\n\n        const tonChains = optSpaceChains.filter((item) => item.startsWith(\"ton\"));\n        if (tonChains.length > 0) {\n\n          let tonParams = {\n            ton_addr: {\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue) {\n            tonParams = {\n              ton_addr: {\n                name: 'ton_addr',\n              },\n              ton_proof: {\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          optData[\"ton\"] = {\n            chains: tonChains,\n            defaultChain: tonChains[0],\n            params: tonParams,\n          };\n        }\n\n        const btcChains = optSpaceChains.filter((item) => item.startsWith(\"btc\"));\n        if (btcChains.length > 0) {\n          optData[\"btc\"] = {\n            chains: btcChains,\n            defaultChain: btcChains[0],\n          };\n        }\n\n        connectData[\"optionalNamespaces\"] = optData;\n      }\n\n      if (nameSpacesChains.length === 0 && optSpaceChains.length === 0) {\n        //未选择链\n        alert(\"Please select a chain from above to continue\");\n        return;\n      }\n      console.log(\"=====>connectData \");\n      console.log(connectData);\n\n      var connectMethod;\n      let signMethods = this.getCurrentSelectedMethodData();\n      if (window.provider instanceof OKXUniversalConnectUI) {\n\n        if (signMethods && signMethods.length > 0) {\n          connectMethod = window.provider.openModalAndSign(connectData, JSON.parse(JSON.stringify(signMethods)));\n        } else {\n          connectMethod = window.provider.openModal(connectData);\n        }\n      } else {\n        if (this.universalToTG) {\n          connectData.sessionConfig = {\n            useMini: true,\n            openUniversalUrl: true,\n            tmaReturnUrl: 'back'\n          }\n        } else {\n          connectData.sessionConfig = {\n            redirect: selectedReturnStrategy\n          }\n        }\n        if (signMethods && signMethods.length > 0) {\n          connectMethod = window.provider.connectAndSign(connectData, JSON.parse(JSON.stringify(signMethods)));\n        } else {\n          connectMethod = window.provider.connect(connectData);\n        }\n      }\n\n      await connectMethod\n          .then((result) => {\n            // 2. set defaul chain\n            this.walletAddress = \"connected\";\n            if (this.isPC()) {\n              this.showModal = false;\n            }\n            if (result) {\n              this.testboc = JSON.stringify(result)\n            }\n\n            if (window.provider.session && window.provider.session.namespaces) {\n              let ton = window.provider.session.namespaces[\"ton\"];\n              console.log(\"是否包含ton\", ton)\n              if (ton) {\n                this.tonUniversalLog()\n              }\n            }\n          })\n          .catch((error) => {\n            if (error.code == 301) {\n              setTimeout(() => {\n                alert(error.message)\n              }, 0.5);\n            } else if (error.message) {\n              alert(error.message)\n            }\n            console.error(\"发生了错误：\", error);\n          });\n    },\n\n    getCurrentSelectedMethodData() {// 连接签名\n      var methodList = [];\n      this.selectedMethod.forEach(method => {\n        switch (method) {\n          case \"wallet_addEthereumChain(ETH)\":\n            methodList.push({\n              method: \"wallet_addEthereumChain\",\n              chainId: \"eip155:1\",\n              params: {\n                blockExplorerUrls: [\"https://explorer.fuse.io\"],\n                chainId: \"0x7a\",\n                chainName: \"Fuse\",\n                nativeCurrency: {name: \"Fuse\", symbol: \"FUSE\", decimals: 18},\n                rpcUrls: [\"https://rpc.fuse.io\"],\n              },\n            })\n            break;\n          case \"personal_sign(ETH)\":\n            methodList.push(\n                {\n                  method: \"personal_sign\",\n                  chainId: \"eip155:1\",\n                  params: [\n                    \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n                  ],\n                });\n            break;\n          case \"solana_signMessage(Sol mainnet)\":\n            methodList.push(\n                {\n                  \"chainId\": \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n                  \"method\": \"solana_signMessage\",\n                  \"params\": {\n                    \"message\": \"Hello Solana\",\n                  }\n                }\n            );\n            break;\n          case \"sui_signMessage(Sui mainnet)\":\n          case \"sui_signPersonalMessage(Sui mainnet)\": {\n            let suiData = [\n              76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n              109, 111, 118, 101,\n            ];\n            let uint8Array = new Uint8Array(suiData);\n            let currentMethod = \"sui_signMessage\";\n            this.currentSuiTransaction = {\n              message: uint8Array\n            }\n\n            if (method.startsWith(\"sui_signPersonalMessage\")) {\n              currentMethod = \"sui_signPersonalMessage\";\n            }\n            methodList.push(\n                {\n                  method: currentMethod,\n                  chainId: \"sui:mainnet\",\n                  params: {\n                    message: uint8Array,\n                  }\n                }\n            );\n            break;\n          }\n          case \"btc_signMessage(BTC)\":\n            methodList.push(\n                {\n                  method: \"btc_signMessage\",\n                  chainId: \"btc:mainnet\",\n                  params: {\n                    message: \"Welcome to BTC\"\n                  }\n                }\n            )\n            break;\n          case \"aptos_signMessage(aptos mainnet)\":\n            methodList.push(\n                {\n                  \"chainId\": \"aptos:mainnet\",\n                  \"method\": \"aptos_signMessage\",\n                  \"params\": {\n                    address: true,\n                    application: true,\n                    chainId: true,\n                    message: \"Hello Aptos\",\n                    nonce: \"1234\"\n                  }\n                }\n            )\n            break;\n          case \"cosmos_signArbitrary(cosmoshub)\":\n            methodList.push(\n                {\n                  \"chainId\": \"cosmos:cosmoshub-4\",\n                  \"method\": \"cosmos_signArbitrary\",\n                  \"params\": {\n                    message: \"test cosmos\"\n                  }\n                }\n            )\n\n            break;\n          case \"test_noSupport_eth(ETH)\":\n            methodList.push(\n                {\n                  chainId: \"eip155:1\",\n                  method: \"test_noSupport_eth\",\n                  params: {\n                    message: \"test hello\",\n                  }\n                }\n            )\n            break;\n          case \"sync_all_addresses\":\n            methodList.push(\n                {\n                  method: \"sync_all_addresses\",\n                });\n            break;\n          case \"tron_signMessage\":\n            methodList.push(\n                {\n                  chainId: \"tron:mainnet\",\n                  method: \"tron_signMessage\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n          case \"tron_signMessageV2\":\n            methodList.push(\n                {\n                  chainId: \"tron:mainnet\",\n                  method: \"tron_signMessageV2\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n\n            //\n          case \"starknet_signMessage\": {\n            const signData = {\n              \"domain\": {\n                \"chainId\": \"0x534e5f4d41494e\",\n                \"name\": \"STRKFarm\",\n                \"version\": \"1\"\n              },\n              \"message\": {\n                \"document\": \"app.strkfarm.xyz/tnc/v1\",\n                \"message\": \"Read and Agree T&C\"\n              },\n              \"primaryType\": \"Tnc\",\n              \"types\": {\n                \"StarkNetDomain\": [\n                  {\n                    \"name\": \"name\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"version\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"chainId\",\n                    \"type\": \"felt\"\n                  }\n                ],\n                \"Tnc\": [\n                  {\n                    \"name\": \"message\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"document\",\n                    \"type\": \"felt\"\n                  }\n                ]\n              }\n            }\n            methodList.push({\n              chainId: \"starknet:mainnet\",\n              method: \"starknet_signMessage\",\n              params: {\n                accountAddress: \"\",\n                typedData: signData\n              }\n            })\n          }\n            break\n          default:\n\n            break;\n        }\n      })\n      this.selectedMethodData = methodList\n      return methodList\n\n    },\n\n    closeModal() {\n      this.showModal = false;\n    },\n\n    isPC() {\n      const userAgentInfo = navigator.userAgent;\n      console.log(\"current device ua is ===>\", userAgentInfo);\n\n      const Agents = [\n        \"Android\",\n        \"iPhone\",\n        \"SymbianOS\",\n        \"Windows Phone\",\n        \"iPad\",\n        \"iPod\",\n      ];\n      let flag = true;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = false;\n          break;\n        }\n      }\n      return flag;\n    },\n    isSafariOrChrome() {\n      const userAgentInfo = navigator.userAgent;\n      const Agents = [\"Safari\", \"Chrome\"];\n      let flag = false;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = true;\n          break;\n        }\n      }\n      return flag;\n    },\n\n    /// solana\n    async sol_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      try {\n        let data = {\n          method: \"solana_signMessage\",\n          params: {\n            message: \"Hello Solana\",\n            pubkey: \"\",\n          },\n        };\n        this.testTransaction = JSON.stringify(data);\n        let provider = new OKXSolanaProvider(window.provider);\n\n        let message = await provider.signMessage(\n            \"Hello Solana\",\n            this.selectedChain\n        );\n        console.log(\"solana_signMessage Result:\", JSON.stringify(message))\n        const result1 = nacl.sign.detached.verify(\n            new TextEncoder().encode(\"Hello Solana\"),\n            message.signature,\n            new PublicKey(message.publicKey).toBytes()\n        );\n        console.log(result1)\n\n        if (typeof message == \"string\") {\n          this.testboc = result1;\n        } else {\n          this.testboc = result1;\n        }\n      } catch (e) {\n        console.log(\"solana_signMessage error:\", JSON.stringify(e))\n        this.testboc = e.message\n      }\n\n    },\n\n    async aptos_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      let data = {\n        address: true,\n        application: true,\n        chainId: true,\n        message: \"Hello Aptos\",\n        nonce: \"1234\"\n      }\n\n      let provider = new OKXAptosProvider(window.provider)\n      let message = await provider.signMessage(data, this.selectedChain)\n      this.testTransaction = JSON.stringify(data)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n      try {\n        const transaction = await aptos.transaction.build.simple({\n          sender: provider.getAccount(this.selectedChain).address,\n          data: {\n            // The Move entry-function\n            function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n            // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n            typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n            functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n          },\n        });\n        console.log(\"获取地址aptos 222222：\");\n\n        this.testTransaction = safeJsonStringify(transaction)\n\n        let message = await provider.signTransaction(transaction, this.selectedChain)\n        if (typeof message == \"string\") {\n          this.testboc = message\n        } else {\n          this.testboc = JSON.stringify(message)\n        }\n      }catch (e) {\n\n        this.testboc = JSON.stringify(e)\n      }\n\n    },\n\n    async move_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n          functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        },\n      });\n\n      // let data = {\n      //   \"arguments\": [\"100000\",[\"0\",\"0\",\"10533\"],[\"10\",\"5\",\"5\"],[\"false\",\"false\",\"true\"]],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x3\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\",\"0x73eb84966be67e4697fc5ae75173ca6c35089e802650f75422ab49a8729704ec::coin::DooDoo\",\"0x53a30a6e5936c0a4c5140daed34de39d17ca7fcae08f947c02e979cef98a3719::coin::LSD\",\"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::CurveV1\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x54cb0bb2c18564b86e34539b9f89cfe1186e39d89fce54e1cd007b8e61673a85::bin_steps::X80\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async sol_signVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(\n          provider.getAccount(\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\").address\n      );\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signTransaction(\n          transaction,\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAndSendVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n          transaction,\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllVersionedTransactions() {\n      let provider = new OKXSolanaProvider(window.provider);\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n          [transaction],\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signTransaction() {\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: 1000,\n          })\n      );\n\n      this.testTransaction = safeJsonStringify(transaction)\n      let result = await provider.signTransaction(\n          transaction,\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllTransactions() {\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n          [transaction],\n          this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    getSolConnect() {\n      let rpc = \"https://www.okx.com/fullnode/sol/discover/rpc\"\n      if (this.selectedChain === \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\") {\n        rpc = \"https://www.okx.com//fullnode/sol/discover/rpc\"\n      } else if (this.selectedChain === \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\") {\n        rpc = \"https://www.okx.com/fullnode/soltestnet/discover/rpc\"\n      } else if (this.selectedChain === \"svm:70000062\") {\n        rpc = \"https://www.okx.com/fullnode/sonic/testnet/discover/rpc\"\n      }\n      return rpc\n    },\n\n    async sol_signAndSendTransaction() {\n\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n          transaction,\n          this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async cosmos_signArbitrary() {\n      let provider = new OKXCosmosProvider(window.provider)\n      let message = await provider.signArbitrary(this.selectedChain, provider.getAccount(this.selectedChain).address, \"test cosmos\")\n      if (typeof message == \"string\") {\n        this.testboc = message;\n      } else {\n        let isValid = await this.cosmos_verifySignArbitrary(provider.getAccount(this.selectedChain).address, \"test cosmos\", message.signature, message.pub_key.value)\n        console.log(\"verify\", isValid)\n        this.testboc = \"verify:\" + isValid + JSON.stringify(message);\n      }\n    },\n\n    async cosmos_verifySignArbitrary(signer, data, signature, pubkey) {\n      try {\n        console.log(\"cosmos_verifySignArbitrary signer:\", signer)\n        console.log(\"cosmos_verifySignArbitrary data:\", JSON.stringify(data))\n        console.log(\"cosmos_verifySignArbitrary signature:\", signature)\n        console.log(\"cosmos_verifySignArbitrary pubkey:\", pubkey)\n\n        // 将bech32地址转换为公钥\n        const {prefix: prefixStr} = fromBech32(signer)\n\n        const signatureBuffer = Buffer.from(signature, 'base64');\n\n        const uint8Signature = new Uint8Array(signatureBuffer); // Convert the buffer to an Uint8Array\n\n        const pubKeyValueBuffer = Buffer.from(pubkey, 'base64'); // Decode the base64 encoded value\n\n        const pubKeyUint8Array = new Uint8Array(pubKeyValueBuffer); // Convert the buffer to an Uint8Array\n\n        // 验证签名\n        return await verifyADR36Amino(\n            prefixStr,\n            signer,\n            data,\n            pubKeyUint8Array,\n            uint8Signature\n        )\n      } catch (err) {\n        console.error('Verification failed:', err)\n        return false\n      }\n    },\n\n    async cosmos_signAmino() {\n      let provider = new OKXCosmosProvider(window.provider)\n      // const rpcUrl = 'https://osmosis-rpc.publicnode.com:443';\n      // const client = await StargateClient.connect(rpcUrl);\n      // const height = await client.getHeight();\n      // let address = provider.getAccount(this.selectedChain).address\n      // const sequence = await client.getSequence(address)\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      // let signDoc = makeSignDoc(\n      //     transaction.msgs,\n      //     transaction.fee,\n      //     this.selectedChain.split(\":\")[1],\n      //     transaction.memo,\n      //     transaction.accountNumber,\n      //     transaction.sequence,\n      // )\n      let signDoc = {\n        \"chain_id\": \"osmosis-1\",\n        \"account_number\": \"630104\",\n        \"sequence\": \"480\",\n        \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]},\n        \"msgs\": [{\n          \"type\": \"osmosis/poolmanager/swap-exact-amount-in\",\n          \"value\": {\n            \"sender\": \"osmo1u6lts9ng4etxj0zdaxsada6zgl8dudpgelmuyu\",\n            \"routes\": [{\n              \"pool_id\": \"1096\",\n              \"token_out_denom\": \"ibc/987C17B11ABC2B20019178ACE62929FE9840202CE79498E29FE8E5CB02B7C0A4\"\n            }, {\n              \"pool_id\": \"611\",\n              \"token_out_denom\": \"ibc/27394FB092D2ECCD56123C74F36E4C1F926001CEADA9CA97EA622B25F41E5EB2\"\n            }],\n            \"token_in\": {\"denom\": \"uosmo\", \"amount\": \"100\"},\n            \"token_out_min_amount\": \"8\"\n          }\n        }],\n        \"memo\": \"FE\",\n        \"timeout_height\": \"23603788\",\n        \"signOptions\": {\n          \"useOneClickTrading\": false,\n          \"preferNoSetFee\": true,\n          \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]}\n        }\n      }\n\n\n      // let signOption = {\n      //   memo: true, // optional\n      //   fee: true, // optional\n      //   gasRate: {\n      //     // optional\n      //     average: \"0.2\",\n      //     low: \"0.02\",\n      //     tiny: \"0.002\",\n      //   },\n      // }\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signAmino(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, signDoc)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    messageToBuffer(message) {\n      var buffer = Buffer.from([]);\n      try {\n        if (typeof message === \"string\") {\n          buffer = Buffer.from(message.replace(\"0x\", \"\"), \"hex\");\n        } else {\n          buffer = Buffer.from(message);\n        }\n      } catch (err) {\n        console.log(`messageToBuffer error: ${err}`);\n      }\n      return buffer;\n    },\n\n\n    async cosmos_signDirect() {\n      let provider = new OKXCosmosProvider(window.provider)\n\n      let signDoc = {\n        \"bodyBytes\": this.messageToBuffer(\"0x0ac1010a292f6962632e6170706c69636174696f6e732e7472616e736665722e76312e4d73675472616e736665721293010a087472616e7366657212096368616e6e656c2d301a0d0a05756f736d6f120431303030222b6f736d6f3175366c7473396e67346574786a307a64617873616461367a676c386475647067656c6d7579752a2d636f736d6f733175366c7473396e67346574786a307a64617873616461367a676c386475647067337967766a773207080410ebe3f90a3880b0bcafd18cec8218\"),\n        \"authInfoBytes\": this.messageToBuffer(\"0x0a510a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a2102446e19e94ac0e83ea896d2712507577eb39fbdd2d6ae9f0fc0b9759f1fbaba9012040a02080118e00312140a0e0a05756f736d6f1205323530303010859a11\"),\n        \"chainId\": \"osmosis-1\",\n        \"accountNumber\": \"630104\",\n      }\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signDirect(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, transaction)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    sui_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentSuiTransaction = params\n      this.currentSuiMethod = flag\n    },\n\n    btc_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentBtcTransaction = params\n      this.currentBtcMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n\n    fractal_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentFractalTransaction = params\n      this.currentFractalMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n    tron_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n    tron_generateTransactionParams(params) {\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n\n    starknet_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n\n    starknet_generateTransactionParams(params) {\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n\n    handleModalsSelect(modals) {\n      selectedModals = modals;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: modals.length === 3 ? \"all\" : modals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n\n    handleReturnStrategySelect(returnStrategy) {\n      selectedReturnStrategy = returnStrategy === \"deeplink\" ? this.deeplink : returnStrategy;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = selectedReturnStrategy;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: selectedReturnStrategy\n          };\n        }\n      }\n    },\n\n    handleReturnStrategyDeeplink(deeplink) {\n      console.log('handleReturnStrategyDeeplink', deeplink)\n      selectedReturnStrategy = deeplink;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: deeplink,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = deeplink;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: deeplink\n          };\n        }\n      }\n    },\n\n    handleLanguageSelect(language) {\n      selectedLanguage = language;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: language,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n    handleConnectMethodsSelect() {\n      console.log(\"当前的方法 this.selectedMethod>>>>\", this.selectedMethod);\n    },\n\n    eth_verifyMessage(message, signature, ethAddress) {\n      console.log(\"eth_verifyMessage   message>>>\", message)\n      console.log(\"eth_verifyMessage   signature>>>\", signature)\n      console.log(\"eth_verifyMessage   ethAddress>>>\", ethAddress)\n      if (!message || !signature) {\n        return \"\"\n      }\n      let originalMessage = message\n      if (message.startsWith(\"0x\")) {\n        originalMessage = originalMessage.replace(/^0x/, '');\n        let str = '';\n        for (let i = 0; i < originalMessage.length; i += 2) {\n          const byte = originalMessage.slice(i, i + 2);\n          str += String.fromCharCode(parseInt(byte, 16));\n        }\n        originalMessage = str\n      }\n      console.log(\"eth_verifyMessage   originalMessage>>>\", originalMessage)\n\n      // const messageHash = ethers.utils.hashMessage(originalMessage);\n      const recoveredAddress = ethers.utils.verifyMessage(originalMessage, signature);\n      console.log(\"eth_verifyMessage recoveredAddress:\", recoveredAddress);\n      return recoveredAddress.toLowerCase() === ethAddress.toLowerCase();\n    },\n\n    async verifyMessage(list) { //连接验签\n\n      if (window.provider && window.provider.session && list && list.length > 0) {\n        let verifyList = {}\n        for (let methodItem of list) {\n          if (\"result\" in methodItem && \"method\" in methodItem) {\n            let requestItme = this.selectedMethodData.filter(item => item.method === methodItem.method)[0];\n            console.log(\"验证签名 请求>>>:\", JSON.stringify(requestItme));\n            console.log(\"验证签名 结果>>>:\", JSON.stringify(methodItem));\n            if (methodItem.method === \"personal_sign\") {\n              let ethAddress = this.requestEVMAccountWithSession(methodItem.chainId)\n              ethAddress = ethAddress[0];\n              console.log(\"验证eth 钱包地址>>>:\", ethAddress);\n              let ethMessage = requestItme.params[0]\n              console.log(\"验证eth 签名消息体>>:\", JSON.stringify(ethMessage));\n              verifyList[methodItem.method] = this.eth_verifyMessage(ethMessage, methodItem.result, ethAddress)\n            } else if (methodItem.method === \"solana_signMessage\") {\n              let solanaMessage = methodItem.result\n              if (\"signature\" in solanaMessage && \"publicKey\" in solanaMessage) {\n                const verifySol = nacl.sign.detached.verify(\n                    new TextEncoder().encode(\"Hello Solana\"),\n                    solanaMessage.signature,\n                    new PublicKey(solanaMessage.publicKey).toBytes()\n                );\n                verifyList[methodItem.method] = verifySol\n              } else {\n                verifyList[methodItem.method] = false\n              }\n            } else if (methodItem.method === \"sui_signPersonalMessage\" || methodItem.method === \"sui_signMessage\") {\n              let suiResult = this.sui_verifySignature(methodItem.result);\n              verifyList[methodItem.method] = (await suiResult).result\n            } else if (methodItem.method === \"btc_signMessage\") {\n\n              verifyList[methodItem.method] = \"Not verified yet\"\n\n            } else if (methodItem.method === \"aptos_signMessage\") {\n              let aptosMessage = methodItem.result\n              let aptosProvider = new OKXAptosProvider(window.provider)\n              let aptosPublicKey = aptosProvider.getAccount(methodItem.chainId)?.publicKey\n\n              let signStr = aptosMessage.signature\n              if (signStr.startsWith(\"0x\")) {\n                signStr = signStr.slice(2, signStr.length)\n              }\n\n              console.log(\"aptos_signMessage aptosPublicKey And signStr\", aptosPublicKey, signStr)\n              verifyList[methodItem.method] = nacl.sign.detached.verify(\n                  Buffer.from(aptosMessage.fullMessage),\n                  Buffer.from(signStr, 'hex'),\n                  Buffer.from(aptosPublicKey, 'hex'),\n              );\n            } else if (methodItem.method === \"cosmos_signArbitrary\") {\n              let cosmosProvider = new OKXCosmosProvider(window.provider)\n              let cosmosAddress = cosmosProvider.getAccount(methodItem.chainId)?.address\n              let cosmosMessage = methodItem.result\n              let isValid = await this.cosmos_verifySignArbitrary(cosmosAddress, \"test cosmos\", cosmosMessage.signature, cosmosMessage.pub_key.value)\n              verifyList[methodItem.method] = isValid\n\n            } else if (methodItem.method === \"tron_signMessage\") {\n              let tronMessage = methodItem.result\n              let tronWeb = new TronWeb({\n                \"fullHost\": 'https://api.trongrid.io',\n                \"headers\": {},\n                \"privateKey\": ''\n              })\n              let provider = new OKXTronProvider(window.provider)\n              verifyList[methodItem.method] = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), tronMessage, provider.getAccount(\"tron:mainnet\").address)\n            } else if (methodItem.method === \"tron_signMessageV2\") {\n              let tronMessage = methodItem.result\n              let tronWeb = new TronWeb({\n                \"fullHost\": 'https://api.trongrid.io',\n                \"headers\": {},\n                \"privateKey\": ''\n              })\n              const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", tronMessage);\n              let provider = new OKXTronProvider(window.provider)\n\n              verifyList[methodItem.method] = base58Address === provider.getAccount(\"tron:mainnet\").address\n            } else if (methodItem.method === \"starknet_signMessage\") {\n              let res = methodItem.result\n              let signData = this.starknetPanelTypedData\n\n              const rpcProvider = new StarknetRpcProvider({nodeUrl: \"https://free-rpc.nethermind.io/mainnet-juno/v0_7\"});\n\n              let provider = new OKXStarknetProvider(window.provider)\n              let address = provider.getAccount(\"starknet:mainnet\").address\n              let pk = \"0x123\"; /// random pk\n              const account = new StarknetAccount(rpcProvider, address, pk)\n\n              let that = this\n              account.verifyMessage(signData, res).then(function (isValid) {\n                that.testTransaction = `Verifyed result: \\n${isValid}`\n              }).catch(function (error) {\n                that.testTransaction = `Verifyed failed: \\n${error}`\n              })\n              verifyList[methodItem.method] = \"starknet is verifying signature...\"\n            } else {\n              verifyList[methodItem.method] = \"Not verified yet\"\n\n            }\n          } else if (\"method\" in methodItem && \"error\" in methodItem) {\n            verifyList[methodItem.method] = methodItem.error\n          }\n\n        }\n\n        console.log(\"验证签名 最后的结果>>>:\", JSON.stringify(verifyList));\n        this.testTransaction = \"签名验证结果如下: \\n\" + JSON.stringify(verifyList)\n      } else {\n        console.log(\"验证签名 window.provider.session.connectMethodsReply 为空:\");\n\n      }\n\n    },\n\n    handleThemeSelect(theme) {\n      selectedTheme = theme;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: theme,\n          },\n        };\n      }\n    },\n\n    async sui_verifySignature(signatureResult) {\n      let resultObj = signatureResult\n      let result = false\n      let msg = ''\n      try {\n        /// 获取当前account\n        const adapter = new SuiAdapter(window.provider);\n        let account = adapter.getAccount()\n        console.log(`Account中获取的address：${account.address}`)\n\n        /// 验证签名\n        let pubKey = await verifyPersonalMessageSignature(this.currentSuiTransaction.message, resultObj.signature)\n        let address = pubKey.toSuiAddress()\n        console.log(`验签结果计算得到address：${address}`)\n\n        /// 对比pubKey\n        console.log(`account pubkey: ${account.publicKey}`,)\n        console.log(`result pubkey: ${pubKey.toBase64()}`)\n        result = (account.address === address) && (account.publicKey === pubKey.toBase64())\n\n        msg = `address verify: ${account.address === address}\\npublicKey verify: ${account.publicKey === pubKey.toBase64()}`\n        console.log(\"signature verify success: \", pubKey)\n      } catch (e) {\n        console.log(\"signature verify failed: \", e)\n      }\n      return {\n        result,\n        msg\n      }\n    },\n\n\n    handleRedirectSelect(input) {\n      this.redirect = input;\n    },\n\n    handleRedirectDeeplink(input) {\n      this.redirectDeeplink = input;\n    },\n\n    addRedirectParam() {\n      if (this.testTransaction) {\n        const newTransaction = JSON.parse(this.testTransaction);\n        newTransaction.redirect = this.redirect === 'deeplink' ? this.redirectDeeplink : this.redirect;\n        this.testTransaction = JSON.stringify(newTransaction);\n      }\n    },\n\n    canChainAddRedirectParam() {\n      return chainsThatCanAddRedirectParam.some((c) => this.selectedChain.startsWith(c));\n    }\n  },\n  created() {\n    // for (const eventName of Object.values(OKX_TON_CONNECTION_AND_TRANSACTION_EVENT)) {\n    //   console.log(eventName);\n    //   window.addEventListener(eventName, (event) => {\n    //     console.log(eventName,event.detail)\n    //     this.currentStatus = eventName\n    //   });\n    // }\n  },\n\n  mounted() {\n\n    var scriptTag = document.createElement(\"script\");\n    scriptTag.src = \"https://telegram.org/js/telegram-web-app.js\";\n    scriptTag.id = \"tgsdk\";\n    document.getElementsByTagName('head')[0].appendChild(scriptTag);\n\n    this.connectReady = true;\n    document.title = \"OKX Connect\";\n    this.initBtnClicked()\n    this.initBtnClicked()\n\n    console.log(\"挂载成功:\")\n    if (this.$refs.starknetPanelRef) {\n      this.starknetPanelTypedData = toRaw(this.$refs.starknetPanelRef.signData)\n      console.log(\"111: \", this.starknetPanelTypedData)\n    } else {\n      console.log(\"222\")\n    }\n  },\n};\n</script>\n","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_getAccount()\">getAccount(BTC)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signMessage()\">signMessage(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_send()\">send(BTC)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendBitcoin()\">sendBitcoin(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signPsbt_up()\">signPsbt(上架NFT)</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"btc_signAndPushPsbt_up()\">signAndPushPsbt(上架NFT)</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在OKX App选择要上架的Btc NFT，点击【上架】\n        </li>\n        <li>\n          2. 弹出签名面板，点开高级选项，查看\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出上架流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendInscription()\">sendInscription(BTC)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Btc NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"runsAddress\" clearable placeholder=\"the receiver address\" />\n      <el-input class=\"grid-content\" v-model=\"runsId\" clearable placeholder=\"the runeid\" />\n      <el-input class=\"grid-content\" v-model=\"runsAmount\" clearable placeholder=\"the amount to send\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendRunes()\">btc_sendRunes(BTC)</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model= \"intTicker\" clearable placeholder=\"BRC-20 ticker \" />\n      <el-input class=\"grid-content\" v-model=\" intAmount\" clearable placeholder=\" the amount to inscribe\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_inscribeTransfer()\">btc_inscribeTransfer(BTC)</el-button>\n    </el-col>\n\n\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    const runsAddress = ref('')\n    const runsId = ref('')\n    const runsAmount = ref('')\n    const intTicker = ref('')\n    const intAmount = ref('')\n\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount,\n      runsAddress,\n      runsId,\n      runsAmount,\n      intTicker,\n      intAmount\n    }\n  },\n  methods: {\n\n    btc_getAccount() {\n      this.$emit('generateTransactionParams', {}, \"btc_getAccount\")\n    },\n\n    btc_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to BTC\"\n      };\n      this.$emit('generateTransactionParams', params, \"btc_signMessage\")\n    },\n\n    btc_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"btc_send\")\n    },\n\n    btc_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"btc_sendBitcoin\")\n    },\n\n    btc_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"btc_signPsbt\")\n    },\n\n    btc_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"btc_signAndPushPsbt\")\n    },\n\n    btc_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"btc_sendInscription\")\n    },\n    btc_sendRunes() {\n      if (!this.runsAddress) {\n        alert(\"Please enter the receiver address\")\n        return\n      }\n      if (!this.runsId) {\n        alert(\"Please enter the runsId\")\n        return\n      }\n      if (!this.runsAmount) {\n        alert(\"Please enter the amount to send \")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        address:this.runsAddress,\n        runeid:this.runsId,\n        amount:this.runsAmount\n      }, \"btc_sendRunes\")\n    },\n\n    btc_inscribeTransfer() {\n      if (!this.intTicker) {\n        alert(\"Please enter BRC-20 ticker\")\n        return\n      }\n      if (!this.intAmount) {\n        alert(\"Please enter the amount to inscribe\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        ticker:this.intTicker,\n        amount:this.intAmount\n      }, \"btc_inscribeTransfer\")\n    },\n\n\n\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./BtcTransactionPanel.vue?vue&type=template&id=759766a0&scoped=true\"\nimport script from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./BtcTransactionPanel.vue?vue&type=style&index=0&id=759766a0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-759766a0\"]])\n\nexport default __exports__","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_getAccount()\">getAccount(Fractal)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signMessage()\">signMessage(Fractal)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_send()\">send(Fractal)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_sendBitcoin()\">sendBitcoin(Fractal)</el-button>\n\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signPsbt_up()\">signPsbt(上架NFT)</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_signAndPushPsbt_up()\">signAndPushPsbt(上架NFT)</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在OKX App选择要上架的Fractal NFT，点击【上架】\n        </li>\n        <li>\n          2. 弹出签名面板，点开高级选项，查看\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出上架流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_sendInscription()\">sendInscription(Fractal)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Fractal NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"runsAddress\" clearable placeholder=\"the receiver address\" />\n      <el-input class=\"grid-content\" v-model=\"runsId\" clearable placeholder=\"the runeid\" />\n      <el-input class=\"grid-content\" v-model=\"runsAmount\" clearable placeholder=\"the amount to send\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_sendRunes()\">fractal_sendRunes(fractal)</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model= \"intTicker\" clearable placeholder=\"BRC-20 ticker \" />\n      <el-input class=\"grid-content\" v-model=\" intAmount\" clearable placeholder=\" the amount to inscribe\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_inscribeTransfer()\">fractal_inscribeTransfer(fractal)</el-button>\n    </el-col>\n\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    const runsAddress = ref('')\n    const runsId = ref('')\n    const runsAmount = ref('')\n    const intTicker = ref('')\n    const intAmount = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount,\n      runsAddress,\n      runsId,\n      runsAmount,\n      intTicker,\n      intAmount\n    }\n  },\n  methods: {\n\n    fractal_getAccount() {\n      this.$emit('generateTransactionParams', {}, \"fractal_getAccount\")\n    },\n\n    fractal_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to UniSat!\\n\\nClick to sign in and accept the UniSat Terms of Service (https://unisat.io/terms-of-service.html) and Privacy Policy (https://unisat.io/privacy-policy.html).\\n    \\nThis request will not trigger a blockchain transaction.\\n    \\nYour authentication status will reset after 24 hours.\\n    \\nWallet address:\\nbc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\\n    \\nNonce:\\n162d70e3-8c21-4cfd-9a22-9bf0a4b7be51\\n\"\n      };\n      this.$emit('generateTransactionParams', params, \"fractal_signMessage\")\n    },\n\n    fractal_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_send\")\n    },\n\n    fractal_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_sendBitcoin\")\n    },\n\n    fractal_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"fractal_signPsbt\")\n    },\n\n    fractal_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"fractal_signAndPushPsbt\")\n    },\n\n    fractal_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"fractal_sendInscription\")\n    },\n\n    fractal_sendRunes() {\n      if (!this.runsAddress) {\n        alert(\"Please enter the receiver address\")\n        return\n      }\n      if (!this.runsId) {\n        alert(\"Please enter the runsId\")\n        return\n      }\n      if (!this.runsAmount) {\n        alert(\"Please enter the amount to send \")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        address:this.runsAddress,\n        runeid:this.runsId,\n        amount:this.runsAmount\n      }, \"fractal_sendRunes\")\n    },\n\n    fractal_inscribeTransfer() {\n      if (!this.intTicker) {\n        alert(\"Please enter BRC-20 ticker\")\n        return\n      }\n      if (!this.intAmount) {\n        alert(\"Please enter the amount to inscribe\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        ticker:this.intTicker,\n        amount:this.intAmount\n      }, \"fractal_inscribeTransfer\")\n    },\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./FractalTransactionPanel.vue?vue&type=template&id=07ed8044&scoped=true\"\nimport script from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./FractalTransactionPanel.vue?vue&type=style&index=0&id=07ed8044&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-07ed8044\"]])\n\nexport default __exports__","<script>\n\nimport {getFullnodeUrl, SuiClient} from \"@mysten/sui/client\";\nimport {Transaction as SuiTransaction} from '@mysten/sui/transactions';\n\nexport default {\n  name: \"SuiTransactionPanel\",\n  methods: {\n    sui_getAccount() {\n      this.$emit('generateTransactionParams', '', \"sui_getAccount\")\n    },\n\n    //对单个交易签名（不发送)\n    async sui_signMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signMessage\")\n    },\n\n    async sui_signPersonalMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signPersonalMessage\")\n    },\n\n    sui_signTransaction2() {\n      // 定义要转移的金额和目标地址\n      const amount = 109; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    async sui_requestRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n          `sui:mainnet`,\n          `https://fullnode.mainnet.sui.io:443`\n      );\n      var data = {\n        method: \"suix_getBalance\",\n        params: [\n          \"0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae\",\n          \"0x168da5bf1f48dafc111b0a488fa454aca95e0b5e::usdc::USDC\",\n        ],\n      };\n\n      this.$emit(\"generateTransactionParams\", data, \"sui_testRpc\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 102; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signAndExecuteTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n      this.$emit(\"generateTransactionParams\", input, \"sui_signAndExecuteTransaction\")\n    },\n\n    /// generate txBytes and txSerialize\n    async generateTsBytesAndSerizlize(input) {\n      /// txBytes and txSerialize may be constructed in advance by the dapp side\n      let resultTuple = [\"\", \"\"];\n      if (\n          \"txBytes\" in input &&\n          input.txBytes.length > 0 &&\n          \"txSerialize\" in input &&\n          input.txSerialize.length > 0\n      ) {\n        resultTuple = [input.txBytes, input.txSerialize];\n      }\n\n      /// Otherwise, a transactionBlock parameter is required.\n      if (!(\"transactionBlock\" in input)) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      // if (this.walletAddress != \"connected\") {\n      //   alert(\"请先连接钱包\");\n      //   return new Promise((resolve) => {\n      //     resolve(resultTuple);\n      //   });\n      // }\n\n      let senderAccounts = window.provider.requestAccountsWithNamespace(\"sui\");\n      if (senderAccounts.length == 0) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      try {\n        let rpcUrl = getFullnodeUrl(\"mainnet\");\n        rpcUrl = \"https://www.okx.com/fullnode/sui/discover/rpc\"\n        const suiClient = new SuiClient({ url: rpcUrl });\n\n        /// sender is required\n        input.transactionBlock.setSender(senderAccounts[0]);\n        const result = await input.transactionBlock.build({\n          client: suiClient,\n        });\n        const txBytes = Buffer(result).toString(\"base64\");\n        const txSerialize = await SuiTransaction.from(txBytes).toJSON();\n        resultTuple = [txBytes, txSerialize];\n      } catch (error) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      return new Promise((resolve) => {\n        resolve(resultTuple)\n      })\n    },\n\n    //签名并发送交易\n    sui_signAndExecuteTransaction() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n        \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.testTransaction = JSON.stringify(input);\n      this.currentSuiTransaction = input;\n      this.currentSuiMethod = \"sui_signAndExecuteTransaction\";\n    },\n  },\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_getAccount()\">getAccount(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signMessage()\">signMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signPersonalMessage()\">signPersonalMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signTransaction2()\">signTransaction(Sui)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signAndExecuteTransaction()\">sendTransaction(Sui)</el-button>\n      <div style=\"font-size: 12px; color: gray;\">(send to Rally Tiger account)</div>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_requestRpc()\">RPC_getBalance</el-button>\n      <div style=\"font-size: 12px; color: gray;\">get USDC balance of address:</div>\n      <div style=\"font-size: 12px; color: gray\">0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae</div>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signTransaction_pre_execution()\">signTransaction(prepared data)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signAndExecuteTransaction_pre_execution()\">sendTransaction(prepared data)</el-button>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./SuiTransactionPanel.vue?vue&type=template&id=56a8eddf&scoped=true\"\nimport script from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./SuiTransactionPanel.vue?vue&type=style&index=0&id=56a8eddf&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-56a8eddf\"]])\n\nexport default __exports__","<script>\nimport { OKXStarknetProvider } from \"@okxconnect/universal-provider\";\nimport { CallData, uint256, RpcProvider, Account } from \"starknet\";\n\nexport default {\n  name: \"StarknetTransactionPanel\",\n  methods: {\n    async starknet_signMessage() {\n      this.address = this.getCurrentAddress()\n      if (this.address === \"\") {\n        alert(\"address can't be ''\");\n        return\n      }\n\n      let signData = this.signData\n      this.$emit(\"generateTransactionParams\", JSON.stringify(signData))\n      let provider = new OKXStarknetProvider(window.provider)\n      let res = await provider.signMessage(this.address, signData, \"starknet:mainnet\")\n      if (res.code) {\n        if (res.code == 301) {\n          let msg = \"Wallet address is registering, please try again later!\"\n          alert(msg)\n          this.$emit(\"generateTransactionResult\", msg, \"starknet_signMessage\")\n        }\n        this.$emit(\"generateTransactionResult\", res, \"starknet_signMessage\")\n        return\n      }\n      console.log(res)\n\n      const rpcProvider = new RpcProvider({ nodeUrl: \"https://free-rpc.nethermind.io/mainnet-juno/v0_7\" });\n      let pk = \"0x123\"; /// random pk\n      const account = new Account(rpcProvider, this.address, pk)\n      let that = this\n      account.verifyMessage(signData, res).then(function (isValid) {\n        that.$emit(\"generateTransactionResult\", \"verify:\" + isValid + \"\\n\" + res, \"starknet_signMessage\")\n      }).catch(function (error) {\n        that.$emit(\"generateTransactionResult\", \"failed:\" + error + \"\\n\" + res, \"starknet_signMessage\")\n      })\n    },\n\n    async starknet_sendTransaction() {\n      this.address = this.getCurrentAddress()\n      if (this.address === \"\") {\n        alert(\"address can't be ''\");\n        return\n      }\n\n      let val = uint256.bnToUint256(120000000000000000)\n      const transferCalldata = CallData.compile({\n        to: \"0x00b909cefa36ab6bc26f5887a867e46ef162238f0a171b1c2974b665afd4237f\",\n        value: val\n      })\n\n      // const ETHTokenAddress = \"0x049d36570d4e46f48e99674bd3fcc84644ddd6b96f7c741b1562b82f9e004dc7\"\n      // const STARKTokenAddress = \"0x04718f5a0fc34cc1af16a1cdee98ffb20c31f5cd61d6ab07201858f4287c938d\"\n      const DAITokenAddress = \"0x00da114221cb83fa859dbdb4c44beeaa0bb37c7537ad5ae66fe5e0efd20e6eb3\"\n\n      const invokeParams = {\n        calls: [\n          {\n            contract_address: DAITokenAddress,\n            entry_point: \"transfer\",\n            calldata: transferCalldata\n          }\n        ],\n      }\n\n      this.$emit(\"generateTransactionParams\", JSON.stringify(invokeParams))\n      let provider = new OKXStarknetProvider(window.provider)\n\n      let that = this\n      provider.sendTransaction(this.address, invokeParams, \"starknet:mainnet\").then(function(res){\n        console.log(\"starknet_sendTransaction result \", res)\n        that.$emit(\"generateTransactionResult\", res, \"starknet_sendTransaction\")\n      }).catch(function(error) {\n        if (error.code == 301) {\n          let msg = \"Wallet address is registering, please try again later!\"\n          alert(msg)\n          that.$emit(\"generateTransactionResult\", msg, \"starknet_sendTransaction\")\n        }else {\n          that.$emit(\"generateTransactionResult\", error, \"starknet_sendTransaction\")\n        }\n      });\n    },\n\n    getCurrentAddress() {\n      let provider = new OKXStarknetProvider(window.provider)\n      const address = provider.getAccount(\"starknet:mainnet\")?.address\n      return address\n    },\n\n    getPublicKey() {\n      let provider = new OKXStarknetProvider(window.provider)\n      const account = provider.getAccount(\"starknet:mainnet\")\n      console.log(\"获取到的account是：\")\n      console.log(account)\n      return \"05d8e5e9c1dd686246716c888159271d2f13986cb4acee46164e2c4e034629c0\"\n    }\n  },\n\n  data() {\n    const signData = {\n        \"domain\": {\n          \"chainId\": \"0x534e5f4d41494e\",\n          \"name\": \"STRKFarm\",\n          \"version\": \"1\"\n        },\n        \"message\": {\n          \"document\": \"app.strkfarm.xyz/tnc/v1\",\n          \"message\": \"Read and Agree T&C\"\n        },\n        \"primaryType\": \"Tnc\",\n        \"types\": {\n          \"StarkNetDomain\": [\n            {\n              \"name\": \"name\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"version\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"chainId\",\n              \"type\": \"felt\"\n            }\n          ],\n          \"Tnc\": [\n            {\n              \"name\": \"message\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"document\",\n              \"type\": \"felt\"\n            }\n          ]\n        }\n    }\n\n    return {\n      signData\n    }\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"starknet_signMessage()\">signMessage</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 验签不成功的话，请尝试连接VPN\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"starknet_sendTransaction(true)\">\n        sendTransaction\n      </el-button>\n\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 发送0.12个DAI到0x00b9...4237f的地址\n        </li>\n        <li>\n          2. 请保证你的钱包有足够的DAI\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./StarknetTransactionPanel.vue?vue&type=template&id=082fda2b&scoped=true\"\nimport script from \"./StarknetTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./StarknetTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./StarknetTransactionPanel.vue?vue&type=style&index=0&id=082fda2b&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-082fda2b\"]])\n\nexport default __exports__","<script>\n\n\nimport {OKXTronProvider} from \"@okxconnect/universal-provider\";\nimport {TronWeb} from \"tronweb\";\n\nexport default {\n  name: \"TronTransactionPanel\",\n  methods: {\n\n    async tron_signMessage() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessage(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n\n      const verify = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), res, provider.getAccount(\"tron:mainnet\").address)\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" + res, \"tron_signMessage\")\n    },\n\n    async tron_signMessageV2() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessageV2(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", res);\n      console.log(\"tron_signMessageV2_base58Address\", base58Address)\n      console.log(\"tron_signMessageV2_address\", provider.getAccount(\"tron:mainnet\").address)\n      const verify = base58Address === provider.getAccount(\"tron:mainnet\").address\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" +  res, \"tron_signMessage\")\n    },\n\n    async tron_signTransaction(isOnlySign) {\n      let provider = new OKXTronProvider(window.provider)\n        let tronWeb = new TronWeb({\n          \"fullHost\": 'https://api.trongrid.io',\n          \"headers\": {},\n          \"privateKey\": ''\n        })\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const transaction = await tronWeb.transactionBuilder.sendTrx(\"TGBcVLMnVtvJzjPWZpPiYBgwwb7th1w3BF\", 1000, address);\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let res = await provider.signTransaction( transaction, \"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", res, \"tron_signTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async getContract() {\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n      \n      try {\n        const contract = await tronWeb.trx.getContract(contractAddress)\n        const abi = contract.abi.entrys;\n        console.log(\"获取到的合约：\")\n        console.log(abi)\n      } catch (error) {\n        console.log(\"Error getting contract ABI:\", error);\n      }\n    },\n    \n    async tron_signAndSendTransactionContract(isOnlySign) {\n      // this.getContract()\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n      ]\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"quote(uint256,uint256,uint256)\", {}, parameter, address);\n      console.log(\"=====>transaction: \")\n      console.log(ret);\n      this.$emit(\"generateTransactionParams\", ret.transaction)\n      if (isOnlySign) {\n        let tx = await provider.signTransaction( ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async tron_signAndSendTransactionApprove(isOnlySign) {\n      let contractAddress = \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'address', value: contractAddress},\n        {type: 'uint256', value: 1000},\n      ]\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"approve(address,uint256)\", {}, parameter, address);\n\n      let transaction = ret.transaction\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let tx = await provider.signTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n\n    }\n\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessage()\">tron_signMessage</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessageV2()\">tron_signMessageV2</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(true)\">\n        tron_signTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(true)\">\n        tron_signTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(true)\">\n        tron_signTransaction(Approve)\n      </el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(false)\">\n        tron_signAndSendTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(false)\">\n        tron_signAndSendTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(false)\">\n        tron_signAndSendTransaction(approve)\n      </el-button>\n    </el-col>\n\n\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./TronTransactionPanel.vue?vue&type=template&id=55a13ab0&scoped=true\"\nimport script from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./TronTransactionPanel.vue?vue&type=style&index=0&id=55a13ab0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-55a13ab0\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=63ec20cb&scoped=true\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=63ec20cb&scoped=true&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-63ec20cb\"]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\nimport App from './App.vue'\n\nconst app = createApp(App)\n\napp.use(ElementPlus)\napp.mount('#app')","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkokxconnectdemo\"] = self[\"webpackChunkokxconnectdemo\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(73844); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["Object","defineProperty","exports","value","CONNECT_METHOD_BATCH_FETCHMSG","CONNECT_METHOD_FETCHMSG","CONNECT_METHOD_RECEIVE","CONNECT_METHOD_UNSUB","CONNECT_METHOD_SUB","CONNECT_METHOD_PUBLISH","CONNECT_METHOD_LOGIN","CONNECT_METHOD_PUSH","require","__createBinding","this","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","__setModuleDefault","v","__importStar","mod","result","prototype","hasOwnProperty","call","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","e","rejected","done","then","apply","OKXWalletConnector","constants_1","storageconstants_1","storage_1","utils_1","utils_2","eventemitter3_1","log","protocol_1","report_1","WS","resolveWebSocketImplementation","constructor","url","events","EventEmitter","state","ConnectorState","InitState","selectedUrlIndex","retryCount","timeOutLimit","checkWSUrl","Error","heartbeatTimer","connectionTimeoutTimer","connectURLStorage","Storage","OKXCONNECTOR_CACHE_KEY","connecting","Connecting","onPayload","data","logDebug","rsp","Date","now","toString","emit","onClose","event","_a","socket","code","onError","id","payload","msg","onopen","onmessage","onclose","Connected","emitError","errorEvent","heartbeat","clearTimeout","OnError","readyState","WebSocket","OPEN","send","setTimeout","bind","tryRegistOpen","logError","registOpen","inRetry","toUTCString","URLSearchParams","startTimeOutTimer","hasBuiltInWebSocket","onerror","close","on","resetTimeOutTimer","OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE","FINISHED","checkMaxRetry","OKXCONNECTOR_WS_URL_LIST","length","connectionTryNext","nextUrl","getNextSelectUrl","CANCELED","pendingSocket","TIME_OUT","reportEvent","OKXReportType","LOG","cacheSuccessUrlSelect","saveContent","onVisibleChanged","document","visibilityState","arguments","once","err","OKXConnectError","OKX_CONNECT_ERROR_CODES","CONNECTION_ERROR","connect","removeEventListener","addEventListener","disconnect","Disconnected","currentStatus","addListener","decrypt","success","failed","splitCheckComplete","listenPayloadHandler","removeListener","parsedEvent","safeJsonParse","params","rawMsg","message","skipMsg","checkResult","isSplitPackage","finalMessage","failHandler","addPackageParse","callback","payloadHandler","param","listener","off","doLogin","safeJsonStringify","getMsgPayloadFromHistory","tmpMsg","jsonstr","onOpen","openHandler","ConnectionManager","connect_1","commands_1","jwtconstants_1","crypto_1","jwt_1","safejson_1","log_1","url_1","connectionSplitPackages_1","appname","splitManager","ConnectionSplitPackages","connectStorage","OKXCONNECTOR_CACHE_KEY_DAPP","tonsdkConnectStorage","OKXCONNECTOR_TON_KEY","crypto","SessionCrypto","inTMA","isInTMA","reportLog","keyPairInfo","getCachedCryptoKeyPair","jwtKeyPair","getCachedJWTKeyPair","saveJWTKeyPair","connector","OKXCONNECTOR_WS_URL_1","packageId","connectedWalletPK","currentTopic","refreshPackageId","nowDate","saveCryptoKeyPair","keyPair","cacheInfo","encryptStoreMsg","OKXCONNECTOR_CRYPTO_KEY","kp","getAndDecrypt","content","clearCache","strkeyPair","publicKey","toHexString","secretKey","OKXCONNECTOR_JWT_KEY","strKeyPairInfo","hexToByteArray","generateKeyPair","isWalletPKReady","makeJWT","topic","signJWT","OKXCONNECTOR_JWT_SIDE","OKXCONNECTOR_JWT_TTL","parsePackage","input_1","input","ignoreACK","_b","_c","_d","_e","_f","_g","_h","_j","_k","_l","_m","_o","sendACK","getItem","OKXCONNECTOR_TOKEN_CACHE","inputObj","messageId","msgPlayloadObject","tryParseMessageSplitPayload","msgObject","topicId","messageObject","publishedAt","onReceivedPackageCheck","completeMessageIdList","forEach","msgId","sendReceive","restoreConnect","getConnectInfo","generateTopic","info","channelId","clientId","stringifyKeypair","fromRestore","timeLog","getTime","lastConnectId","cachedSenderPublicKey","OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE","jwtToken","timeOne","error","name","timeF","sendFetchAndConsumeMessages","init","sendRaw","timeTh","catch","jsonrpc","CONNECT_JSONRPC_VER","method","token","replace","parsedMessage","updateProtocolVersion","protocolVersion","updateTopicSenderVersion","fail","msgObj","trimStart","startsWith","inputDataObj","msgResult","ttl","OKXCONNECTOR_MESSAGE_TTL","sendEncryptedMsg","topic_1","encryptedMsg_1","encryptedMsg","msg_1","encrypt","sendSplitPackages","msgId_1","success_1","reason","fetchedMessages","hasMore","receivedMsgs","i","timeFive","cleanCache","saveSessionContent","key","OKXCONNECTOR_SESSION_PREFIX_KEY","jsonData","getSessionContent","jsonStr","object","getCurrentConnectionReady","__importDefault","localforage_1","ConnectionSplitSupportedVersionLimit","ConnectionSplitSupportedSizeLimit","ConnectionReceiveKey","ConnectionSendKey","ConnectionTopicVersionKey","side","splitMessageSendArray","Map","splitMessageReceivedArray","splitMessageSenderVersionMap","splitPackageCache","default","createInstance","OKXCONNECTOR_STORAGE_PROTOCOL_CACHE","sendRawMsg","recoverFromCache","size","payloadList","entries","splice","syncCache","messageObj","protocol_version","protocolMessageObject","package_group_id","set","sendMsg","senderVersion","msgLength","msg_parts","msg_part_length","push","slice","groupId","generateGroupId","splitMessagePackages","map","index","total_count","package_index","mergePackageArray","completeMap","inputTopic","itemList","item","messageCache","Array","index_check","Set","add","sort","a","b","messageList","reduce","msgList","messageIdList","msgIdList","join","receivedList","filter","includes","isSending","inputPayloadArray","inputSendArray","filtedArray","accept","sendCacheArray","cachedPayload","sendArray","concat","inputReceiveArray","receiveCacheArray","receiveArray","setItem","rec_array","send_array","CONNECT_PROTOCOL_VER","OKXCONNECTOR_WS_URL_IDX_KEY","OKXCONNECTOR_WS_URL_3","OKXCONNECTOR_WS_URL_2","EVENT_EMITTER_MAX_LISTENERS","OKXCONNECTOR_PROTOCOL_VERSION","Engine","iconnector_1","connectionManager_1","sessionUtils_1","wallet_info_1","appName","connectors","useConnector","connectionManager","addConnectionListener","getConnector","setAccountChangeListener","accountChangeListener","registerConnector","setConnectionManager","hasWsConnector","isWsConnector","getTag","OKX_TG_WALLET","OKX_APP_WALLET","isInjectedConnector","OKX_INJECT_WALLET","universalConnect","request","sessionConfig","connectInfoAndUrl","JSON","stringify","universalRequest","connectInfo","requestId","openUniversalLink","openUniversalUrl","universalConnectRequest","protocolVer","Number","tonConnectSdkVersion","dAppInfo","dappInfo","requests","redirect","base64Encoded","encodeConnectParams","openOKXLink","getOKXLink","useMini","tmaReturnUrl","openMethod","openWallet","connectRequest","openOKXTMAWalletlinkWithFallback","useShortLink","openOKXUniversalLink","openOKXDeeplinkWithFallback","isIOS","isIos","addOnConnectResultListener","response","connectResponse","namespaces","buildNameSpacesByConnectResponse","UNKNOWN_ERROR","walletName","responses","wallet","tag","OKXWalletName","OKXMiniWalletName","OKXInjectWalletName","find","session","assign","methodsResponse","connectRequestMethods","signResponse","maxProtocolVersion","setUseConnector","sendSession","connectResultListener","setOnConnectResultListener","engineConnectInfo","requestAnswer","fromOKXTonsdk","clearData","addDisconnectListener","disconnecter","getTagByappName","setConnectConnector","setSessionConnectingListener","sessionConnectingListener","restoreconnect","sessionInfo","onConnectResult","restoreconnectFromTopic","namespaceKeys","connectManagerDisconnect","jsonResponse","WalletConnectionManager","walletConnectionManager_1","engine_1","MULTICODEC_ED25519_LENGTH","MULTICODEC_ED25519_HEADER","MULTICODEC_ED25519_BASE","MULTICODEC_ED25519_ENCODING","DID_METHOD","DID_PREFIX","DID_DELIMITER","KEY_PAIR_SEED_LENGTH","DATA_ENCODING","JSON_ENCODING","JWT_ENCODING","JWT_DELIMITER","JWT_IRIDIUM_TYP","JWT_IRIDIUM_ALG","JWTHeaderType","decodeJSON","encodeJSON","encodeIss","decodeIss","encodeSig","decodeSig","encodeData","decodeData","encodeJWT","decodeJWT","verifyJWT","ed25519","tweetnacl_1","stringUtils_1","sign","str","okxtoString","okxfromString","val","publicKeyStr","issuer","prefix","multicodec","split","bytes","encoded","header","signature","jwt","sub_1","aud_1","ttl_1","keyPair_1","sub","aud","iat","Math","floor","alg","typ","iss","exp","act","detached","verify","OKXCONNECTOR_JWT_WALLET_SIDE","buildRequestAccountNameSpacesByConnectResponse","buildAccountNameSpaces","requestAccountNameSpaces","universalResponse","accounts","filterAccount","namespace","ton_addr","address","tonAddress","tonProof","network","ton_proof","addresses","methods","extra","chains","addressItem","addressArr","chain","utils_3","crypto_js_1","subKey","beforeKey","localStorage","resolveLocalStorage","checkAndUpgradeCache","storeKey","cipherIV","cacheStr","cacheKey","cache","cacheObj","fromCacheKey","toCacheKey","removeItem","timestamp","saveItem","localKey","totalCacheStr","getCachedPBKDF2InfoKey","pwLen","saltLen","pw","iv","salt","OKXCONNECTOR_STORAGER_CRYPTO_SALT","randomBytes","OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD","OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV","ivBuffer","PBKDF2","iterations","storeInfo","AES","enc","Utf8","OKXCONNECTOR_STORAGE_CIPHER_METHOD","WalletConnectionManagerEvent","WalletConnectionManagerTopicInfoCacheKey","RECEIVE_REQUEST","walletConnectionConstants_1","communicateEvents","sessionCryptoInfoMap","inLogin","isLogined","offset","isTopicPublicKeyExist","timestampStr","parseInternalMsg","internalMsg","internalObj","origin","originContent","base64decode","updateClientId","cid","lastCheck","getLastSixMd5Hash","dappPublicKey","syncCacheSessionInfo","_p","_q","_r","_s","ignoreReceive","isInternalData","inner_message","inner_topic","decryptWallet","sessionInfoString","base64Content","inner_connection","toObject","recovrySessionInfoFromCache","cacheMap","topicItem","cryptoItem","cryptoKeyPair","cacheSessionInfo","sync","duplicatedTopics","delete","appendTopic","sessionPublicKey","subscribeTopics","from","confirmAppendingTopics","keys","getSessionPublicKey","getCurrentCachedTopicIdList","needPublicKey","useRaw","connectedDappPK","cryptoObject","useCrypto","encryptWallet","messageStr","sendUnsubscribe","sendBatchFetchAndConsumeMessages","topicIdList","topics","withInternalData","finishCount","idx","AppwalletConnector","ws_connector_1","WsConnector","instance","super","walletNameKey","shortUniversalLink","appConnectEncodeParams","appDeepLink","getAppWalletDeepLink","isOS","openDeeplinkWithFallback","stackDeepLink","openLinkBlank","standardUniversalLink","OkxwalletInjectConnector","TgwalletConnector","InjectConnector","appwallet_connector_1","inject_connector_1","tgwallet_connector_1","okxwallet_inject_connector_1","SolProvider_1","AptosProvider_1","media_1","TONProvider_1","inject_1","sui_provider_1","disconnectListener","providerMap","accountChangedEVMHandler","accountChangedSolanaPublicKeyHandler","accountChangedTONHandler","disconnectHandler","enable","NameSpaceKeyEip155","Eip155Provider","NameSpaceKeySOL","SolProvider","NameSpaceKeyAptos","AptosProvider","NameSpaceKeyTON","TONProvider","NameSpaceKeySui","SuiProvider","getInjectProvider","nameSpace","mapKey","BAD_REQUEST_ERROR","window","okxwallet","requestAccounts","version","getVersion","platform","navigator","appVersion","responseItem","required","requiredNamespaces","optional","optionalNamespaces","needPop","signalChain","isDevice","singleItem","singleProvider","getAccountByRequestWallets","console","getRequestId","newRequest","onAck","checkTonsdkWalletMatch","checkWalletMatch","injectProvider","chainId","USER_REJECTS_ERROR","errorResponse","CHAIN_NOT_SUPPORTED","stored","NOT_CONNECTED_ERROR","localAddress","connection","parse","localItem","connectEvent","items","WALLET_NOT_SUPPORTED","okxTonWallet","tonconnect","restoreConnection","sessionLocal","checkAccountChanged","getRequireNameSpaceFromSession","resultNameSpace","compareAndModifyNamespaces","nameSpaces1","nameSpaces2","isAccountsSame","ns1","ns2","areAccountsSame","_","allReady","every","namespaceKey","connectReady","toJSON","namespacesKey","connectWalletNameSpace","aptosChains","chainStr","aptosChain","replaceAptosChainName","ton_proof_result_Item","proofItem","proof","allEqual","accountsItem","sessionAccounts","areEqual","aptosAdd","isAccountChange","walletInfo","accountResult","walletInfoItem","connectWallet","requestWallets","allNameSpace","eventkey","walletInfoFirst","hasTON","provider","itemResult","parseConnectResponse","cheeckRequire","requireItem","resultSel","resultItem","hasChainAdd","addItem","configEventWithKey","solana","sui","encodeTGParams","encodeTWAConnectURLParams","tgUrl","getTelegramWalletTWAUrl","pendingRequests","getDefaultReporter","beginReport","handleResponse","bindRequestForPromise","clear","nonceLength","sessionKeyPair","createKeypairFromString","createKeypair","box","createNonce","receiverPublicKey","encodedMessage","TextEncoder","encode","nonce","encrypted","concatInfo","concatUint8Arrays","hexResult","encodedResult","base64encode","senderPublicKey","messageByteArray","toUint8Array","internalMessage","splitToUint8Arrays","decrypted","open","TextDecoder","decode","__exportStar","p","hasOKXInjectedProvider","getWindowProviderNamespace","providerSearch","property","path","_provider","SuiMethods","TONMethods","AptosMethods","SOLANAMethods","Eip55Methods","InjectUtils_1","injectParams","aptos","signMessage","signTransaction","signAndSubmitTransaction","hash","METHOD_NOT_SUPPORTED","accountChange","connectRequestWalletResponse","connectChain","selectedAddress","coinType","namespaceChainId","nameSpaceResponse","bs58_1","signedMessage","bufferResult","injectResult","allResult","signAllTransactions","signAndSendResult","signAndSendTransaction","signalChainConnectResult","tonParams","resultMe","getChainId","tonResult","tonItem","manifestUrl","itmes","needProof","ethParams","typedDataJson","switchChainId","parseInt","resultSwitch","chainHex","currentChain","getSuiPublicKey","suiAccount","suiPublicKey","getSuiWallet","originalRarams","injectSignResult","features","signTransactionBlock","injectSendResult","signAndExecuteTransactionBlock","digest","injectPersonalResult","signPersonalMessage","TON_CHAINS","COSMOS_CHAINS","APTOS_CHAINS","SUI_CHAINS","SOLANA_CHAINS","BTC_CHAINS","MAINNET","FRACTAL","TESTNET","SONIC_TESTNET","COSMOS_MAINNET","IEngine","ISignClient","ISignClientEvents","IEngineEvents","client","creatOKXInjectWalletInfo","creatOKXMiniAppWalletInfo","creatOKXWalletInfo","getBigIntRpcId","formatJsonRpcRequest","isJsonRpcError","isJsonRpcResponse","parseConnectionError","isHttpUrl","formatJsonRpcError","json_rpc_1","isJsonRpcPayload","isJsonRpcRequest","isJsonRpcResult","payloadId","formatJsonRpcResult","isReservedErrorCode","getError","getErrorByCode","formatErrorMessage","isWsUrl","okx_connect_error_1","IncrementalRandomGenerator","bits","Uint8Array","Uint16Array","Uint32Array","initialValue","getNextValue","uint8Generator","uint16Generator","date","BigInt","RESERVED_ERROR_CODES","type","STANDARD_ERROR_MAP","DEFAULT_ERROR","match","values","INTERNAL_ERROR","SERVER_ERROR","getUrlProtocol","matches","RegExp","matchRegexProtocol","regex","protocol","test","CONNECT_ITEM_ERROR_CODES","TONCHAIN","connect_wallet_1","connect_event_1","getTestTwaUrl","okxTesttwaUrl","getTestTgTwaUrl","okxTestTgtwaUrl","getBotNameAndAppName","urlObj","URL","pathnameParts","pathname","Boolean","botName","OKX_MINI_WALLET_NAME","OKX_APP_WALLET_NAME","tgwalletAppName","tgwalletName","standardDeeplink","downloadUrl","okxDeeplink","location","hostname","SERVER_ERROR_CODE_RANGE","INVALID_PARAMS","METHOD_NOT_FOUND","INVALID_REQUEST","PARSE_ERROR","getDefaultMessageByCode","setPrototypeOf","ALREADY_CONNECTED_ERROR","UNKNOWN_APP_ERROR","USER_REJECTS_ERROR_CAUSE_REGISTER","NameSpaceKeyStarknet","NameSpaceKeyTron","NameSpaceKeyCosmos","NameSpaceKeyBtc","misc_1","chains_1","callForSuccess","fn","options","attempts","delayMs","lastError","delay","timeout","signal","aborted","timeoutId","checkMetaData","versionCompare","isBrowser","isMobileUserAgent","openLink","toSafeBase64FromBase64","isValidObject","getAppWalletShortDeepLink","encodeTelegramUrlParameters","isTelegramUrl","openOKXDeeplink","getUniversalLink","logWarning","call_for_success_1","web_api_1","tma_api_1","request_1","debug","forceReport","defaultReporter","OKXReporter","packageJson","args","okxLogDebug","sendRecordContent","warn","action","content_1","mediaNotTouch","mediaTouch","maxWidth","media","mediaMin","mediaMax","mediaMinMax","device","getWindow","isTmaPlatform","width","innerWidth","tablet","mobile","isMobile","isTelegram","TelegramWebviewProxy","maxTouchPoints","px","pxMin","pxMax","OKXReportSide","versionStr","cross_fetch_1","reportApiList","reportCacheKey","reportUUIDKey","MAX_LIMIT_REPORTCOUNT","DEFAULT_HTTP_HEADERS","Accept","DEFAULT_HTTP_METHOD","DEFAULT_FETCH_OPTS","headers","PAGE_IN","PAGE_OUT","CLICK","DAPP","WALLET","fetchListWithTimeout","urls_1","args_1","urls","controller","AbortController","fetchPromise","timeoutPromise","abort","race","ok","status","currentSide","currentVersion","storage","recordList","currentUUID","configVersionAndSide","recordCacheKey","reportPlatform","startErrorCatching","records","uuid","sendCachedRecords","cachedErrors","sendRecord","record","body","res","language","ua","userAgent","reportItem","lang","markRecordItem","sendList","allSettled","results","keepIndex","markRecord","Report_WalletType_Key","Report_Proceed_QRCode_Click","Report_ChooseType_Download_Click","Report_ChooseType_ConnectWallet_Click","Report_Proceed_Retry_Click","Report_ChooseType_ConnectWallet_View","Report_Loading_ConnectWallet_View","Report_Proceed_QRCode_View","Report_Proceed_Proceed_View","dappMetaData","icon","JSONStringify","JSONParse","json","numbersBiggerThanMaxInt","serializedData","group","isCustomFormatBigInt","substring","alloc","allocUnsafe","basics_1","string","encoding","base","BASES","decoder","array","encoder","createCodec","buf","ascii","bufNum","String","fromCharCode","charCodeAt","utf8","hex","bases","base16","latin1","binary","inTg","isInTelegramBrowser","sendExpand","sendOpenTelegramLink","initParams","locationHash","urlParseHashParams","tmaPlatform","tgWebAppPlatform","Telegram","WebApp","webAppVersion","tgWebAppVersion","platforms","isTelegramWebview","TelegramWebview","postEvent","link","fallback","pathFull","search","isIframe","versionAtLeast","path_full","parent","eventType","eventData","external","notify","trustedTarget","postMessage","indexOf","_path","urlSafeDecode","qIndex","pathParam","substr","query_params","urlParseQueryString","urlencoded","decodeURIComponent","queryString","paramName","paramValue","queryStringParams","v1","v2","p1","p2","v1List","v2List","max","ver","removeUrlLastSlash","addPathToUrl","constants_2","deeplinkUrl","useStandardUniversalLink","deeplinkEncodeUrl","encodeURIComponent","fullUrl","newWindow","href","deepLinkOpened","timeoutDuration","fallbackToDownloadPage","parameters","encodedParameters","connectRequestWithVersion","connectRequestStr","utf8Array","btoa","connectParam","redirectStr","okxconnect","extraparams","fromtg","base64ContentStr","urlSafeBase64","twaDeepLink","openTelegramLink","RANDOM_LENGTH","hasLocalStorage","hashKey","generateRandomBytes32","tweetnacl_util_1","to_string_1","sha256_1","BASE16","hexString","byteArray","byte","buffer1","buffer2","mergedArray","subArray1","subArray2","encodeUint8Array","urlSafe","encodeBase64","decodeToUint8Array","decodeBase64","uint8Array","decodeUTF8","decodedUint8Array","encodeUTF8","scheme","global","self","randomBytes32","obj","getPrototypeOf","isIOSDevice","MSStream","isIPadOS","MD5","base64","newChain","getUserAgent","ua_parser_js_1","target","doFallback","fallbackTimeout","check","vendor","opera","getResult","osName","os","toLowerCase","deviceModel","model","browserName","browser","OKXBtcProvider","_1","core_1","caip","getAddressForChainId","ns","checkChainId","account","getAccount","signStr","ret","errorData","sendBitcoin","toAddress","satoshis","to","feeRate","txhash","checkParameters","signPsbt","psbtHex","signPsbts","psbtResults","psbtHexs","signAndPushPsbt","sendInscription","inscriptionId","extension","coinId","protocolId","atomicSuffix","ordinalsSuffix","endsWith","removeSuffix","scenario","txType","batchBean","coinAmount","nftId","sendRunes","runeid","amount","fromAddress","inscribeTransfer","ticker","suffix","unexistKeys","OKXCosmosProvider","accountArray","algo","bech32Address","pubKey","hexToUint8Array","signArbitrary","signerAddress","signDoc","chain_id","account_number","sequence","fee","gas","msgs","memo","signData","signAmino","signOptions","resData","signed","signDirect","bodyBytes","bufferToHex","authInfoBytes","accountNumber","messageToBuffer","buffer","arr","output","x","padStart","arrayBuffer","byteValue","isNaN","OKXStarknetProvider","STARKNET_CHAIN_ID","getChain","typedData","sendTransaction","transaction","transactionData","transaction_hash","signMessageDeclareContractPayload","sendMessageExecuteTransactionDetail","calls","abis","transactionsDetail","transactions","isArray","executionRequest","OKXTonProvider","statusChangeSubscriptions","statusChangeErrorSubscriptions","tonWallet","errorsHandler","connected","tonNameSpace","walletStateInit","sessionWallet","tonDeviceInfo","connectItems","onStatusChange","requestAccountsWithNamespace","requestParams","OKXTronProvider","TRON_CHAIN_ID","stringToHex","signMessageV2","signedTx","realSignTx","visible","txID","rawData","contract","raw_data","expiration","ref_block_bytes","fee_limit","ref_block_hash","raw_data_hex","OKXUniversalProvider","eip155_1","sui_1","client_1","namespaces_1","solana_1","btc_1","aptos_1","ton_1","cosmos_1","tron_1","packages_1","provider_1","starknet_1","opts","setGlobal","okxConnectUniversalinwindow","initialize","providerOpts","rpcProviders","requestParam","buildRequestParamFromRequest","getProvider","validateChain","keyArr","connectOpts","called","onRequestSent","disconnectAndEmit","cleanup","engine","aptosChainNameToGeneralId","replaceAptos","aptosNameSpace","realNS","replaceAptosInner","optionAptosNameSpace","realOptionNS","defaultChain","replaceAptosGeneralIdWithNetName","replaceSessionAptos","disconnectInner","connectAndSign","signRequest","updatedOpts","setNamespaces","onConnect","requestItem","signResponseList","okxConnectUniversalUIinwindow","creatNotSupportMethodItemReplay","syncAllAddresses","syncAddressAvailable","syncAllAddress","setDefaultChain","rpcUrl","checkStorage","sessionInfoStr","getFromStore","createProviders","registerEventListeners","SignClient","providersToCreate","parseNamespaceKey","namespacesValue","currentNameSpace","opts1","solanaProvider","sonicProvider","svmProvider","optsTon","tonProvider","optsSui","suiProvider","optsBtc","btcProvider","fbProvider","aptosProvider","moveProvider","cosmosProvider","tronProvider","starknetProvider","PROVIDER_EVENTS","DEFAULT_CHAIN_CHANGED","caip2ChainId","onChainChanged","UPDATE_NAMESPACES","nameSpaces","nameSpacekey","persist","isChainNamespaceInSession","chainsArr","defaultNamespace","getDefaultChain","namespaceStr","requestDefaultChainWithNamespace","caip2Chain","sessionProperties","showRequestModal","listenerCount","OKXUniversalProvider_1","OKXBtcProvider_1","OKXCosmosProvider_1","OKXTonProvider_1","OKXTronProvider_1","OKXStarknetProvider_1","ConnectMethodUtils_1","metaData","requestAccountItem","nameSpaceToConnectWalletNameSpace","SESSION_CONNECTING","connectMethodsToConnectWalletMethods","metadata","fillParamsToSession","connectMethodsResponseUpdate","openOKXWallet","allAddressStr","syncResoonseToRequire","connectSupportMethods","connectMethodsAdaptOldVersion","isRecord","notSupportError","errorItem","callBackParams","solAccount","account1","solAddress","fromAccountToAddress","realMessage","encodeMessage","suiMessage","convertedArray","b64encoded","atob","btcAccounts","account2","btcAccount","btcAddress","paramData","aptosAccount","account3","aptosAddress","fullMessage","application","aptosChainId","cosmosAccount","account_cosmos","cosmosAddress","cosmosData","cosmosBase64Encoded","methodItem","solanaSuccessData","suiMethod","requestMethod","suiMessageb64","aptosSignature","requireNameSpace","includeEip155","some","space","syncAddressHostAvailable","includeChain","paramsArr","firstParam","firstObj","aptosParams","currentURL","signChainId","applicationUrl","cosmosChain","responseAddressStr","allAddress","isEvm","deriveName","addr","ci","evmAddress","freeze","getAccountsChains","isCaipNamespace","mergeRpcMap","targetRpcMap","sourceRpcMap","mergeNamespaces","source","rpcMap","fixMobileBtcSession","btcNameSpace","addressType","compressedPublicKey","GENERIC_SUBPROVIDER_NAME","RPC_URL","STORAGE","CONTEXT","WC_VERSION","PROTOCOL","RELAY_URL","LOGGER","JsonRpcConnection_1","JsonRpcProvider_1","httpProviders","createHttpProviders","updateNamespace","getAccounts","setHttpProvider","http","parsedChainId","parsedRpc","getRpcUrl","httpProvider","createHttpProvider","getHttpProvider","rpc","JsonRpcProvider","JsonRpcConnection","getGlobal","BtcProvider","CosmosProvider","updateRequestParams","isDic","decimalNumber","selectedChainId","chainNum","paramsChainId","paramsChainString","adaptArray","addressObj","isEqual","chainAddress","messages","secondObj","hexChainId","getHexChainIdFromRequest","isChainApproved","configAddressAdaptInjectWallet","handleSwitchChain","addEthereumChain","resultData","rpcUrls","eip155","core_2","disableProviderPing","isAvailable","registering","register","parseError","types_1","IJSONRpcProvider","hasRegisteredEventListeners","setConnection","context","requestStrict","_error","SolanaProvider","getPubkey","getWalletAddress","components","StarknetProvider","__rest","s","t","getOwnPropertySymbols","propertyIsEnumerable","validUntil","newParams","boc","TronProvider","IJSONRpcConnection","opt","globals","convertChainIdToNumber","parseChainId","mergeArrays","projectId","reference","CAIP_DELIMITER","okxGlobal","_createElementBlock","_hoisted_1","_createVNode","_component_el_container","_withCtx","_component_el_header","_cache","_createTextVNode","_component_el_main","_component_el_card","class","_createElementVNode","style","_component_el_row","_component_el_col","span","_toDisplayString","$options","_ctx","_component_el_checkbox","modelValue","withUI","$event","onChange","handleWithUI","universalToTG","handleUniversalToTG","_component_el_select","modals","placeholder","handleModalsSelect","multiple","_component_el_option","label","returnStrategy","handleReturnStrategySelect","_Fragment","_renderList","returnStrategies","strategy","_createBlock","_component_el_input","deeplink","handleReturnStrategyDeeplink","disabled","_createCommentVNode","handleLanguageSelect","locales","locale","theme","handleThemeSelect","THEME","LIGHT","DARK","selectedMethod","handleConnectMethodsSelect","connectMethods","tonProofValue","gutter","align","availableChains","checked","areChainsInit","isOptionalChecked","handleOptionChange","_component_el_button","onClick","initBtnClicked","connectInitStr","connectBtnClicked","connectStatusStr","syncAllAddressClick","syncAllAddressStr","disconnectAction","walletAddress","disconnectStatusStr","_Teleport","showModal","closeModal","_withModifiers","_component_qrcode_vue","qrValue","level","_component_el_tabs","activeTab","onTabClick","clickActiveTab","_component_el_tab_pane","eth_requestAccounts","eth_chainId","wallet_switchEthereumChain","wallet_addEthereumChain","personal_sign","eth_signTypedData_v4","eth_sendTransaction_transfer","eth_sendTransaction_approve","eth_sendTransaction_mint","wallet_watchAsset","oversized_personal_sign","ton_getAccount","ton_sendTransaction","sol_signMessage","sol_signTransaction","sol_signVersionedTransaction","sol_signAllTransactions","sol_signAllVersionedTransactions","sol_signAndSendTransaction","sol_signAndSendVersionedTransaction","_component_SuiPanel","onGenerateTransactionParams","sui_generateTransactionParams","_component_BTCPanel","btc_generateTransactionParams","_component_FractalPanel","fractal_generateTransactionParams","_component_TronTransactionPanel","tron_generateTransactionParams","onGenerateTransactionResult","tron_getTransactionResult","aptos_signMessage","aptos_signTransaction","aptos_signAndSubmitTransaction","cosmos_signArbitrary","cosmos_signAmino","cosmos_signDirect","Polygon_RPCRequest","eth_sendTransaction_swap","move_signTransaction","move_signAndSubmitTransaction","_component_StarknetPanel","ref","starknet_generateTransactionParams","starknet_getTransactionResult","testBase64UrlSafe","xs","sm","handleRedirectSelect","canChainAddRedirectParam","redirectDeeplink","handleRedirectDeeplink","addRedirectParam","testTransaction","rows","testboc","$setup","sendBtnDisabled","testTransactionStr","btc_getAccount","btc_signMessage","sendAmount","clearable","btc_send","sendSatoshisAmount","btc_sendBitcoin","btc_signPsbt_up","btc_signAndPushPsbt_up","receiver","btc_sendInscription","runsAddress","runsId","runsAmount","btc_sendRunes","intTicker","intAmount","btc_inscribeTransfer","props","setup","$emit","alert","autoFinalized","__exports__","fractal_getAccount","fractal_signMessage","fractal_send","fractal_sendBitcoin","fractal_signPsbt_up","fractal_signAndPushPsbt_up","fractal_sendInscription","fractal_sendRunes","fractal_inscribeTransfer","sui_getAccount","sui_signMessage","sui_signPersonalMessage","sui_signTransaction2","sui_signAndExecuteTransaction","sui_requestRpc","sui_signTransaction_pre_execution","sui_signAndExecuteTransaction_pre_execution","recipientAddress","tx","SuiTransaction","coin","splitCoins","transferObjects","transactionBlock","showEffects","txBytes","txSerialize","generateTsBytesAndSerizlize","resultTuple","senderAccounts","getFullnodeUrl","suiClient","SuiClient","setSender","build","Buffer","currentSuiTransaction","currentSuiMethod","starknet_signMessage","starknet_sendTransaction","getCurrentAddress","rpcProvider","RpcProvider","nodeUrl","pk","Account","that","verifyMessage","isValid","uint256","bnToUint256","transferCalldata","CallData","compile","DAITokenAddress","invokeParams","contract_address","entry_point","calldata","getPublicKey","tron_signMessage","tron_signMessageV2","tron_signTransaction","tron_signAndSendTransactionContract","tron_signAndSendTransactionApprove","tronWeb","TronWeb","trx","base58Address","verifyMessageV2","isOnlySign","transactionBuilder","sendTrx","getContract","contractAddress","abi","entrys","parameter","triggerSmartContract","verifyADR36Amino","fromBech32","VConsole","allChains","chainsThatCanAddRedirectParam","optionChains","selectedModals","selectedReturnStrategy","selectedDeepLink","selectedLanguage","selectedTheme","TronTransactionPanel","QrcodeVue","BTCPanel","FractalPanel","SuiPanel","StarknetPanel","testTopic","testPublicKey","testProofPayload","pendingDeepLink","logList","localPubKey","localSecKey","selectedChain","ProofPayloadVerify","showVerifyRow","has","selectedMethodData","isChecked","reload","starknetPanelTypedData","computed","selectedChains","initChains","newChains","updatedChains","tab","tabName","initCall","OKXUniversalConnectUI","actionsConfiguration","uiPreferences","onModalStateChange","uri","isPC","testTonSdk","blockExplorerUrls","chainName","nativeCurrency","symbol","decimals","requestEVMAccountWithSession","evmNameSpace","dataETH","dataPolygon","types","EIP712Domain","Person","Mail","primaryType","domain","verifyingContract","contents","maxPriorityFeePerGas","maxFeePerGas","gasPrice","gasLimit","image","tonUniversalLog","sendTransactionAlert","fetch","confirm","sendData","adapter","SuiAdapter","suiResult","signAndExecuteTransaction","sui_verifySignature","btcAdapter","btcResult","currentBtcMethod","currentBtcTransaction","hexToBase64","bs64Str","fractalResult","currentFractalMethod","currentFractalTransaction","hexStr","blob","Blob","reader","FileReader","onload","base64Data","readAsDataURL","datatest","firstStr","showUrl","hasEip155","hasSolana","hasSui","hasBtc","hasAptos","hasTon","hasCosmos","hasTron","hasStarknet","nameSpacesChains","optSpaceChains","solanaChains","hasPolygon","suiChains","btcChains","connectMethod","connectData","requireData","cosmos","tron","starknet","ton","btc","optData","eip155Chains","tonChains","signMethods","getCurrentSelectedMethodData","openModalAndSign","openModal","methodList","suiData","currentMethod","accountAddress","userAgentInfo","Agents","flag","isSafariOrChrome","pubkey","OKXSolanaProvider","result1","nacl","PublicKey","toBytes","OKXAptosProvider","config","AptosConfig","Network","Aptos","simple","sender","function","typeArguments","functionArguments","Connection","getSolConnect","blockhash","getLatestBlockhash","versionedTransactionMessage","TransactionMessage","payerKey","recentBlockhash","instructions","SystemProgram","transfer","fromPubkey","toPubkey","lamports","compileToV0Message","VersionedTransaction","Transaction","feePayer","cosmos_verifySignArbitrary","pub_key","signer","prefixStr","signatureBuffer","uint8Signature","pubKeyValueBuffer","pubKeyUint8Array","uiOptions","eth_verifyMessage","ethAddress","originalMessage","recoveredAddress","ethers","list","verifyList","requestItme","ethMessage","solanaMessage","verifySol","aptosMessage","aptosPublicKey","cosmosMessage","tronMessage","StarknetRpcProvider","StarknetAccount","signatureResult","resultObj","verifyPersonalMessageSignature","toSuiAddress","toBase64","newTransaction","c","created","mounted","scriptTag","createElement","src","getElementsByTagName","appendChild","title","$refs","starknetPanelRef","toRaw","render","app","createApp","App","use","ElementPlus","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","loaded","__webpack_modules__","amdO","deferred","O","chunkIds","priority","notFulfilled","Infinity","j","r","n","getter","d","leafPrototypes","getProto","__proto__","mode","def","current","getOwnPropertyNames","definition","g","globalThis","Function","prop","Symbol","toStringTag","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}