{"version":3,"file":"js/app.952215f5.js","mappings":"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","sources":["webpack://okxconnectdemo/../packages/core/src/connect/constants.js","webpack://okxconnectdemo/../packages/core/src/utils/call-for-success.js","webpack://okxconnectdemo/../packages/core/src/utils/log.js","webpack://okxconnectdemo/../packages/core/src/utils/safejson.js","webpack://okxconnectdemo/../packages/core/src/protocol/constants.js","webpack://okxconnectdemo/../packages/core/src/utils/url.js","webpack://okxconnectdemo/../packages/core/src/utils/utils.js","webpack://okxconnectdemo/../packages/core/src/utils/web-api.js","webpack://okxconnectdemo/../packages/core/src/connect/connect.js","webpack://okxconnectdemo/../packages/core/src/connect/commands.js","webpack://okxconnectdemo/../packages/core/src/connect/storageconstants.js","webpack://okxconnectdemo/../packages/core/src/connect/jwtconstants.js","webpack://okxconnectdemo/../packages/core/src/connect/storage.js","webpack://okxconnectdemo/../packages/core/src/crypto/crypto.js","webpack://okxconnectdemo/../packages/core/src/connect/jwt.js","webpack://okxconnectdemo/../packages/core/src/connect/connectionManager.js","webpack://okxconnectdemo/../packages/core/src/connect/walletConnectionConstants.js","webpack://okxconnectdemo/../packages/core/src/connect/walletConnectionManager.js","webpack://okxconnectdemo/../packages/core/src/protocol/error/okx-connect.error.js","webpack://okxconnectdemo/../packages/core/src/protocol/misc.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/json-rpc.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/engine.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/connect-wallet.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/connect-event.js","webpack://okxconnectdemo/../packages/core/src/connect/sessionUtils.js","webpack://okxconnectdemo/../packages/core/src/connect/engine.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXUniversalProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/sign-client/client.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/namespaces.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/events.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/values.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/eip155.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcConnection.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/misc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/providers.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/globals.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/misc.js","webpack://okxconnectdemo/./src/App.vue","webpack://okxconnectdemo/./src/App.vue?7ccd","webpack://okxconnectdemo/./src/main.js","webpack://okxconnectdemo/webpack/bootstrap","webpack://okxconnectdemo/webpack/runtime/amd options","webpack://okxconnectdemo/webpack/runtime/chunk loaded","webpack://okxconnectdemo/webpack/runtime/compat get default export","webpack://okxconnectdemo/webpack/runtime/define property getters","webpack://okxconnectdemo/webpack/runtime/global","webpack://okxconnectdemo/webpack/runtime/hasOwnProperty shorthand","webpack://okxconnectdemo/webpack/runtime/make namespace object","webpack://okxconnectdemo/webpack/runtime/node module decorator","webpack://okxconnectdemo/webpack/runtime/jsonp chunk loading","webpack://okxconnectdemo/webpack/startup"],"sourcesContent":["export const EVENT_EMITTER_MAX_LISTENERS = 10;\nexport const OKXCONNECTOR_WS_URL = \"wss://wsdex.okx.com/ws/v1/wallet-connect-relay\";\nexport const OKXCONNECTOR_MESSAGE_TTL = 300000;\n// --------------- JSON RPC ---------------\nexport const CONNECT_JSONRPC_VER = \"2.0\";\nexport const ConnectorState = {\n    InitState: 0,\n    Connecting: 1,\n    Connected: 2,\n    Disconnected: 3,\n    OnError: 4,\n};\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n/**\n * Function to call ton api until we get response.\n * Because ton network is pretty unstable we need to make sure response is final.\n * @param {T} fn - function to call\n * @param {CallForSuccessOptions} [options] - optional configuration options\n */\nexport function callForSuccess(fn, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b;\n        const attempts = (_a = options === null || options === void 0 ? void 0 : options.attempts) !== null && _a !== void 0 ? _a : 3;\n        const delayMs = (_b = options === null || options === void 0 ? void 0 : options.delayMs) !== null && _b !== void 0 ? _b : 800;\n        if (typeof fn !== 'function') {\n            throw new Error(`Expected a function, got ${typeof fn}`);\n        }\n        let i = 0;\n        let lastError;\n        while (i < attempts) {\n            try {\n                return yield fn();\n            }\n            catch (err) {\n                lastError = err;\n                i++;\n                if (i < attempts) {\n                    yield delay(delayMs);\n                }\n            }\n        }\n        throw lastError;\n    });\n}\n/**\n * Delays the execution of code for a specified number of milliseconds.\n * @param {number} timeout - The number of milliseconds to delay the execution.\n * @param {DelayOptions} [options] - Optional configuration options for the delay.\n * @return {Promise<void>} - A promise that resolves after the specified delay, or rejects if the delay is aborted.\n */\nexport function delay(timeout, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            var _a, _b;\n            if ((_a = options === null || options === void 0 ? void 0 : options.signal) === null || _a === void 0 ? void 0 : _a.aborted) {\n                reject(new Error('Delay aborted'));\n                return;\n            }\n            const timeoutId = setTimeout(() => resolve(), timeout);\n            (_b = options === null || options === void 0 ? void 0 : options.signal) === null || _b === void 0 ? void 0 : _b.addEventListener('abort', () => {\n                clearTimeout(timeoutId);\n                reject(new Error('Delay aborted'));\n            });\n        });\n    });\n}\n","const debug = true;\nexport function logDebug(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.debug('[OKX_CONNECT_SDK]', ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\nexport function logError(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.error('[OKX_CONNECT_SDK]', ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\nexport function logWarning(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.warn('[OKX_CONNECT_SDK]', ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\n","import { logDebug } from \"./log\";\nconst JSONStringify = (data) => JSON.stringify(data, (_, value) => (typeof value === \"bigint\" ? value.toString() + \"n\" : value));\n/*\n  Function to parse JSON.\n  If JSON has values in our custom format BigInt (strings with \"n\" character at the end), we just parse them to BigInt values.\n  If JSON has big number values, but not in our custom format, we copy it, and in a copy we convert those values to our custom format,\n  then parse them to BigInt values.\n  Other values (not big numbers and not our custom format BigInt values) are not affected and parsed as native JSON.parse() would parse them.\n*/\nconst JSONParse = (json) => {\n    /*\n      Big numbers are found and marked using Regex with this condition:\n      Number's length is bigger than 16 || Number's length is 16 and any numerical digit of the number is greater than that of the Number.MAX_SAFE_INTEGER\n      Additionally, it skips values that are strings (between double quotes).\n      */\n    // prettier-ignore\n    // eslint-disable-next-line no-useless-escape\n    const numbersBiggerThanMaxInt = /:(\\b\\d{17,}|\\b(?:[9](?:[1-9]07199254740991|0[1-9]7199254740991|00[8-9]199254740991|007[2-9]99254740991|007199[3-9]54740991|0071992[6-9]4740991|00719925[5-9]740991|007199254[8-9]40991|0071992547[5-9]0991|00719925474[1-9]991|00719925474099[2-9])))(?=[,\\}\\]]|$)/g;\n    const serializedData = json.replace(numbersBiggerThanMaxInt, (match) => `\"${match}n\"`);\n    return JSON.parse(serializedData, (_, value) => {\n        const isCustomFormatBigInt = typeof value === \"string\" && value.match(/^\\d+n$/);\n        if (isCustomFormatBigInt)\n            return BigInt(value.substring(0, value.length - 1));\n        return value;\n    });\n};\nexport function safeJsonParse(value) {\n    if (typeof value !== \"string\") {\n        logDebug(value);\n        throw new Error(`Cannot safe json parse value of type ${typeof value}`);\n    }\n    try {\n        return JSONParse(value);\n    }\n    catch (e) {\n        // eslint-disable-next-line no-console\n        console.error(\"safeJsonParse error:\", e);\n        return value;\n    }\n}\nexport function safeJsonStringify(value) {\n    return typeof value === \"string\" ? value : JSONStringify(value) || \"\";\n}\n","// export const standardUniversalLink = 'https://www.okx.com/download';\nexport const standardUniversalLink = 'http://localhost:5173';\n// export const standardDeeplink = 'okx://web3/wallet/connect';\nexport const standardDeeplink = 'http://localhost:5173';\nexport const tonConnectSdkVersion = '1';\n","import { standardUniversalLink } from \"../protocol/constants\";\nexport function removeUrlLastSlash(url) {\n    if (url.slice(-1) === '/') {\n        return url.slice(0, -1);\n    }\n    return url;\n}\nexport function addPathToUrl(url, path) {\n    return removeUrlLastSlash(url) + '/' + path;\n}\nexport function getUniversalLink(deeplinkUrl) {\n    const deeplinkEncodeUrl = encodeURIComponent(deeplinkUrl);\n    return `${standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`;\n}\nexport function openOKXDeeplinkWithFallback(deeplinkUrl, base64UrlParam = '') {\n    var _a, _b, _c, _d;\n    const fullUrl = getUniversalLink(deeplinkUrl);\n    const isTelegram = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n    const isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\n    console.log(\"openOKXDeeplinkWithFallback fullUrl:\", fullUrl);\n    let deepLinkOpened = false;\n    const timeoutDuration = 1500; // 1.5秒的等待时间\n    const startTime = Date.now();\n    const downloadUrl = standardUniversalLink;\n    if (!isIOS) {\n        let newWindow = null;\n        var fallbackToDownloadPage = () => {\n            if (!deepLinkOpened) {\n                if (newWindow) {\n                    // newWindow.open(downloadUrl, '_self');\n                }\n                else {\n                    window.open(downloadUrl, '_blank');\n                }\n            }\n        };\n        if (isTelegram) {\n            // newWindow = window.open(deeplinkUrl, '_blank');\n            // TODO: telegram wallet url\n            let base64Content = { okxconnect: base64UrlParam, extraparams: \"\" };\n            let base64ContentStr = JSON.stringify(base64Content);\n            const utf8Array = new TextEncoder().encode(base64ContentStr);\n            const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n            let tgurl = `https://t.me/Tttrettttbot/testwallet?startapp=${base64Encoded}`;\n            const tgUrlString = tgurl;\n            // newWindow = window.open(tgurl, '_blank');\n            (_d = (_c = (_b = getWindow()) === null || _b === void 0 ? void 0 : _b.Telegram) === null || _c === void 0 ? void 0 : _c.WebApp) === null || _d === void 0 ? void 0 : _d.openTelegramLink(tgUrlString);\n        }\n        else {\n            // window.location.href = deeplinkUrl;\n            window.open(`http://localhost:5173/?param=${base64UrlParam}`, '_blank');\n        }\n        setTimeout(fallbackToDownloadPage, timeoutDuration);\n        window.addEventListener('blur', () => {\n            deepLinkOpened = true;\n        }, { once: true });\n        document.addEventListener('visibilitychange', () => {\n            if (document.visibilityState === 'hidden') {\n                deepLinkOpened = true;\n            }\n        });\n    }\n    else {\n        if (isTelegram) {\n            // TODO: telegram wallet url\n            let base64Content = { okxconnect: base64UrlParam, extraparams: \"\" };\n            let base64ContentStr = JSON.stringify(base64Content);\n            const utf8Array = new TextEncoder().encode(base64ContentStr);\n            const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n            let tgurl = `/Tttrettttbot/testwallet?startapp=${base64Encoded}`;\n            window.open(tgurl, '_blank');\n            //    window.open(fullUrl,'_blank');\n        }\n        else {\n            //    window.open(fullUrl,'_blank');\n            window.open(`http://localhost:5173/?param=${base64UrlParam}`, '_blank');\n        }\n    }\n}\nexport function getWindow() {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    return undefined;\n}\n","import nacl from 'tweetnacl';\nimport naclutil from 'tweetnacl-util';\nimport { fromString } from 'uint8arrays/from-string';\nimport { toString } from \"uint8arrays/to-string\";\nimport { hash } from \"@stablelib/sha256\";\nimport { safeJsonParse, safeJsonStringify } from './safejson';\nimport { logDebug } from \"./log\";\nconst BASE16 = \"base16\";\nexport function hexToByteArray(hexString) {\n    if (hexString.length % 2 !== 0) {\n        throw new Error(`Cannot convert ${hexString} to bytesArray`);\n    }\n    const result = new Uint8Array(hexString.length / 2);\n    for (let i = 0; i < hexString.length; i += 2) {\n        result[i / 2] = parseInt(hexString.slice(i, i + 2), 16);\n    }\n    return result;\n}\nexport function toHexString(byteArray) {\n    let hexString = '';\n    byteArray.forEach(byte => {\n        hexString += ('0' + (byte & 0xff).toString(16)).slice(-2);\n    });\n    return hexString;\n}\nexport function concatUint8Arrays(buffer1, buffer2) {\n    const mergedArray = new Uint8Array(buffer1.length + buffer2.length);\n    mergedArray.set(buffer1);\n    mergedArray.set(buffer2, buffer1.length);\n    return mergedArray;\n}\nexport function splitToUint8Arrays(array, index) {\n    if (index >= array.length) {\n        throw new Error('Index is out of buffer');\n    }\n    const subArray1 = array.slice(0, index);\n    const subArray2 = array.slice(index);\n    return [subArray1, subArray2];\n}\nfunction encodeUint8Array(value, urlSafe) {\n    const encoded = naclutil.encodeBase64(value);\n    if (!urlSafe) {\n        return encoded;\n    }\n    return encodeURIComponent(encoded);\n}\nfunction decodeToUint8Array(value, urlSafe) {\n    if (urlSafe) {\n        value = decodeURIComponent(value);\n    }\n    return naclutil.decodeBase64(value);\n}\nexport function base64encode(value, urlSafe) {\n    let uint8Array;\n    if (value instanceof Uint8Array) {\n        uint8Array = value;\n    }\n    else {\n        if (typeof value !== 'string') {\n            value = safeJsonStringify(value);\n        }\n        uint8Array = naclutil.decodeUTF8(value);\n    }\n    return encodeUint8Array(uint8Array, urlSafe);\n}\nexport function base64decode(value, urlSafe) {\n    const decodedUint8Array = decodeToUint8Array(value, urlSafe);\n    return {\n        toString() {\n            return naclutil.encodeUTF8(decodedUint8Array);\n        },\n        toObject() {\n            try {\n                return safeJsonParse(naclutil.encodeUTF8(decodedUint8Array));\n            }\n            catch (e) {\n                return null;\n            }\n        },\n        toUint8Array() {\n            return decodedUint8Array;\n        }\n    };\n}\nexport function checkWSUrl(url) {\n    const match = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!match || !match.length) {\n        return false;\n    }\n    let scheme = match[0];\n    if (scheme === undefined) {\n        return false;\n    }\n    return new RegExp(\"^wss?:\").test(scheme);\n}\nexport const resolveWebSocketImplementation = () => {\n    if (typeof WebSocket !== \"undefined\") {\n        return WebSocket;\n    }\n    else if (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") {\n        return global.WebSocket;\n    }\n    else if (typeof window !== \"undefined\" && typeof window.WebSocket !== \"undefined\") {\n        return window.WebSocket;\n    }\n    else if (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\") {\n        return self.WebSocket;\n    }\n    return WebSocket;\n    //\n    // return require(\"ws\");\n};\nexport const hasBuiltInWebSocket = () => typeof WebSocket !== \"undefined\" ||\n    (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") ||\n    (typeof window !== \"undefined\" && typeof window.WebSocket !== \"undefined\") ||\n    (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\");\nexport const hasLocalStorage = () => (typeof global !== \"undefined\" && (typeof global.localStorage !== \"undefined\")) ||\n    (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\");\nexport const resolveLocalStorage = () => {\n    if (typeof global !== \"undefined\" && typeof global.localStorage !== \"undefined\") {\n        return global.localStorage;\n    }\n    else if (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\") {\n        return window.localStorage;\n    }\n    return localStorage;\n};\nexport const isBrowser = () => typeof window !== \"undefined\";\nexport const RANDOM_LENGTH = 32;\nexport function hashKey(key, encode = BASE16) {\n    logDebug(`hash key called ${key}`);\n    const result = hash(fromString(key, encode));\n    return toString(result, encode);\n}\nexport function generateRandomBytes32() {\n    return nacl.randomBytes(RANDOM_LENGTH);\n}\nexport function generateTopic() {\n    let randomBytes32 = generateRandomBytes32();\n    logDebug(`generate topic called ${randomBytes32}`);\n    return hashKey(toString(randomBytes32, BASE16));\n}\nexport const isValidObject = (obj) => Object.getPrototypeOf(obj) === Object.prototype && Object.keys(obj).length;\nexport function isIos() {\n    return /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\n}\n","import UAParser from 'ua-parser-js';\nimport { logDebug } from './log';\nexport function openLink(href, target = '_self') {\n    logDebug('openLink', href, target);\n    window.open(href, target, 'noopener noreferrer');\n}\nexport function openLinkBlank(href) {\n    openLink(href, '_blank');\n}\nexport function openDeeplinkWithFallback(href, fallback) {\n    const doFallback = () => {\n        if (isBrowser('safari') || (isOS('android') && isBrowser('firefox'))) {\n            // Safari does not support fallback to direct link.\n            return;\n        }\n        fallback();\n    };\n    const fallbackTimeout = setTimeout(() => doFallback(), 500);\n    window.addEventListener('blur', () => clearTimeout(fallbackTimeout), { once: true });\n    openLink(href, '_self');\n}\nexport function isMobileUserAgent() {\n    let check = false;\n    (function (a) {\n        if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) ||\n            /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.slice(0, 4)))\n            check = true;\n    })(navigator.userAgent ||\n        navigator.vendor ||\n        window.opera);\n    return check;\n}\nexport function getUserAgent() {\n    var _a, _b, _c;\n    const results = new UAParser().getResult();\n    const osName = (_a = results.os.name) === null || _a === void 0 ? void 0 : _a.toLowerCase();\n    const deviceModel = (_b = results.device.model) === null || _b === void 0 ? void 0 : _b.toLowerCase();\n    let os;\n    switch (true) {\n        case deviceModel === 'ipad':\n            os = 'ipad';\n            break;\n        case osName === 'ios':\n            os = 'ios';\n            break;\n        case osName === 'android':\n            os = 'android';\n            break;\n        case osName === 'mac os':\n            os = 'macos';\n            break;\n        case osName === 'linux':\n            os = 'linux';\n            break;\n        case osName === null || osName === void 0 ? void 0 : osName.includes('windows'):\n            os = 'windows';\n            break;\n    }\n    const browserName = (_c = results.browser.name) === null || _c === void 0 ? void 0 : _c.toLowerCase();\n    let browser;\n    switch (true) {\n        case browserName === 'chrome':\n            browser = 'chrome';\n            break;\n        case browserName === 'firefox':\n            browser = 'firefox';\n            break;\n        case browserName === null || browserName === void 0 ? void 0 : browserName.includes('safari'):\n            browser = 'safari';\n            break;\n        case browserName === null || browserName === void 0 ? void 0 : browserName.includes('opera'):\n            browser = 'opera';\n            break;\n    }\n    return {\n        os,\n        browser\n    };\n}\nexport function isOS(...os) {\n    return os.includes(getUserAgent().os);\n}\nexport function isBrowser(...browser) {\n    return browser.includes(getUserAgent().browser);\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { ConnectorState } from './constants';\nimport { safeJsonParse, safeJsonStringify } from '../utils';\nimport { checkWSUrl, resolveWebSocketImplementation, hasBuiltInWebSocket } from '../utils/utils';\nimport { EventEmitter } from \"eventemitter3\";\nimport * as log from \"../utils/log\";\nconst WS = resolveWebSocketImplementation();\nexport class OKXWalletConnector {\n    constructor(url) {\n        this.events = new EventEmitter();\n        this.state = ConnectorState.InitState;\n        if (!checkWSUrl(url)) {\n            throw new Error(`CONNECTOR: invalid url ${url}`);\n        }\n        this.url = url;\n        this.heartbeatTimer = null;\n    }\n    get connecting() {\n        return this.state == ConnectorState.Connecting;\n    }\n    // ------------------------------------------------------\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        log.logDebug('get received data');\n        log.logDebug(e);\n        if (typeof e.data === \"string\") {\n            let rsp = e.data;\n            if (rsp === \"pong\") {\n                log.logDebug(`CONNECT: receive pong ${Date.now().toString()}`);\n                return;\n            }\n        }\n        this.events.emit(\"payload\", e.data);\n    }\n    onClose(event) {\n        this.socket = undefined;\n        this.events.emit(\"close\", event);\n    }\n    onError(id, e) {\n        const payload = { id: id, msg: e.toString() };\n        this.events.emit(\"payload\", payload);\n    }\n    onopen(socket) {\n        socket.onmessage = (event) => this.onPayload(event);\n        socket.onclose = (event) => this.onClose(event);\n        this.socket = socket;\n        this.state = ConnectorState.Connected;\n        this.events.emit(\"open\");\n    }\n    // ------------------------------------------------------\n    emitError(errorEvent) {\n        this.events.emit(\"fail\", errorEvent);\n    }\n    // ------------------------------------------------------\n    heartbeat() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.heartbeatTimer) {\n                clearTimeout(this.heartbeatTimer);\n            }\n            if (this.state != ConnectorState.Connected && this.state != ConnectorState.OnError) {\n                log.logDebug('heart beat close');\n                return;\n            }\n            if (!this.socket) {\n                log.logDebug('socket not exist');\n                if (this.state == ConnectorState.Connected || this.state == ConnectorState.OnError) {\n                    log.logDebug('socket reconnect by heartbeat');\n                    try {\n                        yield this.registOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                        this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n                    }\n                }\n                return;\n            }\n            if (this.socket.readyState !== WebSocket.OPEN) {\n                log.logDebug('socket not ready');\n                if (this.state == ConnectorState.Connected || this.state == ConnectorState.OnError) {\n                    log.logDebug('socket reconnect by heartbeat');\n                    try {\n                        yield this.registOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                        this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n                    }\n                }\n                return;\n            }\n            log.logDebug(`send ping heart beat: ${Date.now().toString()}, ${this.socket}`);\n            this.socket.send(\"ping\");\n            this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n        });\n    }\n    registOpen(url = this.url) {\n        if (!checkWSUrl(url)) {\n            throw new Error(`CONNECTOR: invalid url ${url}`);\n        }\n        if (this.connecting) {\n            /// event observer limits\n            // const maxListenerCount = this.events.getMaxListeners()\n            // if (this.events.listenerCount(\"open\") >= maxListenerCount ||\n            //         this.events.listenerCount(\"fail\") >= maxListenerCount) {\n            //     this.events.setMaxListeners(maxListenerCount + 1)\n            // }\n            return new Promise((resolve, reject) => {\n                this.events.once(\"fail\", (error) => {\n                    // if (this.events.getMaxListeners() > EVENT_EMITTER_MAX_LISTENERS) {\n                    //     this.events.setMaxListeners(EVENT_EMITTER_MAX_LISTENERS)\n                    // }\n                    reject(error);\n                });\n                this.events.once(\"open\", () => {\n                    // if (this.events.getMaxListeners() > EVENT_EMITTER_MAX_LISTENERS) {\n                    //     this.events.setMaxListeners(EVENT_EMITTER_MAX_LISTENERS)\n                    // }\n                    if (typeof this.socket == \"undefined\") {\n                        return reject(new Error(\"Connect lost\"));\n                    }\n                    resolve(this.socket);\n                });\n            });\n        }\n        this.url = url;\n        this.state = ConnectorState.Connecting;\n        const origin = new URLSearchParams(url).get(\"origin\");\n        return new Promise((resolve, reject) => {\n            const socket = new WS(url, []);\n            if (hasBuiltInWebSocket()) {\n                socket.onerror = (event) => {\n                    const errorEvent = event;\n                    this.state = ConnectorState.OnError;\n                    this.emitError(errorEvent.error);\n                    reject(new Error(errorEvent.message));\n                };\n            }\n            else {\n                socket.on(\"error\", (errorEvent) => {\n                    this.state = ConnectorState.OnError;\n                    this.emitError(errorEvent);\n                    reject(new Error('socketError'));\n                });\n            }\n            socket.onopen = () => {\n                log.logDebug('socket opened');\n                this.onopen(socket);\n                this.heartbeat();\n                resolve(socket);\n            };\n        });\n    }\n    // ------------------------------------------------------\n    onVisibleChanged() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (document.visibilityState === 'visible') {\n                // check and restore\n                log.logDebug(`get changed ${this.state}, ${this.socket}`);\n                if (this.state == ConnectorState.Connected && typeof this.socket === \"undefined\") {\n                    log.logDebug('CONNECTION need reopen');\n                    try {\n                        yield this.registOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                    }\n                    return;\n                }\n            }\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.registOpen(this.url);\n            // listener for reconnect\n            document.removeEventListener('visibilitychange', this.onVisibleChanged.bind(this));\n            document.addEventListener('visibilitychange', this.onVisibleChanged.bind(this));\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.state = ConnectorState.Disconnected;\n            return new Promise((resolve, reject) => {\n                if (typeof this.socket === \"undefined\") {\n                    // reject(new Error(\"CONNECTION closed\"))\n                    resolve();\n                    return;\n                }\n                this.socket.onclose = (event) => {\n                    this.onClose(event);\n                    resolve();\n                };\n                this.socket.close();\n                if (this.heartbeatTimer) {\n                    clearTimeout(this.heartbeatTimer);\n                }\n            });\n        });\n    }\n    currentStatus() {\n        return {\n            state: this.state,\n            url: this.url\n        };\n    }\n    // event will be jsonstr\n    /// @params Promise\n    /// @params success/failed callback\n    addListener(event, decrypt, success, failed) {\n        if (this.listenPayloadHandler) {\n            this.events.removeListener(\"payload\", this.listenPayloadHandler);\n        }\n        this.listenPayloadHandler = (e) => {\n            var _a;\n            log.logDebug(`<<< get payload ${e}`);\n            let parsedEvent = safeJsonParse(e);\n            // parse the data to chose success or failed\n            if (parsedEvent.params && parsedEvent.params.data) {\n                let rawMsg = (_a = parsedEvent.params.data) === null || _a === void 0 ? void 0 : _a.message;\n                if (rawMsg) {\n                    try {\n                        let msg = decrypt(rawMsg);\n                        if (msg === undefined) {\n                            log.logDebug(`CONNECT: decrypt undefined`);\n                            failed(event, 'Decrypt undefined');\n                        }\n                        else {\n                            success(event, msg);\n                        }\n                    }\n                    catch (e) {\n                        log.logDebug(`CONNECT: decrypt failed: ${e}`);\n                        failed(event, e.message);\n                    }\n                }\n            }\n        };\n        this.events.on(\"payload\", this.listenPayloadHandler);\n        if (this.failHandler) {\n            this.events.removeListener(\"fail\", this.failHandler);\n        }\n        this.failHandler = (e) => {\n            if (e) {\n                log.logDebug(`CONNECT failed: ${e}`);\n                failed(event, e.message);\n            }\n            else {\n                failed(event, \"Unkonow error\");\n            }\n        };\n        this.events.on(\"fail\", this.failHandler);\n    }\n    addPackageParse(callback) {\n        if (this.payloadHandler) {\n            this.events.removeListener(\"payload\", this.payloadHandler);\n        }\n        this.payloadHandler = (e) => __awaiter(this, void 0, void 0, function* () {\n            // parse the data to chose success or failed\n            log.logDebug(`CONNECTION @[${new Date().toUTCString()}] <<<< received e:${e}`);\n            let param = safeJsonParse(e);\n            yield callback(param);\n        });\n        this.events.on(\"payload\", this.payloadHandler);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    send(doLogin, payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof this.socket === \"undefined\") {\n                log.logDebug(`>>> send payload undefined ${payload}`);\n                // this.socket = await this.registOpen();\n                yield doLogin();\n            }\n            try {\n                log.logDebug(`CONNECTION @[${new Date().toUTCString()}]>>> send payload ${safeJsonStringify(payload)}`);\n                if (this.socket) {\n                    this.socket.send(safeJsonStringify(payload));\n                }\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    getMsgPayloadFromHistory(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof msg === \"undefined\")\n                return;\n            let tmpMsg = {\n                params: {\n                    data: msg\n                }\n            };\n            let jsonstr = safeJsonStringify(msg);\n            log.logDebug('get received data from history');\n            log.logDebug(jsonstr);\n            jsonstr = safeJsonStringify(tmpMsg);\n            this.events.emit(\"payload\", jsonstr);\n        });\n    }\n    onOpen(callback) {\n        if (this.openHandler) {\n            this.events.removeListener(\"open\", this.openHandler);\n        }\n        this.openHandler = () => __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> ws opened: `);\n            yield callback();\n        });\n        this.events.on(\"open\", this.openHandler);\n    }\n}\n","// --------------- ws methods -------------\nexport const CONNECT_METHOD_PUSH = \"push\";\nexport const CONNECT_METHOD_LOGIN = \"login\";\nexport const CONNECT_METHOD_PUBLISH = \"publish\";\nexport const CONNECT_METHOD_SUB = \"subscribe\";\nexport const CONNECT_METHOD_UNSUB = \"unsubscribe\";\nexport const CONNECT_METHOD_RECEIVE = \"receive\";\nexport const CONNECT_METHOD_FETCHMSG = \"fetchMessages\";\n","export const OKXCONNECTOR_CACHE_KEY = \"ck\";\nexport const OKXCONNECTOR_CRYPTO_KEY = \"cck_k\";\nexport const OKXCONNECTOR_SESSION_PREFIX_KEY = \"cspk_\";\nexport const OKXCONNECTOR_JWT_KEY = \"cjk_k\";\nexport const OKXCONNECTOR_TOKEN_CACHE = \"ct\";\nexport const OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE = \"csp\";\nexport const OKXCONNECTOR_TON_KEY = \"OKXStorage_ctc\";\nexport const OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD = \"scp\";\nexport const OKXCONNECTOR_STORAGER_CRYPTO_SALT = \"scs\";\nexport const OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV = \"scpc\";\nexport const OKXCONNECTOR_STORAGE_CIPHER_METHOD = \"aes-256-cbc\";\n","export const OKXCONNECTOR_JWT_SIDE = \"wallet\";\nexport const OKXCONNECTOR_JWT_WALLET_SIDE = \"dapp\";\nexport const OKXCONNECTOR_JWT_TTL = 86400000;\n","import { OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV, OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD, OKXCONNECTOR_STORAGER_CRYPTO_SALT } from \"./storageconstants\";\nimport nacl from 'tweetnacl';\nimport { resolveLocalStorage, toHexString } from '../utils/utils';\nimport { safeJsonParse, safeJsonStringify } from \"../utils\";\nimport * as log from \"../utils/log\";\nimport { logDebug } from \"../utils\";\nimport { AES, enc, PBKDF2 } from 'crypto-js';\nexport class Storage {\n    constructor(subKey) {\n        // 1. load data from local storage\n        const localStorage = resolveLocalStorage();\n        this.storeKey = '';\n        this.cipherIV = '';\n        this.subKey = subKey;\n        log.logDebug('--------get current local storage --------');\n        log.logDebug(localStorage);\n        const cacheStr = localStorage.getItem(Storage.cacheKey + subKey);\n        if (typeof cacheStr === \"undefined\" || cacheStr === null) {\n            log.logDebug(\"with no cache\");\n            this.cache = {};\n            return;\n        }\n        log.logDebug(cacheStr);\n        if ((cacheStr === null || cacheStr === void 0 ? void 0 : cacheStr.length) > 0) {\n            var cacheObj = safeJsonParse(cacheStr);\n            this.cache = cacheObj;\n        }\n        log.logDebug(`get cache obj: ${this.cache}`);\n        if (typeof this.cache === 'undefined' || this.cache == null) {\n            this.cache = {};\n        }\n    }\n    saveContent(content, key, id = '-') {\n        let item = {\n            id: id,\n            timestamp: Date.now().toString(),\n            content: content\n        };\n        this.saveItem(item, key);\n    }\n    saveItem(item, key) {\n        let localKey = Storage.cacheKey + this.subKey;\n        const localStorage = resolveLocalStorage();\n        log.logDebug(this.cache);\n        log.logDebug(`get cache obj: ${this.cache}, ${key}, ${item}`);\n        this.cache[key] = item;\n        let totalCacheStr = safeJsonStringify(this.cache);\n        log.logDebug(`STORAGE: ${key} @ ${this.cache}`);\n        localStorage.setItem(localKey, totalCacheStr);\n    }\n    getItem(key) {\n        log.logDebug(`STORAGE >> getItem: ${key} @ ${this.cache}`);\n        return this.cache[key];\n    }\n    getCachedPBKDF2InfoKey() {\n        var _a, _b, _c, _d;\n        const pwLen = 32;\n        const saltLen = 24;\n        if (this.storeKey.length > 0 && ((_a = this.cipherIV) === null || _a === void 0 ? void 0 : _a.length) > 0) {\n            return {\n                pw: this.storeKey,\n                iv: this.cipherIV\n            };\n        }\n        let salt = (_b = this.getItem(OKXCONNECTOR_STORAGER_CRYPTO_SALT)) === null || _b === void 0 ? void 0 : _b.content;\n        if (!salt) {\n            salt = toHexString(nacl.randomBytes(saltLen));\n            this.saveContent(salt, OKXCONNECTOR_STORAGER_CRYPTO_SALT);\n        }\n        let pw = (_c = this.getItem(OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD)) === null || _c === void 0 ? void 0 : _c.content;\n        if (!pw) {\n            pw = toHexString(nacl.randomBytes(pwLen));\n            this.saveContent(pw, OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD);\n        }\n        let cipherIV = (_d = this.getItem(OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV)) === null || _d === void 0 ? void 0 : _d.content;\n        if (!cipherIV) {\n            // let ivBuffer = Buffer.from(nacl.randomBytes(16))\n            let ivBuffer = nacl.randomBytes(16);\n            cipherIV = toHexString(ivBuffer);\n            this.saveContent(cipherIV, OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV);\n        }\n        this.cipherIV = cipherIV;\n        this.storeKey = PBKDF2(pw, salt, { iterations: 10 }).toString();\n        return {\n            pw: this.storeKey,\n            iv: this.cipherIV\n        };\n    }\n    encryptStoreMsg(msg, key) {\n        logDebug(`encryptStoreMsg  encryptStoreMsg start ${Date.now()}`);\n        let storeInfo = this.getCachedPBKDF2InfoKey();\n        logDebug(`encryptStoreMsg  encryptStoreMsg mid ${Date.now()}`);\n        var result = AES.encrypt(msg, storeInfo.pw).toString();\n        this.saveContent(result, key);\n        logDebug(`encryptStoreMsg  encryptStoreMsg end ${Date.now()}`);\n    }\n    getAndDecrypt(key) {\n        logDebug(`encryptStoreMsg  getAndDecrypt start ${Date.now()}`);\n        let item = this.getItem(key);\n        if (item && item.content) {\n            let storeInfo = this.getCachedPBKDF2InfoKey();\n            logDebug(`encryptStoreMsg  getAndDecrypt mid ${Date.now()}`);\n            let result = AES.decrypt(item.content, storeInfo.pw).toString(enc.Utf8);\n            logDebug(`encryptStoreMsg  getAndDecrypt end ${Date.now()}`);\n            return result;\n        }\n        return null;\n    }\n    clearCache(key = undefined) {\n        if (key === undefined) {\n            // clean all\n            this.cache = {};\n            let localKey = Storage.cacheKey + this.subKey;\n            localStorage.setItem(localKey, '');\n        }\n        else {\n            let localKey = Storage.cacheKey + this.subKey;\n            const localStorage = resolveLocalStorage();\n            log.logDebug(this.cache);\n            this.cache[key] = null;\n            let totalCacheStr = safeJsonStringify(this.cache);\n            log.logDebug(`STORAGE: clean key ${key} @ ${this.cache}`);\n            localStorage.setItem(localKey, totalCacheStr);\n        }\n    }\n}\nStorage.cacheKey = 'OKXStorageKey';\n","import nacl from 'tweetnacl';\nimport { hexToByteArray, toHexString, concatUint8Arrays, splitToUint8Arrays, base64decode, base64encode } from '../utils/utils';\nexport class SessionCrypto {\n    constructor(keyPair = undefined) {\n        this.nonceLength = 24;\n        this.sessionKeyPair = keyPair ? this.createKeypairFromString(keyPair) : this.createKeypair();\n        console.log('create session keypair from keypair:', keyPair, {\n            publicKey: toHexString(this.sessionKeyPair.publicKey),\n            secretKey: toHexString(this.sessionKeyPair.secretKey)\n        });\n    }\n    createKeypair() {\n        return nacl.box.keyPair();\n    }\n    createKeypairFromString(keyPair) {\n        return {\n            publicKey: hexToByteArray(keyPair.publicKey),\n            secretKey: hexToByteArray(keyPair.secretKey),\n        };\n    }\n    createNonce() {\n        return nacl.randomBytes(this.nonceLength);\n    }\n    get keyPair() {\n        return this.sessionKeyPair;\n    }\n    // dapp 加密:\n    // base64(hex（nonce+加密内容）)\n    encrypt(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = nacl.box(encodedMessage, nonce, hexToByteArray(receiverPublicKey), this.keyPair.secretKey);\n        console.log('use nonce: ', nonce, encrypted);\n        let concatInfo = concatUint8Arrays(nonce, encrypted);\n        console.log('before hex: ', concatInfo);\n        var hexResult = toHexString(concatInfo);\n        console.log('before encode: ', hexResult);\n        var encodedResult = new TextEncoder().encode(hexResult);\n        console.log('before base64: ', encodedResult);\n        console.log('send encrypt:', `Decryption error: \\n message: ${message.toString()} \\n receiver pubkey: ${receiverPublicKey.toString()} \\n keypair pubkey: ${toHexString(this.keyPair.publicKey)} \\n keypair secretkey: ${toHexString(this.keyPair.secretKey)}`);\n        return base64encode(encodedResult, false);\n    }\n    // 钱包加密内容\n    // 注意：没有中间hex的环节\n    // base64（nonce+加密内容)\n    encryptWallet(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = nacl.box(encodedMessage, nonce, hexToByteArray(receiverPublicKey), this.keyPair.secretKey);\n        console.log('use nonce: ', nonce, encrypted);\n        let concatInfo = concatUint8Arrays(nonce, encrypted);\n        console.log('before hex: ', concatInfo);\n        return base64encode(concatInfo, false);\n    }\n    // dapp 解密\n    // base64(split(nonce+加密内容))\n    decrypt(message, senderPublicKey) {\n        let base64Content = base64decode(message, true);\n        let messageByteArray = base64Content.toUint8Array();\n        console.log('after base64 decode uint8 array: ', messageByteArray, this.nonceLength);\n        const [nonce, internalMessage] = splitToUint8Arrays(messageByteArray, this.nonceLength);\n        console.log('parse nonce: ', nonce);\n        const decrypted = nacl.box.open(internalMessage, nonce, hexToByteArray(senderPublicKey), this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${toHexString(this.keyPair.publicKey)} \\n keypair secretkey: ${toHexString(this.keyPair.secretKey)}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    // dapp 解密\n    // base64(hextoByte(split(nonce+加密内容)))\n    decryptWallet(message, senderPublicKey) {\n        let base64Content = base64decode(message, true);\n        let messageByteArray = hexToByteArray(base64Content.toString());\n        console.log('after base64 decode uint8 array: ', messageByteArray, this.nonceLength);\n        const [nonce, internalMessage] = splitToUint8Arrays(messageByteArray, this.nonceLength);\n        console.log('parse nonce: ', nonce);\n        const decrypted = nacl.box.open(internalMessage, nonce, hexToByteArray(senderPublicKey), this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${toHexString(this.keyPair.publicKey)} \\n keypair secretkey: ${toHexString(this.keyPair.secretKey)}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    stringifyKeypair() {\n        return {\n            publicKey: toHexString(this.keyPair.publicKey),\n            secretKey: toHexString(this.keyPair.secretKey)\n        };\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as ed25519 from \"@stablelib/ed25519\";\nimport { toString } from \"uint8arrays/to-string\";\nimport { fromString } from \"uint8arrays/from-string\";\nimport { safeJsonParse, safeJsonStringify } from \"../utils/safejson\";\nimport { toHexString } from \"../utils/utils\";\nimport nacl from \"tweetnacl\";\nimport * as log from \"../utils/log\";\nexport const JWTHeaderType = \"dapp\";\nexport const JWT_IRIDIUM_ALG = \"EdDSA\";\nexport const JWT_IRIDIUM_TYP = \"JWT\";\nexport const JWT_DELIMITER = \".\";\nexport const JWT_ENCODING = \"base64url\";\nexport const JSON_ENCODING = \"utf8\";\nexport const DATA_ENCODING = \"utf8\";\nexport const KEY_PAIR_SEED_LENGTH = 32;\nexport const DID_DELIMITER = \":\";\nexport const DID_PREFIX = \"did\";\nexport const DID_METHOD = \"key\";\nexport const MULTICODEC_ED25519_ENCODING = \"base58btc\";\nexport const MULTICODEC_ED25519_BASE = \"z\";\nexport const MULTICODEC_ED25519_HEADER = \"K36\";\nexport const MULTICODEC_ED25519_LENGTH = 32;\nexport function generateKeyPair() {\n    // let local_seed = randomBytes(KEY_PAIR_SEED_LENGTH)\n    // return ed25519.generateKeyPairFromSeed(local_seed);\n    return nacl.sign.keyPair();\n}\nexport function decodeJSON(str) {\n    return safeJsonParse(toString(fromString(str, JWT_ENCODING), JSON_ENCODING));\n}\nexport function encodeJSON(val) {\n    return toString(fromString(safeJsonStringify(val), JSON_ENCODING), JWT_ENCODING);\n}\nexport function encodeIss(publicKey) {\n    log.logDebug(`publicKey: ${toHexString(publicKey)}`);\n    var publicKeyStr = toString(publicKey, MULTICODEC_ED25519_ENCODING);\n    return [DID_PREFIX, DID_METHOD, publicKeyStr].join(DID_DELIMITER);\n}\nexport function decodeIss(issuer) {\n    const [prefix, method, multicodec] = issuer.split(DID_DELIMITER);\n    if (prefix !== DID_PREFIX || method !== DID_METHOD) {\n        throw new Error(`Issuer must be a DID with method \"key\"`);\n    }\n    if (multicodec === undefined) {\n        throw new Error('multicodec is undefined');\n    }\n    const publicKey = fromString(multicodec, MULTICODEC_ED25519_ENCODING);\n    if (publicKey === undefined || publicKey.length !== MULTICODEC_ED25519_LENGTH) {\n        throw new Error(`Issuer must be a public key with length 32 bytes`);\n    }\n    return publicKey;\n}\n// ---------- Signature ----------------------------------------------- //\nexport function encodeSig(bytes) {\n    return toString(bytes, JWT_ENCODING);\n}\nexport function decodeSig(encoded) {\n    return fromString(encoded, JWT_ENCODING);\n}\n// ---------- Data ----------------------------------------------- //\nexport function encodeData(params) {\n    return fromString([encodeJSON(params.header), encodeJSON(params.payload)].join(JWT_DELIMITER), DATA_ENCODING);\n}\nexport function decodeData(data) {\n    var _a, _b;\n    const params = toString(data, DATA_ENCODING).split(JWT_DELIMITER);\n    const header = decodeJSON((_a = params[0]) !== null && _a !== void 0 ? _a : '{}');\n    const payload = decodeJSON((_b = params[1]) !== null && _b !== void 0 ? _b : '{}');\n    return { header, payload };\n}\n// ---------- JWT ----------------------------------------------- //\nexport function encodeJWT(params) {\n    return [encodeJSON(params.header), encodeJSON(params.payload), encodeSig(params.signature)].join(JWT_DELIMITER);\n}\nexport function decodeJWT(jwt) {\n    var _a, _b, _c;\n    const params = jwt.split(JWT_DELIMITER);\n    const header = decodeJSON((_a = params[0]) !== null && _a !== void 0 ? _a : '{}');\n    const payload = decodeJSON((_b = params[1]) !== null && _b !== void 0 ? _b : '{}');\n    const signature = decodeSig((_c = params[2]) !== null && _c !== void 0 ? _c : '{}');\n    const data = fromString(params.slice(0, 2).join(JWT_DELIMITER), DATA_ENCODING);\n    return { header, payload, signature, data };\n}\nexport function signJWT(sub_1, aud_1, ttl_1, keyPair_1) {\n    return __awaiter(this, arguments, void 0, function* (sub, aud, ttl, keyPair, iat = Math.floor(Date.now())) {\n        const header = { alg: JWT_IRIDIUM_ALG, typ: JWT_IRIDIUM_TYP };\n        const iss = encodeIss(keyPair.publicKey);\n        const exp = iat + ttl;\n        const act = \"authenticate user\";\n        const payload = { iss, sub, aud, act, iat, exp };\n        const data = encodeData({ header, payload });\n        // const signature = ed25519.sign(keyPair.secretKey, data);\n        log.logDebug(`get sec kp: ${keyPair.secretKey} {${keyPair.secretKey.length}}`);\n        const signature = nacl.sign.detached(data, keyPair.secretKey);\n        return encodeJWT({ header, payload, signature });\n    });\n}\nexport function verifyJWT(jwt) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { header, payload, data, signature } = decodeJWT(jwt);\n        if (header.alg !== JWT_IRIDIUM_ALG || header.typ !== JWT_IRIDIUM_TYP) {\n            throw new Error(\"JWT must use EdDSA algorithm\");\n        }\n        const publicKey = decodeIss(payload.iss);\n        return ed25519.verify(publicKey, data, signature);\n    });\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { OKXWalletConnector } from './connect';\nimport { CONNECT_METHOD_FETCHMSG, CONNECT_METHOD_LOGIN, CONNECT_METHOD_PUBLISH, CONNECT_METHOD_RECEIVE, CONNECT_METHOD_SUB } from './commands';\nimport { OKXCONNECTOR_CACHE_KEY, OKXCONNECTOR_CRYPTO_KEY, OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE, OKXCONNECTOR_TOKEN_CACHE, OKXCONNECTOR_JWT_KEY, OKXCONNECTOR_SESSION_PREFIX_KEY } from './storageconstants';\nimport { OKXCONNECTOR_JWT_SIDE, OKXCONNECTOR_JWT_TTL } from './jwtconstants';\nimport { CONNECT_JSONRPC_VER, OKXCONNECTOR_MESSAGE_TTL, OKXCONNECTOR_WS_URL } from './constants';\nimport { EventEmitter } from \"eventemitter3\";\nimport { Storage } from './storage';\nimport { generateTopic, hexToByteArray, toHexString } from '../utils/utils';\nimport { SessionCrypto } from '../crypto/crypto';\nimport { generateKeyPair, signJWT } from './jwt';\nimport { safeJsonParse, safeJsonStringify } from '../utils/safejson';\nimport * as log from \"../utils/log\";\nimport { logDebug } from \"../utils/log\";\nexport class ConnectionManager {\n    constructor() {\n        this.events = new EventEmitter();\n        // local storage\n        this.connectStorage = new Storage(OKXCONNECTOR_CACHE_KEY);\n        this.crypto = new SessionCrypto();\n        this.jwtKeyPair = this.getCachedJWTKeyPair();\n        this.saveJWTKeyPair(this.jwtKeyPair);\n        // wss connection\n        this.connector = new OKXWalletConnector(OKXCONNECTOR_WS_URL);\n        this.packageId = Date.now();\n        // connection state\n        this.connectedWalletPK = '';\n        this.currentTopic = '';\n        log.logDebug(`this.connectedWalletPK  constructor   ${this.connectedWalletPK}`);\n    }\n    refreshPackageId() {\n        this.packageId = Date.now();\n    }\n    saveCryptoKeyPair(keyPair) {\n        let cacheInfo = safeJsonStringify(keyPair);\n        // encrypt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, OKXCONNECTOR_CRYPTO_KEY);\n    }\n    getCachedCryptoKeyPair() {\n        // decrypt kp\n        const kp = this.connectStorage.getAndDecrypt(OKXCONNECTOR_CRYPTO_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            log.logDebug('get cached crypto key:');\n            log.logDebug(content);\n            let keyPairInfo = safeJsonParse(content);\n            return keyPairInfo;\n        }\n        else {\n            this.connectStorage.clearCache();\n        }\n        return null;\n    }\n    saveJWTKeyPair(keyPair) {\n        var strkeyPair = {\n            publicKey: toHexString(keyPair.publicKey),\n            secretKey: toHexString(keyPair.secretKey)\n        };\n        log.logDebug('save jwt kp');\n        let cacheInfo = safeJsonStringify(strkeyPair);\n        log.logDebug(cacheInfo);\n        // encrypt jwt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, OKXCONNECTOR_JWT_KEY);\n    }\n    getCachedJWTKeyPair() {\n        const kp = this.connectStorage.getAndDecrypt(OKXCONNECTOR_JWT_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            // TODO: decrypt jwt kp\n            log.logDebug('get cached jwt kp:');\n            log.logDebug(content);\n            let strKeyPairInfo = safeJsonParse(content);\n            log.logDebug('save jwt kp');\n            log.logDebug(strKeyPairInfo);\n            var keyPair = {\n                publicKey: hexToByteArray(strKeyPairInfo.publicKey),\n                secretKey: hexToByteArray(strKeyPairInfo.secretKey)\n            };\n            return keyPair;\n        }\n        else {\n            return generateKeyPair();\n        }\n    }\n    isWalletPKReady() {\n        log.logDebug(`isWalletPKReady  ===> ${this.connectedWalletPK}`);\n        return this.connectedWalletPK.length > 0;\n    }\n    makeJWT(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield signJWT(topic, OKXCONNECTOR_JWT_SIDE, OKXCONNECTOR_JWT_TTL, // 24h\n            this.jwtKeyPair);\n        });\n    }\n    parsePackage(input_1) {\n        return __awaiter(this, arguments, void 0, function* (input, ignoreACK = false) {\n            var _a, _b, _c;\n            this.events.emit(input.id, input);\n            // send back ACK\n            if (!ignoreACK) {\n                yield this.sendACK(input.id, true);\n                let topic = (_a = this.connectStorage.getItem(OKXCONNECTOR_TOKEN_CACHE)) === null || _a === void 0 ? void 0 : _a.content;\n                if (topic) {\n                    let inputObj = input;\n                    if ((_c = (_b = inputObj.params) === null || _b === void 0 ? void 0 : _b.data) === null || _c === void 0 ? void 0 : _c.messageId) {\n                        this.refreshPackageId();\n                        yield this.sendReceive(this.packageId.toString(), input.id, topic);\n                    }\n                }\n            }\n        });\n    }\n    restoreConnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`connectionManager  restoreConenct   ${topic}`);\n            if ((typeof topic !== 'string') || topic.length === 0) {\n                throw new Error('CONNECTION: invalid topic');\n            }\n            log.logDebug(`connectionManager  restoreConenct   disconnect`);\n            yield this.disconnect(true);\n            this.connectStorage.saveContent(topic, OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`connectionManager  restoreConenct   conect`);\n            yield this.connect(true);\n        });\n    }\n    getConnectInfo() {\n        var topic = generateTopic();\n        log.logDebug(`generate topic token: ${topic}`);\n        this.currentTopic = topic;\n        const info = {\n            channelId: topic,\n            clientId: this.crypto.stringifyKeypair().publicKey,\n        };\n        return info;\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            this.timeLog = new Date().getTime();\n            logDebug(\"ConnectTime---enter->\", this.timeLog);\n            let lastConnectId = this.connectStorage.getItem(OKXCONNECTOR_TOKEN_CACHE);\n            //1. generate topic & jwt\n            var topic = this.currentTopic;\n            log.logDebug(`generate topic token: ${topic}`);\n            // crypto keypair\n            if (fromRestore) {\n                if (typeof lastConnectId !== 'undefined' && lastConnectId !== null) {\n                    log.logDebug(`read last connect id: ${lastConnectId}`);\n                    topic = lastConnectId.content;\n                }\n                var cachedSenderPublicKey = this.connectStorage.getItem(OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                if (cachedSenderPublicKey) {\n                    this.connectedWalletPK = cachedSenderPublicKey.content;\n                }\n                // recovery from cache\n                const keyPairInfo = this.getCachedCryptoKeyPair();\n                this.crypto = new SessionCrypto(keyPairInfo);\n            }\n            log.logDebug(`use crypto client id: ${this.crypto.stringifyKeypair().publicKey}`);\n            // cache topic\n            this.connectStorage.saveContent(topic, OKXCONNECTOR_TOKEN_CACHE);\n            var jwtToken = yield this.makeJWT(topic);\n            log.logDebug(`generate jwt token: ${jwtToken}`);\n            this.connectStorage.saveContent(jwtToken, 'jwt');\n            return new Promise((resolve, reject) => {\n                // 1. when websocket opened\n                this.connector.onOpen(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug(`1. connector on open`);\n                    const timeOne = new Date().getTime();\n                    logDebug(\"ConnectTime---open->\", timeOne - this.timeLog);\n                    //2. send jwt to login\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when login');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // throw error\n                            reject(error);\n                        }\n                        //3. send subscribe\n                        this.refreshPackageId();\n                        this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                            // ack\n                            if (rsp && rsp.error) {\n                                log.logError('failed when subscribe');\n                                yield this.connector.disconnect();\n                                var error = new Error();\n                                error.message = rsp.error.message;\n                                error.name = rsp.error.code.toString();\n                                // throw error\n                                reject(error);\n                            }\n                            this.refreshPackageId();\n                            log.logDebug(`4. subscribe callback then send fetch: ${this.packageId}`);\n                            const timeF = new Date().getTime();\n                            logDebug(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n                            // 4. fetch messages\n                            yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                            resolve();\n                        }));\n                        log.logDebug(`3. login callback then send subscribe: ${this.packageId}`);\n                        const timeTh = new Date().getTime();\n                        logDebug(\"ConnectTime---login callback->\", timeTh - this.timeLog);\n                        yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                            log.logDebug('CONNECT: reconnect before send');\n                            yield this.connector.connect();\n                        }), {\n                            id: this.packageId.toString(),\n                            jsonrpc: CONNECT_JSONRPC_VER,\n                            method: CONNECT_METHOD_SUB,\n                            params: {\n                                topic: topic\n                            }\n                        });\n                    }));\n                    log.logDebug(`2. login called`);\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: CONNECT_JSONRPC_VER,\n                        method: CONNECT_METHOD_LOGIN,\n                        params: {\n                            token: jwtToken\n                        }\n                    });\n                    // 4. listen when dapp back to front, receive wallet public key\n                    this.connector.addPackageParse((event) => {\n                        var _a;\n                        log.logDebug(`connect: parse package`);\n                        log.logDebug(event);\n                        if (!(\"params\" in event) || !(\"data\" in event[\"params\"])) {\n                            this.parsePackage(event, true);\n                            return;\n                        }\n                        let rawMsg = (_a = event.params.data) === null || _a === void 0 ? void 0 : _a.message;\n                        if (typeof rawMsg !== 'undefined') {\n                            rawMsg = rawMsg.replace(/'/g, '\"');\n                            let parsedMessage = safeJsonParse(rawMsg);\n                            if (typeof parsedMessage !== 'string' && \"clientId\" in parsedMessage && parsedMessage.clientId && parsedMessage.clientId.length > 0) {\n                                this.connectedWalletPK = parsedMessage.clientId;\n                                log.logDebug(`this.connectedWalletPK  addPackageParse   ${this.connectedWalletPK}`);\n                                // exchange sender public key\n                                // cache wallet public key\n                                this.connectStorage.saveContent(this.connectedWalletPK, OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                                // cache crypto keypair\n                                this.saveCryptoKeyPair(this.crypto.stringifyKeypair());\n                            }\n                        }\n                        // ignore receive echo\n                        this.parsePackage(event, event.method === CONNECT_METHOD_RECEIVE);\n                    });\n                }));\n                this.connector.connect();\n            });\n        });\n    }\n    disconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            yield this.connector.disconnect();\n            //clean cached topic\n            //如果是恢复连接，就不清理解密public key\n            this.connectStorage.clearCache(OKXCONNECTOR_TOKEN_CACHE);\n            if (!fromRestore) {\n                this.connectStorage.clearCache(OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                this.connectedWalletPK = '';\n            }\n        });\n    }\n    addListener(event, success, fail) {\n        this.connector.addListener(safeJsonStringify(event), (rawMsg) => {\n            rawMsg = rawMsg.replace(/'/g, '\"');\n            log.logDebug(`addListener ===> ${rawMsg}`);\n            if (typeof rawMsg !== 'undefined') {\n                var msgObj = safeJsonParse(rawMsg);\n                var msg = msgObj.message;\n                if (msgObj.clientId && msgObj.clientId.length > 0) {\n                    this.connectedWalletPK = msgObj.clientId;\n                    this.connectStorage.saveContent(this.connectedWalletPK, OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                    log.logDebug(`this.connectedWalletPK  addListener   ${this.connectedWalletPK}`);\n                    log.logDebug(`this.cryptoKey  addListener   ${toHexString(this.crypto.keyPair.publicKey)}`);\n                    // cache crypto keypair\n                    this.saveCryptoKeyPair(this.crypto.stringifyKeypair());\n                }\n                var result = this.crypto.decrypt(msg, this.connectedWalletPK);\n                log.logDebug(`addListener ===> ${result}`);\n                return result;\n            }\n            return undefined;\n        }, success, fail);\n    }\n    send(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // make send msg payload\n            log.logDebug(`message send =====> ${msg}`);\n            if (!this.isWalletPKReady()) {\n                // channel not ready\n                throw new Error('connection not finish');\n            }\n            let message = this.crypto.encrypt(msg, this.connectedWalletPK);\n            // only one topic\n            let topic = this.connectStorage.getItem(OKXCONNECTOR_TOKEN_CACHE);\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                method: CONNECT_METHOD_PUBLISH,\n                jsonrpc: CONNECT_JSONRPC_VER,\n                params: {\n                    message: {\n                        topic: topic === null || topic === void 0 ? void 0 : topic.content,\n                        message: message,\n                        ttl: OKXCONNECTOR_MESSAGE_TTL\n                    }\n                } // crypted\n            };\n            this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                // ack\n                if (rsp && rsp.error) {\n                    log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                }\n                else if (rsp && !rsp.error) {\n                    log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                }\n            }));\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                yield this.connector.connect();\n            }), payload);\n            return this.packageId;\n        });\n    }\n    sendACK(msgId_1, success_1) {\n        return __awaiter(this, arguments, void 0, function* (msgId, success, reason = undefined) {\n            if (success === true) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: CONNECT_JSONRPC_VER,\n                    result: true\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    yield this.connector.connect();\n                }), payload);\n            }\n            else if (reason) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: CONNECT_JSONRPC_VER,\n                    error: {\n                        code: reason.code, //int\n                        message: reason.message\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    // send receive\n    sendReceive(msgId, messageId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = {\n                id: msgId,\n                jsonrpc: CONNECT_JSONRPC_VER,\n                method: CONNECT_METHOD_RECEIVE,\n                params: {\n                    data: {\n                        messageId: messageId,\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                yield this.connector.connect();\n            }), payload);\n        });\n    }\n    // send receive\n    // 1. fetch all \n    // 2. send back receive\n    // 3. check has more, if so, repeat from 1st step\n    sendFetchAndConsumeMessages(msgId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(msgId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic == topic) {\n                                let messageId = msg.messageId;\n                                yield this.connector.getMsgPayloadFromHistory(msg);\n                                // send receive command to relay server\n                                this.refreshPackageId();\n                                yield this.sendReceive(this.packageId.toString(), messageId, topic);\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            const timeFive = new Date().getTime();\n            logDebug(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: msgId,\n                jsonrpc: CONNECT_JSONRPC_VER,\n                method: CONNECT_METHOD_FETCHMSG,\n                params: {\n                    data: {\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                yield this.connector.connect();\n            }), payload);\n        });\n    }\n    cleanCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.connectStorage.clearCache();\n        });\n    }\n    saveSessionContent(key, data) {\n        if (!data) {\n            this.connectStorage.clearCache(OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        let jsonData = safeJsonStringify(data);\n        this.connectStorage.encryptStoreMsg(jsonData, OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n    }\n    getSessionContent(key) {\n        let jsonStr = this.connectStorage.getAndDecrypt(OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        if (jsonStr) {\n            let object = safeJsonParse(jsonStr);\n            return object;\n        }\n        return undefined;\n    }\n}\n","export const WalletConnectionManagerTopicInfoCacheKey = \"wcmtic\";\nexport const WalletConnectionManagerEvent = {\n    RECEIVE_REQUEST: \"payload\"\n};\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { OKXWalletConnector } from './connect';\nimport { CONNECT_METHOD_FETCHMSG, CONNECT_METHOD_LOGIN, CONNECT_METHOD_PUBLISH, CONNECT_METHOD_RECEIVE, CONNECT_METHOD_SUB, CONNECT_METHOD_UNSUB } from './commands';\nimport { OKXCONNECTOR_CACHE_KEY, OKXCONNECTOR_CRYPTO_KEY, OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE, OKXCONNECTOR_TOKEN_CACHE, OKXCONNECTOR_JWT_KEY, OKXCONNECTOR_SESSION_PREFIX_KEY } from './storageconstants';\nimport { OKXCONNECTOR_JWT_WALLET_SIDE, OKXCONNECTOR_JWT_TTL } from './jwtconstants';\nimport { CONNECT_JSONRPC_VER, OKXCONNECTOR_MESSAGE_TTL, OKXCONNECTOR_WS_URL } from './constants';\nimport { WalletConnectionManagerTopicInfoCacheKey } from './walletConnectionConstants';\nimport { EventEmitter } from \"eventemitter3\";\nimport { Storage } from './storage';\nimport { hexToByteArray, toHexString } from '../utils/utils';\nimport { SessionCrypto } from '../crypto/crypto';\nimport { generateKeyPair, signJWT } from './jwt';\nimport { safeJsonParse, safeJsonStringify } from '../utils/safejson';\nimport * as log from \"../utils/log\";\nimport { logDebug } from \"../utils/log\";\nexport class WalletConnectionManager {\n    constructor() {\n        this.events = new EventEmitter();\n        this.communicateEvents = new EventEmitter();\n        log.logDebug('connect manager construct');\n        // local storage\n        this.connectStorage = new Storage(OKXCONNECTOR_CACHE_KEY);\n        // this.crypto = new SessionCrypto()\n        this.jwtKeyPair = this.getCachedJWTKeyPair();\n        this.saveJWTKeyPair(this.jwtKeyPair);\n        // wss connection\n        this.connector = new OKXWalletConnector(OKXCONNECTOR_WS_URL);\n        this.packageId = Date.now();\n        // connection state\n        this.sessionCryptoInfoMap = new Map();\n        // log.logDebug(`this.connectedWalletPK  constructor   ${this.connectedWalletPK}`)\n        this.inLogin = false;\n        this.isLogined = false;\n    }\n    refreshPackageId() {\n        this.packageId = Date.now();\n    }\n    saveCryptoKeyPair(topicId, keyPair) {\n        let cacheInfo = safeJsonStringify(keyPair);\n        // encrypt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, OKXCONNECTOR_CRYPTO_KEY + topicId);\n    }\n    getCachedCryptoKeyPair(topicId) {\n        // decrypt kp\n        const kp = this.connectStorage.getAndDecrypt(OKXCONNECTOR_CRYPTO_KEY + topicId);\n        const content = kp;\n        if (typeof content == 'string') {\n            log.logDebug('get cached crypto key:');\n            log.logDebug(content);\n            let keyPairInfo = safeJsonParse(content);\n            return keyPairInfo;\n        }\n        else {\n            this.connectStorage.clearCache();\n        }\n        return null;\n    }\n    saveJWTKeyPair(keyPair) {\n        var strkeyPair = {\n            publicKey: toHexString(keyPair.publicKey),\n            secretKey: toHexString(keyPair.secretKey)\n        };\n        log.logDebug('save jwt kp');\n        let cacheInfo = safeJsonStringify(strkeyPair);\n        log.logDebug(cacheInfo);\n        // encrypt jwt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, OKXCONNECTOR_JWT_KEY);\n        log.logDebug('after save jwt kp');\n    }\n    getCachedJWTKeyPair() {\n        const kp = this.connectStorage.getAndDecrypt(OKXCONNECTOR_JWT_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            // TODO: decrypt jwt kp\n            log.logDebug('get cached jwt kp:');\n            log.logDebug(content);\n            let strKeyPairInfo = safeJsonParse(content);\n            log.logDebug('save jwt kp');\n            log.logDebug(strKeyPairInfo);\n            var keyPair = {\n                publicKey: hexToByteArray(strKeyPairInfo.publicKey),\n                secretKey: hexToByteArray(strKeyPairInfo.secretKey)\n            };\n            return keyPair;\n        }\n        else {\n            return generateKeyPair();\n        }\n    }\n    isTopicPublicKeyExist(topicId) {\n        log.logDebug(`isTopicPublicKeyExist  ===> ${topicId}`);\n        return this.sessionCryptoInfoMap.get(topicId);\n    }\n    makeJWT(timestampStr) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield signJWT(timestampStr, OKXCONNECTOR_JWT_WALLET_SIDE, OKXCONNECTOR_JWT_TTL, // 24h\n            this.jwtKeyPair);\n        });\n    }\n    parsePackage(topic_1, input_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, input, ignoreACK = false) {\n            var _a, _b, _c;\n            this.events.emit(input.id, input);\n            // emit event\n            let sessionInfo = this.sessionCryptoInfoMap.get(topic);\n            log.logDebug('get sessionInfo for decrypt:', sessionInfo);\n            if (sessionInfo && input.params.data) {\n                var message = undefined;\n                message = sessionInfo.crypto.decryptWallet((_a = input.params.data) === null || _a === void 0 ? void 0 : _a.message, sessionInfo.dappPublicKey);\n                logDebug('<<< receive msg:', topic, message);\n                this.communicateEvents.emit(topic, message);\n            }\n            // send back ACK\n            if (!ignoreACK) {\n                yield this.sendACK(input.id, true);\n                if (topic) {\n                    let inputObj = input;\n                    if ((_c = (_b = inputObj.params) === null || _b === void 0 ? void 0 : _b.data) === null || _c === void 0 ? void 0 : _c.messageId) {\n                        this.refreshPackageId();\n                        yield this.sendReceive(this.packageId.toString(), input.id, topic);\n                    }\n                }\n            }\n        });\n    }\n    recovrySessionInfoFromCache() {\n        // get topic ids and keys from session\n        // WalletConnectionCryptoCacheMap\n        // {[topicId]: {cryptoKeypair: {publicKey:string, secretKey:string}, dappPublicKey:clientId}}\n        let jsonStr = this.connectStorage.getAndDecrypt(WalletConnectionManagerTopicInfoCacheKey);\n        log.logDebug('get cached sessionInfos:', jsonStr);\n        if (jsonStr) {\n            let cacheMap = safeJsonParse(jsonStr);\n            for (let topicId in cacheMap) {\n                let topicItem = cacheMap[topicId];\n                log.logDebug('make topicItem:', topicItem);\n                let cryptoItem = {\n                    topic: topicId,\n                    crypto: new SessionCrypto({\n                        publicKey: topicItem.cryptoKeyPair.publicKey,\n                        secretKey: topicItem.cryptoKeyPair.secretKey\n                    }),\n                    dappPublicKey: topicItem.dappPublicKey\n                };\n                this.sessionCryptoInfoMap.set(topicId, cryptoItem);\n            }\n        }\n        log.logDebug('get cached sessionInfos map:', this.sessionCryptoInfoMap);\n    }\n    syncCacheSessionInfo() {\n        let cacheMap = {};\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            log.logDebug('for each Keys', topicId);\n            if (cryptoItem) {\n                cacheMap[topicId] = {\n                    cryptoKeyPair: cryptoItem.crypto.stringifyKeypair(),\n                    dappPublicKey: cryptoItem.dappPublicKey\n                };\n            }\n        }\n        let jsonData = safeJsonStringify(cacheMap);\n        log.logDebug('sync cache sessionInfos:', jsonData);\n        this.connectStorage.encryptStoreMsg(jsonData, WalletConnectionManagerTopicInfoCacheKey);\n    }\n    cacheSessionInfo(topic, sessionInfo) {\n        this.sessionCryptoInfoMap.set(topic, sessionInfo);\n        log.logDebug('cache sessionInfo:', topic, sessionInfo, this.sessionCryptoInfoMap);\n        this.syncCacheSessionInfo();\n    }\n    // add and subscribe topic\n    appendTopic(topic, sessionPublicKey) {\n        return __awaiter(this, void 0, void 0, function* () {\n            logDebug('4.1. get append Topic:', topic);\n            // 1. check if connected\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.isLogined) {\n                    var error = new Error();\n                    error.message = \"connection is not logined\";\n                    error.name = \"append error\";\n                    // throw error\n                    reject(error);\n                    return;\n                }\n                // 2. subscribe topic and session public key\n                yield this.subscribeTopics(Array.from([topic]));\n                let cryptoItem = {\n                    topic: topic,\n                    crypto: new SessionCrypto(),\n                    dappPublicKey: sessionPublicKey\n                };\n                this.cacheSessionInfo(topic, cryptoItem);\n                resolve();\n            }));\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.timeLog = new Date().getTime();\n            logDebug(\"[Wallet] ConnectTime---enter->\", this.timeLog);\n            // 0. get cached topics and infos\n            let timestampStr = Date.now().toString();\n            var jwtToken = yield this.makeJWT(timestampStr);\n            log.logDebug(`generate jwt token: ${jwtToken}`);\n            this.connectStorage.saveContent(jwtToken, 'jwt');\n            this.recovrySessionInfoFromCache();\n            // 1.\n            return new Promise((resolve, reject) => {\n                // 1. when websocket opened\n                this.inLogin = true;\n                this.connector.onOpen(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug(`1. connector on open`);\n                    const timeOne = new Date().getTime();\n                    logDebug(\"ConnectTime---open->\", timeOne - this.timeLog);\n                    //2. send jwt to login\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when login');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // throw error\n                            reject(error);\n                        }\n                        else {\n                            this.isLogined = true;\n                            resolve();\n                            // 3. subscribe cached topics\n                            log.logDebug('3. subscribe cached topics', this.sessionCryptoInfoMap);\n                            if (this.sessionCryptoInfoMap.size > 0) {\n                                yield this.subscribeTopics(Array.from(this.sessionCryptoInfoMap.keys()));\n                            }\n                        }\n                    }));\n                    log.logDebug(`2. login called`);\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: CONNECT_JSONRPC_VER,\n                        method: CONNECT_METHOD_LOGIN,\n                        params: {\n                            token: jwtToken\n                        }\n                    });\n                }));\n                this.connector.connect();\n                // add callback\n                this.connector.addPackageParse((event) => {\n                    var _a, _b;\n                    log.logDebug(`connect: parse package`);\n                    log.logDebug(event);\n                    if (!(\"params\" in event) || !(\"data\" in event[\"params\"])) {\n                        this.parsePackage(\"\", event, true);\n                        return;\n                    }\n                    // ignore receive echo\n                    if ((_a = event.params.data) === null || _a === void 0 ? void 0 : _a.topic) {\n                        this.parsePackage((_b = event.params.data) === null || _b === void 0 ? void 0 : _b.topic, event, event.method === CONNECT_METHOD_RECEIVE);\n                    }\n                });\n                // this.connector.addListener(safeJsonStringify(event), (rawMsg: string)=> {\n                //    rawMsg = rawMsg.replace(/'/g, '\"')\n                //    log.logDebug(`addListener ===> ${rawMsg}`)\n                //    if (typeof rawMsg !== 'undefined') {\n                //       var msgObj = safeJsonParse(rawMsg)\n                //       var msg = msgObj.message\n                //       let crypto = \n                //       var result = this.crypto.decrypt(msg, this.connectedWalletPK)\n                //       log.logDebug(`addListener ===> ${result}`)\n                //       return result\n                //    }\n                //    return undefined\n                // }, ()=>{\n                //    // emit success\n                // }, ()=>{\n                //    // emit fail\n                // })\n            });\n        });\n    }\n    // 获取对应topic session下的钱包公钥\n    // 在返回approve时需要填充到clientId字段中\n    getSessionPublicKey(topicId) {\n        if (this.isTopicPublicKeyExist(topicId)) {\n            let item = this.sessionCryptoInfoMap.get(topicId);\n            if (item) {\n                return toHexString(item.crypto.keyPair.publicKey);\n            }\n        }\n        return undefined;\n    }\n    getCurrentCachedTopicIdList() {\n        return Array.from(this.sessionCryptoInfoMap.keys());\n    }\n    disconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            yield this.connector.disconnect();\n            //clean cached topic\n            //如果是恢复连接，就不清理解密public key\n            this.connectStorage.clearCache(OKXCONNECTOR_TOKEN_CACHE);\n            if (!fromRestore) {\n                this.connectStorage.clearCache(OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n            }\n        });\n    }\n    send(topic_1, msg_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, msg, needPublicKey = false) {\n            var _a, _b;\n            // make send msg payload\n            log.logDebug(`message send =====> ${msg}`);\n            if (!this.isTopicPublicKeyExist(topic)) {\n                // channel not ready\n                throw new Error('connection not finish');\n            }\n            let connectedDappPK = (_a = this.sessionCryptoInfoMap.get(topic)) === null || _a === void 0 ? void 0 : _a.dappPublicKey;\n            let cryptoObject = (_b = this.sessionCryptoInfoMap.get(topic)) === null || _b === void 0 ? void 0 : _b.crypto;\n            if (cryptoObject && connectedDappPK) {\n                let message = cryptoObject.encryptWallet(msg, connectedDappPK);\n                let messageObj = {\n                    message: message,\n                };\n                if (needPublicKey) {\n                    messageObj.clientId = toHexString(cryptoObject.keyPair.publicKey);\n                    let privateKey = toHexString(cryptoObject.keyPair.secretKey);\n                    log.logDebug(`message send use dapp publicKey =====> ${connectedDappPK}`);\n                    log.logDebug(`message send use publicKey =====> ${messageObj.clientId}`);\n                    log.logDebug(`message send use secretKey =====> ${privateKey}`);\n                }\n                this.refreshPackageId();\n                const payload = {\n                    id: this.packageId.toString(),\n                    method: CONNECT_METHOD_PUBLISH,\n                    jsonrpc: CONNECT_JSONRPC_VER,\n                    params: {\n                        message: {\n                            topic: topic,\n                            message: safeJsonStringify(messageObj),\n                            ttl: OKXCONNECTOR_MESSAGE_TTL\n                        }\n                    } // crypted\n                };\n                this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                    // ack\n                    if (rsp && rsp.error) {\n                        log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                    }\n                    else if (rsp && !rsp.error) {\n                        log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                    }\n                }));\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    yield this.connector.connect();\n                }), payload);\n                return this.packageId;\n            }\n        });\n    }\n    sendACK(msgId_1, success_1) {\n        return __awaiter(this, arguments, void 0, function* (msgId, success, reason = undefined) {\n            if (success === true) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: CONNECT_JSONRPC_VER,\n                    result: true\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    yield this.connector.connect();\n                }), payload);\n            }\n            else if (reason) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: CONNECT_JSONRPC_VER,\n                    error: {\n                        code: reason.code, //int\n                        message: reason.message\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    // send receive\n    sendReceive(msgId, messageId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = {\n                id: msgId,\n                jsonrpc: CONNECT_JSONRPC_VER,\n                method: CONNECT_METHOD_RECEIVE,\n                params: {\n                    data: {\n                        messageId: messageId,\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendUnsubscribe(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: make disconnect payload\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                yield this.connector.connect();\n            }), {\n                id: this.packageId.toString(),\n                jsonrpc: CONNECT_JSONRPC_VER,\n                method: CONNECT_METHOD_UNSUB,\n                params: {\n                    topic: topic\n                }\n            });\n            // remove topicId\n            this.sessionCryptoInfoMap.delete(topic);\n            this.syncCacheSessionInfo();\n        });\n    }\n    // send receive\n    // 1. fetch all \n    // 2. send back receive\n    // 3. check has more, if so, repeat from 1st step\n    sendFetchAndConsumeMessages(msgId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(msgId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic == topic) {\n                                let messageId = msg.messageId;\n                                yield this.connector.getMsgPayloadFromHistory(msg);\n                                // send receive command to relay server\n                                this.refreshPackageId();\n                                yield this.sendReceive(this.packageId.toString(), messageId, topic);\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            const timeFive = new Date().getTime();\n            logDebug(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: msgId,\n                jsonrpc: CONNECT_JSONRPC_VER,\n                method: CONNECT_METHOD_FETCHMSG,\n                params: {\n                    data: {\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                yield this.connector.connect();\n            }), payload);\n        });\n    }\n    cleanCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.connectStorage.clearCache();\n        });\n    }\n    saveSessionContent(key, data) {\n        if (!data) {\n            this.connectStorage.clearCache(OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        let jsonData = safeJsonStringify(data);\n        this.connectStorage.encryptStoreMsg(jsonData, OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n    }\n    getSessionContent(key) {\n        let jsonStr = this.connectStorage.getAndDecrypt(OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        if (jsonStr) {\n            let object = safeJsonParse(jsonStr);\n            return object;\n        }\n        return undefined;\n    }\n    // subscribe then fetch messages for each topics\n    subscribeTopics(topicIdList) {\n        return __awaiter(this, void 0, void 0, function* () {\n            logDebug(\"4.2 topicid list\", topicIdList);\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let finishCount = 0;\n                //3. send subscribe\n                for (let idx = 0; idx < topicIdList.length; ++idx) {\n                    let topicId = topicIdList[idx];\n                    this.refreshPackageId();\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when subscribe');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // reject(error)\n                            finishCount += 1;\n                            if (finishCount == topicIdList.length) {\n                                resolve();\n                            }\n                        }\n                        this.refreshPackageId();\n                        log.logDebug(`4. subscribe callback then send fetch: ${this.packageId}, ${topicId}`);\n                        const timeF = new Date().getTime();\n                        logDebug(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n                        // 4. fetch messages\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topicId);\n                        finishCount += 1;\n                        if (finishCount == topicIdList.length) {\n                            resolve();\n                        }\n                    }));\n                    log.logDebug(`3. login callback then send subscribe: ${this.packageId}, ${topicId}`);\n                    const timeTh = new Date().getTime();\n                    logDebug(\"ConnectTime---login callback->\", timeTh - this.timeLog);\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: CONNECT_JSONRPC_VER,\n                        method: CONNECT_METHOD_SUB,\n                        params: {\n                            topic: topicId\n                        }\n                    });\n                }\n            }));\n        });\n    }\n}\n","export class OKXConnectError extends Error {\n    constructor(code, message) {\n        if (message == undefined) {\n            message = getDefaultMessageByCode(code);\n        }\n        super(message);\n        this.code = code;\n        this.message = `${OKXConnectError.prefix} ${message ? '\\n' + message : ''}`;\n        Object.setPrototypeOf(this, OKXConnectError.prototype);\n    }\n}\nOKXConnectError.prefix = '[OKX_CONNECT_SDK_ERROR]';\nfunction getDefaultMessageByCode(code) {\n    if (code == OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR) {\n        return \"unknown error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR) {\n        return \"bad request error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.ALREADY_CONNECTED_ERROR) {\n        return \"already connected error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR) {\n        return \"not connected error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.UNKNOWN_APP_ERROR) {\n        return \"unknown app error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n        return \"user rejects error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED) {\n        return \"method not supported\";\n    }\n    return \"unknown error\";\n}\nexport var OKX_CONNECT_ERROR_CODES;\n(function (OKX_CONNECT_ERROR_CODES) {\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"BAD_REQUEST_ERROR\"] = 1] = \"BAD_REQUEST_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"ALREADY_CONNECTED_ERROR\"] = 11] = \"ALREADY_CONNECTED_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"NOT_CONNECTED_ERROR\"] = 12] = \"NOT_CONNECTED_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"UNKNOWN_APP_ERROR\"] = 100] = \"UNKNOWN_APP_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"USER_REJECTS_ERROR\"] = 300] = \"USER_REJECTS_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"CHAIN_NOT_SUPPORTED\"] = 500] = \"CHAIN_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"WALLET_NOT_SUPPORTED\"] = 600] = \"WALLET_NOT_SUPPORTED\";\n})(OKX_CONNECT_ERROR_CODES || (OKX_CONNECT_ERROR_CODES = {}));\nexport const PARSE_ERROR = \"PARSE_ERROR\";\nexport const INVALID_REQUEST = \"INVALID_REQUEST\";\nexport const METHOD_NOT_FOUND = \"METHOD_NOT_FOUND\";\nexport const INVALID_PARAMS = \"INVALID_PARAMS\";\nexport const INTERNAL_ERROR = \"INTERNAL_ERROR\";\nexport const SERVER_ERROR = \"SERVER_ERROR\";\nexport const RESERVED_ERROR_CODES = [-32700, -32600, -32601, -32602, -32603];\nexport const SERVER_ERROR_CODE_RANGE = [-32000, -32099];\nexport const STANDARD_ERROR_MAP = {\n    [PARSE_ERROR]: { code: -32700, message: \"Parse error\" },\n    [INVALID_REQUEST]: { code: -32600, message: \"Invalid Request\" },\n    [METHOD_NOT_FOUND]: { code: -32601, message: \"Method not found\" },\n    [INVALID_PARAMS]: { code: -32602, message: \"Invalid params\" },\n    [INTERNAL_ERROR]: { code: -32603, message: \"Internal error\" },\n    [SERVER_ERROR]: { code: -32000, message: \"Server error\" },\n};\nexport const DEFAULT_ERROR = SERVER_ERROR;\n","export const NameSpaceKeyEip155 = \"eip155\";\nexport const NameSpaceKeySOL = \"sol\";\nexport const NameSpaceKeyTON = \"ton\";\n","export function isJsonRpcPayload(payload) {\n    return (typeof payload === \"object\" &&\n        \"id\" in payload &&\n        \"jsonrpc\" in payload &&\n        payload.jsonrpc === \"2.0\");\n}\nexport function isJsonRpcRequest(payload) {\n    return isJsonRpcPayload(payload) && \"method\" in payload;\n}\nexport function isJsonRpcResponse(payload) {\n    return isJsonRpcPayload(payload) && (isJsonRpcResult(payload) || isJsonRpcError(payload));\n}\nexport function isJsonRpcResult(payload) {\n    return \"result\" in payload;\n}\nexport function isJsonRpcError(payload) {\n    return \"error\" in payload;\n}\nimport { RESERVED_ERROR_CODES, STANDARD_ERROR_MAP, DEFAULT_ERROR, INTERNAL_ERROR, SERVER_ERROR } from \"../error/okx-connect.error\";\nclass IncrementalRandomGenerator {\n    constructor(bits) {\n        this.i = 1;\n        const typedArray = bits === 8 ? new Uint8Array(1) : bits === 16 ? new Uint16Array(1) : new Uint32Array(1);\n        this.initialValue = crypto.getRandomValues(typedArray)[0];\n    }\n    getNextValue() {\n        return this.initialValue + this.i++;\n    }\n}\nconst uint8Generator = new IncrementalRandomGenerator(8);\nconst uint16Generator = new IncrementalRandomGenerator(16);\nexport function payloadId() {\n    const date = Date.now() * 1000;\n    const extra = uint8Generator.getNextValue();\n    return date + extra;\n}\nexport function getBigIntRpcId() {\n    const date = BigInt(Date.now()) * BigInt(1000000);\n    const extra = BigInt(uint16Generator.getNextValue());\n    return date + extra;\n}\nexport function formatJsonRpcRequest(method, params, id) {\n    return {\n        id: id || payloadId(),\n        jsonrpc: \"2.0\",\n        method,\n        params,\n    };\n}\nexport function formatJsonRpcResult(id, result) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        result,\n    };\n}\nexport function formatJsonRpcError(id, error, data) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        error: formatErrorMessage(error, data),\n    };\n}\nexport function isReservedErrorCode(code) {\n    return RESERVED_ERROR_CODES.includes(code);\n}\nexport function getError(type) {\n    if (!Object.keys(STANDARD_ERROR_MAP).includes(type)) {\n        return STANDARD_ERROR_MAP[DEFAULT_ERROR];\n    }\n    return STANDARD_ERROR_MAP[type];\n}\nexport function getErrorByCode(code) {\n    const match = Object.values(STANDARD_ERROR_MAP).find((e) => e.code === code);\n    if (!match) {\n        return STANDARD_ERROR_MAP[DEFAULT_ERROR];\n    }\n    return match;\n}\nexport function formatErrorMessage(error, data) {\n    if (typeof error === \"undefined\") {\n        return getError(INTERNAL_ERROR);\n    }\n    if (typeof error === \"string\") {\n        error = Object.assign(Object.assign({}, getError(SERVER_ERROR)), { message: error });\n    }\n    if (typeof data !== \"undefined\") {\n        error.data = data;\n    }\n    if (isReservedErrorCode(error.code)) {\n        error = getErrorByCode(error.code);\n    }\n    return error;\n}\nfunction getUrlProtocol(url) {\n    const matches = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!matches || !matches.length)\n        return;\n    return matches[0];\n}\nfunction matchRegexProtocol(url, regex) {\n    const protocol = getUrlProtocol(url);\n    if (typeof protocol === \"undefined\")\n        return false;\n    return new RegExp(regex).test(protocol);\n}\nexport function isHttpUrl(url) {\n    return matchRegexProtocol(url, \"^https?:\");\n}\nexport function isWsUrl(url) {\n    return matchRegexProtocol(url, \"^wss?:\");\n}\nexport function parseConnectionError(e, url, type) {\n    return e.message.includes(\"getaddrinfo ENOTFOUND\") || e.message.includes(\"connect ECONNREFUSED\")\n        ? new Error(`Unavailable ${type} RPC url at ${url}`)\n        : e;\n}\n","import EventEmitter from \"eventemitter3\";\nexport class IEngineEvents extends EventEmitter {\n    constructor() {\n        super();\n    }\n}\nexport class ISignClientEvents extends EventEmitter {\n    constructor() {\n        super();\n    }\n}\nexport class ISignClient {\n    constructor(data) {\n        this.data = data;\n    }\n}\nexport class IEngine {\n    constructor(client) {\n        this.client = client;\n    }\n}\n","export var TONCHAIN;\n(function (TONCHAIN) {\n    TONCHAIN[\"MAINNET\"] = \"-239\";\n})(TONCHAIN || (TONCHAIN = {}));\n","export var CONNECT_ITEM_ERROR_CODES;\n(function (CONNECT_ITEM_ERROR_CODES) {\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(CONNECT_ITEM_ERROR_CODES || (CONNECT_ITEM_ERROR_CODES = {}));\n","export function buildNameSpacesByConnectResponse(connectResponse) {\n    let requestAccountNameSpaces = buildRequestAccountNameSpacesByConnectResponse(connectResponse);\n    // let tonNameSpaces = buildTonNameSpaceByConnectResponse(connectResponse);\n    // const mergedNamespaces = Object.assign({}, requestAccountNameSpaces, tonNameSpaces);\n    return requestAccountNameSpaces;\n}\nexport function buildRequestAccountNameSpacesByConnectResponse(connectResponse) {\n    let result = {};\n    console.log('buildRequestAccountNameSpacesByConnectResponse >>', JSON.stringify(connectResponse));\n    const universalResponse = connectResponse.payload.responses.find(item => item.name === 'requestAccounts');\n    universalResponse.accounts.forEach(item => {\n        var chains = [];\n        var accounts = [];\n        item.addresses.forEach(addressItem => {\n            var oneAddress = addressItem.split(\":\");\n            if (oneAddress.length == 3) {\n                chains.push(`${oneAddress[0]}:${oneAddress[1]}`);\n                accounts.push(addressItem);\n            }\n        });\n        result[item.namespace] = {\n            chains: chains,\n            accounts: accounts,\n            methods: item.methods\n        };\n    });\n    return result;\n}\nexport function buildTonNameSpaceByConnectResponse(connectResponse) {\n    const tonAddrItem = connectResponse.payload.responses.find(item => item.name === 'ton_addr');\n    const tonProfItem = connectResponse.payload.responses.find(item => item.name === 'ton_proof');\n    if (!tonAddrItem) {\n        return undefined;\n    }\n    return {\n        NameSpaceKeyTON: {\n            chains: [tonAddrItem.network],\n            accounts: [],\n            methods: connectResponse.payload.wallet.features.ton,\n            payload: {\n                tonAccount: {\n                    address: tonAddrItem.address,\n                    chain: tonAddrItem.network,\n                    walletStateInit: tonAddrItem.walletStateInit,\n                    publicKey: tonAddrItem.publicKey\n                },\n                tonProof: tonProfItem\n            }\n        }\n    };\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { callForSuccess } from \"../utils/call-for-success\";\nimport { safeJsonParse, safeJsonStringify } from \"../utils/safejson\";\nimport { logDebug } from \"../utils/log\";\nimport { standardDeeplink, tonConnectSdkVersion } from \"../protocol\";\n// import {standardDeeplink, tonConnectSdkVersion} from \"../../ton/tonsdk/constants/version\";\nimport { getUniversalLink, openOKXDeeplinkWithFallback } from \"../utils\";\nimport { isIos } from \"../utils\";\nimport { buildNameSpacesByConnectResponse } from \"./sessionUtils\";\nexport class Engine {\n    constructor(connectionManager) {\n        this.pendingRequests = new Map();\n        this.disconnectListener = [];\n        this.connectionManager = connectionManager;\n        this.connectionManager.addListener(\"sdk_response\", (event, msg) => {\n            var jsonResponse = safeJsonParse(msg);\n            logDebug(`Engine ==>> addListener ==> success ==> ${jsonResponse}`);\n            this.handleResponse(event, jsonResponse);\n        }, function () {\n        });\n    }\n    addDisconnectListener(disconnecter) {\n        this.disconnectListener.push(disconnecter);\n    }\n    disconnect() {\n        logDebug('Engine ==>> disconnect');\n        this.pendingRequests.clear();\n    }\n    getRequestId() {\n        const requestId = Date.now().toString();\n        logDebug('Engine ==>> getRequestId ==>', requestId);\n        return requestId;\n    }\n    bindRequestForPromise(requestId, resolve) {\n        this.pendingRequests.set(requestId, resolve);\n    }\n    send(request, requestAnswer, option) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const requestId = this.getRequestId();\n            let packageId = yield callForSuccess(() => this.connectionManager.send(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId }))), option);\n            this.connectionManager.events.once(packageId.toString(), (event) => {\n                var _a;\n                logDebug(`Engine ==> send => onAck => ${safeJsonStringify(event)}`);\n                if (event && event.result) {\n                    (_a = requestAnswer.onAck) === null || _a === void 0 ? void 0 : _a.call(requestAnswer);\n                }\n            });\n            if (requestAnswer.resolve) {\n                this.bindRequestForPromise(requestId, requestAnswer.resolve);\n            }\n        });\n    }\n    handleResponse(event, response) {\n        logDebug(`Engine ==>> handleResponse_1  ======>response: ${safeJsonStringify(response)}`, event);\n        if (\"requestId\" in response) {\n            logDebug(\"Engine ==>> handleResponse_2  ===> in response\");\n            let requestId = response.requestId;\n            const resolve = this.pendingRequests.get(requestId);\n            if (resolve) {\n                logDebug(\"Engine ==>> handleResponse_3  ===> find resolve:\", resolve);\n                resolve(response);\n                // 从pendingRequests中删除这个Promise\n                this.pendingRequests.delete(requestId);\n            }\n            else {\n                logDebug(\"Engine ==>> handleResponse_3  ===> not find resolve:\");\n                if (response.method === \"disconnect\") {\n                    this.disconnectListener.forEach(listener => listener());\n                    this.disconnectListener = [];\n                    this.disconnect();\n                }\n            }\n        }\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.restoreConnect(sessionInfo.topic));\n            onConnectResult(sessionInfo);\n        });\n    }\n    conect(request, sessionConfig, onConnectResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c;\n            const connectInfo = this.connectionManager.getConnectInfo();\n            const requestId = this.getRequestId();\n            let openUniversalLink = (_a = sessionConfig.openUniversalUrl) !== null && _a !== void 0 ? _a : false;\n            const connectRequest = {\n                protocolVer: Number(tonConnectSdkVersion),\n                topic: connectInfo.channelId,\n                clientId: connectInfo.clientId,\n                requestId: requestId,\n                dAppInfo: sessionConfig.dappInfo,\n                requests: request,\n                redirect: (_b = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _b !== void 0 ? _b : \"none\"\n            };\n            const connectRequestStr = JSON.stringify(connectRequest);\n            const utf8Array = new TextEncoder().encode(connectRequestStr);\n            const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n            const deeplinkUrl = `${standardDeeplink}?param=${base64Encoded}`;\n            logDebug('bridge-provider ==>> connect_2 ==>>fullUrl:', deeplinkUrl);\n            const isIOS = isIos();\n            if (isIOS && openUniversalLink) {\n                logDebug('bridge-provider ==>> connect_3');\n                openOKXDeeplinkWithFallback(deeplinkUrl, base64Encoded);\n            }\n            yield ((_c = this.connectionManager) === null || _c === void 0 ? void 0 : _c.disconnect(false));\n            this.bindRequestForPromise(requestId, (response) => {\n                let session = this.onConnect(response, sessionConfig, connectInfo.channelId);\n                onConnectResult(session, response);\n            });\n            yield this.connectionManager.connect();\n            if (!isIOS && openUniversalLink) {\n                logDebug('bridge-provider ==>> connect_4');\n                openOKXDeeplinkWithFallback(deeplinkUrl, base64Encoded);\n            }\n            return {\n                connectInfo: connectInfo,\n                deeplinkUrl: getUniversalLink(deeplinkUrl)\n            };\n        });\n    }\n    onConnect(connectResponse, sessionConfig, topic) {\n        if (connectResponse.method == \"connect\") {\n            let namespaces = buildNameSpacesByConnectResponse(connectResponse);\n            if (namespaces) {\n                let session = {\n                    topic: topic,\n                    sessionConfig: sessionConfig,\n                    namespaces: namespaces\n                };\n                return session;\n            }\n        }\n        return null;\n    }\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXUniversalProvider = void 0;\nconst utils_1 = require(\"./provider/utils\");\nconst eip155_1 = __importDefault(require(\"./provider/providers/eip155\"));\nconst constants_1 = require(\"./provider/constants\");\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nconst client_1 = require(\"./packages/sign-client/client\");\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"./packages/utils/namespaces\");\nclass OKXUniversalProvider {\n    static init(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const provider = new OKXUniversalProvider(opts);\n            yield provider.initialize();\n            return provider;\n        });\n    }\n    constructor(opts) {\n        this.rpcProviders = {};\n        this.events = new eventemitter3_1.default();\n        this.providerOpts = opts;\n    }\n    request(args, chain) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"UniversalProvider request args >>>: \", JSON.stringify(args));\n            const [namespace, chainId] = this.validateChain(chain);\n            if (!this.session) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Please call connect() before request()\");\n            }\n            let keyArr = Object.keys(this.session.namespaces);\n            if (!chain && keyArr && keyArr.length > 1) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Multiple chains have been linked, the request method requires chain`);\n            }\n            (0, core_1.logDebug)(\"UniversalProvider request >>args>>>: \", args);\n            const requestParam = Object.assign(Object.assign({}, args), { chainId: `${namespace}:${chainId}` });\n            (0, core_1.logDebug)(\"UniversalProvider request >>requestParam>>>: \", JSON.stringify(requestParam));\n            (0, core_1.logDebug)(\"UniversalProvider request >>namespace>>>: \", namespace, this.getProvider(namespace));\n            return yield this.getProvider(namespace).request(requestParam);\n        });\n    }\n    enable() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.client) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (!this.session) {\n                if (this.connectOpts) {\n                    yield this.connect(this.connectOpts);\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n                }\n            }\n            const accounts = yield this.requestAccounts();\n            return accounts;\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.session) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                let called = false;\n                const onRequestSent = () => {\n                    if (!called) {\n                        called = true;\n                        this.cleanup().then(resolve);\n                        this.client.engine.connectionManager.disconnect();\n                    }\n                };\n                try {\n                    yield this.client.disconnect();\n                    onRequestSent();\n                }\n                catch (e) {\n                    if (!called) {\n                        this.cleanup().then(resolve);\n                    }\n                }\n                finally {\n                    onRequestSent();\n                }\n            }));\n        });\n    }\n    connect(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.client) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (opts.sessionConfig === undefined) {\n                opts.sessionConfig = {};\n            }\n            if (opts.sessionConfig.openUniversalUrl === undefined) {\n                // opts.sessionConfig.openUniversalUrl = isMobileUserAgent()\n                opts.sessionConfig.openUniversalUrl = true;\n            }\n            this.setNamespaces(opts);\n            let session = yield this.client.connect(opts);\n            (0, core_1.logDebug)(`UniversalProvider connect success ====> ${JSON.stringify(session)}`);\n            if (session) {\n                this.session = session;\n                this.onConnect();\n                return session;\n            }\n        });\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    setDefaultChain(chain, rpcUrl) {\n        try {\n            // ignore without active session\n            if (!this.session)\n                return;\n            const [namespace, chainId] = this.validateChain(chain);\n            const provider = this.getProvider(namespace);\n            provider.setDefaultChain(chainId, rpcUrl);\n        }\n        catch (error) {\n            // ignore the error if the fx is used prematurely before namespaces are set\n            if (!/Please call connect/.test(error.message))\n                throw error;\n        }\n    }\n    checkStorage() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let sessionInfoStr = yield this.getFromStore(\"connectSession\");\n            (0, core_1.logDebug)(sessionInfoStr);\n            if (sessionInfoStr) {\n                let sessionInfo = sessionInfoStr;\n                this.session = sessionInfo;\n                this.client.session = this.session;\n                this.sessionConfig = sessionInfo.sessionConfig;\n                this.client.sessionConfig = this.sessionConfig;\n                (0, core_1.logDebug)('[evm u-provider] do reconnection', this.session);\n                yield this.client.restoreconnect(sessionInfo);\n                this.createProviders();\n                setTimeout(() => {\n                    this.events.emit(\"reconnect\", { session: this.session });\n                }, 100);\n            }\n        });\n    }\n    initialize() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const data = Object.assign({ url: window.location.hostname }, this.providerOpts.dappMetaData);\n            this.client = new client_1.SignClient(data);\n            yield this.checkStorage();\n            this.registerEventListeners();\n        });\n    }\n    createProviders() {\n        if (!this.client) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n        }\n        if (!this.session) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Session not initialized. Please call connect() before enable()\");\n        }\n        const providersToCreate = [\n            ...new Set(Object.keys(this.session.namespaces).map((namespace) => (0, namespaces_1.parseNamespaceKey)(namespace))),\n        ];\n        (0, utils_1.setGlobal)(\"client\", this.client);\n        (0, utils_1.setGlobal)(\"events\", this.events);\n        providersToCreate.forEach((namespace) => {\n            if (!this.session)\n                return;\n            const namespacesValue = this.session.namespaces;\n            const currentNameSpace = namespacesValue[namespace];\n            (0, core_1.logDebug)(\"init eip155 >> \", currentNameSpace);\n            switch (namespace) {\n                case \"eip155\":\n                    const opts = {\n                        namespace: currentNameSpace\n                    };\n                    this.rpcProviders[namespace] = new eip155_1.default(opts);\n                    break;\n                case \"sol\":\n                    break;\n                case \"ton\":\n                    break;\n            }\n        });\n    }\n    registerEventListeners() {\n        if (typeof this.client === \"undefined\") {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client is not initialized\");\n        }\n        this.client.engine.addDisconnectListener(() => {\n            this.cleanup();\n            this.client.engine.connectionManager.disconnect();\n            this.events.emit(\"disconnect\");\n        });\n        this.on(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, (caip2ChainId) => {\n            this.onChainChanged(caip2ChainId);\n        });\n        this.on(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, (nameSpaces) => {\n            if (nameSpaces) {\n                const nameSpacekey = Object.keys(nameSpaces)[0];\n                if (this.session) {\n                    this.session.namespaces[nameSpacekey] = nameSpaces[nameSpacekey];\n                    if (this.session) {\n                        this.persist(\"connectSession\", this.session);\n                    }\n                    (0, core_1.logDebug)(\"PROVIDER_EVENTS.UPDATE_NAMESPACES this.session ->>>\", JSON.stringify(this.session));\n                }\n            }\n        });\n    }\n    getProvider(namespace) {\n        (0, core_1.logDebug)('current get providers', this.rpcProviders);\n        (0, core_1.logDebug)('query namespace: ', namespace);\n        return this.rpcProviders[namespace];\n    }\n    setNamespaces(params) {\n        this.connectOpts = params;\n        const { namespaces, sessionConfig } = params;\n        const data = {\n            url: window.location.hostname,\n            name: this.providerOpts.dappMetaData.name,\n            icon: this.providerOpts.dappMetaData.icon,\n        };\n        this.sessionConfig = {\n            dappInfo: data,\n            openUniversalUrl: sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.openUniversalUrl,\n            redirect: sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect,\n        };\n        (0, core_1.logDebug)(\"setNamespaces sessionConfig>>>\", this.sessionConfig);\n        this.client.sessionConfig = this.sessionConfig;\n        this.persist(\"sessionConfig\", sessionConfig);\n    }\n    validateChain(chain) {\n        var _a;\n        let [namespace, chainId] = (chain === null || chain === void 0 ? void 0 : chain.split(\":\")) || [\"\", \"\"];\n        if (!this.session || !this.session.namespaces || !Object.keys(this.session.namespaces).length) {\n            (0, core_1.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        if (namespace) {\n            if (!Object.keys(this.session.namespaces || {})\n                .map((key) => (0, namespaces_1.parseNamespaceKey)(key))\n                .includes(namespace)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace '${namespace}' is not configured. Please call connect() first with namespace config.`);\n            }\n            if (chainId && chain) {\n                (0, core_1.logDebug)('this.session.namespaces -->> ', namespace, JSON.stringify(this.session.namespaces));\n                const chainsArr = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.chains;\n                (0, core_1.logDebug)('get chainsArr & chain', JSON.stringify(chainsArr), chain);\n                if (chainsArr && !chainsArr.includes(chain)) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace not include the chain '${chain}'`);\n                }\n            }\n        }\n        if (namespace && chainId) {\n            (0, core_1.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        let defaultNamespace = (0, namespaces_1.parseNamespaceKey)(Object.keys(this.session.namespaces)[0]);\n        const defaultChain = this.rpcProviders[defaultNamespace].getDefaultChain();\n        (0, core_1.logDebug)('get default chain:', defaultChain);\n        return [defaultNamespace, defaultChain];\n    }\n    requestAccounts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const [namespace] = this.validateChain();\n            return yield this.getProvider(namespace).requestAccounts();\n        });\n    }\n    onChainChanged(caip2Chain) {\n        var _a;\n        if (!((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces))\n            return;\n        const [namespace, chainId] = this.validateChain(caip2Chain);\n        if (!chainId)\n            return;\n        if (this.session.namespaces[namespace]) {\n            this.session.namespaces[namespace].defaultChain = chainId;\n            this.persist(\"connectSession\", this.session);\n        }\n        this.events.emit(\"chainChanged\", chainId);\n    }\n    onConnect() {\n        this.createProviders();\n        if (this.session) {\n            this.persist(\"connectSession\", this.session);\n        }\n        this.events.emit(\"connect\", { session: this.session });\n    }\n    cleanup() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.session = undefined;\n            this.sessionProperties = undefined;\n            this.persist(\"optionalNamespaces\", undefined);\n            this.persist(\"sessionProperties\", undefined);\n            this.persist(\"connectSession\", undefined);\n        });\n    }\n    persist(key, data) {\n        (0, core_1.logDebug)('[evm u-provider] persisit data', key, data);\n        return this.client.engine.connectionManager.saveSessionContent(key, data);\n    }\n    getFromStore(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.client.engine.connectionManager.getSessionContent(key);\n        });\n    }\n}\nexports.OKXUniversalProvider = OKXUniversalProvider;\nexports.default = OKXUniversalProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXUniversalProvider = void 0;\n__exportStar(require(\"./provider/types\"), exports);\nvar OKXUniversalProvider_1 = require(\"./OKXUniversalProvider\");\nObject.defineProperty(exports, \"OKXUniversalProvider\", { enumerable: true, get: function () { return OKXUniversalProvider_1.OKXUniversalProvider; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignClient = void 0;\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"../utils/namespaces\");\nclass SignClient extends core_1.ISignClient {\n    constructor(metaData) {\n        super(metaData);\n        this.events = new eventemitter3_1.default();\n        this.engine = new core_1.Engine(new core_1.ConnectionManager());\n        // ---------- Engine ----------------------------------------------- //\n        this.connect = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                var connectRequest = [];\n                var requestAccountItem = {\n                    name: \"requestAccounts\",\n                    requiredNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.namespaces),\n                    optionalNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.optionalNamespaces)\n                };\n                connectRequest.push(requestAccountItem);\n                try {\n                    this.engine.conect(connectRequest, Object.assign({ dappInfo: this.metadata }, params.sessionConfig), (session) => {\n                        if (session) {\n                            (0, namespaces_1.fillParamsToSession)(session, params.namespaces, params.optionalNamespaces, this.sessionConfig);\n                        }\n                        resolve(session);\n                    });\n                }\n                catch (e) {\n                    reject(e);\n                }\n            });\n        });\n        this.restoreconnect = (sessionConfig) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.restoreconnect(sessionConfig, (session) => {\n                    resolve(session);\n                });\n            });\n        });\n        this.reject = (params) => __awaiter(this, void 0, void 0, function* () {\n            //   try {\n            //     return await this.engine.reject(params);\n            //   } catch (error: any) {\n            //     this.logger.error(error.message);\n            //     throw error;\n            //   }\n        });\n        //\n        // public update: ISignClient[\"update\"] = async (params) => {\n        //   return\n        // //   try {\n        // //     return await this.engine.update(params);\n        // //   } catch (error: any) {\n        // //     this.logger.error(error.message);\n        // //     throw error;\n        // //   }\n        // };\n        this.request = (params) => __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            (0, core_1.logDebug)(\"clint request --params>>>> >\", (_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl, JSON.stringify(params));\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a;\n                try {\n                    // this.sessionConfig\n                    if (((_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl) && (0, core_1.isIos)()) {\n                        this.openOKXWallet();\n                    }\n                    yield this.engine.send(params, {\n                        resolve: (response) => {\n                            delete response.requestId;\n                            (0, core_1.logDebug)(\"clint request --response >\", JSON.stringify(response));\n                            if (('error' in response) && response.error) {\n                                let error = response.error;\n                                error.message = response.method + \":\" + error.message;\n                                reject(error);\n                            }\n                            else {\n                                resolve(response);\n                            }\n                        },\n                        onAck: () => {\n                            var _a;\n                            if (!(0, core_1.isIos)() && ((_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl)) {\n                                this.openOKXWallet();\n                            }\n                        }\n                    });\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }));\n        });\n        // public emit: ISignClient[\"emit\"] = async (params) => {\n        //     try {\n        //         // return await this.engine.emit(params);\n        //     } catch (error: any) {\n        //         throw error;\n        //     }\n        // };\n        this.disconnect = () => __awaiter(this, void 0, void 0, function* () {\n            try {\n                return new Promise(resolve => {\n                    this.engine.send({\n                        method: \"disconnect\"\n                    }, {\n                        onAck: () => {\n                            resolve();\n                        }\n                    });\n                });\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n        this.metadata = metaData;\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n        return this;\n    }\n    openOKXWallet() {\n        // if (this.openUniversalUrl){\n        (0, core_1.logDebug)('bridge-provider ==>> connect_5');\n        // openOKXDeeplinkWithFallback(standardDeeplink);\n        // }\n    }\n}\nexports.SignClient = SignClient;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAccountsChains = getAccountsChains;\nexports.nameSpaceToConnectWalletNameSpace = nameSpaceToConnectWalletNameSpace;\nexports.fillParamsToSession = fillParamsToSession;\nexports.isCaipNamespace = isCaipNamespace;\nexports.parseNamespaceKey = parseNamespaceKey;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getAccountsChains(accounts) {\n    const chains = [];\n    accounts.forEach((account) => {\n        const [chain, chainId] = account.split(\":\");\n        chains.push(`${chain}:${chainId}`);\n    });\n    return chains;\n}\nfunction nameSpaceToConnectWalletNameSpace(namespaces) {\n    var result = [];\n    if (!namespaces) {\n        return result;\n    }\n    Object.keys(namespaces).forEach((key) => {\n        if (key === core_1.NameSpaceKeyEip155 || key === core_1.NameSpaceKeySOL) {\n            if (namespaces[key].chains) {\n                result.push({\n                    namespace: key,\n                    chains: namespaces[key].chains\n                });\n            }\n        }\n    });\n    return result;\n}\nfunction fillParamsToSession(session, namespaces, optionalNamespaces, sessionConfig) {\n    // Helper function to merge rpcMaps\n    const mergeRpcMap = (targetRpcMap, sourceRpcMap) => {\n        Object.assign(targetRpcMap, sourceRpcMap);\n    };\n    // Merge function for namespaces\n    const mergeNamespaces = (target, source) => {\n        for (const key in source) {\n            if (source.hasOwnProperty(key) && source[key].rpcMap) {\n                if (source[key].rpcMap) {\n                    if (!target[key].rpcMap) {\n                        target[key].rpcMap = {};\n                    }\n                    // 合并 rpcMap\n                    mergeRpcMap(target[key].rpcMap, source[key].rpcMap);\n                }\n                if (source[key].defaultChain && target[key].defaultChain === undefined) {\n                    //defaultChain need in session nameSpace\n                    if (target[key].chains.some(chain => chain.split(\":\")[1] === source[key].defaultChain)) {\n                        target[key].defaultChain = source[key].defaultChain;\n                    }\n                }\n            }\n        }\n    };\n    // 合并 namespaces\n    if (namespaces) {\n        mergeNamespaces(session.namespaces, namespaces);\n    }\n    // 合并 optionalNamespaces\n    if (optionalNamespaces) {\n        mergeNamespaces(session.namespaces, optionalNamespaces);\n    }\n    session.sessionConfig = sessionConfig;\n}\n/**\n * util designed for Wallets that builds namespaces structure by provided supported chains, methods, events & accounts.\n * It takes required & optional namespaces provided in the session proposal\n * along with the supported chains/methods/events/accounts by the wallet and returns a structured namespaces object\n * @param {BuildApprovedNamespacesParams} params\n * @returns {SessionTypes.Namespaces}\n */\n// export function buildApprovedNamespaces(\n//   params: BuildApprovedNamespacesParams,\n// ): SessionTypes.Namespaces {\n//   const {\n//     proposal: { requiredNamespaces, optionalNamespaces = {} },\n//     supportedNamespaces,\n//   } = params;\n//   const normalizedRequired = normalizeNamespaces(requiredNamespaces);\n//   const normalizedOptional = normalizeNamespaces(optionalNamespaces);\n//\n//   // build approved namespaces\n//   const namespaces = {};\n//   Object.keys(supportedNamespaces).forEach((namespace) => {\n//     const supportedChains = supportedNamespaces[namespace].chains;\n//     const supportedMethods = supportedNamespaces[namespace].methods;\n//     const supportedEvents = supportedNamespaces[namespace].events;\n//     const supportedAccounts = supportedNamespaces[namespace].accounts;\n//\n//     supportedChains.forEach((chain) => {\n//       if (!supportedAccounts.some((account) => account.includes(chain))) {\n//         throw new Error(`No accounts provided for chain ${chain} in namespace ${namespace}`);\n//       }\n//     });\n//\n//     namespaces[namespace] = {\n//       chains: supportedChains,\n//       methods: supportedMethods,\n//       events: supportedEvents,\n//       accounts: supportedAccounts,\n//     };\n//   });\n//\n//   // verify all required namespaces are supported\n//   const err = isConformingNamespaces(requiredNamespaces, namespaces, \"approve()\");\n//   if (err) throw new Error(err.message);\n//\n//   const approvedNamespaces = {};\n//\n//   // if both required & optional namespaces are empty, return all supported namespaces by the wallet\n//   if (!Object.keys(requiredNamespaces).length && !Object.keys(optionalNamespaces).length)\n//     return namespaces;\n//\n//   // assign accounts for the required namespaces\n//   Object.keys(normalizedRequired).forEach((requiredNamespace) => {\n//     const chains = supportedNamespaces[requiredNamespace].chains.filter((chain) =>\n//       normalizedRequired[requiredNamespace]?.chains?.includes(chain),\n//     );\n//     const methods = supportedNamespaces[requiredNamespace].methods.filter((method) =>\n//       normalizedRequired[requiredNamespace]?.methods?.includes(method),\n//     );\n//     const events = supportedNamespaces[requiredNamespace].events.filter((event) =>\n//       normalizedRequired[requiredNamespace]?.events?.includes(event),\n//     );\n//\n//     const accounts = chains\n//       .map((chain: string) =>\n//         supportedNamespaces[requiredNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[requiredNamespace] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   });\n//\n//   // add optional namespaces\n//   Object.keys(normalizedOptional).forEach((optionalNamespace) => {\n//     if (!supportedNamespaces[optionalNamespace]) return;\n//\n//     const chainsToAdd = normalizedOptional[optionalNamespace]?.chains?.filter((chain) =>\n//       supportedNamespaces[optionalNamespace].chains.includes(chain),\n//     );\n//     const methodsToAdd = supportedNamespaces[optionalNamespace].methods.filter((method) =>\n//       normalizedOptional[optionalNamespace]?.methods?.includes(method),\n//     );\n//     const eventsToAdd = supportedNamespaces[optionalNamespace].events.filter((event) =>\n//       normalizedOptional[optionalNamespace]?.events?.includes(event),\n//     );\n//\n//     const accountsToAdd = chainsToAdd\n//       ?.map((chain: string) =>\n//         supportedNamespaces[optionalNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[optionalNamespace] = {\n//       chains: mergeArrays(approvedNamespaces[optionalNamespace]?.chains, chainsToAdd),\n//       methods: mergeArrays(approvedNamespaces[optionalNamespace]?.methods, methodsToAdd),\n//       events: mergeArrays(approvedNamespaces[optionalNamespace]?.events, eventsToAdd),\n//       accounts: mergeArrays(approvedNamespaces[optionalNamespace]?.accounts, accountsToAdd),\n//     };\n//   });\n//\n//   return approvedNamespaces;\n// }\nfunction isCaipNamespace(namespace) {\n    return namespace.includes(\":\");\n}\nfunction parseNamespaceKey(namespace) {\n    return isCaipNamespace(namespace) ? namespace.split(\":\")[0] : namespace;\n}\n/**\n * Converts\n * ```\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * ```\n * into\n * ```\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *```\n */\n// export function normalizeNamespaces(\n//   namespaces: ProposalTypes.RequiredNamespaces,\n// ): ProposalTypes.RequiredNamespaces {\n//   const normalizedNamespaces = {} as ProposalTypes.RequiredNamespaces;\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       methods: mergeArrays(methods, normalizedNamespaces[normalizedKey]?.methods),\n//       events: mergeArrays(events, normalizedNamespaces[normalizedKey]?.events),\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n// export function getNamespacesFromAccounts(accounts: string[]) {\n//   const namespaces = {};\n//   accounts?.forEach((account) => {\n//     const [namespace, chainId] = account.split(\":\");\n//     if (!namespaces[namespace]) {\n//       namespaces[namespace] = {\n//         accounts: [],\n//         chains: [],\n//         events: [],\n//       };\n//     }\n//     namespaces[namespace].accounts.push(account);\n//     namespaces[namespace].chains.push(`${namespace}:${chainId}`);\n//   });\n//\n//   return namespaces;\n// }\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PROVIDER_EVENTS = void 0;\nexports.PROVIDER_EVENTS = {\n    DEFAULT_CHAIN_CHANGED: \"default_chain_changed\",\n    UPDATE_NAMESPACES: \"update_name_spaces\",\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./values\"), exports);\n__exportStar(require(\"./events\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GENERIC_SUBPROVIDER_NAME = exports.RPC_URL = exports.STORAGE = exports.CONTEXT = exports.WC_VERSION = exports.PROTOCOL = exports.RELAY_URL = exports.LOGGER = void 0;\nexports.LOGGER = \"error\";\nexports.RELAY_URL = \"wss://relay.walletconnect.com\";\nexports.PROTOCOL = \"wc\";\nexports.WC_VERSION = 2;\nexports.CONTEXT = \"universal_provider\";\nexports.STORAGE = `${exports.PROTOCOL}@${exports.WC_VERSION}:${exports.CONTEXT}:`;\nexports.RPC_URL = \"https://rpc.walletconnect.com/v1/\";\nexports.GENERIC_SUBPROVIDER_NAME = \"generic\";\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nclass Eip155Provider {\n    constructor(opts) {\n        this.name = \"eip155\";\n        this.namespace = opts.namespace;\n        this.events = (0, utils_1.getGlobal)(\"events\");\n        this.client = (0, utils_1.getGlobal)(\"client\");\n        this.chainId = parseInt(this.getDefaultChain());\n        // rpc\n        this.httpProviders = this.createHttpProviders();\n        (0, core_1.logDebug)(\"eip155 constructor --opts.namespace-->\", opts.namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    isArray(value) {\n        return typeof value === \"object\" && value !== null && Array.isArray(value);\n    }\n    updateRequestParams(args) {\n        let isDic = args.params && typeof args.params === 'object' && !Array.isArray(args.params);\n        if (args.method === 'wallet_switchEthereumChain') {\n            const switchChainId = args.chainId.split(\":\")[1];\n            // const hexChainId = parseInt(switchChainId, 16);\n            const decimalNumber = parseInt(switchChainId, 10);\n            if (isNaN(decimalNumber)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid decimal number,  chainId: '${switchChainId}' `);\n            }\n            if (!args.params) {\n                args.params = { chainId: '0x' + decimalNumber.toString(16) };\n            }\n            else if (isDic) { //为 Record<string, unknown>\n                let params = args.params;\n                if (!('chainId' in params)) {\n                    params['chainId'] = '0x' + decimalNumber.toString(16);\n                    args.params = params;\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params error ,  method: '${args.method}' `);\n            }\n        }\n        else if (args.method === 'personal_sign'\n            || args.method === 'eth_signTypedData_v4'\n            || args.method === 'eth_sendTransaction'\n            || args.method === 'wallet_watchAsset') {\n            if (!args.params) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params is nil, method: '${args.method}'`);\n            }\n            if (this.isRecord(args.params)) {\n                let params = args.params;\n                (0, core_1.logDebug)(\"eip155 updateRequestParams params>\", JSON.stringify(params));\n                if ('chainId' in params) {\n                    const selectedChainId = args.chainId.split(\":\")[1];\n                    const chainNum = parseInt(selectedChainId, 10);\n                    let paramsChainString = String(params.chainId);\n                    let paramsChainId;\n                    if (paramsChainString.startsWith(this.name) && args.chainId === paramsChainString) { //为\n                        paramsChainId = chainNum;\n                    }\n                    else if (paramsChainString.startsWith(\"0x\")) {\n                        paramsChainId = parseInt(paramsChainString, 16);\n                    }\n                    else if (!isNaN(Number(paramsChainString))) { //数字\n                        paramsChainId = parseInt(paramsChainString, 10);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid params.chainId format, method: '${args.method}'`);\n                    }\n                    if (chainNum !== paramsChainId) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params.chainId not equal chain,  method: '${args.method}' `);\n                    }\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid request params type, method: '${args.method}'`);\n            }\n        }\n    }\n    //adapt array\n    adaptArray(args) {\n        if (args.method === 'wallet_switchEthereumChain'\n            || args.method === 'wallet_addEthereumChain'\n            || args.method === 'wallet_watchAsset'\n            || args.method === 'eth_sendTransaction') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr) {\n                    if (paramsArr.length === 1) {\n                        let firstParam = args.params[0];\n                        if (this.isRecord(firstParam)) {\n                            args.params = firstParam;\n                        }\n                    }\n                    else if (paramsArr.length > 1) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                    }\n                }\n            }\n        }\n        else if (args.method === 'eth_signTypedData_v4') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr && paramsArr.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                }\n                else if (paramsArr && paramsArr.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let messageObj = {};\n                if (paramsArr && paramsArr.length === 2) {\n                    let addressObj = args.params[0]; //address\n                    if (addressObj && typeof addressObj === 'string') { //check address\n                        let isEqual = false;\n                        this.namespace.chains.forEach((chain) => {\n                            let chainAddress = chain.split(':')[2];\n                            if (chainAddress === addressObj) {\n                                isEqual = true;\n                            }\n                        });\n                        if (!isEqual) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error, not equal,  method: '${args.method}' `);\n                        }\n                        if (this.isRecord(args.params[1])) {\n                            messageObj = args.params[1];\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error , not string,  method: '${args.method}' `);\n                    }\n                }\n                else if (paramsArr && paramsArr.length === 1) {\n                    if (this.isRecord(args.params[0])) {\n                        messageObj = args.params[0];\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                    }\n                }\n                try {\n                    let messages = JSON.stringify(messageObj);\n                    args.params = {\n                        typedDataJson: messages\n                    };\n                }\n                catch (err) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params call JSON.stringify() failed,  method: '${args.method}' `);\n                }\n            }\n        }\n        else if (args.method === 'personal_sign') {\n            if (this.isArray(args.params)) {\n                if (args.params && args.params.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params error,  method: '${args.method}' `);\n                }\n                else if (args.params && args.params.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let firstObj = args.params[0];\n                let secondObj = args.params[1];\n                if (secondObj && typeof secondObj === 'string') { //check address\n                    let isEqual = false;\n                    this.namespace.chains.forEach((chain) => {\n                        let chainAddress = chain.split(':')[2];\n                        if (chainAddress === secondObj) {\n                            isEqual = true;\n                        }\n                    });\n                    if (!isEqual) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error,  method: '${args.method}' `);\n                    }\n                }\n                if (firstObj && typeof firstObj === 'string') {\n                    args.params = {\n                        message: firstObj\n                    };\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is error,  method: '${args.method}' `);\n                }\n            }\n        }\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.adaptArray(args);\n            (0, core_1.logDebug)(\"eip155 request --args--string>\", JSON.stringify(args));\n            this.updateRequestParams(args);\n            (0, core_1.logDebug)(\"eip155 request --params--string>\", JSON.stringify(args));\n            switch (args.method) {\n                case \"eth_requestAccounts\":\n                    return this.getAccounts();\n                case \"eth_accounts\":\n                    return this.getAccounts();\n                case \"eth_chainId\":\n                    return parseInt(this.getDefaultChain());\n                case \"wallet_switchEthereumChain\": {\n                    return (yield this.handleSwitchChain(args));\n                }\n                case \"wallet_addEthereumChain\":\n                    return this.addEthereumChain(args);\n                default:\n                    break;\n            }\n            if (this.namespace.methods.includes(args.method)) {\n                // personal_sign\n                // eth_signTypedData_v4\n                // eth_sendTransaction\n                // wallet_watchAsset\n                return yield this.client.request(args);\n            }\n            else {\n                (0, core_1.logDebug)('[RPC] request begin');\n                return yield this.getHttpProvider().request(args);\n            }\n        });\n    }\n    addEthereumChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let resultData = (yield this.client.request(args));\n            try {\n                if ('result' in resultData) {\n                    let successData = resultData;\n                    let account = resultData.result;\n                    if (account) {\n                        const nameSpace = account.split(\":\")[0];\n                        const chainId = account.split(\":\")[1];\n                        const chain = nameSpace + ':' + chainId;\n                        let newNameSpace = this.namespace;\n                        this.namespace.accounts.push(account);\n                        this.namespace.chains.push(chain);\n                        if (this.isRecord(args.params)) {\n                            if (\"rpcUrls\" in args.params) {\n                                let rpcUrls = args.params.rpcUrls;\n                                let rpcUrl = rpcUrls ? rpcUrls[0] : undefined;\n                                if (rpcUrl) {\n                                    if (this.namespace.rpcMap) {\n                                        this.namespace.rpcMap[chainId] = rpcUrl;\n                                    }\n                                    else {\n                                        this.namespace.rpcMap = {\n                                            [chainId]: rpcUrl\n                                        };\n                                    }\n                                    this.setHttpProvider(chainId, rpcUrl);\n                                }\n                            }\n                        }\n                        this.events.emit(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, {\n                            eip155: this.namespace\n                        });\n                    }\n                }\n                else {\n                    new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request error`);\n                }\n            }\n            catch (error) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request  error`);\n            }\n            return resultData;\n        });\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        this.chainId = parseInt(chainId);\n        // set rpc\n        if (!this.httpProviders[chainId]) {\n            const rpc = rpcUrl || (0, utils_1.getRpcUrl)(`${this.name}:${chainId}`, this.namespace);\n            if (!rpc) {\n                // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n                (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            }\n            else {\n                this.setHttpProvider(chainId, rpc);\n            }\n        }\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId.toString();\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // ---------- Private ----------------------------------------------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"eip155 getAccounts \", accounts, this.chainId);\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    handleSwitchChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let params = args.params;\n            let hexChainId = \"0x0\";\n            if (params && \"chainId\" in params) {\n                hexChainId = params.chainId;\n            }\n            hexChainId = hexChainId.startsWith(\"0x\") ? hexChainId : `0x${hexChainId}`;\n            (0, core_1.logDebug)(\"handleSwitchChain -->args \", args);\n            (0, core_1.logDebug)(\"handleSwitchChain -->hexChainId \", hexChainId);\n            const parsedChainId = parseInt(hexChainId, 16);\n            (0, core_1.logDebug)(\"handleSwitchChain -->parsedChainId \", parsedChainId);\n            if (this.isChainApproved(parsedChainId)) {\n                this.setDefaultChain(`${parsedChainId}`);\n                return {\n                    method: \"wallet_switchEthereumChain\",\n                    result: `${this.name}:${parsedChainId}`,\n                };\n            }\n            else {\n                const resultData = (yield this.client.request({\n                    method: \"wallet_switchEthereumChain\",\n                    chainId: args.chainId,\n                    params: {\n                        chainId: hexChainId,\n                    },\n                }));\n                try {\n                    if ('result' in resultData) {\n                        let successData = resultData;\n                        let account = resultData.result;\n                        if (account) {\n                            const nameSpace = account.split(\":\")[0];\n                            const chainId = account.split(\":\")[1];\n                            const chain = nameSpace + ':' + chainId;\n                            let newNameSpace = this.namespace;\n                            this.namespace.accounts.push(account);\n                            this.namespace.chains.push(chain);\n                            (0, core_1.logDebug)(\"handleSwitchChain -->wallet_switchEthereumChain \", resultData);\n                            this.setDefaultChain(`${parsedChainId}`);\n                            this.events.emit(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, {\n                                eip155: this.namespace\n                            });\n                            return {\n                                method: \"wallet_switchEthereumChain\",\n                                result: `${this.name}:${chainId}`,\n                            };\n                        }\n                    }\n                    else {\n                        new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request error`);\n                    }\n                }\n                catch (error) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request  error`);\n                }\n                return resultData;\n            }\n            return null;\n        });\n    }\n    isChainApproved(chainId) {\n        return this.namespace.chains.includes(`${this.name}:${chainId}`);\n    }\n    // rpc\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            //   throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            (0, core_1.logDebug)('get parsed chain and rpc:', parsedChainId, parsedRpc);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        (0, core_1.logDebug)('get http providermap:', http);\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n}\nexports.default = Eip155Provider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcConnection = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\n// Source: https://nodejs.org/api/events.html#emittersetmaxlistenersn\nconst EVENT_EMITTER_MAX_LISTENERS_DEFAULT = 10;\nclass JsonRpcConnection {\n    constructor(url, disableProviderPing = false) {\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n        this.events = new eventemitter3_1.EventEmitter();\n        this.isAvailable = false;\n        this.registering = false;\n        if (!(0, core_2.isHttpUrl)(url)) {\n            throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n        }\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n    }\n    get connected() {\n        return this.isAvailable;\n    }\n    get connecting() {\n        return this.registering;\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            yield this.register(url);\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                throw new Error(\"Connection already closed\");\n            }\n            this.onClose();\n        });\n    }\n    send(payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                yield this.register();\n            }\n            try {\n                const body = (0, core_1.safeJsonStringify)(payload);\n                const res = yield (0, cross_fetch_1.default)(this.url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                const data = yield res.json();\n                this.onPayload({ data });\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    register() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (!(0, core_2.isHttpUrl)(url)) {\n                throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n            }\n            if (this.registering) {\n                return new Promise((resolve, reject) => {\n                    this.events.once(\"register_error\", (error) => {\n                        reject(error);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.isAvailable === \"undefined\") {\n                            return reject(new Error(\"HTTP connection is missing or invalid\"));\n                        }\n                        resolve();\n                    });\n                });\n            }\n            this.url = url;\n            this.registering = true;\n            try {\n                if (!this.disableProviderPing) {\n                    const body = (0, core_1.safeJsonStringify)({ id: 1, jsonrpc: \"2.0\", method: \"test\", params: [] });\n                    yield (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                }\n                this.onOpen();\n            }\n            catch (e) {\n                const error = this.parseError(e);\n                this.events.emit(\"register_error\", error);\n                this.onClose();\n                throw error;\n            }\n        });\n    }\n    onOpen() {\n        this.isAvailable = true;\n        this.registering = false;\n        this.events.emit(\"open\");\n    }\n    onClose() {\n        this.isAvailable = false;\n        this.registering = false;\n        this.events.emit(\"close\");\n    }\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        const payload = typeof e.data === \"string\" ? (0, core_1.safeJsonParse)(e.data) : e.data;\n        this.events.emit(\"payload\", payload);\n    }\n    onError(id, e) {\n        const error = this.parseError(e);\n        const message = error.message || error.toString();\n        const payload = (0, core_2.formatJsonRpcError)(id, message);\n        this.events.emit(\"payload\", payload);\n    }\n    parseError(e, url = this.url) {\n        return (0, core_2.parseConnectionError)(e, url, \"HTTP\");\n    }\n}\nexports.JsonRpcConnection = JsonRpcConnection;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcProvider = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst types_1 = require(\"../../types\");\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nclass JsonRpcProvider extends types_1.IJSONRpcProvider {\n    constructor(connection) {\n        super(connection);\n        this.events = new eventemitter3_1.EventEmitter();\n        this.connected = false;\n        this.connecting = false;\n        this.hasRegisteredEventListeners = false;\n        this.connection = this.setConnection(connection);\n        if (this.connection.connected) {\n            this.registerEventListeners();\n        }\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            yield this.open(connection);\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.close();\n        });\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    request(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.requestStrict((0, core_1.formatJsonRpcRequest)(request.method, request.params || [], (0, core_1.getBigIntRpcId)().toString()), // casting to any is required in order to use BigInt as rpcId\n            context);\n        });\n    }\n    // ---------- Protected ----------------------------------------------- //\n    requestStrict(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.connection.connected) {\n                    try {\n                        yield this.open();\n                    }\n                    catch (e) {\n                        reject(e);\n                    }\n                }\n                this.events.on(`${request.id}`, (response) => {\n                    if ((0, core_1.isJsonRpcError)(response)) {\n                        reject(response.error);\n                    }\n                    else {\n                        resolve(response.result);\n                    }\n                });\n                try {\n                    (0, core_2.logDebug)('[RPC] >>> send request', request, context);\n                    yield this.connection.send(request, context);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }));\n        });\n    }\n    setConnection(connection = this.connection) {\n        return connection;\n    }\n    onPayload(payload) {\n        this.events.emit(\"payload\", payload);\n        if ((0, core_1.isJsonRpcResponse)(payload)) {\n            this.events.emit(`${payload.id}`, payload);\n        }\n        else {\n            this.events.emit(\"message\", {\n                type: payload.method,\n                data: payload.params,\n            });\n        }\n    }\n    onClose(event) {\n        // Code 3000 indicates an abnormal closure signalled by the relay -> emit an error in this case.\n        if (event && event.code === 3000) {\n            this.events.emit(\"error\", new Error(`WebSocket connection closed abnormally with code: ${event.code} ${event.reason ? `(${event.reason})` : \"\"}`));\n        }\n        this.events.emit(\"disconnect\");\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            if (this.connection === connection && this.connection.connected)\n                return;\n            if (this.connection.connected)\n                this.close();\n            if (typeof connection === \"string\") {\n                yield this.connection.open(connection);\n                connection = this.connection;\n            }\n            this.connection = this.setConnection(connection);\n            yield this.connection.open();\n            this.registerEventListeners();\n            this.events.emit(\"connect\");\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.connection.close();\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    registerEventListeners() {\n        if (this.hasRegisteredEventListeners)\n            return;\n        this.connection.on(\"payload\", (payload) => this.onPayload(payload));\n        this.connection.on(\"close\", (event) => this.onClose(event));\n        this.connection.on(\"error\", (error) => this.events.emit(\"error\", error));\n        this.connection.on(\"register_error\", (_error) => this.onClose());\n        this.hasRegisteredEventListeners = true;\n    }\n}\nexports.JsonRpcProvider = JsonRpcProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./providers\"), exports);\n__exportStar(require(\"./misc\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IJSONRpcProvider = exports.IJSONRpcConnection = void 0;\nclass IJSONRpcConnection {\n}\nexports.IJSONRpcConnection = IJSONRpcConnection;\nclass IJSONRpcProvider {\n    constructor(opt) {\n    }\n}\nexports.IJSONRpcProvider = IJSONRpcProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setGlobal = exports.getGlobal = void 0;\nconst globals = {};\nconst getGlobal = (key) => {\n    return globals[key];\n};\nexports.getGlobal = getGlobal;\nconst setGlobal = (key, value) => {\n    globals[key] = value;\n};\nexports.setGlobal = setGlobal;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./misc\"), exports);\n__exportStar(require(\"./globals\"), exports);\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRpcUrl = getRpcUrl;\nexports.getChainId = getChainId;\nexports.validateChainApproval = validateChainApproval;\nexports.getChainsFromApprovedSession = getChainsFromApprovedSession;\nexports.getAccountsFromSession = getAccountsFromSession;\nexports.mergeRequiredOptionalNamespaces = mergeRequiredOptionalNamespaces;\nexports.normalizeNamespaces = normalizeNamespaces;\nexports.parseCaip10Account = parseCaip10Account;\nexports.convertChainIdToNumber = convertChainIdToNumber;\nexports.parseChainId = parseChainId;\nexports.mergeArrays = mergeArrays;\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"../../packages/utils/namespaces\");\nconst lodash_1 = __importDefault(require(\"lodash\"));\nfunction getRpcUrl(chainId, rpc, projectId) {\n    var _a;\n    const chain = parseChainId(chainId);\n    // no default\n    return (((_a = rpc.rpcMap) === null || _a === void 0 ? void 0 : _a[chain.reference]) ||\n        ``);\n}\nfunction getChainId(chain) {\n    return chain.includes(\":\") ? chain.split(\":\")[1] : chain;\n}\nfunction validateChainApproval(chain, chains) {\n    if (!chains.includes(chain)) {\n        throw new Error(`Chain '${chain}' not approved. Please use one of the following: ${chains.toString()}`);\n    }\n}\nfunction getChainsFromApprovedSession(accounts) {\n    return accounts.map((address) => `${address.split(\":\")[0]}:${address.split(\":\")[1]}`);\n}\nfunction getAccountsFromSession(namespace, session) {\n    // match namespaces e.g. eip155 with eip155:1\n    const matchedNamespaceKeys = Object.keys(session.namespaces).filter((key) => key.includes(namespace));\n    if (!matchedNamespaceKeys.length)\n        return [];\n    const accounts = [];\n    matchedNamespaceKeys.forEach((key) => {\n        const accountsForNamespace = session.namespaces[key].accounts;\n        accounts.push(...accountsForNamespace);\n    });\n    return accounts;\n}\nfunction mergeRequiredOptionalNamespaces(required = {}, optional = {}) {\n    const requiredNamespaces = normalizeNamespaces(required);\n    const optionalNamespaces = normalizeNamespaces(optional);\n    return lodash_1.default.merge(requiredNamespaces, optionalNamespaces);\n}\n/**\n * Converts\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * into\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *\n */\nfunction normalizeNamespaces(namespaces) {\n    var _a, _b;\n    const normalizedNamespaces = {};\n    if (!(0, core_1.isValidObject)(namespaces))\n        return normalizedNamespaces;\n    for (const [key, values] of Object.entries(namespaces)) {\n        const chains = (0, namespaces_1.isCaipNamespace)(key) ? [key] : values.chains;\n        const rpcMap = values.rpcMap || {};\n        const normalizedKey = (0, namespaces_1.parseNamespaceKey)(key);\n        normalizedNamespaces[normalizedKey] = Object.assign(Object.assign(Object.assign({}, normalizedNamespaces[normalizedKey]), values), { chains: mergeArrays(chains, (_a = normalizedNamespaces[normalizedKey]) === null || _a === void 0 ? void 0 : _a.chains), rpcMap: Object.assign(Object.assign({}, rpcMap), (_b = normalizedNamespaces[normalizedKey]) === null || _b === void 0 ? void 0 : _b.rpcMap) });\n    }\n    return normalizedNamespaces;\n}\nfunction parseCaip10Account(caip10Account) {\n    return caip10Account.includes(\":\") ? caip10Account.split(\":\")[2] : caip10Account;\n}\n/**\n * Populates the chains array for each namespace with the chains extracted from the accounts if are otherwise missing\n */\n// export function populateNamespacesChains(\n//   namespaces: SessionTypes.Namespaces,\n// ): Record<string, SessionTypes.Namespace> {\n//   const parsedNamespaces: Record<string, SessionTypes.Namespace> = {};\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const accounts = values.accounts || [];\n//     // If the key includes a CAIP separator `:` we know it's a namespace + chainId (e.g. `eip155:1`)\n//     const chains = isCaipNamespace(key)\n//       ? [key]\n//       : values.chains\n//       ? values.chains\n//       : getChainsFromApprovedSession(values.accounts);\n//     parsedNamespaces[key] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   }\n//   return parsedNamespaces;\n// }\nfunction convertChainIdToNumber(chainId) {\n    if (typeof chainId === \"number\")\n        return chainId;\n    if (chainId.includes(\"0x\")) {\n        return parseInt(chainId, 16);\n    }\n    chainId = chainId.includes(\":\") ? chainId.split(\":\")[1] : chainId;\n    return isNaN(Number(chainId)) ? chainId : Number(chainId);\n}\nconst CAIP_DELIMITER = \":\";\nfunction parseChainId(chain) {\n    const [namespace, reference] = chain.split(CAIP_DELIMITER);\n    return { namespace, reference };\n}\nfunction mergeArrays(a = [], b = []) {\n    return [...new Set([...a, ...b])];\n}\n","\n<template>\n  <div id=\"app\">\n    <el-container>\n      <el-header>OKX Connect Evm</el-header>\n      <el-main>\n        <!-- 钱包信息 -->\n        <el-card class=\"wallet-info\">\n          <template #header>\n            <div>钱包信息</div>\n          </template>\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Wallet Address:</strong> {{ getWalletAddress }}\n            </el-col>\n          </el-row>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>当前状态 :</strong> {{ currentStatus }}\n            </el-col>\n          </el-row>\n\n<!--          <el-row class=\"info-row\">-->\n<!--            <el-col :span=\"24\">-->\n<!--              <strong>Universal Link:</strong> {{ updateUniLink }}-->\n<!--            </el-col>-->\n<!--          </el-row>-->\n        </el-card>\n\n\n        <!-- 连接钱包 -->\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div>钱包操作</div>\n          </template>\n\n          <el-row :gutter=\"12\" align=\"middle\">\n            <el-col :span=\"4\">\n              <div>req</div>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isChecked(1)\" @change=\"() => handleChange(1)\"> eth</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isChecked(56)\" @change=\"() => handleChange(56)\"> BNB</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isChecked(137)\" @change=\"() => handleChange(137)\">Polygon</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isChecked(997865)\" @change=\"() => handleChange(997865)\">不存在的链</el-checkbox>\n            </el-col>\n\n          </el-row>\n\n          <el-row :gutter=\"12\" align=\"middle\">\n            <el-col :span=\"4\">\n              <div>opt</div>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(43114)\" @change=\"() => handleOptionChange(43114)\"> avax</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(10)\" @change=\"() => handleOptionChange(10)\">op</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(8453)\" @change=\"() => handleOptionChange(8453)\"> BASE</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(99781165)\" @change=\"() => handleOptionChange(99781165)\">不存在的链</el-checkbox>\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button type=\"primary\" @click=\"connectBtnClicked\" icon=\"el-icon-connection\">{{ connectStatusStr }}</el-button>\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\"  class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button type=\"danger\" @click=\"disconnectAction\" icon=\"el-icon-switch-button\" :disabled=\"walletAddress.length == 0\">{{ disconnectStatusStr }}</el-button>\n            </el-col>\n          </el-row>\n        </el-card>\n\n\n        <!-- 发送交易 -->\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div>交易</div>\n          </template>\n\n          <el-tabs v-model=\"activeTab\" type=\"border-card\" @tab-click=\"clickActiveTab\">\n            <!-- ETH -->\n              <el-tab-pane label=\"ETH交易\" name=\"eip155:1\">\n                <el-row :gutter=\"12\" class=\"button-row\">\n                  <el-col :span=\"24\">\n                    <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(ETH)</el-button>\n                  </el-col>\n                </el-row>\n\n                <el-row :gutter=\"12\" class=\"button-row\">\n                  <el-col :span=\"24\">\n                    <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(ETH)</el-button>\n                  </el-col>\n                </el-row>\n\n                <el-row :gutter=\"12\" class=\"button-row\">\n                  <el-col :span=\"24\">\n                    <el-button type=\"primary\" @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(切换到ETH)</el-button>\n                  </el-col>\n                </el-row>\n                <el-row :gutter=\"12\" class=\"button-row\">\n                  <el-col :span=\"24\">\n                    <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                  </el-col>\n                </el-row>\n                <el-row :gutter=\"12\" class=\"button-row\">\n                  <el-col :span=\"24\">\n                    <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                  </el-col>\n                </el-row>\n                <el-row :gutter=\"12\" class=\"button-row\">\n                  <el-col :span=\"24\">\n                    <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                  </el-col>\n                </el-row>\n                <el-row :gutter=\"12\" class=\"button-row\">\n                  <el-col :span=\"24\">\n                    <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(转账ETH)</el-button>\n                  </el-col>\n                </el-row>\n\n                <el-row :gutter=\"12\" class=\"button-row\">\n                  <el-col :span=\"24\">\n                    <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\">eth_sendTransaction(币种授权TONCoin)</el-button>\n                  </el-col>\n                </el-row>\n\n                <el-row :gutter=\"12\" class=\"button-row\">\n                  <el-col :span=\"24\">\n                    <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(eth mint nft)</el-button>\n                  </el-col>\n                </el-row>\n\n                <el-row :gutter=\"12\" class=\"button-row\">\n                  <el-col :span=\"24\">\n                    <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(添加代币SPX6900) </el-button>\n                  </el-col>\n                </el-row>\n\n\n\n              </el-tab-pane>\n            <!-- Polygon-->\n              <el-tab-pane label=\"Polygon交易\" name=\"eip155:137\">\n                <el-row :gutter=\"12\" class=\"button-row\">\n                  <el-col :span=\"24\">\n                    <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                  </el-col>\n                </el-row>\n\n                <el-row :gutter=\"12\" class=\"button-row\">\n                  <el-col :span=\"24\">\n                    <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                  </el-col>\n                </el-row>\n\n                <el-row :gutter=\"12\" class=\"button-row\">\n                  <el-col :span=\"24\">\n                    <el-button type=\"primary\" @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain</el-button>\n                  </el-col>\n                </el-row>\n                <el-row :gutter=\"12\" class=\"button-row\">\n                  <el-col :span=\"24\">\n                    <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                  </el-col>\n                </el-row>\n                <el-row :gutter=\"12\" class=\"button-row\">\n                  <el-col :span=\"24\">\n                    <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                  </el-col>\n                </el-row>\n                <el-row :gutter=\"12\" class=\"button-row\">\n                  <el-col :span=\"24\">\n                    <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                  </el-col>\n                </el-row>\n                <el-row :gutter=\"12\" class=\"button-row\">\n                  <el-col :span=\"24\">\n                    <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(转账POL)</el-button>\n                  </el-col>\n                </el-row>\n\n                <el-row :gutter=\"12\" class=\"button-row\">\n                  <el-col :span=\"24\">\n                    <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\">eth_sendTransaction(sushi 币种授权)</el-button>\n                  </el-col>\n                </el-row>\n\n                <el-row :gutter=\"12\" class=\"button-row\">\n                  <el-col :span=\"24\">\n                    <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(polygon mint nft)</el-button>\n                  </el-col>\n                </el-row>\n\n                <el-row :gutter=\"12\" class=\"button-row\">\n                  <el-col :span=\"24\">\n                    <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(添加代币LGNS) </el-button>\n                  </el-col>\n                </el-row>\n\n                <el-row :gutter=\"12\" class=\"button-row\">\n                  <el-col :span=\"24\">\n                    <el-button type=\"primary\" @click=\"wallet_testRpc()\">wallet_testRpc(Polygon)</el-button>\n                  </el-col>\n                </el-row>\n\n              </el-tab-pane>\n\n            <!-- BSC-->\n             <el-tab-pane label=\"BNB交易\" name=\"eip155:56\">\n               <el-row :gutter=\"12\" class=\"button-row\">\n                 <el-col :span=\"24\">\n                   <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(BNB)</el-button>\n                 </el-col>\n               </el-row>\n\n               <el-row :gutter=\"12\" class=\"button-row\">\n                 <el-col :span=\"24\">\n                   <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(BNB)</el-button>\n                 </el-col>\n               </el-row>\n\n               <el-row :gutter=\"12\" class=\"button-row\">\n                 <el-col :span=\"24\">\n                   <el-button type=\"primary\" @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(切换到BNB)</el-button>\n                 </el-col>\n               </el-row>\n               <el-row :gutter=\"12\" class=\"button-row\">\n                 <el-col :span=\"24\">\n                   <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                 </el-col>\n               </el-row>\n               <el-row :gutter=\"12\" class=\"button-row\">\n                 <el-col :span=\"24\">\n                   <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                 </el-col>\n               </el-row>\n               <el-row :gutter=\"12\" class=\"button-row\">\n                 <el-col :span=\"24\">\n                   <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                 </el-col>\n               </el-row>\n               <el-row :gutter=\"12\" class=\"button-row\">\n                 <el-col :span=\"24\">\n                   <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(转账BNB)</el-button>\n                 </el-col>\n               </el-row>\n\n               <el-row :gutter=\"12\" class=\"button-row\">\n                 <el-col :span=\"24\">\n                   <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\">eth_sendTransaction(币种授权POSI)</el-button>\n                 </el-col>\n               </el-row>\n\n\n               <el-row :gutter=\"12\" class=\"button-row\">\n                 <el-col :span=\"24\">\n                   <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(添加代币FET) </el-button>\n                 </el-col>\n               </el-row>\n\n               <el-row :gutter=\"12\" class=\"button-row\">\n                 <el-col :span=\"24\">\n                   <el-button type=\"primary\" @click=\"wallet_testRpc()\">wallet_testRpc(check balance on eth)</el-button>\n                 </el-col>\n               </el-row>\n\n\n\n             </el-tab-pane>\n          </el-tabs>\n\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">交易数据:</div>\n            <el-input v-model=\"testTransaction\" type=\"textarea\" :rows=\"5\" placeholder=\"sendTransactions\"></el-input>\n          </el-col>\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">签名结果 :</div>\n            <el-input v-model=\"testboc\" type=\"textarea\" :rows=\"5\" placeholder=\"boc\"></el-input>\n          </el-col>\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button type=\"primary\" @click=\"sendTransaction()\">{{ testTransactionStr }}</el-button>\n            </el-col>\n          </el-row>\n\n        </el-card>\n\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<style scoped>\n/* 重置全局边距和内边距 */\nbody, html {\n  margin: 0;\n  padding: 0;\n  height: 100%;\n}\n\n/* 确保 app 容器占满整个视口 */\n#app {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin: 0 auto; /* 居中 */\n  max-width: 600px; /* 设置最大宽度 */\n  padding: 0 20px; /* 添加一些左右内边距 */\n}\n\n/* 调整 el-container 样式 */\n.el-container {\n  min-height: 100vh;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n}\n\n/* 调整 el-header 样式 */\n.el-header {\n  background-color: #333333;\n  color: white;\n  height: 50px;\n  line-height: 50px;\n  font-size: 18px;\n  font-weight: bold;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n}\n\n/* 调整 el-main 样式 */\n.el-main {\n  padding: 70px 0 20px; /* 增加顶部内边距以避免被固定header遮挡 */\n  flex-grow: 1;\n}\n\n.el-card {\n  margin-bottom: 20px;\n}\n\n.info-row {\n  margin-bottom: 10px;\n}\n\n.input-label {\n  margin-bottom: 5px;\n  text-align: left;\n}\n\n.el-input {\n  margin-bottom: 10px;\n}\n\n/* 通用按钮样式 */\n.wallet-actions .el-button,\n.transaction .el-button,\n.clear-cache .el-button {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 40px;\n}\n\n.wallet-actions .el-button span,\n.transaction .el-button span,\n.clear-cache .el-button span {\n  margin: 0 auto;\n}\n\n/* 按钮行间距 */\n.wallet-actions .button-row,\n.transaction .button-row {\n  margin-bottom: 8px;\n}\n\n.wallet-actions .button-row:last-child,\n.transaction .button-row:last-child {\n  margin-bottom: 0;\n}\n\n/* 调整图标和文字的对齐 */\n.wallet-actions .el-button [class^=\"el-icon-\"],\n.transaction .el-button [class^=\"el-icon-\"],\n.clear-cache .el-button [class^=\"el-icon-\"] {\n  margin-right: 5px;\n  vertical-align: middle;\n}\n\n/* 新增：调整发送交易按钮与输入框的间距 */\n.transaction .el-row:not(:last-child) {\n  margin-bottom: 10px;\n}\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  text-align: center;\n  position: relative;\n  max-width: 90%;\n  width: 300px;\n}\n\n.close-button {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  font-size: 24px;\n  border: none;\n  background: none;\n  cursor: pointer;\n}\n\n/* 响应式调整 */\n@media (max-width: 600px) {\n  #app {\n    padding: 0 10px;\n  }\n\n  .el-main {\n    padding: 60px 0 10px;\n  }\n}\n</style>\n<script>\n\nimport {\n   OKX_CONNECT_ERROR_CODES\n} from \"@okxconnect/core\"\nimport {OKXUniversalProvider} from \"@okxconnect/universal-provider\"\nimport VConsole from 'vconsole'\nnew VConsole();\nvar chains = new Set([1]);\nvar optionChains = new Set([])\n\n// import QrcodeVue from 'qrcode.vue'\nexport default {\n  name: 'App',\n  // components: {\n  //   QrcodeVue\n  // },\n  data: ()=> {\n    return {\n      activeTab:'eip155:1',\n      testTopic: '',\n      testPublicKey: '',\n      testProofPayload: '',\n      pendingDeepLink: '-',\n      logList: [],\n      connectReady: false,\n      connectStatusStr: '连接钱包',\n      disconnectStatusStr: '断开钱包',\n      localPubKey: '',\n      localSecKey: '',\n      testTransaction:'',\n      selectedChain:'eip155:1',\n      testTransactionStr:'发送交易',\n      walletAddress:'',\n      testboc:'',\n      ProofPayloadVerify:'',\n      showModal: false,\n      showVerifyRow: false,\n      qrValue: 'https://www.okx.com/download',\n      currentStatus:\"\",\n      isChecked: (chainId) => {\n        return chains.has(chainId)\n      },\n      isOptionalChecked: (chainId) => {\n        return optionChains.has(chainId)\n      },\n      handleChange: (chainId) => {\n        if (chains.has(chainId)) {\n          chains.delete(chainId)\n        } else {\n          chains.add(chainId)\n        }\n      },\n      handleOptionChange: (chainId) => {\n        if (optionChains.has(chainId)) {\n          optionChains.delete(chainId)\n        } else {\n          optionChains.add(chainId)\n        }\n      },\n    }\n  },\n  computed: {\n    getWalletAddress:function (){\n      return this.walletAddress;\n    },\n\n  },\n  methods: {\n\n    async clickActiveTab(tab) {\n\n      const tabName = tab.props ? tab.props.name : tab.name;\n      this.selectedChain = tabName\n      console.log(`已切换到链 :`,tabName);\n\n      if (!window.provider){\n        console.error('钱包 未初始化完成');\n      }\n      window.provider.setDefaultChain(this.selectedChain);\n    },\n\n    async connectBtnClicked() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        this.testTonSdk();\n      } else {\n      console.log(`connectBtnClicked provider not finish init`);\n      }\n\n    },\n\n    async disconnectAction() {\n      try {\n        console.log('get disconnect wallet btn clicked');\n        // await TON.disconnect();\n        var provider = window.provider\n        await provider.disconnect();\n        this.walletAddress = 'disconnected'\n      } catch (error) {\n        console.log('Disconnect  error ==>> ',error.message);\n        this.currentStatus = error.message;\n      }\n    },\n\n    async eth_requestAccounts(){\n      var data =  {\"method\":\"eth_requestAccounts\"}\n      this.testTransaction = JSON.stringify(data)\n    },\n    async eth_chainId(){\n      var data =  {\"method\":\"eth_chainId\"}\n      this.testTransaction = JSON.stringify(data)\n    },\n    async wallet_switchEthereumChain(){\n      var data =  {\"method\":\"wallet_switchEthereumChain\"}\n      this.testTransaction = JSON.stringify(data)\n    },\n\n    async wallet_addEthereumChain(){\n      var data = {\"method\":\"wallet_addEthereumChain\",\n        \"params\":[{\"blockExplorerUrls\":[\"https://explorer.fuse.io\"],\n          \"chainId\":\"0x7a\",\n          \"chainName\":\"Fuse\",\n          \"nativeCurrency\":{\"name\":\"Fuse\",\"symbol\":\"FUSE\",\"decimals\":18},\n          \"rpcUrls\":[\"https://rpc.fuse.io\"]\n        }\n        ]\n      }\n\n      this.testTransaction = JSON.stringify(data)\n    },\n    async personal_sign(){\n      if (this.selectedChain === \"eip155:1\"){\n\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0x1ca023f10e157d148deed210f8bee193657a1eaa7f187909e20a9dc3b071dbc364c41fde37960c05093359f410a061ec8a7dca8c0c39fc7c1e24de8a3329775d1b\n\n        var dataETH = {\"method\":\"personal_sign\",\n          \"params\":[\n             '0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336'\n          ]};\n        this.testTransaction = JSON.stringify(dataETH)\n      }else if(this.selectedChain === \"eip155:137\"){\n\n\n        // method\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0xebda9cfa2af43999058dffa0107031d1ef7fc0252dca85dcbd22ea097af922ca39b64d509ef61ce42b7641c5840b8a80337ffd1411b13e87e2260a3f1b6c151c1b\n\n        var dataPolygon = {\"method\":\"personal_sign\",\n          \"params\":{\"message\":\"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\"}\n        };\n        this.testTransaction = JSON.stringify(dataPolygon)\n      }else if(this.selectedChain === \"eip155:56\"){\n        var data = {\"method\":\"personal_sign\",\n          \"params\":{\"message\":\"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\"}\n        };\n\n        this.testTransaction = JSON.stringify(data)\n      }\n\n    },\n    async eth_signTypedData_v4(){\n\n      // method\n      // eth_signTypedData\n      // address\n      // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n      // valid\n      // true\n      // result\n      // 0xa8bb3c6b33a119d2d567c7632195c21988df778006082742125a591f5c633f716107883a37f7de6531a6312a5f69022135bf46fe5ab77905b62c82b3395f985e1b\n      //\n\n      // var data = {\n      //   \"method\": \"eth_signTypedData_v4\",\n      //   \"params\": {\n      //     \"typedDataJson\":\"{\\\"types\\\":{\\\"EIP712Domain\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"version\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"chainId\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"name\\\":\\\"verifyingContract\\\",\\\"type\\\":\\\"address\\\"}],\\\"Person\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"wallet\\\",\\\"type\\\":\\\"address\\\"}],\\\"Mail\\\":[{\\\"name\\\":\\\"from\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"to\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"contents\\\",\\\"type\\\":\\\"string\\\"}]},\\\"primaryType\\\":\\\"Mail\\\",\\\"domain\\\":{\\\"name\\\":\\\"Ether Mail\\\",\\\"version\\\":\\\"1\\\",\\\"chainId\\\":1,\\\"verifyingContract\\\":\\\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\\\"},\\\"message\\\":{\\\"from\\\":{\\\"name\\\":\\\"Cow\\\",\\\"wallet\\\":\\\"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\\\"},\\\"to\\\":{\\\"name\\\":\\\"Bob\\\",\\\"wallet\\\":\\\"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\\\"},\\\"contents\\\":\\\"Hello, Bob!\\\"}}\"\n      // }}\n\n     var data = {\"method\":\"eth_signTypedData_v4\",\n      params: [\n        {\n          \"types\": {\n            \"EIP712Domain\": [\n              {\n                \"name\": \"name\",\n                \"type\": \"string\"\n              },\n              {\n                \"name\": \"version\",\n                \"type\": \"string\"\n              },\n              {\n                \"name\": \"chainId\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"name\": \"verifyingContract\",\n                \"type\": \"address\"\n              }\n            ],\n            \"Person\": [\n              {\n                \"name\": \"name\",\n                \"type\": \"string\"\n              },\n              {\n                \"name\": \"wallet\",\n                \"type\": \"address\"\n              }\n            ],\n            \"Mail\": [\n              {\n                \"name\": \"from\",\n                \"type\": \"Person\"\n              },\n              {\n                \"name\": \"to\",\n                \"type\": \"Person\"\n              },\n              {\n                \"name\": \"contents\",\n                \"type\": \"string\"\n              }\n            ]\n          },\n          \"primaryType\": \"Mail\",\n          \"domain\": {\n            \"name\": \"Ether Mail\",\n            \"version\": \"1\",\n            \"chainId\": 1,\n            \"verifyingContract\": \"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\"\n          },\n          \"message\": {\n            \"from\": {\n              \"name\": \"Cow\",\n              \"wallet\": \"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\"\n            },\n            \"to\": {\n              \"name\": \"Bob\",\n              \"wallet\": \"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\"\n            },\n            \"contents\": \"Hello, Bob!\"\n          }\n        }\n      ]}\n\n\n      this.testTransaction = JSON.stringify(data)\n    },\n    async eth_sendTransaction_transfer(){\n      var data = {}\n      if (this.selectedChain === \"eip155:1\"){\n        data = {\n          \"method\": \"eth_sendTransaction\",\n          \"params\": {\n            \"from\": \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            \"chainId\": \"0x1\",\n            \"to\": \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            \"value\": \"0x5af3107a4000\",\n            \"maxPriorityFeePerGas\": \"0x3b9aca00\",\n            \"gas\": \"0x5e56\",\n            \"maxFeePerGas\": \"0x2643b9db8\"\n          }\n        }\n\n      }else if(this.selectedChain === \"eip155:137\"){\n         data = {\n          \"method\": \"eth_sendTransaction\",\n          \"params\": {\n            \"gasPrice\": \"0x17003f6530\",\n            \"nonce\": \"0x0d30\",\n            \"data\": \"0x\",\n            \"value\": \"0x00\",\n            \"to\": \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            \"gasLimit\": \"0x5208\",\n            \"from\": \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\"\n          }\n        }\n      }else if(this.selectedChain === \"eip155:56\"){\n        data = {\n          \"method\": \"eth_sendTransaction\",\n          \"params\":{\n            \"gas\": \"0x5e56\",\n            \"value\": \"0x5af3107a4000\",\n            \"from\": \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            \"gasPrice\": \"0x3b9aca00\",\n            \"to\": \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            \"chainId\": \"0x38\"\n          }\n        }\n      }\n\n      var accounts = await window.provider.request({\"method\":\"eth_requestAccounts\"},\"eip155\");\n      var address = accounts[0];\n      console.log('当前钱包地址------',address)\n      data.params['to'] = address;\n      data.params['from'] = address;\n      this.testTransaction = JSON.stringify(data)\n\n    },\n\n    async eth_sendTransaction_approve(){\n      var data = {}\n\n      if(this.selectedChain === \"eip155:1\"){\n        data = {\n          \"method\": \"eth_sendTransaction\",\n          \"params\": {\n            \"from\": \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            \"data\": \"0x095ea7b3000000000000000000000000000000000022d473030f116ddee9f6b43ac78ba3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            \"to\": \"0x582d872a1b094fc48f5de31d3b73f2d9be47def1\",\n          }\n        }\n      }else if(this.selectedChain === \"eip155:137\"){\n        data = {\n          \"method\": \"eth_sendTransaction\",\n          \"params\": {\n            \"from\": \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            \"data\": \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000f6f8096ac575b0\",\n            \"to\": \"0x0b3F868E0BE5597D5DB7fEB59E1CADBb0fdDa50a\",\n          }\n        }\n      }else if(this.selectedChain === \"eip155:56\"){\n        data = {\n          \"method\": \"eth_sendTransaction\",\n          \"params\": {\n            \"from\": \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            \"value\": \"0x0\",\n            \"gas\": \"0xe117\",\n            \"gasPrice\": \"0xb2d05e00\",\n            \"data\": \"0x095ea7b300000000000000000000000031c2f6fcff4f8759b3bd5bf0e1084a055615c768ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            \"to\": \"0x5CA42204cDaa70d5c773946e69dE942b85CA6706\",\n          }\n        }\n      }\n\n      var accounts = await window.provider.request({\"method\":\"eth_requestAccounts\"},\"eip155\");\n      var address = accounts[0];\n      console.log('当前钱包地址------',address)\n      data.params['from'] = address;\n      this.testTransaction = JSON.stringify(data)\n    },\n\n    async eth_sendTransaction_mint(){\n      var data = {}\n      if (this.selectedChain === 'eip155:1'){\n        data = {\n          \"method\": \"eth_sendTransaction\",\n          \"params\": {\n            \"gas\": \"0x4cacb\",\n            \"data\": \"0xa64dfa75000000000000000000000000ed688002f3797599db8b4feacfe8b1dda0df1c8d000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cecb15396825a895ff8da8fc2d2c77a234dccee00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f6261667962656968643737366b6177706e71336f6f6a6635693274787a76617737737164656b34616a776472637472703261366f626b70723773792f7b69647dan            \"to\": \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            \"value\": \"0x0\",\n            \"from\": \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\"\n          }\n        }\n      }else if(this.selectedChain === 'eip155:137'){\n        data = {\n          \"method\": \"eth_sendTransaction\",\n          \"params\": {\n            \"gas\": \"0x30795\",\n            \"data\": \"0xa64dfa75000000000000000000000000341b3687f0309778f08f29336b2c4b9c38b9f110000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f62616679626569686a6279676b68747a71376b68377434336266686e676e793236337668766f6578716a6d6e377161716166366e717a64743777712f7b69647dan            \"to\": \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            \"value\": \"0x0\",\n            \"from\": \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\"\n          }\n        }\n      }\n\n     let str = JSON.stringify(data);\n      console.log(\"-----长度--->\",str.length);\n      var accounts = await window.provider.request({\"method\":\"eth_requestAccounts\"},\"eip155\");\n      var address = accounts[0];\n      console.log('当前钱包地址------',address)\n      data.params['from'] = address;\n      this.testTransaction = JSON.stringify(data)\n    },\n\n\n    async wallet_testRpc() {\n      let provider = window.provider\n      provider.setDefaultChain(`eip155:56`, `https://eth-mainnet.g.alchemy.com/v2/NxUfYJUr-TQtEpLmSXhhD5pXn70GwsyV`);\n      var data = {\"method\":\"eth_getBalance\",\"params\":[\"0x8D97689C9818892B700e27F316cc3E41e17fBeb9\", \"latest\"]}\n      this.testTransaction = JSON.stringify(data)\n    },\n    async wallet_watchAsset() {\n      var data ={};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          \"method\": \"wallet_watchAsset\",\n          \"params\": {\n            \"type\":\"ERC20\",\n            \"options\":{\n              \"address\":\"0xe0f63a424a4439cbe457d80e4f4b51ad25b2c56c\",\n              \"symbol\":\"SPX6900\",\n              \"image\":\"https://assets.coingecko.com/coins/images/31401/standard/sticker_%281%29.jpg?1702371083\",\n              \"decimals\":8\n            }\n          },\n        }\n\n      }else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          \"method\": \"wallet_watchAsset\",\n          \"params\": {\n            \"type\":\"ERC20\",\n            \"options\":{\n              \"address\":\"0xeB51D9A39AD5EEF215dC0Bf39a8821ff804A0F01\",\n              \"symbol\":\"LGNS\",\n              \"image\":\"https://polygonscan.com/token/images/originlgns_32.png\",\n              \"decimals\":9\n            }\n          },\n        }\n\n      }else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          \"method\": \"wallet_watchAsset\",\n          \"params\": {\n            \"type\":\"ERC20\",\n            \"options\":{\n              \"address\":\"0x031b41e504677879370e9dbcf937283a8691fa7f\",\n              \"symbol\":\"FET\",\n              \"image\":\"https://bscscan.com/token/images/fetch_32.png\",\n              \"decimals\":18\n            }\n          },\n        };\n\n      }\n\n      this.testTransaction = JSON.stringify(data)\n    },\n\n    async sendTransaction(){\n      console.log('sendTransaction',window.provider)\n      console.log('sendTransaction内容11------',this.testTransaction)\n      if (!window.provider){\n        console.error('钱包 未初始化完成');\n      }\n\n      if (this.testTransaction && window.provider) {\n        // eslint-disable-next-line no-undef\n        const sendData = JSON.parse(this.testTransaction)\n        try {\n          console.log('sendTransaction-----22method>>',sendData.method)\n\n          let chainId = 'eip155:1';\n          if (this.selectedChain){\n            chainId = this.selectedChain;\n            console.log('sendTransaction-----this.selectedChain>>',this.selectedChain)\n          }\n          console.log(`请求数据发送 sendTransaction ----->> ${JSON.stringify(sendData)}`)\n          var result = await window.provider.request(sendData,chainId)\n          console.log(`请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`)\n\n          if (typeof result == \"string\") {\n            this.testboc = result\n          }else {\n            this.testboc = JSON.stringify(result)\n          }\n          console.log('方法数据回调 --this.testboc--',this.testboc)\n        } catch (error) {\n          console.error('方法数据回调失败 --Error--',error.message)\n\n          if (error.code === OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n            this.testboc = \"用户拒绝交易\"\n          } else {\n            this.testboc = \"签名错误！\"\n          }\n        }\n      } else {\n        alert(\"交易数据为空，请选则或输入交易数据。\")\n      }\n    },\n\n    async testTonSdk(){\n        // 1. connect\n        //  create sub providers for each namespace/chain\n      let nameSpacesChains = []\n      let optSpaceChains = []\n\n      chains.forEach((chainId) => nameSpacesChains.push(`eip155:${chainId}`))\n      optionChains.forEach((chainId) => optSpaceChains.push(`eip155:${chainId}`))\n\n      console.log(`namespaceChains  ===> ${JSON.stringify(nameSpacesChains)}`)\n\n        var provider = window.provider;\n        var connectData = {};\n        if (nameSpacesChains && nameSpacesChains.length>0){\n         var requireData = {\n           eip155: {\n             chains: nameSpacesChains,\n             defaultChain:nameSpacesChains[0]\n           }\n         }\n         connectData['namespaces'] = requireData;\n        }\n\n        if (optSpaceChains && optSpaceChains.length>0){\n          var optData = {\n            eip155: {\n              chains: optSpaceChains,\n              defaultChain:optSpaceChains[0]\n            }\n          }\n          connectData['optionalNamespaces'] = optData;\n        }\n\n        if (nameSpacesChains.length === 0 && optSpaceChains.length === 0){ //未选择链\n          alert(\"请选择一条链\");\n          return\n        }\n\n        await provider.connect(connectData).then(() => {\n          // 2. set defaul chain\n          this.walletAddress = \"connected\";\n        });\n    },\n\n    closeModal() {\n      this.showModal = false;\n    },\n\n    isPC() {\n      const userAgentInfo = navigator.userAgent\n      console.log('current device ua is ===>',userAgentInfo)\n\n      const Agents = [\"Android\", \"iPhone\", \"SymbianOS\", \"Windows Phone\", \"iPad\", \"iPod\"]\n      let flag = true\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = false\n          break\n        }\n      }\n      return flag\n    },\n    isSafariOrChrome() {\n      const userAgentInfo = navigator.userAgent\n      const Agents = [\"Safari\", \"Chrome\"]\n      let flag = false\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = true\n          break\n        }\n      }\n      return flag\n    },\n  },\n  created() {\n    // for (const eventName of Object.values(OKX_TON_CONNECTION_AND_TRANSACTION_EVENT)) {\n    //   console.log(eventName);\n    //   window.addEventListener(eventName, (event) => {\n    //     console.log(eventName,event.detail)\n    //     this.currentStatus = eventName\n    //   });\n    // }\n  },\n\n  mounted() {\n    \n    if (document.getElementById('tgsdk')) \n    {return;} // was already loaded\n    var scriptTag = document.createElement(\"script\");\n    scriptTag.src = \"https://telegram.org/js/telegram-web-app.js\";\n    scriptTag.id = \"tgsdk\";\n    document.getElementsByTagName('head')[0].appendChild(scriptTag);\n    \n    this.connectReady = true;\n    document.title = \"OKX Connect Evm\";\n    OKXUniversalProvider.init({\n      dappMetaData: {\n          name: 'univer test dapp',\n          icon: 'https://avatars.githubusercontent.com/u/37784886'\n        },\n      }).then((provider)=>{\n        window.provider = provider;\n        console.log(`init finished: ${provider}`);\n        console.log(`init finished session: ${JSON.stringify(provider.session)}`);\n        provider.on('connect', (session) => {\n          console.log('get connect session', session)\n          this.walletAddress = \"connected\"\n        });\n        provider.on('reconnect', (session) => {\n          console.log('get reconnect session', session)\n          this.walletAddress = \"connected\"\n        });\n        provider.on('disconnect', () => {\n          console.log('get disconnect')\n          this.walletAddress = \"disconnected\"\n        });\n      })\n    }\n}\n</script>","import { render } from \"./App.vue?vue&type=template&id=0941c6b9&scoped=true\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=0941c6b9&scoped=true&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0941c6b9\"]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\nimport App from './App.vue'\n\nconst app = createApp(App)\n\napp.use(ElementPlus)\napp.mount('#app')","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkokxconnectdemo\"] = self[\"webpackChunkokxconnectdemo\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(1074); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["OKXCONNECTOR_WS_URL","OKXCONNECTOR_MESSAGE_TTL","CONNECT_JSONRPC_VER","ConnectorState","InitState","Connecting","Connected","Disconnected","OnError","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","callForSuccess","fn","options","this","_a","_b","attempts","delayMs","Error","lastError","i","err","delay","timeout","signal","aborted","timeoutId","setTimeout","addEventListener","clearTimeout","debug","logDebug","args","console","window","okxLogDebug","logError","error","logWarning","warn","JSONStringify","data","JSON","stringify","_","toString","JSONParse","json","numbersBiggerThanMaxInt","serializedData","replace","match","parse","isCustomFormatBigInt","BigInt","substring","length","safeJsonParse","safeJsonStringify","standardUniversalLink","standardDeeplink","tonConnectSdkVersion","getUniversalLink","deeplinkUrl","deeplinkEncodeUrl","encodeURIComponent","openOKXDeeplinkWithFallback","base64UrlParam","_c","_d","fullUrl","isTelegram","getWindow","TelegramWebviewProxy","isIOS","test","navigator","userAgent","MSStream","log","deepLinkOpened","timeoutDuration","downloadUrl","Date","now","base64Content","okxconnect","extraparams","base64ContentStr","utf8Array","TextEncoder","encode","base64Encoded","btoa","String","fromCharCode","tgurl","open","newWindow","fallbackToDownloadPage","tgUrlString","Telegram","WebApp","openTelegramLink","once","document","visibilityState","BASE16","hexToByteArray","hexString","Uint8Array","parseInt","slice","toHexString","byteArray","forEach","byte","concatUint8Arrays","buffer1","buffer2","mergedArray","set","splitToUint8Arrays","array","index","subArray1","subArray2","encodeUint8Array","urlSafe","encoded","naclutil","decodeToUint8Array","decodeURIComponent","base64encode","uint8Array","base64decode","decodedUint8Array","toObject","toUint8Array","checkWSUrl","url","RegExp","scheme","undefined","resolveWebSocketImplementation","WebSocket","global","self","hasBuiltInWebSocket","resolveLocalStorage","localStorage","RANDOM_LENGTH","hashKey","key","hash","fromString","generateRandomBytes32","nacl","generateTopic","randomBytes32","isValidObject","obj","Object","getPrototypeOf","prototype","keys","isIos","openLink","href","target","openLinkBlank","openDeeplinkWithFallback","fallback","doFallback","isBrowser","isOS","fallbackTimeout","isMobileUserAgent","check","a","vendor","opera","getUserAgent","results","UAParser","getResult","osName","os","name","toLowerCase","deviceModel","device","model","includes","browserName","browser","WS","OKXWalletConnector","constructor","events","EventEmitter","state","heartbeatTimer","connecting","onPayload","rsp","emit","onClose","event","socket","onError","id","payload","msg","onopen","onmessage","onclose","emitError","errorEvent","heartbeat","readyState","OPEN","send","bind","registOpen","URLSearchParams","get","onerror","message","on","onVisibleChanged","connect","removeEventListener","disconnect","close","currentStatus","addListener","decrypt","success","failed","listenPayloadHandler","removeListener","parsedEvent","params","rawMsg","failHandler","addPackageParse","callback","payloadHandler","toUTCString","param","listener","off","doLogin","getMsgPayloadFromHistory","tmpMsg","jsonstr","onOpen","openHandler","CONNECT_METHOD_LOGIN","CONNECT_METHOD_PUBLISH","CONNECT_METHOD_SUB","CONNECT_METHOD_UNSUB","CONNECT_METHOD_RECEIVE","CONNECT_METHOD_FETCHMSG","OKXCONNECTOR_CACHE_KEY","OKXCONNECTOR_CRYPTO_KEY","OKXCONNECTOR_SESSION_PREFIX_KEY","OKXCONNECTOR_JWT_KEY","OKXCONNECTOR_TOKEN_CACHE","OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE","OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD","OKXCONNECTOR_STORAGER_CRYPTO_SALT","OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV","OKXCONNECTOR_JWT_SIDE","OKXCONNECTOR_JWT_WALLET_SIDE","OKXCONNECTOR_JWT_TTL","Storage","subKey","storeKey","cipherIV","cacheStr","getItem","cacheKey","cache","cacheObj","saveContent","content","item","timestamp","saveItem","localKey","totalCacheStr","setItem","getCachedPBKDF2InfoKey","pwLen","saltLen","pw","iv","salt","ivBuffer","PBKDF2","iterations","encryptStoreMsg","storeInfo","AES","encrypt","getAndDecrypt","enc","Utf8","clearCache","SessionCrypto","keyPair","nonceLength","sessionKeyPair","createKeypairFromString","createKeypair","publicKey","secretKey","createNonce","receiverPublicKey","encodedMessage","nonce","encrypted","concatInfo","hexResult","encodedResult","encryptWallet","senderPublicKey","messageByteArray","internalMessage","decrypted","TextDecoder","decode","decryptWallet","stringifyKeypair","JWT_IRIDIUM_ALG","JWT_IRIDIUM_TYP","JWT_DELIMITER","JWT_ENCODING","JSON_ENCODING","DATA_ENCODING","DID_DELIMITER","DID_PREFIX","DID_METHOD","MULTICODEC_ED25519_ENCODING","generateKeyPair","encodeJSON","val","encodeIss","publicKeyStr","join","encodeSig","bytes","encodeData","header","encodeJWT","signature","signJWT","sub_1","aud_1","ttl_1","keyPair_1","arguments","sub","aud","ttl","iat","Math","floor","alg","typ","iss","exp","act","detached","ConnectionManager","connectStorage","crypto","jwtKeyPair","getCachedJWTKeyPair","saveJWTKeyPair","connector","packageId","connectedWalletPK","currentTopic","refreshPackageId","saveCryptoKeyPair","cacheInfo","getCachedCryptoKeyPair","kp","keyPairInfo","strkeyPair","strKeyPairInfo","isWalletPKReady","makeJWT","topic","parsePackage","input_1","input","ignoreACK","sendACK","inputObj","messageId","sendReceive","restoreConnect","getConnectInfo","info","channelId","clientId","fromRestore","timeLog","getTime","lastConnectId","cachedSenderPublicKey","jwtToken","timeOne","code","timeF","sendFetchAndConsumeMessages","timeTh","jsonrpc","method","token","parsedMessage","fail","msgObj","msgId_1","success_1","msgId","reason","fetchedMessages","hasMore","receivedMsgs","timeFive","cleanCache","saveSessionContent","jsonData","getSessionContent","jsonStr","object","WalletConnectionManagerTopicInfoCacheKey","WalletConnectionManager","communicateEvents","sessionCryptoInfoMap","Map","inLogin","isLogined","topicId","isTopicPublicKeyExist","timestampStr","topic_1","sessionInfo","dappPublicKey","recovrySessionInfoFromCache","cacheMap","topicItem","cryptoItem","cryptoKeyPair","syncCacheSessionInfo","cacheSessionInfo","appendTopic","sessionPublicKey","subscribeTopics","Array","from","size","getSessionPublicKey","getCurrentCachedTopicIdList","msg_1","needPublicKey","connectedDappPK","cryptoObject","messageObj","privateKey","sendUnsubscribe","delete","topicIdList","finishCount","idx","OKX_CONNECT_ERROR_CODES","OKXConnectError","getDefaultMessageByCode","super","prefix","setPrototypeOf","UNKNOWN_ERROR","BAD_REQUEST_ERROR","ALREADY_CONNECTED_ERROR","NOT_CONNECTED_ERROR","UNKNOWN_APP_ERROR","USER_REJECTS_ERROR","METHOD_NOT_SUPPORTED","PARSE_ERROR","INVALID_REQUEST","METHOD_NOT_FOUND","INVALID_PARAMS","INTERNAL_ERROR","SERVER_ERROR","RESERVED_ERROR_CODES","STANDARD_ERROR_MAP","DEFAULT_ERROR","NameSpaceKeyEip155","NameSpaceKeySOL","NameSpaceKeyTON","isJsonRpcPayload","isJsonRpcResponse","isJsonRpcResult","isJsonRpcError","IncrementalRandomGenerator","bits","typedArray","Uint16Array","Uint32Array","initialValue","getRandomValues","getNextValue","uint8Generator","uint16Generator","payloadId","date","extra","getBigIntRpcId","formatJsonRpcRequest","formatJsonRpcError","formatErrorMessage","isReservedErrorCode","getError","type","getErrorByCode","values","find","assign","getUrlProtocol","matches","matchRegexProtocol","regex","protocol","isHttpUrl","parseConnectionError","IEngineEvents","ISignClientEvents","ISignClient","IEngine","client","TONCHAIN","CONNECT_ITEM_ERROR_CODES","buildNameSpacesByConnectResponse","connectResponse","requestAccountNameSpaces","buildRequestAccountNameSpacesByConnectResponse","universalResponse","responses","accounts","chains","addresses","addressItem","oneAddress","split","push","namespace","methods","Engine","connectionManager","pendingRequests","disconnectListener","jsonResponse","handleResponse","addDisconnectListener","disconnecter","clear","getRequestId","requestId","bindRequestForPromise","request","requestAnswer","option","onAck","call","response","restoreconnect","onConnectResult","conect","sessionConfig","connectInfo","openUniversalLink","openUniversalUrl","connectRequest","protocolVer","Number","dAppInfo","dappInfo","requests","redirect","connectRequestStr","session","onConnect","namespaces","require","__importDefault","mod","__esModule","defineProperty","exports","OKXUniversalProvider","utils_1","eip155_1","constants_1","eventemitter3_1","client_1","core_1","namespaces_1","init","opts","provider","initialize","rpcProviders","default","providerOpts","chain","chainId","validateChain","keyArr","requestParam","getProvider","enable","connectOpts","requestAccounts","called","onRequestSent","cleanup","engine","setNamespaces","setDefaultChain","rpcUrl","checkStorage","sessionInfoStr","getFromStore","createProviders","location","hostname","dappMetaData","SignClient","registerEventListeners","providersToCreate","Set","map","parseNamespaceKey","setGlobal","namespacesValue","currentNameSpace","PROVIDER_EVENTS","DEFAULT_CHAIN_CHANGED","caip2ChainId","onChainChanged","UPDATE_NAMESPACES","nameSpaces","nameSpacekey","persist","icon","chainsArr","defaultNamespace","defaultChain","getDefaultChain","caip2Chain","sessionProperties","__createBinding","create","o","m","k","k2","desc","getOwnPropertyDescriptor","writable","configurable","enumerable","__exportStar","p","hasOwnProperty","OKXUniversalProvider_1","metaData","requestAccountItem","requiredNamespaces","nameSpaceToConnectWalletNameSpace","optionalNamespaces","metadata","fillParamsToSession","openOKXWallet","getAccountsChains","isCaipNamespace","account","mergeRpcMap","targetRpcMap","sourceRpcMap","mergeNamespaces","source","rpcMap","some","GENERIC_SUBPROVIDER_NAME","RPC_URL","STORAGE","CONTEXT","WC_VERSION","PROTOCOL","RELAY_URL","LOGGER","JsonRpcProvider_1","JsonRpcConnection_1","Eip155Provider","getGlobal","httpProviders","createHttpProviders","isRecord","isArray","updateRequestParams","isDic","switchChainId","decimalNumber","isNaN","selectedChainId","chainNum","paramsChainId","paramsChainString","startsWith","adaptArray","paramsArr","firstParam","addressObj","isEqual","chainAddress","messages","typedDataJson","firstObj","secondObj","getAccounts","handleSwitchChain","addEthereumChain","getHttpProvider","resultData","nameSpace","rpcUrls","setHttpProvider","eip155","updateNamespace","rpc","getRpcUrl","filter","hexChainId","parsedChainId","isChainApproved","createHttpProvider","http","JsonRpcProvider","JsonRpcConnection","getChainId","parsedRpc","httpProvider","cross_fetch_1","core_2","DEFAULT_HTTP_HEADERS","Accept","DEFAULT_HTTP_METHOD","DEFAULT_FETCH_OPTS","headers","disableProviderPing","isAvailable","registering","connected","register","body","res","parseError","types_1","IJSONRpcProvider","connection","hasRegisteredEventListeners","setConnection","context","requestStrict","_error","IJSONRpcConnection","opt","globals","validateChainApproval","getChainsFromApprovedSession","getAccountsFromSession","mergeRequiredOptionalNamespaces","normalizeNamespaces","parseCaip10Account","convertChainIdToNumber","parseChainId","mergeArrays","lodash_1","projectId","reference","address","matchedNamespaceKeys","accountsForNamespace","required","optional","merge","normalizedNamespaces","entries","normalizedKey","caip10Account","CAIP_DELIMITER","b","_createElementBlock","_hoisted_1","_createVNode","_component_el_container","_withCtx","_component_el_header","_cache","_createTextVNode","_component_el_main","_component_el_card","class","_createElementVNode","_component_el_row","_component_el_col","span","_toDisplayString","$options","getWalletAddress","_ctx","gutter","align","_component_el_checkbox","checked","isChecked","onChange","handleChange","isOptionalChecked","handleOptionChange","_component_el_button","onClick","connectBtnClicked","connectStatusStr","disconnectAction","disabled","walletAddress","disconnectStatusStr","_component_el_tabs","modelValue","activeTab","$event","onTabClick","clickActiveTab","_component_el_tab_pane","label","eth_requestAccounts","eth_chainId","wallet_switchEthereumChain","wallet_addEthereumChain","personal_sign","eth_signTypedData_v4","eth_sendTransaction_transfer","eth_sendTransaction_approve","eth_sendTransaction_mint","wallet_watchAsset","wallet_testRpc","xs","sm","_component_el_input","testTransaction","rows","placeholder","testboc","sendTransaction","testTransactionStr","VConsole","optionChains","testTopic","testPublicKey","testProofPayload","pendingDeepLink","logList","connectReady","localPubKey","localSecKey","selectedChain","ProofPayloadVerify","showModal","showVerifyRow","qrValue","has","add","computed","tab","tabName","props","testTonSdk","dataETH","dataPolygon","str","sendData","alert","nameSpacesChains","optSpaceChains","connectData","requireData","optData","closeModal","isPC","userAgentInfo","Agents","flag","v","indexOf","isSafariOrChrome","created","mounted","getElementById","scriptTag","createElement","src","getElementsByTagName","appendChild","title","__exports__","render","app","createApp","App","use","ElementPlus","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","loaded","__webpack_modules__","amdO","deferred","O","chunkIds","priority","notFulfilled","Infinity","j","every","splice","r","n","getter","d","definition","g","globalThis","Function","prop","Symbol","toStringTag","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}