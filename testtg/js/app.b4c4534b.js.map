{"version":3,"file":"js/app.b4c4534b.js","mappings":"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","sources":["webpack://okxconnectdemo/../packages/aptos-provider/src/AptosUtils.js","webpack://okxconnectdemo/../packages/aptos-provider/src/OKXAptosProvider.js","webpack://okxconnectdemo/../packages/aptos-provider/src/index.js","webpack://okxconnectdemo/../packages/core/src/connect/commands.js","webpack://okxconnectdemo/../packages/core/src/connect/connect.js","webpack://okxconnectdemo/../packages/core/src/connect/connectionManager.js","webpack://okxconnectdemo/../packages/core/src/connect/connectionSplitPackages.js","webpack://okxconnectdemo/../packages/core/src/connect/constants.js","webpack://okxconnectdemo/../packages/core/src/connect/engine.js","webpack://okxconnectdemo/../packages/core/src/connect/index.js","webpack://okxconnectdemo/../packages/core/src/connect/jwt.js","webpack://okxconnectdemo/../packages/core/src/connect/jwtconstants.js","webpack://okxconnectdemo/../packages/core/src/connect/sessionUtils.js","webpack://okxconnectdemo/../packages/core/src/connect/storage.js","webpack://okxconnectdemo/../packages/core/src/connect/storageconstants.js","webpack://okxconnectdemo/../packages/core/src/connect/walletConnectionConstants.js","webpack://okxconnectdemo/../packages/core/src/connect/walletConnectionManager.js","webpack://okxconnectdemo/../packages/core/src/connector/appwallet-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/iconnector.js","webpack://okxconnectdemo/../packages/core/src/connector/index.js","webpack://okxconnectdemo/../packages/core/src/connector/inject-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/okxwallet-inject-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/tgwallet-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/ws-connector.js","webpack://okxconnectdemo/../packages/core/src/crypto/crypto.js","webpack://okxconnectdemo/../packages/core/src/index.js","webpack://okxconnectdemo/../packages/core/src/inject/InjectUtils.js","webpack://okxconnectdemo/../packages/core/src/inject/index.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/AptosProvider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/SolProvider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/TONProvider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/eip155Provider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/index.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/sui-provider.js","webpack://okxconnectdemo/../packages/core/src/protocol/chains.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/engine.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/json-rpc.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/connect-event.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/connect-wallet.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/wallet-info.js","webpack://okxconnectdemo/../packages/core/src/protocol/constants.js","webpack://okxconnectdemo/../packages/core/src/protocol/error/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/error/okx-connect.error.js","webpack://okxconnectdemo/../packages/core/src/protocol/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/misc.js","webpack://okxconnectdemo/../packages/core/src/utils/call-for-success.js","webpack://okxconnectdemo/../packages/core/src/utils/index.js","webpack://okxconnectdemo/../packages/core/src/utils/log.js","webpack://okxconnectdemo/../packages/core/src/utils/media.js","webpack://okxconnectdemo/../packages/core/src/utils/report.js","webpack://okxconnectdemo/../packages/core/src/utils/reportconstants.js","webpack://okxconnectdemo/../packages/core/src/utils/request.js","webpack://okxconnectdemo/../packages/core/src/utils/safejson.js","webpack://okxconnectdemo/../packages/core/src/utils/stringUtils.js","webpack://okxconnectdemo/../packages/core/src/utils/tma-api.js","webpack://okxconnectdemo/../packages/core/src/utils/url.js","webpack://okxconnectdemo/../packages/core/src/utils/utils.js","webpack://okxconnectdemo/../packages/core/src/utils/web-api.js","webpack://okxconnectdemo/../packages/solana-provider/src/OKXSolanaProvider.js","webpack://okxconnectdemo/../packages/solana-provider/src/index.js","webpack://okxconnectdemo/../packages/sui-provider/src/OKXSuiProvider.js","webpack://okxconnectdemo/../packages/sui-provider/src/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXBtcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXCosmosProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXStarknetProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTonProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTronProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXUniversalProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/sign-client/client.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/ConnectMethodUtils.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/namespaces.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/events.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/values.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/aptos.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/btc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/cosmos.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/eip155.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcConnection.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/solana.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/starknet.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/sui.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/ton.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/tron.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/misc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/providers.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/globals.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/misc.js","webpack://okxconnectdemo/./src/App.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue?1b44","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue?e4fb","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue?aa83","webpack://okxconnectdemo/./src/components/StarknetTransactionPanel.vue","webpack://okxconnectdemo/./src/components/StarknetTransactionPanel.vue?1a06","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue?089a","webpack://okxconnectdemo/./src/App.vue?7ccd","webpack://okxconnectdemo/./src/main.js","webpack://okxconnectdemo/webpack/bootstrap","webpack://okxconnectdemo/webpack/runtime/amd options","webpack://okxconnectdemo/webpack/runtime/chunk loaded","webpack://okxconnectdemo/webpack/runtime/compat get default export","webpack://okxconnectdemo/webpack/runtime/create fake namespace object","webpack://okxconnectdemo/webpack/runtime/define property getters","webpack://okxconnectdemo/webpack/runtime/global","webpack://okxconnectdemo/webpack/runtime/hasOwnProperty shorthand","webpack://okxconnectdemo/webpack/runtime/make namespace object","webpack://okxconnectdemo/webpack/runtime/node module decorator","webpack://okxconnectdemo/webpack/runtime/jsonp chunk loading","webpack://okxconnectdemo/webpack/startup"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AptosUtils = void 0;\nclass AptosUtils {\n    static getTransaction(o) {\n        if (\"rawTransaction\" in o) {\n            let transaction = o;\n            if (\"entryFunction\" in transaction.rawTransaction.payload) {\n                let entryFunction = transaction.rawTransaction.payload.entryFunction;\n                let typeArgs = entryFunction.type_args;\n                let typeArguments = new Array();\n                typeArgs.forEach(typeTag => {\n                    typeArguments.push(typeTag.toString());\n                });\n                let realArguments = new Array();\n                this.getTypeArguments(entryFunction.args, realArguments);\n                let i = {\n                    arguments: realArguments,\n                    function: `${entryFunction.module_name.address.data ? entryFunction.module_name.address.toString() : entryFunction.module_name.address}::${entryFunction.module_name.name.identifier ? entryFunction.module_name.name.identifier : entryFunction.module_name.name}::${entryFunction.function_name.identifier ? entryFunction.function_name.identifier : entryFunction.function_name}`,\n                    type: \"entry_function_payload\",\n                    type_arguments: typeArguments\n                };\n                return this.getArguments(i);\n            }\n        }\n        return o;\n    }\n    static getTypeArguments(args, array) {\n        for (let j = 0; j < args.length; j++) {\n            let y = args[j];\n            if (\"values\" in y && y.values != null && y.values instanceof Array) {\n                let subArray = new Array();\n                array.push(subArray);\n                this.getTypeArguments(y.values, subArray);\n            }\n            else {\n                this.dealArrayElements(y, array);\n            }\n        }\n    }\n    static dealArrayElements(e, array) {\n        if (\"value\" in e && e.value != null) {\n            array.push(e.value.toString());\n        }\n        else if (\"data\" in e && e.data != null && e.data instanceof Uint8Array) {\n            return array.push(e.toString());\n        }\n        else {\n            return array.push(e.toString());\n        }\n    }\n    static getArguments(e) {\n        if (\"arguments\" in e) {\n            let t = e.arguments;\n            if (Array.isArray(t)) {\n                let r = new Array();\n                t.forEach(n => {\n                    if (n instanceof Uint8Array) {\n                        let o = new Array();\n                        n.forEach(i => {\n                            o.push(i);\n                        });\n                        r.push(o);\n                    }\n                    else\n                        r.push(n);\n                });\n                e = Object.assign(Object.assign({}, e), { arguments: r });\n            }\n        }\n        return e;\n    }\n}\nexports.AptosUtils = AptosUtils;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXAptosProvider = void 0;\nconst buffer_1 = require(\"buffer\");\nconst AptosUtils_1 = require(\"./AptosUtils\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXAptosProvider {\n    constructor(provider) {\n        this.chainsSet = new Set();\n        this.provider = provider;\n        this.getConnectedNamespace();\n    }\n    get defaultNetwork() {\n        let network = this.provider.requestDefaultChainWithNamespace(core_1.NameSpaceKeyAptos);\n        return network;\n    }\n    get currentChainId() {\n        return `aptos:${this.defaultNetwork}`;\n    }\n    getRealChainId(chainId) {\n        // if (chainId == \"aptos:mainnet\") {\n        //     return \"aptos:637\"\n        // } else if (chainId == \"movement:testnet\") {\n        //     return \"aptos:70000060\"\n        // }\n        if (chainId == null) {\n            if (this.chainsSet.size == 1) {\n                return this.currentChainId;\n            }\n            else {\n                throw new Error(\"connected to multiple aptos chains,chainId can not be null\");\n            }\n        }\n        else {\n            return chainId;\n        }\n    }\n    getConnectedNamespace() {\n        var _a, _b, _c;\n        (_c = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces) === null || _b === void 0 ? void 0 : _b['aptos']) === null || _c === void 0 ? void 0 : _c.chains.forEach(chain => {\n            this.chainsSet.add(chain);\n        });\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n        chainId = this.getRealChainId(chainId);\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['aptos']) === null || _b === void 0 ? void 0 : _b.accounts[0];\n        if (chainId != null) {\n            account = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces['aptos']) === null || _d === void 0 ? void 0 : _d.accounts.filter(function (account) {\n                return account.startsWith(chainId);\n            })[0];\n        }\n        (0, core_1.logDebug)(\"getAccount\", account);\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        console.log(\"aptos_publicKey\", (_f = (_e = this.provider.session) === null || _e === void 0 ? void 0 : _e.namespaces['aptos']) === null || _f === void 0 ? void 0 : _f.extra);\n        let extra = (_j = (_h = (_g = this.provider.session) === null || _g === void 0 ? void 0 : _g.namespaces['aptos']) === null || _h === void 0 ? void 0 : _h.extra) === null || _j === void 0 ? void 0 : _j[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n            if (publicKey != undefined && publicKey.startsWith(\"0x\")) {\n                publicKey = publicKey.substring(2);\n            }\n            console.log(\"aptos_publicKey\", publicKey);\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address,\n            publicKey: publicKey\n        };\n    }\n    signMessage(payload, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            let realChain = this.getRealChainId(chainId);\n            try {\n                let prefix = \"APTOS\";\n                let address = (_a = this.getAccount(realChain)) === null || _a === void 0 ? void 0 : _a.address;\n                let message = \"\", nonce = \"\";\n                var fullMessage = prefix;\n                let application = window.location.protocol + \"//\" + window.location.hostname;\n                if (\"address\" in payload && payload.address) {\n                    fullMessage += \"\\naddress: \" + address;\n                }\n                if (\"application\" in payload && payload.application) {\n                    fullMessage += \"\\napplication: \" + application;\n                }\n                if (\"chainId\" in payload && payload.chainId) {\n                    let chainId = 1;\n                    if (realChain == \"aptos:mainnet\") {\n                        chainId = 1;\n                    }\n                    else if (realChain == \"movement:testnet\") {\n                        chainId = 2;\n                    }\n                    fullMessage += \"\\nchainId: \" + chainId;\n                }\n                if (\"message\" in payload) {\n                    fullMessage += \"\\nmessage: \" + payload.message;\n                    message = payload.message;\n                }\n                if (\"nonce\" in payload) {\n                    fullMessage += \"\\nnonce: \" + payload.nonce;\n                    nonce = payload.nonce;\n                }\n                console.log(\"signMessage\", fullMessage);\n                const buffer = buffer_1.Buffer.from(fullMessage);\n                const hex = this.bufferToHex(buffer);\n                let data = {\n                    \"chainId\": realChain,\n                    \"method\": \"aptos_signMessage\",\n                    \"params\": {\n                        \"message\": hex,\n                    },\n                    injectParams: payload,\n                };\n                let signedMessage = yield this.provider.request(data, realChain);\n                if ('result' in signedMessage) {\n                    let successData = signedMessage.result;\n                    let signStr = successData;\n                    if (successData.startsWith(\"0x\")) {\n                        signStr = successData.slice(2, successData.length);\n                    }\n                    // try {\n                    //     let publicKey = this.getAccount(realChain)?.publicKey\n                    //     if (publicKey != undefined) {\n                    //         console.log(\"apt_signMessage\", Buffer.from(successData, 'hex'))\n                    //         console.log(\"apt_signMessage\", successData)\n                    //\n                    //         const verified = nacl.sign.detached.verify(\n                    //             Buffer.from(fullMessage),\n                    //             Buffer.from(signStr, 'hex'),\n                    //             Buffer.from(publicKey, 'hex'),\n                    //         );\n                    //         console.log(\"signMessage\", verified);\n                    //     }\n                    // } catch (_) {\n                    // }\n                    return new Promise((resolve, reject) => {\n                        resolve({\n                            address: address,\n                            application: application,\n                            chainId: realChain,\n                            fullMessage: fullMessage,\n                            message: message,\n                            nonce: nonce,\n                            prefix: prefix,\n                            signature: signStr,\n                            // verified:verified\n                        });\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        if (\"error\" in signedMessage) {\n                            resolve(signedMessage.error);\n                        }\n                    });\n                }\n            }\n            catch (error) {\n                console.error('方法数据回调失败 --Error--', error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    signTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let tx = AptosUtils_1.AptosUtils.getTransaction(transaction);\n            console.log(\"signTransaction\", tx);\n            let realChain = this.getRealChainId(chainId);\n            try {\n                let signature = yield this.provider.request({\n                    \"method\": \"aptos_signTransaction\",\n                    \"params\": tx\n                }, realChain);\n                if ('result' in signature) {\n                    let successData = signature.result;\n                    return new Promise((resolve, reject) => {\n                        resolve(buffer_1.Buffer.from(successData));\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        reject(signature);\n                    });\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"getSignedTransaction\", error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    signAndSubmitTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let tx = AptosUtils_1.AptosUtils.getTransaction(transaction);\n            console.log(\"signAndSubmitTransaction\", tx);\n            let realChain = this.getRealChainId(chainId);\n            try {\n                let signature = yield this.provider.request({\n                    \"method\": \"aptos_signAndSubmitTransaction\",\n                    \"params\": tx\n                }, realChain);\n                if ('result' in signature) {\n                    let successData = signature.result;\n                    return new Promise((resolve, reject) => {\n                        resolve(successData);\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        reject(signature);\n                    });\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"getSignedTransaction\", error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    bufferToHex(buf) {\n        return \"0x\" + buffer_1.Buffer.from(buf).toString(\"hex\");\n    }\n}\nexports.OKXAptosProvider = OKXAptosProvider;\nexports.default = OKXAptosProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXAptosProvider = void 0;\nvar OKXAptosProvider_1 = require(\"./OKXAptosProvider\");\nObject.defineProperty(exports, \"OKXAptosProvider\", { enumerable: true, get: function () { return OKXAptosProvider_1.OKXAptosProvider; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_METHOD_BATCH_FETCHMSG = exports.CONNECT_METHOD_FETCHMSG = exports.CONNECT_METHOD_RECEIVE = exports.CONNECT_METHOD_UNSUB = exports.CONNECT_METHOD_SUB = exports.CONNECT_METHOD_PUBLISH = exports.CONNECT_METHOD_LOGIN = exports.CONNECT_METHOD_PUSH = void 0;\n// --------------- ws methods -------------\nexports.CONNECT_METHOD_PUSH = \"push\";\nexports.CONNECT_METHOD_LOGIN = \"login\";\nexports.CONNECT_METHOD_PUBLISH = \"publish\";\nexports.CONNECT_METHOD_SUB = \"subscribe\";\nexports.CONNECT_METHOD_UNSUB = \"unsubscribe\";\nexports.CONNECT_METHOD_RECEIVE = \"receive\";\nexports.CONNECT_METHOD_FETCHMSG = \"fetchMessages\";\nexports.CONNECT_METHOD_BATCH_FETCHMSG = \"batchFetchMessages\";\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXWalletConnector = void 0;\nconst constants_1 = require(\"./constants\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils\");\nconst utils_2 = require(\"../utils/utils\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst log = __importStar(require(\"../utils/log\"));\nconst protocol_1 = require(\"../protocol\");\nconst report_1 = require(\"../utils/report\");\nconst WS = (0, utils_2.resolveWebSocketImplementation)();\nclass OKXWalletConnector {\n    constructor(url) {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.state = constants_1.ConnectorState.InitState;\n        this.selectedUrlIndex = 0;\n        // reconnect\n        this.retryCount = 0;\n        // default timeout limit: 8 sec\n        this.timeOutLimit = 8000;\n        if (!(0, utils_2.checkWSUrl)(url)) {\n            throw new Error(`CONNECTOR: invalid url ${url}`);\n        }\n        this.url = url;\n        this.heartbeatTimer = null;\n        this.connectionTimeoutTimer = null;\n        this.connectURLStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY + storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n    }\n    get connecting() {\n        return this.state == constants_1.ConnectorState.Connecting;\n    }\n    // ------------------------------------------------------\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        log.logDebug('get received data');\n        log.logDebug(e);\n        if (typeof e.data === \"string\") {\n            let rsp = e.data;\n            if (rsp === \"pong\") {\n                log.logDebug(`CONNECT: receive pong ${Date.now().toString()}`);\n                return;\n            }\n        }\n        this.events.emit(\"payload\", e.data);\n    }\n    onClose(event) {\n        var _a;\n        log.logDebug('socket get closed: ', (_a = this.socket) === null || _a === void 0 ? void 0 : _a.url, event.code);\n        this.socket = undefined;\n        this.events.emit(\"close\", event);\n    }\n    onError(id, e) {\n        const payload = { id: id, msg: e.toString() };\n        this.events.emit(\"payload\", payload);\n    }\n    onopen(socket) {\n        socket.onmessage = (event) => this.onPayload(event);\n        socket.onclose = (event) => this.onClose(event);\n        this.socket = socket;\n        this.state = constants_1.ConnectorState.Connected;\n        this.events.emit(\"open\");\n    }\n    // ------------------------------------------------------\n    emitError(errorEvent) {\n        this.events.emit(\"fail\", errorEvent);\n    }\n    // ------------------------------------------------------\n    heartbeat() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.heartbeatTimer) {\n                clearTimeout(this.heartbeatTimer);\n            }\n            if (this.state != constants_1.ConnectorState.Connected && this.state != constants_1.ConnectorState.OnError) {\n                log.logDebug('heart beat close');\n                return;\n            }\n            if (!this.socket) {\n                log.logDebug('socket not exist');\n                if (this.state == constants_1.ConnectorState.Connected || this.state == constants_1.ConnectorState.OnError) {\n                    log.logDebug('socket reconnect by heartbeat');\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                        this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n                    }\n                }\n                return;\n            }\n            if (this.socket.readyState !== WebSocket.OPEN) {\n                log.logDebug('socket not ready');\n                if (this.state == constants_1.ConnectorState.Connected || this.state == constants_1.ConnectorState.OnError) {\n                    log.logDebug('socket reconnect by heartbeat with state', this.state, this.socket.readyState);\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                        this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n                    }\n                }\n                return;\n            }\n            log.logDebug(`send ping heart beat: ${Date.now().toString()}, ${this.socket}`);\n            this.socket.send(\"ping\");\n            this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n        });\n    }\n    registOpen(url = this.url, inRetry = false) {\n        if (!(0, utils_2.checkWSUrl)(url)) {\n            throw new Error(`CONNECTOR: invalid url ${url}`);\n        }\n        this.url = url;\n        if (!inRetry) {\n            log.logDebug('Connection connect:', this.url, new Date().toUTCString());\n        }\n        this.state = constants_1.ConnectorState.Connecting;\n        const origin = new URLSearchParams(url).get(\"origin\");\n        return new Promise((resolve, reject) => {\n            const socket = new WS(url, []);\n            log.logDebug('Connection connect Begin:', this.url, new Date().toUTCString());\n            this.startTimeOutTimer(socket);\n            if ((0, utils_2.hasBuiltInWebSocket)()) {\n                log.logDebug('Add socket error handler');\n                socket.onerror = () => {\n                    reject(new Error('socket error'));\n                    socket.close();\n                };\n            }\n            else {\n                log.logDebug('Add socket error handler');\n                socket.on(\"error\", () => {\n                    reject(new Error('socket error'));\n                    socket.close();\n                });\n            }\n            socket.onopen = () => {\n                log.logDebug('socket opened');\n                this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.FINISHED);\n                this.onopen(socket);\n                this.heartbeat();\n                resolve(socket);\n            };\n        });\n    }\n    checkMaxRetry() {\n        log.logDebug('current retry count:', this.retryCount, 'of', constants_1.OKXCONNECTOR_WS_URL_LIST.length);\n        return this.retryCount > (constants_1.OKXCONNECTOR_WS_URL_LIST.length * 3);\n    }\n    connectionTryNext() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.checkMaxRetry()) {\n                //TODO: mark descent\n                this.retryCount += 1;\n                let nextUrl = this.getNextSelectUrl();\n                log.logDebug('Connection retry:', nextUrl, new Date().toUTCString());\n                return this.registOpen(nextUrl, true);\n            }\n            else {\n                log.logDebug('Max Connection retry ', this.retryCount, new Date().toUTCString());\n            }\n        });\n    }\n    startTimeOutTimer(socket) {\n        if (this.connectionTimeoutTimer) {\n            this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.CANCELED);\n        }\n        this.pendingSocket = socket;\n        this.connectionTimeoutTimer = setTimeout(() => {\n            if (this.pendingSocket) {\n                this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.TIME_OUT);\n            }\n        }, this.timeOutLimit);\n    }\n    resetTimeOutTimer(code) {\n        var _a;\n        // 1. cancel connecting pending sockets\n        if (code == constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.TIME_OUT) {\n            // 2. remove timer\n            clearTimeout(this.connectionTimeoutTimer);\n            (_a = this.pendingSocket) === null || _a === void 0 ? void 0 : _a.close();\n            this.pendingSocket = undefined;\n            log.reportEvent(report_1.OKXReportType.LOG, 'timeout', this.retryCount.toString());\n            throw new Error('socket timeout');\n        }\n        else {\n            this.pendingSocket = undefined;\n            // 2. remove timer\n            clearTimeout(this.connectionTimeoutTimer);\n        }\n    }\n    cacheSuccessUrlSelect() {\n        this.connectURLStorage.saveContent(this.selectedUrlIndex.toString(), storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n    }\n    // private getSuccessUrlSelect(): string {\n    //     let selectIndex = this.connectURLStorage.getItem(OKXCONNECTOR_CACHE_KEY)?.content\n    //     let index = 0\n    //     if (selectIndex) {\n    //         index = Number(selectIndex)\n    //     }\n    //     this.selectedUrlIndex = index\n    //     return OKXCONNECTOR_WS_URL_LIST[index]\n    // }\n    getNextSelectUrl() {\n        this.selectedUrlIndex += 1;\n        this.selectedUrlIndex = this.selectedUrlIndex % constants_1.OKXCONNECTOR_WS_URL_LIST.length;\n        return constants_1.OKXCONNECTOR_WS_URL_LIST[this.selectedUrlIndex];\n    }\n    // ------------------------------------------------------\n    onVisibleChanged() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (document.visibilityState === 'visible') {\n                // check and restore\n                log.logDebug(`get changed ${this.state}, ${this.socket}`);\n                if (this.state == constants_1.ConnectorState.Connected && typeof this.socket === \"undefined\") {\n                    log.logDebug('CONNECTION need reopen');\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                    }\n                    return;\n                }\n            }\n        });\n    }\n    tryRegistOpen() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (this.connecting) {\n                log.logDebug('tryRegistOpen => connecting state');\n                return new Promise((resolve, reject) => {\n                    this.events.once('fail', (e) => {\n                        log.logDebug('tryRegistOpen => connecting fail listener', e);\n                        return reject(e);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.socket == \"undefined\") {\n                            return reject(new Error(\"Connect lost\"));\n                        }\n                        return resolve(this.socket);\n                    });\n                });\n            }\n            log.logDebug('tryRegistOpen => try registOpen until retry limit is hit');\n            let inRetry = false;\n            while (!this.checkMaxRetry() && !this.socket) {\n                try {\n                    log.logDebug('tryRegistOpen => call registOpen, try count:', this.retryCount, inRetry);\n                    yield this.registOpen(url, inRetry);\n                }\n                catch (err) {\n                    log.logDebug('tryRegistOpen => registOpen failed', err);\n                    this.retryCount += 1;\n                    url = this.getNextSelectUrl();\n                    inRetry = true;\n                }\n            }\n            log.logDebug('tryRegistOpen => exit while loop', this.retryCount, this.socket);\n            if (!this.socket && this.checkMaxRetry()) {\n                log.logDebug('tryRegistOpen => failed to open a socket', this.retryCount, this.socket);\n                this.retryCount = 0;\n                this.state = constants_1.ConnectorState.OnError;\n                this.emitError(new Error('tryRegistOpen failed'));\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CONNECTION_ERROR, \"Failed to connect\");\n            }\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.tryRegistOpen();\n                // listener for reconnect\n                document.removeEventListener('visibilitychange', this.onVisibleChanged.bind(this));\n                document.addEventListener('visibilitychange', this.onVisibleChanged.bind(this));\n            }\n            catch (e) {\n                log.logDebug('connect => failed to connect', e);\n                throw e;\n            }\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.state = constants_1.ConnectorState.Disconnected;\n            return new Promise((resolve, reject) => {\n                if (typeof this.socket === \"undefined\") {\n                    // reject(new Error(\"CONNECTION closed\"))\n                    resolve();\n                    return;\n                }\n                this.socket.onclose = (event) => {\n                    this.onClose(event);\n                    resolve();\n                };\n                this.socket.close();\n                if (this.heartbeatTimer) {\n                    clearTimeout(this.heartbeatTimer);\n                }\n            });\n        });\n    }\n    currentStatus() {\n        return {\n            state: this.state,\n            url: this.url\n        };\n    }\n    // event will be jsonstr\n    /// @params Promise\n    /// @params success/failed callback\n    addListener(event, decrypt, success, failed, splitCheckComplete) {\n        if (this.listenPayloadHandler) {\n            this.events.removeListener(\"payload\", this.listenPayloadHandler);\n        }\n        this.listenPayloadHandler = (e) => __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            log.logDebug(`<<< get payload ${e}`);\n            let parsedEvent = (0, utils_1.safeJsonParse)(e);\n            // parse the data to chose success or failed\n            if (parsedEvent.params && parsedEvent.params.data) {\n                let rawMsg = (_a = parsedEvent.params.data) === null || _a === void 0 ? void 0 : _a.message;\n                let skipMsg = false;\n                if (rawMsg) {\n                    // 在这里增加检测流程，如果当前包是“分包”，而且没有finalMessage则不继续触发failed/success结果\n                    if (splitCheckComplete) {\n                        let checkResult = yield splitCheckComplete(parsedEvent.params.data);\n                        skipMsg = checkResult.isSplitPackage && (!checkResult.finalMessage);\n                        if (checkResult.isSplitPackage) {\n                            if (checkResult.finalMessage && checkResult.finalMessage.length > 0) {\n                                log.logDebug('CONNECT: update raw msg content');\n                                rawMsg = checkResult.finalMessage;\n                            }\n                            else {\n                                log.logDebug('CONNECT: skip raw msg content');\n                                skipMsg = true;\n                            }\n                        }\n                    }\n                }\n                if (!skipMsg) {\n                    try {\n                        let msg = decrypt(rawMsg);\n                        if (msg === undefined) {\n                            log.logDebug(`CONNECT: decrypt undefined`);\n                            failed(event, 'Decrypt undefined');\n                        }\n                        else {\n                            success(event, msg);\n                        }\n                    }\n                    catch (e) {\n                        log.logDebug(`CONNECT: decrypt failed: ${e}`);\n                        failed(event, e.message);\n                    }\n                }\n            }\n        });\n        this.events.on(\"payload\", this.listenPayloadHandler);\n        if (this.failHandler) {\n            this.events.removeListener(\"fail\", this.failHandler);\n        }\n        this.failHandler = (e) => {\n            if (e) {\n                log.logDebug(`CONNECT failed: ${e}`);\n                failed(event, e.message);\n            }\n            else {\n                failed(event, \"Unkonow error\");\n            }\n        };\n        this.events.on(\"fail\", this.failHandler);\n    }\n    addPackageParse(callback) {\n        if (this.payloadHandler) {\n            this.events.removeListener(\"payload\", this.payloadHandler);\n        }\n        this.payloadHandler = (e) => __awaiter(this, void 0, void 0, function* () {\n            // parse the data to chose success or failed\n            log.logDebug(`CONNECTION @[${new Date().toUTCString()}] <<<< received e:${e}`);\n            let param = (0, utils_1.safeJsonParse)(e);\n            yield callback(param);\n        });\n        this.events.on(\"payload\", this.payloadHandler);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    send(doLogin, payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (typeof this.socket === \"undefined\") {\n                    log.logDebug(`>>> send payload undefined ${payload}`);\n                    // this.socket = await this.registOpen();\n                    yield doLogin();\n                }\n                log.logDebug(`CONNECTION @[${new Date().toUTCString()}]>>> send payload ${(0, utils_1.safeJsonStringify)(payload)}`);\n                if (this.socket) {\n                    this.socket.send((0, utils_1.safeJsonStringify)(payload));\n                }\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    getMsgPayloadFromHistory(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof msg === \"undefined\")\n                return;\n            let tmpMsg = {\n                params: {\n                    data: msg\n                }\n            };\n            let jsonstr = (0, utils_1.safeJsonStringify)(msg);\n            log.logDebug('get received data from history');\n            log.logDebug(jsonstr);\n            jsonstr = (0, utils_1.safeJsonStringify)(tmpMsg);\n            this.events.emit(\"payload\", jsonstr);\n        });\n    }\n    onOpen(callback) {\n        if (this.openHandler) {\n            this.events.removeListener(\"open\", this.openHandler);\n        }\n        this.openHandler = () => __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> ws opened: `);\n            yield callback();\n        });\n        this.events.on(\"open\", this.openHandler);\n        this.cacheSuccessUrlSelect();\n    }\n}\nexports.OKXWalletConnector = OKXWalletConnector;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionManager = void 0;\nconst connect_1 = require(\"./connect\");\nconst commands_1 = require(\"./commands\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst jwtconstants_1 = require(\"./jwtconstants\");\nconst constants_1 = require(\"./constants\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils/utils\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst jwt_1 = require(\"./jwt\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst report_1 = require(\"../utils/report\");\nconst url_1 = require(\"../utils/url\");\nconst connectionSplitPackages_1 = require(\"./connectionSplitPackages\");\nclass ConnectionManager {\n    constructor(appname = undefined) {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.splitManager = new connectionSplitPackages_1.ConnectionSplitPackages('dapp');\n        // local storage\n        this.connectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY_DAPP + appname, storageconstants_1.OKXCONNECTOR_CACHE_KEY_DAPP);\n        this.crypto = new crypto_1.SessionCrypto();\n        let inTMA = (0, url_1.isInTMA)();\n        (0, log_1.logDebug)('do init:', inTMA);\n        log.reportLog('connection manager do init');\n        if (inTMA) {\n            // recovery from cache\n            const keyPairInfo = this.getCachedCryptoKeyPair();\n            (0, log_1.logDebug)('use same pk:', keyPairInfo);\n            this.crypto = new crypto_1.SessionCrypto(keyPairInfo);\n        }\n        this.jwtKeyPair = this.getCachedJWTKeyPair();\n        this.saveJWTKeyPair(this.jwtKeyPair);\n        // wss connection\n        this.connector = new connect_1.OKXWalletConnector(constants_1.OKXCONNECTOR_WS_URL_1);\n        this.packageId = Date.now();\n        // connection state\n        this.connectedWalletPK = '';\n        this.currentTopic = '';\n        log.logDebug(`this.connectedWalletPK  constructor   ${this.connectedWalletPK}`);\n    }\n    refreshPackageId() {\n        let nowDate = Date.now();\n        if (nowDate == this.packageId) {\n            this.packageId = nowDate + 1;\n        }\n        this.packageId = nowDate;\n    }\n    saveCryptoKeyPair(keyPair) {\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(keyPair);\n        // encrypt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_CRYPTO_KEY);\n    }\n    getCachedCryptoKeyPair() {\n        // decrypt kp\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_CRYPTO_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            log.logDebug('get cached crypto key:');\n            log.logDebug(content);\n            let keyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            return keyPairInfo;\n        }\n        else {\n            this.connectStorage.clearCache();\n        }\n        return null;\n    }\n    saveJWTKeyPair(keyPair) {\n        var strkeyPair = {\n            publicKey: (0, utils_1.toHexString)(keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(keyPair.secretKey)\n        };\n        log.logDebug('save jwt kp');\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(strkeyPair);\n        log.logDebug(cacheInfo);\n        // encrypt jwt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_JWT_KEY);\n    }\n    getCachedJWTKeyPair() {\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            // TODO: decrypt jwt kp\n            log.logDebug('get cached jwt kp:');\n            log.logDebug(content);\n            let strKeyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            log.logDebug('save jwt kp');\n            log.logDebug(strKeyPairInfo);\n            var keyPair = {\n                publicKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.publicKey),\n                secretKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.secretKey)\n            };\n            return keyPair;\n        }\n        else {\n            return (0, jwt_1.generateKeyPair)();\n        }\n    }\n    isWalletPKReady() {\n        log.logDebug(`isWalletPKReady  ===> ${this.connectedWalletPK}`);\n        return this.connectedWalletPK.length > 0;\n    }\n    makeJWT(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, jwt_1.signJWT)(topic, jwtconstants_1.OKXCONNECTOR_JWT_SIDE, jwtconstants_1.OKXCONNECTOR_JWT_TTL, // 24h\n            this.jwtKeyPair);\n        });\n    }\n    parsePackage(input_1) {\n        return __awaiter(this, arguments, void 0, function* (input, ignoreACK = false) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o;\n            this.events.emit(input.id, input);\n            // send back ACK\n            if (!ignoreACK) {\n                yield this.sendACK(input.id, true);\n                let topic = (_a = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE)) === null || _a === void 0 ? void 0 : _a.content;\n                if (topic) {\n                    let inputObj = input;\n                    if ((_c = (_b = inputObj.params) === null || _b === void 0 ? void 0 : _b.data) === null || _c === void 0 ? void 0 : _c.messageId) {\n                        // change into split check receive\n                        let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload((_e = (_d = inputObj.params) === null || _d === void 0 ? void 0 : _d.data) === null || _e === void 0 ? void 0 : _e.message);\n                        if (msgPlayloadObject) {\n                            let msgObject = {\n                                topicId: (_g = (_f = inputObj.params) === null || _f === void 0 ? void 0 : _f.data) === null || _g === void 0 ? void 0 : _g.topic,\n                                messageId: (_j = (_h = inputObj.params) === null || _h === void 0 ? void 0 : _h.data) === null || _j === void 0 ? void 0 : _j.messageId,\n                                messageObject: msgPlayloadObject,\n                                publishedAt: (_l = (_k = inputObj.params) === null || _k === void 0 ? void 0 : _k.data) === null || _l === void 0 ? void 0 : _l.publishedAt,\n                            };\n                            let checkResult = yield this.splitManager.onReceivedPackageCheck(msgObject);\n                            if (checkResult.completeMessageIdList) {\n                                checkResult.completeMessageIdList.forEach((msgId) => __awaiter(this, void 0, void 0, function* () {\n                                    // 发送receive\n                                    this.refreshPackageId();\n                                    yield this.sendReceive(this.packageId.toString(), msgId, topic);\n                                }));\n                            }\n                        }\n                        else {\n                            this.refreshPackageId();\n                            yield this.sendReceive(this.packageId.toString(), (_o = (_m = inputObj.params) === null || _m === void 0 ? void 0 : _m.data) === null || _o === void 0 ? void 0 : _o.messageId, topic);\n                        }\n                    }\n                }\n            }\n        });\n    }\n    restoreConnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.reportLog('connection manager restore connection');\n            log.logDebug(`connectionManager  restoreConenct   ${topic}`);\n            if ((typeof topic !== 'string') || topic.length === 0) {\n                throw new Error('CONNECTION: invalid topic');\n            }\n            log.logDebug(`connectionManager  restoreConenct   disconnect`);\n            yield this.disconnect(true);\n            this.connectStorage.saveContent(topic, storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`connectionManager  restoreConenct   conect`);\n            yield this.connect(true);\n        });\n    }\n    getConnectInfo() {\n        var topic = (0, utils_1.generateTopic)();\n        log.logDebug(`generate topic token: ${topic}`);\n        log.reportLog('connection manager generate connection info');\n        this.currentTopic = topic;\n        const info = {\n            channelId: topic,\n            clientId: this.crypto.stringifyKeypair().publicKey,\n        };\n        return info;\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            this.timeLog = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---enter->\", this.timeLog);\n            log.reportLog('connection manager begin connect');\n            let lastConnectId = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            //1. generate topic & jwt\n            var topic = this.currentTopic;\n            log.logDebug(`generate topic token: ${topic}`);\n            // crypto keypair\n            if (fromRestore) {\n                if (typeof lastConnectId !== 'undefined' && lastConnectId !== null) {\n                    log.logDebug(`read last connect id: ${lastConnectId}`);\n                    topic = lastConnectId.content;\n                }\n                var cachedSenderPublicKey = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                if (cachedSenderPublicKey) {\n                    this.connectedWalletPK = cachedSenderPublicKey.content;\n                    (0, log_1.logDebug)(`connectionManager connect() this.connectedWalletPK : ${this.connectedWalletPK}`);\n                }\n                log.reportLog('connection manager do restore connection');\n            }\n            if (fromRestore) {\n                // recovery from cache\n                const keyPairInfo = this.getCachedCryptoKeyPair();\n                if (keyPairInfo) {\n                    this.crypto = new crypto_1.SessionCrypto(keyPairInfo);\n                }\n            }\n            log.logDebug(`use crypto client id: ${this.crypto.stringifyKeypair().publicKey}`);\n            // cache topic\n            this.connectStorage.saveContent(topic, storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            var jwtToken = yield this.makeJWT(topic);\n            log.logDebug(`generate jwt token: ${jwtToken}`);\n            this.connectStorage.saveContent(jwtToken, 'jwt');\n            return new Promise((resolve, reject) => {\n                // 1. when websocket opened\n                this.connector.onOpen(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug(`1. connector on open`);\n                    log.reportLog('1. connect ws open');\n                    const timeOne = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---open->\", timeOne - this.timeLog);\n                    //2. send jwt to login\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when login');\n                            log.reportLog('2. connect login failed');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // throw error\n                            reject(error);\n                        }\n                        //3. send subscribe\n                        this.refreshPackageId();\n                        this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                            // ack\n                            if (rsp && rsp.error) {\n                                log.logError('failed when subscribe');\n                                log.reportLog('3. connect subscribe failed');\n                                yield this.connector.disconnect();\n                                var error = new Error();\n                                error.message = rsp.error.message;\n                                error.name = rsp.error.code.toString();\n                                // throw error\n                                reject(error);\n                            }\n                            this.refreshPackageId();\n                            log.logDebug(`4. subscribe callback then send fetch: ${this.packageId}`);\n                            log.reportLog('4. subscribe callback then send fetch');\n                            const timeF = new Date().getTime();\n                            (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n                            // 4. fetch messages\n                            yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                            // 5. split init\n                            log.logDebug(`5. splitmanager init: ${this.packageId}`);\n                            log.reportLog('5. splitmanager init');\n                            yield this.splitManager.init(this.sendRaw.bind(this));\n                            resolve();\n                        }));\n                        log.logDebug(`3. login callback then send subscribe: ${this.packageId}`);\n                        log.reportLog('3. connect subscribe failed');\n                        const timeTh = new Date().getTime();\n                        (0, log_1.logDebug)(\"ConnectTime---login callback->\", timeTh - this.timeLog);\n                        yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                            log.logDebug('CONNECT: reconnect before send');\n                            yield this.connector.connect()\n                                .catch((err) => {\n                                (0, log_1.logDebug)('ConnectionManager connect error', err);\n                                reject(err);\n                            });\n                        }), {\n                            id: this.packageId.toString(),\n                            jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                            method: commands_1.CONNECT_METHOD_SUB,\n                            params: {\n                                topic: topic\n                            }\n                        });\n                    }));\n                    log.logDebug(`2. login called`);\n                    log.reportLog('2. connection manager connect call login');\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        yield this.connector.connect()\n                            .catch((err) => {\n                            (0, log_1.logDebug)('ConnectionManager connect error', err);\n                            reject(err);\n                        });\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_LOGIN,\n                        params: {\n                            token: jwtToken\n                        }\n                    });\n                    // 4. listen when dapp back to front, receive wallet public key\n                    this.connector.addPackageParse((event) => {\n                        var _a;\n                        log.logDebug(`connect: parse package`);\n                        log.logDebug(event);\n                        if (!(\"params\" in event) || !(\"data\" in event[\"params\"])) {\n                            this.parsePackage(event, true);\n                            return;\n                        }\n                        let rawMsg = (_a = event.params.data) === null || _a === void 0 ? void 0 : _a.message;\n                        if (typeof rawMsg !== 'undefined') {\n                            rawMsg = rawMsg.replace(/'/g, '\"');\n                            let parsedMessage = (0, safejson_1.safeJsonParse)(rawMsg);\n                            if (typeof parsedMessage !== 'string' && \"clientId\" in parsedMessage && parsedMessage.clientId && parsedMessage.clientId.length > 0) {\n                                this.connectedWalletPK = parsedMessage.clientId;\n                                log.logDebug(`this.connectedWalletPK  addPackageParse   ${this.connectedWalletPK}`);\n                                // exchange sender public key\n                                // cache wallet public key\n                                this.connectStorage.saveContent(this.connectedWalletPK, storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                                // cache crypto keypair\n                                this.saveCryptoKeyPair(this.crypto.stringifyKeypair());\n                            }\n                        }\n                        // ignore receive echo\n                        this.parsePackage(event, event.method === commands_1.CONNECT_METHOD_RECEIVE);\n                    });\n                }));\n                this.connector.connect().catch((err) => {\n                    (0, log_1.logDebug)('ConnectionManager connect error', err);\n                    reject(err);\n                });\n            });\n        });\n    }\n    disconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            yield this.connector.disconnect();\n            log.reportLog('connect disconnect');\n            //clean cached topic\n            //如果是恢复连接，就不清理解密public key\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            if (!fromRestore) {\n                this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                this.connectedWalletPK = '';\n                (0, log_1.logDebug)(`connectionManager disconnect() this.connectedWalletPK : ${this.connectedWalletPK}`);\n            }\n        });\n    }\n    updateProtocolVersion(topic, protocolVersion) {\n        this.splitManager.updateTopicSenderVersion(topic, protocolVersion);\n    }\n    addListener(event, success, fail) {\n        this.connector.addListener((0, safejson_1.safeJsonStringify)(event), (rawMsg) => {\n            rawMsg = rawMsg.replace(/'/g, '\"');\n            log.logDebug(`addListener ===> ${rawMsg}`);\n            if (typeof rawMsg !== 'undefined') {\n                var msgObj = (0, safejson_1.safeJsonParse)(rawMsg);\n                var msg = msgObj.message;\n                let result;\n                if (msg.trimStart().startsWith('{')) {\n                    result = msg;\n                }\n                else {\n                    if (msgObj.clientId && msgObj.clientId.length > 0) {\n                        this.connectedWalletPK = msgObj.clientId;\n                        this.connectStorage.saveContent(this.connectedWalletPK, storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                        log.logDebug(`this.connectedWalletPK  addListener   ${this.connectedWalletPK}`);\n                        log.logDebug(`this.cryptoKey  addListener   ${(0, utils_1.toHexString)(this.crypto.keyPair.publicKey)}`);\n                        // cache crypto keypair\n                        this.saveCryptoKeyPair(this.crypto.stringifyKeypair());\n                    }\n                    result = this.crypto.decrypt(msg, this.connectedWalletPK);\n                }\n                log.logDebug(`addListener ===> ${result}`);\n                return result;\n            }\n            return undefined;\n        }, success, fail, (inputDataObj) => {\n            // 判断获取是否是分包，如果是则返回合包结果，如果不是则继续\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(inputDataObj.message);\n                if (msgPlayloadObject) {\n                    let msgObject = {\n                        topicId: inputDataObj.topic,\n                        messageId: inputDataObj === null || inputDataObj === void 0 ? void 0 : inputDataObj.messageId,\n                        messageObject: msgPlayloadObject,\n                        publishedAt: inputDataObj === null || inputDataObj === void 0 ? void 0 : inputDataObj.publishedAt,\n                    };\n                    let msgResult = yield this.splitManager.onReceivedPackageCheck(msgObject);\n                    resolve(msgResult);\n                }\n                else {\n                    resolve({\n                        isSplitPackage: false,\n                    });\n                }\n            }));\n        });\n    }\n    sendRaw(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`message send =====> ${msg}`);\n            log.reportLog('connect send raw msg');\n            let message = msg;\n            log.logDebug(`message send =====encrypt message.length>>>> ${message.length}`);\n            // only one topic\n            let topic = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`message send =====topic>>>> ${topic === null || topic === void 0 ? void 0 : topic.content}`);\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                method: commands_1.CONNECT_METHOD_PUBLISH,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                params: {\n                    message: {\n                        topic: topic === null || topic === void 0 ? void 0 : topic.content,\n                        message: message,\n                        ttl: constants_1.OKXCONNECTOR_MESSAGE_TTL\n                    }\n                } // crypted\n            };\n            this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                // ack\n                if (rsp && rsp.error) {\n                    log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                }\n                else if (rsp && !rsp.error) {\n                    log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                }\n            }));\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n            return this.packageId;\n        });\n    }\n    sendEncryptedMsg(topic_1, encryptedMsg_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, encryptedMsg, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL) {\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                method: commands_1.CONNECT_METHOD_PUBLISH,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                params: {\n                    message: {\n                        topic: topic,\n                        message: encryptedMsg,\n                        ttl: ttl\n                    }\n                } // crypted\n            };\n            this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                // ack\n                if (rsp && rsp.error) {\n                    log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                }\n                else if (rsp && !rsp.error) {\n                    log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                }\n            }));\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    send(msg_1) {\n        return __awaiter(this, arguments, void 0, function* (msg, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL) {\n            // make send msg payload\n            log.logDebug(`message send =====> ${msg}`);\n            log.reportLog('connect send msg');\n            if (!this.isWalletPKReady()) {\n                // channel not ready\n                throw new Error('connection not finish');\n            }\n            let message = this.crypto.encrypt(msg, this.connectedWalletPK);\n            log.logDebug(`message send =====encrypt message.length>>>> ${message.length}`);\n            log.reportEvent(report_1.OKXReportType.LOG, 'msg_size', message.length.toString());\n            // only one topic\n            let topic = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`message send =====topic>>>> ${topic === null || topic === void 0 ? void 0 : topic.content}`);\n            // before send message check split\n            yield this.splitManager.sendSplitPackages(topic === null || topic === void 0 ? void 0 : topic.content, message, this.sendEncryptedMsg.bind(this), this.sendRaw.bind(this));\n            // await this.sendEncryptedMsg(topic?.content, message, ttl)\n            // this.refreshPackageId()\n            // const payload : ConnectPayloadReq = {\n            //    id : this.packageId.toString(),\n            //    method: CONNECT_METHOD_PUBLISH,\n            //    jsonrpc: CONNECT_JSONRPC_VER,\n            //    params: {\n            //       message: {\n            //          topic: topic?.content,\n            //          message: message,\n            //          ttl: ttl\n            //       }\n            //    } // crypted\n            // }\n            // this.events.once(this.packageId.toString(), async (rsp:ConnectPayloadRsp)=>{\n            //    // ack\n            //    if (rsp && rsp.error) {\n            //       log.logError(`@${new Date().toUTCString()} >>> failed when send msg`)\n            //    } else if ( rsp && !rsp.error) {\n            //       log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`)\n            //    }\n            // })\n            // await this.connector.send(async ()=>{\n            //    log.logDebug('CONNECT: reconnect before send')\n            //    return await this.connector.connect();\n            // }, payload)\n            return this.packageId;\n        });\n    }\n    sendACK(msgId_1, success_1) {\n        return __awaiter(this, arguments, void 0, function* (msgId, success, reason = undefined) {\n            if (success === true) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    result: true\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n            else if (reason) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    error: {\n                        code: reason.code, //int\n                        message: reason.message\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    // send receive\n    sendReceive(msgId, messageId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECEIVE,\n                params: {\n                    data: {\n                        messageId: messageId,\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    // send receive\n    // 1. fetch all \n    // 2. send back receive\n    // 3. check has more, if so, repeat from 1st step\n    sendFetchAndConsumeMessages(msgId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(msgId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic == topic) {\n                                let messageId = msg.messageId;\n                                log.reportLog('5. get fetch result');\n                                // fetch result receive control\n                                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(msg.message);\n                                if (msgPlayloadObject) {\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                    log.logDebug('skip receive');\n                                }\n                                else {\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                    // send receive command to relay server\n                                    this.refreshPackageId();\n                                    yield this.sendReceive(this.packageId.toString(), messageId, topic);\n                                }\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            log.reportLog('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_FETCHMSG,\n                params: {\n                    data: {\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    cleanCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.reportLog('connection cache clean called');\n            this.connectStorage.clearCache();\n        });\n    }\n    saveSessionContent(key, data) {\n        if (!data) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(data);\n        this.connectStorage.encryptStoreMsg(jsonData, storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n    }\n    getSessionContent(key) {\n        let jsonStr = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        if (jsonStr) {\n            let object = (0, safejson_1.safeJsonParse)(jsonStr);\n            return object;\n        }\n        return undefined;\n    }\n    getCurrentConnectionReady() {\n        return this.isWalletPKReady();\n    }\n}\nexports.ConnectionManager = ConnectionManager;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionSplitPackages = void 0;\nconst storageconstants_1 = require(\"./storageconstants\");\nconst localforage_1 = __importDefault(require(\"localforage\"));\nconst utils_1 = require(\"../utils/utils\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst ConnectionSplitSupportedVersionLimit = 2;\nconst ConnectionSplitSupportedSizeLimit = 63000;\n// test\n//  const ConnectionSplitSupportedSizeLimit = 500\nconst ConnectionReceiveKey = 'ConnectionReceiveKey';\nconst ConnectionSendKey = 'ConnectionSendKey';\nconst ConnectionTopicVersionKey = 'ConnectionSenderVersionKey';\nclass ConnectionSplitPackages {\n    constructor(side) {\n        // 发送队列, 保存分片数据，需要断点续传发送，\n        this.splitMessageSendArray = new Map();\n        // 接收队列, 保存回包数据，需要冗余去重复\n        this.splitMessageReceivedArray = new Map();\n        // sender 版本校验缓存\n        this.splitMessageSenderVersionMap = new Map();\n        this.splitPackageCache = localforage_1.default.createInstance({\n            name: storageconstants_1.OKXCONNECTOR_STORAGE_PROTOCOL_CACHE + side\n        });\n    }\n    init(sendRawMsg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // 1. 恢复缓存\n            yield this.recoverFromCache();\n            //2. 缓存中发送队列重发\n            if (this.splitMessageSendArray.size > 0) {\n                for (const [topic, payloadList] of this.splitMessageSendArray.entries()) {\n                    for (let i = 0; i < payloadList.length;) {\n                        const payload = payloadList[i];\n                        try {\n                            // 尝试发送消息\n                            yield sendRawMsg((0, safejson_1.safeJsonStringify)(payload), topic);\n                            log.logDebug(`Successfully sent payload: ${(0, safejson_1.safeJsonStringify)(payload)} to topic: ${topic}`);\n                            // 成功后移除元素\n                            payloadList.splice(i, 1);\n                        }\n                        catch (error) {\n                            log.logError(`Failed to send payload: ${(0, safejson_1.safeJsonStringify)(payload)} to topic: ${topic}`, error);\n                            // 重试逻辑（最多重试 3 次）\n                            payload.retryCount = (payload.retryCount || 0) + 1;\n                            if (payload.retryCount > 3) {\n                                log.logError(`Payload failed after 3 retries: ${(0, safejson_1.safeJsonStringify)(payload)}`);\n                                payloadList.splice(i, 1); // 放弃重试，移除元素\n                            }\n                            else {\n                                i++; // 跳过当前元素，继续处理下一个\n                            }\n                        }\n                    }\n                }\n                yield this.syncCache();\n            }\n        });\n    }\n    tryParseMessageSplitPayload(message) {\n        var _a;\n        let result = undefined;\n        try {\n            if (message.trimStart().startsWith('{')) {\n                let messageObj = (0, safejson_1.safeJsonParse)(message);\n                if (messageObj\n                    && messageObj.protocol_version\n                    && messageObj.protocol_version >= 2) {\n                    let protocolMessageObject = messageObj;\n                    if (protocolMessageObject.package_group_id && ((_a = protocolMessageObject.package_group_id) === null || _a === void 0 ? void 0 : _a.length) > 0) {\n                        result = messageObj;\n                    }\n                }\n            }\n            else {\n                (0, log_1.logDebug)('not split packages');\n            }\n        }\n        catch (error) {\n            (0, log_1.logDebug)('not split packages');\n        }\n        return result;\n    }\n    updateTopicSenderVersion(topic, protocolVersion) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.splitMessageSenderVersionMap.set(topic, protocolVersion);\n            yield this.syncCache();\n            (0, log_1.logDebug)('get update topic sender version: ', topic, protocolVersion);\n        });\n    }\n    /**\n     * topic\n     * message 待发送的消息体\n     * sendMsg 正常发送消息的方法\n     * sendRawMsg 发送明文格式，即拆包消息的方法\n    */\n    sendSplitPackages(topic, message, sendMsg, sendRawMsg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // 1. 长度校验拆分子包\n            // 2. 确认连接协议最大支持版本\n            // 3. 分包缓存\n            // 4. 缓存包发送\n            // 5. ACK确认并清理缓存\n            if (!topic) {\n                log.logError('sendSplitPackages invalid topic');\n                return;\n            }\n            let senderVersion = this.splitMessageSenderVersionMap.get(topic);\n            let msgLength = message.length;\n            try {\n                if (msgLength < ConnectionSplitSupportedSizeLimit) {\n                    throw new Error(`no need to split (size:${msgLength})`);\n                }\n                if (!senderVersion || (senderVersion && senderVersion < ConnectionSplitSupportedVersionLimit)) {\n                    throw new Error(`version not support split (version: ${senderVersion})`);\n                }\n                const msg_parts = [];\n                let msg_part_length = ConnectionSplitSupportedSizeLimit;\n                for (let i = 0; i < message.length; i += msg_part_length) {\n                    if (i + msg_part_length < message.length) {\n                        msg_parts.push(message.slice(i, i + msg_part_length));\n                    }\n                    else {\n                        msg_parts.push(message.slice(i));\n                    }\n                }\n                let groupId = (0, utils_1.generateGroupId)();\n                let splitMessagePackages = msg_parts.map((msg, index) => {\n                    // make msg split parts\n                    let msgObj = {\n                        topicId: topic,\n                        protocol_version: ConnectionSplitSupportedVersionLimit,\n                        total_count: msg_parts.length,\n                        package_index: index,\n                        package_group_id: groupId,\n                        content: msg\n                    };\n                    return msgObj;\n                });\n                // save cache\n                this.mergePackageArray(true, splitMessagePackages);\n                // try send out\n                for (let i = 0; i < splitMessagePackages.length;) {\n                    const msgObj = splitMessagePackages[i];\n                    const payload = (0, safejson_1.safeJsonStringify)(msgObj);\n                    try {\n                        // 尝试发送消息\n                        yield sendRawMsg(payload, topic);\n                        log.logDebug(`Successfully sent payload: ${payload} to topic: ${topic}`);\n                        // 成功后移除元素\n                        splitMessagePackages.splice(i, 1);\n                    }\n                    catch (error) {\n                        log.logError(`Failed to send payload: ${payload} to topic: ${topic}`, error);\n                        // 重试逻辑（最多重试 3 次）\n                        msgObj.retryCount = (msgObj.retryCount || 0) + 1;\n                        if (msgObj.retryCount > 3) {\n                            log.logError(`Payload failed after 3 retries: ${payload}`);\n                            splitMessagePackages.splice(i, 1); // 放弃重试，移除元素\n                        }\n                        else {\n                            i++; // 跳过当前元素，继续处理下一个\n                        }\n                    }\n                }\n                // clean cache\n                this.splitMessageSendArray.set(topic, []);\n                yield this.syncCache();\n            }\n            catch (e) {\n                (0, log_1.logDebug)('send split packages no split');\n                (0, log_1.logDebug)(e);\n                yield sendMsg(topic, message);\n            }\n        });\n    }\n    onReceivedPackageCheck(payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // 1. merge 进入缓存\n            this.mergePackageArray(false, [payload]);\n            let completeMap = new Map();\n            let inputTopic = payload.topicId;\n            // 2. 返回检查结果,输出完整message结果\n            this.splitMessageReceivedArray.forEach((itemList, topic) => {\n                if (topic == payload.topicId) {\n                    itemList.forEach((item) => {\n                        if (item.messageObject.package_group_id) {\n                            let messageCache = completeMap.get(item.messageObject.package_group_id);\n                            if (!messageCache) {\n                                messageCache = new Array();\n                            }\n                            messageCache.push(item);\n                            completeMap.set(item.messageObject.package_group_id, messageCache);\n                        }\n                    });\n                }\n            });\n            (0, log_1.logDebug)('on received message, check message cache');\n            let checkResult = {\n                isSplitPackage: false,\n                // finalMessage: undefined,\n                // completeMessageIdList: undefined \n            };\n            if (payload.messageObject.package_group_id) {\n                checkResult.isSplitPackage = true;\n                let messageCache = completeMap.get(payload.messageObject.package_group_id);\n                // 判断是否收齐\n                if (messageCache === null || messageCache === void 0 ? void 0 : messageCache.length) {\n                    let index_check = new Set();\n                    messageCache.forEach((item) => {\n                        if (item.messageObject.package_index !== undefined) {\n                            index_check.add(item.messageObject.package_index);\n                        }\n                    });\n                    if (index_check.size == payload.messageObject.total_count) {\n                        // 满足条件，更新checkResult\n                        messageCache.sort((a, b) => {\n                            if ((a.messageObject.package_index || a.messageObject.package_index === 0)\n                                && (b.messageObject.package_index || b.messageObject.package_index === 0)) {\n                                return a.messageObject.package_index - b.messageObject.package_index;\n                            }\n                            else {\n                                return 0;\n                            }\n                        });\n                        let messageList = messageCache.reduce((msgList, item) => {\n                            msgList.push(item.messageObject.content);\n                            return msgList;\n                        }, []);\n                        let messageIdList = messageCache.reduce((msgIdList, item) => {\n                            msgIdList.push(item.messageId);\n                            return msgIdList;\n                        }, []);\n                        checkResult.isSplitPackage = true;\n                        checkResult.finalMessage = messageList.join('');\n                        checkResult.completeMessageIdList = messageIdList;\n                        // 清理缓存\n                        let receivedList = this.splitMessageReceivedArray.get(inputTopic);\n                        if (receivedList) {\n                            receivedList = receivedList.filter((item) => {\n                                return !messageIdList.includes(item.messageId);\n                            });\n                            this.splitMessageReceivedArray.set(inputTopic, receivedList);\n                        }\n                        yield this.syncCache();\n                    }\n                }\n            }\n            // 抛出，交给manager来发送receive\n            return checkResult;\n        });\n    }\n    /* -------------------------- */\n    /** private methods */\n    /* -------------------------- */\n    mergePackageArray(isSending, inputPayloadArray) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('append sending array');\n            if (isSending) {\n                let inputSendArray = inputPayloadArray;\n                let filtedArray = inputSendArray.filter((payload) => {\n                    let inputTopic = payload.topicId;\n                    let accept = true;\n                    let sendCacheArray = this.splitMessageSendArray.get(inputTopic);\n                    sendCacheArray === null || sendCacheArray === void 0 ? void 0 : sendCacheArray.forEach((cachedPayload) => {\n                        if (cachedPayload.package_group_id == payload.package_group_id\n                            && cachedPayload.total_count == payload.total_count\n                            && cachedPayload.package_index == payload.package_index) {\n                            accept = false;\n                        }\n                    });\n                    return accept;\n                });\n                if (filtedArray.length > 0) {\n                    let inputTopic = filtedArray[0].topicId;\n                    let sendArray = this.splitMessageSendArray.get(inputTopic);\n                    if (!sendArray) {\n                        sendArray = new Array();\n                    }\n                    sendArray = sendArray.concat(filtedArray);\n                    this.splitMessageSendArray.set(inputTopic, sendArray);\n                    (0, log_1.logDebug)('append sending array (after filted): ', sendArray);\n                }\n            }\n            else {\n                let inputReceiveArray = inputPayloadArray;\n                let filtedArray = inputReceiveArray.filter((payload) => {\n                    let inputTopic = payload.topicId;\n                    let accept = true;\n                    let receiveCacheArray = this.splitMessageReceivedArray.get(inputTopic);\n                    receiveCacheArray === null || receiveCacheArray === void 0 ? void 0 : receiveCacheArray.forEach((cachedPayload) => {\n                        if (cachedPayload.messageId == payload.messageId) {\n                            accept = false;\n                        }\n                    });\n                    return accept;\n                });\n                if (filtedArray.length > 0) {\n                    let inputTopic = filtedArray[0].topicId;\n                    let receiveArray = this.splitMessageReceivedArray.get(inputTopic);\n                    if (!receiveArray) {\n                        receiveArray = new Array();\n                    }\n                    receiveArray = receiveArray.concat(filtedArray);\n                    this.splitMessageReceivedArray.set(inputTopic, receiveArray);\n                    (0, log_1.logDebug)('append received array (after filted): ', receiveArray);\n                }\n            }\n        });\n    }\n    syncCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('sync split message cache');\n            yield this.splitPackageCache.setItem(ConnectionReceiveKey, this.splitMessageReceivedArray);\n            yield this.splitPackageCache.setItem(ConnectionSendKey, this.splitMessageSendArray);\n            yield this.splitPackageCache.setItem(ConnectionTopicVersionKey, this.splitMessageSenderVersionMap);\n        });\n    }\n    recoverFromCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // rec\n            let rec_array = yield this.splitPackageCache.getItem(ConnectionReceiveKey);\n            if (rec_array) {\n                this.splitMessageReceivedArray = rec_array;\n            }\n            else {\n                this.splitMessageReceivedArray = new Map();\n            }\n            //send\n            let send_array = yield this.splitPackageCache.getItem(ConnectionSendKey);\n            if (send_array) {\n                this.splitMessageSendArray = send_array;\n            }\n            else {\n                this.splitMessageSendArray = new Map();\n            }\n            // topic/version cach\n            let topic = yield this.splitPackageCache.getItem(ConnectionTopicVersionKey);\n            if (topic) {\n                this.splitMessageSenderVersionMap = topic;\n            }\n            else {\n                this.splitMessageSenderVersionMap = new Map();\n            }\n        });\n    }\n}\nexports.ConnectionSplitPackages = ConnectionSplitPackages;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectorState = exports.CONNECT_PROTOCOL_VER = exports.CONNECT_JSONRPC_VER = exports.OKXCONNECTOR_MESSAGE_TTL = exports.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE = exports.OKXCONNECTOR_WS_URL_LIST = exports.OKXCONNECTOR_WS_URL_IDX_KEY = exports.OKXCONNECTOR_WS_URL_3 = exports.OKXCONNECTOR_WS_URL_2 = exports.OKXCONNECTOR_WS_URL_1 = exports.EVENT_EMITTER_MAX_LISTENERS = exports.OKXCONNECTOR_PROTOCOL_VERSION = void 0;\nexports.OKXCONNECTOR_PROTOCOL_VERSION = 2;\nexports.EVENT_EMITTER_MAX_LISTENERS = 10;\nexports.OKXCONNECTOR_WS_URL_1 = \"wss://wsdexpri.okx.com/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_2 = \"wss://wsdexpri.okx.ac/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_3 = \"wss://wsdexpri.coinall.ltd/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_IDX_KEY = \"wuik\";\nexports.OKXCONNECTOR_WS_URL_LIST = [\n    exports.OKXCONNECTOR_WS_URL_1,\n    exports.OKXCONNECTOR_WS_URL_2,\n    exports.OKXCONNECTOR_WS_URL_3,\n];\nexports.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE = {\n    TIME_OUT: 3990,\n    CANCELED: 3991,\n    FINISHED: 3992,\n};\nexports.OKXCONNECTOR_MESSAGE_TTL = 300000;\n// --------------- JSON RPC ---------------\nexports.CONNECT_JSONRPC_VER = \"2.0\";\n// --------------- Protocol Version -------\nexports.CONNECT_PROTOCOL_VER = 2;\nexports.ConnectorState = {\n    InitState: 0,\n    Connecting: 1,\n    Connected: 2,\n    Disconnected: 3,\n    OnError: 4,\n};\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Engine = void 0;\nconst protocol_1 = require(\"../protocol\");\nconst constants_1 = require(\"./constants\");\nconst utils_1 = require(\"../utils\");\nconst iconnector_1 = require(\"../connector/iconnector\");\nconst connectionManager_1 = require(\"./connectionManager\");\nconst sessionUtils_1 = require(\"./sessionUtils\");\nconst wallet_info_1 = require(\"../protocol/connect/wallet-info\");\nclass Engine {\n    constructor(appName) {\n        this.connectors = [];\n        this.useConnector = undefined;\n        this.connectionManager = new connectionManager_1.ConnectionManager(appName);\n        this.addConnectionListener();\n    }\n    getConnector() {\n        if (this.useConnector) {\n            return this.useConnector;\n        }\n    }\n    setAccountChangeListener(accountChangeListener) {\n        this.accountChangeListener = accountChangeListener;\n        (0, utils_1.logDebug)(\"setAccountChangeListener: engine\", accountChangeListener);\n        for (const connector of this.connectors) {\n            connector.setAccountChangeListener(accountChangeListener);\n        }\n    }\n    registerConnector(connectors) {\n        this.connectors = connectors;\n        for (const connector of connectors) {\n            connector.setConnectionManager(this.connectionManager);\n        }\n    }\n    hasWsConnector() {\n        for (const connector of this.connectors) {\n            if (this.isWsConnector(connector)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    isWsConnector(connector) {\n        if (!connector)\n            return false;\n        return (connector.getTag() === iconnector_1.OKX_TG_WALLET\n            || connector.getTag() === iconnector_1.OKX_APP_WALLET);\n    }\n    isInjectedConnector(connector) {\n        if (!connector)\n            return false;\n        return connector.getTag() === iconnector_1.OKX_INJECT_WALLET;\n    }\n    universalConnect(request, sessionConfig, connectInfoAndUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.addConnectionListener();\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b, _c, _d;\n                try {\n                    (0, utils_1.logDebug)(\"engine universalConnect request :\", JSON.stringify(request));\n                    (0, utils_1.logDebug)(\"engine universalConnect sessionConfig :\", JSON.stringify(sessionConfig));\n                    let universalRequest = [];\n                    request.forEach((item) => {\n                        let name = item.name;\n                        if (name.startsWith(\"requestAccounts\") || name.startsWith(\"ton\")) {\n                            universalRequest.push(item);\n                        }\n                    });\n                    (0, utils_1.logDebug)(\"engine universalConnect universalRequest :\", JSON.stringify(universalRequest));\n                    const connectInfo = this.connectionManager.getConnectInfo();\n                    const requestId = Date.now().toString();\n                    let openUniversalLink = (_a = sessionConfig.openUniversalUrl) !== null && _a !== void 0 ? _a : false;\n                    const universalConnectRequest = {\n                        protocolVer: Number(protocol_1.tonConnectSdkVersion),\n                        topic: connectInfo.channelId,\n                        clientId: connectInfo.clientId,\n                        requestId: requestId,\n                        dAppInfo: sessionConfig.dappInfo,\n                        requests: universalRequest,\n                        redirect: (_b = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _b !== void 0 ? _b : \"none\"\n                    };\n                    const base64Encoded = (0, utils_1.encodeConnectParams)(universalConnectRequest);\n                    universalConnectRequest.redirect = (_c = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _c !== void 0 ? _c : \"none\";\n                    (0, utils_1.logDebug)('engine universalConnect ==>>universalConnectRequest:', JSON.stringify(universalConnectRequest));\n                    var openOKXLink = \"\";\n                    // open app wallet\n                    if (openUniversalLink) {\n                        openOKXLink = (0, utils_1.getOKXLink)(universalConnectRequest, sessionConfig.useMini, sessionConfig.tmaReturnUrl);\n                        (0, utils_1.logDebug)('engine universalConnect ==>>openOKXLink:', openOKXLink);\n                    }\n                    const openMethod = () => {\n                        if (this.connectors.length == 1 && this.connectors[0].getTag() === iconnector_1.OKX_INJECT_WALLET) {\n                            return this.connectors[0].openWallet({\n                                connectRequest: universalConnectRequest\n                            });\n                        }\n                        else {\n                            if (sessionConfig.useMini) {\n                                return (0, utils_1.openOKXTMAWalletlinkWithFallback)(openOKXLink);\n                            }\n                            if ((0, utils_1.useShortLink)()) {\n                                return (0, utils_1.openOKXUniversalLink)(openOKXLink);\n                            }\n                            return (0, utils_1.openOKXDeeplinkWithFallback)(openOKXLink);\n                        }\n                    };\n                    (0, utils_1.logDebug)('engine universalConnect ==>>openOKXLink:', openOKXLink);\n                    const isIOS = (0, utils_1.isIos)();\n                    if (isIOS && openUniversalLink) {\n                        (0, utils_1.logDebug)(`engine universalConnect ==>>isIOS: ${isIOS}   openUniversalLink: ${openUniversalLink}`);\n                        openMethod();\n                    }\n                    this.addOnConnectResultListener((response) => {\n                        var _a, _b, _c, _d;\n                        try {\n                            this.addOnConnectResultListener(undefined);\n                            let connectResponse = response;\n                            if (connectResponse.method == \"connect\") {\n                                (0, utils_1.logDebug)(\"engin  universalConnect success connectResponse:>>>\", JSON.stringify(connectResponse));\n                                let namespaces = (0, sessionUtils_1.buildNameSpacesByConnectResponse)(connectResponse);\n                                if (namespaces) {\n                                    let walletName = undefined;\n                                    if (((_b = (_a = connectResponse.payload) === null || _a === void 0 ? void 0 : _a.responses) === null || _b === void 0 ? void 0 : _b[0]) && \"walletName\" in connectResponse.payload.responses[0]) {\n                                        walletName = connectResponse.payload.responses[0]['walletName'];\n                                    }\n                                    let appName = (_c = connectResponse.payload) === null || _c === void 0 ? void 0 : _c.wallet.appName;\n                                    var tag;\n                                    switch (appName) {\n                                        case wallet_info_1.OKXWalletName:\n                                            tag = iconnector_1.OKX_APP_WALLET;\n                                            break;\n                                        case wallet_info_1.OKXMiniWalletName:\n                                            tag = iconnector_1.OKX_TG_WALLET;\n                                            break;\n                                        case wallet_info_1.OKXInjectWalletName:\n                                            tag = iconnector_1.OKX_INJECT_WALLET;\n                                            break;\n                                    }\n                                    var connector = this.connectors.find((connector) => connector.getTag() === tag);\n                                    if (!connector) {\n                                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n                                    }\n                                    let session = Object.assign({ topic: connectInfo.channelId, sessionConfig: sessionConfig, namespaces: namespaces }, (connectResponse.payload && {\n                                        wallet: Object.assign(Object.assign({}, connectResponse.payload.wallet), { walletName: walletName })\n                                    }));\n                                    let methodsResponse = connectResponse.payload.responses.find(item => item.name === 'requestAccounts');\n                                    if (methodsResponse && methodsResponse.connectRequestMethods) {\n                                        session.signResponse = methodsResponse.connectRequestMethods;\n                                    }\n                                    (0, utils_1.logDebug)(\"engin  universalConnect success session:>>>\", JSON.stringify(session));\n                                    if (this.isWsConnector(connector)) {\n                                        (0, utils_1.logDebug)(\"engine update protocol version\");\n                                        this.connectionManager.updateProtocolVersion(connectInfo.channelId, connectResponse.payload.wallet.maxProtocolVersion);\n                                    }\n                                    resolve(session);\n                                    this.setUseConnector(connector);\n                                }\n                                else {\n                                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n                                }\n                            }\n                            else if (connectResponse.method == \"connect_error\" && ((_d = connectResponse.payload) === null || _d === void 0 ? void 0 : _d.code) != undefined) {\n                                throw new protocol_1.OKXConnectError(connectResponse.payload.code);\n                            }\n                        }\n                        catch (e) {\n                            reject(e);\n                        }\n                    });\n                    if (this.hasWsConnector()) {\n                        yield ((_d = this.connectionManager) === null || _d === void 0 ? void 0 : _d.disconnect(false));\n                        try {\n                            yield this.connectionManager.connect();\n                        }\n                        catch (e) {\n                            (0, utils_1.logDebug)('Engine universalConnect error', e);\n                            throw e;\n                        }\n                        (0, utils_1.logDebug)('engin  universalConnect ==>> connectInfoAndUrl:', connectInfoAndUrl);\n                        this.sendSession(base64Encoded);\n                    }\n                    if (!isIOS && openUniversalLink) {\n                        openMethod();\n                    }\n                    (0, utils_1.logDebug)('engin  universalConnect ==>> connectInfoAndUrl:', connectInfoAndUrl);\n                    if (connectInfoAndUrl) {\n                        const info = {\n                            connectRequest: universalConnectRequest,\n                            redirect: sessionConfig.redirect,\n                            tmaReturnUrl: sessionConfig.tmaReturnUrl,\n                        };\n                        (0, utils_1.logDebug)(\"universalConnect connectInfoAndUrl info :\", JSON.stringify(info));\n                        connectInfoAndUrl(info);\n                    }\n                }\n                catch (error) {\n                    (0, utils_1.logDebug)(\"Engine universalConnect catch error\", error);\n                    reject(error);\n                }\n            }));\n        });\n    }\n    addOnConnectResultListener(connectResultListener) {\n        for (const connector of this.connectors) {\n            if (this.isInjectedConnector(connector)) {\n                connector.setOnConnectResultListener(connectResultListener);\n            }\n        }\n        this.connectResultListener = connectResultListener;\n    }\n    openWallet(engineConnectInfo, connector) {\n        var _a;\n        if (connector) {\n            connector.openWallet(engineConnectInfo);\n        }\n        else {\n            (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.openWallet(engineConnectInfo);\n        }\n    }\n    send(request, requestAnswer, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            return (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.send(request, requestAnswer, ttl);\n        });\n    }\n    clearData() {\n        var _a;\n        (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.clearData();\n    }\n    addDisconnectListener(disconnecter) {\n        var _a;\n        (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.addDisconnectListener(disconnecter);\n    }\n    saveSessionContent(key, data) {\n        this.connectionManager.saveSessionContent(key, data);\n    }\n    getSessionContent(key) {\n        var _a;\n        var session = this.connectionManager.getSessionContent(key);\n        if (session) {\n            var tag = \"\";\n            if (typeof session === \"object\") {\n                tag = this.getTagByappName((_a = session.wallet) === null || _a === void 0 ? void 0 : _a.appName);\n            }\n            if (this.connectors.find((connector) => {\n                return connector.getTag() === tag;\n            })) {\n                return session;\n            }\n        }\n        return undefined;\n    }\n    getTagByappName(appName) {\n        var tag = '';\n        if (appName) {\n            switch (appName) {\n                case wallet_info_1.OKXWalletName:\n                    tag = iconnector_1.OKX_APP_WALLET;\n                    break;\n                case wallet_info_1.OKXMiniWalletName:\n                    tag = iconnector_1.OKX_TG_WALLET;\n                    break;\n                case wallet_info_1.OKXInjectWalletName:\n                    tag = iconnector_1.OKX_INJECT_WALLET;\n            }\n        }\n        return tag;\n    }\n    setConnectConnector(wallet) {\n        var tag = this.getTagByappName(wallet === null || wallet === void 0 ? void 0 : wallet.appName);\n        if (!tag)\n            return;\n        this.setUseConnector(this.connectors.find((connector) => {\n            return connector.getTag() === tag;\n        }));\n    }\n    setUseConnector(connector) {\n        this.useConnector = connector;\n        if (this.isWsConnector(connector)) {\n            connector.addConnectionListener();\n        }\n    }\n    // for es connect\n    setSessionConnectingListener(sessionConnectingListener) {\n        this.sessionConnectingListener = sessionConnectingListener;\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.restoreconnect(sessionInfo, onConnectResult));\n        });\n    }\n    restoreconnectFromTopic(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.isWsConnector(this.getConnector())) {\n                yield this.getConnector().restoreconnectFromTopic(topic);\n            }\n        });\n    }\n    getCurrentConnectionReady(namespaceKeys) {\n        var _a;\n        return !!((_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.getCurrentConnectionReady(namespaceKeys));\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            var _a;\n            yield ((_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.connectManagerDisconnect(fromRestore));\n        });\n    }\n    sendSession(sessionInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, utils_1.logDebug)('[Connect] sendSession called:', sessionInfo);\n            const requestId = Date.now().toString();\n            let request = {\n                method: 'session_info',\n                params: { protocolVersion: constants_1.CONNECT_PROTOCOL_VER, sessionInfo: sessionInfo }\n            };\n            yield this.connectionManager.sendRaw(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId })));\n        });\n    }\n    addConnectionListener() {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.addListener(\"sdk_response\", (event, msg) => {\n            var jsonResponse = (0, utils_1.safeJsonParse)(msg);\n            (0, utils_1.logDebug)(`Engine ==>> addListener ==> success ==> ${jsonResponse}`);\n            if (jsonResponse.method === 'connect' || jsonResponse.method === 'connect_error') {\n                if (this.connectResultListener) {\n                    this.connectResultListener(jsonResponse);\n                }\n            }\n            else if (jsonResponse.method === \"session_connecting\") {\n                (0, utils_1.logDebug)(\"Engine ==>> handleResponse_4  ===> sessionConnectingListener\");\n                if (this.sessionConnectingListener) {\n                    (0, utils_1.logDebug)(\"Engine ==>> handleResponse_4  ===> sessionConnectingListener not null\");\n                    this.sessionConnectingListener();\n                    this.sessionConnectingListener = undefined;\n                }\n            }\n        }, function () {\n        });\n    }\n}\nexports.Engine = Engine;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = exports.Engine = exports.WalletConnectionManager = exports.ConnectionManager = exports.OKXWalletConnector = void 0;\nvar connect_1 = require(\"./connect\");\nObject.defineProperty(exports, \"OKXWalletConnector\", { enumerable: true, get: function () { return connect_1.OKXWalletConnector; } });\nvar connectionManager_1 = require(\"./connectionManager\");\nObject.defineProperty(exports, \"ConnectionManager\", { enumerable: true, get: function () { return connectionManager_1.ConnectionManager; } });\nvar walletConnectionManager_1 = require(\"./walletConnectionManager\");\nObject.defineProperty(exports, \"WalletConnectionManager\", { enumerable: true, get: function () { return walletConnectionManager_1.WalletConnectionManager; } });\nvar engine_1 = require(\"./engine\");\nObject.defineProperty(exports, \"Engine\", { enumerable: true, get: function () { return engine_1.Engine; } });\nvar storage_1 = require(\"./storage\");\nObject.defineProperty(exports, \"Storage\", { enumerable: true, get: function () { return storage_1.Storage; } });\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MULTICODEC_ED25519_LENGTH = exports.MULTICODEC_ED25519_HEADER = exports.MULTICODEC_ED25519_BASE = exports.MULTICODEC_ED25519_ENCODING = exports.DID_METHOD = exports.DID_PREFIX = exports.DID_DELIMITER = exports.KEY_PAIR_SEED_LENGTH = exports.DATA_ENCODING = exports.JSON_ENCODING = exports.JWT_ENCODING = exports.JWT_DELIMITER = exports.JWT_IRIDIUM_TYP = exports.JWT_IRIDIUM_ALG = exports.JWTHeaderType = void 0;\nexports.generateKeyPair = generateKeyPair;\nexports.decodeJSON = decodeJSON;\nexports.encodeJSON = encodeJSON;\nexports.encodeIss = encodeIss;\nexports.decodeIss = decodeIss;\nexports.encodeSig = encodeSig;\nexports.decodeSig = decodeSig;\nexports.encodeData = encodeData;\nexports.decodeData = decodeData;\nexports.encodeJWT = encodeJWT;\nexports.decodeJWT = decodeJWT;\nexports.signJWT = signJWT;\nexports.verifyJWT = verifyJWT;\nconst ed25519 = __importStar(require(\"@stablelib/ed25519\"));\nconst safejson_1 = require(\"../utils/safejson\");\nconst utils_1 = require(\"../utils/utils\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst log = __importStar(require(\"../utils/log\"));\nconst stringUtils_1 = require(\"../utils/stringUtils\");\nexports.JWTHeaderType = \"dapp\";\nexports.JWT_IRIDIUM_ALG = \"EdDSA\";\nexports.JWT_IRIDIUM_TYP = \"JWT\";\nexports.JWT_DELIMITER = \".\";\nexports.JWT_ENCODING = \"base64url\";\nexports.JSON_ENCODING = \"utf8\";\nexports.DATA_ENCODING = \"utf8\";\nexports.KEY_PAIR_SEED_LENGTH = 32;\nexports.DID_DELIMITER = \":\";\nexports.DID_PREFIX = \"did\";\nexports.DID_METHOD = \"key\";\nexports.MULTICODEC_ED25519_ENCODING = \"base58btc\";\nexports.MULTICODEC_ED25519_BASE = \"z\";\nexports.MULTICODEC_ED25519_HEADER = \"K36\";\nexports.MULTICODEC_ED25519_LENGTH = 32;\nfunction generateKeyPair() {\n    // let local_seed = randomBytes(KEY_PAIR_SEED_LENGTH)\n    // return ed25519.generateKeyPairFromSeed(local_seed);\n    return tweetnacl_1.default.sign.keyPair();\n}\nfunction decodeJSON(str) {\n    return (0, safejson_1.safeJsonParse)((0, stringUtils_1.okxtoString)((0, stringUtils_1.okxfromString)(str, exports.JWT_ENCODING), exports.JSON_ENCODING));\n}\nfunction encodeJSON(val) {\n    return (0, stringUtils_1.okxtoString)((0, stringUtils_1.okxfromString)((0, safejson_1.safeJsonStringify)(val), exports.JSON_ENCODING), exports.JWT_ENCODING);\n}\nfunction encodeIss(publicKey) {\n    log.logDebug(`publicKey: ${(0, utils_1.toHexString)(publicKey)}`);\n    var publicKeyStr = (0, stringUtils_1.okxtoString)(publicKey, exports.MULTICODEC_ED25519_ENCODING);\n    return [exports.DID_PREFIX, exports.DID_METHOD, publicKeyStr].join(exports.DID_DELIMITER);\n}\nfunction decodeIss(issuer) {\n    const [prefix, method, multicodec] = issuer.split(exports.DID_DELIMITER);\n    if (prefix !== exports.DID_PREFIX || method !== exports.DID_METHOD) {\n        throw new Error(`Issuer must be a DID with method \"key\"`);\n    }\n    if (multicodec === undefined) {\n        throw new Error('multicodec is undefined');\n    }\n    const publicKey = (0, stringUtils_1.okxfromString)(multicodec, exports.MULTICODEC_ED25519_ENCODING);\n    if (publicKey === undefined || publicKey.length !== exports.MULTICODEC_ED25519_LENGTH) {\n        throw new Error(`Issuer must be a public key with length 32 bytes`);\n    }\n    return publicKey;\n}\n// ---------- Signature ----------------------------------------------- //\nfunction encodeSig(bytes) {\n    return (0, stringUtils_1.okxtoString)(bytes, exports.JWT_ENCODING);\n}\nfunction decodeSig(encoded) {\n    return (0, stringUtils_1.okxfromString)(encoded, exports.JWT_ENCODING);\n}\n// ---------- Data ----------------------------------------------- //\nfunction encodeData(params) {\n    return (0, stringUtils_1.okxfromString)([encodeJSON(params.header), encodeJSON(params.payload)].join(exports.JWT_DELIMITER), exports.DATA_ENCODING);\n}\nfunction decodeData(data) {\n    var _a, _b;\n    const params = (0, stringUtils_1.okxtoString)(data, exports.DATA_ENCODING).split(exports.JWT_DELIMITER);\n    const header = decodeJSON((_a = params[0]) !== null && _a !== void 0 ? _a : '{}');\n    const payload = decodeJSON((_b = params[1]) !== null && _b !== void 0 ? _b : '{}');\n    return { header, payload };\n}\n// ---------- JWT ----------------------------------------------- //\nfunction encodeJWT(params) {\n    return [encodeJSON(params.header), encodeJSON(params.payload), encodeSig(params.signature)].join(exports.JWT_DELIMITER);\n}\nfunction decodeJWT(jwt) {\n    var _a, _b, _c;\n    const params = jwt.split(exports.JWT_DELIMITER);\n    const header = decodeJSON((_a = params[0]) !== null && _a !== void 0 ? _a : '{}');\n    const payload = decodeJSON((_b = params[1]) !== null && _b !== void 0 ? _b : '{}');\n    const signature = decodeSig((_c = params[2]) !== null && _c !== void 0 ? _c : '{}');\n    const data = (0, stringUtils_1.okxfromString)(params.slice(0, 2).join(exports.JWT_DELIMITER), exports.DATA_ENCODING);\n    return { header, payload, signature, data };\n}\nfunction signJWT(sub_1, aud_1, ttl_1, keyPair_1) {\n    return __awaiter(this, arguments, void 0, function* (sub, aud, ttl, keyPair, iat = Math.floor(Date.now())) {\n        const header = { alg: exports.JWT_IRIDIUM_ALG, typ: exports.JWT_IRIDIUM_TYP };\n        const iss = encodeIss(keyPair.publicKey);\n        const exp = iat + ttl;\n        const act = \"authenticate user\";\n        const payload = { iss, sub, aud, act, iat, exp };\n        const data = encodeData({ header, payload });\n        // const signature = ed25519.sign(keyPair.secretKey, data);\n        log.logDebug(`get sec kp: ${keyPair.secretKey} {${keyPair.secretKey.length}}`);\n        const signature = tweetnacl_1.default.sign.detached(data, keyPair.secretKey);\n        return encodeJWT({ header, payload, signature });\n    });\n}\nfunction verifyJWT(jwt) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { header, payload, data, signature } = decodeJWT(jwt);\n        if (header.alg !== exports.JWT_IRIDIUM_ALG || header.typ !== exports.JWT_IRIDIUM_TYP) {\n            throw new Error(\"JWT must use EdDSA algorithm\");\n        }\n        const publicKey = decodeIss(payload.iss);\n        return ed25519.verify(publicKey, data, signature);\n    });\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCONNECTOR_JWT_TTL = exports.OKXCONNECTOR_JWT_WALLET_SIDE = exports.OKXCONNECTOR_JWT_SIDE = void 0;\nexports.OKXCONNECTOR_JWT_SIDE = \"wallet\";\nexports.OKXCONNECTOR_JWT_WALLET_SIDE = \"dapp\";\nexports.OKXCONNECTOR_JWT_TTL = 86400000;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildNameSpacesByConnectResponse = buildNameSpacesByConnectResponse;\nexports.buildRequestAccountNameSpacesByConnectResponse = buildRequestAccountNameSpacesByConnectResponse;\nexports.buildAccountNameSpaces = buildAccountNameSpaces;\nconst log_1 = require(\"../utils/log\");\nfunction buildNameSpacesByConnectResponse(connectResponse) {\n    let requestAccountNameSpaces = buildRequestAccountNameSpacesByConnectResponse(connectResponse);\n    return requestAccountNameSpaces;\n}\nfunction buildRequestAccountNameSpacesByConnectResponse(connectResponse) {\n    let result = {};\n    (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start connectResponse111>>', JSON.stringify(connectResponse));\n    let universalResponse = connectResponse.payload.responses.find(item => item.name === 'requestAccounts');\n    if (universalResponse && universalResponse.accounts) {\n        let filterAccount = [];\n        for (const item of universalResponse.accounts) {\n            if (item.namespace === \"ton\") {\n                if (item.data && item.data.ton_addr) {\n                    if (item.data.ton_addr.address && item.data.ton_addr.address.length > 0) {\n                        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start TON>>', JSON.stringify(item));\n                        filterAccount.push(item);\n                    }\n                }\n            }\n            else {\n                (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start other>>', JSON.stringify(item));\n                filterAccount.push(item);\n            }\n        }\n        universalResponse.accounts = filterAccount;\n    }\n    const tonAddress = connectResponse.payload.responses.find(item => item.name === 'ton_addr');\n    const tonProof = connectResponse.payload.responses.find(item => item.name === 'ton_proof');\n    if (tonAddress && !universalResponse) { //adapt tonsdk\n        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse adapt ton data >>');\n        let address = tonAddress.address;\n        address = 'ton:' + tonAddress.network + \":\" + address;\n        let data = {\n            ton_addr: tonAddress\n        };\n        if (tonProof) {\n            data.ton_proof = tonProof;\n        }\n        universalResponse = {\n            name: \"requestAccounts\",\n            accounts: [{\n                    namespace: 'ton',\n                    addresses: [address],\n                    methods: ['ton_sendTransaction'],\n                    extra: {},\n                    data: data,\n                }]\n        };\n    }\n    (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse end universalResponse>>>', JSON.stringify(universalResponse));\n    buildAccountNameSpaces(universalResponse.accounts, result);\n    return result;\n}\nfunction buildAccountNameSpaces(accounts, result) {\n    accounts.forEach(item => {\n        var chains = [];\n        var accounts = [];\n        item.addresses.forEach(addressItem => {\n            var addressArr = addressItem.split(\":\");\n            (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse addressArr>>', addressArr.length);\n            if (addressArr.length >= 3) {\n                let chain = addressArr.slice(0, 2).join(\":\");\n                chains.push(chain);\n                accounts.push(addressItem);\n                (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse chain:>>', chain, \"addressItem:\", addressItem);\n            }\n        });\n        if (item.data && item.data.ton_addr) {\n            item.data.ton_addr.name = 'ton_addr';\n        }\n        if (item.data && item.data.ton_proof) {\n            item.data.ton_proof.name = 'ton_proof';\n        }\n        result[item.namespace] = {\n            chains: chains,\n            accounts: accounts,\n            methods: item.methods,\n            extra: item.extra,\n            payload: item.data\n        };\n        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse result>>', JSON.stringify(result));\n    });\n}\n/*export function buildTonNameSpaceByConnectResponse(connectResponse: ConnectResponseSuccess): Namespaces | undefined {\n    const tonAddrItem: TonAddressItemReply = connectResponse.payload.responses.find(\n        item => item.name === 'ton_addr'\n    ) as TonAddressItemReply;\n\n    const tonProfItem: TonProofItemReply = connectResponse.payload.responses.find(\n        item => item.name === 'ton_proof'\n    ) as TonProofItemReply;\n\n    if (!tonAddrItem) {\n        return undefined\n    }\n\n    return {\n        NameSpaceKeyTON: {\n            chains: [tonAddrItem.network],\n            accounts: [],\n            methods: connectResponse.payload.wallet.features?.ton,\n            payload: {\n                tonAccount: {\n                    address: tonAddrItem.address,\n                    chain: tonAddrItem.network,\n                    walletStateInit: tonAddrItem.walletStateInit,\n                    publicKey: tonAddrItem.publicKey\n                },\n                tonProof: tonProfItem\n            }\n        }\n    }\n}*/\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = void 0;\nconst storageconstants_1 = require(\"./storageconstants\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst utils_1 = require(\"../utils/utils\");\nconst utils_2 = require(\"../utils\");\nconst log = __importStar(require(\"../utils/log\"));\nconst utils_3 = require(\"../utils\");\nconst crypto_js_1 = require(\"crypto-js\");\nclass Storage {\n    constructor(subKey, beforeKey = undefined) {\n        const localStorage = (0, utils_1.resolveLocalStorage)();\n        // 0. check and upgrade beforeKey\n        log.logDebug('------ update before cache ------');\n        if (beforeKey) {\n            this.checkAndUpgradeCache(beforeKey, subKey);\n        }\n        // 1. load data from local storage\n        this.storeKey = '';\n        this.cipherIV = '';\n        this.subKey = subKey;\n        log.logDebug('--------get current local storage --------');\n        log.logDebug(localStorage);\n        const cacheStr = localStorage.getItem(Storage.cacheKey + subKey);\n        if (typeof cacheStr === \"undefined\" || cacheStr === null) {\n            log.logDebug(\"with no cache\");\n            this.cache = {};\n            return;\n        }\n        log.logDebug(cacheStr);\n        if ((cacheStr === null || cacheStr === void 0 ? void 0 : cacheStr.length) > 0) {\n            var cacheObj = (0, utils_2.safeJsonParse)(cacheStr);\n            this.cache = cacheObj;\n        }\n        log.logDebug(`get cache obj: ${this.cache}`);\n        if (typeof this.cache === 'undefined' || this.cache == null) {\n            this.cache = {};\n        }\n    }\n    checkAndUpgradeCache(fromCacheKey, toCacheKey) {\n        if (fromCacheKey && fromCacheKey.length > 0 && toCacheKey && toCacheKey.length > 0) {\n            // 1. get all infos from from-cache-key\n            log.logDebug('--------get current local storage --------');\n            log.logDebug(localStorage);\n            const cacheStr = localStorage.getItem(Storage.cacheKey + fromCacheKey);\n            if (typeof cacheStr === \"undefined\" || cacheStr === null) {\n                log.logDebug(\"no pre cache content\");\n                return;\n            }\n            log.logDebug(cacheStr);\n            if ((cacheStr === null || cacheStr === void 0 ? void 0 : cacheStr.length) > 0) {\n                // 2. save to to-cache-key\n                log.logDebug(\"write in cache content: \", fromCacheKey, '->', toCacheKey);\n                localStorage.setItem(Storage.cacheKey + toCacheKey, cacheStr);\n                // 3. clean from item\n                log.logDebug(\"clean in cache content: \", fromCacheKey);\n                localStorage.removeItem(Storage.cacheKey + fromCacheKey);\n            }\n        }\n        else {\n            log.logDebug('no pre cache key:', fromCacheKey);\n        }\n    }\n    saveContent(content, key, id = '-') {\n        let item = {\n            id: id,\n            timestamp: Date.now().toString(),\n            content: content\n        };\n        this.saveItem(item, key);\n    }\n    saveItem(item, key) {\n        let localKey = Storage.cacheKey + this.subKey;\n        const localStorage = (0, utils_1.resolveLocalStorage)();\n        log.logDebug(this.cache);\n        log.logDebug(`get cache obj: ${this.cache}, ${key}, ${item}`);\n        this.cache[key] = item;\n        let totalCacheStr = (0, utils_2.safeJsonStringify)(this.cache);\n        log.logDebug(`STORAGE: ${key} @ ${this.cache}`);\n        localStorage.setItem(localKey, totalCacheStr);\n    }\n    getItem(key) {\n        log.logDebug(`STORAGE >> getItem: ${key} @ ${this.cache}`);\n        return this.cache[key];\n    }\n    getCachedPBKDF2InfoKey() {\n        var _a, _b, _c, _d;\n        const pwLen = 32;\n        const saltLen = 24;\n        if (this.storeKey.length > 0 && ((_a = this.cipherIV) === null || _a === void 0 ? void 0 : _a.length) > 0) {\n            return {\n                pw: this.storeKey,\n                iv: this.cipherIV\n            };\n        }\n        let salt = (_b = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGER_CRYPTO_SALT)) === null || _b === void 0 ? void 0 : _b.content;\n        if (!salt) {\n            salt = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(saltLen));\n            this.saveContent(salt, storageconstants_1.OKXCONNECTOR_STORAGER_CRYPTO_SALT);\n        }\n        let pw = (_c = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD)) === null || _c === void 0 ? void 0 : _c.content;\n        if (!pw) {\n            pw = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(pwLen));\n            this.saveContent(pw, storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD);\n        }\n        let cipherIV = (_d = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV)) === null || _d === void 0 ? void 0 : _d.content;\n        if (!cipherIV) {\n            // let ivBuffer = Buffer.from(nacl.randomBytes(16))\n            let ivBuffer = tweetnacl_1.default.randomBytes(16);\n            cipherIV = (0, utils_1.toHexString)(ivBuffer);\n            this.saveContent(cipherIV, storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV);\n        }\n        this.cipherIV = cipherIV;\n        this.storeKey = (0, crypto_js_1.PBKDF2)(pw, salt, { iterations: 10 }).toString();\n        return {\n            pw: this.storeKey,\n            iv: this.cipherIV\n        };\n    }\n    encryptStoreMsg(msg, key) {\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg start ${Date.now()}`);\n        let storeInfo = this.getCachedPBKDF2InfoKey();\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg mid ${Date.now()}`);\n        var result = crypto_js_1.AES.encrypt(msg, storeInfo.pw).toString();\n        this.saveContent(result, key);\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg end ${Date.now()}`);\n    }\n    getAndDecrypt(key) {\n        (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt start ${Date.now()}`);\n        let item = this.getItem(key);\n        if (item && item.content) {\n            let storeInfo = this.getCachedPBKDF2InfoKey();\n            (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt mid ${Date.now()}`);\n            let result = crypto_js_1.AES.decrypt(item.content, storeInfo.pw).toString(crypto_js_1.enc.Utf8);\n            (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt end ${Date.now()}`);\n            return result;\n        }\n        return null;\n    }\n    clearCache(key = undefined) {\n        if (key === undefined) {\n            // clean all\n            this.cache = {};\n            let localKey = Storage.cacheKey + this.subKey;\n            localStorage.setItem(localKey, '');\n        }\n        else {\n            let localKey = Storage.cacheKey + this.subKey;\n            const localStorage = (0, utils_1.resolveLocalStorage)();\n            log.logDebug(this.cache);\n            this.cache[key] = null;\n            let totalCacheStr = (0, utils_2.safeJsonStringify)(this.cache);\n            log.logDebug(`STORAGE: clean key ${key} @ ${this.cache}`);\n            localStorage.setItem(localKey, totalCacheStr);\n        }\n    }\n}\nexports.Storage = Storage;\nStorage.cacheKey = 'OKXStorageKey';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCONNECTOR_STORAGE_PROTOCOL_CACHE = exports.OKXCONNECTOR_STORAGE_CIPHER_METHOD = exports.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV = exports.OKXCONNECTOR_STORAGER_CRYPTO_SALT = exports.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD = exports.OKXCONNECTOR_TON_KEY = exports.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE = exports.OKXCONNECTOR_TOKEN_CACHE = exports.OKXCONNECTOR_JWT_KEY = exports.OKXCONNECTOR_SESSION_PREFIX_KEY = exports.OKXCONNECTOR_CRYPTO_KEY = exports.OKXCONNECTOR_CACHE_KEY_DAPP = exports.OKXCONNECTOR_CACHE_KEY = void 0;\nexports.OKXCONNECTOR_CACHE_KEY = \"ck\";\nexports.OKXCONNECTOR_CACHE_KEY_DAPP = \"ck_dapp\";\nexports.OKXCONNECTOR_CRYPTO_KEY = \"cck_k\";\nexports.OKXCONNECTOR_SESSION_PREFIX_KEY = \"cspk_\";\nexports.OKXCONNECTOR_JWT_KEY = \"cjk_k\";\nexports.OKXCONNECTOR_TOKEN_CACHE = \"ct\";\nexports.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE = \"csp\";\nexports.OKXCONNECTOR_TON_KEY = \"OKXStorage_ctc\";\nexports.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD = \"scp\";\nexports.OKXCONNECTOR_STORAGER_CRYPTO_SALT = \"scs\";\nexports.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV = \"scpc\";\nexports.OKXCONNECTOR_STORAGE_CIPHER_METHOD = \"aes-256-cbc\";\nexports.OKXCONNECTOR_STORAGE_PROTOCOL_CACHE = 'okx_connect_split_cache_key';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnectionManagerEvent = exports.WalletConnectionManagerTopicInfoCacheKey = void 0;\nexports.WalletConnectionManagerTopicInfoCacheKey = \"wcmtic\";\nexports.WalletConnectionManagerEvent = {\n    RECEIVE_REQUEST: \"payload\"\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnectionManager = void 0;\nconst connect_1 = require(\"./connect\");\nconst commands_1 = require(\"./commands\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst jwtconstants_1 = require(\"./jwtconstants\");\nconst constants_1 = require(\"./constants\");\nconst walletConnectionConstants_1 = require(\"./walletConnectionConstants\");\nconst connectionSplitPackages_1 = require(\"./connectionSplitPackages\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils/utils\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst jwt_1 = require(\"./jwt\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst utils_2 = require(\"../utils\");\nclass WalletConnectionManager {\n    constructor() {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.communicateEvents = new eventemitter3_1.EventEmitter();\n        this.splitManager = new connectionSplitPackages_1.ConnectionSplitPackages('wallet');\n        log.logDebug('connect manager construct');\n        // local storage\n        this.connectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n        this.jwtKeyPair = this.getCachedJWTKeyPair();\n        this.saveJWTKeyPair(this.jwtKeyPair);\n        // wss connection\n        this.connector = new connect_1.OKXWalletConnector(constants_1.OKXCONNECTOR_WS_URL_1);\n        this.packageId = Date.now();\n        // connection state\n        this.sessionCryptoInfoMap = new Map();\n        // log.logDebug(`this.connectedWalletPK  constructor   ${this.connectedWalletPK}`)\n        this.inLogin = false;\n        this.isLogined = false;\n    }\n    refreshPackageId(offset = 0) {\n        let nowDate = Date.now() + offset;\n        if (nowDate == this.packageId) {\n            this.packageId = nowDate + 1;\n        }\n        this.packageId = nowDate;\n    }\n    saveCryptoKeyPair(topicId, keyPair) {\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(keyPair);\n        // encrypt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_CRYPTO_KEY + topicId);\n    }\n    getCachedCryptoKeyPair(topicId) {\n        // decrypt kp\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_CRYPTO_KEY + topicId);\n        const content = kp;\n        if (typeof content == 'string') {\n            log.logDebug('get cached crypto key:');\n            log.logDebug(content);\n            let keyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            return keyPairInfo;\n        }\n        else {\n            this.connectStorage.clearCache();\n        }\n        return null;\n    }\n    saveJWTKeyPair(keyPair) {\n        var strkeyPair = {\n            publicKey: (0, utils_1.toHexString)(keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(keyPair.secretKey)\n        };\n        log.logDebug('save jwt kp');\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(strkeyPair);\n        log.logDebug(cacheInfo);\n        // encrypt jwt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        log.logDebug('after save jwt kp');\n    }\n    getCachedJWTKeyPair() {\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            // TODO: decrypt jwt kp\n            log.logDebug('get cached jwt kp:');\n            log.logDebug(content);\n            let strKeyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            log.logDebug('save jwt kp');\n            log.logDebug(strKeyPairInfo);\n            var keyPair = {\n                publicKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.publicKey),\n                secretKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.secretKey)\n            };\n            return keyPair;\n        }\n        else {\n            return (0, jwt_1.generateKeyPair)();\n        }\n    }\n    isTopicPublicKeyExist(topicId) {\n        log.logDebug(`isTopicPublicKeyExist  ===> ${topicId}`);\n        return this.sessionCryptoInfoMap.get(topicId);\n    }\n    makeJWT(timestampStr) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, jwt_1.signJWT)(timestampStr, jwtconstants_1.OKXCONNECTOR_JWT_WALLET_SIDE, jwtconstants_1.OKXCONNECTOR_JWT_TTL, // 24h\n            this.jwtKeyPair);\n        });\n    }\n    parseInternalMsg(internalMsg) {\n        try {\n            let internalObj = (0, safejson_1.safeJsonParse)(internalMsg);\n            let origin = internalObj['ivur-igbfft-ptjip'];\n            if (origin && origin.length > 0) {\n                let originContent = (0, utils_2.base64decode)(origin, true);\n                return originContent.toString();\n            }\n        }\n        catch (error) {\n            log.logError('parse internal msg', error);\n        }\n    }\n    updateClientId(topic, clientId) {\n        let sessionInfo = this.sessionCryptoInfoMap.get(topic);\n        (0, log_1.logDebug)('updateClientId', sessionInfo, topic, clientId);\n        if (sessionInfo && clientId && clientId.length > 0) {\n            if (sessionInfo.cid) {\n                // check\n                let lastCheck = (0, utils_1.getLastSixMd5Hash)(clientId);\n                if (sessionInfo.cid == lastCheck) {\n                    sessionInfo.dappPublicKey = clientId;\n                }\n                else {\n                    log.logError('cid check failed', sessionInfo, topic, clientId);\n                }\n            }\n            else {\n                sessionInfo.dappPublicKey = clientId;\n            }\n            // \n            this.syncCacheSessionInfo();\n        }\n        return false;\n    }\n    parsePackage(topic_1, input_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, input, ignoreACK = false) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s;\n            this.events.emit(input.id, input);\n            // emit event\n            let sessionInfo = this.sessionCryptoInfoMap.get(topic);\n            log.logDebug('get sessionInfo for decrypt topic:', topic);\n            log.logDebug('get sessionInfo for decrypt:', input.id, topic, sessionInfo, this.sessionCryptoInfoMap);\n            let ignoreReceive = false;\n            if (sessionInfo && input.params.data) {\n                if ((_a = input.params.data) === null || _a === void 0 ? void 0 : _a.message) {\n                    // try parse internal message\n                    if ((_b = input.params.data) === null || _b === void 0 ? void 0 : _b.isInternalData) {\n                        let inner_message = (_c = input.params.data) === null || _c === void 0 ? void 0 : _c.message;\n                        let inner_topic = (_d = input.params.data) === null || _d === void 0 ? void 0 : _d.topic;\n                        let originContent = this.parseInternalMsg(inner_message);\n                        (0, log_1.logDebug)('parse internal origin: ', originContent);\n                        if (originContent && originContent.length > 0) {\n                            this.communicateEvents.emit(\"origin\", originContent, inner_topic);\n                        }\n                    }\n                    else {\n                        // try parse message base64\n                        try {\n                            let message = (_e = input.params.data) === null || _e === void 0 ? void 0 : _e.message;\n                            if (message.trimStart().startsWith('{')) {\n                                // 判断是否是分包数据\n                                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(message);\n                                if (msgPlayloadObject) {\n                                    (0, log_1.logDebug)('parse split msg object: ', msgPlayloadObject);\n                                    // 屏蔽后续的receive逻辑\n                                    ignoreReceive = true;\n                                    let msgObject = {\n                                        topicId: (_g = (_f = input.params) === null || _f === void 0 ? void 0 : _f.data) === null || _g === void 0 ? void 0 : _g.topic,\n                                        messageId: (_j = (_h = input.params) === null || _h === void 0 ? void 0 : _h.data) === null || _j === void 0 ? void 0 : _j.messageId,\n                                        messageObject: msgPlayloadObject,\n                                        publishedAt: (_l = (_k = input.params) === null || _k === void 0 ? void 0 : _k.data) === null || _l === void 0 ? void 0 : _l.publishedAt,\n                                    };\n                                    let checkResult = yield this.splitManager.onReceivedPackageCheck(msgObject);\n                                    if (checkResult.completeMessageIdList) {\n                                        checkResult.completeMessageIdList.forEach((msgId) => __awaiter(this, void 0, void 0, function* () {\n                                            // 发送批量receive\n                                            this.refreshPackageId();\n                                            yield this.sendReceive(this.packageId.toString(), msgId, topic);\n                                        }));\n                                    }\n                                    // 抛出finalmessage\n                                    if (checkResult.finalMessage) {\n                                        let message = sessionInfo.crypto.decryptWallet(checkResult.finalMessage, sessionInfo.dappPublicKey);\n                                        (0, log_1.logDebug)('<<< receive msg from split:', topic, message);\n                                        this.communicateEvents.emit(topic, message);\n                                    }\n                                }\n                                else {\n                                    let messageObj = (0, safejson_1.safeJsonParse)(message);\n                                    if (messageObj.method) {\n                                        if (messageObj.method == 'session_info') {\n                                            let sessionInfoString = messageObj.params.sessionInfo;\n                                            let base64Content = (0, utils_2.base64decode)(sessionInfoString, false);\n                                            (0, log_1.logDebug)(\"wallet connection manager requset base64Content:\", base64Content);\n                                            (0, log_1.logDebug)(\"base64Content:\" + base64Content);\n                                            let inner_connection = base64Content.toObject();\n                                            this.updateClientId(topic, inner_connection.clientId);\n                                        }\n                                        (0, log_1.logDebug)('<<< parse raw msg:', topic, messageObj);\n                                        this.communicateEvents.emit(topic, message);\n                                    }\n                                }\n                            }\n                            else {\n                                let message = sessionInfo.crypto.decryptWallet((_m = input.params.data) === null || _m === void 0 ? void 0 : _m.message, sessionInfo.dappPublicKey);\n                                (0, log_1.logDebug)('<<< receive msg:', topic, message);\n                                this.communicateEvents.emit(topic, message);\n                            }\n                        }\n                        catch (error) {\n                            let message = sessionInfo.crypto.decryptWallet((_o = input.params.data) === null || _o === void 0 ? void 0 : _o.message, sessionInfo.dappPublicKey);\n                            (0, log_1.logDebug)('<<< receive msg:', topic, message);\n                            this.communicateEvents.emit(topic, message);\n                        }\n                    }\n                }\n                else {\n                }\n            }\n            // send back ACK\n            if (!ignoreACK) {\n                yield this.sendACK(input.id, true);\n                if (topic && !ignoreReceive) {\n                    let inputObj = input;\n                    if ((_q = (_p = inputObj.params) === null || _p === void 0 ? void 0 : _p.data) === null || _q === void 0 ? void 0 : _q.messageId) {\n                        this.refreshPackageId();\n                        yield this.sendReceive(this.packageId.toString(), (_s = (_r = inputObj.params) === null || _r === void 0 ? void 0 : _r.data) === null || _s === void 0 ? void 0 : _s.messageId, topic);\n                    }\n                }\n            }\n        });\n    }\n    recovrySessionInfoFromCache() {\n        // get topic ids and keys from session\n        // WalletConnectionCryptoCacheMap\n        // {[topicId]: {cryptoKeypair: {publicKey:string, secretKey:string}, dappPublicKey:clientId}}\n        let jsonStr = this.connectStorage.getAndDecrypt(walletConnectionConstants_1.WalletConnectionManagerTopicInfoCacheKey);\n        log.logDebug('get cached sessionInfos:', jsonStr);\n        if (jsonStr) {\n            let cacheMap = (0, safejson_1.safeJsonParse)(jsonStr);\n            for (let topicId in cacheMap) {\n                let topicItem = cacheMap[topicId];\n                log.logDebug('make topicItem:', topicItem);\n                let cryptoItem = {\n                    topic: topicId,\n                    crypto: new crypto_1.SessionCrypto({\n                        publicKey: topicItem.cryptoKeyPair.publicKey,\n                        secretKey: topicItem.cryptoKeyPair.secretKey\n                    }),\n                    dappPublicKey: topicItem.dappPublicKey,\n                    cid: topicItem.cid\n                };\n                this.sessionCryptoInfoMap.set(topicId, cryptoItem);\n            }\n        }\n        log.logDebug('get cached sessionInfos map:', this.sessionCryptoInfoMap);\n    }\n    syncCacheSessionInfo() {\n        let cacheMap = {};\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            log.logDebug('for each Keys', topicId);\n            if (cryptoItem) {\n                cacheMap[topicId] = {\n                    cryptoKeyPair: cryptoItem.crypto.stringifyKeypair(),\n                    dappPublicKey: cryptoItem.dappPublicKey,\n                    cid: cryptoItem.cid\n                };\n            }\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(cacheMap);\n        log.logDebug('sync cache sessionInfos:', jsonData);\n        this.connectStorage.encryptStoreMsg(jsonData, walletConnectionConstants_1.WalletConnectionManagerTopicInfoCacheKey);\n    }\n    cacheSessionInfo(topic, sessionInfo, sync = true) {\n        let dappPublicKey = sessionInfo.dappPublicKey;\n        // 1. search dapp public related topic ids\n        let duplicatedTopics = [];\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            log.logDebug('for each Keys', topicId);\n            if (cryptoItem.dappPublicKey == dappPublicKey) {\n                log.logDebug('duplicated dapp public key:', topicId, dappPublicKey);\n                duplicatedTopics.push(topicId);\n            }\n        }\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            if (duplicatedTopics.includes(topicId)) {\n                this.sessionCryptoInfoMap.delete(topicId);\n            }\n        }\n        // discard useless topics\n        log.logDebug('cleaned connect session cache:', this.sessionCryptoInfoMap);\n        // 2. remove previous connected topic ids\n        // 3. write in current topic\n        this.sessionCryptoInfoMap.set(topic, sessionInfo);\n        // TODO: search domain info and then delete \n        log.logDebug('cache sessionInfo:', topic, sessionInfo, this.sessionCryptoInfoMap);\n        if (sync) {\n            this.syncCacheSessionInfo();\n        }\n        return duplicatedTopics;\n    }\n    updateProtocolVersion(topic, protocolVersion) {\n        this.splitManager.updateTopicSenderVersion(topic, protocolVersion);\n    }\n    // add and subscribe topic\n    appendTopic(topic, sessionPublicKey, cid) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('4.1. get append Topic:', topic);\n            // 1. check if connected\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.isLogined) {\n                    var error = new Error();\n                    error.message = \"connection is not logined\";\n                    error.name = \"append error\";\n                    // throw error\n                    reject(error);\n                    return;\n                }\n                // 2. subscribe topic and session public key\n                let cryptoItem = {\n                    topic: topic,\n                    crypto: new crypto_1.SessionCrypto(),\n                    dappPublicKey: sessionPublicKey ? sessionPublicKey : \"\",\n                    cid: cid\n                };\n                let duplicatedTopics = this.cacheSessionInfo(topic, cryptoItem, false);\n                // make sure cache session info before subscribe\n                yield this.subscribeTopics(Array.from([topic]));\n                this.refreshPackageId();\n                log.logDebug(`5. subscribe callback then fetch append message: ${this.packageId}, ${topic}`);\n                log.reportLog(`5. subscribe callback then fetch append message`);\n                const timeF = new Date().getTime();\n                (0, log_1.logDebug)(\"Append --subscribe callback->\", timeF - this.timeLog);\n                resolve(duplicatedTopics);\n            }));\n        });\n    }\n    confirmAppendingTopics() {\n        this.syncCacheSessionInfo();\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.timeLog = new Date().getTime();\n            (0, log_1.logDebug)(\"[Wallet] ConnectTime---enter->\", this.timeLog);\n            log.reportLog('wallet connect connect called');\n            // 0. get cached topics and infos\n            let timestampStr = Date.now().toString();\n            var jwtToken = yield this.makeJWT(timestampStr);\n            log.logDebug(`generate jwt token: ${jwtToken}`);\n            this.connectStorage.saveContent(jwtToken, 'jwt');\n            this.recovrySessionInfoFromCache();\n            // 1.\n            return new Promise((resolve, reject) => {\n                // 1. when websocket opened\n                this.inLogin = true;\n                this.connector.onOpen(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug(`1. connector on open`);\n                    log.reportLog('1. wallet connect connect on open');\n                    const timeOne = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---open->\", timeOne - this.timeLog);\n                    //2. send jwt to login\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when login');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // throw error\n                            reject(error);\n                        }\n                        else {\n                            this.isLogined = true;\n                            resolve();\n                            // 3. subscribe cached topics\n                            log.logDebug('3. subscribe cached topics', this.sessionCryptoInfoMap);\n                            log.reportLog('3. wallet connect connect subscribe cached topics');\n                            if (this.sessionCryptoInfoMap.size > 0) {\n                                yield this.subscribeTopics(Array.from(this.sessionCryptoInfoMap.keys()));\n                            }\n                        }\n                    }));\n                    log.logDebug(`2. login called`);\n                    log.reportLog('2. wallet connect login called');\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        return yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_LOGIN,\n                        params: {\n                            token: jwtToken\n                        }\n                    });\n                }));\n                this.connector.connect().catch((err) => {\n                    (0, log_1.logDebug)('WalletConnectionManager connect error', err);\n                    reject(err);\n                });\n                // add callback\n                this.connector.addPackageParse((event) => {\n                    var _a, _b;\n                    log.logDebug(`connect: parse package`);\n                    log.logDebug(event);\n                    if (!(\"params\" in event) || !(\"data\" in event[\"params\"])) {\n                        this.parsePackage(\"\", event, true);\n                        return;\n                    }\n                    // ignore receive echo\n                    if ((_a = event.params.data) === null || _a === void 0 ? void 0 : _a.topic) {\n                        this.parsePackage((_b = event.params.data) === null || _b === void 0 ? void 0 : _b.topic, event, event.method === commands_1.CONNECT_METHOD_RECEIVE);\n                    }\n                });\n                // this.connector.addListener(safeJsonStringify(event), (rawMsg: string)=> {\n                //    rawMsg = rawMsg.replace(/'/g, '\"')\n                //    log.logDebug(`addListener ===> ${rawMsg}`)\n                //    if (typeof rawMsg !== 'undefined') {\n                //       var msgObj = safeJsonParse(rawMsg)\n                //       var msg = msgObj.message\n                //       let crypto = \n                //       var result = this.crypto.decrypt(msg, this.connectedWalletPK)\n                //       log.logDebug(`addListener ===> ${result}`)\n                //       return result\n                //    }\n                //    return undefined\n                // }, ()=>{\n                //    // emit success\n                // }, ()=>{\n                //    // emit fail\n                // })\n            });\n        });\n    }\n    // 获取对应topic session下的钱包公钥\n    // 在返回approve时需要填充到clientId字段中\n    getSessionPublicKey(topicId) {\n        if (this.isTopicPublicKeyExist(topicId)) {\n            let item = this.sessionCryptoInfoMap.get(topicId);\n            if (item) {\n                return (0, utils_1.toHexString)(item.crypto.keyPair.publicKey);\n            }\n        }\n        return undefined;\n    }\n    getCurrentCachedTopicIdList() {\n        return Array.from(this.sessionCryptoInfoMap.keys());\n    }\n    disconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            yield this.connector.disconnect();\n            //clean cached topic\n            //如果是恢复连接，就不清理解密public key\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            if (!fromRestore) {\n                this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n            }\n        });\n    }\n    sendRaw(msg, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (topic) {\n                yield this.sendMsg(topic, msg, constants_1.OKXCONNECTOR_MESSAGE_TTL);\n            }\n        });\n    }\n    sendMsg(topic, message, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (message) {\n                this.refreshPackageId();\n                const payload = {\n                    id: this.packageId.toString(),\n                    method: commands_1.CONNECT_METHOD_PUBLISH,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    params: {\n                        message: {\n                            topic: topic,\n                            message: message,\n                            ttl: ttl\n                        }\n                    } // crypted\n                };\n                this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                    // ack\n                    if (rsp && rsp.error) {\n                        log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                    }\n                    else if (rsp && !rsp.error) {\n                        log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                    }\n                }));\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    send(topic_1, msg_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, msg, needPublicKey = false, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL, useRaw = false) {\n            var _a, _b;\n            // make send msg payload\n            log.logDebug(`message send =====> ${msg}`);\n            if (!this.isTopicPublicKeyExist(topic)) {\n                // channel not ready\n                throw new Error('connection not finish');\n            }\n            let connectedDappPK = (_a = this.sessionCryptoInfoMap.get(topic)) === null || _a === void 0 ? void 0 : _a.dappPublicKey;\n            let cryptoObject = (_b = this.sessionCryptoInfoMap.get(topic)) === null || _b === void 0 ? void 0 : _b.crypto;\n            let messageObj = undefined;\n            if (useRaw) {\n                messageObj = {\n                    message: msg,\n                };\n            }\n            let useCrypto = false;\n            if (cryptoObject && connectedDappPK && !useRaw) {\n                let message = cryptoObject.encryptWallet(msg, connectedDappPK);\n                useCrypto = true;\n                messageObj = {\n                    message: message,\n                };\n            }\n            if (messageObj) {\n                if (needPublicKey && cryptoObject) {\n                    messageObj.clientId = (0, utils_1.toHexString)(cryptoObject.keyPair.publicKey);\n                    // let privateKey = toHexString(cryptoObject.keyPair.secretKey)\n                    // log.logDebug(`message send use dapp publicKey =====> ${connectedDappPK}`)\n                    // log.logDebug(`message send use publicKey =====> ${messageObj.clientId}`)\n                    // log.logDebug(`message send use secretKey =====> ${privateKey}`)\n                }\n                let messageStr = (0, safejson_1.safeJsonStringify)(messageObj);\n                if (!useRaw && useCrypto) {\n                    yield this.splitManager.sendSplitPackages(topic, messageStr, this.sendMsg.bind(this), this.sendRaw.bind(this));\n                }\n                else {\n                    yield this.sendMsg(topic, messageStr, ttl);\n                }\n            }\n        });\n    }\n    sendACK(msgId_1, success_1) {\n        return __awaiter(this, arguments, void 0, function* (msgId, success, reason = undefined) {\n            if (success === true) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    result: true\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n            else if (reason) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    error: {\n                        code: reason.code, //int\n                        message: reason.message\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    // send receive\n    sendReceive(msgId, messageId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECEIVE,\n                params: {\n                    data: {\n                        messageId: messageId,\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendUnsubscribe(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: make disconnect payload\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), {\n                id: this.packageId.toString(),\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_UNSUB,\n                params: {\n                    topic: topic\n                }\n            });\n            // remove topicId\n            this.sessionCryptoInfoMap.delete(topic);\n            this.syncCacheSessionInfo();\n        });\n    }\n    // send receive\n    // 1. fetch all \n    // 2. send back receive\n    // 3. check has more, if so, repeat from 1st step\n    sendFetchAndConsumeMessages(msgId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(msgId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic == topic) {\n                                let messageId = msg.messageId;\n                                yield this.connector.getMsgPayloadFromHistory(msg);\n                                // send receive command to relay server\n                                this.refreshPackageId();\n                                yield this.sendReceive(this.packageId.toString(), messageId, topic);\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_FETCHMSG,\n                params: {\n                    data: {\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendBatchFetchAndConsumeMessages(packageId, topicIdList) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(packageId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic) {\n                                // send receive command to relay server\n                                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(msg.message);\n                                if (msgPlayloadObject) {\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                }\n                                else {\n                                    let messageId = msg.messageId;\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                    this.refreshPackageId(i);\n                                    yield this.sendReceive(this.packageId.toString(), messageId, msg.topic);\n                                }\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendBatchFetchAndConsumeMessages(this.packageId.toString(), topicIdList);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            log.reportLog('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: packageId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_BATCH_FETCHMSG,\n                params: {\n                    topics: topicIdList,\n                    withInternalData: true\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                yield this.connector.connect();\n            }), payload);\n        });\n    }\n    cleanCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.connectStorage.clearCache();\n        });\n    }\n    saveSessionContent(key, data) {\n        if (!data) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(data);\n        this.connectStorage.encryptStoreMsg(jsonData, storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n    }\n    getSessionContent(key) {\n        let jsonStr = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        if (jsonStr) {\n            let object = (0, safejson_1.safeJsonParse)(jsonStr);\n            return object;\n        }\n        return undefined;\n    }\n    // subscribe then fetch messages for each topics\n    subscribeTopics(topicIdList) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)(\"4. topicid list\", topicIdList);\n            log.reportLog(\"4. topicid list\");\n            this.refreshPackageId();\n            const timeF = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let finishCount = 0;\n                //3. send subscribe\n                for (let idx = 0; idx < topicIdList.length; ++idx) {\n                    let topicId = topicIdList[idx];\n                    this.refreshPackageId(idx);\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when subscribe');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // reject(error)\n                            finishCount += 1;\n                            if (finishCount == topicIdList.length) {\n                                resolve();\n                            }\n                        }\n                        this.refreshPackageId(idx);\n                        const timeF = new Date().getTime();\n                        (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n                        finishCount += 1;\n                        if (finishCount == topicIdList.length) {\n                            // 4. fetch messages\n                            log.logDebug(`5. send fetch msg: ${this.packageId}, ${topicId}`);\n                            yield this.sendBatchFetchAndConsumeMessages(this.packageId.toString(), topicIdList);\n                            // 5. split manager resend\n                            yield this.splitManager.init(this.sendRaw.bind(this));\n                            resolve();\n                        }\n                    }));\n                    log.logDebug(`3. login callback then send subscribe: ${this.packageId}, ${topicId}`);\n                    log.reportLog('3. login callback then send subscribe');\n                    const timeTh = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---login callback->\", timeTh - this.timeLog);\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        return yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_SUB,\n                        params: {\n                            topic: topicId\n                        }\n                    });\n                }\n            }));\n        });\n    }\n}\nexports.WalletConnectionManager = WalletConnectionManager;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AppwalletConnector = void 0;\nconst ws_connector_1 = require(\"./ws-connector\");\nconst iconnector_1 = require(\"./iconnector\");\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../protocol/constants\");\nclass AppwalletConnector extends ws_connector_1.WsConnector {\n    static getConnector() {\n        return new AppwalletConnector();\n    }\n    constructor() {\n        super();\n        this.walletName = 'OKX App';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectApp';\n    }\n    getTag() {\n        return iconnector_1.OKX_APP_WALLET;\n    }\n    openWallet(engineConnectInfo) {\n        var _a;\n        if (engineConnectInfo && engineConnectInfo.connectRequest) {\n            let connectRequest = engineConnectInfo.connectRequest;\n            (0, utils_1.logDebug)(`appwallet-connector openwallet before useSHortLink engineConnectInfo.connectRequest JSON ${JSON.stringify(engineConnectInfo)}`);\n            if ((0, utils_1.useShortLink)()) {\n                let shortUniversalLink = (0, utils_1.getOKXLink)(connectRequest);\n                (0, utils_1.openOKXUniversalLink)(shortUniversalLink);\n            }\n            else {\n                (0, utils_1.logDebug)(`appwallet-connector openwallet else connectRequest ${connectRequest}`);\n                let appConnectEncodeParams = (0, utils_1.encodeConnectParams)(Object.assign(Object.assign({}, connectRequest), { redirect: (_a = engineConnectInfo.redirect) !== null && _a !== void 0 ? _a : \"none\" }));\n                let appDeepLink = (0, utils_1.getAppWalletDeepLink)(appConnectEncodeParams);\n                (0, utils_1.openOKXDeeplinkWithFallback)(appDeepLink);\n            }\n        }\n        else {\n            if ((0, utils_1.isOS)('android')) {\n                (0, utils_1.openDeeplinkWithFallback)(constants_1.stackDeepLink, () => { });\n            }\n            else {\n                (0, utils_1.openLinkBlank)(constants_1.standardUniversalLink);\n            }\n        }\n    }\n}\nexports.AppwalletConnector = AppwalletConnector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_TG_WALLET = exports.OKX_APP_WALLET = exports.OKX_INJECT_WALLET = void 0;\nexports.OKX_INJECT_WALLET = \"okx_inject_wallet\";\nexports.OKX_APP_WALLET = \"okx_app_wallet\";\nexports.OKX_TG_WALLET = \"okx_tg_wallet\";\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OkxwalletInjectConnector = exports.WsConnector = exports.TgwalletConnector = exports.InjectConnector = exports.OKX_INJECT_WALLET = exports.OKX_APP_WALLET = exports.OKX_TG_WALLET = exports.AppwalletConnector = void 0;\nvar appwallet_connector_1 = require(\"./appwallet-connector\");\nObject.defineProperty(exports, \"AppwalletConnector\", { enumerable: true, get: function () { return appwallet_connector_1.AppwalletConnector; } });\nvar iconnector_1 = require(\"./iconnector\");\nObject.defineProperty(exports, \"OKX_TG_WALLET\", { enumerable: true, get: function () { return iconnector_1.OKX_TG_WALLET; } });\nObject.defineProperty(exports, \"OKX_APP_WALLET\", { enumerable: true, get: function () { return iconnector_1.OKX_APP_WALLET; } });\nObject.defineProperty(exports, \"OKX_INJECT_WALLET\", { enumerable: true, get: function () { return iconnector_1.OKX_INJECT_WALLET; } });\nvar inject_connector_1 = require(\"./inject-connector\");\nObject.defineProperty(exports, \"InjectConnector\", { enumerable: true, get: function () { return inject_connector_1.InjectConnector; } });\nvar tgwallet_connector_1 = require(\"./tgwallet-connector\");\nObject.defineProperty(exports, \"TgwalletConnector\", { enumerable: true, get: function () { return tgwallet_connector_1.TgwalletConnector; } });\nvar ws_connector_1 = require(\"./ws-connector\");\nObject.defineProperty(exports, \"WsConnector\", { enumerable: true, get: function () { return ws_connector_1.WsConnector; } });\nvar okxwallet_inject_connector_1 = require(\"./okxwallet-inject-connector\");\nObject.defineProperty(exports, \"OkxwalletInjectConnector\", { enumerable: true, get: function () { return okxwallet_inject_connector_1.OkxwalletInjectConnector; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InjectConnector = void 0;\nconst protocol_1 = require(\"../protocol\");\nconst utils_1 = require(\"../utils\");\nconst iconnector_1 = require(\"./iconnector\");\nconst SolProvider_1 = require(\"../inject/provider/SolProvider\");\nconst wallet_info_1 = require(\"../protocol/connect/wallet-info\");\nconst AptosProvider_1 = require(\"../inject/provider/AptosProvider\");\nconst media_1 = require(\"../utils/media\");\nconst TONProvider_1 = require(\"../inject/provider/TONProvider\");\nconst inject_1 = require(\"../inject\");\nconst sui_provider_1 = require(\"../inject/provider/sui-provider\");\nconst utils_2 = require(\"../utils/utils\");\nconst sessionUtils_1 = require(\"../connect/sessionUtils\");\nclass InjectConnector {\n    constructor() {\n        this.disconnectListener = [];\n        this.providerMap = new Map();\n        this.accountChangedEVMHandler = null;\n        this.accountChangedSolanaPublicKeyHandler = null;\n        this.accountChangedTONHandler = null;\n        this.disconnectHandler = null;\n        this.walletName = \"\";\n        this.walletNameKey = '';\n        this.enable = true;\n        this.providerMap.set(protocol_1.NameSpaceKeyEip155, new inject_1.Eip155Provider());\n        this.providerMap.set(protocol_1.NameSpaceKeySOL, new SolProvider_1.SolProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeyAptos, new AptosProvider_1.AptosProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeyTON, new TONProvider_1.TONProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeySui, new sui_provider_1.SuiProvider());\n    }\n    setAccountChangeListener(accountChangeListener) {\n        (0, utils_1.logDebug)(\"setAccountChangeListener: inject\", accountChangeListener);\n        this.accountChangeListener = accountChangeListener;\n    }\n    setConnectionManager(connectionManager) {\n        this.connectionManager = connectionManager;\n    }\n    getInjectProvider(nameSpace) {\n        for (const [mapKey, value] of this.providerMap.entries()) {\n            if (nameSpace.includes(mapKey)) {\n                return value;\n            }\n        }\n        return undefined;\n    }\n    openWallet(engineConnectInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c;\n            (0, utils_1.logDebug)(\"InjectEngine connect begin:\", JSON.stringify(engineConnectInfo));\n            if (!engineConnectInfo) {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR);\n            }\n            this.dappInfo = engineConnectInfo.connectRequest.dAppInfo;\n            var universalConnectRequest = engineConnectInfo.connectRequest;\n            try {\n                if (window && window.okxwallet) {\n                    if (universalConnectRequest.requests) {\n                        let requestAccounts = universalConnectRequest.requests\n                            .find(item => item.name === \"requestAccounts\");\n                        let version = yield window.okxwallet.getVersion();\n                        let result = {\n                            method: \"connect\",\n                            requestId: universalConnectRequest.requestId,\n                            payload: {\n                                wallet: {\n                                    platform: (_a = navigator.platform) !== null && _a !== void 0 ? _a : \"/\",\n                                    appName: wallet_info_1.OKXInjectWalletName,\n                                    appVersion: version !== null && version !== void 0 ? version : \"1.0.0\",\n                                    maxProtocolVersion: 1,\n                                },\n                                responses: []\n                            },\n                        };\n                        let responseItem = {\n                            name: \"requestAccounts\",\n                            accounts: [],\n                        };\n                        result.payload.responses.push(responseItem);\n                        yield this.disconnect();\n                        const required = (_b = requestAccounts.requiredNamespaces) !== null && _b !== void 0 ? _b : [];\n                        const optional = (_c = requestAccounts.optionalNamespaces) !== null && _c !== void 0 ? _c : [];\n                        let needPop = true;\n                        let signalChain = false;\n                        if (required.length + optional.length === 1 && !(0, media_1.isDevice)(\"mobile\")) {\n                            const singleItem = required.length === 1 ? required[0] : optional[0];\n                            const singleProvider = this.getInjectProvider(singleItem.namespace);\n                            yield (singleProvider === null || singleProvider === void 0 ? void 0 : singleProvider.connect(singleItem, this.dappInfo));\n                            signalChain = true;\n                            needPop = false;\n                        }\n                        var accounts = yield this.getAccountByRequestWallets(needPop, false, signalChain, required, optional);\n                        if (accounts) {\n                            responseItem.accounts.push(...accounts);\n                            if (responseItem.accounts.length === 0) {\n                                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect connectAccounts is null\");\n                            }\n                        }\n                        else {\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect requestWallets is null\");\n                        }\n                        if (this.connectResultListener) {\n                            if (this.disconnectHandler) {\n                                window.okxwallet.removeListener('disconnect', this.disconnectHandler);\n                            }\n                            this.disconnectHandler = () => {\n                                console.log(\"window.okxwallet disconnect:\");\n                                this.disconnectListener.forEach(listener => listener());\n                                this.disconnectListener = [];\n                            };\n                            window.okxwallet.on('disconnect', this.disconnectHandler);\n                            this.connectResultListener(result);\n                        }\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR);\n                }\n            }\n            catch (error) {\n                var code = protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR;\n                var message = '';\n                if (error instanceof protocol_1.OKXConnectError) {\n                    code = error.code;\n                    message = error.message;\n                }\n                if (this.connectResultListener) {\n                    this.connectResultListener({\n                        requestId: \"-1\",\n                        method: 'connect_error',\n                        payload: {\n                            code: code\n                        }\n                    });\n                }\n            }\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, utils_1.logDebug)('InjectEngine ==>> disconnect  okxwallet.disconnect()');\n            if (window.okxwallet) {\n                yield window.okxwallet.disconnect();\n                (0, utils_1.logDebug)('InjectEngine ==>> disconnect end okxwallet.disconnect()');\n            }\n        });\n    }\n    getRequestId() {\n        const requestId = Date.now().toString();\n        (0, utils_1.logDebug)('InjectEngine ==>> getRequestId ==>', requestId);\n        return requestId;\n    }\n    send(request, requestAnswer) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                (0, utils_1.logDebug)(\"InjectEngine send  > request:\", (0, utils_1.safeJsonStringify)(request));\n                let newRequest = request;\n                if (newRequest.method === 'disconnect') {\n                    yield this.disconnect();\n                    this.disconnectListener.forEach(listener => listener());\n                    this.disconnectListener = [];\n                    (_a = requestAnswer.onAck) === null || _a === void 0 ? void 0 : _a.call(requestAnswer);\n                    return;\n                }\n                yield this.checkWalletMatch();\n                const injectProvider = this.getInjectProvider(newRequest.chainId);\n                if (injectProvider) {\n                    injectProvider.send(newRequest).then(result => {\n                        var _a;\n                        (0, utils_1.logDebug)(\"InjectEngine ==>> send > result:\", result);\n                        (_a = requestAnswer.resolve) === null || _a === void 0 ? void 0 : _a.call(requestAnswer, result);\n                    }).catch(error => {\n                        var _a;\n                        let code = error.code;\n                        if (code === 4001) {\n                            code = protocol_1.OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR;\n                        }\n                        let errorResponse = {\n                            requestId: this.getRequestId(),\n                            method: request.method,\n                            error: {\n                                code: code,\n                                message: error.message\n                            }\n                        };\n                        (0, utils_1.logDebug)(\"InjectEngine ==>> send > errorResponse:\", JSON.stringify(errorResponse));\n                        (_a = requestAnswer.resolve) === null || _a === void 0 ? void 0 : _a.call(requestAnswer, errorResponse);\n                    });\n                    return;\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"InjectEngine ==>> send  ===> error:\", error);\n                return Promise.reject(error);\n            }\n        });\n    }\n    checkWalletMatch() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                var _a;\n                let sessionLocal = (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getSessionContent('connectSession');\n                if (!sessionLocal) {\n                    reject(new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED));\n                }\n                this.restoreconnect(sessionLocal, (session) => {\n                    if (session) {\n                        resolve();\n                    }\n                    else {\n                        reject(new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED));\n                    }\n                });\n            });\n        });\n    }\n    checkAccountChanged() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                let sessionLocal = (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getSessionContent('connectSession');\n                if (!sessionLocal) {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED);\n                }\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --sessionInfo:\", JSON.stringify(sessionLocal));\n                let requiredNamespaces = this.getRequireNameSpaceFromSession(sessionLocal);\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --requiredNamespaces:\", JSON.stringify(requiredNamespaces));\n                // 使用 await 等待异步操作完成\n                let accounts = yield this.getAccountByRequestWallets(false, true, false, requiredNamespaces, []);\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --accounts:\", JSON.stringify(accounts));\n                if (accounts) {\n                    let resultNameSpace = {};\n                    (0, sessionUtils_1.buildAccountNameSpaces)(accounts, resultNameSpace);\n                    if (!this.compareAndModifyNamespaces(sessionLocal.namespaces, resultNameSpace)) {\n                        (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --result sessionLocal:\", JSON.stringify(sessionLocal));\n                        if (this.accountChangeListener) {\n                            (0, utils_1.logDebug)(\"inject-connector checkAccountChanged -accountChangeListener:\", this.accountChangeListener);\n                            this.accountChangeListener(sessionLocal);\n                        }\n                        else {\n                            (0, utils_1.logDebug)(\"inject-connector checkAccountChanged disconnect:\");\n                            yield this.disconnect();\n                        }\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect requestWallets is null\");\n                }\n            }\n            catch (e) {\n                (0, utils_1.logDebug)(\"inject-connector restoreconnect catch error\", JSON.stringify(e));\n                throw e;\n            }\n        });\n    }\n    compareAndModifyNamespaces(nameSpaces1, nameSpaces2) {\n        let isAccountsSame = true;\n        for (const key in nameSpaces1) {\n            if (nameSpaces2[key]) {\n                const ns1 = nameSpaces1[key];\n                const ns2 = nameSpaces2[key];\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged ns1:\", JSON.stringify(ns1));\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged ns2:\", JSON.stringify(ns2));\n                const areAccountsSame = JSON.stringify([...ns1.accounts].sort()) === JSON.stringify([...ns2.accounts].sort());\n                if (!areAccountsSame) {\n                    isAccountsSame = false;\n                    ns1.accounts = [...ns2.accounts];\n                    ns1.extra = Object.assign({}, ns2.extra);\n                    ns1.payload = Object.assign({}, ns2.payload);\n                }\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged new ns1:\", JSON.stringify(ns1));\n            }\n        }\n        (0, utils_1.logDebug)(`inject-connector checkAccountChanged compareAndModifyNamespaces ===> ${isAccountsSame}`);\n        return isAccountsSame;\n    }\n    clearData() {\n        this.connectResultListener = undefined;\n    }\n    addDisconnectListener(disconnecter) {\n        this.disconnectListener.push(disconnecter);\n    }\n    setOnConnectResultListener(connectResultListener) {\n        this.connectResultListener = connectResultListener;\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (_ = false) {\n        });\n    }\n    getCurrentConnectionReady(namespaceKeys) {\n        if (!namespaceKeys) {\n            return false;\n        }\n        const allReady = namespaceKeys.every(namespaceKey => { var _a; return (_a = this.getInjectProvider(namespaceKey)) === null || _a === void 0 ? void 0 : _a.connectReady(); });\n        return allReady;\n    }\n    getTag() {\n        return iconnector_1.OKX_INJECT_WALLET;\n    }\n    toJSON() {\n        return \"inject-connector\";\n    }\n    getRequireNameSpaceFromSession(sessionInfo) {\n        var _a, _b;\n        var requiredNamespaces = [];\n        for (let namespacesKey in sessionInfo.namespaces) {\n            let nameSpace = sessionInfo.namespaces[namespacesKey];\n            let connectWalletNameSpace = {\n                namespace: namespacesKey,\n                chains: nameSpace.chains\n            };\n            if (namespacesKey === protocol_1.NameSpaceKeyAptos) {\n                let aptosChains = [];\n                nameSpace.chains.forEach((chainStr) => {\n                    let aptosChain = (0, utils_2.replaceChainNameToChainId)(chainStr);\n                    aptosChains.push(aptosChain);\n                });\n                connectWalletNameSpace = {\n                    namespace: namespacesKey,\n                    chains: aptosChains\n                };\n            }\n            else if (namespacesKey === protocol_1.NameSpaceKeyTON) {\n                let ton_proof_result_Item = undefined;\n                let proofItem = undefined;\n                if ((_a = nameSpace.payload) === null || _a === void 0 ? void 0 : _a.ton_proof) {\n                    ton_proof_result_Item = (_b = nameSpace.payload) === null || _b === void 0 ? void 0 : _b.ton_proof;\n                    if (ton_proof_result_Item.proof.payload) {\n                        proofItem = {\n                            name: \"ton_proof\",\n                            payload: ton_proof_result_Item.proof.payload\n                        };\n                    }\n                }\n                connectWalletNameSpace = {\n                    namespace: namespacesKey,\n                    chains: nameSpace.chains,\n                    params: {\n                        ton_addr: { name: 'ton_addr' },\n                        ton_proof: proofItem\n                    },\n                };\n            }\n            requiredNamespaces.push(connectWalletNameSpace);\n        }\n        return requiredNamespaces;\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        var _a;\n        if (!window.okxwallet) {\n            onConnectResult(null);\n            return;\n        }\n        this.dappInfo = (_a = sessionInfo.sessionConfig) === null || _a === void 0 ? void 0 : _a.dappInfo;\n        (0, utils_1.logDebug)(\"inject-connector restoreconnect --sessionInfo:\", JSON.stringify(sessionInfo));\n        var requiredNamespaces = this.getRequireNameSpaceFromSession(sessionInfo);\n        (0, utils_1.logDebug)(\"inject-connector restoreconnect --requiredNamespaces:\", JSON.stringify(requiredNamespaces));\n        this.getAccountByRequestWallets(false, false, false, requiredNamespaces, [])\n            .then((accounts) => {\n            (0, utils_1.logDebug)(\"inject-connector restoreconnect --accounts:\", JSON.stringify(accounts));\n            //compare account with sessionInfo\n            let allEqual = true;\n            for (let namespacesKey in sessionInfo.namespaces) {\n                var accountsItem = accounts.find((item) => item.namespace === namespacesKey);\n                var sessionAccounts = sessionInfo.namespaces[namespacesKey].accounts;\n                if (!accountsItem) {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"resotreconnect error: accountItem error\");\n                }\n                const areEqual = accountsItem.addresses.length === sessionAccounts.length &&\n                    accountsItem.addresses.slice().sort().every((value, index) => {\n                        if (namespacesKey === protocol_1.NameSpaceKeyAptos) {\n                            let aptosAdd = sessionAccounts.slice().sort()[index];\n                            (0, utils_1.logDebug)(\"check aptos address -value and aptosAdd--\", value, aptosAdd);\n                            aptosAdd = (0, utils_2.replaceChainNameToChainId)(aptosAdd);\n                            return aptosAdd === value;\n                        }\n                        else {\n                            return value === sessionAccounts.slice().sort()[index];\n                        }\n                    });\n                if (!areEqual) {\n                    allEqual = false;\n                }\n            }\n            if (allEqual) {\n                onConnectResult(sessionInfo);\n            }\n            else {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"resotreconnect error: address not as same as session\");\n            }\n        }).catch((e) => {\n            (0, utils_1.logDebug)(\"inject-connector restoreconnect catch error\", JSON.stringify(e));\n            onConnectResult(null);\n        });\n    }\n    getAccountByRequestWallets(needPop, isAccountChange, signalChain, requiredNamespaces, optionalNamespaces) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                var walletInfo = [];\n                var accountResult = [];\n                if ((0, media_1.isDevice)(\"mobile\")) {\n                    var walletInfoItem = yield window.okxwallet.connectWallet(needPop, {\n                        requiredNamespaces: requiredNamespaces,\n                        optionalNamespaces: optionalNamespaces\n                    });\n                    walletInfo.push(walletInfoItem);\n                }\n                else {\n                    walletInfo = (yield window.okxwallet.requestWallets(needPop));\n                }\n                var allNameSpace = [...(requiredNamespaces !== null && requiredNamespaces !== void 0 ? requiredNamespaces : []), ...(optionalNamespaces !== null && optionalNamespaces !== void 0 ? optionalNamespaces : [])];\n                let walletInfoFirst = walletInfo[0];\n                (0, utils_1.logDebug)(\" InjectEngine connect connectAccounts:\", JSON.stringify(walletInfoFirst));\n                let eventkey;\n                let hasTON = false;\n                if (allNameSpace && walletInfoFirst && walletInfoFirst.address) {\n                    for (const [mapKey, provider] of this.providerMap.entries()) {\n                        let itemResult = yield provider.parseConnectResponse(needPop, isAccountChange, signalChain, allNameSpace, walletInfoFirst, this.dappInfo);\n                        if (itemResult) {\n                            eventkey = mapKey;\n                            accountResult.push(itemResult);\n                            if (mapKey === protocol_1.NameSpaceKeyTON) {\n                                hasTON = true;\n                            }\n                        }\n                    }\n                }\n                // check require\n                let cheeckRequire = requiredNamespaces.every(requireItem => {\n                    // requireItem.namespace\n                    let resultSel = accountResult.find(resultItem => {\n                        return resultItem.namespace === requireItem.namespace;\n                    });\n                    if (resultSel) {\n                        let hasChainAdd = requireItem.chains.every(chain => {\n                            let addItem = resultSel.addresses.find(address => {\n                                return address.startsWith(chain + \":\");\n                            });\n                            return !!addItem;\n                        });\n                        return hasChainAdd;\n                    }\n                    return false;\n                });\n                (0, utils_1.logDebug)(\"InjectEngine connect requiredNamespaces:\", JSON.stringify(requiredNamespaces));\n                (0, utils_1.logDebug)(\"InjectEngine connect accountResult:\", JSON.stringify(accountResult));\n                if (!cheeckRequire) {\n                    yield this.disconnect();\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED);\n                }\n                if (!(0, media_1.isDevice)(\"mobile\")) {\n                    this.configEventWithKey(eventkey, hasTON);\n                    yield window.okxwallet.requestWallets(needPop);\n                }\n                return accountResult;\n            }\n            catch (e) {\n                if (e && typeof e === \"object\" && \"code\" in e) {\n                    if (e.code === 4001) {\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR);\n                    }\n                }\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n            }\n        });\n    }\n    configEventWithKey(key, hasTON) {\n        if (window.okxwallet && key) {\n            if (this.accountChangedEVMHandler) {\n                window.okxwallet.removeListener('accountsChanged', this.accountChangedEVMHandler);\n            }\n            if (this.accountChangedSolanaPublicKeyHandler) {\n                window.okxwallet.solana.removeListener('accountChanged', this.accountChangedSolanaPublicKeyHandler);\n                window.okxwallet.sui.removeListener('accountChanged', this.accountChangedSolanaPublicKeyHandler);\n            }\n            if (this.accountChangedTONHandler) {\n                window.okxTonWallet.tonconnect.off('accountChanged', this.accountChangedTONHandler);\n            }\n            if (hasTON) {\n                console.log(\"window.okxwallet configEventWithKey:\", key);\n                this.accountChangedTONHandler = () => {\n                    console.log(\"window.okxwallet configEventWithKey_TON:\", Date.now(), key);\n                    this.checkAccountChanged().catch(e => {\n                        console.log(\"window.okxwallet configEventWithKey error: \", e);\n                    });\n                };\n                window.okxTonWallet.tonconnect.on('accountChanged', this.accountChangedTONHandler);\n            }\n            else {\n                switch (key) {\n                    case protocol_1.NameSpaceKeyEip155:\n                        {\n                            console.log(\"window.okxwallet configEventWithKey:\", key);\n                            this.accountChangedEVMHandler = (accounts) => {\n                                console.log(\"window.okxwallet configEventWithKey_evm:\", Date.now(), key, accounts);\n                                if (accounts && accounts.length > 0) { //\n                                    this.checkAccountChanged().catch(e => {\n                                        console.log(\"window.okxwallet configEventWithKey error: \", e);\n                                    });\n                                }\n                            };\n                            window.okxwallet.on('accountsChanged', this.accountChangedEVMHandler);\n                        }\n                        break;\n                    case protocol_1.NameSpaceKeySOL:\n                        {\n                            console.log(\"window.okxwallet configEventWithKey:\", key);\n                            this.accountChangedSolanaPublicKeyHandler = (publicKey) => {\n                                console.log(\"window.okxwallet configEventWithKey_solana:\", Date.now(), key, publicKey);\n                                if (publicKey) {\n                                    this.checkAccountChanged().catch(e => {\n                                        console.log(\"window.okxwallet configEventWithKey error: \", e);\n                                    });\n                                }\n                            };\n                            window.okxwallet.solana.on('accountChanged', this.accountChangedSolanaPublicKeyHandler);\n                        }\n                        break;\n                    case protocol_1.NameSpaceKeySui:\n                        {\n                            console.log(\"window.okxwallet configEventWithKey:\", key);\n                            this.accountChangedSolanaPublicKeyHandler = (publicKey) => {\n                                console.log(\"window.okxwallet configEventWithKey_sui:\", Date.now(), key, publicKey);\n                                if (publicKey) {\n                                    this.checkAccountChanged().catch(e => {\n                                        console.log(\"window.okxwallet configEventWithKey error: \", e);\n                                    });\n                                }\n                            };\n                            window.okxwallet.sui.on('accountChanged', this.accountChangedSolanaPublicKeyHandler);\n                        }\n                        break;\n                    case protocol_1.NameSpaceKeyTON:\n                        {\n                            console.log(\"window.okxwallet configEventWithKey:\", key);\n                        }\n                        break;\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n}\nexports.InjectConnector = InjectConnector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OkxwalletInjectConnector = void 0;\nconst inject_connector_1 = require(\"./inject-connector\");\nclass OkxwalletInjectConnector extends inject_connector_1.InjectConnector {\n    static getConnector() {\n        return new OkxwalletInjectConnector();\n    }\n    constructor() {\n        super();\n        this.walletName = 'OKX Wallet extension';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectInjected';\n    }\n}\nexports.OkxwalletInjectConnector = OkxwalletInjectConnector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TgwalletConnector = void 0;\nconst ws_connector_1 = require(\"./ws-connector\");\nconst iconnector_1 = require(\"./iconnector\");\nconst utils_1 = require(\"../utils\");\nclass TgwalletConnector extends ws_connector_1.WsConnector {\n    static getConnector() {\n        return new TgwalletConnector();\n    }\n    constructor() {\n        super();\n        this.walletName = 'OKX Mini Wallet';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectMini';\n    }\n    getTag() {\n        return iconnector_1.OKX_TG_WALLET;\n    }\n    openWallet(engineConnectInfo) {\n        var _a;\n        var encodeTGParams;\n        if (engineConnectInfo && engineConnectInfo.connectRequest) {\n            encodeTGParams = (0, utils_1.encodeTWAConnectURLParams)(Object.assign(Object.assign({}, engineConnectInfo.connectRequest), { redirect: \"none\" }));\n        }\n        var tgUrl = (0, utils_1.getTelegramWalletTWAUrl)(encodeTGParams, (_a = engineConnectInfo === null || engineConnectInfo === void 0 ? void 0 : engineConnectInfo.tmaReturnUrl) !== null && _a !== void 0 ? _a : \"back\");\n        (0, utils_1.openOKXTMAWalletlinkWithFallback)(tgUrl);\n    }\n}\nexports.TgwalletConnector = TgwalletConnector;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WsConnector = void 0;\nconst safejson_1 = require(\"../utils/safejson\");\nconst log_1 = require(\"../utils/log\");\nclass WsConnector {\n    constructor() {\n        this.disconnectListener = [];\n        this.walletName = '';\n        this.walletNameKey = '';\n        this.enable = true;\n        this.pendingRequests = new Map();\n        // report api begin\n        (0, log_1.getDefaultReporter)().beginReport();\n    }\n    setAccountChangeListener(accountChangeListener) {\n        this.accountChangeListener = accountChangeListener;\n    }\n    setConnectionManager(connectionManager) {\n        this.connectionManager = connectionManager;\n    }\n    addConnectionListener() {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.addListener(\"sdk_response\", (event, msg) => {\n            var jsonResponse = (0, safejson_1.safeJsonParse)(msg);\n            (0, log_1.logDebug)(`Engine ==>> addListener ==> success ==> ${jsonResponse}`);\n            this.handleResponse(event, jsonResponse);\n        }, function () {\n        });\n    }\n    addDisconnectListener(disconnecter) {\n        this.disconnectListener.push(disconnecter);\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.disconnect(fromRestore));\n        });\n    }\n    openWallet(engineConnectInfo) {\n    }\n    bindRequestForPromise(requestId, resolve) {\n        this.pendingRequests.set(requestId, resolve);\n    }\n    send(request, requestAnswer, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            (0, log_1.logDebug)('Engine ==>> send  request==>', JSON.stringify(request));\n            const requestId = this.getRequestId();\n            try {\n                let packageId = yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.send(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId })), ttl));\n                if (packageId) {\n                    (_b = this.connectionManager) === null || _b === void 0 ? void 0 : _b.events.once(packageId.toString(), (event) => {\n                        var _a;\n                        (0, log_1.logDebug)(`Engine ==> send => onAck => ${(0, safejson_1.safeJsonStringify)(event)}`);\n                        if (event && event.result) {\n                            (_a = requestAnswer.onAck) === null || _a === void 0 ? void 0 : _a.call(requestAnswer);\n                        }\n                    });\n                }\n                if (requestAnswer.resolve) {\n                    this.bindRequestForPromise(requestId, requestAnswer.resolve);\n                }\n            }\n            catch (e) {\n                return Promise.reject(e);\n            }\n        });\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.restoreConnect(sessionInfo.topic));\n            onConnectResult(sessionInfo);\n        });\n    }\n    restoreconnectFromTopic(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.restoreConnect(topic));\n        });\n    }\n    getRequestId() {\n        const requestId = Date.now().toString();\n        (0, log_1.logDebug)('Engine ==>> getRequestId ==>', requestId);\n        return requestId;\n    }\n    handleResponse(event, response) {\n        (0, log_1.logDebug)(`Engine ==>> handleResponse_1  ======>response: ${(0, safejson_1.safeJsonStringify)(response)}`, event);\n        if (\"requestId\" in response) {\n            (0, log_1.logDebug)(\"Engine ==>> handleResponse_2  ===> in response\");\n            let requestId = response.requestId;\n            const resolve = this.pendingRequests.get(requestId);\n            if (resolve) {\n                (0, log_1.logDebug)(\"Engine ==>> handleResponse_3  ===> find resolve:\", resolve);\n                resolve(response);\n                // 从pendingRequests中删除这个Promise\n                this.pendingRequests.delete(requestId);\n            }\n            else {\n                (0, log_1.logDebug)(\"Engine ==>> handleResponse_3  ===> not find resolve:\");\n                if (response.method === \"disconnect\") {\n                    this.disconnectListener.forEach(listener => listener());\n                    this.disconnectListener = [];\n                    this.clearData();\n                }\n            }\n        }\n    }\n    getCurrentConnectionReady() {\n        var _a;\n        return !!((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getCurrentConnectionReady());\n    }\n    saveSessionContent(key, data) {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.saveSessionContent(key, data);\n    }\n    getSessionContent(key) {\n        var _a;\n        return (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getSessionContent(key);\n    }\n    setOnConnectResultListener(connectResultListener) {\n        this.connectResultListener = connectResultListener;\n    }\n    getTag() {\n        return \"\";\n    }\n    toJSON() {\n        return \"ws-connector\";\n    }\n    clearData() {\n        this.pendingRequests.clear();\n    }\n}\nexports.WsConnector = WsConnector;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SessionCrypto = void 0;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst utils_1 = require(\"../utils/utils\");\nclass SessionCrypto {\n    constructor(keyPair = undefined) {\n        this.nonceLength = 24;\n        this.sessionKeyPair = keyPair ? this.createKeypairFromString(keyPair) : this.createKeypair();\n    }\n    createKeypair() {\n        return tweetnacl_1.default.box.keyPair();\n    }\n    createKeypairFromString(keyPair) {\n        return {\n            publicKey: (0, utils_1.hexToByteArray)(keyPair.publicKey),\n            secretKey: (0, utils_1.hexToByteArray)(keyPair.secretKey),\n        };\n    }\n    createNonce() {\n        return tweetnacl_1.default.randomBytes(this.nonceLength);\n    }\n    get keyPair() {\n        return this.sessionKeyPair;\n    }\n    // dapp 加密:\n    // base64(hex（nonce+加密内容）)\n    encrypt(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl_1.default.box(encodedMessage, nonce, (0, utils_1.hexToByteArray)(receiverPublicKey), this.keyPair.secretKey);\n        let concatInfo = (0, utils_1.concatUint8Arrays)(nonce, encrypted);\n        var hexResult = (0, utils_1.toHexString)(concatInfo);\n        var encodedResult = new TextEncoder().encode(hexResult);\n        return (0, utils_1.base64encode)(encodedResult, false);\n    }\n    // 钱包加密内容\n    // 注意：没有中间hex的环节\n    // base64（nonce+加密内容)\n    encryptWallet(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl_1.default.box(encodedMessage, nonce, (0, utils_1.hexToByteArray)(receiverPublicKey), this.keyPair.secretKey);\n        let concatInfo = (0, utils_1.concatUint8Arrays)(nonce, encrypted);\n        return (0, utils_1.base64encode)(concatInfo, false);\n    }\n    // dapp 解密\n    // base64(split(nonce+加密内容))\n    decrypt(message, senderPublicKey) {\n        let base64Content = (0, utils_1.base64decode)(message, true);\n        let messageByteArray = base64Content.toUint8Array();\n        const [nonce, internalMessage] = (0, utils_1.splitToUint8Arrays)(messageByteArray, this.nonceLength);\n        const decrypted = tweetnacl_1.default.box.open(internalMessage, nonce, (0, utils_1.hexToByteArray)(senderPublicKey), this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${(0, utils_1.toHexString)(this.keyPair.publicKey)} \\n keypair secretkey: ${(0, utils_1.toHexString)(this.keyPair.secretKey)}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    // dapp 解密\n    // base64(hextoByte(split(nonce+加密内容)))\n    decryptWallet(message, senderPublicKey) {\n        let base64Content = (0, utils_1.base64decode)(message, true);\n        let messageByteArray = (0, utils_1.hexToByteArray)(base64Content.toString());\n        const [nonce, internalMessage] = (0, utils_1.splitToUint8Arrays)(messageByteArray, this.nonceLength);\n        const decrypted = tweetnacl_1.default.box.open(internalMessage, nonce, (0, utils_1.hexToByteArray)(senderPublicKey), this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${(0, utils_1.toHexString)(this.keyPair.publicKey)} \\n keypair secretkey: ${(0, utils_1.toHexString)(this.keyPair.secretKey)}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    stringifyKeypair() {\n        return {\n            publicKey: (0, utils_1.toHexString)(this.keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(this.keyPair.secretKey)\n        };\n    }\n}\nexports.SessionCrypto = SessionCrypto;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./connect\"), exports);\n__exportStar(require(\"./protocol\"), exports);\n__exportStar(require(\"./utils\"), exports);\n__exportStar(require(\"./inject\"), exports);\n__exportStar(require(\"./connector\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuiMethods = exports.TONMethods = exports.AptosMethods = exports.SOLANAMethods = exports.Eip55Methods = void 0;\nexports.hasOKXInjectedProvider = hasOKXInjectedProvider;\nfunction hasOKXInjectedProvider() {\n    if (typeof getWindowProviderNamespace(\"okxwallet\") !== 'undefined') {\n        return true;\n    }\n    return false;\n}\nfunction getWindowProviderNamespace(namespace) {\n    const providerSearch = (provider, namespace) => {\n        const [property, ...path] = namespace.split('.');\n        const _provider = provider[property];\n        if (_provider) {\n            if (path.length === 0)\n                return _provider;\n            return providerSearch(_provider, path.join('.'));\n        }\n    };\n    if (typeof window !== 'undefined')\n        return providerSearch(window, namespace);\n}\nexports.Eip55Methods = [\n    \"personal_sign\",\n    \"eth_signTypedData_v4\",\n    \"eth_sendTransaction\",\n    \"wallet_addEthereumChain\",\n    \"wallet_watchAsset\",\n    \"wallet_switchEthereumChain\",\n    \"eth_requestAccounts\",\n    \"eth_accounts\",\n    \"eth_chainId\"\n];\nexports.SOLANAMethods = [\n    \"solana_signTransaction\",\n    \"solana_signMessage\",\n    \"solana_signAllTransactions\",\n    \"solana_signAndSendTransaction\"\n];\nexports.AptosMethods = [\n    \"aptos_signMessage\",\n    \"aptos_signTransaction\",\n    \"aptos_signAndSubmitTransaction\"\n];\nexports.TONMethods = [\n    \"ton_sendTransaction\",\n];\nexports.SuiMethods = [\n    \"sui_signMessage\",\n    \"sui_signPersonalMessage\",\n    \"sui_signTransactionBlock\",\n    \"sui_signAndExecuteTransactionBlock\"\n];\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./InjectUtils\"), exports);\n__exportStar(require(\"./provider\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AptosProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nconst media_1 = require(\"../../utils/media\");\nclass AptosProvider {\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                (0, utils_1.logDebug)(\"AptosProvider send request:\", (0, utils_1.safeJsonStringify)(request));\n                yield this.restoreConnect();\n                const method = request.method;\n                let result;\n                switch (method) {\n                    case \"aptos_signMessage\":\n                        {\n                            if (request.injectParams) {\n                                let message = yield window.okxwallet.aptos.signMessage(request.injectParams);\n                                result = {\n                                    method: request.method,\n                                    result: message.signature,\n                                };\n                                (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                                return result;\n                            }\n                            else {\n                                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                            }\n                        }\n                        break;\n                    case \"aptos_signTransaction\":\n                        {\n                            (0, utils_1.logDebug)(\"AptosProvider Method>>>> :\", method);\n                            let message = yield window.okxwallet.aptos.signTransaction(request.params);\n                            result = {\n                                method: request.method,\n                                result: message,\n                            };\n                            (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                            return result;\n                        }\n                        break;\n                    case \"aptos_signAndSubmitTransaction\":\n                        {\n                            (0, utils_1.logDebug)(\"AptosProvider Method>>>> :\", method);\n                            let message = yield window.okxwallet.aptos.signAndSubmitTransaction(request.params);\n                            result = {\n                                method: request.method,\n                                result: message.hash,\n                            };\n                            (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                            return result;\n                        }\n                        break;\n                    default:\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, ` method: '${method}'`);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"AptosProvider send error:\", error);\n                throw error;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    disconnect() {\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return window.okxwallet.aptos.connect();\n        }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let connectChain = [];\n            connectWalletNameSpace.forEach(item => {\n                if (item.namespace === protocol_1.NameSpaceKeyAptos) {\n                    connectChain.push(...item.chains);\n                }\n            });\n            let addresses = [];\n            let extra = {};\n            (0, utils_1.logDebug)(\"AptosProvider parseConnectResponse connectChain\", JSON.stringify(connectChain));\n            connectChain.forEach((chainStr) => {\n                let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                    return (addressItem.chainId === \"637\" && addressItem.coinType === 637) || (addressItem.namespaceChainId === chainStr);\n                });\n                if (selectedAddress) {\n                    addresses.push(chainStr + \":\" + selectedAddress.address);\n                    extra[chainStr] = {\n                        publicKey: selectedAddress.publicKey\n                    };\n                }\n            });\n            (0, utils_1.logDebug)(\"AptosProvider parseConnectResponse addresses\", JSON.stringify(addresses));\n            if (addresses && addresses.length > 0) {\n                let nameSpaceResponse = {\n                    namespace: protocol_1.NameSpaceKeyAptos,\n                    addresses: addresses,\n                    methods: [...InjectUtils_1.AptosMethods],\n                    extra: extra\n                };\n                return nameSpaceResponse;\n            }\n            return undefined;\n        });\n    }\n    connect(nameSpace, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return window.okxwallet.aptos.connect();\n        });\n    }\n}\nexports.AptosProvider = AptosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass SolProvider {\n    // TOOD\n    // 问题: 是否需要切链  不切链, 主网 测试网络  sonic 如何区别\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                yield this.restoreConnect();\n                (0, utils_1.logDebug)(\"SolProvider send request:\", JSON.stringify(request));\n                const method = request.method;\n                let result;\n                if (request.injectParams) {\n                    switch (method) {\n                        case \"solana_signMessage\":\n                            {\n                                if (request.injectParams && typeof request.injectParams === 'object' && 'message' in request.injectParams) {\n                                    var message = (_a = request.injectParams) === null || _a === void 0 ? void 0 : _a.message;\n                                    const encodedMessage = new TextEncoder().encode(message);\n                                    const signedMessage = yield window.okxwallet.solana.signMessage(encodedMessage, \"utf8\");\n                                    result = {\n                                        method: request.method,\n                                        result: bs58_1.default.encode(signedMessage.signature),\n                                    };\n                                    (0, utils_1.logDebug)(\"SolProvider send result:\", JSON.stringify(signedMessage));\n                                    return result;\n                                }\n                                else {\n                                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                                }\n                            }\n                            break;\n                        case \"solana_signTransaction\":\n                            {\n                                let bufferResult = yield window.okxwallet.solana.signTransaction(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send bufferResult:\", JSON.stringify(bufferResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: bufferResult,\n                                };\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                                return result;\n                            }\n                            break;\n                        case \"solana_signAllTransactions\":\n                            {\n                                let allResult = yield window.okxwallet.solana.signAllTransactions(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(allResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: allResult,\n                                };\n                                return result;\n                            }\n                            break;\n                        case \"solana_signAndSendTransaction\":\n                            {\n                                var signAndSendResult = yield window.okxwallet.solana.signAndSendTransaction(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(signAndSendResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: signAndSendResult,\n                                };\n                                return result;\n                            }\n                            break;\n                        default:\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, `method: '${method}'`);\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"SolProvider send error:\", error);\n                throw error;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    disconnect() {\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return this.connect(undefined);\n        }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let connectChain = [];\n            connectWalletNameSpace.forEach(item => {\n                if (item.namespace === protocol_1.NameSpaceKeySOL) {\n                    connectChain.push(...item.chains);\n                }\n            });\n            let addresses = [];\n            let extra = {};\n            let accounts = {};\n            // if (!isDevice(\"mobile\")){\n            //      accounts = await window.okxwallet.solana.connect()\n            //     logDebug(\"parseConnectResponse solana.connect() :\",JSON.stringify(accounts))\n            // }\n            connectChain.forEach((chainStr) => {\n                let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                    return (addressItem.chainId === \"501\" && addressItem.coinType === 501)\n                        || (addressItem.namespaceChainId === chainStr);\n                });\n                if (selectedAddress) {\n                    addresses.push(chainStr + \":\" + selectedAddress.address);\n                    if (accounts && \"publicKey\" in accounts) {\n                        extra[chainStr] = accounts;\n                    }\n                    else {\n                        extra[chainStr] = {\n                            publicKey: selectedAddress.publicKey\n                        };\n                    }\n                }\n            });\n            if (addresses && addresses.length > 0) {\n                let nameSpaceResponse = {\n                    namespace: protocol_1.NameSpaceKeySOL,\n                    addresses: addresses,\n                    methods: [...InjectUtils_1.SOLANAMethods],\n                    extra: extra\n                };\n                (0, utils_1.logDebug)(\"parseConnectResponse nameSpaceResponse :\", JSON.stringify(nameSpaceResponse));\n                return nameSpaceResponse;\n            }\n            return undefined;\n        });\n    }\n    connect(nameSpace, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return window.okxwallet.solana.connect();\n        });\n    }\n}\nexports.SolProvider = SolProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TONProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass TONProvider {\n    constructor() {\n        this.signalChainConnectResult = undefined;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                (0, utils_1.logDebug)(\"TONProvider send request:\", (0, utils_1.safeJsonStringify)(request));\n                // await this.restoreConnect()//To initialize data in Discover\n                let tonParams = null;\n                switch (request.method) {\n                    case \"ton_sendTransaction\":\n                        if (request.params) {\n                            tonParams = {\n                                method: \"sendTransaction\",\n                                params: [JSON.stringify(request.params)],\n                                id: Date.now().toString()\n                            };\n                            (0, utils_1.logDebug)(\"TONProvider tonParams first:\", JSON.stringify(tonParams));\n                        }\n                        break;\n                    default:\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n                if (tonParams) {\n                    const resultMe = yield window.okxTonWallet.tonconnect.send(tonParams);\n                    (0, utils_1.logDebug)(\"TONProvider send request result:\", (0, utils_1.safeJsonStringify)(resultMe));\n                    if (resultMe.error) {\n                        throw new protocol_1.OKXConnectError(resultMe.error.code, resultMe.error.message);\n                    }\n                    return {\n                        result: resultMe.result,\n                        method: request.method,\n                    };\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"TONProvider encountered an error:\", error);\n                throw error;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    restoreConnect() {\n        // if (isDevice(\"mobile\") && window.okxTonWallet){\n        //     return  window.okxTonWallet.tonconnect.restoreConnection()\n        // }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeyTON) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                connectChain.forEach((chainStr) => {\n                    let currentChain = (0, utils_1.getChainId)(chainStr);\n                    let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                        return (addressItem.chainId === \"607\" && addressItem.coinType === 607)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                    if (selectedAddress) {\n                        addresses.push(chainStr + \":\" + selectedAddress.address);\n                        extra[chainStr] = {\n                            publicKey: selectedAddress.publicKey\n                        };\n                    }\n                });\n                (0, utils_1.logDebug)(\"tonprovider parseConnectResponse needPop and addresses: \", needPop, JSON.stringify(addresses));\n                if (addresses && addresses.length > 0) {\n                    let tonItem = connectWalletNameSpace.find(tonItem => {\n                        return tonItem.namespace === protocol_1.NameSpaceKeyTON;\n                    });\n                    (0, utils_1.logDebug)(\"tonprovider parseConnectResponse ton: \", JSON.stringify(tonItem));\n                    let tonResult = undefined;\n                    if (tonItem && tonItem.params && dappInfo && dappInfo.manifestUrl) {\n                        this.dappInfo = dappInfo;\n                        let itmes = [tonItem.params.ton_addr];\n                        let params = {\n                            manifestUrl: dappInfo.manifestUrl,\n                            items: itmes\n                        };\n                        let needProof = needPop || accountChange;\n                        if (needProof && tonItem.params.ton_proof) {\n                            itmes.push(tonItem.params.ton_proof);\n                        }\n                        (0, utils_1.logDebug)(\"parseConnectResponse ton connect params: \", JSON.stringify(params));\n                        if ((0, media_1.isDevice)(\"mobile\")) {\n                            tonResult = (yield window.okxTonWallet.tonconnect.connect(2, params));\n                        }\n                        else {\n                            if (needPop || accountChange) {\n                                tonResult = (yield window.okxTonWallet.tonconnect.connect(2, params));\n                            }\n                            else {\n                                //No proof is needed here, the result is only used for address verification\n                                tonResult = (yield window.okxTonWallet.tonconnect.restoreConnection());\n                            }\n                        }\n                    }\n                    else {\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"manifestUrl is nil\");\n                    }\n                    if (signalChain && this.signalChainConnectResult) {\n                        tonResult = this.signalChainConnectResult;\n                        this.signalChainConnectResult = undefined;\n                    }\n                    (0, utils_1.logDebug)(\"parseConnectResponse ton connect result: \", JSON.stringify(tonResult));\n                    if (tonResult && tonItem) {\n                        if (tonResult.event === \"connect_error\") {\n                            throw new protocol_1.OKXConnectError(tonResult.payload.code, tonResult.payload.message);\n                        }\n                        else {\n                            let ton_addr = tonResult.payload.items.find(item => item.name === \"ton_addr\");\n                            let ton_proof = tonResult.payload.items.find(item => item.name === \"ton_proof\");\n                            (0, utils_1.logDebug)(\"tonprovider connect isSignalChain: \", signalChain);\n                            let nameSpaceResponse = {\n                                namespace: protocol_1.NameSpaceKeyTON,\n                                addresses: addresses,\n                                methods: [...InjectUtils_1.TONMethods],\n                                extra: extra,\n                                data: {\n                                    ton_addr: ton_addr,\n                                    ton_proof: ton_proof,\n                                    manifestUrl: dappInfo.manifestUrl\n                                }\n                            };\n                            return nameSpaceResponse;\n                        }\n                    }\n                }\n                return undefined;\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"tonprovider parseConnectResponse error: \", JSON.stringify(error));\n                throw error;\n            }\n        });\n    }\n    connect(nameSpace, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (nameSpace && dappInfo && dappInfo.manifestUrl && nameSpace.params) {\n                this.dappInfo = dappInfo;\n                let itmes = [nameSpace.params.ton_addr];\n                let params = {\n                    manifestUrl: dappInfo.manifestUrl,\n                    items: itmes\n                };\n                if (nameSpace.params.ton_proof) {\n                    itmes.push(nameSpace.params.ton_proof);\n                }\n                (0, utils_1.logDebug)(\"tonprovider connect params: \", JSON.stringify(params));\n                try {\n                    let tonResult = yield window.okxTonWallet.tonconnect.connect(2, params);\n                    (0, utils_1.logDebug)(\"tonprovider connect tonResult: \", JSON.stringify(tonResult));\n                    this.signalChainConnectResult = tonResult;\n                    return tonResult;\n                }\n                catch (error) {\n                    (0, utils_1.logDebug)(\"tonprovider connect error: \", JSON.stringify(error));\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"tonconnect error\");\n                }\n            }\n            else {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"manifestUrl or params is nil\");\n            }\n        });\n    }\n}\nexports.TONProvider = TONProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Eip155Provider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass Eip155Provider {\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                (0, utils_1.logDebug)(\"Eip155Provider send request:\", (0, utils_1.safeJsonStringify)(request));\n                yield this.restoreConnect(); //To initialize data in Discover\n                let ethParams = null;\n                switch (request.method) {\n                    case \"personal_sign\":\n                        if (request.params && \"message\" in request.params) {\n                            ethParams = {\n                                method: request.method,\n                                params: [\n                                    request.params.message,\n                                    request.address,\n                                ],\n                            };\n                        }\n                        break;\n                    case \"eth_sendTransaction\":\n                    case \"wallet_addEthereumChain\":\n                    case \"wallet_switchEthereumChain\":\n                        {\n                            if (request.params) {\n                                ethParams = {\n                                    method: request.method,\n                                    params: [request.params],\n                                };\n                            }\n                        }\n                        break;\n                    case \"eth_signTypedData_v4\":\n                        {\n                            if (request.params && \"typedDataJson\" in request.params && ((_a = request.params) === null || _a === void 0 ? void 0 : _a.typedDataJson) && typeof request.params.typedDataJson === \"string\") {\n                                ethParams = {\n                                    method: request.method,\n                                    params: [\n                                        request.address,\n                                        request.params.typedDataJson,\n                                    ],\n                                };\n                            }\n                        }\n                        break;\n                    case \"wallet_watchAsset\":\n                        {\n                            if (request.params) {\n                                ethParams = {\n                                    method: request.method,\n                                    params: request.params,\n                                };\n                            }\n                        }\n                        break;\n                    default:\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n                if (ethParams) {\n                    // 特殊处理 \"wallet_switchEthereumChain\"\n                    if ((request.method === \"wallet_switchEthereumChain\" || request.method === \"wallet_addEthereumChain\")\n                        && request.params\n                        && \"chainId\" in request.params) {\n                        (0, utils_1.logDebug)(\"Eip155Provider send request switch requestParams:\", (0, utils_1.safeJsonStringify)(ethParams));\n                        const switchChainId = parseInt(request.params.chainId, 16).toString();\n                        yield window.okxwallet.request(ethParams);\n                        const resultSwitch = `eip155:${switchChainId}:${request.address}`;\n                        (0, utils_1.logDebug)(\"Eip155Provider send request switch result:\", resultSwitch);\n                        return {\n                            result: resultSwitch,\n                            method: request.method,\n                        };\n                    }\n                    else {\n                        const chain = (0, utils_1.getChainId)(request.chainId);\n                        const chainHex = `0x${Number(chain).toString(16)}`;\n                        (0, utils_1.logDebug)(\"Eip155Provider current chainId:\", chain, chainHex);\n                        if (chainHex) {\n                            yield window.okxwallet.request({\n                                method: \"wallet_switchEthereumChain\",\n                                params: [{ chainId: chainHex }],\n                            });\n                            (0, utils_1.logDebug)(\"Eip155Provider send request requestParams:\", chainHex, (0, utils_1.safeJsonStringify)(ethParams));\n                            const resultMe = yield window.okxwallet.request(ethParams);\n                            (0, utils_1.logDebug)(\"Eip155Provider send request result:\", (0, utils_1.safeJsonStringify)(resultMe));\n                            return {\n                                result: resultMe,\n                                method: request.method,\n                            };\n                        }\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"Eip155Provider encountered an error:\", error);\n                throw error;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return window.okxwallet.request({ method: 'eth_requestAccounts' });\n        }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeyEip155) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                connectChain.forEach((chainStr) => {\n                    let currentChain = (0, utils_1.getChainId)(chainStr);\n                    let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                        return (addressItem.chainId === currentChain && addressItem.coinType === 60)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                    if (selectedAddress) {\n                        addresses.push(chainStr + \":\" + selectedAddress.address);\n                        extra[chainStr] = {\n                            publicKey: selectedAddress.publicKey\n                        };\n                    }\n                });\n                if (addresses && addresses.length > 0) {\n                    let nameSpaceResponse = {\n                        namespace: protocol_1.NameSpaceKeyEip155,\n                        addresses: addresses,\n                        methods: [...InjectUtils_1.Eip55Methods],\n                        extra: extra\n                    };\n                    return nameSpaceResponse;\n                }\n                return undefined;\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    connect(nameSpace, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return window.okxwallet.request({ method: 'eth_requestAccounts' });\n        });\n    }\n}\nexports.Eip155Provider = Eip155Provider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./eip155Provider\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuiProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass SuiProvider {\n    constructor() {\n        // const GlobalWallet: {\n        //     [key: string]: any;\n        //     register: (wallet: any) => void;\n        // } = {\n        //     register: (wallet) => {\n        //         GlobalWallet[wallet.chainName] = wallet; // 动态添加属性\n        //     },\n        // }\n        // const event = new CustomEvent('wallet-standard:app-ready', { detail: GlobalWallet });\n        // window.dispatchEvent(event);\n        // this.suiWallet = GlobalWallet[\"suiMainnet\"]\n    }\n    connectReady() {\n        return true;\n    }\n    getSuiPublicKey() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const suiAccount = yield this.connect(undefined);\n            let publicKey = suiAccount.accounts[0].publicKey;\n            return publicKey;\n        });\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeySui) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                if (connectChain.length == 0) {\n                    return undefined;\n                }\n                const suiPublicKey = yield this.getSuiPublicKey();\n                connectChain.forEach((chainStr) => {\n                    var _a;\n                    let currentChain = (0, utils_1.getChainId)(chainStr);\n                    let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                        return (addressItem.coinType === 784)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                    if (selectedAddress) {\n                        addresses.push(chainStr + \":\" + selectedAddress.address);\n                        extra[chainStr] = {\n                            publicKey: (_a = selectedAddress.publicKey) !== null && _a !== void 0 ? _a : suiPublicKey\n                        };\n                    }\n                });\n                if (addresses && addresses.length > 0) {\n                    let nameSpaceResponse = {\n                        namespace: protocol_1.NameSpaceKeySui,\n                        addresses: addresses,\n                        methods: [...InjectUtils_1.SuiMethods],\n                        extra: extra\n                    };\n                    return nameSpaceResponse;\n                }\n                return undefined;\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return this.connect(undefined);\n        }\n        return Promise.resolve();\n    }\n    getSuiWallet() {\n        return window.okxwallet.sui;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.restoreConnect();\n                (0, utils_1.logDebug)(\"suiProvider send request:\", JSON.stringify(request));\n                const method = request.method;\n                let result;\n                if (request.injectParams && this.getSuiWallet()) {\n                    let originalRarams = request.injectParams;\n                    switch (method) {\n                        case \"sui_signTransactionBlock\":\n                            const injectSignResult = yield this.getSuiWallet().features['sui:signTransactionBlock'].signTransactionBlock(originalRarams);\n                            //{transactionBlockBytes: 'AAACAAhmAAAAAAAAAAAgcveY+LcJkCRT1LtVxlZh6eBBVKUGdl…7bLNXSJ4Qz1jZurage0aGdH6Zb+4CAAAAAAAAIAo1AAAAAAAA', hash: '2pxcesyfKVCs3EegDYUDeQ28m3V3tn5VR32aUZSdg3dc', signature: 'ADDzSloxm5wEQX4BaTMJEON9t/xGgZ66ybiy5uT4TUimdl6Q9/…NeA3YOy/QsAD4XwjQ0rSuNkeKyfNy+VZPtJsmnKWswbGHSw=='}\n                            result = {\n                                method: \"sui_signTransactionBlock\",\n                                result: injectSignResult.signature\n                            };\n                            break;\n                        case \"sui_signAndExecuteTransactionBlock\":\n                            const injectSendResult = yield this.getSuiWallet().features['sui:signAndExecuteTransactionBlock'].signAndExecuteTransactionBlock(originalRarams);\n                            result = {\n                                method: \"sui_signAndExecuteTransactionBlock\",\n                                result: injectSendResult.digest\n                            };\n                            break;\n                        case \"sui_signMessage\":\n                            const injectResult = yield this.getSuiWallet().features['sui:signMessage'].signMessage(originalRarams);\n                            result = {\n                                method: \"sui_signMessage\",\n                                result: injectResult.signature\n                            };\n                            break;\n                        case \"sui_signPersonalMessage\":\n                            const injectPersonalResult = yield this.getSuiWallet().features['sui:signPersonalMessage'].signPersonalMessage(originalRarams);\n                            result = {\n                                method: \"sui_signPersonalMessage\",\n                                result: injectPersonalResult.signature\n                            };\n                            break;\n                    }\n                }\n                return result;\n            }\n            catch (e) {\n                (0, utils_1.logDebug)(\"suiProvider send error:\", e);\n                throw e;\n            }\n        });\n    }\n    connect(nameSpace, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            return (_a = this.getSuiWallet()) === null || _a === void 0 ? void 0 : _a.features['standard:connect'].connect();\n        });\n    }\n}\nexports.SuiProvider = SuiProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TON_CHAINS = exports.COSMOS_CHAINS = exports.APTOS_CHAINS = exports.SUI_CHAINS = exports.SOLANA_CHAINS = exports.BTC_CHAINS = void 0;\nexports.BTC_CHAINS = {\n    MAINNET: 'btc:mainnet',\n    FRACTAL: 'fractal:mainnet',\n};\nexports.SOLANA_CHAINS = {\n    MAINNET: 'solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp',\n    TESTNET: 'solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z',\n    SONIC_TESTNET: 'sonic:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z'\n};\nexports.SUI_CHAINS = {\n    MAINNET: 'sui:mainnet'\n};\nexports.APTOS_CHAINS = {\n    MAINNET: 'aptos:mainnet' // aptos mainnet\n};\nexports.COSMOS_CHAINS = {\n    COSMOS_MAINNET: 'cosmos:cosmoshub-4'\n};\nexports.TON_CHAINS = {\n    MAINNET: 'ton:-239', // mainnet\n};\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IEngine = exports.ISignClient = exports.ISignClientEvents = exports.IEngineEvents = void 0;\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nclass IEngineEvents extends eventemitter3_1.default {\n    constructor() {\n        super();\n    }\n}\nexports.IEngineEvents = IEngineEvents;\nclass ISignClientEvents extends eventemitter3_1.default {\n    constructor() {\n        super();\n    }\n}\nexports.ISignClientEvents = ISignClientEvents;\nclass ISignClient {\n    constructor(data) {\n        this.data = data;\n    }\n}\nexports.ISignClient = ISignClient;\nclass IEngine {\n    constructor(client) {\n        this.client = client;\n    }\n}\nexports.IEngine = IEngine;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXWalletName = exports.creatOKXInjectWalletInfo = exports.creatOKXMiniAppWalletInfo = exports.creatOKXWalletInfo = exports.ISignClientEvents = exports.IEngine = exports.IEngineEvents = exports.ISignClient = exports.getBigIntRpcId = exports.formatJsonRpcRequest = exports.isJsonRpcError = exports.isJsonRpcResponse = exports.parseConnectionError = exports.isHttpUrl = exports.formatJsonRpcError = void 0;\nvar json_rpc_1 = require(\"./json-rpc\");\nObject.defineProperty(exports, \"formatJsonRpcError\", { enumerable: true, get: function () { return json_rpc_1.formatJsonRpcError; } });\nObject.defineProperty(exports, \"isHttpUrl\", { enumerable: true, get: function () { return json_rpc_1.isHttpUrl; } });\nObject.defineProperty(exports, \"parseConnectionError\", { enumerable: true, get: function () { return json_rpc_1.parseConnectionError; } });\nObject.defineProperty(exports, \"isJsonRpcResponse\", { enumerable: true, get: function () { return json_rpc_1.isJsonRpcResponse; } });\nObject.defineProperty(exports, \"isJsonRpcError\", { enumerable: true, get: function () { return json_rpc_1.isJsonRpcError; } });\nObject.defineProperty(exports, \"formatJsonRpcRequest\", { enumerable: true, get: function () { return json_rpc_1.formatJsonRpcRequest; } });\nObject.defineProperty(exports, \"getBigIntRpcId\", { enumerable: true, get: function () { return json_rpc_1.getBigIntRpcId; } });\nvar engine_1 = require(\"./engine\");\nObject.defineProperty(exports, \"ISignClient\", { enumerable: true, get: function () { return engine_1.ISignClient; } });\nObject.defineProperty(exports, \"IEngineEvents\", { enumerable: true, get: function () { return engine_1.IEngineEvents; } });\nObject.defineProperty(exports, \"IEngine\", { enumerable: true, get: function () { return engine_1.IEngine; } });\nObject.defineProperty(exports, \"ISignClientEvents\", { enumerable: true, get: function () { return engine_1.ISignClientEvents; } });\n__exportStar(require(\"./ton\"), exports);\nvar wallet_info_1 = require(\"./wallet-info\");\nObject.defineProperty(exports, \"creatOKXWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXWalletInfo; } });\nObject.defineProperty(exports, \"creatOKXMiniAppWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXMiniAppWalletInfo; } });\nObject.defineProperty(exports, \"creatOKXInjectWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXInjectWalletInfo; } });\nObject.defineProperty(exports, \"OKXWalletName\", { enumerable: true, get: function () { return wallet_info_1.OKXWalletName; } });\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isJsonRpcPayload = isJsonRpcPayload;\nexports.isJsonRpcRequest = isJsonRpcRequest;\nexports.isJsonRpcResponse = isJsonRpcResponse;\nexports.isJsonRpcResult = isJsonRpcResult;\nexports.isJsonRpcError = isJsonRpcError;\nexports.payloadId = payloadId;\nexports.getBigIntRpcId = getBigIntRpcId;\nexports.formatJsonRpcRequest = formatJsonRpcRequest;\nexports.formatJsonRpcResult = formatJsonRpcResult;\nexports.formatJsonRpcError = formatJsonRpcError;\nexports.isReservedErrorCode = isReservedErrorCode;\nexports.getError = getError;\nexports.getErrorByCode = getErrorByCode;\nexports.formatErrorMessage = formatErrorMessage;\nexports.isHttpUrl = isHttpUrl;\nexports.isWsUrl = isWsUrl;\nexports.parseConnectionError = parseConnectionError;\nfunction isJsonRpcPayload(payload) {\n    return (typeof payload === \"object\" &&\n        \"id\" in payload &&\n        \"jsonrpc\" in payload &&\n        payload.jsonrpc === \"2.0\");\n}\nfunction isJsonRpcRequest(payload) {\n    return isJsonRpcPayload(payload) && \"method\" in payload;\n}\nfunction isJsonRpcResponse(payload) {\n    return isJsonRpcPayload(payload) && (isJsonRpcResult(payload) || isJsonRpcError(payload));\n}\nfunction isJsonRpcResult(payload) {\n    return \"result\" in payload;\n}\nfunction isJsonRpcError(payload) {\n    return \"error\" in payload;\n}\nconst okx_connect_error_1 = require(\"../error/okx-connect.error\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nclass IncrementalRandomGenerator {\n    constructor(bits) {\n        this.i = 1;\n        const typedArray = bits === 8 ? new Uint8Array(1) : bits === 16 ? new Uint16Array(1) : new Uint32Array(1);\n        if (bits) {\n            this.initialValue = tweetnacl_1.default.randomBytes(bits / 8)[0];\n        }\n        else {\n            this.initialValue = 0;\n        }\n    }\n    getNextValue() {\n        return this.initialValue + this.i++;\n    }\n}\nconst uint8Generator = new IncrementalRandomGenerator(8);\nconst uint16Generator = new IncrementalRandomGenerator(16);\nfunction payloadId() {\n    const date = Date.now() * 1000;\n    const extra = uint8Generator.getNextValue();\n    return date + extra;\n}\nfunction getBigIntRpcId() {\n    const date = BigInt(Date.now()) * BigInt(1000000);\n    const extra = BigInt(uint16Generator.getNextValue());\n    return date + extra;\n}\nfunction formatJsonRpcRequest(method, params, id) {\n    return {\n        id: id || payloadId(),\n        jsonrpc: \"2.0\",\n        method,\n        params,\n    };\n}\nfunction formatJsonRpcResult(id, result) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        result,\n    };\n}\nfunction formatJsonRpcError(id, error, data) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        error: formatErrorMessage(error, data),\n    };\n}\nfunction isReservedErrorCode(code) {\n    return okx_connect_error_1.RESERVED_ERROR_CODES.includes(code);\n}\nfunction getError(type) {\n    if (!Object.keys(okx_connect_error_1.STANDARD_ERROR_MAP).includes(type)) {\n        return okx_connect_error_1.STANDARD_ERROR_MAP[okx_connect_error_1.DEFAULT_ERROR];\n    }\n    return okx_connect_error_1.STANDARD_ERROR_MAP[type];\n}\nfunction getErrorByCode(code) {\n    const match = Object.values(okx_connect_error_1.STANDARD_ERROR_MAP).find((e) => e.code === code);\n    if (!match) {\n        return okx_connect_error_1.STANDARD_ERROR_MAP[okx_connect_error_1.DEFAULT_ERROR];\n    }\n    return match;\n}\nfunction formatErrorMessage(error, data) {\n    if (typeof error === \"undefined\") {\n        return getError(okx_connect_error_1.INTERNAL_ERROR);\n    }\n    if (typeof error === \"string\") {\n        error = Object.assign(Object.assign({}, getError(okx_connect_error_1.SERVER_ERROR)), { message: error });\n    }\n    if (typeof data !== \"undefined\") {\n        error.data = data;\n    }\n    if (isReservedErrorCode(error.code)) {\n        error = getErrorByCode(error.code);\n    }\n    return error;\n}\nfunction getUrlProtocol(url) {\n    const matches = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!matches || !matches.length)\n        return;\n    return matches[0];\n}\nfunction matchRegexProtocol(url, regex) {\n    const protocol = getUrlProtocol(url);\n    if (typeof protocol === \"undefined\")\n        return false;\n    return new RegExp(regex).test(protocol);\n}\nfunction isHttpUrl(url) {\n    return matchRegexProtocol(url, \"^https?:\");\n}\nfunction isWsUrl(url) {\n    return matchRegexProtocol(url, \"^wss?:\");\n}\nfunction parseConnectionError(e, url, type) {\n    return e.message.includes(\"getaddrinfo ENOTFOUND\") || e.message.includes(\"connect ECONNREFUSED\")\n        ? new Error(`Unavailable ${type} RPC url at ${url}`)\n        : e;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_ITEM_ERROR_CODES = void 0;\nvar CONNECT_ITEM_ERROR_CODES;\n(function (CONNECT_ITEM_ERROR_CODES) {\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(CONNECT_ITEM_ERROR_CODES || (exports.CONNECT_ITEM_ERROR_CODES = CONNECT_ITEM_ERROR_CODES = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TONCHAIN = void 0;\nvar TONCHAIN;\n(function (TONCHAIN) {\n    TONCHAIN[\"MAINNET\"] = \"-239\";\n})(TONCHAIN || (exports.TONCHAIN = TONCHAIN = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_ITEM_ERROR_CODES = exports.TONCHAIN = void 0;\nvar connect_wallet_1 = require(\"./connect-wallet\");\nObject.defineProperty(exports, \"TONCHAIN\", { enumerable: true, get: function () { return connect_wallet_1.TONCHAIN; } });\nvar connect_event_1 = require(\"./connect-event\");\nObject.defineProperty(exports, \"CONNECT_ITEM_ERROR_CODES\", { enumerable: true, get: function () { return connect_event_1.CONNECT_ITEM_ERROR_CODES; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXInjectWalletName = exports.OKXMiniWalletName = exports.OKXWalletName = void 0;\nexports.creatOKXWalletInfo = creatOKXWalletInfo;\nexports.creatOKXMiniAppWalletInfo = creatOKXMiniAppWalletInfo;\nexports.creatOKXInjectWalletInfo = creatOKXInjectWalletInfo;\nexports.OKXWalletName = \"OKX Wallet\";\nexports.OKXMiniWalletName = \"OKX Mini Wallet\";\nexports.OKXInjectWalletName = \"OKX Inject Wallet\";\nfunction creatOKXWalletInfo() {\n    return {\n        \"appName\": \"okxAppWallet\",\n        \"name\": exports.OKXWalletName,\n        \"imageUrl\": \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\"\n    };\n}\nfunction creatOKXMiniAppWalletInfo() {\n    return {\n        \"appName\": \"okxMiniApp\",\n        \"name\": exports.OKXMiniWalletName,\n        \"imageUrl\": \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\"\n    };\n}\nfunction creatOKXInjectWalletInfo() {\n    return {\n        \"appName\": \"okxInjectWallet\",\n        \"name\": exports.OKXInjectWalletName,\n        \"imageUrl\": \"\"\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_MINI_WALLET_NAME = exports.OKX_APP_WALLET_NAME = exports.stackDeepLink = exports.tgwalletAppName = exports.tgwalletName = exports.tonConnectSdkVersion = exports.shortUniversalLink = exports.standardDeeplink = exports.downloadUrl = exports.standardUniversalLink = exports.okxDeeplink = void 0;\nexports.getTestTwaUrl = getTestTwaUrl;\nexports.getTestTgTwaUrl = getTestTgTwaUrl;\nexports.getBotNameAndAppName = getBotNameAndAppName;\nexports.okxDeeplink = 'okx://web3';\nexports.standardUniversalLink = typeof window !== \"undefined\" && window.location.hostname.includes(\"okx.com\")\n    ? \"https://link.okx.com/download\"\n    : \"https://www.okx.com/download\";\nexports.downloadUrl = \"https://www.okx.com/download\";\n// export const standardUniversalLink = 'http://localhost:5173';\nexports.standardDeeplink = `${exports.okxDeeplink}/wallet/connect`;\nexports.shortUniversalLink = `https://www.okx.com/ul/connect`;\n// export const standardDeeplink = 'http://localhost:5173';\nexports.tonConnectSdkVersion = '1';\n// export const tgwalletName: string = \"TCTestqdqwdqwdqBot\"\nexports.tgwalletName = \"OKX_WALLET_BOT\";\nexports.tgwalletAppName = \"start\";\n// https://t.me/OKX_WALLET_BOT/start\nexports.stackDeepLink = 'okx://web3?stack=true';\nfunction getTestTwaUrl() {\n    return window.okxTesttwaUrl;\n}\nfunction getTestTgTwaUrl() {\n    return window.okxTestTgtwaUrl;\n}\nfunction getBotNameAndAppName(url) {\n    const urlObj = new URL(url);\n    const pathnameParts = urlObj.pathname.split('/').filter(Boolean);\n    if (pathnameParts.length >= 2) {\n        const botName = pathnameParts[0]; // 获取 'test_12312313123_bot'\n        const appName = pathnameParts[1]; // 获取 'testtest'\n        return { botName, appName };\n    }\n}\nexports.OKX_APP_WALLET_NAME = 'OKX Wallet';\nexports.OKX_MINI_WALLET_NAME = 'OKX Mini Wallet';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_CONNECT_ERROR_CODES = exports.OKXConnectError = void 0;\nvar okx_connect_error_1 = require(\"./okx-connect.error\");\nObject.defineProperty(exports, \"OKXConnectError\", { enumerable: true, get: function () { return okx_connect_error_1.OKXConnectError; } });\nObject.defineProperty(exports, \"OKX_CONNECT_ERROR_CODES\", { enumerable: true, get: function () { return okx_connect_error_1.OKX_CONNECT_ERROR_CODES; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_ERROR = exports.STANDARD_ERROR_MAP = exports.SERVER_ERROR_CODE_RANGE = exports.RESERVED_ERROR_CODES = exports.SERVER_ERROR = exports.INTERNAL_ERROR = exports.INVALID_PARAMS = exports.METHOD_NOT_FOUND = exports.INVALID_REQUEST = exports.PARSE_ERROR = exports.OKX_CONNECT_ERROR_CODES = exports.OKXConnectError = void 0;\nclass OKXConnectError extends Error {\n    constructor(code, message) {\n        if (message == undefined) {\n            message = getDefaultMessageByCode(code);\n        }\n        super(message);\n        this.code = code;\n        this.message = `${OKXConnectError.prefix} ${message ? '\\n' + message : ''}`;\n        Object.setPrototypeOf(this, OKXConnectError.prototype);\n    }\n    toJSON() {\n        return {\n            message: this.message,\n            code: this.code\n        };\n    }\n}\nexports.OKXConnectError = OKXConnectError;\nOKXConnectError.prefix = '[OKX_CONNECT_SDK_ERROR]';\nfunction getDefaultMessageByCode(code) {\n    if (code == OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR) {\n        return \"unknown error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR) {\n        return \"bad request error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.ALREADY_CONNECTED_ERROR) {\n        return \"already connected error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR) {\n        return \"not connected error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.UNKNOWN_APP_ERROR) {\n        return \"unknown app error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n        return \"user rejects error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR_CAUSE_REGISTER) {\n        return \"wallet address are registering\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED) {\n        return \"method not supported\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.CONNECTION_ERROR) {\n        return \"connect error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED) {\n        return \"chain not supported\";\n    }\n    return \"unknown error\";\n}\nvar OKX_CONNECT_ERROR_CODES;\n(function (OKX_CONNECT_ERROR_CODES) {\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"BAD_REQUEST_ERROR\"] = 1] = \"BAD_REQUEST_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"ALREADY_CONNECTED_ERROR\"] = 11] = \"ALREADY_CONNECTED_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"NOT_CONNECTED_ERROR\"] = 12] = \"NOT_CONNECTED_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"UNKNOWN_APP_ERROR\"] = 100] = \"UNKNOWN_APP_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"USER_REJECTS_ERROR\"] = 300] = \"USER_REJECTS_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"USER_REJECTS_ERROR_CAUSE_REGISTER\"] = 301] = \"USER_REJECTS_ERROR_CAUSE_REGISTER\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"CHAIN_NOT_SUPPORTED\"] = 500] = \"CHAIN_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"WALLET_NOT_SUPPORTED\"] = 600] = \"WALLET_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"CONNECTION_ERROR\"] = 700] = \"CONNECTION_ERROR\";\n})(OKX_CONNECT_ERROR_CODES || (exports.OKX_CONNECT_ERROR_CODES = OKX_CONNECT_ERROR_CODES = {}));\nexports.PARSE_ERROR = \"PARSE_ERROR\";\nexports.INVALID_REQUEST = \"INVALID_REQUEST\";\nexports.METHOD_NOT_FOUND = \"METHOD_NOT_FOUND\";\nexports.INVALID_PARAMS = \"INVALID_PARAMS\";\nexports.INTERNAL_ERROR = \"INTERNAL_ERROR\";\nexports.SERVER_ERROR = \"SERVER_ERROR\";\nexports.RESERVED_ERROR_CODES = [-32700, -32600, -32601, -32602, -32603];\nexports.SERVER_ERROR_CODE_RANGE = [-32000, -32099];\nexports.STANDARD_ERROR_MAP = {\n    [exports.PARSE_ERROR]: { code: -32700, message: \"Parse error\" },\n    [exports.INVALID_REQUEST]: { code: -32600, message: \"Invalid Request\" },\n    [exports.METHOD_NOT_FOUND]: { code: -32601, message: \"Method not found\" },\n    [exports.INVALID_PARAMS]: { code: -32602, message: \"Invalid params\" },\n    [exports.INTERNAL_ERROR]: { code: -32603, message: \"Internal error\" },\n    [exports.SERVER_ERROR]: { code: -32000, message: \"Server error\" },\n};\nexports.DEFAULT_ERROR = exports.SERVER_ERROR;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TON_CHAINS = exports.COSMOS_CHAINS = exports.APTOS_CHAINS = exports.SUI_CHAINS = exports.SOLANA_CHAINS = exports.BTC_CHAINS = exports.downloadUrl = exports.okxDeeplink = exports.tonConnectSdkVersion = exports.standardDeeplink = exports.standardUniversalLink = exports.NameSpaceKeyStarknet = exports.NameSpaceKeyTron = exports.NameSpaceKeyCosmos = exports.NameSpaceKeyAptos = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.NameSpaceKeyTON = exports.NameSpaceKeySOL = exports.NameSpaceKeyEip155 = void 0;\n__exportStar(require(\"./error\"), exports);\nvar misc_1 = require(\"./misc\");\nObject.defineProperty(exports, \"NameSpaceKeyEip155\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyEip155; } });\nObject.defineProperty(exports, \"NameSpaceKeySOL\", { enumerable: true, get: function () { return misc_1.NameSpaceKeySOL; } });\nObject.defineProperty(exports, \"NameSpaceKeyTON\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyTON; } });\nObject.defineProperty(exports, \"NameSpaceKeySui\", { enumerable: true, get: function () { return misc_1.NameSpaceKeySui; } });\nObject.defineProperty(exports, \"NameSpaceKeyBtc\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyBtc; } });\nObject.defineProperty(exports, \"NameSpaceKeyAptos\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyAptos; } });\nObject.defineProperty(exports, \"NameSpaceKeyCosmos\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyCosmos; } });\nObject.defineProperty(exports, \"NameSpaceKeyTron\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyTron; } });\nObject.defineProperty(exports, \"NameSpaceKeyStarknet\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyStarknet; } });\nvar constants_1 = require(\"./constants\");\nObject.defineProperty(exports, \"standardUniversalLink\", { enumerable: true, get: function () { return constants_1.standardUniversalLink; } });\nObject.defineProperty(exports, \"standardDeeplink\", { enumerable: true, get: function () { return constants_1.standardDeeplink; } });\nObject.defineProperty(exports, \"tonConnectSdkVersion\", { enumerable: true, get: function () { return constants_1.tonConnectSdkVersion; } });\nObject.defineProperty(exports, \"okxDeeplink\", { enumerable: true, get: function () { return constants_1.okxDeeplink; } });\nObject.defineProperty(exports, \"downloadUrl\", { enumerable: true, get: function () { return constants_1.downloadUrl; } });\n__exportStar(require(\"./connect\"), exports);\nvar chains_1 = require(\"./chains\");\nObject.defineProperty(exports, \"BTC_CHAINS\", { enumerable: true, get: function () { return chains_1.BTC_CHAINS; } });\nObject.defineProperty(exports, \"SOLANA_CHAINS\", { enumerable: true, get: function () { return chains_1.SOLANA_CHAINS; } });\nObject.defineProperty(exports, \"SUI_CHAINS\", { enumerable: true, get: function () { return chains_1.SUI_CHAINS; } });\nObject.defineProperty(exports, \"APTOS_CHAINS\", { enumerable: true, get: function () { return chains_1.APTOS_CHAINS; } });\nObject.defineProperty(exports, \"COSMOS_CHAINS\", { enumerable: true, get: function () { return chains_1.COSMOS_CHAINS; } });\nObject.defineProperty(exports, \"TON_CHAINS\", { enumerable: true, get: function () { return chains_1.TON_CHAINS; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NameSpaceKeyStarknet = exports.NameSpaceKeyTron = exports.NameSpaceKeyCosmos = exports.NameSpaceKeyAptos = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.NameSpaceKeyTON = exports.NameSpaceKeySOL = exports.NameSpaceKeyEip155 = void 0;\nexports.NameSpaceKeyEip155 = \"eip155\";\nexports.NameSpaceKeySOL = \"solana\";\nexports.NameSpaceKeyTON = \"ton\";\nexports.NameSpaceKeySui = \"sui\";\nexports.NameSpaceKeyBtc = \"btc\";\nexports.NameSpaceKeyAptos = \"aptos\";\nexports.NameSpaceKeyCosmos = \"cosmos\";\nexports.NameSpaceKeyTron = \"tron\";\nexports.NameSpaceKeyStarknet = \"starknet\";\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.callForSuccess = callForSuccess;\nexports.delay = delay;\n/**\n * Function to call ton api until we get response.\n * Because ton network is pretty unstable we need to make sure response is final.\n * @param {T} fn - function to call\n * @param {CallForSuccessOptions} [options] - optional configuration options\n */\nfunction callForSuccess(fn, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b;\n        const attempts = (_a = options === null || options === void 0 ? void 0 : options.attempts) !== null && _a !== void 0 ? _a : 3;\n        const delayMs = (_b = options === null || options === void 0 ? void 0 : options.delayMs) !== null && _b !== void 0 ? _b : 800;\n        if (typeof fn !== 'function') {\n            throw new Error(`Expected a function, got ${typeof fn}`);\n        }\n        let i = 0;\n        let lastError;\n        while (i < attempts) {\n            try {\n                return yield fn();\n            }\n            catch (err) {\n                lastError = err;\n                i++;\n                if (i < attempts) {\n                    yield delay(delayMs);\n                }\n            }\n        }\n        throw lastError;\n    });\n}\n/**\n * Delays the execution of code for a specified number of milliseconds.\n * @param {number} timeout - The number of milliseconds to delay the execution.\n * @param {DelayOptions} [options] - Optional configuration options for the delay.\n * @return {Promise<void>} - A promise that resolves after the specified delay, or rejects if the delay is aborted.\n */\nfunction delay(timeout, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            var _a, _b;\n            if ((_a = options === null || options === void 0 ? void 0 : options.signal) === null || _a === void 0 ? void 0 : _a.aborted) {\n                reject(new Error('Delay aborted'));\n                return;\n            }\n            const timeoutId = setTimeout(() => resolve(), timeout);\n            (_b = options === null || options === void 0 ? void 0 : options.signal) === null || _b === void 0 ? void 0 : _b.addEventListener('abort', () => {\n                clearTimeout(timeoutId);\n                reject(new Error('Delay aborted'));\n            });\n        });\n    });\n}\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.chainName2IdMap = exports.replaceChainIdToChainName = exports.replaceChainNameToChainId = exports.checkMetaData = exports.versionCompare = exports.isBrowser = exports.isOS = exports.isMobileUserAgent = exports.openDeeplinkWithFallback = exports.openLinkBlank = exports.openLink = exports.getChainId = exports.useShortLink = exports.toSafeBase64FromBase64 = exports.isValidObject = exports.isIos = exports.base64decode = exports.base64encode = exports.splitToUint8Arrays = exports.concatUint8Arrays = exports.toHexString = exports.hexToByteArray = exports.getOKXLink = exports.openOKXUniversalLink = exports.getAppWalletShortDeepLink = exports.encodeTWAConnectURLParams = exports.encodeConnectParams = exports.openOKXTMAWalletlinkWithFallback = exports.getTelegramWalletTWAUrl = exports.getAppWalletDeepLink = exports.encodeTelegramUrlParameters = exports.isTelegramUrl = exports.openOKXDeeplinkWithFallback = exports.openOKXDeeplink = exports.getUniversalLink = exports.safeJsonStringify = exports.safeJsonParse = exports.getDefaultReporter = exports.reportEvent = exports.reportLog = exports.logWarning = exports.logError = exports.logDebug = exports.callForSuccess = void 0;\nvar call_for_success_1 = require(\"./call-for-success\");\nObject.defineProperty(exports, \"callForSuccess\", { enumerable: true, get: function () { return call_for_success_1.callForSuccess; } });\nvar log_1 = require(\"./log\");\nObject.defineProperty(exports, \"logDebug\", { enumerable: true, get: function () { return log_1.logDebug; } });\nObject.defineProperty(exports, \"logError\", { enumerable: true, get: function () { return log_1.logError; } });\nObject.defineProperty(exports, \"logWarning\", { enumerable: true, get: function () { return log_1.logWarning; } });\nObject.defineProperty(exports, \"reportLog\", { enumerable: true, get: function () { return log_1.reportLog; } });\nObject.defineProperty(exports, \"reportEvent\", { enumerable: true, get: function () { return log_1.reportEvent; } });\nObject.defineProperty(exports, \"getDefaultReporter\", { enumerable: true, get: function () { return log_1.getDefaultReporter; } });\n__exportStar(require(\"./reportconstants\"), exports);\n__exportStar(require(\"./report\"), exports);\nvar safejson_1 = require(\"./safejson\");\nObject.defineProperty(exports, \"safeJsonParse\", { enumerable: true, get: function () { return safejson_1.safeJsonParse; } });\nObject.defineProperty(exports, \"safeJsonStringify\", { enumerable: true, get: function () { return safejson_1.safeJsonStringify; } });\nvar url_1 = require(\"./url\");\nObject.defineProperty(exports, \"getUniversalLink\", { enumerable: true, get: function () { return url_1.getUniversalLink; } });\nObject.defineProperty(exports, \"openOKXDeeplink\", { enumerable: true, get: function () { return url_1.openOKXDeeplink; } });\nObject.defineProperty(exports, \"openOKXDeeplinkWithFallback\", { enumerable: true, get: function () { return url_1.openOKXDeeplinkWithFallback; } });\nObject.defineProperty(exports, \"isTelegramUrl\", { enumerable: true, get: function () { return url_1.isTelegramUrl; } });\nObject.defineProperty(exports, \"encodeTelegramUrlParameters\", { enumerable: true, get: function () { return url_1.encodeTelegramUrlParameters; } });\nObject.defineProperty(exports, \"getAppWalletDeepLink\", { enumerable: true, get: function () { return url_1.getAppWalletDeepLink; } });\nObject.defineProperty(exports, \"getTelegramWalletTWAUrl\", { enumerable: true, get: function () { return url_1.getTelegramWalletTWAUrl; } });\nObject.defineProperty(exports, \"openOKXTMAWalletlinkWithFallback\", { enumerable: true, get: function () { return url_1.openOKXTMAWalletlinkWithFallback; } });\nObject.defineProperty(exports, \"encodeConnectParams\", { enumerable: true, get: function () { return url_1.encodeConnectParams; } });\nObject.defineProperty(exports, \"encodeTWAConnectURLParams\", { enumerable: true, get: function () { return url_1.encodeTWAConnectURLParams; } });\nObject.defineProperty(exports, \"getAppWalletShortDeepLink\", { enumerable: true, get: function () { return url_1.getAppWalletShortDeepLink; } });\nObject.defineProperty(exports, \"openOKXUniversalLink\", { enumerable: true, get: function () { return url_1.openOKXUniversalLink; } });\nObject.defineProperty(exports, \"getOKXLink\", { enumerable: true, get: function () { return url_1.getOKXLink; } });\nvar utils_1 = require(\"./utils\");\nObject.defineProperty(exports, \"hexToByteArray\", { enumerable: true, get: function () { return utils_1.hexToByteArray; } });\nObject.defineProperty(exports, \"toHexString\", { enumerable: true, get: function () { return utils_1.toHexString; } });\nObject.defineProperty(exports, \"concatUint8Arrays\", { enumerable: true, get: function () { return utils_1.concatUint8Arrays; } });\nObject.defineProperty(exports, \"splitToUint8Arrays\", { enumerable: true, get: function () { return utils_1.splitToUint8Arrays; } });\nObject.defineProperty(exports, \"base64encode\", { enumerable: true, get: function () { return utils_1.base64encode; } });\nObject.defineProperty(exports, \"base64decode\", { enumerable: true, get: function () { return utils_1.base64decode; } });\nObject.defineProperty(exports, \"isIos\", { enumerable: true, get: function () { return utils_1.isIos; } });\nObject.defineProperty(exports, \"isValidObject\", { enumerable: true, get: function () { return utils_1.isValidObject; } });\nObject.defineProperty(exports, \"toSafeBase64FromBase64\", { enumerable: true, get: function () { return utils_1.toSafeBase64FromBase64; } });\nObject.defineProperty(exports, \"useShortLink\", { enumerable: true, get: function () { return utils_1.useShortLink; } });\nObject.defineProperty(exports, \"getChainId\", { enumerable: true, get: function () { return utils_1.getChainId; } });\nvar web_api_1 = require(\"./web-api\");\nObject.defineProperty(exports, \"openLink\", { enumerable: true, get: function () { return web_api_1.openLink; } });\nObject.defineProperty(exports, \"openLinkBlank\", { enumerable: true, get: function () { return web_api_1.openLinkBlank; } });\nObject.defineProperty(exports, \"openDeeplinkWithFallback\", { enumerable: true, get: function () { return web_api_1.openDeeplinkWithFallback; } });\nObject.defineProperty(exports, \"isMobileUserAgent\", { enumerable: true, get: function () { return web_api_1.isMobileUserAgent; } });\nObject.defineProperty(exports, \"isOS\", { enumerable: true, get: function () { return web_api_1.isOS; } });\nObject.defineProperty(exports, \"isBrowser\", { enumerable: true, get: function () { return web_api_1.isBrowser; } });\nvar tma_api_1 = require(\"./tma-api\");\nObject.defineProperty(exports, \"versionCompare\", { enumerable: true, get: function () { return tma_api_1.versionCompare; } });\nvar request_1 = require(\"./request\");\nObject.defineProperty(exports, \"checkMetaData\", { enumerable: true, get: function () { return request_1.checkMetaData; } });\nvar utils_2 = require(\"./utils\");\nObject.defineProperty(exports, \"replaceChainNameToChainId\", { enumerable: true, get: function () { return utils_2.replaceChainNameToChainId; } });\nObject.defineProperty(exports, \"replaceChainIdToChainName\", { enumerable: true, get: function () { return utils_2.replaceChainIdToChainName; } });\nObject.defineProperty(exports, \"chainName2IdMap\", { enumerable: true, get: function () { return utils_2.chainName2IdMap; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getDefaultReporter = getDefaultReporter;\nexports.logDebug = logDebug;\nexports.logError = logError;\nexports.logWarning = logWarning;\nexports.reportEvent = reportEvent;\nexports.reportLog = reportLog;\nconst debug = false;\nconst forceReport = false;\nconst report_1 = require(\"./report\");\nconst defaultReporter = new report_1.OKXReporter();\nfunction getDefaultReporter() {\n    return defaultReporter;\n}\nconst packageJson = require('../../package.json');\nconst version = packageJson.version;\nfunction logDebug(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.log(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction logError(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.error(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n            if (forceReport || !debug) {\n                let content = '';\n                content += [...args].reduce((result, item) => {\n                    if (typeof item == 'string') {\n                        result += ',' + item;\n                    }\n                    else if (typeof item == 'object') {\n                        result += JSON.stringify(item);\n                    }\n                });\n                defaultReporter.sendRecordContent(content, report_1.OKXReportType.LOG, '');\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction logWarning(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.warn(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction reportEvent(type, action, content) {\n    return __awaiter(this, void 0, void 0, function* () {\n        yield defaultReporter.sendRecordContent(content, type, action);\n    });\n}\nfunction reportLog(content_1) {\n    return __awaiter(this, arguments, void 0, function* (content, action = 'default') {\n        // await defaultReporter.sendRecordContent(content, OKXReportType.LOG, action)\n    });\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mediaNotTouch = exports.mediaTouch = exports.maxWidth = void 0;\nexports.isDevice = isDevice;\nexports.media = media;\nexports.mediaMin = mediaMin;\nexports.mediaMax = mediaMax;\nexports.mediaMinMax = mediaMinMax;\nconst web_api_1 = require(\"../utils/web-api\");\nconst tma_api_1 = require(\"../utils/tma-api\");\nconst url_1 = require(\"./url\");\nconst log_1 = require(\"./log\");\nexports.maxWidth = {\n    mobile: 440,\n    tablet: 1020\n};\nfunction isDevice(device) {\n    var _a;\n    const window = (0, url_1.getWindow)();\n    if (!window) {\n        return device === 'desktop';\n    }\n    // TODO: remove this check when weba will fix viewport width\n    if ((0, tma_api_1.isTmaPlatform)('weba')) {\n        return true;\n    }\n    const width = window.innerWidth;\n    switch (device) {\n        case 'desktop':\n            return width > exports.maxWidth.tablet;\n        case 'tablet':\n            return width > exports.maxWidth.mobile;\n        default:\n        case 'mobile':\n            let isMobile = width <= exports.maxWidth.mobile || (0, web_api_1.isOS)('ios', 'android', 'ipad');\n            if (isMobile) {\n                const isTelegram = !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n                const maxTouchPoints = navigator.maxTouchPoints || 0;\n                if (isTelegram && maxTouchPoints === 0) {\n                    isMobile = false;\n                }\n                (0, log_1.logDebug)(\"isDevice mobile isTelegram and maxTouchPoints:\", isMobile, isTelegram, maxTouchPoints);\n            }\n            return isMobile;\n    }\n}\nfunction media(device) {\n    switch (device) {\n        case 'mobile':\n            return `@media (max-width: ${exports.maxWidth.mobile}px)`;\n        case 'tablet':\n            return `@media (max-width: ${exports.maxWidth.tablet}px) (min-width: ${exports.maxWidth.mobile}px)`;\n        default:\n        case 'desktop':\n            return `@media (min-width: ${exports.maxWidth.tablet}px)`;\n    }\n}\nfunction mediaMin(px) {\n    return `@media (min-width: ${px}px)`;\n}\nfunction mediaMax(px) {\n    return `@media (max-width: ${px}px)`;\n}\nfunction mediaMinMax(pxMin, pxMax) {\n    return `@media (min-width: ${pxMin}px) and (max-width: ${pxMax}px)`;\n}\nexports.mediaTouch = '@media (hover: none)';\nexports.mediaNotTouch = '@media not all and (hover: none)';\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXReporter = exports.OKXReportSide = exports.OKXReportType = exports.versionStr = void 0;\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst log_1 = require(\"./log\");\nconst url_1 = require(\"./url\");\nconst utils_1 = require(\"../utils\");\nconst localforage_1 = __importDefault(require(\"localforage\"));\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nexports.versionStr = '1.6.9';\nconst reportApiList = [\n    'https://www.okx.com/dappstat/wallet-connect',\n    'https://www.okx.ac/dappstat/wallet-connect'\n];\nconst reportCacheKey = 'OKX_RP_CK';\nconst reportUUIDKey = 'OKX_RP_UUID_CK';\nconst MAX_LIMIT_REPORTCOUNT = 100;\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"*/*\",\n    \"Content-Type\": \"text/plain\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\nexports.OKXReportType = {\n    PAGE_IN: 'page_in',\n    PAGE_OUT: 'page_out',\n    CLICK: 'click',\n    LOG: 'log',\n};\nexports.OKXReportSide = {\n    DAPP: 'dapp',\n    WALLET: 'wallet',\n};\nclass IReporter {\n}\nconst fetchWithTimeout = (url, options, timeout = 5000) => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n    const fetchPromise = (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, options), { signal }));\n    const timeoutPromise = new Promise((_, reject) => setTimeout(() => {\n        controller.abort();\n        reject(new Error('Request timed out'));\n    }, timeout));\n    return Promise.race([fetchPromise, timeoutPromise]);\n};\nconst fetchListWithTimeout = (urls_1, ...args_1) => __awaiter(void 0, [urls_1, ...args_1], void 0, function* (urls, options = {}, timeout = 5000) {\n    for (const url of urls) {\n        try {\n            const controller = new AbortController();\n            const signal = controller.signal;\n            const fetchPromise = (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, options), { signal }));\n            const timeoutPromise = new Promise((_, reject) => setTimeout(() => {\n                controller.abort();\n                reject(new Error('Request timed out'));\n            }, timeout));\n            const response = yield Promise.race([fetchPromise, timeoutPromise]);\n            if (response.ok) {\n                return response;\n            }\n            if (response.status == 502) {\n                console.error(`Fetch error status 502`, url);\n                return response;\n            }\n        }\n        catch (error) {\n            console.error(`Fetch error for ${url}:`, error);\n        }\n    }\n    console.error(`'All fetch attempts failed.'`);\n    throw new Error('All fetch attempts failed.');\n});\nclass OKXReporter {\n    constructor() {\n        this.currentSide = exports.OKXReportSide.DAPP;\n        this.currentVersion = exports.versionStr;\n        this.storage = localforage_1.default.createInstance({\n            name: \"OKXReporter\"\n        });\n        this.recordList = new Array();\n        this.currentUUID = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(16));\n    }\n    configVersionAndSide(version, side, appname) {\n        this.currentVersion = version;\n        this.currentSide = side;\n        this.appName = appname;\n    }\n    get recordCacheKey() {\n        return reportCacheKey + \"@\" + this.appName;\n    }\n    get reportPlatform() {\n        if ((0, utils_1.isMobileUserAgent)()) {\n            if ((0, utils_1.isIos)()) {\n                return 'iOS';\n            }\n            else {\n                return 'android';\n            }\n        }\n        else {\n            return 'pc';\n        }\n    }\n    beginReport() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.startErrorCatching();\n            let records = yield this.storage.getItem(this.recordCacheKey);\n            let uuid = yield this.storage.getItem(reportUUIDKey);\n            if (uuid) {\n                this.currentUUID = uuid;\n            }\n            else {\n                this.storage.setItem(reportUUIDKey, this.currentUUID);\n            }\n            if (records) {\n                this.recordList = records;\n                (0, log_1.logDebug)('resume records from cache length: ', this.recordList.length);\n                yield this.sendCachedRecords();\n            }\n        });\n    }\n    startErrorCatching() {\n        let window = (0, url_1.getWindow)();\n        if (window) {\n            (0, log_1.logDebug)('begin capture console error');\n            // window.onerror = (event: Event | string, source?: string, lineno?: number, colno?: number, error?: Error) => {\n            //     logDebug('capture error info:', error, source)\n            //     this.markRecord(error?.message+'/'+error?.name+'/'+error?.stack, OKXReportType.LOG, '', this.currentSide)\n            // }\n        }\n    }\n    cachedErrors() {\n        return this.recordList;\n    }\n    sendRecord(record) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    const body = JSON.stringify(record);\n                    (0, log_1.logDebug)('[REPORT] record: ', body);\n                    const res = yield fetchListWithTimeout(reportApiList, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body: body }));\n                    (0, log_1.logDebug)('[REPORT] get rsp:', res);\n                    if (res && res.status && res.status == 200) {\n                        this.recordList = this.recordList.filter((item) => {\n                            return item.timestamp != record.timestamp || item.content != record.content;\n                        });\n                        yield this.storage.setItem(this.recordCacheKey, this.recordList);\n                        resolve(true);\n                    }\n                    else {\n                        reject(false);\n                    }\n                }\n                catch (e) {\n                    (0, log_1.logDebug)('send record error:', e);\n                    resolve(true);\n                    // reject(e)\n                }\n            }));\n        });\n    }\n    sendRecordContent(content, type, action) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            let path = (_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.location.pathname;\n            let location = (_b = (0, url_1.getWindow)()) === null || _b === void 0 ? void 0 : _b.location.origin;\n            if (path && location) {\n                location = location + path;\n            }\n            let language = (_c = (0, url_1.getWindow)()) === null || _c === void 0 ? void 0 : _c.navigator.language;\n            let ua = (_d = (0, url_1.getWindow)()) === null || _d === void 0 ? void 0 : _d.navigator.userAgent;\n            let platform = this.reportPlatform;\n            let reportItem = {\n                uuid: this.currentUUID,\n                version: this.currentVersion,\n                content: content,\n                action: action,\n                side: this.currentSide,\n                timestamp: new Date().getTime(),\n                url: location,\n                lang: language,\n                type: type,\n                platform: platform,\n                \"user-agent\": ua\n            };\n            yield this.markRecordItem(reportItem);\n            yield this.sendRecord(reportItem);\n        });\n    }\n    sendCachedRecords() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let sendList = this.recordList.map(record => this.sendRecord(record));\n                (0, log_1.logDebug)('[REPORT] submit & clean recorded caches begin @', new Date().toUTCString());\n                Promise.allSettled(sendList).then((results) => {\n                    (0, log_1.logDebug)('[REPORT] submit & clean recorded caches ends @', new Date().toUTCString());\n                    let keepIndex = [];\n                    results.forEach((result, index) => {\n                        if (result.status == \"rejected\") {\n                            keepIndex.push(index);\n                        }\n                    });\n                    this.recordList = this.recordList.filter((_, index) => !keepIndex.includes(index));\n                    this.storage.setItem(this.recordCacheKey, this.recordList).then(function (value) {\n                        resolve();\n                    }).catch(function (err) {\n                        reject(err);\n                    });\n                });\n            }));\n        });\n    }\n    markRecordItem(item) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.recordList.push(item);\n            if (this.recordList.length > MAX_LIMIT_REPORTCOUNT) {\n                let offset = this.recordList.length - MAX_LIMIT_REPORTCOUNT;\n                this.recordList.splice(0, offset);\n            }\n            return new Promise((resolve, reject) => {\n                this.storage.setItem(this.recordCacheKey, this.recordList).then(function (value) {\n                    resolve(item);\n                }).catch(function (err) {\n                    reject(err);\n                });\n            });\n        });\n    }\n    markRecord(content, type, action, side) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            let path = (_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.location.pathname;\n            let location = (_b = (0, url_1.getWindow)()) === null || _b === void 0 ? void 0 : _b.location.origin;\n            if (path && location) {\n                location = location + path;\n            }\n            let language = (_c = (0, url_1.getWindow)()) === null || _c === void 0 ? void 0 : _c.navigator.language;\n            let platform = this.reportPlatform;\n            let ua = (_d = (0, url_1.getWindow)()) === null || _d === void 0 ? void 0 : _d.navigator.userAgent;\n            let reportItem = {\n                uuid: this.currentUUID,\n                version: this.currentVersion,\n                content: content,\n                action: action,\n                side: side,\n                timestamp: new Date().getTime(),\n                url: location,\n                lang: language,\n                type: type,\n                platform: platform,\n                \"user-agent\": ua\n            };\n            return yield this.markRecordItem(reportItem);\n        });\n    }\n}\nexports.OKXReporter = OKXReporter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Report_WalletType_Key = exports.Report_Proceed_QRCode_Click = exports.Report_ChooseType_Download_Click = exports.Report_ChooseType_ConnectWallet_Click = exports.Report_Proceed_Retry_Click = exports.Report_ChooseType_ConnectWallet_View = exports.Report_Loading_ConnectWallet_View = exports.Report_Proceed_QRCode_View = exports.Report_Proceed_Proceed_View = void 0;\nexports.Report_Proceed_Proceed_View = \"OKXConnectSDK_Proceed_Proceed_View\";\nexports.Report_Proceed_QRCode_View = \"OKXConnectSDK_Proceed_QRCode_View\";\nexports.Report_Loading_ConnectWallet_View = \"OKXConnectSDK_Loading_ConnectWallet_View\";\nexports.Report_ChooseType_ConnectWallet_View = \"OKXConnectSDK_ChooseType_ConnectWallet_View\";\nexports.Report_Proceed_Retry_Click = \"OKXConnectSDK_Proceed_Retry_Click\";\nexports.Report_ChooseType_ConnectWallet_Click = \"OKXConnectSDK_ChooseType_ConnectWallet_Click\";\nexports.Report_ChooseType_Download_Click = \"OKXConnectSDK_ChooseType_Download_Click\";\nexports.Report_Proceed_QRCode_Click = \"OKXConnectSDK_Proceed_QRCode_Click\";\nexports.Report_WalletType_Key = 'wallet_type';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkMetaData = checkMetaData;\nconst protocol_1 = require(\"../protocol\");\nfunction checkMetaData(dappMetaData) {\n    if (!dappMetaData) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"You have to specify a `dappMetaData`in the options.\");\n    }\n    if (!dappMetaData.name) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"dappName is required\");\n    }\n    if (!dappMetaData.icon) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"icon is required\");\n    }\n    return true;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.safeJsonParse = safeJsonParse;\nexports.safeJsonStringify = safeJsonStringify;\nconst log_1 = require(\"./log\");\nconst JSONStringify = (data) => JSON.stringify(data, (_, value) => (typeof value === \"bigint\" ? value.toString() + \"n\" : value));\n/*\n  Function to parse JSON.\n  If JSON has values in our custom format BigInt (strings with \"n\" character at the end), we just parse them to BigInt values.\n  If JSON has big number values, but not in our custom format, we copy it, and in a copy we convert those values to our custom format,\n  then parse them to BigInt values.\n  Other values (not big numbers and not our custom format BigInt values) are not affected and parsed as native JSON.parse() would parse them.\n*/\nconst JSONParse = (json) => {\n    /*\n      Big numbers are found and marked using Regex with this condition:\n      Number's length is bigger than 16 || Number's length is 16 and any numerical digit of the number is greater than that of the Number.MAX_SAFE_INTEGER\n      Additionally, it skips values that are strings (between double quotes).\n      */\n    // prettier-ignore\n    // eslint-disable-next-line no-useless-escape\n    const numbersBiggerThanMaxInt = /:(\\b\\d{17,}|\\b(?:[9](?:[1-9]07199254740991|0[1-9]7199254740991|00[8-9]199254740991|007[2-9]99254740991|007199[3-9]54740991|0071992[6-9]4740991|00719925[5-9]740991|007199254[8-9]40991|0071992547[5-9]0991|00719925474[1-9]991|00719925474099[2-9])))(?=[,\\}\\]]|$)/g;\n    const serializedData = json.replace(numbersBiggerThanMaxInt, (match, group) => `:\"${group}n\"`);\n    try {\n        return JSON.parse(serializedData, (_, value) => {\n            const isCustomFormatBigInt = typeof value === \"string\" && value.match(/^\\d+n$/);\n            if (isCustomFormatBigInt)\n                return BigInt(value.substring(0, value.length - 1));\n            return value;\n        });\n    }\n    catch (e) {\n        return JSON.parse(json);\n    }\n};\nfunction safeJsonParse(value) {\n    if (typeof value !== \"string\") {\n        (0, log_1.logDebug)(value);\n        throw new Error(`Cannot safe json parse value of type ${typeof value}`);\n    }\n    try {\n        return JSONParse(value);\n    }\n    catch (e) {\n        // eslint-disable-next-line no-console\n        console.error(\"safeJsonParse error:\", e);\n        return value;\n    }\n}\nfunction safeJsonStringify(value) {\n    return typeof value === \"string\" ? value : JSONStringify(value) || \"\";\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.okxfromString = okxfromString;\nexports.okxtoString = okxtoString;\nexports.alloc = alloc;\nexports.allocUnsafe = allocUnsafe;\nconst basics_1 = require(\"multiformats/basics\");\nconst log_1 = require(\"../utils/log\");\nfunction okxfromString(string, encoding = 'utf8') {\n    const base = BASES[encoding];\n    (0, log_1.logDebug)(\"okxfromstring ====> \");\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    return base.decoder.decode(`${base.prefix}${string}`);\n}\nfunction okxtoString(array, encoding = 'utf8') {\n    const base = BASES[encoding];\n    (0, log_1.logDebug)(\"okxtoString ====> \");\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    return base.encoder.encode(array).substring(1);\n}\nfunction alloc(size = 0) {\n    return new Uint8Array(size);\n}\nfunction allocUnsafe(size = 0) {\n    return new Uint8Array(size);\n}\nfunction createCodec(name, prefix, encode, decode) {\n    return {\n        name,\n        prefix,\n        encoder: {\n            name,\n            prefix,\n            encode\n        },\n        decoder: { decode }\n    };\n}\nconst string = createCodec('utf8', 'u', buf => {\n    const decoder = new TextDecoder('utf8');\n    return 'u' + decoder.decode(buf);\n}, str => {\n    const encoder = new TextEncoder();\n    return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n    let result = 'a';\n    for (let i = 0; i < buf.length; i++) {\n        let bufNum = buf[i];\n        if (bufNum && String.fromCharCode(bufNum)) {\n            result += String.fromCharCode(bufNum);\n        }\n    }\n    return result;\n}, str => {\n    str = str.substring(1);\n    const buf = allocUnsafe(str.length);\n    for (let i = 0; i < str.length; i++) {\n        buf[i] = str.charCodeAt(i);\n    }\n    return buf;\n});\nconst BASES = Object.assign({ utf8: string, 'utf-8': string, hex: basics_1.bases.base16, latin1: ascii, ascii: ascii, binary: ascii }, basics_1.bases);\n","\"use strict\";\nvar _a, _b, _c, _d, _e, _f, _g;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isTmaPlatform = isTmaPlatform;\nexports.isInTMA = isInTMA;\nexports.inTg = inTg;\nexports.isInTelegramBrowser = isInTelegramBrowser;\nexports.sendExpand = sendExpand;\nexports.sendOpenTelegramLink = sendOpenTelegramLink;\nexports.versionCompare = versionCompare;\nconst url_1 = require(\"./url\");\nconst log_1 = require(\"./log\");\nconst protocol_1 = require(\"../protocol\");\nconst web_api_1 = require(\"./web-api\");\nlet initParams = {};\ntry {\n    let locationHash = location.hash.toString();\n    initParams = urlParseHashParams(locationHash);\n}\ncatch (e) { }\nlet tmaPlatform = 'unknown';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppPlatform) {\n    tmaPlatform = (_a = initParams.tgWebAppPlatform) !== null && _a !== void 0 ? _a : 'unknown';\n}\nif (tmaPlatform === 'unknown') {\n    const window = (0, url_1.getWindow)();\n    tmaPlatform = (_d = (_c = (_b = window === null || window === void 0 ? void 0 : window.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : 'unknown';\n}\nlet webAppVersion = '6.0';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppVersion) {\n    webAppVersion = initParams.tgWebAppVersion;\n}\nif (!webAppVersion) {\n    const window = (0, url_1.getWindow)();\n    webAppVersion = (_g = (_f = (_e = window === null || window === void 0 ? void 0 : window.Telegram) === null || _e === void 0 ? void 0 : _e.WebApp) === null || _f === void 0 ? void 0 : _f.version) !== null && _g !== void 0 ? _g : '6.0';\n}\n/**\n * Returns true if the app is running in TMA on the specified platform.\n * @param platforms\n */\nfunction isTmaPlatform(...platforms) {\n    return platforms.includes(tmaPlatform);\n}\n/**\n * Returns true if the app is running in TMA.\n */\nfunction isInTMA() {\n    var _a;\n    return tmaPlatform !== 'unknown' || !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n}\nfunction inTg() {\n    // return true\n    return isInTelegramBrowser() || isInTMA();\n}\n/**\n * Returns true if the app is running in the Telegram browser.\n */\nfunction isInTelegramBrowser() {\n    var _a;\n    const isTelegramWebview = !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebview);\n    return (isInTMA() || isTelegramWebview) && tmaPlatform === 'unknown';\n}\n/**\n * Expand the app window.\n */\nfunction sendExpand() {\n    postEvent('web_app_expand', {});\n}\n/**\n * Opens link in TMA or in new tab and returns a function that closes the tab.\n * @param link The link to open.\n * @param fallback The function to call if the link can't be opened in TMA.\n */\nfunction sendOpenTelegramLink(link, fallback) {\n    const url = new URL(link);\n    if (url.protocol !== 'http:' && url.protocol !== 'https:') {\n        if (fallback) {\n            return fallback();\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Url protocol is not supported: ${url}`);\n    }\n    if (url.hostname !== 't.me') {\n        if (fallback) {\n            return fallback();\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Url host is not supported: ${url}`);\n    }\n    const pathFull = url.pathname + url.search;\n    if (isIframe() || versionAtLeast('6.1')) {\n        postEvent('web_app_open_tg_link', { path_full: pathFull });\n    }\n    else {\n        (0, web_api_1.openLinkBlank)('https://t.me' + pathFull);\n    }\n}\nfunction isIframe() {\n    try {\n        const window = (0, url_1.getWindow)();\n        if (!window) {\n            return false;\n        }\n        return window.parent != null && window !== window.parent;\n    }\n    catch (e) {\n        return false;\n    }\n}\nfunction postEvent(eventType, eventData) {\n    try {\n        const window = (0, url_1.getWindow)();\n        if (!window) {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Can't post event to parent window: window is not defined`);\n        }\n        if (window.TelegramWebviewProxy !== undefined) {\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.TelegramWebviewProxy.postEvent(eventType, JSON.stringify(eventData));\n        }\n        else if (window.external && 'notify' in window.external) {\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.external.notify(JSON.stringify({ eventType: eventType, eventData: eventData }));\n        }\n        else if (isIframe()) {\n            const trustedTarget = '*';\n            const message = JSON.stringify({ eventType: eventType, eventData: eventData });\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.parent.postMessage(message, trustedTarget);\n        }\n        else {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Can't post event to TMA`);\n        }\n    }\n    catch (e) {\n        (0, log_1.logError)(`Can't post event to parent window: ${e}`);\n    }\n}\nfunction urlParseHashParams(locationHash) {\n    locationHash = locationHash.replace(/^#/, '');\n    let params = {};\n    if (!locationHash.length) {\n        return params;\n    }\n    if (locationHash.indexOf('=') < 0 && locationHash.indexOf('?') < 0) {\n        params._path = urlSafeDecode(locationHash);\n        return params;\n    }\n    let qIndex = locationHash.indexOf('?');\n    if (qIndex >= 0) {\n        let pathParam = locationHash.substr(0, qIndex);\n        params._path = urlSafeDecode(pathParam);\n        locationHash = locationHash.substr(qIndex + 1);\n    }\n    let query_params = urlParseQueryString(locationHash);\n    for (let k in query_params) {\n        params[k] = query_params[k];\n    }\n    return params;\n}\nfunction urlSafeDecode(urlencoded) {\n    try {\n        urlencoded = urlencoded.replace(/\\+/g, '%20');\n        return decodeURIComponent(urlencoded);\n    }\n    catch (e) {\n        return urlencoded;\n    }\n}\nfunction urlParseQueryString(queryString) {\n    let params = {};\n    if (!queryString.length) {\n        return params;\n    }\n    let queryStringParams = queryString.split('&');\n    let i, param, paramName, paramValue;\n    for (i = 0; i < queryStringParams.length; i++) {\n        param = queryStringParams[i].split('=');\n        paramName = urlSafeDecode(param[0]);\n        paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n        params[paramName] = paramValue;\n    }\n    return params;\n}\nfunction versionCompare(v1, v2) {\n    if (typeof v1 !== 'string')\n        v1 = '';\n    if (typeof v2 !== 'string')\n        v2 = '';\n    let v1List = v1.replace(/^\\s+|\\s+$/g, '').split('.');\n    let v2List = v2.replace(/^\\s+|\\s+$/g, '').split('.');\n    let a, i, p1, p2;\n    a = Math.max(v1List.length, v2List.length);\n    for (i = 0; i < a; i++) {\n        p1 = parseInt(v1List[i]) || 0;\n        p2 = parseInt(v2List[i]) || 0;\n        if (p1 === p2)\n            continue;\n        if (p1 > p2)\n            return 1;\n        return -1;\n    }\n    return 0;\n}\nfunction versionAtLeast(ver) {\n    return versionCompare(webAppVersion, ver) >= 0;\n}\n","\"use strict\";\nvar _a, _b, _c, _d;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.removeUrlLastSlash = removeUrlLastSlash;\nexports.addPathToUrl = addPathToUrl;\nexports.getUniversalLink = getUniversalLink;\nexports.openOKXDeeplink = openOKXDeeplink;\nexports.openOKXUniversalLink = openOKXUniversalLink;\nexports.openOKXDeeplinkWithFallback = openOKXDeeplinkWithFallback;\nexports.getWindow = getWindow;\nexports.isTelegramUrl = isTelegramUrl;\nexports.encodeTelegramUrlParameters = encodeTelegramUrlParameters;\nexports.encodeConnectParams = encodeConnectParams;\nexports.encodeTWAConnectURLParams = encodeTWAConnectURLParams;\nexports.getAppWalletDeepLink = getAppWalletDeepLink;\nexports.getAppWalletShortDeepLink = getAppWalletShortDeepLink;\nexports.getTelegramWalletTWAUrl = getTelegramWalletTWAUrl;\nexports.openOKXTMAWalletlinkWithFallback = openOKXTMAWalletlinkWithFallback;\nexports.isInTMA = isInTMA;\nexports.isInTelegramBrowser = isInTelegramBrowser;\nexports.getOKXLink = getOKXLink;\nconst protocol_1 = require(\"../protocol\");\nconst log_1 = require(\"./log\");\nconst constants_1 = require(\"../protocol/constants\");\nconst utils_1 = require(\"./utils\");\nconst tma_api_1 = require(\"./tma-api\");\nconst constants_2 = require(\"../connect/constants\");\nfunction removeUrlLastSlash(url) {\n    if (url.slice(-1) === '/') {\n        return url.slice(0, -1);\n    }\n    return url;\n}\nfunction addPathToUrl(url, path) {\n    return removeUrlLastSlash(url) + '/' + path;\n}\nfunction getUniversalLink(deeplinkUrl, useStandardUniversalLink = false) {\n    console.log(\"getUniversalLink deeplinkUrl:\", deeplinkUrl, \", useStandardUniversalLink:\", useStandardUniversalLink);\n    /*const replaceStrWithParam = `${standardDeeplink}?param=`\n    if(!useStandardUniversalLink && deeplinkUrl.startsWith(replaceStrWithParam)){\n        const cleanUrl = deeplinkUrl.replace(replaceStrWithParam, '');\n        logDebug(\"getUniversalLink cleanUrl:\",cleanUrl)\n        const deeplinkEncodeUrl= encodeURIComponent(cleanUrl);\n        logDebug(\"getUniversalLink standardUniversalLink:\",standardUniversalLink)\n        logDebug(\"getUniversalLink `${shortUniversalLink}?param=${deeplinkEncodeUrl}`:\",`${shortUniversalLink}?param=${deeplinkEncodeUrl}`)\n        return `${shortUniversalLink}?param=${deeplinkEncodeUrl}`;\n    }else if(!useStandardUniversalLink && deeplinkUrl == standardDeeplink){\n        logDebug(\"getUniversalLink shortUniversalLink:\",shortUniversalLink)\n        return shortUniversalLink;\n    }else {\n        const deeplinkEncodeUrl= encodeURIComponent(deeplinkUrl);\n        console.log(\"getUniversalLink standardUniversalLink:\",standardUniversalLink)\n\n        return `${standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`;\n    }*/\n    const deeplinkEncodeUrl = encodeURIComponent(deeplinkUrl);\n    console.log(\"getUniversalLink standardUniversalLink:\", protocol_1.standardUniversalLink);\n    console.log(\"getUniversalLink standardUniversalLink:\", `${protocol_1.standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`);\n    return `${protocol_1.standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`;\n}\nfunction openOKXDeeplink(deeplinkUrl) {\n    var _a;\n    const fullUrl = getUniversalLink(deeplinkUrl);\n    const isTelegram = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n    console.log(\"openOKXDeeplink fullUrl:\", fullUrl);\n    if (!(0, utils_1.isIos)() || (0, utils_1.isInIOSLine)()) {\n        if (isTelegram) {\n            window.open(deeplinkUrl, '_blank');\n        }\n        else {\n            window.location.href = deeplinkUrl;\n        }\n    }\n    else {\n        openOKXUniversalLink(fullUrl);\n    }\n}\nfunction openOKXUniversalLink(fullUrl) {\n    if (!(0, utils_1.isIos)()) {\n        // if (isTelegram) {\n        window.open(fullUrl, '_blank');\n        // } else {\n        //     window.location.href = fullUrl;\n        // }\n    }\n    else {\n        if (isInTMA()) {\n            window.open(fullUrl, '_blank');\n        }\n        else {\n            console.log(\"windowOpen[before]: \", Date.now());\n            if (window === null || window === void 0 ? void 0 : window.okxLogDebug) {\n                window.open(fullUrl, '_blank');\n            }\n            else {\n                window.open(fullUrl, '_self');\n            }\n            console.log(\"windowOpen[after]: \", Date.now());\n        }\n    }\n}\nfunction openOKXDeeplinkWithFallback(deeplinkUrl) {\n    var _a;\n    const fullUrl = getUniversalLink(deeplinkUrl);\n    const isTelegram = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n    console.log(\"openOKXDeeplinkWithFallback fullUrl:\", fullUrl);\n    let deepLinkOpened = false;\n    const timeoutDuration = 3000; // 1.5秒的等待时间\n    const downloadUrl = protocol_1.standardUniversalLink;\n    console.log(\"openOKXDeeplinkWithFallback standardUniversalLink:\", protocol_1.standardUniversalLink);\n    let newWindow = null;\n    let fallbackToDownloadPage = () => {\n        console.log(\"fallbackToDownloadPage :empty\");\n    };\n    if (!(0, utils_1.isIos)()) {\n        fallbackToDownloadPage = () => {\n            if (!deepLinkOpened) {\n                if (newWindow) {\n                    newWindow.open(fullUrl, '_self');\n                }\n                else {\n                    window.open(fullUrl, '_blank');\n                }\n            }\n        };\n    }\n    else if ((0, utils_1.isInIOSLine)()) {\n        fallbackToDownloadPage = () => {\n            if (!deepLinkOpened) {\n                window.open(fullUrl, '_self');\n            }\n        };\n    }\n    if (!(0, utils_1.isIos)() || (0, utils_1.isInIOSLine)() || (0, utils_1.isInIOSLark)() || (0, utils_1.isInIOSWeChat)()) {\n        if (isTelegram) {\n            newWindow = window.open(deeplinkUrl, '_blank');\n        }\n        else {\n            window.location.href = deeplinkUrl;\n        }\n        setTimeout(fallbackToDownloadPage, timeoutDuration);\n        let count = 0;\n        let interval = setInterval(() => {\n            count++;\n            console.log(\"windowOpen --> interval:\", count, document.hidden, document.visibilityState);\n            if (count >= 10 || document.hidden) {\n                deepLinkOpened = true;\n                clearInterval(interval);\n                console.log(\"windowOpen :cleat: ${count}\");\n            }\n        }, 200);\n        window.addEventListener('blur', () => {\n            deepLinkOpened = true;\n        }, { once: true });\n        document.addEventListener('visibilitychange', () => {\n            if (document.visibilityState === 'hidden') {\n                deepLinkOpened = true;\n            }\n        });\n    }\n    else {\n        if (isTelegram) {\n            window.open(fullUrl, '_blank');\n        }\n        else {\n            console.log(\"windowOpen[before]: \", Date.now());\n            if (window === null || window === void 0 ? void 0 : window.okxLogDebug) {\n                window.open(fullUrl, '_blank');\n            }\n            else {\n                window.open(fullUrl, '_self');\n            }\n            console.log(\"windowOpen[after]: \", Date.now());\n        }\n    }\n}\nfunction getWindow() {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    return undefined;\n}\nfunction isTelegramUrl(link) {\n    if (!link) {\n        return false;\n    }\n    const url = new URL(link);\n    return url.protocol === 'tg:' || url.hostname === 't.me';\n}\nfunction encodeTelegramUrlParameters(parameters) {\n    let encodedParameters = parameters;\n    encodedParameters = encodedParameters.replace(/\\./g, '%2E');\n    encodedParameters = encodedParameters.replace(/-/g, '%2D');\n    encodedParameters = encodedParameters.replace(/_/g, '%5F');\n    encodedParameters = encodedParameters.replace(/&/g, '-');\n    encodedParameters = encodedParameters.replace(/=/g, '__');\n    encodedParameters = encodedParameters.replace(/%/g, '--');\n    return encodedParameters;\n}\nfunction encodeConnectParams(connectRequest) {\n    let connectRequestWithVersion = Object.assign(Object.assign({}, connectRequest), { protocolVersion: constants_2.CONNECT_PROTOCOL_VER });\n    const connectRequestStr = JSON.stringify(connectRequestWithVersion);\n    (0, log_1.logDebug)(\"url encodeConnectParams connectRequestStr \", connectRequestStr);\n    const utf8Array = new TextEncoder().encode(connectRequestStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    // .replace(/\\+/g, '-')\n    // .replace(/\\//g, '_')\n    // .replace(/=+$/, ''); //Compatible with older versions of iOS. Cannot be added directly  (Base64 URL Safe)\n    (0, log_1.logDebug)(\"url encodeConnectParams base64Encoded \", base64Encoded);\n    return base64Encoded;\n}\nfunction encodeTWAConnectURLParams(connectRequest) {\n    const connectRequestStr = JSON.stringify({ topic: connectRequest.topic, clientId: connectRequest.clientId });\n    (0, log_1.logDebug)(\"url encodeConnectParams connectRequestStr\", connectRequestStr);\n    const utf8Array = new TextEncoder().encode(connectRequestStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    return base64Encoded;\n}\nfunction getAppWalletDeepLink(connectParam) {\n    return `${protocol_1.standardDeeplink}?param=${connectParam}`;\n}\nfunction getAppWalletShortDeepLink(topic, clientId) {\n    return `${constants_1.shortUniversalLink}?topic=${topic}${(0, utils_1.getLastSixMd5Hash)(clientId)}`;\n}\n//  make telegram okx wallet TWA url\nfunction getTelegramWalletTWAUrl(connectParam, redirectStr) {\n    let base64Content = { okxconnect: \"\", redirect: \"\", extraparams: \"\", fromtg: false };\n    if (connectParam) {\n        base64Content.okxconnect = connectParam;\n    }\n    if (redirectStr) {\n        base64Content.redirect = redirectStr;\n    }\n    if (!isInTMA()) {\n        base64Content.fromtg = false;\n    }\n    else {\n        base64Content.fromtg = true;\n    }\n    (0, log_1.logDebug)('getTelegramWalletTWAUrl redirect:', base64Content.redirect);\n    let base64ContentStr = JSON.stringify(base64Content);\n    const utf8Array = new TextEncoder().encode(base64ContentStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    const urlSafeBase64 = (0, utils_1.toSafeBase64FromBase64)(base64Encoded);\n    (0, log_1.logDebug)('[TWA] open link:', base64Content, base64Encoded);\n    if (connectParam || redirectStr) {\n        if (!isInTMA()) {\n            // return `http://localhost:5173?tgWebAppStartParam=${urlSafeBase64}`\n            if ((0, constants_1.getTestTwaUrl)()) {\n                return `${(0, constants_1.getTestTwaUrl)()}?tgWebAppStartParam=${urlSafeBase64}`;\n            }\n            else if ((0, constants_1.getTestTgTwaUrl)()) {\n                let result = (0, constants_1.getBotNameAndAppName)((0, constants_1.getTestTgTwaUrl)());\n                if (result) {\n                    let { botName, appName } = result;\n                    return `tg://resolve?domain=${botName}&appname=${appName}&startapp=${urlSafeBase64}`;\n                }\n                return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}&startapp=${urlSafeBase64}`;\n            }\n            else {\n                return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}&startapp=${urlSafeBase64}`;\n            }\n        }\n        else {\n            if ((0, constants_1.getTestTgTwaUrl)()) {\n                return `${(0, constants_1.getTestTgTwaUrl)()}?startapp=${urlSafeBase64}`;\n            }\n            else {\n                return `https://t.me/${constants_1.tgwalletName}/start?startapp=${urlSafeBase64}`;\n            }\n        }\n    }\n    if (!isInTMA()) {\n        // return \"http://localhost:5173\"\n        if ((0, constants_1.getTestTwaUrl)()) {\n            return `${(0, constants_1.getTestTwaUrl)()}`;\n        }\n        else if ((0, constants_1.getTestTgTwaUrl)()) {\n            let result = (0, constants_1.getBotNameAndAppName)((0, constants_1.getTestTgTwaUrl)());\n            if (result) {\n                let { botName, appName } = result;\n                return `tg://resolve?domain=${botName}&appname=${appName}`;\n            }\n            return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}`;\n        }\n        else {\n            return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}`;\n        }\n    }\n    else {\n        if ((0, constants_1.getTestTgTwaUrl)()) {\n            return `${(0, constants_1.getTestTgTwaUrl)()}`;\n        }\n        else {\n            return `https://t.me/${constants_1.tgwalletName}/start`;\n        }\n    }\n}\n//  open TWA url in telegram\nfunction openOKXTMAWalletlinkWithFallback(twaDeepLink) {\n    var _a, _b, _c, _d, _e;\n    (0, log_1.logDebug)('[TWA] open link:', twaDeepLink, \"isInTMA ==> \", isInTMA());\n    if (!isInTMA()) {\n        if ((0, constants_1.getTestTwaUrl)()) {\n            window.open(twaDeepLink, '_blank');\n        }\n        else {\n            window.open(twaDeepLink, '_self');\n        }\n    }\n    else {\n        if ((_b = (_a = getWindow()) === null || _a === void 0 ? void 0 : _a.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) {\n            (_e = (_d = (_c = getWindow()) === null || _c === void 0 ? void 0 : _c.Telegram) === null || _d === void 0 ? void 0 : _d.WebApp) === null || _e === void 0 ? void 0 : _e.openTelegramLink(twaDeepLink);\n        }\n        else {\n            (0, tma_api_1.sendOpenTelegramLink)(twaDeepLink);\n        }\n    }\n}\n/**\n * Returns true if the app is running in TMA.\n */\nfunction urlSafeDecode(urlencoded) {\n    try {\n        urlencoded = urlencoded.replace(/\\+/g, '%20');\n        return decodeURIComponent(urlencoded);\n    }\n    catch (e) {\n        return urlencoded;\n    }\n}\nfunction urlParseQueryString(queryString) {\n    let params = {};\n    if (!queryString.length) {\n        return params;\n    }\n    let queryStringParams = queryString.split('&');\n    let i, param, paramName, paramValue;\n    for (i = 0; i < queryStringParams.length; i++) {\n        param = queryStringParams[i].split('=');\n        paramName = urlSafeDecode(param[0]);\n        paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n        params[paramName] = paramValue;\n    }\n    return params;\n}\nfunction urlParseHashParams(locationHash) {\n    locationHash = locationHash.replace(/^#/, '');\n    let params = {};\n    if (!locationHash.length) {\n        return params;\n    }\n    if (locationHash.indexOf('=') < 0 && locationHash.indexOf('?') < 0) {\n        params._path = urlSafeDecode(locationHash);\n        return params;\n    }\n    let qIndex = locationHash.indexOf('?');\n    if (qIndex >= 0) {\n        let pathParam = locationHash.substr(0, qIndex);\n        params._path = urlSafeDecode(pathParam);\n        locationHash = locationHash.substr(qIndex + 1);\n    }\n    let query_params = urlParseQueryString(locationHash);\n    for (let k in query_params) {\n        params[k] = query_params[k];\n    }\n    return params;\n}\nlet initParams = {};\ntry {\n    let locationHash = location.hash.toString();\n    initParams = urlParseHashParams(locationHash);\n}\ncatch (e) { }\nlet tmaPlatform = 'unknown';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppPlatform) {\n    tmaPlatform = (_a = initParams.tgWebAppPlatform) !== null && _a !== void 0 ? _a : 'unknown';\n}\nif (tmaPlatform === 'unknown') {\n    const window = getWindow();\n    tmaPlatform = (_d = (_c = (_b = window === null || window === void 0 ? void 0 : window.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : 'unknown';\n}\nfunction isInTMA() {\n    var _a;\n    return tmaPlatform !== 'unknown' || !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n}\n/**\n * Returns true if the app is running in the Telegram browser.\n */\nfunction isInTelegramBrowser() {\n    var _a;\n    const isTelegramWebview = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebview);\n    return (isInTMA() || isTelegramWebview) && tmaPlatform === 'unknown';\n}\nfunction getOKXLink(connectRequest, useMini = false, tmaReturnUrl) {\n    (0, log_1.logDebug)(`url  getOKXLink() called connectRequest==> ${JSON.stringify(connectRequest)}  useMini=> ${useMini}  tmaReturnUrl==> ${tmaReturnUrl}`);\n    if (useMini) {\n        if (connectRequest) {\n            var encodeTGParams = encodeTWAConnectURLParams(connectRequest);\n            return getTelegramWalletTWAUrl(encodeTGParams, tmaReturnUrl !== null && tmaReturnUrl !== void 0 ? tmaReturnUrl : \"back\");\n        }\n        else {\n            return getTelegramWalletTWAUrl(undefined, tmaReturnUrl !== null && tmaReturnUrl !== void 0 ? tmaReturnUrl : \"back\");\n        }\n    }\n    else {\n        if ((0, utils_1.useShortLink)()) {\n            if (connectRequest) {\n                return getAppWalletShortDeepLink(connectRequest.topic, connectRequest.clientId);\n            }\n            else {\n                return constants_1.shortUniversalLink;\n            }\n        }\n        else {\n            if (connectRequest) {\n                const base64Encoded = encodeConnectParams(connectRequest);\n                return `${protocol_1.standardDeeplink}?param=${base64Encoded}`;\n            }\n            else {\n                return protocol_1.standardDeeplink;\n            }\n        }\n    }\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.chainName2IdMap = exports.isValidObject = exports.RANDOM_LENGTH = exports.isBrowser = exports.resolveLocalStorage = exports.hasLocalStorage = exports.hasBuiltInWebSocket = exports.resolveWebSocketImplementation = void 0;\nexports.hexToByteArray = hexToByteArray;\nexports.getChainId = getChainId;\nexports.toHexString = toHexString;\nexports.concatUint8Arrays = concatUint8Arrays;\nexports.splitToUint8Arrays = splitToUint8Arrays;\nexports.base64encode = base64encode;\nexports.base64decode = base64decode;\nexports.checkWSUrl = checkWSUrl;\nexports.hashKey = hashKey;\nexports.generateRandomBytes32 = generateRandomBytes32;\nexports.generateTopic = generateTopic;\nexports.generateGroupId = generateGroupId;\nexports.isInIOSLine = isInIOSLine;\nexports.isInIOSLark = isInIOSLark;\nexports.isInIOSWeChat = isInIOSWeChat;\nexports.isIos = isIos;\nexports.getLastSixMd5Hash = getLastSixMd5Hash;\nexports.toSafeBase64FromBase64 = toSafeBase64FromBase64;\nexports.useShortLink = useShortLink;\nexports.replaceChainNameToChainId = replaceChainNameToChainId;\nexports.replaceChainIdToChainName = replaceChainIdToChainName;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst tweetnacl_util_1 = __importDefault(require(\"tweetnacl-util\"));\nconst to_string_1 = require(\"uint8arrays/to-string\");\nconst sha256_1 = require(\"@stablelib/sha256\");\nconst safejson_1 = require(\"./safejson\");\nconst log_1 = require(\"./log\");\nconst stringUtils_1 = require(\"../utils/stringUtils\");\nconst crypto_js_1 = __importDefault(require(\"crypto-js\"));\nconst BASE16 = \"base16\";\nfunction hexToByteArray(hexString) {\n    if (hexString.length % 2 !== 0) {\n        throw new Error(`Cannot convert ${hexString} to bytesArray`);\n    }\n    const result = new Uint8Array(hexString.length / 2);\n    for (let i = 0; i < hexString.length; i += 2) {\n        result[i / 2] = parseInt(hexString.slice(i, i + 2), 16);\n    }\n    return result;\n}\nfunction getChainId(chain) {\n    return chain.includes(\":\") ? chain.split(\":\")[1] : chain;\n}\nfunction toHexString(byteArray) {\n    let hexString = '';\n    byteArray.forEach(byte => {\n        hexString += ('0' + (byte & 0xff).toString(16)).slice(-2);\n    });\n    return hexString;\n}\nfunction concatUint8Arrays(buffer1, buffer2) {\n    const mergedArray = new Uint8Array(buffer1.length + buffer2.length);\n    mergedArray.set(buffer1);\n    mergedArray.set(buffer2, buffer1.length);\n    return mergedArray;\n}\nfunction splitToUint8Arrays(array, index) {\n    if (index >= array.length) {\n        throw new Error('Index is out of buffer');\n    }\n    const subArray1 = array.slice(0, index);\n    const subArray2 = array.slice(index);\n    return [subArray1, subArray2];\n}\nfunction encodeUint8Array(value, urlSafe) {\n    const encoded = tweetnacl_util_1.default.encodeBase64(value);\n    if (!urlSafe) {\n        return encoded;\n    }\n    return encodeURIComponent(encoded);\n}\nfunction decodeToUint8Array(value, urlSafe) {\n    if (urlSafe) {\n        value = decodeURIComponent(value);\n    }\n    return tweetnacl_util_1.default.decodeBase64(value);\n}\nfunction base64encode(value, urlSafe) {\n    let uint8Array;\n    if (value instanceof Uint8Array) {\n        uint8Array = value;\n    }\n    else {\n        if (typeof value !== 'string') {\n            value = (0, safejson_1.safeJsonStringify)(value);\n        }\n        uint8Array = tweetnacl_util_1.default.decodeUTF8(value);\n    }\n    return encodeUint8Array(uint8Array, urlSafe);\n}\nfunction base64decode(value, urlSafe) {\n    const decodedUint8Array = decodeToUint8Array(value, urlSafe);\n    return {\n        toString() {\n            return tweetnacl_util_1.default.encodeUTF8(decodedUint8Array);\n        },\n        toObject() {\n            try {\n                return (0, safejson_1.safeJsonParse)(tweetnacl_util_1.default.encodeUTF8(decodedUint8Array));\n            }\n            catch (e) {\n                return null;\n            }\n        },\n        toUint8Array() {\n            return decodedUint8Array;\n        }\n    };\n}\nfunction checkWSUrl(url) {\n    const match = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!match || !match.length) {\n        return false;\n    }\n    let scheme = match[0];\n    if (scheme === undefined) {\n        return false;\n    }\n    return new RegExp(\"^wss?:\").test(scheme);\n}\nconst resolveWebSocketImplementation = () => {\n    if (typeof WebSocket !== \"undefined\") {\n        return WebSocket;\n    }\n    else if (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") {\n        return global.WebSocket;\n    }\n    else if (typeof window !== \"undefined\" && typeof window.WebSocket !== \"undefined\") {\n        return window.WebSocket;\n    }\n    else if (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\") {\n        return self.WebSocket;\n    }\n    return WebSocket;\n    //\n    // return require(\"ws\");\n};\nexports.resolveWebSocketImplementation = resolveWebSocketImplementation;\nconst hasBuiltInWebSocket = () => typeof WebSocket !== \"undefined\" ||\n    (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") ||\n    (typeof window !== \"undefined\" && typeof window.WebSocket !== \"undefined\") ||\n    (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\");\nexports.hasBuiltInWebSocket = hasBuiltInWebSocket;\nconst hasLocalStorage = () => (typeof global !== \"undefined\" && (typeof global.localStorage !== \"undefined\")) ||\n    (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\");\nexports.hasLocalStorage = hasLocalStorage;\nconst resolveLocalStorage = () => {\n    if (typeof global !== \"undefined\" && typeof global.localStorage !== \"undefined\") {\n        return global.localStorage;\n    }\n    else if (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\") {\n        return window.localStorage;\n    }\n    return localStorage;\n};\nexports.resolveLocalStorage = resolveLocalStorage;\nconst isBrowser = () => typeof window !== \"undefined\";\nexports.isBrowser = isBrowser;\nexports.RANDOM_LENGTH = 32;\nfunction hashKey(key, encode = BASE16) {\n    (0, log_1.logDebug)(`hash key called ${key}`);\n    const result = (0, sha256_1.hash)((0, stringUtils_1.okxfromString)(key, encode));\n    return (0, to_string_1.toString)(result, encode);\n}\nfunction generateRandomBytes32() {\n    return tweetnacl_1.default.randomBytes(exports.RANDOM_LENGTH);\n}\nfunction generateTopic() {\n    let randomBytes32 = generateRandomBytes32();\n    (0, log_1.logDebug)(`generate topic called ${randomBytes32}`);\n    return hashKey((0, to_string_1.toString)(randomBytes32, BASE16));\n}\nfunction generateGroupId() {\n    let randomBytes32 = tweetnacl_1.default.randomBytes(16);\n    (0, log_1.logDebug)(`generate groupid called ${randomBytes32}`);\n    return hashKey((0, to_string_1.toString)(randomBytes32, BASE16));\n}\nconst isValidObject = (obj) => Object.getPrototypeOf(obj) === Object.prototype && Object.keys(obj).length;\nexports.isValidObject = isValidObject;\nfunction isInIOSLine() {\n    const userAgent = navigator.userAgent;\n    const inLine = userAgent.includes('Safari Line/');\n    return inLine && isIos();\n}\nfunction isInIOSLark() {\n    const userAgent = navigator.userAgent;\n    const inLine = userAgent.includes('Lark/');\n    return inLine && isIos();\n}\nfunction isInIOSWeChat() {\n    const userAgent = navigator.userAgent;\n    const inLine = userAgent.includes('MicroMessenger/');\n    return inLine && isIos();\n}\nfunction isIos() {\n    const userAgent = navigator.userAgent;\n    const maxTouchPoints = navigator.maxTouchPoints || 0;\n    // 检测 iPhone、iPod 和传统的 iPad\n    const isIOSDevice = /iPad|iPhone|iPod/.test(userAgent) && !window.MSStream;\n    // 针对 iPadOS 13 及以上的设备进行额外判断\n    const isIPadOS = (userAgent.includes('Mac') && maxTouchPoints > 1);\n    (0, log_1.logDebug)(`utils isIos >>>isIOSDevice: ${isIOSDevice}    >> isIPadOS: ${isIPadOS}`);\n    // 如果是 iOS 设备或者是 iPadOS 设备，返回 true\n    return isIOSDevice || isIPadOS;\n}\nfunction getLastSixMd5Hash(input) {\n    // 生成 MD5 哈希\n    const hash = crypto_js_1.default.MD5(input).toString();\n    // 获取最后六位\n    return hash.slice(-6);\n}\nfunction toSafeBase64FromBase64(base64) {\n    return base64\n        .replace(/=/g, \"\")\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\");\n}\nfunction useShortLink() {\n    // return !!(window as any).useShortLink;\n    return false;\n}\nexports.chainName2IdMap = new Map();\nexports.chainName2IdMap.set(\"aptos:mainnet\", \"aptos:637\");\nexports.chainName2IdMap.set(\"movement:testnet\", \"aptos:70000060\");\nexports.chainName2IdMap.set(\"movement:mainnet\", \"aptos:70000066\");\nexports.chainName2IdMap.set(\"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\", \"svm:70000069\");\nexports.chainName2IdMap.set(\"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\", \"svm:70000067\");\nexports.chainName2IdMap.set(\"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\", \"svm:70000068\");\nfunction replaceChainNameToChainId(chainId) {\n    exports.chainName2IdMap.forEach((value, key) => {\n        if (chainId.includes(key)) {\n            chainId = chainId.replace(key, value);\n        }\n    });\n    return chainId;\n}\nfunction replaceChainIdToChainName(chainId) {\n    exports.chainName2IdMap.forEach((value, key) => {\n        if (chainId.includes(value)) {\n            chainId = chainId.replace(value, key);\n        }\n    });\n    return chainId;\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.openLink = openLink;\nexports.openLinkBlank = openLinkBlank;\nexports.openDeeplinkWithFallback = openDeeplinkWithFallback;\nexports.isMobileUserAgent = isMobileUserAgent;\nexports.getUserAgent = getUserAgent;\nexports.isOS = isOS;\nexports.isBrowser = isBrowser;\nconst ua_parser_js_1 = __importDefault(require(\"ua-parser-js\"));\nconst log_1 = require(\"./log\");\nconst tma_api_1 = require(\"./tma-api\");\nfunction openLink(href, target = '_self') {\n    (0, log_1.logDebug)('openLink', href, target);\n    window.open(href, target, 'noopener noreferrer');\n}\nfunction openLinkBlank(href) {\n    openLink(href, '_blank');\n}\nfunction openDeeplinkWithFallback(href, fallback) {\n    const doFallback = () => {\n        if (isBrowser('safari') || (isOS('android') && isBrowser('firefox'))) {\n            // Safari does not support fallback to direct link.\n            return;\n        }\n        fallback();\n    };\n    const fallbackTimeout = setTimeout(() => doFallback(), 500);\n    window.addEventListener('blur', () => clearTimeout(fallbackTimeout), { once: true });\n    if (isOS('android') && (0, tma_api_1.inTg)()) {\n        openLink(href, '_blank');\n    }\n    else {\n        openLink(href, '_self');\n    }\n}\nfunction isMobileUserAgent() {\n    let check = false;\n    (function (a) {\n        if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) ||\n            /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.slice(0, 4)))\n            check = true;\n    })(navigator.userAgent ||\n        navigator.vendor ||\n        window.opera);\n    return check;\n}\nfunction getUserAgent() {\n    var _a, _b, _c;\n    const results = new ua_parser_js_1.default().getResult();\n    const osName = (_a = results.os.name) === null || _a === void 0 ? void 0 : _a.toLowerCase();\n    const deviceModel = (_b = results.device.model) === null || _b === void 0 ? void 0 : _b.toLowerCase();\n    let os;\n    switch (true) {\n        case deviceModel === 'ipad':\n            os = 'ipad';\n            break;\n        case osName === 'ios':\n            os = 'ios';\n            break;\n        case osName === 'android':\n            os = 'android';\n            break;\n        case osName === 'mac os':\n            os = 'macos';\n            break;\n        case osName === 'linux':\n            os = 'linux';\n            break;\n        case osName === null || osName === void 0 ? void 0 : osName.includes('windows'):\n            os = 'windows';\n            break;\n    }\n    const browserName = (_c = results.browser.name) === null || _c === void 0 ? void 0 : _c.toLowerCase();\n    let browser;\n    switch (true) {\n        case browserName === 'chrome':\n            browser = 'chrome';\n            break;\n        case browserName === 'firefox':\n            browser = 'firefox';\n            break;\n        case browserName === null || browserName === void 0 ? void 0 : browserName.includes('safari'):\n            browser = 'safari';\n            break;\n        case browserName === null || browserName === void 0 ? void 0 : browserName.includes('opera'):\n            browser = 'opera';\n            break;\n    }\n    return {\n        os,\n        browser\n    };\n}\nfunction isOS(...os) {\n    return os.includes(getUserAgent().os);\n}\nfunction isBrowser(...browser) {\n    return browser.includes(getUserAgent().browser);\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXSolanaProvider = void 0;\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXSolanaProvider {\n    getRealChainId(chainId) {\n        if (chainId == null) {\n            if (this.chainsSet.size == 1) {\n                let realChain = \"\";\n                let map = this.defaultChainMap;\n                this.chainsSet.forEach(function (chain) {\n                    if (map.has(chain)) {\n                        realChain = map.get(chain);\n                    }\n                });\n                if (realChain == \"\") {\n                    throw new Error(\"unsupported chainId\");\n                }\n                else {\n                    return realChain;\n                }\n            }\n            else {\n                throw new Error(\"connected to multiple solana chains,chainId can not be null\");\n            }\n        }\n        else {\n            if (chainId.startsWith(\"svm\")) {\n                return chainId;\n            }\n            else {\n                if (this.caip.includes(chainId)) {\n                    return chainId;\n                }\n                else {\n                    throw new Error(\"wrong chainId\");\n                }\n            }\n        }\n    }\n    getConnectedNamespace() {\n        var _a, _b, _c;\n        (_c = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces) === null || _b === void 0 ? void 0 : _b['solana']) === null || _c === void 0 ? void 0 : _c.chains.forEach(chain => {\n            this.chainsSet.add(chain.split(\":\")[0]);\n        });\n    }\n    constructor(provider) {\n        this.chainsSet = new Set();\n        this.caip = [\n            \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n            \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n            \"sonic:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n            \"sonic:EtWTRABZaYq6iMfeYKouRu166VU2xqa1\",\n            \"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n            \"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n            \"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\"\n        ];\n        this.SOON_MAIN_NET_CAIP = \"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\";\n        this.SOON_TEST_NET_CAIP = \"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\";\n        this.ECLIPSE_MAIN_NET_CAIP = \"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\";\n        this.SOON_MAIN_NET_ID = \"svm:70000069\";\n        this.SOON_TEST_NET_ID = \"svm:70000067\";\n        this.ECLIPSE_MAIN_NET_ID = \"svm:70000068\";\n        this.defaultChainMap = new Map();\n        this.provider = provider;\n        this.defaultChainMap.set(\"solana\", \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\");\n        this.defaultChainMap.set(\"sonic\", \"sonic:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\");\n        this.defaultChainMap.set(\"soon\", this.SOON_MAIN_NET_CAIP);\n        this.defaultChainMap.set(\"eclipse\", this.ECLIPSE_MAIN_NET_CAIP);\n        this.getConnectedNamespace();\n    }\n    signMessage(message, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            // compatipal with uint8array\n            if (typeof message !== 'string') {\n                try {\n                    message = new TextDecoder().decode(message);\n                }\n                catch (e) {\n                }\n            }\n            let realMessage = message;\n            let tx = null;\n            try {\n                const transaction = bs58_1.default.decode(message);\n                try {\n                    tx = web3_js_1.Transaction.from(transaction);\n                }\n                catch (error) {\n                    tx = web3_js_1.VersionedTransaction.deserialize(transaction);\n                }\n            }\n            catch (e) {\n            }\n            if (tx != null) {\n                return new Promise((resolve, reject) => {\n                    reject(\"Please sign with normal message\");\n                });\n            }\n            if (((_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.wallet) === null || _b === void 0 ? void 0 : _b.appName) == \"OKX Wallet\") {\n                realMessage = bs58_1.default.encode(new TextEncoder().encode(message));\n            }\n            else {\n                realMessage = message;\n            }\n            chainId = this.getRealChainId(chainId);\n            try {\n                let data = {\n                    \"chainId\": chainId,\n                    \"method\": \"solana_signMessage\",\n                    \"params\": {\n                        \"message\": realMessage,\n                        \"pubkey\": (_c = this.getAccount(chainId)) === null || _c === void 0 ? void 0 : _c.address\n                    },\n                    injectParams: {\n                        message: message,\n                        pubkey: (_d = this.getAccount(chainId)) === null || _d === void 0 ? void 0 : _d.address\n                    }\n                };\n                let signedMessage = yield this.provider.request(data, chainId);\n                (0, core_1.logDebug)(\"signMessage111\", signedMessage);\n                if ('result' in signedMessage) {\n                    let successData = signedMessage.result;\n                    return new Promise((resolve, reject) => {\n                        var _a;\n                        resolve({\n                            \"signature\": bs58_1.default.decode(successData),\n                            \"publicKey\": (_a = this.getAccount(chainId)) === null || _a === void 0 ? void 0 : _a.address\n                        });\n                    });\n                }\n                else {\n                    (0, core_1.logDebug)(\"signMessage111\", signedMessage);\n                    return new Promise((resolve, reject) => {\n                        resolve(signedMessage.error);\n                    });\n                }\n            }\n            catch (error) {\n                console.error('方法数据回调失败 --Error--', error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d;\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['solana']) === null || _b === void 0 ? void 0 : _b.accounts[0];\n        if (chainId != null) {\n            account = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces['solana']) === null || _d === void 0 ? void 0 : _d.accounts.filter(function (account) {\n                return account.startsWith(chainId);\n            })[0];\n        }\n        (0, core_1.logDebug)(\"getAccount\", account);\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const address = account.split(':')[2];\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address,\n            publicKey: new web3_js_1.PublicKey(address)\n        };\n    }\n    signTransaction(transaction, chainId) {\n        var _a, _b;\n        (0, core_1.logDebug)(\"OKXSolanaProvider\", typeof transaction);\n        chainId = this.getRealChainId(chainId);\n        try {\n            let serializedMessage = transaction.serialize({\n                requireAllSignatures: false,\n                verifySignatures: false,\n            });\n            let data = { \"data\": bs58_1.default.encode(serializedMessage), \"from\": (_a = this.getAccount(chainId)) === null || _a === void 0 ? void 0 : _a.address };\n            return this.getSignedTransaction(\"solana_signTransaction\", data, chainId, transaction);\n        }\n        catch (e) {\n            let serializedMessage = transaction.serialize();\n            let data = { \"data\": bs58_1.default.encode(serializedMessage), \"from\": (_b = this.getAccount(chainId)) === null || _b === void 0 ? void 0 : _b.address };\n            return this.getSignedTransaction(\"solana_signTransaction\", data, chainId, transaction);\n        }\n    }\n    signAllTransactions(transactions, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getRealChainId(chainId);\n            try {\n                var array = transactions.map((tx) => {\n                    var _a;\n                    var serializedMessage;\n                    if (tx instanceof web3_js_1.VersionedTransaction) {\n                        serializedMessage = tx.serialize();\n                    }\n                    else {\n                        serializedMessage = tx.serialize({\n                            requireAllSignatures: false,\n                            verifySignatures: false,\n                        });\n                    }\n                    return { \"data\": bs58_1.default.encode(serializedMessage), \"from\": (_a = this.getAccount(chainId)) === null || _a === void 0 ? void 0 : _a.address };\n                });\n                const response = yield this.provider.request({\n                    \"method\": \"solana_signAllTransactions\",\n                    \"params\": {\n                        \"transactions\": array\n                    },\n                    injectParams: transactions\n                }, chainId);\n                if (\"result\" in response) {\n                    let result = response.result;\n                    let newTransactions = JSON.parse(result).map((s) => {\n                        let c = bs58_1.default.decode(s);\n                        try {\n                            let transaction = web3_js_1.Transaction.from(c);\n                            (0, core_1.logDebug)(\"verifySignatures\", transaction.verifySignatures());\n                            return transaction;\n                        }\n                        catch (error) {\n                            return web3_js_1.VersionedTransaction.deserialize(c);\n                        }\n                    });\n                    return new Promise((resolve, reject) => {\n                        resolve(newTransactions);\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        resolve(response);\n                    });\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"getSignedTransaction\", error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    signAndSendTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            chainId = this.getRealChainId(chainId);\n            try {\n                let data = {};\n                try {\n                    let serializedMessage = transaction.serialize({\n                        requireAllSignatures: false,\n                        verifySignatures: false,\n                    });\n                    data = { \"data\": bs58_1.default.encode(serializedMessage), \"from\": (_a = this.getAccount(chainId)) === null || _a === void 0 ? void 0 : _a.address };\n                }\n                catch (e) {\n                    let serializedMessage = transaction.serialize();\n                    data = { \"data\": bs58_1.default.encode(serializedMessage), \"from\": (_b = this.getAccount(chainId)) === null || _b === void 0 ? void 0 : _b.address };\n                }\n                let signature = yield this.provider.request({\n                    \"method\": \"solana_signAndSendTransaction\",\n                    \"params\": data,\n                    injectParams: transaction\n                }, chainId);\n                if ('result' in signature) {\n                    let successData = signature.result;\n                    return new Promise((resolve, reject) => {\n                        resolve(successData);\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        resolve(signature);\n                    });\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"getSignedTransaction\", error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    getSignedTransaction(method, transactionStr, chainId, transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let signature = yield this.provider.request({\n                    \"method\": method,\n                    \"params\": transactionStr,\n                    injectParams: transaction\n                }, chainId);\n                if ('result' in signature) {\n                    let successData = signature.result;\n                    let c = bs58_1.default.decode(successData);\n                    let resultTx;\n                    try {\n                        resultTx = web3_js_1.Transaction.from(c);\n                    }\n                    catch (error) {\n                        resultTx = web3_js_1.VersionedTransaction.deserialize(c);\n                    }\n                    if (!(resultTx instanceof web3_js_1.VersionedTransaction)) {\n                        (0, core_1.logDebug)(\"verifySignatures\", resultTx.verifySignatures());\n                    }\n                    return new Promise((resolve, reject) => {\n                        resolve(resultTx);\n                    });\n                }\n                else if (\"injectResult\" in signature) {\n                    (0, core_1.logDebug)(\"getSignedTransaction injectResult\");\n                    let resultTx = signature.injectResult;\n                    return new Promise((resolve, reject) => {\n                        resolve(resultTx);\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        reject(signature);\n                    });\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"getSignedTransaction\", error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n}\nexports.OKXSolanaProvider = OKXSolanaProvider;\nexports.default = OKXSolanaProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXSolanaProvider = void 0;\nvar OKXSolanaProvider_1 = require(\"./OKXSolanaProvider\");\nObject.defineProperty(exports, \"OKXSolanaProvider\", { enumerable: true, get: function () { return OKXSolanaProvider_1.OKXSolanaProvider; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXSuiProvider = void 0;\nconst universal_provider_1 = require(\"@okxconnect/universal-provider\");\nconst transactions_1 = require(\"@mysten/sui/transactions\");\nconst utils_1 = require(\"@mysten/sui/utils\");\nconst client_1 = require(\"@mysten/sui/client\");\nclass OKXSuiProvider {\n    get defaultNetwork() {\n        let network = this.provider.requestDefaultChainWithNamespace(universal_provider_1.NameSpaceKeySui);\n        return network;\n    }\n    get suiClient() {\n        var _a;\n        let rpcUrl = (0, client_1.getFullnodeUrl)(this.defaultNetwork);\n        let suiProvider = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[universal_provider_1.NameSpaceKeySui];\n        if (suiProvider && suiProvider.rpcMap) {\n            let url = suiProvider.rpcMap[this.currentChainId];\n            if (url !== undefined) {\n                // @ts-ignore\n                rpcUrl = url;\n                console.log(\"use custom rpc======> \", rpcUrl);\n            }\n            else {\n                console.log(\"use mainnet rpc======> \", rpcUrl);\n            }\n        }\n        else {\n            console.log(\"use mainnet rpc======> \", rpcUrl);\n        }\n        return new client_1.SuiClient({ url: rpcUrl });\n    }\n    get currentChainId() {\n        return `sui:${this.defaultNetwork}`;\n    }\n    constructor(provider) {\n        this.provider = provider;\n    }\n    getAccount() {\n        var _a, _b, _c, _d, _e, _f, _g;\n        let namespaces = universal_provider_1.NameSpaceKeySui;\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[namespaces]) === null || _b === void 0 ? void 0 : _b.accounts[0];\n        console.log('====> getAccount');\n        console.log(account);\n        if (!account) {\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        console.log(\"sui_publicKey\", (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[namespaces]) === null || _d === void 0 ? void 0 : _d.extra);\n        let extra = (_g = (_f = (_e = this.provider.session) === null || _e === void 0 ? void 0 : _e.namespaces[namespaces]) === null || _f === void 0 ? void 0 : _f.extra) === null || _g === void 0 ? void 0 : _g[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n            console.log(\"sui_publicKey\", publicKey);\n        }\n        if (!address) {\n            return undefined;\n        }\n        return {\n            address: address,\n            publicKey: publicKey\n        };\n    }\n    signTransaction(input) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const [txBytes, txSerialize] = yield this.generateTsBytesAndSerizlize(input);\n            const ret = yield this.provider.request({\n                method: \"sui_signTransactionBlock\",\n                params: {\n                    txBytes: txBytes,\n                    txSerialize: txSerialize\n                },\n                injectParams: Object.assign({}, input)\n            }, this.currentChainId);\n            if (\"result\" in ret) {\n                return {\n                    signature: ret.result,\n                    transactionBlockBytes: txBytes,\n                };\n            }\n            else {\n                let errorData = ret;\n                return errorData.error;\n            }\n        });\n    }\n    signAndExecuteTransaction(input) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const [txBytes, txSerialize] = yield this.generateTsBytesAndSerizlize(input);\n            let ret = (yield this.provider.request({\n                method: \"sui_signAndExecuteTransactionBlock\",\n                params: {\n                    txBytes: txBytes,\n                    txSerialize: txSerialize,\n                },\n                injectParams: Object.assign({}, input)\n            }, this.currentChainId));\n            if (\"result\" in ret) {\n                return {\n                    confirmedLocalExecution: false,\n                    digest: ret.result,\n                    txBytes: txBytes,\n                };\n            }\n            else {\n                let errorData = ret;\n                return errorData.error;\n            }\n        });\n    }\n    // input = {message: uint8Array }\n    signMessage(input) {\n        return __awaiter(this, void 0, void 0, function* () {\n            console.log(\"====> signMessage:\");\n            console.log(input);\n            const decoder = new TextDecoder(\"utf8\");\n            const b64encoded = btoa(decoder.decode(input.message));\n            const message = atob(b64encoded);\n            const ret = (yield this.provider.request({\n                method: \"sui_signMessage\",\n                params: {\n                    message: message\n                },\n                injectParams: Object.assign({}, input)\n            }, this.currentChainId));\n            if (\"result\" in ret) {\n                let successData = ret;\n                console.log(\"====> signAction result\");\n                console.log(ret);\n                const sign = successData.result;\n                return {\n                    messageBytes: b64encoded,\n                    signature: sign,\n                };\n            }\n            else {\n                console.log(\"====> signAction result error\");\n                let errorData = ret;\n                return errorData.error;\n            }\n        });\n    }\n    // input = {message: uint8Array }\n    signPersonalMessage(input) {\n        return __awaiter(this, void 0, void 0, function* () {\n            console.log(\"====> signPersonalMessage：\");\n            console.log(input);\n            const decoder = new TextDecoder(\"utf8\");\n            const b64encoded = btoa(decoder.decode(input.message));\n            const message = atob(b64encoded);\n            const ret = (yield this.provider.request({\n                method: \"sui_signPersonalMessage\",\n                params: {\n                    message: message,\n                },\n                injectParams: Object.assign({}, input)\n            }, this.currentChainId));\n            if (\"result\" in ret) {\n                let successData = ret;\n                console.log(\"====> signAction result\");\n                console.log(ret);\n                const sign = successData.result;\n                return {\n                    bytes: b64encoded,\n                    signature: sign,\n                };\n            }\n            else {\n                console.log(\"====> signAction result error\");\n                let errorData = ret;\n                return errorData.error;\n            }\n        });\n    }\n    /// generate txBytes and txSerialize\n    generateTsBytesAndSerizlize(input) {\n        return __awaiter(this, void 0, void 0, function* () {\n            /// txBytes and txSerialize may be constructed in advance by the dapp side\n            let resultTuple = [\"\", \"\"];\n            if (\"txBytes\" in input &&\n                input.txBytes.length > 0 &&\n                \"txSerialize\" in input &&\n                input.txSerialize.length > 0) {\n                resultTuple = [input.txBytes, input.txSerialize];\n            }\n            /// Otherwise, a transactionBlock parameter is required.\n            if (!(\"transactionBlock\" in input)) {\n                throw new universal_provider_1.OKXConnectError(universal_provider_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `params doesn't contains transactionBlock`);\n            }\n            let senderAccounts = this.provider.requestAccountsWithNamespace(universal_provider_1.NameSpaceKeySui);\n            if (senderAccounts.length == 0) {\n                throw new universal_provider_1.OKXConnectError(universal_provider_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `there is no sui account`);\n            }\n            /// sender is required\n            input.transactionBlock.setSender(senderAccounts[0]);\n            const result = yield input.transactionBlock.build({\n                client: this.suiClient,\n            });\n            const txBytes = (0, utils_1.toBase64)(result);\n            const txSerialize = yield transactions_1.Transaction.from(txBytes).toJSON();\n            resultTuple = [txBytes, txSerialize];\n            return new Promise((resolve) => {\n                resolve(resultTuple);\n            });\n        });\n    }\n}\nexports.OKXSuiProvider = OKXSuiProvider;\nexports.default = OKXSuiProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXSuiProvider = void 0;\nvar OKXSuiProvider_1 = require(\"./OKXSuiProvider\");\nObject.defineProperty(exports, \"OKXSuiProvider\", { enumerable: true, get: function () { return OKXSuiProvider_1.OKXSuiProvider; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXBtcProvider = void 0;\nconst _1 = require(\"./\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXBtcProvider {\n    constructor(provider) {\n        this.caip = [\n            \"btc:mainnet\",\n            \"fractal:mainnet\"\n        ];\n        this.provider = provider;\n    }\n    getAddressForChainId(chainId) {\n        var _a, _b;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let accounts = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        });\n        if (accounts == undefined || accounts.length < 0) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `no connected account`);\n        }\n        let account = accounts[0];\n        const address = account.split(':')[2];\n        return address;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let extra = (_c = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.extra) === null || _c === void 0 ? void 0 : _c[chainId];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"compressedPublicKey\"];\n        }\n        return {\n            address: this.getAddressForChainId(chainId),\n            publicKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param signStr\n     * @param chainId\n     * @param type\n     * @returns\n     */\n    signMessage(chainId, signStr, type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (signStr === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signMessage parmas error`);\n            }\n            let params = {\n                signStr: signStr,\n                from: this.getAddressForChainId(chainId)\n            };\n            if (type) {\n                params.type = type;\n            }\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signMessage\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param toAddress\n     * @param satoshis\n     * @param options { feeRate: 0 }\n     * @returns\n     */\n    sendBitcoin(chainId, toAddress, satoshis, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            let params = {\n                from: this.getAddressForChainId(chainId),\n                to: toAddress,\n                value: (satoshis / 100000000).toString(),\n            };\n            if (options === null || options === void 0 ? void 0 : options.feeRate) {\n                params[\"satBytes\"] = options.feeRate.toString();\n            }\n            let result = yield this.send(chainId, params);\n            if (result !== undefined && ('txhash' in result)) {\n                // return txhash directly\n                return result.txhash;\n            }\n            // or return unexpected result\n            return result;\n        });\n    }\n    //  from - string：当前连接的钱包的 BTC 地址\n    //  to - string：接受 BTC 的地址\n    //  value - string：发送 BTC 的数量\n    //  satBytes - string： (可选) 自定义费率\n    //  memo - string： (可选) 指定 outputs OP_RETURN 内容 示例\n    //  memoPos - number： (可选) 指定 outputs OP_RETURN 输出位置，如果传了 memo 则必须传入 memoPos 指定位置，否则 memo 不生效\n    send(chainId, input) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (!this.checkParameters(input, 'to', 'value')) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send parmas  error`);\n            }\n            input[\"from\"] = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: 'btc_send',\n                    params: input\n                }, chainId);\n                if ('result' in ret) {\n                    return {\n                        txhash: ret.result\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param psbtHex string 要签名的 psbt 的十六进制字符串\n     * @param options object { autoFinalized: 0 }\n     */\n    signPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.signPsbts(chainId, [psbtHex], [options]).then(psbtResults => {\n                    let results = JSON.parse(psbtResults);\n                    resolve(results[0]);\n                }).catch(error => {\n                    reject(error);\n                });\n            });\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHexs Array\n     * @param options Array [{ autoFinalized: 0 }]\n     * @returns\n     */\n    signPsbts(chainId, psbtHexs, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHexs === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHexs: psbtHexs,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signPsbts\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHex string\n     * @param options object\n     * @returns\n     */\n    signAndPushPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHex === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHex: psbtHex,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signAndPushPsbt\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return JSON.parse(ret.result);\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param address string, receiver address\n     * @param inscriptionId string, 铭文 ID + 协议，没有传协议则默认是 Ordinals NFT ，目前仅支持 Ordinals 及 Atomicals 协议\n     * @param options object, { feeRate: number } custom rates\n     */\n    sendInscription(chainId, address, inscriptionId, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let extension = {\n                address: address,\n                inscriptionId: inscriptionId,\n                options: options\n            };\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (address === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method sendInscription params error`);\n            }\n            var feeRate = 0;\n            if (options && ('feeRate' in options)) {\n                feeRate = options.feeRate;\n            }\n            let coinId = '';\n            let from = this.getAddressForChainId(chainId);\n            var protocolId = 7; //ProtocolIdBRCNFT\n            if (inscriptionId !== 'undefined') {\n                let atomicSuffix = \"-Atomicals\";\n                let ordinalsSuffix = \"-Ordinals\";\n                if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(atomicSuffix.toLowerCase())) {\n                    protocolId = 8; //WXRCProtocolIdARCNFT\n                    inscriptionId = this.removeSuffix(inscriptionId, atomicSuffix);\n                }\n                else if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(ordinalsSuffix.toLowerCase())) {\n                    inscriptionId = this.removeSuffix(inscriptionId, ordinalsSuffix);\n                }\n            }\n            let params = {\n                scenario: 5,\n                feeRate: feeRate,\n                txType: \"20\",\n                to: address,\n                batchBean: [\n                    {\n                        coinAmount: \"1\",\n                        nftId: inscriptionId,\n                        protocolId: protocolId,\n                        coinId: coinId,\n                        inscriptionId: \"\",\n                        from: from\n                    }\n                ],\n                extension: extension\n            };\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_sendInscription\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    sendRunes(chainId, address, runeid, amount, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!chainId || !address || !runeid || !amount) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `The parameter is empty. Please check`);\n                }\n                let ns = this.checkChainId(chainId);\n                let protocolId = undefined;\n                if (ns != undefined) {\n                    if (ns.startsWith(\"btc\")) {\n                        protocolId = 13;\n                    }\n                    else if (ns.startsWith(\"fractal\")) {\n                        protocolId = 16;\n                    }\n                }\n                if (ns == undefined || protocolId == undefined) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n                }\n                let fromAddress = this.getAddressForChainId(chainId); // string\n                let params = {\n                    fromAddress: fromAddress,\n                    protocolId: protocolId,\n                    address: address, //String\n                    runeid: runeid, //String\n                    amount: amount, // String\n                    options: options\n                };\n                (0, core_1.logDebug)(\"OKXBtcProvider sendRunes -->\", JSON.stringify(params));\n                const ret = yield this.provider.request({\n                    method: \"btc_sendRunes\",\n                    params: params\n                }, chainId);\n                return ret.result;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    inscribeTransfer(chainId, ticker, amount) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!chainId || !ticker || !amount) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `The parameter is empty. Please check`);\n                }\n                let ns = this.checkChainId(chainId);\n                let protocolId = undefined;\n                if (ns != undefined) {\n                    if (ns.startsWith(\"btc\")) {\n                        protocolId = 1;\n                    }\n                    else if (ns.startsWith(\"fractal\")) {\n                        protocolId = 14;\n                    }\n                }\n                if (ns == undefined || protocolId == undefined) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n                }\n                let fromAddress = this.getAddressForChainId(chainId); // string\n                let params = {\n                    fromAddress: fromAddress,\n                    protocolId: protocolId,\n                    ticker: ticker, //String\n                    amount: amount, // String\n                };\n                (0, core_1.logDebug)(\"OKXBtcProvider inscribeTransfer -->\", JSON.stringify(params));\n                const ret = yield this.provider.request({\n                    method: \"btc_inscribeTransfer\",\n                    params: params\n                }, chainId);\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    removeSuffix(str, suffix) {\n        if (str.endsWith(suffix)) {\n            return str.slice(0, str.length - suffix.length);\n        }\n        return str;\n    }\n    checkParameters(params, ...keys) {\n        var unexistKeys = [];\n        keys.forEach(key => {\n            if (!(`${key}` in params)) {\n                unexistKeys.push(key);\n            }\n        });\n        if (unexistKeys.length > 0) {\n            console.log('not find key: ', unexistKeys.join(\",\"));\n            return false;\n        }\n        return true;\n    }\n    /**\n     *\n     * @param chainId eg. btc:mainnet\n     * @returns eg. btc\n     */\n    checkChainId(chainId) {\n        if (this.caip.includes(chainId)) {\n            let [namespaceKey, _] = chainId.split(\":\");\n            return namespaceKey;\n        }\n        return undefined;\n    }\n}\nexports.OKXBtcProvider = OKXBtcProvider;\nexports.default = OKXBtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCosmosProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXCosmosProvider {\n    constructor(provider) {\n        this.provider = provider;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e, _f;\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount chainId:\", chainId);\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount namespaces:\", JSON.stringify((_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces));\n        let account = (_c = (_b = this.provider.session) === null || _b === void 0 ? void 0 : _b.namespaces[core_1.NameSpaceKeyCosmos]) === null || _c === void 0 ? void 0 : _c.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount account:\", JSON.stringify(account));\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount address:\", address);\n        let extra = (_f = (_e = (_d = this.provider.session) === null || _d === void 0 ? void 0 : _d.namespaces[core_1.NameSpaceKeyCosmos]) === null || _e === void 0 ? void 0 : _e.extra) === null || _f === void 0 ? void 0 : _f[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n            console.log(\"aptos_publicKey\", publicKey);\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            algo: \"secp256k1\",\n            address: address,\n            bech32Address: address,\n            pubKey: this.hexToUint8Array(publicKey),\n        };\n    }\n    signArbitrary(chainId, signerAddress, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const base64Encoded = window.btoa(data);\n            const signDoc = {\n                chain_id: \"\",\n                account_number: \"0\",\n                sequence: \"0\",\n                fee: {\n                    gas: \"0\",\n                    amount: []\n                },\n                msgs: [{\n                        \"type\": \"sign/MsgSignData\",\n                        \"value\": {\n                            \"signer\": signerAddress,\n                            \"data\": base64Encoded\n                        }\n                    }],\n                memo: \"\"\n            };\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signArbitrary\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chain_id\": chainId.split(\":\")[1],\n                    \"data\": signDoc\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    if (typeof ret.result == \"string\") {\n                        return JSON.parse(ret.result);\n                    }\n                    else {\n                        return ret.result;\n                    }\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAmino(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (signDoc.msgs[0].type == \"sign/MsgSignData\") {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signArbitrary\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chain_id\": chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        return ret.result;\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    return error;\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                }\n            }\n            else {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signAmino\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chainId\": chainId.split(\":\")[1],\n                        \"sign_doc\": signDoc,\n                        \"signOptions\": signOptions\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        const resData = JSON.parse(ret.result);\n                        console.log(\"signdoc\", signDoc, resData.signDoc);\n                        signDoc.fee = resData.signDoc.fee;\n                        return { signed: signDoc, signature: resData.signature };\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                    return error;\n                }\n            }\n        });\n    }\n    signDirect(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const object = {\n                bodyBytes: this.bufferToHex(signDoc.bodyBytes),\n                authInfoBytes: this.bufferToHex(signDoc.authInfoBytes),\n                chainId: signDoc.chainId,\n                accountNumber: signDoc.accountNumber ? signDoc.accountNumber.toString() : null,\n                signOptions: signOptions ? signOptions : null\n            };\n            let data = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signDirect\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chainId\": chainId.split(\":\")[1],\n                    \"sign_doc\": object,\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    const res = JSON.parse(ret.result);\n                    console.log(\"signdirect result\", res);\n                    signDoc.authInfoBytes = this.messageToBuffer(res.signDoc.authInfoBytes);\n                    return { signed: signDoc, signature: res.signature };\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    messageToBuffer(message) {\n        var buffer = Uint8Array.from([]);\n        try {\n            if (typeof message === \"string\") {\n                buffer = this.hexToUint8Array(message.replace(\"0x\", \"\"));\n            }\n            else {\n                buffer = Uint8Array.from(message);\n            }\n        }\n        catch (err) {\n            console.log(`messageToBuffer error: ${err}`);\n        }\n        return buffer;\n    }\n    bufferToHex(arr) {\n        let output = [...new Uint8Array(arr)]\n            .map(x => x.toString(16).padStart(2, '0'))\n            .join('');\n        return '0x' + output;\n    }\n    hexToUint8Array(hexString) {\n        if (hexString.length % 2 !== 0) {\n            throw \"Invalid hexString\";\n        }\n        var arrayBuffer = new Uint8Array(hexString.length / 2);\n        for (var i = 0; i < hexString.length; i += 2) {\n            var byteValue = parseInt(hexString.substr(i, 2), 16);\n            if (isNaN(byteValue)) {\n                throw \"Invalid hexString\";\n            }\n            arrayBuffer[i / 2] = byteValue;\n        }\n        return arrayBuffer;\n    }\n}\nexports.OKXCosmosProvider = OKXCosmosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXStarknetProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXStarknetProvider {\n    constructor(provider) {\n        this.STARKNET_CHAIN_ID = \"starknet:mainnet\";\n        this.provider = provider;\n    }\n    getChain(chainId) {\n        if (chainId == null) {\n            chainId = this.STARKNET_CHAIN_ID;\n        }\n        if (chainId != this.STARKNET_CHAIN_ID) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, \"The chainId:\" + chainId + \"is wrong for OKXStarknetProvider\");\n        }\n        return chainId;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyStarknet]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyStarknet]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address,\n            pubKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param chainId\n     * @param signerAddress\n     * @param data: { types, primaryType, domain, message } as TypedData\n     * @returns [signedDataR, signedDataS]\n     */\n    signMessage(signerAddress, typedData, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            if (signerAddress.length == 0) {\n                signerAddress = this.getAccount(chainId)[\"address\"];\n            }\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"starknet_signMessage\",\n                \"params\": {\n                    \"accountAddress\": signerAddress,\n                    \"typedData\": typedData\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    let results = ret.result;\n                    if (typeof results == 'string') {\n                        results = JSON.parse(results);\n                    }\n                    return [results[\"signedDataR\"], results[\"signedDataS\"]];\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     * sendTransaction\n     * @param chainId\n     * @param signerAddress\n     * @param transaction\n     * @returns { transaction_hash }\n     */\n    sendTransaction(signerAddress, transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let transactionData = {\n                \"accountAddress\": signerAddress,\n                \"executionRequest\": transaction\n            };\n            let data = {\n                \"method\": \"starknet_sendTransaction\",\n                \"params\": {\n                    \"data\": JSON.stringify(transactionData),\n                    \"from\": signerAddress\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return { transaction_hash: ret.result };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * signMessage old API（rarely used, no need provide to external）\n     * @param chainId\n     * @param payload\n     * @returns {transaction_hash, class_hash}\n     */\n    signMessageDeclareContractPayload(payload, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            try {\n                let data = {\n                    \"method\": \"starknet_signMessage\",\n                    \"params\": payload\n                };\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return {\n                        \"transaction_hash\": ret.result[\"txHash\"],\n                        \"class_hash\": ret.result[\"classHash\"]\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     * sendTransaction old API（rarely used, no need provide to external）\n     * @param chainId\n     * @param signerAddress\n     * @param calls\n     * @param abis\n     * @param transactionsDetail\n     * @returns { transaction_hash }\n     */\n    /// todo： \n    /// 修改方法名\n    /// chainId 放后面\n    sendMessageExecuteTransactionDetail(signerAddress, calls, abis, transactionsDetail, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            const transactions = Array.isArray(calls) ? calls : [calls];\n            const executionRequest = {\n                \"calls\": transactions,\n                \"abis\": abis,\n                \"transactionsDetail\": {\n                    \"nonce\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.nonce,\n                    \"maxFee\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.nonce,\n                    \"version\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.version,\n                }\n            };\n            return this.sendTransaction(signerAddress, executionRequest, chainId);\n        });\n    }\n}\nexports.OKXStarknetProvider = OKXStarknetProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTonProvider = void 0;\nconst _1 = require(\"./\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTonProvider {\n    constructor(generator) {\n        this.statusChangeSubscriptions = [];\n        this.statusChangeErrorSubscriptions = [];\n        this.provider = generator;\n        this.provider.on(\"connect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event connect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"reconnect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event reconnect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"disconnect\", () => {\n            (0, core_1.logDebug)(\"OKXTONProvider event disconnect:\");\n            this.statusChangeSubscriptions.forEach(callback => callback(null));\n        });\n        this.provider.on(\"connect_error\", (error) => {\n            (0, core_1.logDebug)(\"OKXTONProvider event connect_error:\", JSON.stringify(error));\n            this.statusChangeErrorSubscriptions.forEach(errorsHandler => errorsHandler(error));\n        });\n    }\n    connected() {\n        if (this.provider.connected()) {\n            return !!this.provider.session.namespaces[\"ton\"];\n        }\n        return false;\n    }\n    account() {\n        try {\n            if (!this.provider.session) {\n                return null;\n            }\n            let tonNameSpace = this.provider.session.namespaces['ton'];\n            if (!tonNameSpace || !tonNameSpace.payload || !tonNameSpace.payload.ton_addr) {\n                return null;\n            }\n            let ton_addr = tonNameSpace.payload.ton_addr;\n            return {\n                address: ton_addr.address,\n                chain: ton_addr.network,\n                walletStateInit: ton_addr.walletStateInit,\n                publicKey: ton_addr.publicKey,\n            };\n        }\n        catch (e) {\n            (0, core_1.logDebug)(\"OKXTONProvider account  error:\", JSON.stringify(e));\n            return null;\n        }\n    }\n    wallet() {\n        if (this.connected()) {\n            try {\n                let sessionWallet = this.provider.session.wallet;\n                let tonDeviceInfo = {\n                    platform: sessionWallet.platform,\n                    appName: sessionWallet.appName,\n                    appVersion: sessionWallet.appVersion,\n                    maxProtocolVersion: sessionWallet.maxProtocolVersion,\n                    features: ['ton_sendTransaction'],\n                };\n                const wallet = {\n                    device: tonDeviceInfo,\n                    provider: \"http\",\n                    account: this.account()\n                };\n                let tonNameSpace = this.provider.session.namespaces['ton'];\n                if (tonNameSpace && tonNameSpace.payload && tonNameSpace.payload.ton_proof) {\n                    wallet.connectItems = {\n                        tonProof: tonNameSpace.payload.ton_proof\n                    };\n                }\n                (0, core_1.logDebug)(\"OKXTONProvider wallet :\", JSON.stringify(wallet));\n                return wallet;\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"OKXTONProvider wallet  error:\", JSON.stringify(e));\n                return null;\n            }\n        }\n        return null;\n    }\n    onStatusChange(callback, errorsHandler) {\n        this.statusChangeSubscriptions.push(callback);\n        if (errorsHandler) {\n            this.statusChangeErrorSubscriptions.push(errorsHandler);\n        }\n        return () => {\n            this.statusChangeSubscriptions = this.statusChangeSubscriptions.filter(item => item !== callback);\n            if (errorsHandler) {\n                this.statusChangeErrorSubscriptions = this.statusChangeErrorSubscriptions.filter(item => item !== errorsHandler);\n            }\n        };\n    }\n    sendTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (transaction.network && transaction.network !== core_1.TONCHAIN.MAINNET) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, 'OKXTONProvider sendTransaction network error');\n            }\n            if (!transaction.network) {\n                transaction.network = core_1.TONCHAIN.MAINNET;\n            }\n            if (this.provider.session) {\n                if (!transaction.from) {\n                    const accounts = this.provider.requestAccountsWithNamespace('ton');\n                    transaction.from = accounts[0];\n                }\n            }\n            const requestParams = {\n                method: \"ton_sendTransaction\",\n                params: transaction,\n            };\n            let chain = 'ton:' + core_1.TONCHAIN.MAINNET;\n            (0, core_1.logDebug)(\"OKXTONProvider sendTransaction transaction----:\", chain, JSON.stringify(requestParams));\n            return this.provider.request(requestParams, chain);\n        });\n    }\n}\nexports.OKXTonProvider = OKXTonProvider;\nexports.default = OKXTonProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTronProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTronProvider {\n    constructor(provider) {\n        this.TRON_CHAIN_ID = \"tron:mainnet\";\n        this.provider = provider;\n    }\n    getChain(chainId) {\n        if (chainId == null) {\n            chainId = this.TRON_CHAIN_ID;\n        }\n        if (chainId != this.TRON_CHAIN_ID) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, \"The chainId:\" + chainId + \"is wrong for OKXTronProvider\");\n        }\n        return chainId;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        chainId = this.getChain(chainId);\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyTron]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyTron]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address\n        };\n    }\n    stringToHex(str) {\n        let hex = '';\n        for (let i = 0; i < str.length; i++) {\n            hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n        }\n        return hex;\n    }\n    signMessage(data, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessage\",\n                \"params\": {\n                    \"message\": this.stringToHex(data)\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signMessageV2(data, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessageV2\",\n                \"params\": {\n                    \"message\": data\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let data = {\n                \"method\": \"tron_signTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    let signedTx;\n                    if (typeof ret.result == \"string\") {\n                        signedTx = JSON.parse(ret.result);\n                    }\n                    else {\n                        signedTx = ret.result;\n                    }\n                    let realSignTx = {};\n                    realSignTx.visible = signedTx.visible;\n                    realSignTx.txID = signedTx.txID;\n                    let rawData = {};\n                    rawData.contract = signedTx.raw_data.contract;\n                    rawData.expiration = signedTx.raw_data.expiration;\n                    rawData.ref_block_bytes = signedTx.raw_data.ref_block_bytes;\n                    rawData.fee_limit = signedTx.raw_data.fee_limit;\n                    rawData.ref_block_hash = signedTx.raw_data.ref_block_hash;\n                    rawData.timestamp = signedTx.raw_data.timestamp;\n                    realSignTx.raw_data = rawData;\n                    realSignTx.raw_data_hex = signedTx.raw_data_hex;\n                    realSignTx.signature = signedTx.signature;\n                    return realSignTx;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAndSendTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let data = {\n                \"method\": \"tron_signAndSendTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n}\nexports.OKXTronProvider = OKXTronProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXUniversalProvider = void 0;\nconst eip155_1 = require(\"./provider/providers/eip155\");\nconst sui_1 = require(\"./provider/providers/sui\");\nconst constants_1 = require(\"./provider/constants\");\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nconst client_1 = require(\"./packages/sign-client/client\");\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"./packages/utils/namespaces\");\nconst solana_1 = __importDefault(require(\"./provider/providers/solana\"));\nconst btc_1 = __importDefault(require(\"./provider/providers/btc\"));\nconst aptos_1 = __importDefault(require(\"./provider/providers/aptos\"));\nconst ton_1 = __importDefault(require(\"./provider/providers/ton\"));\nconst cosmos_1 = __importDefault(require(\"./provider/providers/cosmos\"));\nconst tron_1 = __importDefault(require(\"./provider/providers/tron\"));\nconst utils_1 = require(\"./provider/utils\");\nconst packages_1 = require(\"./packages\");\nconst provider_1 = require(\"./provider\");\nconst starknet_1 = __importDefault(require(\"./provider/providers/starknet\"));\nclass OKXUniversalProvider {\n    static init(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_2.logDebug)('OKXUniversalProvider init() called');\n            (0, core_2.checkMetaData)(opts.dappMetaData);\n            // ignore rpc provider check by default\n            (0, utils_1.setGlobal)('disableProviderPing', true);\n            let provider;\n            if (window && window.okxConnectUniversalinwindow && window.okxConnectUniversalinwindow instanceof OKXUniversalProvider) {\n                (0, core_2.logDebug)('OKXUniversalConnect init() old called');\n                provider = window.okxConnectUniversalinwindow;\n            }\n            else {\n                (0, core_2.logDebug)('OKXUniversalConnect init() new called');\n                provider = new OKXUniversalProvider(opts);\n                if (window) {\n                    window.okxConnectUniversalinwindow = provider;\n                }\n                yield provider.initialize();\n            }\n            (0, core_2.getDefaultReporter)().configVersionAndSide('universalprovider-1.5.2', 'dapp', provider.providerOpts.dappMetaData.name);\n            return provider;\n        });\n    }\n    constructor(opts) {\n        this.rpcProviders = {};\n        this.events = new eventemitter3_1.default();\n        if (!opts.connector || opts.connector.length == 0) {\n            opts.connector = [core_2.AppwalletConnector.getConnector(), core_2.TgwalletConnector.getConnector()];\n        }\n        this.providerOpts = opts;\n    }\n    request(args, chain) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_2.logDebug)('OKXUniversalProvider request() called');\n            (0, core_2.reportLog)('OKXUniversalProvider request() called');\n            if (!this.connected()) {\n                throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            (0, core_2.logDebug)('OKXUniversalProvider request()  connected ');\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return yield this.getProvider(namespace).request(requestParam);\n        });\n    }\n    buildRequestParamFromRequest(args, chain) {\n        var _a;\n        (0, core_2.logDebug)(\"UniversalProvider request args >>>>>>>: \", chain, (0, core_2.safeJsonStringify)(args));\n        let [namespace, chainId] = this.validateChain(chain);\n        if (!this.session) {\n            throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Please call connect() before request()\");\n        }\n        let keyArr = Object.keys(this.session.namespaces);\n        if (!chain && keyArr && keyArr.length > 1) {\n            throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Multiple chains have been linked, the request method requires chain`);\n        }\n        let realChain = (0, core_1.replaceChainNameToChainId)(`${namespace}:${chainId}`);\n        if (realChain != null) {\n            namespace = realChain.split(\":\")[0];\n            chainId = realChain.split(\":\")[1];\n        }\n        // if (namespace == \"aptos\" && chainId == \"mainnet\") {\n        //     namespace = \"aptos\"\n        //     chainId = \"637\"\n        // }\n        // if (namespace == \"movement\" && chainId == \"testnet\") {\n        //     namespace = \"aptos\"\n        //     chainId = \"70000060\"\n        // }\n        const requestParam = Object.assign(Object.assign({}, args), { chainId: `${namespace}:${chainId}`, redirect: (_a = args.redirect) !== null && _a !== void 0 ? _a : this.sessionConfig.redirect });\n        return { namespace, requestParam };\n    }\n    enable() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.client) {\n                throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (!this.session) {\n                if (this.connectOpts) {\n                    yield this.connect(this.connectOpts);\n                }\n                else {\n                    throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n                }\n            }\n            const accounts = yield this.requestAccounts();\n            return accounts;\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_2.logDebug)('OKXUniversalProvider disconnect() called');\n            (0, core_2.reportLog)('provider disconnect called');\n            if (!this.session) {\n                throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                let called = false;\n                const onRequestSent = () => __awaiter(this, void 0, void 0, function* () {\n                    if (!called) {\n                        called = true;\n                        yield this.disconnectAndEmit();\n                        yield this.cleanup();\n                        resolve();\n                        (0, core_2.logDebug)(\"UniversalProvider disconnect Disconnected\");\n                        (0, core_2.reportLog)('provider disconnect disconnected');\n                    }\n                });\n                try {\n                    yield this.client.disconnect();\n                    yield onRequestSent();\n                }\n                catch (e) {\n                    yield onRequestSent();\n                }\n            }));\n        });\n    }\n    disconnectAndEmit() {\n        var _a, _b;\n        this.client.engine.connectManagerDisconnect();\n        this.events.emit(\"disconnect\", { topic: (_a = this.session) === null || _a === void 0 ? void 0 : _a.topic });\n        this.events.emit(\"session_delete\", { topic: (_b = this.session) === null || _b === void 0 ? void 0 : _b.topic });\n    }\n    replaceNamespace(opts, nameSpace) {\n        var _a, _b;\n        let aptosNameSpace = (_a = opts.namespaces) === null || _a === void 0 ? void 0 : _a[nameSpace];\n        if (aptosNameSpace != undefined) {\n            let realNS = this.replaceNamespaceInner(aptosNameSpace);\n            if (opts.namespaces != undefined && nameSpace in opts.namespaces && realNS != undefined) {\n                opts.namespaces[nameSpace] = realNS;\n            }\n        }\n        let optionAptosNameSpace = (_b = opts.optionalNamespaces) === null || _b === void 0 ? void 0 : _b[nameSpace];\n        if (optionAptosNameSpace != undefined) {\n            let realOptionNS = this.replaceNamespaceInner(optionAptosNameSpace);\n            if (opts.optionalNamespaces != undefined && nameSpace in opts.optionalNamespaces && realOptionNS != undefined) {\n                opts.optionalNamespaces[nameSpace] = realOptionNS;\n            }\n        }\n        return opts;\n    }\n    replaceNamespaceInner(aptosNameSpace) {\n        var _a;\n        if (aptosNameSpace != undefined) {\n            aptosNameSpace.chains = (_a = aptosNameSpace.chains) === null || _a === void 0 ? void 0 : _a.map(chainId => {\n                return (0, core_1.replaceChainNameToChainId)(chainId);\n            });\n            if (aptosNameSpace.defaultChain != undefined) {\n                aptosNameSpace.defaultChain = (0, core_1.replaceChainNameToChainId)(aptosNameSpace.defaultChain);\n            }\n        }\n        return aptosNameSpace;\n    }\n    replaceSessionAptos(session, namespace) {\n        var _a;\n        let namespaces = (_a = session === null || session === void 0 ? void 0 : session.namespaces) === null || _a === void 0 ? void 0 : _a[namespace];\n        if (namespaces != undefined && namespaces.chains != undefined) {\n            namespaces.chains = namespaces.chains.map(chain => {\n                return (0, core_1.replaceChainIdToChainName)(chain);\n            });\n            namespaces.accounts = namespaces.accounts.map((account) => {\n                return (0, core_1.replaceChainIdToChainName)(account);\n            });\n            let extra = {};\n            Object.keys(namespaces.extra || {}).forEach((key, index) => {\n                let newKey = (0, core_1.replaceChainIdToChainName)(key);\n                extra[(0, core_1.replaceChainIdToChainName)(key)] = Object.values((session === null || session === void 0 ? void 0 : session.namespaces[namespace].extra) || {})[index];\n            });\n            namespaces.extra = extra;\n        }\n        (0, core_2.logDebug)(\"replaceSessionAptos\", session);\n    }\n    connected() {\n        (0, core_2.logDebug)('OKXUniversalProvider connected() called');\n        (0, core_2.reportLog)('provider connected called');\n        let disconnectInner = () => {\n            try {\n                this.cleanup();\n                this.client.engine.connectManagerDisconnect();\n            }\n            catch (e) {\n                (0, core_2.logDebug)(\"Error during disconnect:\", e);\n            }\n        };\n        try {\n            if (!this.session)\n                return false;\n            if (!this.client.engine.getCurrentConnectionReady(Object.keys(this.session.namespaces))) {\n                disconnectInner();\n                return false;\n            }\n            return true;\n        }\n        catch (e) {\n            disconnectInner();\n            return false;\n        }\n    }\n    connectAndSign(opts, signRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_2.logDebug)('OKXUniversalProvider connectAndSign() called');\n            const updatedOpts = Object.assign(Object.assign({}, opts), { signRequest });\n            (0, core_2.logDebug)('OKXUniversalProvider connectAndSign() opts:', JSON.stringify(opts));\n            (0, core_2.logDebug)('OKXUniversalProvider connectAndSign() signRequest:', JSON.stringify(signRequest));\n            return yield this.connect(updatedOpts);\n        });\n    }\n    connect(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_2.logDebug)('OKXUniversalProvider connect() called');\n            (0, core_2.reportLog)('provider connect called');\n            if (!this.client) {\n                throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (this.connected()) {\n                return this.session;\n            }\n            opts = this.replaceNamespace(opts, \"aptos\");\n            opts = this.replaceNamespace(opts, \"solana\");\n            (0, core_2.logDebug)(`OKXUniversalProvider connect >>>>`, JSON.stringify(opts));\n            if (opts.sessionConfig === undefined) {\n                opts.sessionConfig = {};\n            }\n            if (opts.sessionConfig.openUniversalUrl === undefined) {\n                opts.sessionConfig.openUniversalUrl = (0, core_2.isMobileUserAgent)();\n            }\n            this.setNamespaces(opts);\n            try {\n                (0, core_2.logDebug)(`UniversalProvider connect opts.stringify ====> ${JSON.stringify(opts)}`);\n                //Connect\n                let session = yield this.client.connect(opts);\n                (0, core_2.logDebug)(`UniversalProvider connect success ====> ${JSON.stringify(session)}`);\n                if (session) {\n                    this.replaceSessionAptos(session, \"aptos\");\n                    this.replaceSessionAptos(session, \"solana\");\n                    this.session = session;\n                    this.client.session = session;\n                    this.setConnectConnector();\n                    (0, core_2.logDebug)(`OKXUniversalProvider connect success opts>>>>`, JSON.stringify(opts));\n                    this.onConnect();\n                    if (opts.signRequest && opts.signRequest.length > 0) {\n                        let requestItem = opts.signRequest[0];\n                        let signResponseList = [];\n                        if (typeof window !== \"undefined\" && window && window.okxConnectUniversalUIinwindow) { //from UI\n                            (0, core_2.logDebug)(`OKXUniversalProvider connect success, us UI SDK>>>>`);\n                            if (this.session.signResponse && this.session.signResponse.length > 0) { // >=6.96\n                                signResponseList = this.session.signResponse;\n                            }\n                        }\n                        else {\n                            (0, core_2.logDebug)(`OKXUniversalProvider connect success, us Universal SDK>>>>`);\n                            if (this.session.signResponse && this.session.signResponse.length > 0) { // >=6.96\n                                signResponseList = this.session.signResponse;\n                            }\n                            else {\n                                signResponseList.push((0, packages_1.creatNotSupportMethodItemReplay)(requestItem));\n                            }\n                        }\n                        (0, core_2.logDebug)(`UniversalProvider connect success connectRequestReply ====> ${JSON.stringify(signResponseList)}`);\n                        setTimeout(() => {\n                            this.events.emit(\"connect_signResponse\", signResponseList);\n                        }, 100);\n                    }\n                    return session;\n                }\n                return undefined;\n            }\n            catch (error) {\n                (0, core_2.logDebug)(`UniversalProvider connect error ====> `, JSON.stringify(error));\n                throw error;\n            }\n        });\n    }\n    syncAllAddresses() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if ((0, provider_1.syncAddressAvailable)(this.session.wallet)) {\n                return this.client.syncAllAddress();\n            }\n            else {\n                throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n            }\n        });\n    }\n    setConnectConnector() {\n        var _a;\n        this.client.setConnectConnector((_a = this.session) === null || _a === void 0 ? void 0 : _a.wallet);\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    setDefaultChain(chain, rpcUrl) {\n        (0, core_2.logDebug)('OKXUniversalProvider setDefaultChain() called');\n        // chain = this.chainNameToGeneralId(chain)\n        try {\n            // ignore without active session\n            if (!this.connected())\n                return;\n            const [namespace, chainId] = this.validateChain(chain);\n            const provider = this.getProvider(namespace);\n            provider.setDefaultChain(chainId, rpcUrl);\n        }\n        catch (error) {\n            // ignore the error if the fx is used prematurely before namespaces are set\n            if (!/Please call connect/.test(error.message))\n                throw error;\n        }\n    }\n    checkStorage() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let sessionInfoStr = yield this.getFromStore(\"connectSession\");\n            (0, core_2.logDebug)(sessionInfoStr);\n            if (sessionInfoStr) {\n                (0, core_2.logDebug)(`checkStorage error start`);\n                try {\n                    let sessionInfo = sessionInfoStr;\n                    this.session = sessionInfo;\n                    this.client.session = this.session;\n                    this.setConnectConnector();\n                    yield this.client.restoreconnect(sessionInfo);\n                    this.sessionConfig = sessionInfo.sessionConfig;\n                    this.client.sessionConfig = this.sessionConfig;\n                    (0, core_2.logDebug)('[evm u-provider] do reconnection', this.session);\n                    this.createProviders();\n                    this.registerEventListeners();\n                    setTimeout(() => {\n                        this.events.emit(\"reconnect\", { session: this.session });\n                    }, 100);\n                }\n                catch (e) {\n                    yield this.cleanup();\n                    (0, core_2.logDebug)(`checkStorage error ${JSON.stringify(e)}`);\n                }\n            }\n        });\n    }\n    initialize() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_2.logDebug)('OKXUniversalProvider initialize() called');\n            (0, core_2.reportLog)('provider initialize called');\n            const data = Object.assign({ url: window.location.hostname, origin: window.location.origin }, this.providerOpts.dappMetaData);\n            this.client = new client_1.SignClient(data, this.events);\n            this.registerConnector(this.providerOpts.connector);\n            yield this.checkStorage();\n        });\n    }\n    createProviders() {\n        if (!this.client) {\n            throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n        }\n        if (!this.connected()) {\n            throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Session not initialized. Please call connect() before enable()\");\n        }\n        const providersToCreate = [\n            ...new Set(Object.keys(this.session.namespaces)\n                .filter((namespace) => { var _a, _b; return ((_b = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.accounts) === null || _b === void 0 ? void 0 : _b.length) > 0; })\n                .map((namespace) => (0, namespaces_1.parseNamespaceKey)(namespace))),\n        ];\n        this.rpcProviders = {};\n        providersToCreate.forEach((namespace) => {\n            if (!this.session)\n                return;\n            const namespacesValue = this.session.namespaces;\n            const currentNameSpace = namespacesValue[namespace];\n            (0, core_2.logDebug)(\"init eip155 >> \", currentNameSpace);\n            switch (namespace) {\n                case \"eip155\":\n                    const opts = {\n                        namespace: currentNameSpace\n                    };\n                    this.rpcProviders[namespace] = new eip155_1.Eip155Provider(opts, this.client, this.events);\n                    break;\n                case \"solana\":\n                    const opts1 = {\n                        namespace: currentNameSpace\n                    };\n                    let solanaProvider = new solana_1.default(opts1, \"solana\", this.client, this.events);\n                    this.rpcProviders[namespace] = solanaProvider;\n                    let sonicProvider = new solana_1.default(opts1, \"sonic\", this.client, this.events);\n                    this.rpcProviders['sonic'] = sonicProvider;\n                    let svmProvider = new solana_1.default(opts1, \"svm\", this.client, this.events);\n                    this.rpcProviders['svm'] = svmProvider;\n                    let soonProvider = new solana_1.default(opts1, \"soon\", this.client, this.events);\n                    this.rpcProviders['soon'] = soonProvider;\n                    let eclipseProvider = new solana_1.default(opts1, \"eclipse\", this.client, this.events);\n                    this.rpcProviders['eclipse'] = eclipseProvider;\n                    // this.rpcProviders[namespace] = new SolanaProvider(opts1, () => { return this.session; });\n                    break;\n                case \"ton\":\n                    const optsTon = {\n                        namespace: currentNameSpace\n                    };\n                    let tonProvider = new ton_1.default(optsTon, this.client, this.events);\n                    this.rpcProviders[namespace] = tonProvider;\n                    break;\n                case \"sui\":\n                    const optsSui = {\n                        namespace: currentNameSpace\n                    };\n                    let suiProvider = new sui_1.SuiProvider(optsSui, this.client, this.events);\n                    suiProvider.name = \"sui\";\n                    this.rpcProviders[namespace] = suiProvider;\n                    break;\n                case \"btc\":\n                    const optsBtc = {\n                        namespace: currentNameSpace\n                    };\n                    let btcProvider = new btc_1.default(optsBtc, \"btc\", this.client, this.events);\n                    this.rpcProviders[\"btc\"] = btcProvider;\n                    let fbProvider = new btc_1.default(optsBtc, \"fractal\", this.client, this.events);\n                    this.rpcProviders[\"fractal\"] = fbProvider;\n                    break;\n                case \"aptos\":\n                    let aptosProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"aptos\", this.client, this.events);\n                    this.rpcProviders[namespace] = aptosProvider;\n                    let moveProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"movement\", this.client, this.events);\n                    this.rpcProviders[\"movement\"] = moveProvider;\n                    break;\n                case \"cosmos\":\n                    let cosmosProvider = new cosmos_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = cosmosProvider;\n                    break;\n                case \"tron\":\n                    let tronProvider = new tron_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = tronProvider;\n                    break;\n                case \"starknet\":\n                    let starknetProvider = new starknet_1.default({\n                        namespace: currentNameSpace\n                    }, \"starknet\", this.client, this.events);\n                    this.rpcProviders[namespace] = starknetProvider;\n                    break;\n            }\n        });\n    }\n    registerEventListeners() {\n        if (typeof this.client === \"undefined\") {\n            throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client is not initialized\");\n        }\n        this.client.engine.addDisconnectListener(() => {\n            this.disconnectAndEmit();\n            this.cleanup();\n        });\n        this.on(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, (caip2ChainId) => {\n            this.onChainChanged(caip2ChainId);\n        });\n        this.on(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, (nameSpaces) => {\n            if (nameSpaces) {\n                const nameSpacekey = Object.keys(nameSpaces)[0];\n                if (this.session) {\n                    this.session.namespaces[nameSpacekey] = nameSpaces[nameSpacekey];\n                    if (this.session) {\n                        this.persist(\"connectSession\", this.session);\n                        this.events.emit(\"session_update\", this.session);\n                    }\n                    (0, core_2.logDebug)(\"PROVIDER_EVENTS.UPDATE_NAMESPACES this.session... ->>>\", JSON.stringify(this.session));\n                }\n            }\n        });\n    }\n    getProvider(namespace) {\n        (0, core_2.logDebug)('current get providers', this.rpcProviders);\n        (0, core_2.logDebug)('query namespace: ', namespace);\n        return this.rpcProviders[namespace];\n    }\n    setNamespaces(params) {\n        this.connectOpts = params;\n        const { namespaces, sessionConfig } = params;\n        const data = {\n            origin: window.location.origin,\n            url: window.location.hostname,\n            name: this.providerOpts.dappMetaData.name,\n            icon: this.providerOpts.dappMetaData.icon,\n            manifestUrl: this.providerOpts.dappMetaData.manifestUrl,\n        };\n        this.sessionConfig = Object.assign({ dappInfo: data }, sessionConfig);\n        (0, core_2.logDebug)(\"setNamespaces sessionConfig>>>\", this.sessionConfig);\n        this.client.sessionConfig = this.sessionConfig;\n        this.persist(\"sessionConfig\", sessionConfig);\n    }\n    validateChain(chain) {\n        var _a;\n        let [namespace, chainId] = (chain === null || chain === void 0 ? void 0 : chain.split(\":\")) || [\"\", \"\"];\n        if (!this.session || !this.session.namespaces || !Object.keys(this.session.namespaces).length) {\n            (0, core_2.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        if (namespace) {\n            if (!this.isChainNamespaceInSession(namespace)) {\n                throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace '${namespace}' is not configured. Please call connect() first with namespace config.`);\n            }\n            if (chainId && chain) {\n                (0, core_2.logDebug)('this.session.namespaces -->> ', namespace, JSON.stringify(this.session.namespaces));\n                const chainsArr = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.chains;\n                (0, core_2.logDebug)('get chainsArr & chain', JSON.stringify(chainsArr), chain);\n                if (chainsArr && !chainsArr.includes(chain)) {\n                    throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace not include the chain '${chain}'`);\n                }\n            }\n        }\n        if (namespace && chainId) {\n            (0, core_2.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        let defaultNamespace = (0, namespaces_1.parseNamespaceKey)(Object.keys(this.session.namespaces)[0]);\n        const defaultChain = this.rpcProviders[defaultNamespace].getDefaultChain();\n        (0, core_2.logDebug)('get default chain:', defaultChain);\n        return [defaultNamespace, defaultChain];\n    }\n    isChainNamespaceInSession(namespaceStr) {\n        var _a, _b;\n        if (Object.keys(((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces) || {})\n            .map((key) => (0, namespaces_1.parseNamespaceKey)(key))\n            .includes(namespaceStr)) {\n            return true;\n        }\n        let isChainNamespaceInSession = false;\n        Object.values(((_b = this.session) === null || _b === void 0 ? void 0 : _b.namespaces) || {})\n            .forEach(namespace => {\n            namespace.chains.forEach(chain => {\n                if (chain.split(\":\")[0] == namespaceStr) {\n                    isChainNamespaceInSession = true;\n                }\n            });\n        });\n        return isChainNamespaceInSession;\n    }\n    requestAccountsWithNamespace(namespace) {\n        return this.getProvider(namespace).requestAccounts();\n    }\n    requestDefaultChainWithNamespace(namespace) {\n        return this.getProvider(namespace).getDefaultChain();\n    }\n    requestAccounts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const [namespace] = this.validateChain();\n            return yield this.getProvider(namespace).requestAccounts();\n        });\n    }\n    onChainChanged(caip2Chain) {\n        var _a;\n        if (!((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces))\n            return;\n        const [namespace, chainId] = this.validateChain(caip2Chain);\n        if (!chainId)\n            return;\n        if (this.session.namespaces[namespace]) {\n            this.session.namespaces[namespace].defaultChain = chainId;\n            this.persist(\"connectSession\", this.session);\n        }\n        this.events.emit(\"chainChanged\", chainId);\n    }\n    onConnect() {\n        this.createProviders();\n        if (this.session) {\n            this.persist(\"connectSession\", this.session);\n            console.log(\"window.okxwallet save session:\", Date.now());\n        }\n        this.events.emit(\"connect\", { session: this.session });\n        this.registerEventListeners();\n    }\n    cleanup() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.session = undefined;\n            this.client.session = undefined;\n            this.setConnectConnector();\n            this.sessionProperties = undefined;\n            this.persist(\"optionalNamespaces\", undefined);\n            this.persist(\"sessionProperties\", undefined);\n            this.persist(\"connectSession\", undefined);\n        });\n    }\n    persist(key, data) {\n        (0, core_2.logDebug)('[evm u-provider] persisit data', key, data);\n        return this.client.engine.saveSessionContent(key, data);\n    }\n    getFromStore(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.client.engine.getSessionContent(key);\n        });\n    }\n    showRequestModal(args, chain) {\n        try {\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return this.getProvider(namespace).showRequestModal(requestParam);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    openWallet(engineConnectInfo, connector) {\n        this.client.openWallet(engineConnectInfo, connector);\n    }\n    registerConnector(connectors) {\n        this.client.registerConnector(connectors);\n        this.client.setAccountChangeListener(session => {\n            (0, core_2.logDebug)(\"accountChangeListener session：\", this.events.listenerCount('accountChanged'), JSON.stringify(session));\n            try {\n                if (session && this.events.listenerCount('accountChanged')) {\n                    this.replaceSessionAptos(session, \"aptos\");\n                    this.replaceSessionAptos(session, \"solana\");\n                    this.session = session;\n                    this.client.session = session;\n                    if (this.session) {\n                        this.persist(\"connectSession\", this.session);\n                        console.log(\"window.okxwallet save session:\", Date.now());\n                    }\n                    this.setConnectConnector();\n                    this.createProviders();\n                    this.events.emit(\"accountChanged\", this.session);\n                }\n            }\n            catch (error) {\n                (0, core_2.logDebug)(\"setAccountChangeListener error:\", JSON.stringify(error));\n            }\n        });\n    }\n}\nexports.OKXUniversalProvider = OKXUniversalProvider;\nexports.default = OKXUniversalProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXStarknetProvider = exports.OKXTronProvider = exports.OKXTonProvider = exports.OKXCosmosProvider = exports.OKXBtcProvider = exports.OKXUniversalProvider = void 0;\n__exportStar(require(\"./provider/types\"), exports);\n__exportStar(require(\"./packages\"), exports);\nvar OKXUniversalProvider_1 = require(\"./OKXUniversalProvider\");\nObject.defineProperty(exports, \"OKXUniversalProvider\", { enumerable: true, get: function () { return OKXUniversalProvider_1.OKXUniversalProvider; } });\nvar OKXBtcProvider_1 = require(\"./OKXBtcProvider\");\nObject.defineProperty(exports, \"OKXBtcProvider\", { enumerable: true, get: function () { return OKXBtcProvider_1.OKXBtcProvider; } });\nvar OKXCosmosProvider_1 = require(\"./OKXCosmosProvider\");\nObject.defineProperty(exports, \"OKXCosmosProvider\", { enumerable: true, get: function () { return OKXCosmosProvider_1.OKXCosmosProvider; } });\nvar OKXTonProvider_1 = require(\"./OKXTonProvider\");\nObject.defineProperty(exports, \"OKXTonProvider\", { enumerable: true, get: function () { return OKXTonProvider_1.OKXTonProvider; } });\nvar OKXTronProvider_1 = require(\"./OKXTronProvider\");\nObject.defineProperty(exports, \"OKXTronProvider\", { enumerable: true, get: function () { return OKXTronProvider_1.OKXTronProvider; } });\nvar OKXStarknetProvider_1 = require(\"./OKXStarknetProvider\");\nObject.defineProperty(exports, \"OKXStarknetProvider\", { enumerable: true, get: function () { return OKXStarknetProvider_1.OKXStarknetProvider; } });\n__exportStar(require(\"@okxconnect/core\"), exports);\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignClient = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"../utils/namespaces\");\nconst ConnectMethodUtils_1 = require(\"../utils/ConnectMethodUtils\");\nconst constants_1 = require(\"../../provider/constants\");\nclass SignClient extends core_1.ISignClient {\n    constructor(metaData, events) {\n        super(metaData);\n        // ---------- Engine ----------------------------------------------- //\n        this.connect = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    var connectRequest = [];\n                    (0, core_1.logDebug)(`client connect params >>>`, JSON.stringify(params));\n                    var requestAccountItem = {\n                        name: \"requestAccounts\",\n                        requiredNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.namespaces),\n                        optionalNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.optionalNamespaces),\n                    };\n                    this.engine.setSessionConnectingListener(() => {\n                        (0, core_1.logDebug)(`sessionConnectingListener >>>`);\n                        this.events.emit(constants_1.PROVIDER_EVENTS.SESSION_CONNECTING);\n                    });\n                    if (params.signRequest) {\n                        requestAccountItem.connectRequestMethods = yield (0, ConnectMethodUtils_1.connectMethodsToConnectWalletMethods)(params.signRequest, requestAccountItem.requiredNamespaces);\n                    }\n                    connectRequest.push(requestAccountItem);\n                    (0, core_1.logDebug)(`client connect connectRequest >>>`, JSON.stringify(connectRequest));\n                    this.engine.universalConnect(connectRequest, Object.assign({ dappInfo: this.metadata }, params.sessionConfig), (info) => {\n                        if (info && info.connectRequest) {\n                            (0, core_1.logDebug)(`universalConect info.connectRequest :`, info.connectRequest);\n                            (0, core_1.logDebug)(`universalConect url:`, (0, core_1.getOKXLink)(info.connectRequest, this.sessionConfig.useMini));\n                            this.events.emit(\"display_uri\", (0, core_1.getOKXLink)(info.connectRequest, this.sessionConfig.useMini));\n                            this.events.emit(\"short_display_uri\", (0, core_1.getAppWalletShortDeepLink)(info.connectRequest.topic, info.connectRequest.clientId));\n                            (0, core_1.logDebug)(`universalConect EngineConnectInfo  ${JSON.stringify(info)}`);\n                            this.events.emit(\"okx_engine_connect_params\", info);\n                        }\n                    }).then((session) => __awaiter(this, void 0, void 0, function* () {\n                        (0, namespaces_1.fillParamsToSession)(session, params.namespaces, params.optionalNamespaces, this.sessionConfig);\n                        (0, core_1.logDebug)(`signClient: connect: session ${JSON.stringify(session)}`);\n                        if (params.signRequest) {\n                            yield (0, ConnectMethodUtils_1.connectMethodsResponseUpdate)(session, params.signRequest);\n                        }\n                        resolve(session);\n                    })).catch((e) => {\n                        (0, core_1.logDebug)(`signClient: connect: catch ${JSON.stringify(e)}`);\n                        this.events.emit(\"connect_error\", e);\n                        reject(e);\n                    });\n                }\n                catch (error) {\n                    (0, core_1.logDebug)(`signClient: connect:  ${JSON.stringify(error)}`);\n                    reject(error);\n                }\n            }));\n        });\n        this.restoreconnect = (sessionConfig) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.restoreconnect(sessionConfig, (session) => {\n                    if (session) {\n                        resolve(session);\n                    }\n                    else {\n                        reject();\n                    }\n                });\n            });\n        });\n        this.reject = (params) => __awaiter(this, void 0, void 0, function* () {\n        });\n        this.request = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                (0, core_1.logDebug)(\"clint request --params>>>> >\", (_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl, (0, core_1.safeJsonStringify)(params));\n                try {\n                    // this.sessionConfig\n                    if (((_b = this.sessionConfig) === null || _b === void 0 ? void 0 : _b.openUniversalUrl) && (0, core_1.isIos)()) {\n                        this.openOKXWallet();\n                    }\n                    yield this.engine.send(params, {\n                        resolve: (response) => {\n                            delete response.requestId;\n                            (0, core_1.logDebug)(\"clint request --response >\", (0, core_1.safeJsonStringify)(response));\n                            if (('error' in response) && response.error) {\n                                let error = response.error;\n                                reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                            }\n                            else {\n                                resolve(response);\n                            }\n                        },\n                        onAck: () => {\n                            var _a;\n                            if (!(0, core_1.isIos)() && ((_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl)) {\n                                this.openOKXWallet();\n                            }\n                        }\n                    });\n                }\n                catch (e) {\n                    (0, core_1.logDebug)(\"clint request --error:\", e);\n                    reject(e);\n                }\n            }));\n        });\n        this.disconnect = () => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"disconnect\"\n                }, {\n                    onAck: () => {\n                        resolve();\n                    }\n                }, 86400000).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n        this.engine = new core_1.Engine(metaData.name);\n        this.events = events;\n        this.metadata = metaData;\n    }\n    setAccountChangeListener(accountChangeListener) {\n        this.engine.setAccountChangeListener(accountChangeListener);\n    }\n    openOKXWallet() {\n        // if (this.openUniversalUrl){\n        (0, core_1.logDebug)('bridge-provider ==>> connect_5');\n        this.engine.openWallet({ tmaReturnUrl: this.sessionConfig.tmaReturnUrl });\n        // if (this.sessionConfig?.useMini){\n        //     let url = getTelegramWalletTWAUrl(undefined,this.sessionConfig.tmaReturnUrl)\n        //     openOKXTMAWalletlinkWithFallback(url)\n        // }else{\n        //     openOKXDeeplink(standardDeeplink);\n        // }\n        // }\n    }\n    syncAllAddress() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"sync_all_addresses\"\n                }, {\n                    resolve: (response) => {\n                        delete response.requestId;\n                        (0, core_1.logDebug)(\"clint syncAllAddress --response >\", JSON.stringify(response));\n                        if (('error' in response) && response.error) {\n                            let error = response.error;\n                            reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                        }\n                        else {\n                            let allAddressStr = response.result;\n                            resolve((0, ConnectMethodUtils_1.syncResoonseToRequire)(allAddressStr));\n                        }\n                    }\n                }).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n    }\n    registerConnector(connectors) {\n        this.engine.registerConnector(connectors);\n    }\n    openWallet(engineConnectInfo, connector) {\n        this.engine.openWallet(engineConnectInfo, connector);\n    }\n    setConnectConnector(wallet) {\n        this.engine.setConnectConnector(wallet);\n    }\n}\nexports.SignClient = SignClient;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.connectSupportMethods = void 0;\nexports.creatNotSupportMethodItemReplay = creatNotSupportMethodItemReplay;\nexports.connectMethodsAdaptOldVersion = connectMethodsAdaptOldVersion;\nexports.connectMethodsResponseUpdate = connectMethodsResponseUpdate;\nexports.connectMethodsToConnectWalletMethods = connectMethodsToConnectWalletMethods;\nexports.syncResoonseToRequire = syncResoonseToRequire;\nconst core_1 = require(\"@okxconnect/core\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst provider_1 = require(\"../../provider\");\nfunction isArray(value) {\n    return typeof value === \"object\" && value !== null && Array.isArray(value);\n}\nfunction isRecord(value) {\n    return typeof value === \"object\" && value !== null && !Array.isArray(value);\n}\n// \"wallet_addEthereumChain\",\n// \"solana_signMessage\",  There are risks\nexports.connectSupportMethods = Object.freeze([\n    \"personal_sign\",\n    \"sui_signMessage\",\n    \"sui_signPersonalMessage\",\n    \"btc_signMessage\",\n    \"aptos_signMessage\",\n    \"cosmos_signArbitrary\",\n    \"tron_signMessage\",\n    \"tron_signMessageV2\",\n    \"starknet_signMessage\",\n    \"sync_all_addresses\"\n]);\nfunction creatNotSupportMethodItemReplay(requestParams) {\n    let notSupportError = new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n    var errorItem = {\n        method: requestParams.method,\n        chainId: requestParams.chainId,\n        error: {\n            code: notSupportError.code,\n            message: notSupportError.message\n        },\n    };\n    return errorItem;\n}\nfunction connectMethodsAdaptOldVersion(requestParams, session) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b, _c, _d, _e;\n        try {\n            (0, core_1.logDebug)(\"connectMethodsAdaptOldVersion start params :\", JSON.stringify(requestParams));\n            let callBackParams = {};\n            if (requestParams.method === \"solana_signMessage\") {\n                let solAccount = (_a = session.namespaces[core_1.NameSpaceKeySOL]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account1) {\n                    return account1.startsWith(requestParams.chainId);\n                })[0];\n                const solAddress = (0, provider_1.fromAccountToAddress)(solAccount);\n                if (requestParams.params && solAddress && \"message\" in requestParams.params) {\n                    let realMessage = requestParams.params.message;\n                    if (((_b = session.wallet) === null || _b === void 0 ? void 0 : _b.appName) == \"OKX Wallet\") {\n                        let encodeMessage = new TextEncoder().encode(realMessage);\n                        realMessage = bs58_1.default.encode(encodeMessage);\n                    }\n                    requestParams.params = {\n                        message: realMessage,\n                        \"pubkey\": solAddress\n                    };\n                    requestParams.injectParams = requestParams.params;\n                    callBackParams = {\n                        publicKey: solAddress\n                    };\n                    (0, core_1.logDebug)(\"solana_signMessage account and address:\", JSON.stringify(solAccount), solAddress);\n                    (0, core_1.logDebug)(\"solana_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"sui_signMessage\" || requestParams.method === \"sui_signPersonalMessage\") {\n                if (\"message\" in requestParams.params && requestParams.params.message) {\n                    let suiMessage = JSON.parse(JSON.stringify(requestParams.params.message));\n                    let convertedArray = Object.values(suiMessage);\n                    let uint8Array = new Uint8Array(convertedArray);\n                    let decoder = new TextDecoder(\"utf8\");\n                    let b64encoded = btoa(decoder.decode(uint8Array));\n                    requestParams.params = {\n                        message: atob(b64encoded),\n                    };\n                    requestParams.injectParams = {\n                        message: uint8Array\n                    };\n                    console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", JSON.stringify(requestParams.params), b64encoded);\n                    if (requestParams.method === \"sui_signMessage\") {\n                        callBackParams = {\n                            \"messageBytes\": b64encoded,\n                            \"signature\": \"\"\n                        };\n                    }\n                    else if (requestParams.method === \"sui_signPersonalMessage\") {\n                        callBackParams = {\n                            \"bytes\": b64encoded,\n                            \"signature\": \"\"\n                        };\n                    }\n                    (0, core_1.logDebug)(\"sui_signMessage/sui_signPersonalMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"btc_signMessage\") {\n                let btcAccounts = (_c = session.namespaces[core_1.NameSpaceKeyBtc]) === null || _c === void 0 ? void 0 : _c.accounts.filter(function (account2) {\n                    return account2.startsWith(requestParams.chainId);\n                });\n                let btcAccount = btcAccounts[0];\n                const btcAddress = (0, provider_1.fromAccountToAddress)(btcAccount);\n                (0, core_1.logDebug)(\"btc_signMessage account and address:\", JSON.stringify(btcAccount), btcAddress);\n                if (btcAddress) {\n                    if (\"message\" in requestParams.params && requestParams.params.message && typeof requestParams.params.message === 'string') {\n                        requestParams.params = {\n                            from: btcAddress,\n                            signStr: requestParams.params.message\n                        };\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                    }\n                    requestParams.params[\"from\"] = btcAddress;\n                    (0, core_1.logDebug)(\"btc_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"aptos_signMessage\") {\n                let paramData = requestParams.params;\n                let aptosAccount = (_d = session.namespaces[core_1.NameSpaceKeyAptos]) === null || _d === void 0 ? void 0 : _d.accounts.filter(function (account3) {\n                    return account3.startsWith(requestParams.chainId);\n                })[0];\n                let aptosAddress = (0, provider_1.fromAccountToAddress)(aptosAccount);\n                if (paramData && aptosAddress) {\n                    let prefix = \"APTOS\";\n                    let message = \"\", nonce = \"\";\n                    var fullMessage = prefix;\n                    let application = window.location.protocol + \"//\" + window.location.hostname;\n                    if (\"address\" in paramData && paramData.address) {\n                        fullMessage += \"\\naddress: \" + aptosAddress;\n                    }\n                    if (\"application\" in paramData && paramData.application) {\n                        fullMessage += \"\\napplication: \" + application;\n                    }\n                    let aptosChainId = 1;\n                    if (\"chainId\" in paramData && paramData.chainId) {\n                        if (paramData.chainId == \"aptos:mainnet\") {\n                            aptosChainId = 1;\n                        }\n                        else if (paramData.chainId == \"movement:testnet\") {\n                            aptosChainId = 2;\n                        }\n                        fullMessage += \"\\nchainId: \" + aptosChainId;\n                    }\n                    if (\"message\" in paramData) {\n                        fullMessage += \"\\nmessage: \" + paramData.message;\n                        message = paramData.message;\n                    }\n                    if (\"nonce\" in paramData) {\n                        fullMessage += \"\\nnonce: \" + paramData.nonce;\n                        nonce = paramData.nonce;\n                    }\n                    const utf8Array = new TextEncoder().encode(fullMessage);\n                    const hex = Array.from(utf8Array)\n                        .map(byte => byte.toString(16).padStart(2, \"0\"))\n                        .join(\"\");\n                    requestParams.params = {\n                        \"message\": hex,\n                    };\n                    (0, core_1.logDebug)(\"aptos_signMessage requestParams:\", JSON.stringify(requestParams));\n                    callBackParams = {\n                        address: aptosAddress,\n                        application: application,\n                        chainId: aptosChainId,\n                        fullMessage: fullMessage,\n                        message: message,\n                        nonce: nonce,\n                        prefix: prefix,\n                        signature: \"\",\n                    };\n                    (0, core_1.logDebug)(\"aptos_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"cosmos_signArbitrary\") {\n                let cosmosAccount = (_e = session === null || session === void 0 ? void 0 : session.namespaces[core_1.NameSpaceKeyCosmos]) === null || _e === void 0 ? void 0 : _e.accounts.filter(function (account_cosmos) {\n                    return account_cosmos.startsWith(requestParams.chainId);\n                })[0];\n                const cosmosAddress = (0, provider_1.fromAccountToAddress)(cosmosAccount);\n                let cosmosData = requestParams.params[\"message\"];\n                const cosmosBase64Encoded = btoa(cosmosData);\n                (0, core_1.logDebug)(\"cosmos_signArbitrary account and address:\", JSON.stringify(cosmosAccount), cosmosAddress);\n                (0, core_1.logDebug)(\"cosmos_signArbitrary cosmosBase64Encoded:\", cosmosBase64Encoded);\n                if (cosmosData && cosmosAddress) {\n                    const signDoc = {\n                        chain_id: \"\",\n                        account_number: \"0\",\n                        sequence: \"0\",\n                        fee: {\n                            gas: \"0\",\n                            amount: []\n                        },\n                        msgs: [{\n                                \"type\": \"sign/MsgSignData\",\n                                \"value\": {\n                                    \"signer\": cosmosAddress,\n                                    \"data\": cosmosBase64Encoded\n                                }\n                            }],\n                        memo: \"\"\n                    };\n                    requestParams.params = {\n                        \"signer\": cosmosAddress,\n                        \"chain_id\": requestParams.chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    };\n                    (0, core_1.logDebug)(\"cosmos_signArbitrary callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            (0, core_1.logDebug)(\"sol_handleSignatureData end params:\", JSON.stringify(requestParams));\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\nfunction connectMethodsResponseUpdate(session, requestParams) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a;\n        try {\n            if (session.signResponse) {\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate signResponse:\", JSON.stringify(session.signResponse));\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate session.namespaces:\", JSON.stringify(session.namespaces));\n                for (const methodItem of session.signResponse) {\n                    (0, core_1.logDebug)(\"connectMethodsResponseUpdate methodItem:\", JSON.stringify(methodItem));\n                    if (\"result\" in methodItem) {\n                        if (methodItem.method === \"solana_signMessage\") {\n                            let solanaSuccessData = methodItem.result;\n                            (0, core_1.logDebug)(\"solana_signMessage methodItem.chainId:\", methodItem.chainId);\n                            let account = (_a = session.namespaces[core_1.NameSpaceKeySOL]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account) {\n                                (0, core_1.logDebug)(\"solana_signMessage account:\", account);\n                                return account.startsWith(methodItem.chainId);\n                            })[0];\n                            (0, core_1.logDebug)(\"solana_signMessage result account:\", solanaSuccessData, account);\n                            if (solanaSuccessData && account) {\n                                methodItem.result = {\n                                    \"signature\": bs58_1.default.decode(solanaSuccessData),\n                                    \"publicKey\": (0, provider_1.fromAccountToAddress)(account)\n                                };\n                            }\n                        }\n                        else if (methodItem.method === \"sui_signMessage\" || methodItem.method === \"sui_signPersonalMessage\") {\n                            let suiMethod = requestParams.filter(function (requestMethod) {\n                                return requestMethod.method === methodItem.method;\n                            })[0];\n                            if (suiMethod && suiMethod.params && \"message\" in suiMethod.params) {\n                                let suiMessage = suiMethod.params.message;\n                                let suiMessageb64 = btoa(suiMessage);\n                                console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", suiMessage, suiMessageb64);\n                                if (methodItem.method === \"sui_signMessage\") {\n                                    methodItem.result = {\n                                        \"messageBytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                                else if (methodItem.method === \"sui_signPersonalMessage\") {\n                                    methodItem.result = {\n                                        \"bytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                            }\n                        }\n                        else if (methodItem.method === \"aptos_signMessage\") {\n                            methodItem.chainId = (0, core_1.replaceChainIdToChainName)(methodItem.chainId);\n                            methodItem.result = JSON.parse(methodItem.result);\n                            console.log(\"aptos_signMessage result methodItem.result before:>>>>\", JSON.stringify(methodItem.result));\n                            if (methodItem.result && \"signature\" in methodItem.result) {\n                                let aptosSignature = methodItem.result.signature;\n                                if (aptosSignature && aptosSignature.startsWith(\"0x\")) {\n                                    aptosSignature = aptosSignature.slice(2, aptosSignature.length);\n                                    methodItem.result.signature = aptosSignature;\n                                }\n                            }\n                            console.log(\"aptos_signMessage result methodItem.result after:>>>>\", JSON.stringify(methodItem.result));\n                        }\n                        else if (methodItem.method === \"cosmos_signArbitrary\") {\n                            methodItem.result = JSON.parse(methodItem.result);\n                        }\n                        else if (methodItem.method == 'starknet_signMessage') {\n                            let results = methodItem.result;\n                            if (typeof results == 'string') {\n                                results = JSON.parse(results);\n                            }\n                            methodItem.result = [results[\"signedDataR\"], results[\"signedDataS\"]];\n                        }\n                        else if (methodItem.method == 'sync_all_addresses') {\n                            methodItem.result = syncResoonseToRequire(methodItem.result);\n                        }\n                    }\n                }\n            }\n        }\n        catch (error) {\n            (0, core_1.logDebug)(\"connectMethodsResponseUpdate signResponse Error:\", JSON.stringify(error));\n            throw error;\n        }\n    });\n}\nfunction connectMethodsToConnectWalletMethods(params, requireNameSpace) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods requestMethods:\", JSON.stringify(params));\n            const result = [];\n            //TODO  后面需要打开限制\n            if (params && params.length > 1) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connectAndSign/openModalAndSign signRequest only support one data`);\n            }\n            if (!requireNameSpace && params && params.length > 0) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error , RequestMethods cannot be added when the NameSpace is empty`);\n            }\n            // check chianId\n            for (const methodItem of params) {\n                if (methodItem.method === \"aptos_signMessage\") { //update chainId\n                    methodItem.chainId = (0, core_1.replaceChainNameToChainId)(methodItem.chainId);\n                }\n                // check chianId\n                if (methodItem.method === \"wallet_addEthereumChain\") {\n                    var includeEip155 = requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.namespace.includes(\"eip155\"));\n                    if (!includeEip155) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', the EVM chain needs to be included in the NameSpace`);\n                    }\n                }\n                else if (methodItem.method === \"sync_all_addresses\") {\n                    if ((0, provider_1.syncAddressHostAvailable)()) {\n                        methodItem.chainId = \"\";\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                    }\n                }\n                else {\n                    const includeChain = !!(requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.chains.some(chain => chain.includes(`${methodItem.chainId}`))));\n                    if (!includeChain) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', NameSpace must contain '${methodItem.chainId}'`);\n                    }\n                }\n            }\n            for (const item of params) {\n                if (!exports.connectSupportMethods.includes(item.method)) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect requestMethods not support method, method: '${item.method}'`);\n                }\n                if (item.method === \"wallet_addEthereumChain\") {\n                    if (Array.isArray(item.params)) {\n                        const paramsArr = item.params;\n                        if (paramsArr && paramsArr.length === 1) {\n                            const firstParam = paramsArr[0];\n                            if (isRecord(firstParam)) {\n                                item.params = firstParam;\n                            }\n                        }\n                        else if (paramsArr && paramsArr.length > 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params only support one data, method: '${item.method}'`);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is nil, method: '${item.method}'`);\n                        }\n                    }\n                }\n                else if (item.method === \"personal_sign\") {\n                    if (isArray(item.params)) {\n                        if (item.params && item.params.length !== 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params error,  method: '${item.method}' `);\n                        }\n                        let firstObj = item.params[0];\n                        if (firstObj && typeof firstObj === 'string') {\n                            item.params = {\n                                message: firstObj\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                }\n                else if (item.method === \"sui_signMessage\" || item.method === \"sui_signPersonalMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message) {\n                            (0, core_1.logDebug)(\"sui_signMessage item.params.message :\", item.params.message);\n                            let message = JSON.parse(JSON.stringify(item.params.message));\n                            let convertedArray = Object.values(message);\n                            let uint8Array = new Uint8Array(convertedArray);\n                            let decoder = new TextDecoder(\"utf8\");\n                            let b64encoded = btoa(decoder.decode(uint8Array));\n                            item.params.message = atob(b64encoded);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"solana_signMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            let encodeMessage = new TextEncoder().encode(item.params.message);\n                            item.params[\"bs58Message\"] = bs58_1.default.encode(encodeMessage);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"aptos_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (item.chainId) {\n                            var aptosParams = item.params;\n                            var currentURL = window.location.protocol + \"//\" + window.location.hostname;\n                            let signChainId = 1;\n                            if (item.chainId === \"aptos:637\") {\n                            }\n                            else if (item.chainId === \"aptos:70000060\") {\n                                signChainId = 2;\n                            }\n                            item.params = {\n                                data: aptosParams,\n                                applicationUrl: currentURL,\n                                prefix: \"APTOS\",\n                                aptosChainId: signChainId\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"cosmos_signArbitrary\") {\n                    if (isRecord(item.params)) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            const base64Encoded = btoa(item.params.message);\n                            let cosmosChain = item.chainId.split(\":\")[1];\n                            if (cosmosChain) {\n                                item.params = {\n                                    chain_id: cosmosChain,\n                                    data: {\n                                        chain_id: \"\",\n                                        account_number: \"0\",\n                                        sequence: \"0\",\n                                        fee: {\n                                            gas: \"0\",\n                                            amount: []\n                                        },\n                                        msgs: [{\n                                                \"type\": \"sign/MsgSignData\",\n                                                \"value\": {\n                                                    \"signer\": \"\", //address\n                                                    \"data\": base64Encoded\n                                                }\n                                            }],\n                                        memo: \"\"\n                                    }\n                                };\n                            }\n                            else {\n                                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                            }\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params message is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method == \"tron_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (\"message\" in item.params && item.params.message && typeof item.params.message === 'string') {\n                            item.params.message = stringToHex(item.params.message);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method == \"btc_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (\"message\" in item.params && item.params.message && typeof item.params.message === 'string') {\n                            item.params = {\n                                signStr: item.params.message\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods item:\", JSON.stringify(item));\n                result.push(item);\n            }\n            return result;\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\nfunction stringToHex(str) {\n    let hex = '';\n    for (let i = 0; i < str.length; i++) {\n        hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n    }\n    return hex;\n}\nfunction syncResoonseToRequire(responseAddressStr) {\n    const allAddress = JSON.parse(responseAddressStr);\n    const result = {\n        type: allAddress.type,\n        isEvm: allAddress.isEvm,\n        walletName: allAddress.walletName,\n        deriveName: allAddress.deriveName,\n        addresses: allAddress.addresses.map((addr) => ({\n            coinId: addr.ci,\n            address: addr.a && addr.a !== 'null' ? addr.a : allAddress.evmAddress,\n        })),\n    };\n    return result;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.creatNotSupportMethodItemReplay = exports.connectMethodsAdaptOldVersion = void 0;\nvar ConnectMethodUtils_1 = require(\"./ConnectMethodUtils\");\nObject.defineProperty(exports, \"connectMethodsAdaptOldVersion\", { enumerable: true, get: function () { return ConnectMethodUtils_1.connectMethodsAdaptOldVersion; } });\nObject.defineProperty(exports, \"creatNotSupportMethodItemReplay\", { enumerable: true, get: function () { return ConnectMethodUtils_1.creatNotSupportMethodItemReplay; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAccountsChains = getAccountsChains;\nexports.nameSpaceToConnectWalletNameSpace = nameSpaceToConnectWalletNameSpace;\nexports.fillParamsToSession = fillParamsToSession;\nexports.isCaipNamespace = isCaipNamespace;\nexports.parseNamespaceKey = parseNamespaceKey;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getAccountsChains(accounts) {\n    const chains = [];\n    accounts.forEach((account) => {\n        const [chain, chainId] = account.split(\":\");\n        chains.push(`${chain}:${chainId}`);\n    });\n    return chains;\n}\nfunction nameSpaceToConnectWalletNameSpace(namespaces) {\n    var result = [];\n    if (!namespaces) {\n        return result;\n    }\n    Object.keys(namespaces).forEach((key) => {\n        if (key === core_1.NameSpaceKeyEip155 || key === core_1.NameSpaceKeySOL || key === core_1.NameSpaceKeySui || key === core_1.NameSpaceKeyAptos\n            || key == core_1.NameSpaceKeyBtc || key === core_1.NameSpaceKeyTON || key === core_1.NameSpaceKeyCosmos || key === core_1.NameSpaceKeyTron || key === core_1.NameSpaceKeyStarknet) {\n            if (namespaces[key].chains) {\n                result.push({\n                    namespace: key,\n                    chains: namespaces[key].chains,\n                    params: namespaces[key].params,\n                });\n            }\n        }\n    });\n    return result;\n}\nfunction fillParamsToSession(session, namespaces, optionalNamespaces, sessionConfig) {\n    // Helper function to merge rpcMaps\n    const mergeRpcMap = (targetRpcMap, sourceRpcMap) => {\n        Object.assign(targetRpcMap, sourceRpcMap);\n    };\n    // Merge function for namespaces\n    const mergeNamespaces = (target, source) => {\n        for (const key in source) {\n            if (source.hasOwnProperty(key) && source[key].rpcMap) {\n                if (source[key].rpcMap) {\n                    if (!target[key].rpcMap) {\n                        target[key].rpcMap = {};\n                    }\n                    // 合并 rpcMap\n                    mergeRpcMap(target[key].rpcMap, source[key].rpcMap);\n                }\n                if (source[key].defaultChain && target[key].defaultChain === undefined) {\n                    //defaultChain need in session nameSpace\n                    if (target[key].chains.some(chain => chain.split(\":\")[1] === source[key].defaultChain)) {\n                        target[key].defaultChain = source[key].defaultChain;\n                    }\n                }\n            }\n        }\n    };\n    // 合并 namespaces\n    if (namespaces) {\n        mergeNamespaces(session.namespaces, namespaces);\n    }\n    // 合并 optionalNamespaces\n    if (optionalNamespaces) {\n        mergeNamespaces(session.namespaces, optionalNamespaces);\n    }\n    for (const key in session.namespaces) {\n        const namespace = session.namespaces[key];\n        if (!(namespace === null || namespace === void 0 ? void 0 : namespace.accounts) || namespace.accounts.length === 0) {\n            delete session.namespaces[key];\n        }\n    }\n    if (session.namespaces[core_1.NameSpaceKeyBtc] && session.wallet.appName === core_1.OKXWalletName) {\n        fixMobileBtcSession(session.namespaces[core_1.NameSpaceKeyBtc]);\n    }\n    session.sessionConfig = sessionConfig;\n}\nfunction fixMobileBtcSession(btcNameSpace) {\n    try {\n        if (btcNameSpace && btcNameSpace.extra) {\n            var data = btcNameSpace.extra;\n            Object.keys(data).forEach(key => {\n                const item = data[key];\n                if (Number(item.addressType) === 6) {\n                    item.publicKey = item.compressedPublicKey.slice(2);\n                }\n                else {\n                    item.publicKey = item.compressedPublicKey;\n                }\n            });\n        }\n    }\n    catch (e) {\n        (0, core_1.logDebug)(\"namespaces fixMobileBtcSession error\");\n    }\n}\n/**\n * util designed for Wallets that builds namespaces structure by provided supported chains, methods, events & accounts.\n * It takes required & optional namespaces provided in the session proposal\n * along with the supported chains/methods/events/accounts by the wallet and returns a structured namespaces object\n * @param {BuildApprovedNamespacesParams} params\n * @returns {SessionTypes.Namespaces}\n */\n// export function buildApprovedNamespaces(\n//   params: BuildApprovedNamespacesParams,\n// ): SessionTypes.Namespaces {\n//   const {\n//     proposal: { requiredNamespaces, optionalNamespaces = {} },\n//     supportedNamespaces,\n//   } = params;\n//   const normalizedRequired = normalizeNamespaces(requiredNamespaces);\n//   const normalizedOptional = normalizeNamespaces(optionalNamespaces);\n//\n//   // build approved namespaces\n//   const namespaces = {};\n//   Object.keys(supportedNamespaces).forEach((namespace) => {\n//     const supportedChains = supportedNamespaces[namespace].chains;\n//     const supportedMethods = supportedNamespaces[namespace].methods;\n//     const supportedEvents = supportedNamespaces[namespace].events;\n//     const supportedAccounts = supportedNamespaces[namespace].accounts;\n//\n//     supportedChains.forEach((chain) => {\n//       if (!supportedAccounts.some((account) => account.includes(chain))) {\n//         throw new Error(`No accounts provided for chain ${chain} in namespace ${namespace}`);\n//       }\n//     });\n//\n//     namespaces[namespace] = {\n//       chains: supportedChains,\n//       methods: supportedMethods,\n//       events: supportedEvents,\n//       accounts: supportedAccounts,\n//     };\n//   });\n//\n//   // verify all required namespaces are supported\n//   const err = isConformingNamespaces(requiredNamespaces, namespaces, \"approve()\");\n//   if (err) throw new Error(err.message);\n//\n//   const approvedNamespaces = {};\n//\n//   // if both required & optional namespaces are empty, return all supported namespaces by the wallet\n//   if (!Object.keys(requiredNamespaces).length && !Object.keys(optionalNamespaces).length)\n//     return namespaces;\n//\n//   // assign accounts for the required namespaces\n//   Object.keys(normalizedRequired).forEach((requiredNamespace) => {\n//     const chains = supportedNamespaces[requiredNamespace].chains.filter((chain) =>\n//       normalizedRequired[requiredNamespace]?.chains?.includes(chain),\n//     );\n//     const methods = supportedNamespaces[requiredNamespace].methods.filter((method) =>\n//       normalizedRequired[requiredNamespace]?.methods?.includes(method),\n//     );\n//     const events = supportedNamespaces[requiredNamespace].events.filter((event) =>\n//       normalizedRequired[requiredNamespace]?.events?.includes(event),\n//     );\n//\n//     const accounts = chains\n//       .map((chain: string) =>\n//         supportedNamespaces[requiredNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[requiredNamespace] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   });\n//\n//   // add optional namespaces\n//   Object.keys(normalizedOptional).forEach((optionalNamespace) => {\n//     if (!supportedNamespaces[optionalNamespace]) return;\n//\n//     const chainsToAdd = normalizedOptional[optionalNamespace]?.chains?.filter((chain) =>\n//       supportedNamespaces[optionalNamespace].chains.includes(chain),\n//     );\n//     const methodsToAdd = supportedNamespaces[optionalNamespace].methods.filter((method) =>\n//       normalizedOptional[optionalNamespace]?.methods?.includes(method),\n//     );\n//     const eventsToAdd = supportedNamespaces[optionalNamespace].events.filter((event) =>\n//       normalizedOptional[optionalNamespace]?.events?.includes(event),\n//     );\n//\n//     const accountsToAdd = chainsToAdd\n//       ?.map((chain: string) =>\n//         supportedNamespaces[optionalNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[optionalNamespace] = {\n//       chains: mergeArrays(approvedNamespaces[optionalNamespace]?.chains, chainsToAdd),\n//       methods: mergeArrays(approvedNamespaces[optionalNamespace]?.methods, methodsToAdd),\n//       events: mergeArrays(approvedNamespaces[optionalNamespace]?.events, eventsToAdd),\n//       accounts: mergeArrays(approvedNamespaces[optionalNamespace]?.accounts, accountsToAdd),\n//     };\n//   });\n//\n//   return approvedNamespaces;\n// }\nfunction isCaipNamespace(namespace) {\n    return namespace.includes(\":\");\n}\nfunction parseNamespaceKey(namespace) {\n    return isCaipNamespace(namespace) ? namespace.split(\":\")[0] : namespace;\n}\n/**\n * Converts\n * ```\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * ```\n * into\n * ```\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *```\n */\n// export function normalizeNamespaces(\n//   namespaces: ProposalTypes.RequiredNamespaces,\n// ): ProposalTypes.RequiredNamespaces {\n//   const normalizedNamespaces = {} as ProposalTypes.RequiredNamespaces;\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       methods: mergeArrays(methods, normalizedNamespaces[normalizedKey]?.methods),\n//       events: mergeArrays(events, normalizedNamespaces[normalizedKey]?.events),\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n// export function getNamespacesFromAccounts(accounts: string[]) {\n//   const namespaces = {};\n//   accounts?.forEach((account) => {\n//     const [namespace, chainId] = account.split(\":\");\n//     if (!namespaces[namespace]) {\n//       namespaces[namespace] = {\n//         accounts: [],\n//         chains: [],\n//         events: [],\n//       };\n//     }\n//     namespaces[namespace].accounts.push(account);\n//     namespaces[namespace].chains.push(`${namespace}:${chainId}`);\n//   });\n//\n//   return namespaces;\n// }\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PROVIDER_EVENTS = void 0;\nexports.PROVIDER_EVENTS = {\n    DEFAULT_CHAIN_CHANGED: \"default_chain_changed\",\n    UPDATE_NAMESPACES: \"update_name_spaces\",\n    SESSION_CONNECTING: \"session_connecting\"\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./values\"), exports);\n__exportStar(require(\"./events\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GENERIC_SUBPROVIDER_NAME = exports.RPC_URL = exports.STORAGE = exports.CONTEXT = exports.WC_VERSION = exports.PROTOCOL = exports.RELAY_URL = exports.LOGGER = void 0;\nexports.LOGGER = \"error\";\nexports.RELAY_URL = \"wss://relay.walletconnect.com\";\nexports.PROTOCOL = \"wc\";\nexports.WC_VERSION = 2;\nexports.CONTEXT = \"universal_provider\";\nexports.STORAGE = `${exports.PROTOCOL}@${exports.WC_VERSION}:${exports.CONTEXT}:`;\nexports.RPC_URL = \"https://rpc.walletconnect.com/v1/\";\nexports.GENERIC_SUBPROVIDER_NAME = \"generic\";\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./types\"), exports);\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass AptosProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"aptos\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"aptos request --args--string>\", (0, core_1.safeJsonStringify)(args));\n            (0, core_1.logDebug)(\"aptos provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = AptosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass BtcProvider {\n    constructor(opts, name, client, events) {\n        this.name = core_1.NameSpaceKeyBtc;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"btc request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"btc provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = BtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass CosmosProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyCosmos;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"cosmos request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"cosmos provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = CosmosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Eip155Provider = void 0;\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nclass Eip155Provider {\n    constructor(opts, client, events) {\n        this.name = \"eip155\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = parseInt(this.getDefaultChain());\n        // rpc\n        this.httpProviders = this.createHttpProviders();\n        (0, core_1.logDebug)(\"eip155 constructor --opts.namespace-->\", opts.namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    isArray(value) {\n        return typeof value === \"object\" && value !== null && Array.isArray(value);\n    }\n    updateRequestParams(args) {\n        let isDic = args.params && typeof args.params === 'object' && !Array.isArray(args.params);\n        if (args.method === 'wallet_switchEthereumChain') {\n            const switchChainId = args.chainId.split(\":\")[1];\n            // const hexChainId = parseInt(switchChainId, 16);\n            const decimalNumber = parseInt(switchChainId, 10);\n            if (isNaN(decimalNumber)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid decimal number,  chainId: '${switchChainId}' `);\n            }\n            if (!args.params) {\n                args.params = { chainId: '0x' + decimalNumber.toString(16) };\n            }\n            else if (isDic) { //为 Record<string, unknown>\n                let params = args.params;\n                if (!('chainId' in params)) {\n                    params['chainId'] = '0x' + decimalNumber.toString(16);\n                    args.params = params;\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params error ,  method: '${args.method}' `);\n            }\n        }\n        else if (args.method === 'personal_sign'\n            || args.method === 'eth_signTypedData_v4'\n            || args.method === 'eth_sendTransaction'\n            || args.method === 'wallet_watchAsset') {\n            if (!args.params) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params is nil, method: '${args.method}'`);\n            }\n            if (this.isRecord(args.params)) {\n                let params = args.params;\n                (0, core_1.logDebug)(\"eip155 updateRequestParams params>\", JSON.stringify(params));\n                if ('chainId' in params) {\n                    const selectedChainId = args.chainId.split(\":\")[1];\n                    const chainNum = parseInt(selectedChainId, 10);\n                    let paramsChainString = String(params.chainId);\n                    let paramsChainId;\n                    if (paramsChainString.startsWith(this.name) && args.chainId === paramsChainString) { //为\n                        paramsChainId = chainNum;\n                    }\n                    else if (paramsChainString.startsWith(\"0x\")) {\n                        paramsChainId = parseInt(paramsChainString, 16);\n                    }\n                    else if (!isNaN(Number(paramsChainString))) { //数字\n                        paramsChainId = parseInt(paramsChainString, 10);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid params.chainId format, method: '${args.method}'`);\n                    }\n                    if (chainNum !== paramsChainId) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params.chainId not equal chain,  method: '${args.method}' `);\n                    }\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid request params type, method: '${args.method}'`);\n            }\n        }\n    }\n    //adapt array\n    adaptArray(args) {\n        if (args.method === 'wallet_switchEthereumChain'\n            || args.method === 'wallet_addEthereumChain'\n            || args.method === 'wallet_watchAsset'\n            || args.method === 'eth_sendTransaction') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr) {\n                    if (paramsArr.length === 1) {\n                        let firstParam = args.params[0];\n                        if (this.isRecord(firstParam)) {\n                            args.params = firstParam;\n                        }\n                    }\n                    else if (paramsArr.length > 1) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                    }\n                }\n            }\n        }\n        else if (args.method === 'eth_signTypedData_v4') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr && paramsArr.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                }\n                else if (paramsArr && paramsArr.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let messageObj = {};\n                if (paramsArr && paramsArr.length === 2) {\n                    let addressObj = args.params[0]; //address\n                    if (addressObj && typeof addressObj === 'string') { //check address\n                        let isEqual = false;\n                        this.namespace.accounts.forEach((account) => {\n                            let chainAddress = (0, utils_1.fromAccountToAddress)(account);\n                            if (chainAddress.toLowerCase() === addressObj.toLowerCase()) {\n                                isEqual = true;\n                            }\n                        });\n                        (0, core_1.logDebug)(\"eip155 adaptArray eth_signTypedData_v4 >>>isEqual: \", isEqual);\n                        if (!isEqual) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error, not equal,  method: '${args.method}' `);\n                        }\n                        if (this.isRecord(args.params[1])) {\n                            messageObj = args.params[1];\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error , not string,  method: '${args.method}' `);\n                    }\n                }\n                else if (paramsArr && paramsArr.length === 1) {\n                    if (this.isRecord(args.params[0])) {\n                        messageObj = args.params[0];\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                    }\n                }\n                try {\n                    let messages = JSON.stringify(messageObj);\n                    args.params = {\n                        typedDataJson: messages\n                    };\n                }\n                catch (err) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params call JSON.stringify() failed,  method: '${args.method}' `);\n                }\n            }\n        }\n        else if (args.method === 'personal_sign') {\n            if (this.isArray(args.params)) {\n                if (args.params && args.params.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params error,  method: '${args.method}' `);\n                }\n                else if (args.params && args.params.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let firstObj = args.params[0];\n                let secondObj = args.params[1];\n                if (secondObj && typeof secondObj === 'string') { //check address\n                    let isEqual = false;\n                    this.namespace.accounts.forEach((account) => {\n                        let chainAddress = (0, utils_1.fromAccountToAddress)(account);\n                        if (chainAddress.toLowerCase() === secondObj.toLowerCase()) {\n                            isEqual = true;\n                        }\n                    });\n                    (0, core_1.logDebug)(\"eip155 adaptArray personal_sign >>>isEqual: \", isEqual);\n                    if (!isEqual) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error,  method: '${args.method}' `);\n                    }\n                }\n                if (firstObj && typeof firstObj === 'string') {\n                    args.params = {\n                        message: firstObj\n                    };\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is error,  method: '${args.method}' `);\n                }\n            }\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"eth_requestAccounts\":\n            case \"eth_accounts\":\n            case \"eth_chainId\":\n                return false;\n            case \"eth_sendTransaction\":\n            case \"eth_signTransaction\":\n            case \"eth_sign\":\n            case \"personal_sign\":\n            case \"eth_signTypedData\":\n            case \"wallet_addEthereumChain\":\n            case \"wallet_watchAsset\":\n            case \"eth_signTypedData_v4\":\n                return true;\n            case \"wallet_switchEthereumChain\": {\n                this.adaptArray(args);\n                this.updateRequestParams(args);\n                const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n                return !this.isChainApproved(parsedChainId);\n            }\n            default:\n                return false;\n        }\n        return false;\n    }\n    configAddressAdaptInjectWallet(args) {\n        this.namespace.accounts.forEach((account) => {\n            if (account.includes(args.chainId)) {\n                args.address = (0, utils_1.fromAccountToAddress)(account);\n            }\n        });\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.adaptArray(args);\n            (0, core_1.logDebug)(\"eip155 request --args--string>\", JSON.stringify(args));\n            this.updateRequestParams(args);\n            (0, core_1.logDebug)(\"eip155 request --params--string>\", JSON.stringify(args));\n            this.configAddressAdaptInjectWallet(args);\n            switch (args.method) {\n                case \"eth_requestAccounts\":\n                    return this.getAccounts();\n                case \"eth_accounts\":\n                    return this.getAccounts();\n                case \"eth_chainId\":\n                    return parseInt(this.getDefaultChain());\n                case \"wallet_switchEthereumChain\": {\n                    return (yield this.handleSwitchChain(args));\n                }\n                case \"wallet_addEthereumChain\":\n                    return this.addEthereumChain(args);\n                default:\n                    break;\n            }\n            if (this.namespace.methods.includes(args.method)) {\n                // personal_sign\n                // eth_signTypedData_v4\n                // eth_sendTransaction\n                // wallet_watchAsset\n                try {\n                    const response = yield this.client.request(args);\n                    (0, core_1.logDebug)(\"eip155 request --response----string>\", JSON.stringify(response));\n                    if (this.isRecord(response)) {\n                        if ('result' in response) {\n                            let result = response.result;\n                            if (result && typeof result === 'string' && (result === \"true\" || result === \"false\")) {\n                                (0, core_1.logDebug)(\"eip155 request --wallet_watchAsset>>>>\", result === \"true\");\n                                return (result === \"true\");\n                            }\n                            return response.result;\n                        }\n                    }\n                    return response;\n                }\n                catch (e) {\n                    (0, core_1.logDebug)(`eip155 request --response --error--string> e instanceof OKXConnectError ${e instanceof core_1.OKXConnectError}`, JSON.stringify(e));\n                    throw e;\n                }\n            }\n            else {\n                (0, core_1.logDebug)('[RPC] request begin');\n                return yield this.getHttpProvider().request(args);\n            }\n        });\n    }\n    addEthereumChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let resultData = (yield this.client.request(args));\n            try {\n                if ('result' in resultData) {\n                    let successData = resultData;\n                    let account = resultData.result;\n                    if (account) {\n                        const nameSpace = account.split(\":\")[0];\n                        const chainId = account.split(\":\")[1];\n                        const chain = nameSpace + ':' + chainId;\n                        let newNameSpace = this.namespace;\n                        this.namespace.accounts.push(account);\n                        this.namespace.chains.push(chain);\n                        if (this.isRecord(args.params)) {\n                            if (\"rpcUrls\" in args.params) {\n                                let rpcUrls = args.params.rpcUrls;\n                                let rpcUrl = rpcUrls ? rpcUrls[0] : undefined;\n                                if (rpcUrl) {\n                                    if (this.namespace.rpcMap) {\n                                        this.namespace.rpcMap[chainId] = rpcUrl;\n                                    }\n                                    else {\n                                        this.namespace.rpcMap = {\n                                            [chainId]: rpcUrl\n                                        };\n                                    }\n                                    this.setHttpProvider(chainId, rpcUrl);\n                                }\n                            }\n                        }\n                        this.events.emit(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, {\n                            eip155: this.namespace\n                        });\n                    }\n                }\n                else {\n                    new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request error`);\n                }\n            }\n            catch (error) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request  error`);\n            }\n            return null;\n        });\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        this.chainId = parseInt(chainId);\n        // set rpc\n        if (!this.httpProviders[chainId]) {\n            const rpc = rpcUrl || (0, utils_1.getRpcUrl)(`${this.name}:${chainId}`, this.namespace);\n            if (!rpc) {\n                // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n                (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            }\n            else {\n                this.setHttpProvider(chainId, rpc);\n            }\n        }\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId.toString();\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // ---------- Private ----------------------------------------------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"eip155 getAccounts \", accounts, this.chainId);\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => {\n                return (0, utils_1.fromAccountToAddress)(account);\n            })),\n        ];\n    }\n    getHexChainIdFromRequest(args) {\n        let params = args.params;\n        let hexChainId = \"0x0\";\n        if (params && \"chainId\" in params) {\n            hexChainId = params.chainId;\n        }\n        hexChainId = hexChainId.startsWith(\"0x\") ? hexChainId : `0x${hexChainId}`;\n        (0, core_1.logDebug)(\"handleSwitchChain -->args \", args);\n        (0, core_1.logDebug)(\"handleSwitchChain -->hexChainId \", hexChainId);\n        const parsedChainId = parseInt(hexChainId, 16);\n        (0, core_1.logDebug)(\"handleSwitchChain -->parsedChainId \", parsedChainId);\n        return { parsedChainId, hexChainId };\n    }\n    handleSwitchChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n            if (this.isChainApproved(parsedChainId)) {\n                this.setDefaultChain(`${parsedChainId}`);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, `the method ${args.method} request  error`);\n            }\n        });\n    }\n    isChainApproved(chainId) {\n        return this.namespace.chains.includes(`${this.name}:${chainId}`);\n    }\n    // rpc\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            //   throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            (0, core_1.logDebug)('get parsed chain and rpc:', parsedChainId, parsedRpc);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        (0, core_1.logDebug)('get http providermap:', http);\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n}\nexports.Eip155Provider = Eip155Provider;\nexports.default = Eip155Provider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcConnection = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\n// Source: https://nodejs.org/api/events.html#emittersetmaxlistenersn\nconst EVENT_EMITTER_MAX_LISTENERS_DEFAULT = 10;\nclass JsonRpcConnection {\n    constructor(url, disableProviderPing = false) {\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n        this.events = new eventemitter3_1.EventEmitter();\n        this.isAvailable = false;\n        this.registering = false;\n        if (!(0, core_2.isHttpUrl)(url)) {\n            throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n        }\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n    }\n    get connected() {\n        return this.isAvailable;\n    }\n    get connecting() {\n        return this.registering;\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            yield this.register(url);\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                throw new Error(\"Connection already closed\");\n            }\n            this.onClose();\n        });\n    }\n    send(payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                yield this.register();\n            }\n            try {\n                const body = (0, core_1.safeJsonStringify)(payload);\n                const res = yield (0, cross_fetch_1.default)(this.url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                const data = yield res.json();\n                this.onPayload({ data });\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    register() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (!(0, core_2.isHttpUrl)(url)) {\n                throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n            }\n            if (this.registering) {\n                return new Promise((resolve, reject) => {\n                    this.events.once(\"register_error\", (error) => {\n                        reject(error);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.isAvailable === \"undefined\") {\n                            return reject(new Error(\"HTTP connection is missing or invalid\"));\n                        }\n                        resolve();\n                    });\n                });\n            }\n            this.url = url;\n            this.registering = true;\n            try {\n                if (!this.disableProviderPing) {\n                    const body = (0, core_1.safeJsonStringify)({ id: 1, jsonrpc: \"2.0\", method: \"test\", params: [] });\n                    yield (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                }\n                this.onOpen();\n            }\n            catch (e) {\n                const error = this.parseError(e);\n                this.events.emit(\"register_error\", error);\n                this.onClose();\n                throw error;\n            }\n        });\n    }\n    onOpen() {\n        this.isAvailable = true;\n        this.registering = false;\n        this.events.emit(\"open\");\n    }\n    onClose() {\n        this.isAvailable = false;\n        this.registering = false;\n        this.events.emit(\"close\");\n    }\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        const payload = typeof e.data === \"string\" ? (0, core_1.safeJsonParse)(e.data) : e.data;\n        this.events.emit(\"payload\", payload);\n    }\n    onError(id, e) {\n        const error = this.parseError(e);\n        const message = error.message || error.toString();\n        const payload = (0, core_2.formatJsonRpcError)(id, message);\n        this.events.emit(\"payload\", payload);\n    }\n    parseError(e, url = this.url) {\n        return (0, core_2.parseConnectionError)(e, url, \"HTTP\");\n    }\n}\nexports.JsonRpcConnection = JsonRpcConnection;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcProvider = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst types_1 = require(\"../../types\");\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nclass JsonRpcProvider extends types_1.IJSONRpcProvider {\n    constructor(connection) {\n        super(connection);\n        this.events = new eventemitter3_1.EventEmitter();\n        this.connected = false;\n        this.connecting = false;\n        this.hasRegisteredEventListeners = false;\n        this.connection = this.setConnection(connection);\n        if (this.connection.connected) {\n            this.registerEventListeners();\n        }\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            yield this.open(connection);\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.close();\n        });\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    request(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.requestStrict((0, core_1.formatJsonRpcRequest)(request.method, request.params || [], (0, core_1.getBigIntRpcId)().toString()), // casting to any is required in order to use BigInt as rpcId\n            context);\n        });\n    }\n    // ---------- Protected ----------------------------------------------- //\n    requestStrict(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.connection.connected) {\n                    try {\n                        yield this.open();\n                    }\n                    catch (e) {\n                        reject(e);\n                    }\n                }\n                this.events.on(`${request.id}`, (response) => {\n                    if ((0, core_1.isJsonRpcError)(response)) {\n                        reject(response.error);\n                    }\n                    else {\n                        resolve(response.result);\n                    }\n                });\n                try {\n                    (0, core_2.logDebug)('[RPC] >>> send request', request, context);\n                    yield this.connection.send(request, context);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }));\n        });\n    }\n    setConnection(connection = this.connection) {\n        return connection;\n    }\n    onPayload(payload) {\n        this.events.emit(\"payload\", payload);\n        if ((0, core_1.isJsonRpcResponse)(payload)) {\n            this.events.emit(`${payload.id}`, payload);\n        }\n        else {\n            this.events.emit(\"message\", {\n                type: payload.method,\n                data: payload.params,\n            });\n        }\n    }\n    onClose(event) {\n        // Code 3000 indicates an abnormal closure signalled by the relay -> emit an error in this case.\n        if (event && event.code === 3000) {\n            this.events.emit(\"error\", new Error(`WebSocket connection closed abnormally with code: ${event.code} ${event.reason ? `(${event.reason})` : \"\"}`));\n        }\n        this.events.emit(\"disconnect\");\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            if (this.connection === connection && this.connection.connected)\n                return;\n            if (this.connection.connected)\n                this.close();\n            if (typeof connection === \"string\") {\n                yield this.connection.open(connection);\n                connection = this.connection;\n            }\n            this.connection = this.setConnection(connection);\n            yield this.connection.open();\n            this.registerEventListeners();\n            this.events.emit(\"connect\");\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.connection.close();\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    registerEventListeners() {\n        if (this.hasRegisteredEventListeners)\n            return;\n        this.connection.on(\"payload\", (payload) => this.onPayload(payload));\n        this.connection.on(\"close\", (event) => this.onClose(event));\n        this.connection.on(\"error\", (error) => this.events.emit(\"error\", error));\n        this.connection.on(\"register_error\", (_error) => this.onClose());\n        this.hasRegisteredEventListeners = true;\n    }\n}\nexports.JsonRpcProvider = JsonRpcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolanaProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SolanaProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"solana\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"solana request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"solana provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    //   {\n    //     \"chains\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\" ],\n    //     \"accounts\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp:F7wnJc5wiBGy1k87jv6gyNwE3jMEWd18oTQiYsF1xVG7\"],\n    //     \"methods\": [\n    //         \"solana_signTransaction\",\n    //         \"solana_signMessage\"\n    //     ],\n    //     \"defaultChain\": \"5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\"\n    // }\n    // TODO:确认上面的defaultChain是否正确（没有solana前缀）\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"solana\"))) {\n                chainId = `solana:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.SolanaProvider = SolanaProvider;\nexports.default = SolanaProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass StarknetProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"starknet\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"starknet request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"starknet provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Wallet doesn't support\" + args.method);\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = StarknetProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuiProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SuiProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeySui;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"sui request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"sui provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"sui\"))) {\n                chainId = `sui:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"sui_signMessage\":\n            case \"sui_signPersonalMessage\":\n            case \"sui_signTransactionBlock\":\n            case \"sui_signAndExecuteTransactionBlock\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.SuiProvider = SuiProvider;\nexports.default = SuiProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TONProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTON;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            (0, core_1.logDebug)(\"TONProvider request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"TONProvider request provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                if (!args.params) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params is nil\");\n                }\n                if (this.isRecord(args.params)) {\n                    const _e = args.params, { validUntil } = _e, newParams = __rest(_e, [\"validUntil\"]);\n                    let fromAddress = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n                    if ('from' in newParams) {\n                        fromAddress = newParams.from || ((_d = (_c = this.namespace.payload) === null || _c === void 0 ? void 0 : _c.ton_addr) === null || _d === void 0 ? void 0 : _d.address);\n                    }\n                    args.params['from'] = fromAddress;\n                    args.params['network'] = this.getDefaultChain();\n                    args.params['valid_until'] = validUntil;\n                    let response = yield this.client.request(args);\n                    if (this.isRecord(response) && 'result' in response) {\n                        const result = {\n                            boc: response.result.toString()\n                        };\n                        (0, core_1.logDebug)(\"TONProvider request provider response: \", JSON.stringify(response));\n                        (0, core_1.logDebug)(\"TONProvider request provider result: \", JSON.stringify(result));\n                        return result;\n                    }\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton_send request response is nil\");\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params type add nil\");\n                }\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        var _a, _b;\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"ton getAccounts accounts :\", accounts);\n        (0, core_1.logDebug)(\"ton getAccounts .namespace :\", JSON.stringify(this.namespace));\n        if (!accounts) {\n            return [];\n        }\n        let address = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n        (0, core_1.logDebug)(\"ton getAccounts address :\", address);\n        if (address) {\n            return [\n                address\n            ];\n        }\n        return [];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"ton_sendTransaction\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.default = TONProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TronProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTron;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"tron request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"tron provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = TronProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./providers\"), exports);\n__exportStar(require(\"./misc\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IJSONRpcProvider = exports.IJSONRpcConnection = void 0;\nclass IJSONRpcConnection {\n}\nexports.IJSONRpcConnection = IJSONRpcConnection;\nclass IJSONRpcProvider {\n    constructor(opt) {\n    }\n}\nexports.IJSONRpcProvider = IJSONRpcProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setGlobal = exports.getGlobal = void 0;\nconst globals = {};\nconst getGlobal = (key) => {\n    return globals[key];\n};\nexports.getGlobal = getGlobal;\nconst setGlobal = (key, value) => {\n    globals[key] = value;\n};\nexports.setGlobal = setGlobal;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./misc\"), exports);\n__exportStar(require(\"./globals\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRpcUrl = getRpcUrl;\nexports.getChainId = getChainId;\nexports.fromAccountToAddress = fromAccountToAddress;\nexports.convertChainIdToNumber = convertChainIdToNumber;\nexports.parseChainId = parseChainId;\nexports.mergeArrays = mergeArrays;\nexports.syncAddressAvailable = syncAddressAvailable;\nexports.syncAddressHostAvailable = syncAddressHostAvailable;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getRpcUrl(chainId, rpc, projectId) {\n    var _a;\n    const chain = parseChainId(chainId);\n    // no default\n    return (((_a = rpc.rpcMap) === null || _a === void 0 ? void 0 : _a[chain.reference]) ||\n        ``);\n}\nfunction getChainId(chain) {\n    return chain.includes(\":\") ? chain.split(\":\")[1] : chain;\n}\nfunction fromAccountToAddress(account) {\n    if (!account) {\n        return \"\";\n    }\n    try {\n        let addressArr = account.split(\":\").slice(2);\n        let address = addressArr.length > 0 ? addressArr.join(\":\") : \"\";\n        (0, core_1.logDebug)(\"fromAccountToAddress address and account:\", address, account);\n        return address;\n    }\n    catch (e) {\n        (0, core_1.logError)(\"fromAccountToAddress error:\", account);\n        return \"\";\n    }\n}\n// export function validateChainApproval(chain: string, chains: string[]): void {\n//   if (!chains.includes(chain)) {\n//     throw new Error(\n//       `Chain '${chain}' not approved. Please use one of the following: ${chains.toString()}`,\n//     );\n//   }\n// }\n// export function getChainsFromApprovedSession(accounts: string[]): string[] {\n//   return accounts.map((address) => `${address.split(\":\")[0]}:${address.split(\":\")[1]}`);\n// }\n// export function getAccountsFromSession(namespace: string, session: SessionTypes.Struct): string[] {\n//   // match namespaces e.g. eip155 with eip155:1\n//   const matchedNamespaceKeys = Object.keys(session.namespaces).filter((key) =>\n//     key.includes(namespace),\n//   );\n//   if (!matchedNamespaceKeys.length) return [];\n//   const accounts: string[] = [];\n//   matchedNamespaceKeys.forEach((key) => {\n//     const accountsForNamespace = session.namespaces[key].accounts;\n//     accounts.push(...accountsForNamespace);\n//   });\n//   return accounts;\n// }\n// export function mergeRequiredOptionalNamespaces(\n//   required: NamespaceConfig = {},\n//   optional: NamespaceConfig = {},\n// ){\n//   const requiredNamespaces = normalizeNamespaces(required);\n//   const optionalNamespaces = normalizeNamespaces(optional);\n//    return merge.merge(requiredNamespaces,optionalNamespaces)\n// }\n/**\n * Converts\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * into\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *\n */\n// export function normalizeNamespaces(namespaces: NamespaceConfig): NamespaceConfig {\n//   const normalizedNamespaces: NamespaceConfig = {};\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const rpcMap = values.rpcMap || {};\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       ...values,\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       rpcMap: { ...rpcMap, ...normalizedNamespaces[normalizedKey]?.rpcMap },\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n//\n// export function parseCaip10Account(caip10Account: string): string {\n//   return caip10Account.includes(\":\") ? caip10Account.split(\":\")[2] : caip10Account;\n// }\n/**\n * Populates the chains array for each namespace with the chains extracted from the accounts if are otherwise missing\n */\n// export function populateNamespacesChains(\n//   namespaces: SessionTypes.Namespaces,\n// ): Record<string, SessionTypes.Namespace> {\n//   const parsedNamespaces: Record<string, SessionTypes.Namespace> = {};\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const accounts = values.accounts || [];\n//     // If the key includes a CAIP separator `:` we know it's a namespace + chainId (e.g. `eip155:1`)\n//     const chains = isCaipNamespace(key)\n//       ? [key]\n//       : values.chains\n//       ? values.chains\n//       : getChainsFromApprovedSession(values.accounts);\n//     parsedNamespaces[key] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   }\n//   return parsedNamespaces;\n// }\nfunction convertChainIdToNumber(chainId) {\n    if (typeof chainId === \"number\")\n        return chainId;\n    if (chainId.includes(\"0x\")) {\n        return parseInt(chainId, 16);\n    }\n    chainId = chainId.includes(\":\") ? chainId.split(\":\")[1] : chainId;\n    return isNaN(Number(chainId)) ? chainId : Number(chainId);\n}\nconst CAIP_DELIMITER = \":\";\nfunction parseChainId(chain) {\n    const [namespace, reference] = chain.split(CAIP_DELIMITER);\n    return { namespace, reference };\n}\nfunction mergeArrays(a = [], b = []) {\n    return [...new Set([...a, ...b])];\n}\nfunction syncAddressAvailable(wallet) {\n    if (!wallet) {\n        return false;\n    }\n    if (wallet.appName !== 'OKX Wallet') {\n        return false;\n    }\n    if ((0, core_1.versionCompare)('6.97.0', wallet.appVersion) > 0) {\n        return false;\n    }\n    return syncAddressHostAvailable();\n}\nfunction syncAddressHostAvailable() {\n    try {\n        return !!(window.okxGlobal);\n    }\n    catch (e) {\n        return false;\n    }\n}\n","<template>\n  <div id=\"app\">\n    <el-container>\n      <el-header>OKX Connect</el-header>\n      <el-main>\n        <el-card class=\"wallet-info\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Wallet Info</div>\n          </template>\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Wallet Address:</strong> {{ getWalletAddress }}\n            </el-col>\n          </el-row>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Status :</strong> {{ currentStatus }}\n            </el-col>\n          </el-row>\n\n        </el-card>\n\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Connect Params</div>\n          </template>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"withUI\" @change=\"handleWithUI\">\n                Show UI\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"universalToTG\" @change=\"handleUniversalToTG\">\n                Use mini wallet\n              </el-checkbox>\n            </el-col>\n          </el-row>\n\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Modals</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"modals\" placeholder=\"Modals\" @change=\"handleModalsSelect\" multiple>\n                <el-option label=\"Before\" value=\"before\"/>\n                <el-option label=\"Success\" value=\"success\"/>\n                <el-option label=\"Error\" value=\"error\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center; justify-content: space-between;\">\n            <el-col :span=\"6\" style=\"gap: 2px\">\n              <p style=\"font-size: 11pt; margin: 0px\">Return Strategy</p>\n              <p style=\"font-size: 9pt; margin: 0px\">(Mobile only)</p>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-select\n                  v-model=\"returnStrategy\"\n                  @change=\"handleReturnStrategySelect\"\n                  placeholder=\"Return Strategy\"\n              >\n                <el-option\n                    v-for=\"strategy in returnStrategies\"\n                    :key=\"`return-strategy-select-option-${strategy}`\"\n                    :label=\"strategy\"\n                    :value=\"strategy\"\n                />\n              </el-select>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-input\n                  v-if=\"returnStrategy === 'deeplink'\"\n                  v-model=\"deeplink\"\n                  @change=\"handleReturnStrategyDeeplink\"\n                  placeholder=\"Deeplink\"\n                  :disabled=\"returnStrategy !== 'deeplink'\"\n                  style=\"margin: 0px\"\n              />\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Lang</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"language\" @change=\"handleLanguageSelect\" placeholder=\"Language\">\n                <el-option v-for=\"locale in locales\" :key=\"`language-select-option-${locale}`\" :label=\"locale\"\n                           :value=\"locale\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Theme</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"theme\" @change=\"handleThemeSelect\" placeholder=\"Theme\">\n                <el-option label=\"LIGHT\" :value=\"THEME.LIGHT\"/>\n                <el-option label=\"DARK\" :value=\"THEME.DARK\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <!--          <el-row>-->\n          <!--          <el-row style=\"align-items: center\">-->\n          <!--            <el-col :span=\"4\">-->\n          <!--              <p style=\"font-size: 11pt\">Connect</p>-->\n          <!--              <p style=\"font-size: 11pt\">Methods</p>-->\n          <!--            </el-col>-->\n          <!--            <el-col :span=\"20\">-->\n          <!--              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" placeholder=\"Methods\">-->\n          <!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n          <!--                           :value=\"methods\" />-->\n\n          <!--              </el-select>-->\n          <!--            </el-col>-->\n          <!--          </el-row>-->\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Connect</p>\n              <p style=\"font-size: 11pt\">Methods</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" multiple placeholder=\"methods\">\n                <el-option\n                    v-for=\"item in connectMethods\"\n                    :key=\"item\"\n                    :label=\"item\"\n                    :value=\"item\">\n                </el-option>\n              </el-select>\n\n\n              <!--              <el-select v-model=\"selectedMethod\" placeholder=\"Methods\" @change=\"handleConnectMethodsSelect\" multiple>-->\n              <!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n              <!--                           :value=\"methods\" />-->\n              <!--              </el-select>-->\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">ton_proof</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-input v-model=\"tonProofValue\" placeholder=\"input ton_proof\"></el-input>\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" align=\"middle\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Required Chains</div>\n            </el-col>\n            <el-col\n                :span=\"6\"\n                v-for=\"item in Object.keys(availableChains)\"\n                :key=\"item\"\n            >\n              <el-checkbox\n                  v-model=\"availableChains[item].checked\"\n                  :disabled=\"!areChainsInit\"\n              >{{ availableChains[item].name }}\n              </el-checkbox\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" align=\"middle\" style=\"margin-top: 20px\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Optional Chains</div>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:43114')\" @change=\"() => handleOptionChange('eip155:43114')\">\n                AVAX\n              </el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:10')\" @change=\"() => handleOptionChange('eip155:10')\">OP</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:8453')\" @change=\"() => handleOptionChange('eip155:8453')\">\n                BASE\n              </el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:99781165')\"\n                           @change=\"() => handleOptionChange('eip155:99781165')\">Nonexist\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp')\"\n                           @change=\"() => handleOptionChange('solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp')\">Solana\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('ton:-239')\" @change=\"() => handleOptionChange('ton:-239')\">Ton\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('btc:mainnet')\"\n                           @change=\"() => handleOptionChange('btc:mainnet')\">btc\n              </el-checkbox>\n            </el-col>\n\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"initBtnClicked\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectInitStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"testTonConnect\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectTonStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"connectBtnClicked\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectStatusStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"syncAllAddressClick\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ syncAllAddressStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"danger\"\n                  @click=\"disconnectAction\"\n                  icon=\"el-icon-switch-button\"\n                  :disabled=\"!areChainsInit || walletAddress.length == 0\"\n              >{{ disconnectStatusStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <teleport to=\"body\">\n            <div v-if=\"showModal\" class=\"modal-overlay\" @click=\"closeModal\">\n              <div class=\"modal-content\" @click.stop>\n                <button class=\"close-button\" @click=\"closeModal\">\n                  &times;\n                </button>\n                <h2>Scan to connect</h2>\n                <qrcode-vue :value=\"qrValue\" :size=\"350\" level=\"L\"/>\n              </div>\n            </div>\n          </teleport>\n        </el-card>\n\n        <!-- 发送交易 -->\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Transactions</div>\n          </template>\n\n          <el-tabs v-model=\"activeTab\" type=\"border-card\" @tab-click=\"clickActiveTab\">\n            <!-- ETH -->\n            <el-tab-pane label=\"ETH\" name=\"eip155:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to Fuse)\n                  </el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send ETH)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve TONCoin)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(eth mint\n                    nft)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add SPX6900)\n                  </el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"oversized_personal_sign()\">oversized_personal_sign(about 70k, split limit 63k)\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TON\" name=\"ton:-239\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_getAccount\">ton_getAccount</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_sendTransaction\">ton_sendTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- solana -->\n            <el-tab-pane label=\"Sol\" name=\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- soon -->\n            <el-tab-pane label=\"soon:mainnet\" name=\"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"soon:testnet\" name=\"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"eclipse:mainnet\" name=\"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- Sui-->\n            <el-tab-pane label=\"Sui\" name=\"sui:mainnet\">\n              <SuiPanel @generateTransactionParams=\"sui_generateTransactionParams\"/>\n            </el-tab-pane>\n            <!-- BTC -->\n            <el-tab-pane label=\"BTC\" name=\"btc:mainnet\">\n              <BTCPanel @generateTransactionParams=\"btc_generateTransactionParams\"/>\n            </el-tab-pane>\n\n            <!-- Fractal BTC -->\n            <el-tab-pane label=\"Fractal\" name=\"fractal:mainnet\">\n              <FractalPanel @generateTransactionParams=\"fractal_generateTransactionParams\"/>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Tron\" name=\"tron:mainnet\">\n              <TronTransactionPanel\n                  @generateTransactionParams=\"tron_generateTransactionParams\"\n                  @generateTransactionResult=\"tron_getTransactionResult\"/>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Aptos\" name=\"aptos:mainnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signTransaction\">aptos_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"aptos_signAndSubmitTransaction\">aptos_signAndSubmitTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Cosmos\" name=\"cosmos:cosmoshub-4\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <!-- Polygon-->\n            <el-tab-pane label=\"Polygon\" name=\"eip155:137\">\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"Polygon_RPCRequest()\">Polygon_RPCRequest(Polygon)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send POL)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve sushi)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(polygon mint\n                    nft)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add LGNS)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\"\n                  >eth_sendTransaction(转账FUSE)\n                  </el-button\n                  >\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\"\n                  >eth_sendTransaction(授权USDC)\n                  </el-button\n                  >\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- BSC-->\n            <el-tab-pane label=\"BNB\" name=\"eip155:56\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to BNB)\n                  </el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send BNB)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve POSI)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add FET)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Fuse\" name=\"eip155:122\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_swap\">eth_sendTransaction(Swap)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Sonic testnet\" name=\"svm:70000062\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Movement\" name=\"movement:testnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"move_signTransaction\">move_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"move_signAndSubmitTransaction\">move_signAndSubmitTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Movement mainnet\" name=\"movement:mainnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"move_signTransaction\">move_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"move_signAndSubmitTransaction\">move_signAndSubmitTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n\n            <el-tab-pane label=\"osmos\" name=\"cosmos:osmosis-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"SEI\" name=\"cosmos:pacific-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Starknet\" name=\"starknet:mainnet\">\n              <StarknetPanel ref=\"starknetPanelRef\" @generateTransactionParams=\"starknet_generateTransactionParams\"\n                             @generateTransactionResult=\"starknet_getTransactionResult\"/>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TEST \" name=\"test:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"testBase64UrlSafe\">testBase64UrlSafe</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n          </el-tabs>\n\n          <el-col :xs=\"24\" :sm=\"24\" style=\"margin: 16px 0px;\">\n            <el-row style=\"align-items: center; justify-content: space-between; margin-bottom: 8px;\">\n              <el-col :span=\"4\">\n                <p style=\"font-size: 11pt; margin: 0px; text-align: start\">Redirect param (only for ETH, Polygon, BNB,\n                  Fuse)</p>\n              </el-col>\n              <el-col :span=\"9\">\n                <el-select\n                    v-model=\"redirect\"\n                    @change=\"handleRedirectSelect\"\n                    placeholder=\"Return Strategy\"\n                    :disabled=\"!canChainAddRedirectParam()\"\n                >\n                  <el-option\n                      v-for=\"strategy in returnStrategies\"\n                      :key=\"`return-strategy-select-option-${strategy}`\"\n                      :label=\"strategy\"\n                      :value=\"strategy\"\n                  />\n                </el-select>\n              </el-col>\n              <el-col :span=\"10\">\n                <el-input\n                    v-if=\"redirect === 'deeplink'\"\n                    v-model=\"redirectDeeplink\"\n                    @change=\"handleRedirectDeeplink\"\n                    placeholder=\"Deeplink\"\n                    :disabled=\"!canChainAddRedirectParam() || redirect !== 'deeplink'\"\n                    style=\"margin: 0px\"\n                />\n              </el-col>\n            </el-row>\n            <el-button\n                type=\"primary\" @click=\"addRedirectParam()\"\n                :disabled=\"!canChainAddRedirectParam() || !testTransaction\"\n            >\n              Add redirect param to data\n            </el-button>\n          </el-col>\n\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Data:</div>\n            <el-input v-model=\"testTransaction\" type=\"textarea\" :rows=\"5\" placeholder=\"sendTransactions\"></el-input>\n          </el-col>\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Result :</div>\n            <el-input v-model=\"testboc\" type=\"textarea\" :rows=\"5\" placeholder=\"boc\"></el-input>\n          </el-col>\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button type=\"primary\" :disabled=\"sendBtnDisabled\" @click=\"sendTransaction()\">{{\n                  testTransactionStr\n                }}\n              </el-button>\n            </el-col>\n          </el-row>\n        </el-card>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<style scoped>\n/* 重置全局边距和内边距 */\nbody,\nhtml {\n  margin: 0;\n  padding: 0;\n  height: 100%;\n}\n\n/* 确保 app 容器占满整个视口 */\n#app {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin: 0 auto;\n  /* 居中 */\n  max-width: 600px;\n  /* 设置最大宽度 */\n  padding: 0 20px;\n  /* 添加一些左右内边距 */\n}\n\n/* 调整 el-container 样式 */\n.el-container {\n  min-height: 100vh;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n}\n\n/* 调整 el-header 样式 */\n.el-header {\n  background-color: #333333;\n  color: white;\n  height: 50px;\n  line-height: 50px;\n  font-size: 18px;\n  font-weight: bold;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n}\n\n/* 调整 el-main 样式 */\n.el-main {\n  padding: 70px 0 20px;\n  /* 增加顶部内边距以避免被固定header遮挡 */\n  flex-grow: 1;\n}\n\n.el-card {\n  margin-bottom: 20px;\n}\n\n.info-row {\n  margin-bottom: 10px;\n}\n\n.input-label {\n  margin-bottom: 5px;\n  text-align: left;\n}\n\n.el-input {\n  margin-bottom: 10px;\n}\n\n/* 通用按钮样式 */\n.wallet-actions .el-button,\n.transaction .el-button,\n.clear-cache .el-button {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 40px;\n}\n\n.wallet-actions .el-button span,\n.transaction .el-button span,\n.clear-cache .el-button span {\n  margin: 0 auto;\n}\n\n/* 按钮行间距 */\n.wallet-actions .button-row,\n.transaction .button-row {\n  margin-bottom: 8px;\n}\n\n.wallet-actions .button-row:last-child,\n.transaction .button-row:last-child {\n  margin-bottom: 0;\n}\n\n/* 调整图标和文字的对齐 */\n.wallet-actions .el-button [class^=\"el-icon-\"],\n.transaction .el-button [class^=\"el-icon-\"],\n.clear-cache .el-button [class^=\"el-icon-\"] {\n  margin-right: 5px;\n  vertical-align: middle;\n}\n\n/* 新增：调整发送交易按钮与输入框的间距 */\n.transaction .el-row:not(:last-child) {\n  margin-bottom: 10px;\n}\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  text-align: center;\n  position: relative;\n  max-width: 90%;\n  width: 400px;\n}\n\n.close-button {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  font-size: 24px;\n  border: none;\n  background: none;\n  cursor: pointer;\n}\n\n/* 响应式调整 */\n@media (max-width: 600px) {\n  #app {\n    padding: 0 10px;\n  }\n\n  .el-main {\n    padding: 60px 0 10px;\n  }\n}\n</style>\n<script>\nimport {OKX_CONNECT_ERROR_CODES, safeJsonStringify, getAppWalletDeepLink, getUniversalLink} from \"@okxconnect/core\"\nimport {\n  OKXBtcProvider,\n  OKXUniversalProvider,\n  OKXCosmosProvider,\n  OKXTonProvider,\n  OKXTronProvider,\n  OKXStarknetProvider\n} from \"@okxconnect/universal-provider\"\nimport {OKXSolanaProvider} from \"@okxconnect/solana-provider\";\nimport {\n  Connection,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n  TransactionMessage,\n  VersionedTransaction\n} from '@solana/web3.js';\nimport {OKXSuiProvider as SuiAdapter} from \"@okxconnect/sui-provider\"\nimport QrcodeVue from 'qrcode.vue'\n\nimport {OKXAptosProvider} from \"@okxconnect/aptos-provider\";\nimport {Aptos, AptosConfig, Network} from \"@aptos-labs/ts-sdk\";\n\nimport BTCPanel from \"./components/BtcTransactionPanel.vue\";\nimport FractalPanel from \"./components/FractalTransactionPanel.vue\"\nimport SuiPanel from \"./components/SuiTransactionPanel.vue\";\nimport StarknetPanel from \"./components/StarknetTransactionPanel.vue\";\n\nimport {OKXTonConnectUI, OKXUniversalConnectUI, THEME} from \"@okxconnect/ui\";\nimport {ethers} from 'ethers';\nimport VConsole from 'vconsole';\nimport nacl from \"tweetnacl\";\n\nconst {verifyADR36Amino} = require('@keplr-wallet/cosmos')\nconst {fromBech32} = require('@cosmjs/encoding')\nimport {verifyPersonalMessageSignature} from '@mysten/sui/verify';\nimport {useShortLink} from \"@okxconnect/core\";\nimport TronTransactionPanel from \"@/components/TronTransactionPanel.vue\";\nimport {TronWeb} from \"tronweb\";\nimport {RpcProvider as StarknetRpcProvider, Account as StarknetAccount} from \"starknet\";\nimport {ref, toRaw} from \"vue\";\n\nnew VConsole();\n\nconst allChains = {\n  1: {name: \"Eth\", checked: false},\n  56: {name: \"BNB\", checked: false},\n  137: {name: \"Polygon\", checked: false},\n  122: {name: \"Fuse\", checked: false},\n  \"ton:-239\": {name: \"TON\", checked: false},\n  \"btc:mainnet\": {name: \"BTC\", checked: false},\n  \"sui:mainnet\": {name: \"Sui\", checked: false},\n  \"aptos:mainnet\": {name: \"Aptos\", checked: false},\n  \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\": {\n    name: \"Solana\",\n    checked: false,\n  },\n  \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\": {\n    name: \"Sol testnet\",\n    checked: false,\n  },\n  \"svm:70000062\": {\n    name: \"Sonic testnet\",\n    checked: false,\n  },\n  \"movement:mainnet\": {name: \"Movement mainnet\", checked: false},\n  \"movement:testnet\": {name: \"Movement\", checked: false},\n  \"fractal:mainnet\": {name: \"Fractal\", checked: false},\n  \"cosmos:osmosis-1\": {name: \"Osmos\", checked: false},\n  \"cosmos:cosmoshub-4\": {name: \"Cosmos\", checked: false},\n  \"cosmos:pacific-1\": {name: \"SEI\", checked: false},\n  \"cosmos:abvdefg\": {name: \"cosmos:abvdefg\", checked: false},\n  \"tron:mainnet\": {name: \"tron\", checked: false},\n  997865: {name: \"Non Exist chain\", checked: false},\n  2020: {name: \"Ronin\", checked: false},\n  1666600000: {name: \"Harmony\", checked: false},\n  \"starknet:mainnet\": {name: \"starknet\", checked: false},\n  \"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\":{name:\"soon:mainnet\", checked: false},\n  \"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\":{name:\"soon:testnet\", checked: false},\n  \"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\":{name:\"eclipse:mainnet\", checked: false},\n};\n\nconst chainsThatCanAddRedirectParam = [\n  \"eip\"\n]\n\nvar optionChains = new Set([]);\nvar selectedModals = [\"before\", \"success\", \"error\"];\nvar selectedReturnStrategy = \"none\";\nvar selectedDeepLink = \"tg://resolve\";\nvar selectedLanguage = \"en_US\";\nvar selectedTheme = THEME.LIGHT;\n\n// import QrcodeVue from 'qrcode.vue'\nexport default {\n  name: \"App\",\n  components: {\n    TronTransactionPanel,\n    QrcodeVue,\n    BTCPanel,\n    FractalPanel,\n    SuiPanel,\n    StarknetPanel\n  },\n\n  setup() {\n    const sendBtnDisabled = ref(false)\n\n    return {\n      sendBtnDisabled\n    }\n  },\n  data: () => {\n    return {\n      activeTab: \"eip155:1\",\n      testTopic: \"\",\n      testPublicKey: \"\",\n      testProofPayload: \"\",\n      tonProofValue: \"\",\n      pendingDeepLink: \"-\",\n      logList: [],\n      connectReady: false,\n      connectStatusStr: \"Connect\",\n      syncAllAddressStr: \"syncAllAddress\",\n      connectInitStr: \"init test\",\n      connectTonStr: \"tonuiconnect test\",\n      disconnectStatusStr: \"Disconnect\",\n      localPubKey: \"\",\n      localSecKey: \"\",\n      testTransaction: \"\",\n      selectedChain: \"eip155:1\",\n      testTransactionStr: \"Send\",\n      walletAddress: \"\",\n      testboc: \"\",\n      ProofPayloadVerify: \"\",\n      showModal: false,\n      showVerifyRow: false,\n      qrValue: \"https://www.okx.com/download\",\n      currentStatus: \"\",\n      areChainsInit: false,\n      availableChains: allChains,\n      isOptionalChecked: (chainId) => {\n        return optionChains.has(chainId);\n      },\n      withUI: localStorage.getItem(\"autoRefresh\") != \"false\",\n      universalToTG: localStorage.getItem(\"universalToTG\") != \"false\",\n      modals: selectedModals,\n      returnStrategies: [\"none\", \"back\", \"deeplink\"],\n      returnStrategy: selectedReturnStrategy,\n      deeplink: selectedDeepLink,\n      locales: [\n        \"en_US\",\n        \"ru_RU\",\n        \"zh_CN\",\n        \"zh\",\n        \"ar_AE\",\n        \"cs_CZ\",\n        \"de_DE\",\n        \"es_ES\",\n        \"es_LAT\",\n        \"fr_FR\",\n        \"id_ID\",\n        \"it_IT\",\n        \"nl_NL\",\n        \"pl_PL\",\n        \"pt_BR\",\n        \"pt_PT\",\n        \"ro_RO\",\n        \"tr_TR\",\n        \"uk_UA\",\n        \"vi_VN\",\n        \"zh_TW\"\n      ],\n      selectedMethod: [],\n      selectedMethodData: [],\n      connectMethods: [\n        \"wallet_addEthereumChain(ETH)\",\n        \"personal_sign(ETH)\",\n        \"solana_signMessage(Sol mainnet)\",\n        \"sui_signMessage(Sui mainnet)\",\n        \"sui_signPersonalMessage(Sui mainnet)\",\n        \"btc_signMessage(BTC)\",\n        \"aptos_signMessage(aptos mainnet)\",\n        \"cosmos_signArbitrary(cosmoshub)\",\n        \"test_noSupport_eth(ETH)\",\n        \"tron_signMessage\",\n        \"tron_signMessageV2\",\n        \"starknet_signMessage\",\n        \"sync_all_addresses\"\n      ],\n\n      language: selectedLanguage,\n      theme: selectedTheme,\n      THEME: THEME,\n      redirect: selectedReturnStrategy,\n      redirectDeeplink: selectedDeepLink,\n      handleWithUI: (isChecked) => {\n        localStorage.setItem(\"autoRefresh\", `${isChecked}`);\n        location.reload();\n      },\n      handleUniversalToTG: (isChecked) => {\n        localStorage.setItem(\"universalToTG\", `${isChecked}`);\n      },\n      handleOptionChange: (chainId) => {\n        console.log(\"handleOptionChange ->chainId:\",chainId)\n        if (optionChains.has(chainId)) {\n          optionChains.delete(chainId);\n        } else {\n          optionChains.add(chainId);\n        }\n      },\n      starknetPanelTypedData: ''\n    };\n  },\n  computed: {\n    getWalletAddress: function () {\n      return this.walletAddress;\n    },\n  },\n  methods: {\n    isChecked(chainId) {\n      return this.selectedChains.has(chainId);\n    },\n\n    initChains(newChains) {\n      if (newChains.length > 0) {\n        const updatedChains = Object.assign({}, this.availableChains);\n        for (const chainId of newChains) {\n          if (updatedChains[chainId]) {\n            updatedChains[chainId].checked = !updatedChains[chainId].checked;\n          }\n        }\n        this.availableChains = updatedChains;\n      }\n\n      this.areChainsInit = true;\n    },\n\n    async clickActiveTab(tab) {\n      const tabName = tab.props ? tab.props.name : tab.name;\n      this.selectedChain = tabName;\n      console.log(`已切换到链 :`, tabName);\n\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (tabName == \"starknet:mainnet\") {\n        this.sendBtnDisabled = true\n      } else {\n        this.sendBtnDisabled = false\n      }\n\n      window.provider.setDefaultChain(this.selectedChain);\n    },\n\n    async testTonConnect(){\n      await window.testTon.openModal().catch(\n          (error) => console.error(\"发生了错误：\", error));\n    },\n\n    async initBtnClicked() {\n      console.log(\"initBtnClickedddinitBtnClickedddinitBtnClickedddinitBtnClickedddinitBtnClickeddd\")\n      window.okxLogDebug = true\n      var initCall;\n      if (!this.withUI) {\n        initCall = OKXUniversalProvider.init({\n          dappMetaData: {\n            name: \"univer test dapp\",\n            icon: \"https://avatars.githubusercontent.com/u/37784886\",\n          },\n        });\n      } else {\n\n        window.testTon = new OKXTonConnectUI({\n          dappMetaData: {\n            name: \"OKX WalletConnect UI Demo\",\n            icon: \"https://avatars.githubusercontent.com/u/37784886\",\n          },\n          actionsConfiguration: {\n            returnStrategy: 'tg://resolve',\n            tmaReturnUrl:'back',\n            modals: \"all\",\n          },\n          uiPreferences: {\n            theme: THEME.LIGHT\n          },\n          language: 'en_US',\n        });\n\n        initCall = OKXUniversalConnectUI.init({\n          dappMetaData: {\n            icon: \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\",\n            name: \"OKX WalletConnect UI Demo\",\n            manifestUrl:\"https://app.ston.fi/tonconnect-manifest.json\"\n          },\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: 'all',\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme\n          },\n        });\n\n\n      }\n\n      initCall.then((provider) => {\n        window.provider = provider;\n        window.tonProvider = new OKXTonProvider(window.provider);\n        window.tonProvider.onStatusChange((walletInfo) => {\n              console.log('TONConnection onStatusChange:', JSON.stringify(walletInfo));\n            }, (err) => {\n              console.log('TONConnection onStatusChange error:', err);\n            }\n        )\n\n        if (window.provider instanceof OKXUniversalConnectUI) {\n          window.provider.onModalStateChange((state) => {\n            console.log(`onModalStateChange   ${JSON.stringify(state)}`)\n          })\n        }\n\n        console.log(\"init finished:\", provider);\n        console.log(\"init finished session:\", JSON.stringify(provider.session));\n\n        if (provider.session?.namespaces) {\n          const newChains = [];\n          console.log(\"namespaces\", provider.session.namespaces);\n          Object.entries(provider.session.namespaces).forEach(([key, value]) => {\n            if (key === \"eip155\") {\n              value.chains.forEach((chain) => {\n                newChains.push(parseInt(chain.substring(7)));\n              });\n            } else {\n              value.chains.forEach((chain) => {\n                newChains.push(chain);\n              });\n            }\n          });\n\n          console.log(\"existing chains:\", newChains);\n          this.initChains(newChains);\n        } else {\n          this.initChains([]);\n        }\n\n        provider.on(\"display_uri\", (uri) => {\n          if (!useShortLink()) {\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>display_uri  ==> \", uri);\n        });\n\n        provider.on(\"connect_signResponse\", (items) => {\n          console.log(\"通知>>>connect_signResponse  ==> \", JSON.stringify(items));\n          this.verifyMessage(items)\n        })\n\n        provider.on(\"short_display_uri\", (uri) => {\n          if (useShortLink()) {\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>short_display_uri  ==> \", uri);\n        });\n\n\n        provider.on(\"session_connecting\", () => {\n          console.log(\"通知>>>session_connecting  ==> \");\n        });\n\n        provider.on(\"connect\", (session) => {\n          console.log(\"通知>>>get connect session\", session);\n        });\n        provider.on(\"reconnect\", (session) => {\n          console.log(\"通知>>>get reconnect session\", session);\n          this.walletAddress = \"connected\";\n        });\n        provider.on(\"disconnect\", ({topic}) => {\n          console.log(`通知>>>get disconnect  ${topic}`);\n          this.walletAddress = \"disconnecteddddd\";\n        });\n        provider.on(\"session_delete\", ({topic}) => {\n          console.log(`通知>>>get session_delete  ${topic}`);\n        });\n        provider.on(\"session_update\", (session) => {\n          console.log(`通知>>>get session_update `, JSON.stringify(session));\n        });\n\n        provider.on(\"accountChanged\", (session) => {\n          if (session){\n            this.testboc = JSON.stringify(session);\n          }\n          console.log(`通知>>>get accountChanged `, JSON.stringify(session));\n        });\n\n      });\n    },\n\n    async connectBtnClicked() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        this.testTonSdk();\n      } else {\n        console.log(`connectBtnClicked provider not finish init`);\n      }\n    },\n\n    async syncAllAddressClick() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        if (window.provider instanceof OKXUniversalProvider) {\n          if (window.provider.connected()) {\n            try {\n              let message = await window.provider.syncAllAddresses()\n              if (typeof message == \"string\") {\n                this.testboc = message\n              } else {\n                this.testboc = JSON.stringify(message)\n              }\n            } catch (e) {\n              this.testboc = JSON.stringify(e)\n            }\n          } else {\n            this.testboc = \"not connected\"\n          }\n        }\n\n      } else {\n        console.log(`syncAllAddress provider not finish init`);\n      }\n    },\n\n    async disconnectAction() {\n      try {\n        console.log(\"get disconnect wallet btn clicked\");\n        // await TON.disconnect();\n        var provider = window.provider;\n        await provider.disconnect();\n        this.walletAddress = \"disconnected\";\n      } catch (error) {\n        console.log(\"Disconnect  error ==>> \", error.message);\n        this.currentStatus = error.message;\n      }\n    },\n\n    async eth_requestAccounts() {\n      var data = {method: \"eth_requestAccounts\"};\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_chainId() {\n      var data = {method: \"eth_chainId\"};\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_switchEthereumChain() {\n      var data = {\n        method: \"wallet_switchEthereumChain\",\n        params: [\n          {\n            chainId: \"0x7a\"\n          }\n        ]\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_addEthereumChain() {\n      var data = {\n        method: \"wallet_addEthereumChain\",\n        params: {\n          blockExplorerUrls: [\"https://explorer.fuse.io\"],\n          chainId: \"0x7a\",\n          chainName: \"Fuse\",\n          nativeCurrency: {name: \"Fuse\", symbol: \"FUSE\", decimals: 18},\n          rpcUrls: [\"https://rpc.fuse.io\"],\n        },\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    fromAccountToAddress(account) {\n      if (!account) {\n        return \"\"\n      }\n      try {\n        let addressArr = account.split(\":\").slice(2);\n        let address = addressArr.length > 0 ? addressArr.join(\":\") : \"\";\n        return address;\n      } catch (e) {\n        return \"\"\n      }\n\n    },\n\n    requestEVMAccountWithSession(chainId) {\n      console.log(\"requestAccountWithSession >>>\", chainId);\n      if (window.provider && window.provider.session && chainId) {\n        let key = chainId.includes(\":\") ? chainId.split(\":\")[0] : chainId;\n        let namespace = window.provider.session.namespaces\n        if (key === \"eip155\") {\n          let evmNameSpace = namespace[key];\n          if (evmNameSpace && evmNameSpace.accounts) {\n            let accounts = evmNameSpace.accounts;\n            return [\n              ...new Set(\n                  accounts\n                      // get the accounts from the active chain\n                      .filter((account) => account.includes(chainId+\":\"))\n                      // remove namespace & chainId from the string\n                      .map((account) => {\n                        return this.fromAccountToAddress(account);\n                      })\n              ),\n            ];\n\n          }\n\n        }\n      }\n      return undefined\n    },\n\n    async personal_sign() {\n      if (this.selectedChain === \"eip155:1\") {\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0x1ca023f10e157d148deed210f8bee193657a1eaa7f187909e20a9dc3b071dbc364c41fde37960c05093359f410a061ec8a7dca8c0c39fc7c1e24de8a3329775d1b\n\n        var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n        var address = accounts[0];\n        console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n        var dataETH = {\n          method: \"personal_sign\",\n          params: [\n            \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n            address,\n          ],\n        };\n\n        this.testTransaction = JSON.stringify(dataETH);\n      } else if (\n          this.selectedChain === \"eip155:137\" ||\n          this.selectedChain === \"eip155:122\"\n      ) {\n        // method\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0xebda9cfa2af43999058dffa0107031d1ef7fc0252dca85dcbd22ea097af922ca39b64d509ef61ce42b7641c5840b8a80337ffd1411b13e87e2260a3f1b6c151c1b\n\n        var dataPolygon = {\n          method: \"personal_sign\",\n          params: {\n            message:\n                \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n        this.testTransaction = JSON.stringify(dataPolygon);\n      } else if (this.selectedChain === \"eip155:56\") {\n        var data = {\n          method: \"personal_sign\",\n          params: {\n            message:\n                \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n\n        this.testTransaction = JSON.stringify(data);\n      }\n    },\n\n    async eth_sendTransaction_swap() {\n      var data = {\n        method: \"eth_sendTransaction\",\n        chainId: \"eip155:122\",\n        params: {\n          value: \"0x38d7ea4c68000\",\n          gas: \"0x2665f\",\n          to: \"0xf2614A233c7C3e7f08b1F887Ba133a13f1eb2c55\",\n          from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n          data: \"0x2646478b000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00000000000000000000000000000000000000000000000000038d7ea4c68000000000000000000000000000620fd5fa44be6af63715ef4e65ddfa0387ad13f5000000000000000000000000000000000000000000000000000000000000001b000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000700301ffff0201602352A9Eb5234466Eac23E59e7B99bCaE79C39c0BE9e53fd7EDaC9F859882AfdDa116645287C629040BE9e53fd7EDaC9F859882AfdDa116645287C62900602352A9Eb5234466Eac23E59e7B99bCaE79C39c01f2F3e73be57031114dd1f4E75c1DD87658be7F0E000bb800000000000000000000000000000000\",\n        },\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async oversized_personal_sign() {\n      const payload = ``\n      if (this.selectedChain === \"eip155:1\") {\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0x1ca023f10e157d148deed210f8bee193657a1eaa7f187909e20a9dc3b071dbc364c41fde37960c05093359f410a061ec8a7dca8c0c39fc7c1e24de8a3329775d1b\n\n        var accounts = await window.provider.request(\n          { method: \"eth_requestAccounts\" },\n          \"eip155:1\"\n        );\n        var address = accounts[0];\n        console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n        var dataETH = {\n          method: \"personal_sign\",\n          params: [\n            payload,\n            address,\n          ],\n        };\n\n        this.testTransaction = JSON.stringify(dataETH);\n      } else if (\n        this.selectedChain === \"eip155:137\" ||\n        this.selectedChain === \"eip155:122\"\n      ) {\n        // method\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0xebda9cfa2af43999058dffa0107031d1ef7fc0252dca85dcbd22ea097af922ca39b64d509ef61ce42b7641c5840b8a80337ffd1411b13e87e2260a3f1b6c151c1b\n\n        var dataPolygon = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              payload,\n          },\n        };\n        this.testTransaction = JSON.stringify(dataPolygon);\n      } else if (this.selectedChain === \"eip155:56\") {\n        var data = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              payload,\n          },\n        };\n\n        this.testTransaction = JSON.stringify(data);\n      }\n    },\n\n    async eth_signTypedData_v4() {\n      // method\n      // eth_signTypedData\n      // address\n      // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n      // valid\n      // true\n      // result\n      // 0xa8bb3c6b33a119d2d567c7632195c21988df778006082742125a591f5c633f716107883a37f7de6531a6312a5f69022135bf46fe5ab77905b62c82b3395f985e1b\n      //\n\n      // var data = {\n      //   \"method\": \"eth_signTypedData_v4\",\n      //   \"params\": {\n      //     \"typedDataJson\":\"{\\\"types\\\":{\\\"EIP712Domain\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"version\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"chainId\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"name\\\":\\\"verifyingContract\\\",\\\"type\\\":\\\"address\\\"}],\\\"Person\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"wallet\\\",\\\"type\\\":\\\"address\\\"}],\\\"Mail\\\":[{\\\"name\\\":\\\"from\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"to\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"contents\\\",\\\"type\\\":\\\"string\\\"}]},\\\"primaryType\\\":\\\"Mail\\\",\\\"domain\\\":{\\\"name\\\":\\\"Ether Mail\\\",\\\"version\\\":\\\"1\\\",\\\"chainId\\\":1,\\\"verifyingContract\\\":\\\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\\\"},\\\"message\\\":{\\\"from\\\":{\\\"name\\\":\\\"Cow\\\",\\\"wallet\\\":\\\"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\\\"},\\\"to\\\":{\\\"name\\\":\\\"Bob\\\",\\\"wallet\\\":\\\"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\\\"},\\\"contents\\\":\\\"Hello, Bob!\\\"}}\"\n      // }}\n\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n      var data = {\n        method: \"eth_signTypedData_v4\",\n        params: [\n          address,\n          {\n            types: {\n              EIP712Domain: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"version\",\n                  type: \"string\",\n                },\n                {\n                  name: \"chainId\",\n                  type: \"uint256\",\n                },\n                {\n                  name: \"verifyingContract\",\n                  type: \"address\",\n                },\n              ],\n              Person: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"wallet\",\n                  type: \"address\",\n                },\n              ],\n              Mail: [\n                {\n                  name: \"from\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"to\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"contents\",\n                  type: \"string\",\n                },\n              ],\n            },\n            primaryType: \"Mail\",\n            domain: {\n              name: \"Ether Mail\",\n              version: \"1\",\n              chainId: 1,\n              verifyingContract: \"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\",\n            },\n            message: {\n              from: {\n                name: \"Cow\",\n                wallet: \"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\",\n              },\n              to: {\n                name: \"Bob\",\n                wallet: \"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\",\n              },\n              contents: \"Hello, Bob!\",\n            },\n          },\n        ],\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_sendTransaction_transfer() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            chainId: \"0x1\",\n            to: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            value: \"0x5af3107a4000\",\n            maxPriorityFeePerGas: \"0x3b9aca00\",\n            gas: \"0x5e56\",\n            maxFeePerGas: \"0x2643b9db8\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gasPrice: \"0x17003f6530\",\n            nonce: \"0x0d30\",\n            data: \"0x\",\n            value: \"0x00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasLimit: \"0x5208\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x5e56\",\n            value: \"0x5af3107a4000\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasPrice: \"0x3b9aca00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            chainId: \"0x38\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:122\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            value: \"0x0\",\n            chainId: \"0x7a\",\n          }\n        }\n      }\n\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"to\"] = address;\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_approve() {\n      var data = {};\n\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000000000000022d473030f116ddee9f6b43ac78ba3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x582d872a1b094fc48f5de31d3b73f2d9be47def1\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000f6f8096ac575b0\",\n            to: \"0x0b3F868E0BE5597D5DB7fEB59E1CADBb0fdDa50a\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            value: \"0x0\",\n            gas: \"0xe117\",\n            gasPrice: \"0xb2d05e00\",\n            data: \"0x095ea7b300000000000000000000000031c2f6fcff4f8759b3bd5bf0e1084a055615c768ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x5CA42204cDaa70d5c773946e69dE942b85CA6706\",\n          },\n        };\n      } else if (this.selectedChain === 'eip155:122') {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000000000000013b3\",\n            to: \"0x620fd5fa44BE6af63715Ef4E65DDFA0387aD13F5\",\n          },\n        };\n      }\n\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_mint() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x4cacb\",\n            data: \"0xa64dfa75000000000000000000000000ed688002f3797599db8b4feacfe8b1dda0df1c8d000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cecb15396825a895ff8da8fc2d2c77a234dccee00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f6261667962656968643737366b6177706e71336f6f6a6635693274787a76617737737164656b34616a776472637472703261366f626b70723773792f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x30795\",\n            data: \"0xa64dfa75000000000000000000000000341b3687f0309778f08f29336b2c4b9c38b9f110000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f62616679626569686a6279676b68747a71376b68377434336266686e676e793236337668766f6578716a6d6e377161716166366e717a64743777712f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      }\n\n      let str = JSON.stringify(data);\n      console.log(\"-----长度--->\", str.length);\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async Polygon_RPCRequest() {\n      try {\n        var data = {\n          method: \"eth_getTransactionByHash\",\n          params: [\"0xd62fa4ea3cf7ee3bf6f5302b764490730186ed6a567c283517e8cb3c36142e1a\"],\n        };\n        this.testTransaction = JSON.stringify(data);\n\n        var result = await window.provider.request(data, this.selectedChain)\n        console.log(`请求数据回调 Polygon_RPCRequest ----->> ${JSON.stringify(result)}`)\n\n        if (typeof result == \"string\") {\n          this.testboc = result;\n        } else {\n          this.testboc = JSON.stringify(result);\n        }\n      }catch (e) {\n        this.testboc = JSON.stringify(e);\n      }\n\n    },\n    async wallet_watchAsset() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xe0f63a424a4439cbe457d80e4f4b51ad25b2c56c\",\n              symbol: \"SPX6900\",\n              image:\n                  \"https://assets.coingecko.com/coins/images/31401/standard/sticker_%281%29.jpg?1702371083\",\n              decimals: 8,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xeB51D9A39AD5EEF215dC0Bf39a8821ff804A0F01\",\n              symbol: \"LGNS\",\n              image: \"https://polygonscan.com/token/images/originlgns_32.png\",\n              decimals: 9,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0x031b41e504677879370e9dbcf937283a8691fa7f\",\n              symbol: \"FET\",\n              image: \"https://bscscan.com/token/images/fetch_32.png\",\n              decimals: 18,\n            },\n          },\n        };\n      }\n\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async ton_sendTransaction() {\n      var data = {\n        \"messages\": [{\n          \"address\": \"EQARULUYsmJq1RiZ-YiH-IJLcAZUVkVff-KBPwEmmaQGH6aC\",\n          \"amount\": \"186000000\",\n          \"payload\": \"te6cckEBAgEAhgABaw+KfqUAAACKXw/PUzD0JAgA7zuZAqJxsqAciTilI8/iTnGEeq62piAAHtRKd6wOcJwQLBuBAwEAlSWThWGAEPckSDVNSvvmJOKMGCE4qb+zE0NdQGXsIPpYy63RDznGJO33ACoTmz7CXpV552d6ANFof7NJCUxG8kSbhHYZT5CrVcQGUCH+joo=\"\n        }],\n        \"validUntil\": 1736161561913,\n        \"network\": '-239'\n      }\n      this.testTransaction = JSON.stringify(data)\n    },\n    ton_getAccount() {\n      this.testTransaction = \"这里是同步获取 不再需要点击 <<发送交易>>\"\n      let result = window.tonProvider.account()\n      if (result) {\n        this.testboc = JSON.stringify(result);\n      } else {\n        this.testboc = 'null'\n      }\n    },\n\n    async tonUniversalLog() {\n      console.log(\"ton 信息: tonProvider  connected:\", window.tonProvider.connected())\n      console.log(\"ton 信息: tonProvider  account:\", JSON.stringify(window.tonProvider.account()))\n      console.log(\"ton 信息: tonProvider  wallet:\", JSON.stringify(window.tonProvider.wallet()))\n    },\n\n    async sendTransactionAlert() {\n      //\n      const response = await fetch(`https://apitest.fireverse.ai/oauth/okx/getNonce?publicAddress=0x0cecb15396825a895ff8da8fc2d2c77a234dccee`);\n      const data = await response.json();\n      console.log(\"请求数据----\", JSON.stringify(data))\n      await this.personal_sign()\n      if (confirm(\"Are you want to sign message?\")) {\n        this.sendTransaction();\n      }\n\n      // window.open(\"https://www.okx.com/download?deeplink=okx%3A%2F%2Fweb3%2Fwallet%2Fconnect\",'_self')\n    },\n\n    async sendTransaction() {\n      if (this.selectedChain.startsWith(\"aptos\")\n          || this.selectedChain.startsWith(\"movement\")\n          || this.selectedChain.startsWith(\"solana\")\n          || this.selectedChain.startsWith(\"sonic\")\n          || this.selectedChain.startsWith(\"cosmos\")) {\n        return\n      }\n      console.log(\"sendTransaction\", window.provider);\n      console.log(\"sendTransaction内容11------\", this.testTransaction);\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (this.testTransaction && window.provider) {\n        // eslint-disable-next-line no-undef\n        const sendData = JSON.parse(this.testTransaction);\n        try {\n          console.log(\"sendTransaction-----22method>>\", sendData.method);\n\n          let chainId = \"eip155:1\";\n          if (this.selectedChain) {\n            chainId = this.selectedChain;\n            console.log(\n                \"sendTransaction-----this.selectedChain>>\",\n                this.selectedChain\n            );\n          }\n          console.log(\"windowOpen[click_1]: \", Date.now());\n          console.log(\"交易的ChainId: \",chainId);\n\n          if (chainId == \"sui:mainnet\") {\n            const adapter = new SuiAdapter(window.provider);\n            var suiResult = \"invalid result\";\n            if (this.currentSuiMethod == 'sui_getAccount') {\n              let result = adapter.getAccount()\n              if (typeof result == \"string\") {\n                this.testboc = result\n              } else {\n                this.testboc = JSON.stringify(result)\n              }\n            }\n            if (this.currentSuiMethod == \"sui_signTransaction\") {\n              suiResult = await adapter.signTransaction(\n                  this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signAndExecuteTransaction\") {\n              suiResult = await adapter.signAndExecuteTransaction(\n                  this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signMessage\") {\n              console.log(\"signMessage----\", this.currentSuiTransaction);\n              suiResult = await adapter.signMessage(this.currentSuiTransaction);\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_signPersonalMessage\") {\n              console.log(\n                  \"signPersonalMessage----\",\n                  this.currentSuiTransaction\n              );\n              suiResult = await adapter.signPersonalMessage(\n                  this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_testRpc\") {\n              console.log(\"test rpc----\", this.currentSuiTransaction);\n              console.log(\n                  `请求数据发送 rpc ----->> ${JSON.stringify(sendData)}`\n              );\n              const res = await window.provider.request(sendData, chainId);\n              console.log(`请求数据回调 rpc ----->> ${JSON.stringify(result)}`);\n              if (typeof res == \"string\") {\n                this.testboc = res;\n              } else {\n                this.testboc = JSON.stringify(res);\n              }\n            }\n            console.log(\"windowOpen[click_2]: \", Date.now());\n            return;\n          } else if (chainId === \"ton:-239\") {\n            console.log(\n                `请求数据发送 sendTransaction ---ton-->> ${JSON.stringify(sendData)}`\n            );\n            let result = await window.tonProvider.sendTransaction(sendData)\n            console.log(\n                `请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`\n            );\n            if (typeof result == \"string\") {\n              this.testboc = result;\n            } else {\n              this.testboc = JSON.stringify(result);\n            }\n            return\n          }\n\n          if (chainId == 'btc:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var btcResult = 'invalid result'\n\n            if (this.currentBtcMethod == 'btc_signMessage') {\n              btcResult = await btcAdapter.signMessage(chainId, this.currentBtcTransaction[\"signStr\"])\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_send') {\n              btcResult = await btcAdapter.send(chainId, this.currentBtcTransaction)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signPsbt') {\n              btcResult = await btcAdapter.signPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n\n              this.hexToBase64(btcResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentBtcMethod == 'btc_signPsbts') {\n              btcResult = await btcAdapter.signPsbts(chainId, this.currentBtcTransaction.psbtHexs, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_sendInscription') {\n              btcResult = await btcAdapter.sendInscription(chainId, this.currentBtcTransaction.address, this.currentBtcTransaction.inscriptionId, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signAndPushPsbt') {\n              btcResult = await btcAdapter.signAndPushPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_sendBitcoin') {\n              btcResult = await btcAdapter.sendBitcoin(chainId, this.currentBtcTransaction.toAddress, this.currentBtcTransaction.satoshis, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_getAccount') {\n              btcResult = btcAdapter.getAccount(chainId)\n              this.testboc = JSON.stringify(btcResult)\n            }else if(this.currentBtcMethod === \"btc_sendRunes\"){\n              console.log(\"BTC参数--->\",JSON.stringify(this.currentBtcTransaction))\n              btcResult = await btcAdapter.sendRunes(chainId,this.currentBtcTransaction.address,this.currentBtcTransaction.runeid,this.currentBtcTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }else if(this.currentBtcMethod === \"btc_inscribeTransfer\"){\n              console.log(\"BTC参数--->\",JSON.stringify(this.currentBtcTransaction))\n              btcResult = await btcAdapter.inscribeTransfer(chainId,this.currentBtcTransaction.ticker,this.currentBtcTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }\n\n            return\n          }\n\n          if (chainId == 'fractal:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var fractalResult = 'invalid result'\n\n            if (this.currentFractalMethod == 'fractal_signMessage') {\n              fractalResult = await btcAdapter.signMessage(chainId, this.currentFractalTransaction['signStr'])\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_send') {\n              fractalResult = await btcAdapter.send(chainId, this.currentFractalTransaction)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signPsbt') {\n              fractalResult = await btcAdapter.signPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.hexToBase64(fractalResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentFractalMethod == 'fractal_signPsbts') {\n              fractalResult = await btcAdapter.signPsbts(chainId, this.currentFractalTransaction.psbtHexs, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_sendInscription') {\n              fractalResult = await btcAdapter.sendInscription(chainId, this.currentFractalTransaction.address, this.currentFractalTransaction.inscriptionId, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signAndPushPsbt') {\n              fractalResult = await btcAdapter.signAndPushPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_sendBitcoin') {\n              fractalResult = await btcAdapter.sendBitcoin(chainId, this.currentFractalTransaction.toAddress, this.currentFractalTransaction.satoshis, this.currentFractalTransaction.options)\n\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_getAccount') {\n              fractalResult = btcAdapter.getAccount(chainId)\n              this.testboc = JSON.stringify(fractalResult)\n            }else if(this.currentFractalMethod === \"fractal_sendRunes\"){\n              console.log(\"fractal参数--->\",JSON.stringify(this.currentFractalTransaction))\n              btcResult = await btcAdapter.sendRunes(chainId,this.currentFractalTransaction.address,this.currentFractalTransaction.runeid,this.currentFractalTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }else if(this.currentFractalMethod === \"fractal_inscribeTransfer\"){\n              console.log(\"fractal参数--->\",JSON.stringify(this.currentFractalTransaction))\n              btcResult = await btcAdapter.inscribeTransfer(chainId,this.currentFractalTransaction.ticker,this.currentFractalTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }\n\n            return\n          }\n\n          console.log(`请求数据发送 sendTransaction ----->> ${JSON.stringify(sendData)}`)\n          var result = await window.provider.request(sendData, chainId)\n          console.log(`请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`)\n\n          console.log(\"windowOpen[click_3]: \", Date.now());\n          if (typeof result == \"string\") {\n            this.testboc = result;\n          } else {\n            this.testboc = JSON.stringify(result);\n          }\n          console.log(\"方法数据回调 --this.testboc--\", this.testboc);\n        } catch (error) {\n          console.error(\"方法数据回调失败 --Error--\", error.message);\n\n          if (error.code === OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n            this.testboc = error.message;\n          } else {\n            this.testboc = \"wrong signature！\" + error.message;\n          }\n        }\n      } else {\n        alert(\"Please input transaction data\");\n      }\n    },\n\n    hexToBase64(hexStr) {\n      var bytes = [];\n      for (var i = 0; i < hexStr.length; i += 2) {\n        bytes.push(parseInt(hexStr.substr(i, 2), 16));\n      }\n      const buffer = new Uint8Array(bytes)\n      const blob = new Blob([buffer]);\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = function (e) {\n          var base64Data = e.target.result.split(\",\")[1]\n          resolve(base64Data);\n        };\n        reader.onerror = function (e) {\n          reject(e);\n        };\n        reader.readAsDataURL(blob);\n      });\n    },\n    testBase64UrlSafe() {\n      let datatest = {\n        \"protocolVer\": 1,\n        \"topic\": \"8a7a4c3be73802d0ae2587123ade7bb79f27433b9aa3ca589a2208a2089eecfd\",\n        \"clientId\": \"5f1bbf9eac92160affa7ef04d0a710817ddb6d8c22ebbd6263e86f059930b404\",\n        \"requestId\": \"1731383250054\",\n        \"dAppInfo\": {\n          \"url\": \"connect.oker.vip\",\n          \"origin\": \"https://connect.oker.vip\",\n          \"name\": \"univer test dapp\",\n          \"icon\": \"https://avatars.githubusercontent.com/u/37784886\"\n        },\n        \"requests\": [{\n          \"name\": \"requestAccounts\",\n          \"requiredNamespaces\": [{\"namespace\": \"aptos\", \"chains\": [\"aptos:637\"]}],\n          \"optionalNamespaces\": [],\n          \"connectRequestMethods\": [{\n            \"chainId\": \"aptos:637\",\n            \"method\": \"aptos_signMessage\",\n            \"params\": {\n              \"data\": {\n                \"address\": true,\n                \"application\": true,\n                \"chainId\": true,\n                \"message\": \"123 中文测试!\",\n                \"nonce\": \"1234\"\n              }, \"applicationUrl\": \"https://connect.oker.vip\", \"prefix\": \"APTOS\", \"aptosChainId\": \"1\"\n            }\n          }]\n        }],\n        \"redirect\": \"none\"\n      }\n      let json = JSON.stringify(datatest)\n      const utf8Array = new TextEncoder().encode(json);\n      let binary = '';\n      utf8Array.forEach(byte => {\n        binary += String.fromCharCode(byte);\n      });\n\n      let firstStr = btoa(binary)\n      console.log(\"字符串编码1>>>>\", firstStr)\n      firstStr = firstStr.replace(/\\+/g, '-')  // 替换 '+'\n      console.log(\"字符串编码2>>>>\", firstStr)\n      firstStr = firstStr.replace(/\\//g, '_')  // 替换 '/'\n      console.log(\"字符串编码3>>>>\", firstStr)\n      firstStr = firstStr.replace(/=+$/, '');  // 移除 '=';\n      console.log(\"字符串编码4>>>>\", firstStr)\n\n      let showUrl = getUniversalLink(getAppWalletDeepLink(firstStr))\n      console.log(\"字符串编码5>>>>\", showUrl)\n      this.qrValue = showUrl;\n      this.showModal = true;\n    },\n\n\n    async testTonSdk() {\n      // 1. connect\n      //  create sub providers for each namespace/chain\n      let nameSpacesChains = [];\n      let optSpaceChains = [];\n\n      let solanaChains = [\n        \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n        \"svm:70000062\",\n        \"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n        \"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\"\n      ];\n      let hasEip155, hasSolana, hasSui, hasBtc, hasAptos, hasTon, hasCosmos, hasTron, hasStarknet,hasPolygon = false\n\n      let suiChains = [\n        \"sui:mainnet\",\n      ];\n\n      let btcChains = [\n        \"btc:mainnet\",\n        \"fractal:mainnet\"\n      ];\n\n      const chains = Object.entries(this.availableChains)\n          .filter((chain) => chain[1].checked)\n          .map((chain) => chain[0]);\n      console.log(`chains  ===> ${chains.values()}`)\n      chains.forEach(function (chainId) {\n        console.log(`chains.forEach chainId  ===> ${chainId}`)\n\n        if (solanaChains.includes(chainId)) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"ton\")) {\n          nameSpacesChains.push(chainId)\n          hasTon = true\n          return\n        }\n        if (typeof chainId == 'string' && (chainId.startsWith(\"aptos\") || chainId.startsWith(\"movement\"))) {\n          nameSpacesChains.push(chainId)\n          hasAptos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId)\n          hasSolana = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"cosmos\")) {\n          nameSpacesChains.push(chainId)\n          hasCosmos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"tron\")) {\n          nameSpacesChains.push(chainId)\n          hasTron = true\n          return\n        }\n\n        if (typeof chainId == 'string' && chainId.startsWith(\"starknet\")) {\n          nameSpacesChains.push(chainId)\n          hasStarknet = true\n          return\n        }\n\n        if (suiChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`);\n          nameSpacesChains.push(chainId);\n          hasSui = true;\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`)\n          nameSpacesChains.push(chainId)\n          hasBtc = true\n          return\n        }\n        if (chainId === \"137\"){\n          hasPolygon = true\n        }\n        hasEip155 = true\n        nameSpacesChains.push(`eip155:${chainId}`)\n      })\n\n\n      optionChains.forEach(function (chainId) {\n        console.log(\"optionChains.forEach 。chainId：》》\",chainId)\n        if (solanaChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n        if (typeof chainId == \"string\" && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (suiChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          optSpaceChains.push(chainId)\n          return\n        }\n        if (chainId.startsWith('ton')) {\n          optSpaceChains.push(chainId)\n          return\n        }\n\n        optSpaceChains.push(`eip155:${chainId}`)\n      })\n\n      console.log(`namespaceChains  ===> ${JSON.stringify(nameSpacesChains)}`);\n      var connectData = {};\n      if (nameSpacesChains && nameSpacesChains.length > 0) {\n        var requireData = {};\n\n        if (hasEip155) {\n\n          if (hasPolygon){\n            requireData.eip155 = {\n              chains: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              ),\n              defaultChain: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              )[0],\n              rpcMap: {\n                \"137\":\"https://polygon.drpc.org\"\n              }\n            };\n          }else {\n            requireData.eip155 = {\n              chains: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              ),\n              defaultChain: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              )[0],\n            };\n          }\n\n        }\n        if (hasSolana) {\n          requireData.solana = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"solana\") ||\n                    item.startsWith(\"sonic\") ||\n                    item.startsWith(\"svm\") ||\n                    item.startsWith(\"soon\") ||\n                    item.startsWith(\"eclipse\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"solana\") ||\n                    item.startsWith(\"sonic\") ||\n                    item.startsWith(\"svm\")||\n                    item.startsWith(\"soon\")||\n                    item.startsWith(\"eclipse\")\n\n            )[0],\n          };\n        }\n\n        if (hasCosmos) {\n          requireData.cosmos = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            )[0],\n          }\n        }\n        if (hasTron) {\n          requireData.tron = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            )[0],\n          }\n        }\n        if (hasStarknet) {\n          requireData.starknet = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"starknet\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"starknet\")\n            )[0],\n          }\n        }\n        if (hasTon) {\n\n          //\n          let tonParams = {\n            ton_addr: {\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue) {\n            tonParams = {\n              ton_addr: {\n                name: 'ton_addr',\n              },\n              ton_proof: {\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          requireData.ton = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"ton\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"ton\"))[0],\n            params: tonParams,\n          };\n        }\n\n        if (hasSui) {\n          requireData.sui = {\n            chains: nameSpacesChains.filter((item) => item.startsWith(\"sui\")),\n            defaultChain: nameSpacesChains.filter((item) =>\n                item.startsWith(\"sui\")\n            )[0],\n            rpcMap: {\n              \"sui:mainnet\": \"https://www.okx.com/fullnode/sui/discover/rpc\"\n            }\n          };\n        }\n        if (hasAptos) {\n          requireData.aptos = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\"))[0]\n          }\n        }\n\n        if (hasBtc) {\n          let btcChains = nameSpacesChains.filter(item => item.startsWith(\"btc\") || item.startsWith(\"fractal\"))\n          requireData.btc = {\n            chains: btcChains,\n            defaultChain: btcChains[0]\n          }\n        }\n        console.log(`requireData  ===> ${JSON.stringify(requireData)}`)\n        connectData['namespaces'] = requireData;\n        console.log(JSON.stringify(connectData))\n      }\n\n      if (optSpaceChains && optSpaceChains.length > 0) {\n        const optData = {};\n\n        const eip155Chains = optSpaceChains.filter((item) => item.startsWith(\"eip155\"));\n        if (eip155Chains.length > 0) {\n          optData[\"eip155\"] = {\n            chains: eip155Chains,\n            defaultChain: eip155Chains[0],\n          };\n        }\n\n        const solanaChains = optSpaceChains.filter((item) => item.startsWith(\"solana\"));\n        if (solanaChains.length > 0) {\n          optData[\"solana\"] = {\n            chains: solanaChains,\n            defaultChain: solanaChains[0],\n          };\n        }\n\n        const tonChains = optSpaceChains.filter((item) => item.startsWith(\"ton\"));\n        if (tonChains.length > 0) {\n\n          let tonParams = {\n            ton_addr: {\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue) {\n            tonParams = {\n              ton_addr: {\n                name: 'ton_addr',\n              },\n              ton_proof: {\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          optData[\"ton\"] = {\n            chains: tonChains,\n            defaultChain: tonChains[0],\n            params: tonParams,\n          };\n        }\n\n        const btcChains = optSpaceChains.filter((item) => item.startsWith(\"btc\"));\n        if (btcChains.length > 0) {\n          optData[\"btc\"] = {\n            chains: btcChains,\n            defaultChain: btcChains[0],\n          };\n        }\n\n        connectData[\"optionalNamespaces\"] = optData;\n      }\n\n      if (nameSpacesChains.length === 0 && optSpaceChains.length === 0) {\n        //未选择链\n        alert(\"Please select a chain from above to continue\");\n        return;\n      }\n      console.log(\"=====>connectData \");\n      console.log(connectData);\n\n      var connectMethod;\n      let signMethods = this.getCurrentSelectedMethodData();\n      if (window.provider instanceof OKXUniversalConnectUI) {\n\n        if (signMethods && signMethods.length > 0) {\n          connectMethod = window.provider.openModalAndSign(connectData, JSON.parse(JSON.stringify(signMethods)));\n        } else {\n          connectMethod = window.provider.openModal(connectData);\n        }\n      } else {\n        if (this.universalToTG) {\n          connectData.sessionConfig = {\n            useMini: true,\n            openUniversalUrl: true,\n            tmaReturnUrl: 'back'\n          }\n        } else {\n          connectData.sessionConfig = {\n            redirect: selectedReturnStrategy\n          }\n        }\n        if (signMethods && signMethods.length > 0) {\n          connectMethod = window.provider.connectAndSign(connectData, JSON.parse(JSON.stringify(signMethods)));\n        } else {\n          connectMethod = window.provider.connect(connectData);\n        }\n      }\n\n      await connectMethod\n          .then((result) => {\n            // 2. set defaul chain\n            this.walletAddress = \"connected\";\n            if (this.isPC()) {\n              this.showModal = false;\n            }\n            if (result) {\n              this.testboc = JSON.stringify(result)\n            }\n\n            if (window.provider.session && window.provider.session.namespaces) {\n              let ton = window.provider.session.namespaces[\"ton\"];\n              console.log(\"是否包含ton\", ton)\n              if (ton) {\n                this.tonUniversalLog()\n              }\n            }\n          })\n          .catch((error) => {\n            if (error.code == 301) {\n              setTimeout(() => {\n                alert(error.message)\n              }, 0.5);\n            } else if (error.message) {\n              alert(error.message)\n            }\n            console.error(\"发生了错误：\", error);\n          });\n    },\n\n    getCurrentSelectedMethodData() {// 连接签名\n      var methodList = [];\n      this.selectedMethod.forEach(method => {\n        switch (method) {\n          case \"wallet_addEthereumChain(ETH)\":\n            methodList.push({\n              method: \"wallet_addEthereumChain\",\n              chainId: \"eip155:1\",\n              params: {\n                blockExplorerUrls: [\"https://explorer.fuse.io\"],\n                chainId: \"0x7a\",\n                chainName: \"Fuse\",\n                nativeCurrency: {name: \"Fuse\", symbol: \"FUSE\", decimals: 18},\n                rpcUrls: [\"https://rpc.fuse.io\"],\n              },\n            })\n            break;\n          case \"personal_sign(ETH)\":\n            methodList.push(\n                {\n                  method: \"personal_sign\",\n                  chainId: \"eip155:1\",\n                  params: [\n                    \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n                  ],\n                });\n            break;\n          case \"solana_signMessage(Sol mainnet)\":\n            methodList.push(\n                {\n                  \"chainId\": \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n                  \"method\": \"solana_signMessage\",\n                  \"params\": {\n                    \"message\": \"Hello Solana\",\n                  }\n                }\n            );\n            break;\n          case \"sui_signMessage(Sui mainnet)\":\n          case \"sui_signPersonalMessage(Sui mainnet)\": {\n            let suiData = [\n              76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n              109, 111, 118, 101,\n            ];\n            let uint8Array = new Uint8Array(suiData);\n            let currentMethod = \"sui_signMessage\";\n            this.currentSuiTransaction = {\n              message: uint8Array\n            }\n\n            if (method.startsWith(\"sui_signPersonalMessage\")) {\n              currentMethod = \"sui_signPersonalMessage\";\n            }\n            methodList.push(\n                {\n                  method: currentMethod,\n                  chainId: \"sui:mainnet\",\n                  params: {\n                    message: uint8Array,\n                  }\n                }\n            );\n            break;\n          }\n          case \"btc_signMessage(BTC)\":\n            methodList.push(\n                {\n                  method: \"btc_signMessage\",\n                  chainId: \"btc:mainnet\",\n                  params: {\n                    message: \"Welcome to BTC\"\n                  }\n                }\n            )\n            break;\n          case \"aptos_signMessage(aptos mainnet)\":\n            methodList.push(\n                {\n                  \"chainId\": \"aptos:mainnet\",\n                  \"method\": \"aptos_signMessage\",\n                  \"params\": {\n                    address: true,\n                    application: true,\n                    chainId: true,\n                    message: \"Hello Aptos\",\n                    nonce: \"1234\"\n                  }\n                }\n            )\n            break;\n          case \"cosmos_signArbitrary(cosmoshub)\":\n            methodList.push(\n                {\n                  \"chainId\": \"cosmos:cosmoshub-4\",\n                  \"method\": \"cosmos_signArbitrary\",\n                  \"params\": {\n                    message: \"test cosmos\"\n                  }\n                }\n            )\n\n            break;\n          case \"test_noSupport_eth(ETH)\":\n            methodList.push(\n                {\n                  chainId: \"eip155:1\",\n                  method: \"test_noSupport_eth\",\n                  params: {\n                    message: \"test hello\",\n                  }\n                }\n            )\n            break;\n          case \"sync_all_addresses\":\n            methodList.push(\n                {\n                  method: \"sync_all_addresses\",\n                });\n            break;\n          case \"tron_signMessage\":\n            methodList.push(\n                {\n                  chainId: \"tron:mainnet\",\n                  method: \"tron_signMessage\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n          case \"tron_signMessageV2\":\n            methodList.push(\n                {\n                  chainId: \"tron:mainnet\",\n                  method: \"tron_signMessageV2\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n\n            //\n          case \"starknet_signMessage\": {\n            const signData = {\n              \"domain\": {\n                \"chainId\": \"0x534e5f4d41494e\",\n                \"name\": \"STRKFarm\",\n                \"version\": \"1\"\n              },\n              \"message\": {\n                \"document\": \"app.strkfarm.xyz/tnc/v1\",\n                \"message\": \"Read and Agree T&C\"\n              },\n              \"primaryType\": \"Tnc\",\n              \"types\": {\n                \"StarkNetDomain\": [\n                  {\n                    \"name\": \"name\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"version\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"chainId\",\n                    \"type\": \"felt\"\n                  }\n                ],\n                \"Tnc\": [\n                  {\n                    \"name\": \"message\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"document\",\n                    \"type\": \"felt\"\n                  }\n                ]\n              }\n            }\n            methodList.push({\n              chainId: \"starknet:mainnet\",\n              method: \"starknet_signMessage\",\n              params: {\n                accountAddress: \"\",\n                typedData: signData\n              }\n            })\n          }\n            break\n          default:\n\n            break;\n        }\n      })\n      this.selectedMethodData = methodList\n      return methodList\n\n    },\n\n    closeModal() {\n      this.showModal = false;\n    },\n\n    isPC() {\n      const userAgentInfo = navigator.userAgent;\n      console.log(\"current device ua is ===>\", userAgentInfo);\n\n      const Agents = [\n        \"Android\",\n        \"iPhone\",\n        \"SymbianOS\",\n        \"Windows Phone\",\n        \"iPad\",\n        \"iPod\",\n      ];\n      let flag = true;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = false;\n          break;\n        }\n      }\n      return flag;\n    },\n    isSafariOrChrome() {\n      const userAgentInfo = navigator.userAgent;\n      const Agents = [\"Safari\", \"Chrome\"];\n      let flag = false;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = true;\n          break;\n        }\n      }\n      return flag;\n    },\n\n    /// solana\n    async sol_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      try {\n        let data = {\n          method: \"solana_signMessage\",\n          params: {\n            message: \"Hello Solana\",\n            pubkey: \"\",\n          },\n        };\n        this.testTransaction = JSON.stringify(data);\n        let provider = new OKXSolanaProvider(window.provider);\n\n        const encoder = new TextEncoder();\n        const uint8Array1 = encoder.encode(\"Hello Solana\");\n\n        let message = await provider.signMessage(\n            uint8Array1,\n            this.selectedChain\n        );\n        console.log(\"solana_signMessage Result:\", JSON.stringify(message), typeof(uint8Array1))\n        const result1 = nacl.sign.detached.verify(\n            new TextEncoder().encode(\"Hello Solana\"),\n            message.signature,\n            new PublicKey(message.publicKey).toBytes()\n        );\n        console.log(result1)\n\n        if (typeof message == \"string\") {\n          this.testboc = result1;\n        } else {\n          this.testboc = result1;\n        }\n      } catch (e) {\n        console.log(\"solana_signMessage error:\", JSON.stringify(e))\n        this.testboc = e.message\n      }\n\n    },\n\n    async aptos_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      let data = {\n        address: true,\n        application: true,\n        chainId: true,\n        message: \"Hello Aptos\",\n        nonce: \"1234\"\n      }\n\n      let provider = new OKXAptosProvider(window.provider)\n      let message = await provider.signMessage(data, this.selectedChain)\n      this.testTransaction = JSON.stringify(data)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n      try {\n        const transaction = await aptos.transaction.build.simple({\n          sender: provider.getAccount(this.selectedChain).address,\n          data: {\n            // The Move entry-function\n            function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n            // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n            typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n            functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n          },\n        });\n        console.log(\"获取地址aptos 222222：\");\n\n        this.testTransaction = safeJsonStringify(transaction)\n\n        let message = await provider.signTransaction(transaction, this.selectedChain)\n        if (typeof message == \"string\") {\n          this.testboc = message\n        } else {\n          this.testboc = JSON.stringify(message)\n        }\n      }catch (e) {\n\n        this.testboc = JSON.stringify(e)\n      }\n\n    },\n\n    async move_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n          functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        },\n      });\n\n      // let data = {\n      //   \"arguments\": [\"100000\",[\"0\",\"0\",\"10533\"],[\"10\",\"5\",\"5\"],[\"false\",\"false\",\"true\"]],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x3\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\",\"0x73eb84966be67e4697fc5ae75173ca6c35089e802650f75422ab49a8729704ec::coin::DooDoo\",\"0x53a30a6e5936c0a4c5140daed34de39d17ca7fcae08f947c02e979cef98a3719::coin::LSD\",\"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::CurveV1\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x54cb0bb2c18564b86e34539b9f89cfe1186e39d89fce54e1cd007b8e61673a85::bin_steps::X80\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async sol_signVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(\n          provider.getAccount(\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\").address\n      );\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signTransaction(\n          transaction,\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAndSendVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n          transaction,\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllVersionedTransactions() {\n      let provider = new OKXSolanaProvider(window.provider);\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n          [transaction],\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signTransaction() {\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: 1000,\n          })\n      );\n\n      this.testTransaction = safeJsonStringify(transaction)\n      let result = await provider.signTransaction(\n          transaction,\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllTransactions() {\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n          [transaction],\n          this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    getSolConnect() {\n      let rpc = \"https://www.okx.com/fullnode/sol/discover/rpc\"\n      if (this.selectedChain === \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\") {\n        rpc = \"https://www.okx.com//fullnode/sol/discover/rpc\"\n      } else if (this.selectedChain === \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\") {\n        rpc = \"https://www.okx.com/fullnode/soltestnet/discover/rpc\"\n      } else if (this.selectedChain === \"svm:70000062\") {\n        rpc = \"https://www.okx.com/fullnode/sonic/testnet/discover/rpc\"\n      }\n      return rpc\n    },\n\n    async sol_signAndSendTransaction() {\n\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n          transaction,\n          this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async cosmos_signArbitrary() {\n      let provider = new OKXCosmosProvider(window.provider)\n      let message = await provider.signArbitrary(this.selectedChain, provider.getAccount(this.selectedChain).address, \"test cosmos\")\n      if (typeof message == \"string\") {\n        this.testboc = message;\n      } else {\n        let isValid = await this.cosmos_verifySignArbitrary(provider.getAccount(this.selectedChain).address, \"test cosmos\", message.signature, message.pub_key.value)\n        console.log(\"verify\", isValid)\n        this.testboc = \"verify:\" + isValid + JSON.stringify(message);\n      }\n    },\n\n    async cosmos_verifySignArbitrary(signer, data, signature, pubkey) {\n      try {\n        console.log(\"cosmos_verifySignArbitrary signer:\", signer)\n        console.log(\"cosmos_verifySignArbitrary data:\", JSON.stringify(data))\n        console.log(\"cosmos_verifySignArbitrary signature:\", signature)\n        console.log(\"cosmos_verifySignArbitrary pubkey:\", pubkey)\n\n        // 将bech32地址转换为公钥\n        const {prefix: prefixStr} = fromBech32(signer)\n\n        const signatureBuffer = Buffer.from(signature, 'base64');\n\n        const uint8Signature = new Uint8Array(signatureBuffer); // Convert the buffer to an Uint8Array\n\n        const pubKeyValueBuffer = Buffer.from(pubkey, 'base64'); // Decode the base64 encoded value\n\n        const pubKeyUint8Array = new Uint8Array(pubKeyValueBuffer); // Convert the buffer to an Uint8Array\n\n        // 验证签名\n        return await verifyADR36Amino(\n            prefixStr,\n            signer,\n            data,\n            pubKeyUint8Array,\n            uint8Signature\n        )\n      } catch (err) {\n        console.error('Verification failed:', err)\n        return false\n      }\n    },\n\n    async cosmos_signAmino() {\n      let provider = new OKXCosmosProvider(window.provider)\n      // const rpcUrl = 'https://osmosis-rpc.publicnode.com:443';\n      // const client = await StargateClient.connect(rpcUrl);\n      // const height = await client.getHeight();\n      // let address = provider.getAccount(this.selectedChain).address\n      // const sequence = await client.getSequence(address)\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      // let signDoc = makeSignDoc(\n      //     transaction.msgs,\n      //     transaction.fee,\n      //     this.selectedChain.split(\":\")[1],\n      //     transaction.memo,\n      //     transaction.accountNumber,\n      //     transaction.sequence,\n      // )\n      let signDoc = {\n        \"chain_id\": \"osmosis-1\",\n        \"account_number\": \"630104\",\n        \"sequence\": \"480\",\n        \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]},\n        \"msgs\": [{\n          \"type\": \"osmosis/poolmanager/swap-exact-amount-in\",\n          \"value\": {\n            \"sender\": \"osmo1u6lts9ng4etxj0zdaxsada6zgl8dudpgelmuyu\",\n            \"routes\": [{\n              \"pool_id\": \"1096\",\n              \"token_out_denom\": \"ibc/987C17B11ABC2B20019178ACE62929FE9840202CE79498E29FE8E5CB02B7C0A4\"\n            }, {\n              \"pool_id\": \"611\",\n              \"token_out_denom\": \"ibc/27394FB092D2ECCD56123C74F36E4C1F926001CEADA9CA97EA622B25F41E5EB2\"\n            }],\n            \"token_in\": {\"denom\": \"uosmo\", \"amount\": \"100\"},\n            \"token_out_min_amount\": \"8\"\n          }\n        }],\n        \"memo\": \"FE\",\n        \"timeout_height\": \"23603788\",\n        \"signOptions\": {\n          \"useOneClickTrading\": false,\n          \"preferNoSetFee\": true,\n          \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]}\n        }\n      }\n\n\n      // let signOption = {\n      //   memo: true, // optional\n      //   fee: true, // optional\n      //   gasRate: {\n      //     // optional\n      //     average: \"0.2\",\n      //     low: \"0.02\",\n      //     tiny: \"0.002\",\n      //   },\n      // }\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signAmino(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, signDoc)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    messageToBuffer(message) {\n      var buffer = Buffer.from([]);\n      try {\n        if (typeof message === \"string\") {\n          buffer = Buffer.from(message.replace(\"0x\", \"\"), \"hex\");\n        } else {\n          buffer = Buffer.from(message);\n        }\n      } catch (err) {\n        console.log(`messageToBuffer error: ${err}`);\n      }\n      return buffer;\n    },\n\n\n    async cosmos_signDirect() {\n      let provider = new OKXCosmosProvider(window.provider)\n\n      let signDoc = {\n        \"bodyBytes\": this.messageToBuffer(\"0x0ac1010a292f6962632e6170706c69636174696f6e732e7472616e736665722e76312e4d73675472616e736665721293010a087472616e7366657212096368616e6e656c2d301a0d0a05756f736d6f120431303030222b6f736d6f3175366c7473396e67346574786a307a64617873616461367a676c386475647067656c6d7579752a2d636f736d6f733175366c7473396e67346574786a307a64617873616461367a676c386475647067337967766a773207080410ebe3f90a3880b0bcafd18cec8218\"),\n        \"authInfoBytes\": this.messageToBuffer(\"0x0a510a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a2102446e19e94ac0e83ea896d2712507577eb39fbdd2d6ae9f0fc0b9759f1fbaba9012040a02080118e00312140a0e0a05756f736d6f1205323530303010859a11\"),\n        \"chainId\": \"osmosis-1\",\n        \"accountNumber\": \"630104\",\n      }\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signDirect(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, transaction)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    sui_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentSuiTransaction = params\n      this.currentSuiMethod = flag\n    },\n\n    btc_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentBtcTransaction = params\n      this.currentBtcMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n\n    fractal_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentFractalTransaction = params\n      this.currentFractalMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n    tron_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n    tron_generateTransactionParams(params) {\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n\n    starknet_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n\n    starknet_generateTransactionParams(params) {\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n\n    handleModalsSelect(modals) {\n      selectedModals = modals;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: modals.length === 3 ? \"all\" : modals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n\n    handleReturnStrategySelect(returnStrategy) {\n      selectedReturnStrategy = returnStrategy === \"deeplink\" ? this.deeplink : returnStrategy;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = selectedReturnStrategy;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: selectedReturnStrategy\n          };\n        }\n      }\n    },\n\n    handleReturnStrategyDeeplink(deeplink) {\n      console.log('handleReturnStrategyDeeplink', deeplink)\n      selectedReturnStrategy = deeplink;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: deeplink,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = deeplink;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: deeplink\n          };\n        }\n      }\n    },\n\n    handleLanguageSelect(language) {\n      selectedLanguage = language;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: language,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n    handleConnectMethodsSelect() {\n      console.log(\"当前的方法 this.selectedMethod>>>>\", this.selectedMethod);\n    },\n\n    eth_verifyMessage(message, signature, ethAddress) {\n      console.log(\"eth_verifyMessage   message>>>\", message)\n      console.log(\"eth_verifyMessage   signature>>>\", signature)\n      console.log(\"eth_verifyMessage   ethAddress>>>\", ethAddress)\n      if (!message || !signature) {\n        return \"\"\n      }\n      let originalMessage = message\n      if (message.startsWith(\"0x\")) {\n        originalMessage = originalMessage.replace(/^0x/, '');\n        let str = '';\n        for (let i = 0; i < originalMessage.length; i += 2) {\n          const byte = originalMessage.slice(i, i + 2);\n          str += String.fromCharCode(parseInt(byte, 16));\n        }\n        originalMessage = str\n      }\n      console.log(\"eth_verifyMessage   originalMessage>>>\", originalMessage)\n\n      // const messageHash = ethers.utils.hashMessage(originalMessage);\n      const recoveredAddress = ethers.utils.verifyMessage(originalMessage, signature);\n      console.log(\"eth_verifyMessage recoveredAddress:\", recoveredAddress);\n      return recoveredAddress.toLowerCase() === ethAddress.toLowerCase();\n    },\n\n    async verifyMessage(list) { //连接验签\n\n      if (window.provider && window.provider.session && list && list.length > 0) {\n        let verifyList = {}\n        for (let methodItem of list) {\n          if (\"result\" in methodItem && \"method\" in methodItem) {\n            let requestItme = this.selectedMethodData.filter(item => item.method === methodItem.method)[0];\n            console.log(\"验证签名 请求>>>:\", JSON.stringify(requestItme));\n            console.log(\"验证签名 结果>>>:\", JSON.stringify(methodItem));\n            if (methodItem.method === \"personal_sign\") {\n              let ethAddress = this.requestEVMAccountWithSession(methodItem.chainId)\n              ethAddress = ethAddress[0];\n              console.log(\"验证eth 钱包地址>>>:\", ethAddress);\n              let ethMessage = requestItme.params[0]\n              console.log(\"验证eth 签名消息体>>:\", JSON.stringify(ethMessage));\n              verifyList[methodItem.method] = this.eth_verifyMessage(ethMessage, methodItem.result, ethAddress)\n            } else if (methodItem.method === \"solana_signMessage\") {\n              let solanaMessage = methodItem.result\n              if (\"signature\" in solanaMessage && \"publicKey\" in solanaMessage) {\n                const verifySol = nacl.sign.detached.verify(\n                    new TextEncoder().encode(\"Hello Solana\"),\n                    solanaMessage.signature,\n                    new PublicKey(solanaMessage.publicKey).toBytes()\n                );\n                verifyList[methodItem.method] = verifySol\n              } else {\n                verifyList[methodItem.method] = false\n              }\n            } else if (methodItem.method === \"sui_signPersonalMessage\" || methodItem.method === \"sui_signMessage\") {\n              let suiResult = this.sui_verifySignature(methodItem.result);\n              verifyList[methodItem.method] = (await suiResult).result\n            } else if (methodItem.method === \"btc_signMessage\") {\n\n              verifyList[methodItem.method] = \"Not verified yet\"\n\n            } else if (methodItem.method === \"aptos_signMessage\") {\n              let aptosMessage = methodItem.result\n              let aptosProvider = new OKXAptosProvider(window.provider)\n              let aptosPublicKey = aptosProvider.getAccount(methodItem.chainId)?.publicKey\n\n              let signStr = aptosMessage.signature\n              if (signStr.startsWith(\"0x\")) {\n                signStr = signStr.slice(2, signStr.length)\n              }\n\n              console.log(\"aptos_signMessage aptosPublicKey And signStr\", aptosPublicKey, signStr)\n              verifyList[methodItem.method] = nacl.sign.detached.verify(\n                  Buffer.from(aptosMessage.fullMessage),\n                  Buffer.from(signStr, 'hex'),\n                  Buffer.from(aptosPublicKey, 'hex'),\n              );\n            } else if (methodItem.method === \"cosmos_signArbitrary\") {\n              let cosmosProvider = new OKXCosmosProvider(window.provider)\n              let cosmosAddress = cosmosProvider.getAccount(methodItem.chainId)?.address\n              let cosmosMessage = methodItem.result\n              let isValid = await this.cosmos_verifySignArbitrary(cosmosAddress, \"test cosmos\", cosmosMessage.signature, cosmosMessage.pub_key.value)\n              verifyList[methodItem.method] = isValid\n\n            } else if (methodItem.method === \"tron_signMessage\") {\n              let tronMessage = methodItem.result\n              let tronWeb = new TronWeb({\n                \"fullHost\": 'https://api.trongrid.io',\n                \"headers\": {},\n                \"privateKey\": ''\n              })\n              let provider = new OKXTronProvider(window.provider)\n              verifyList[methodItem.method] = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), tronMessage, provider.getAccount(\"tron:mainnet\").address)\n            } else if (methodItem.method === \"tron_signMessageV2\") {\n              let tronMessage = methodItem.result\n              let tronWeb = new TronWeb({\n                \"fullHost\": 'https://api.trongrid.io',\n                \"headers\": {},\n                \"privateKey\": ''\n              })\n              const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", tronMessage);\n              let provider = new OKXTronProvider(window.provider)\n\n              verifyList[methodItem.method] = base58Address === provider.getAccount(\"tron:mainnet\").address\n            } else if (methodItem.method === \"starknet_signMessage\") {\n              let res = methodItem.result\n              let signData = this.starknetPanelTypedData\n\n              const rpcProvider = new StarknetRpcProvider({nodeUrl: \"https://free-rpc.nethermind.io/mainnet-juno/v0_7\"});\n\n              let provider = new OKXStarknetProvider(window.provider)\n              let address = provider.getAccount(\"starknet:mainnet\").address\n              let pk = \"0x123\"; /// random pk\n              const account = new StarknetAccount(rpcProvider, address, pk)\n\n              let that = this\n              account.verifyMessage(signData, res).then(function (isValid) {\n                that.testTransaction = `Verifyed result: \\n${isValid}`\n              }).catch(function (error) {\n                that.testTransaction = `Verifyed failed: \\n${error}`\n              })\n              verifyList[methodItem.method] = \"starknet is verifying signature...\"\n            } else {\n              verifyList[methodItem.method] = \"Not verified yet\"\n\n            }\n          } else if (\"method\" in methodItem && \"error\" in methodItem) {\n            verifyList[methodItem.method] = methodItem.error\n          }\n\n        }\n\n        console.log(\"验证签名 最后的结果>>>:\", JSON.stringify(verifyList));\n        this.testTransaction = \"签名验证结果如下: \\n\" + JSON.stringify(verifyList)\n      } else {\n        console.log(\"验证签名 window.provider.session.connectMethodsReply 为空:\");\n\n      }\n\n    },\n\n    handleThemeSelect(theme) {\n      selectedTheme = theme;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: theme,\n          },\n        };\n      }\n    },\n\n    async sui_verifySignature(signatureResult) {\n      let resultObj = signatureResult\n      let result = false\n      let msg = ''\n      try {\n        /// 获取当前account\n        const adapter = new SuiAdapter(window.provider);\n        let account = adapter.getAccount()\n        console.log(`Account中获取的address：${account.address}`)\n\n        /// 验证签名\n        let pubKey = await verifyPersonalMessageSignature(this.currentSuiTransaction.message, resultObj.signature)\n        let address = pubKey.toSuiAddress()\n        console.log(`验签结果计算得到address：${address}`)\n\n        /// 对比pubKey\n        console.log(`account pubkey: ${account.publicKey}`,)\n        console.log(`result pubkey: ${pubKey.toBase64()}`)\n        result = (account.address === address) && (account.publicKey === pubKey.toBase64())\n\n        msg = `address verify: ${account.address === address}\\npublicKey verify: ${account.publicKey === pubKey.toBase64()}`\n        console.log(\"signature verify success: \", pubKey)\n      } catch (e) {\n        console.log(\"signature verify failed: \", e)\n      }\n      return {\n        result,\n        msg\n      }\n    },\n\n\n    handleRedirectSelect(input) {\n      this.redirect = input;\n    },\n\n    handleRedirectDeeplink(input) {\n      this.redirectDeeplink = input;\n    },\n\n    addRedirectParam() {\n      if (this.testTransaction) {\n        const newTransaction = JSON.parse(this.testTransaction);\n        newTransaction.redirect = this.redirect === 'deeplink' ? this.redirectDeeplink : this.redirect;\n        this.testTransaction = JSON.stringify(newTransaction);\n      }\n    },\n\n    canChainAddRedirectParam() {\n      return chainsThatCanAddRedirectParam.some((c) => this.selectedChain.startsWith(c));\n    }\n  },\n  created() {\n    // for (const eventName of Object.values(OKX_TON_CONNECTION_AND_TRANSACTION_EVENT)) {\n    //   console.log(eventName);\n    //   window.addEventListener(eventName, (event) => {\n    //     console.log(eventName,event.detail)\n    //     this.currentStatus = eventName\n    //   });\n    // }\n  },\n\n  mounted() {\n\n    var scriptTag = document.createElement(\"script\");\n    scriptTag.src = \"https://telegram.org/js/telegram-web-app.js\";\n    scriptTag.id = \"tgsdk\";\n    document.getElementsByTagName('head')[0].appendChild(scriptTag);\n\n    this.connectReady = true;\n    document.title = \"OKX Connect\";\n    this.initBtnClicked()\n    this.initBtnClicked()\n\n    console.log(\"挂载成功:\")\n    if (this.$refs.starknetPanelRef) {\n      this.starknetPanelTypedData = toRaw(this.$refs.starknetPanelRef.signData)\n      console.log(\"111: \", this.starknetPanelTypedData)\n    } else {\n      console.log(\"222\")\n    }\n  },\n};\n</script>\n","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_getAccount()\">getAccount(BTC)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signMessage()\">signMessage(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_send()\">send(BTC)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendBitcoin()\">sendBitcoin(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signPsbt_up()\">signPsbt(上架NFT)</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"btc_signAndPushPsbt_up()\">signAndPushPsbt(上架NFT)</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在OKX App选择要上架的Btc NFT，点击【上架】\n        </li>\n        <li>\n          2. 弹出签名面板，点开高级选项，查看\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出上架流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendInscription()\">sendInscription(BTC)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Btc NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"runsAddress\" clearable placeholder=\"the receiver address\" />\n      <el-input class=\"grid-content\" v-model=\"runsId\" clearable placeholder=\"the runeid\" />\n      <el-input class=\"grid-content\" v-model=\"runsAmount\" clearable placeholder=\"the amount to send\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendRunes()\">btc_sendRunes(BTC)</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model= \"intTicker\" clearable placeholder=\"BRC-20 ticker \" />\n      <el-input class=\"grid-content\" v-model=\" intAmount\" clearable placeholder=\" the amount to inscribe\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_inscribeTransfer()\">btc_inscribeTransfer(BTC)</el-button>\n    </el-col>\n\n\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    const runsAddress = ref('')\n    const runsId = ref('')\n    const runsAmount = ref('')\n    const intTicker = ref('')\n    const intAmount = ref('')\n\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount,\n      runsAddress,\n      runsId,\n      runsAmount,\n      intTicker,\n      intAmount\n    }\n  },\n  methods: {\n\n    btc_getAccount() {\n      this.$emit('generateTransactionParams', {}, \"btc_getAccount\")\n    },\n\n    btc_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to BTC\"\n      };\n      this.$emit('generateTransactionParams', params, \"btc_signMessage\")\n    },\n\n    btc_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"btc_send\")\n    },\n\n    btc_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"btc_sendBitcoin\")\n    },\n\n    btc_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"btc_signPsbt\")\n    },\n\n    btc_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"btc_signAndPushPsbt\")\n    },\n\n    btc_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"btc_sendInscription\")\n    },\n    btc_sendRunes() {\n      if (!this.runsAddress) {\n        alert(\"Please enter the receiver address\")\n        return\n      }\n      if (!this.runsId) {\n        alert(\"Please enter the runsId\")\n        return\n      }\n      if (!this.runsAmount) {\n        alert(\"Please enter the amount to send \")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        address:this.runsAddress,\n        runeid:this.runsId,\n        amount:this.runsAmount\n      }, \"btc_sendRunes\")\n    },\n\n    btc_inscribeTransfer() {\n      if (!this.intTicker) {\n        alert(\"Please enter BRC-20 ticker\")\n        return\n      }\n      if (!this.intAmount) {\n        alert(\"Please enter the amount to inscribe\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        ticker:this.intTicker,\n        amount:this.intAmount\n      }, \"btc_inscribeTransfer\")\n    },\n\n\n\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./BtcTransactionPanel.vue?vue&type=template&id=759766a0&scoped=true\"\nimport script from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./BtcTransactionPanel.vue?vue&type=style&index=0&id=759766a0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-759766a0\"]])\n\nexport default __exports__","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_getAccount()\">getAccount(Fractal)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signMessage()\">signMessage(Fractal)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_send()\">send(Fractal)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_sendBitcoin()\">sendBitcoin(Fractal)</el-button>\n\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signPsbt_up()\">signPsbt(上架NFT)</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_signAndPushPsbt_up()\">signAndPushPsbt(上架NFT)</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在OKX App选择要上架的Fractal NFT，点击【上架】\n        </li>\n        <li>\n          2. 弹出签名面板，点开高级选项，查看\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出上架流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_sendInscription()\">sendInscription(Fractal)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Fractal NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"runsAddress\" clearable placeholder=\"the receiver address\" />\n      <el-input class=\"grid-content\" v-model=\"runsId\" clearable placeholder=\"the runeid\" />\n      <el-input class=\"grid-content\" v-model=\"runsAmount\" clearable placeholder=\"the amount to send\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_sendRunes()\">fractal_sendRunes(fractal)</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model= \"intTicker\" clearable placeholder=\"BRC-20 ticker \" />\n      <el-input class=\"grid-content\" v-model=\" intAmount\" clearable placeholder=\" the amount to inscribe\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_inscribeTransfer()\">fractal_inscribeTransfer(fractal)</el-button>\n    </el-col>\n\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    const runsAddress = ref('')\n    const runsId = ref('')\n    const runsAmount = ref('')\n    const intTicker = ref('')\n    const intAmount = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount,\n      runsAddress,\n      runsId,\n      runsAmount,\n      intTicker,\n      intAmount\n    }\n  },\n  methods: {\n\n    fractal_getAccount() {\n      this.$emit('generateTransactionParams', {}, \"fractal_getAccount\")\n    },\n\n    fractal_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to UniSat!\\n\\nClick to sign in and accept the UniSat Terms of Service (https://unisat.io/terms-of-service.html) and Privacy Policy (https://unisat.io/privacy-policy.html).\\n    \\nThis request will not trigger a blockchain transaction.\\n    \\nYour authentication status will reset after 24 hours.\\n    \\nWallet address:\\nbc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\\n    \\nNonce:\\n162d70e3-8c21-4cfd-9a22-9bf0a4b7be51\\n\"\n      };\n      this.$emit('generateTransactionParams', params, \"fractal_signMessage\")\n    },\n\n    fractal_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_send\")\n    },\n\n    fractal_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_sendBitcoin\")\n    },\n\n    fractal_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"fractal_signPsbt\")\n    },\n\n    fractal_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"fractal_signAndPushPsbt\")\n    },\n\n    fractal_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"fractal_sendInscription\")\n    },\n\n    fractal_sendRunes() {\n      if (!this.runsAddress) {\n        alert(\"Please enter the receiver address\")\n        return\n      }\n      if (!this.runsId) {\n        alert(\"Please enter the runsId\")\n        return\n      }\n      if (!this.runsAmount) {\n        alert(\"Please enter the amount to send \")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        address:this.runsAddress,\n        runeid:this.runsId,\n        amount:this.runsAmount\n      }, \"fractal_sendRunes\")\n    },\n\n    fractal_inscribeTransfer() {\n      if (!this.intTicker) {\n        alert(\"Please enter BRC-20 ticker\")\n        return\n      }\n      if (!this.intAmount) {\n        alert(\"Please enter the amount to inscribe\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        ticker:this.intTicker,\n        amount:this.intAmount\n      }, \"fractal_inscribeTransfer\")\n    },\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./FractalTransactionPanel.vue?vue&type=template&id=07ed8044&scoped=true\"\nimport script from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./FractalTransactionPanel.vue?vue&type=style&index=0&id=07ed8044&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-07ed8044\"]])\n\nexport default __exports__","<script>\n\nimport {getFullnodeUrl, SuiClient} from \"@mysten/sui/client\";\nimport {Transaction as SuiTransaction} from '@mysten/sui/transactions';\n\nexport default {\n  name: \"SuiTransactionPanel\",\n  methods: {\n    sui_getAccount() {\n      this.$emit('generateTransactionParams', '', \"sui_getAccount\")\n    },\n\n    //对单个交易签名（不发送)\n    async sui_signMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signMessage\")\n    },\n\n    async sui_signPersonalMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signPersonalMessage\")\n    },\n\n    sui_signTransaction2() {\n      // 定义要转移的金额和目标地址\n      const amount = 109; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    async sui_requestRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n          `sui:mainnet`,\n          `https://fullnode.mainnet.sui.io:443`\n      );\n      var data = {\n        method: \"suix_getBalance\",\n        params: [\n          \"0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae\",\n          \"0x168da5bf1f48dafc111b0a488fa454aca95e0b5e::usdc::USDC\",\n        ],\n      };\n\n      this.$emit(\"generateTransactionParams\", data, \"sui_testRpc\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 102; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signAndExecuteTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n      this.$emit(\"generateTransactionParams\", input, \"sui_signAndExecuteTransaction\")\n    },\n\n    /// generate txBytes and txSerialize\n    async generateTsBytesAndSerizlize(input) {\n      /// txBytes and txSerialize may be constructed in advance by the dapp side\n      let resultTuple = [\"\", \"\"];\n      if (\n          \"txBytes\" in input &&\n          input.txBytes.length > 0 &&\n          \"txSerialize\" in input &&\n          input.txSerialize.length > 0\n      ) {\n        resultTuple = [input.txBytes, input.txSerialize];\n      }\n\n      /// Otherwise, a transactionBlock parameter is required.\n      if (!(\"transactionBlock\" in input)) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      // if (this.walletAddress != \"connected\") {\n      //   alert(\"请先连接钱包\");\n      //   return new Promise((resolve) => {\n      //     resolve(resultTuple);\n      //   });\n      // }\n\n      let senderAccounts = window.provider.requestAccountsWithNamespace(\"sui\");\n      if (senderAccounts.length == 0) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      try {\n        let rpcUrl = getFullnodeUrl(\"mainnet\");\n        rpcUrl = \"https://www.okx.com/fullnode/sui/discover/rpc\"\n        const suiClient = new SuiClient({ url: rpcUrl });\n\n        /// sender is required\n        input.transactionBlock.setSender(senderAccounts[0]);\n        const result = await input.transactionBlock.build({\n          client: suiClient,\n        });\n        const txBytes = Buffer(result).toString(\"base64\");\n        const txSerialize = await SuiTransaction.from(txBytes).toJSON();\n        resultTuple = [txBytes, txSerialize];\n      } catch (error) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      return new Promise((resolve) => {\n        resolve(resultTuple)\n      })\n    },\n\n    //签名并发送交易\n    sui_signAndExecuteTransaction() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n        \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.testTransaction = JSON.stringify(input);\n      this.currentSuiTransaction = input;\n      this.currentSuiMethod = \"sui_signAndExecuteTransaction\";\n    },\n  },\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_getAccount()\">getAccount(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signMessage()\">signMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signPersonalMessage()\">signPersonalMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signTransaction2()\">signTransaction(Sui)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signAndExecuteTransaction()\">sendTransaction(Sui)</el-button>\n      <div style=\"font-size: 12px; color: gray;\">(send to Rally Tiger account)</div>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_requestRpc()\">RPC_getBalance</el-button>\n      <div style=\"font-size: 12px; color: gray;\">get USDC balance of address:</div>\n      <div style=\"font-size: 12px; color: gray\">0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae</div>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signTransaction_pre_execution()\">signTransaction(prepared data)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signAndExecuteTransaction_pre_execution()\">sendTransaction(prepared data)</el-button>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./SuiTransactionPanel.vue?vue&type=template&id=56a8eddf&scoped=true\"\nimport script from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./SuiTransactionPanel.vue?vue&type=style&index=0&id=56a8eddf&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-56a8eddf\"]])\n\nexport default __exports__","<script>\nimport { OKXStarknetProvider } from \"@okxconnect/universal-provider\";\nimport { CallData, uint256, RpcProvider, Account } from \"starknet\";\n\nexport default {\n  name: \"StarknetTransactionPanel\",\n  methods: {\n    async starknet_signMessage() {\n      this.address = this.getCurrentAddress()\n      if (this.address === \"\") {\n        alert(\"address can't be ''\");\n        return\n      }\n\n      let signData = this.signData\n      this.$emit(\"generateTransactionParams\", JSON.stringify(signData))\n      let provider = new OKXStarknetProvider(window.provider)\n      let res = await provider.signMessage(this.address, signData, \"starknet:mainnet\")\n      if (res.code) {\n        if (res.code == 301) {\n          let msg = \"Wallet address is registering, please try again later!\"\n          alert(msg)\n          this.$emit(\"generateTransactionResult\", msg, \"starknet_signMessage\")\n        }\n        this.$emit(\"generateTransactionResult\", res, \"starknet_signMessage\")\n        return\n      }\n      console.log(res)\n\n      const rpcProvider = new RpcProvider({ nodeUrl: \"https://free-rpc.nethermind.io/mainnet-juno/v0_7\" });\n      let pk = \"0x123\"; /// random pk\n      const account = new Account(rpcProvider, this.address, pk)\n      let that = this\n      account.verifyMessage(signData, res).then(function (isValid) {\n        that.$emit(\"generateTransactionResult\", \"verify:\" + isValid + \"\\n\" + res, \"starknet_signMessage\")\n      }).catch(function (error) {\n        that.$emit(\"generateTransactionResult\", \"failed:\" + error + \"\\n\" + res, \"starknet_signMessage\")\n      })\n    },\n\n    async starknet_sendTransaction() {\n      this.address = this.getCurrentAddress()\n      if (this.address === \"\") {\n        alert(\"address can't be ''\");\n        return\n      }\n\n      let val = uint256.bnToUint256(120000000000000000)\n      const transferCalldata = CallData.compile({\n        to: \"0x00b909cefa36ab6bc26f5887a867e46ef162238f0a171b1c2974b665afd4237f\",\n        value: val\n      })\n\n      // const ETHTokenAddress = \"0x049d36570d4e46f48e99674bd3fcc84644ddd6b96f7c741b1562b82f9e004dc7\"\n      // const STARKTokenAddress = \"0x04718f5a0fc34cc1af16a1cdee98ffb20c31f5cd61d6ab07201858f4287c938d\"\n      const DAITokenAddress = \"0x00da114221cb83fa859dbdb4c44beeaa0bb37c7537ad5ae66fe5e0efd20e6eb3\"\n\n      const invokeParams = {\n        calls: [\n          {\n            contract_address: DAITokenAddress,\n            entry_point: \"transfer\",\n            calldata: transferCalldata\n          }\n        ],\n      }\n\n      this.$emit(\"generateTransactionParams\", JSON.stringify(invokeParams))\n      let provider = new OKXStarknetProvider(window.provider)\n\n      let that = this\n      provider.sendTransaction(this.address, invokeParams, \"starknet:mainnet\").then(function(res){\n        console.log(\"starknet_sendTransaction result \", res)\n        that.$emit(\"generateTransactionResult\", res, \"starknet_sendTransaction\")\n      }).catch(function(error) {\n        if (error.code == 301) {\n          let msg = \"Wallet address is registering, please try again later!\"\n          alert(msg)\n          that.$emit(\"generateTransactionResult\", msg, \"starknet_sendTransaction\")\n        }else {\n          that.$emit(\"generateTransactionResult\", error, \"starknet_sendTransaction\")\n        }\n      });\n    },\n\n    getCurrentAddress() {\n      let provider = new OKXStarknetProvider(window.provider)\n      const address = provider.getAccount(\"starknet:mainnet\")?.address\n      return address\n    },\n\n    getPublicKey() {\n      let provider = new OKXStarknetProvider(window.provider)\n      const account = provider.getAccount(\"starknet:mainnet\")\n      console.log(\"获取到的account是：\")\n      console.log(account)\n      return \"05d8e5e9c1dd686246716c888159271d2f13986cb4acee46164e2c4e034629c0\"\n    }\n  },\n\n  data() {\n    const signData = {\n        \"domain\": {\n          \"chainId\": \"0x534e5f4d41494e\",\n          \"name\": \"STRKFarm\",\n          \"version\": \"1\"\n        },\n        \"message\": {\n          \"document\": \"app.strkfarm.xyz/tnc/v1\",\n          \"message\": \"Read and Agree T&C\"\n        },\n        \"primaryType\": \"Tnc\",\n        \"types\": {\n          \"StarkNetDomain\": [\n            {\n              \"name\": \"name\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"version\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"chainId\",\n              \"type\": \"felt\"\n            }\n          ],\n          \"Tnc\": [\n            {\n              \"name\": \"message\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"document\",\n              \"type\": \"felt\"\n            }\n          ]\n        }\n    }\n\n    return {\n      signData\n    }\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"starknet_signMessage()\">signMessage</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 验签不成功的话，请尝试连接VPN\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"starknet_sendTransaction(true)\">\n        sendTransaction\n      </el-button>\n\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 发送0.12个DAI到0x00b9...4237f的地址\n        </li>\n        <li>\n          2. 请保证你的钱包有足够的DAI\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./StarknetTransactionPanel.vue?vue&type=template&id=082fda2b&scoped=true\"\nimport script from \"./StarknetTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./StarknetTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./StarknetTransactionPanel.vue?vue&type=style&index=0&id=082fda2b&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-082fda2b\"]])\n\nexport default __exports__","<script>\n\n\nimport {OKXTronProvider} from \"@okxconnect/universal-provider\";\nimport {TronWeb} from \"tronweb\";\n\nexport default {\n  name: \"TronTransactionPanel\",\n  methods: {\n\n    async tron_signMessage() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessage(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n\n      const verify = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), res, provider.getAccount(\"tron:mainnet\").address)\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" + res, \"tron_signMessage\")\n    },\n\n    async tron_signMessageV2() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessageV2(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", res);\n      console.log(\"tron_signMessageV2_base58Address\", base58Address)\n      console.log(\"tron_signMessageV2_address\", provider.getAccount(\"tron:mainnet\").address)\n      const verify = base58Address === provider.getAccount(\"tron:mainnet\").address\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" +  res, \"tron_signMessage\")\n    },\n\n    async tron_signTransaction(isOnlySign) {\n      let provider = new OKXTronProvider(window.provider)\n        let tronWeb = new TronWeb({\n          \"fullHost\": 'https://api.trongrid.io',\n          \"headers\": {},\n          \"privateKey\": ''\n        })\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const transaction = await tronWeb.transactionBuilder.sendTrx(\"TGBcVLMnVtvJzjPWZpPiYBgwwb7th1w3BF\", 1000, address);\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let res = await provider.signTransaction( transaction, \"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", res, \"tron_signTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async getContract() {\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n      \n      try {\n        const contract = await tronWeb.trx.getContract(contractAddress)\n        const abi = contract.abi.entrys;\n        console.log(\"获取到的合约：\")\n        console.log(abi)\n      } catch (error) {\n        console.log(\"Error getting contract ABI:\", error);\n      }\n    },\n    \n    async tron_signAndSendTransactionContract(isOnlySign) {\n      // this.getContract()\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n      ]\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"quote(uint256,uint256,uint256)\", {}, parameter, address);\n      console.log(\"=====>transaction: \")\n      console.log(ret);\n      this.$emit(\"generateTransactionParams\", ret.transaction)\n      if (isOnlySign) {\n        let tx = await provider.signTransaction( ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async tron_signAndSendTransactionApprove(isOnlySign) {\n      let contractAddress = \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'address', value: contractAddress},\n        {type: 'uint256', value: 1000},\n      ]\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"approve(address,uint256)\", {}, parameter, address);\n\n      let transaction = ret.transaction\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let tx = await provider.signTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n\n    }\n\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessage()\">tron_signMessage</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessageV2()\">tron_signMessageV2</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(true)\">\n        tron_signTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(true)\">\n        tron_signTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(true)\">\n        tron_signTransaction(Approve)\n      </el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(false)\">\n        tron_signAndSendTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(false)\">\n        tron_signAndSendTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(false)\">\n        tron_signAndSendTransaction(approve)\n      </el-button>\n    </el-col>\n\n\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./TronTransactionPanel.vue?vue&type=template&id=55a13ab0&scoped=true\"\nimport script from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./TronTransactionPanel.vue?vue&type=style&index=0&id=55a13ab0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-55a13ab0\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=46dad1a2&scoped=true\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=46dad1a2&scoped=true&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-46dad1a2\"]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\nimport App from './App.vue'\n\nconst app = createApp(App)\n\napp.use(ElementPlus)\napp.mount('#app')","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkokxconnectdemo\"] = self[\"webpackChunkokxconnectdemo\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(27526); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["require","Object","defineProperty","exports","value","AptosUtils","getTransaction","o","transaction","rawTransaction","payload","entryFunction","typeArgs","type_args","typeArguments","Array","forEach","typeTag","push","toString","realArguments","this","getTypeArguments","args","i","arguments","function","module_name","address","data","name","identifier","function_name","type","type_arguments","getArguments","array","j","length","y","values","subArray","dealArrayElements","e","Uint8Array","t","isArray","r","n","assign","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","rejected","result","done","then","apply","OKXAptosProvider","buffer_1","AptosUtils_1","core_1","constructor","provider","chainsSet","Set","getConnectedNamespace","defaultNetwork","network","requestDefaultChainWithNamespace","NameSpaceKeyAptos","currentChainId","getRealChainId","chainId","size","Error","_a","_b","_c","session","namespaces","chains","chain","add","getAccount","_d","_e","_f","_g","_h","_j","account","accounts","filter","startsWith","logDebug","accountArray","split","console","log","extra","publicKey","undefined","substring","signMessage","realChain","prefix","message","nonce","fullMessage","application","window","location","protocol","hostname","buffer","Buffer","from","hex","bufferToHex","injectParams","signedMessage","request","successData","signStr","slice","signature","error","signTransaction","tx","signAndSubmitTransaction","buf","OKXAptosProvider_1","enumerable","get","CONNECT_METHOD_BATCH_FETCHMSG","CONNECT_METHOD_FETCHMSG","CONNECT_METHOD_RECEIVE","CONNECT_METHOD_UNSUB","CONNECT_METHOD_SUB","CONNECT_METHOD_PUBLISH","CONNECT_METHOD_LOGIN","CONNECT_METHOD_PUSH","__createBinding","create","m","k","k2","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","__setModuleDefault","v","__importStar","ownKeys","getOwnPropertyNames","ar","prototype","hasOwnProperty","call","mod","OKXWalletConnector","constants_1","storageconstants_1","storage_1","utils_1","utils_2","eventemitter3_1","protocol_1","report_1","WS","resolveWebSocketImplementation","url","events","EventEmitter","state","ConnectorState","InitState","selectedUrlIndex","retryCount","timeOutLimit","checkWSUrl","heartbeatTimer","connectionTimeoutTimer","connectURLStorage","Storage","OKXCONNECTOR_CACHE_KEY","connecting","Connecting","onPayload","rsp","Date","now","emit","onClose","event","socket","code","onError","id","msg","onopen","onmessage","onclose","Connected","emitError","errorEvent","heartbeat","clearTimeout","OnError","readyState","WebSocket","OPEN","send","setTimeout","bind","tryRegistOpen","logError","registOpen","inRetry","toUTCString","URLSearchParams","startTimeOutTimer","hasBuiltInWebSocket","onerror","close","on","resetTimeOutTimer","OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE","FINISHED","checkMaxRetry","OKXCONNECTOR_WS_URL_LIST","connectionTryNext","nextUrl","getNextSelectUrl","CANCELED","pendingSocket","TIME_OUT","reportEvent","OKXReportType","LOG","cacheSuccessUrlSelect","saveContent","onVisibleChanged","document","visibilityState","once","err","OKXConnectError","OKX_CONNECT_ERROR_CODES","CONNECTION_ERROR","connect","removeEventListener","addEventListener","disconnect","Disconnected","currentStatus","addListener","decrypt","success","failed","splitCheckComplete","listenPayloadHandler","removeListener","parsedEvent","safeJsonParse","params","rawMsg","skipMsg","checkResult","isSplitPackage","finalMessage","failHandler","addPackageParse","callback","payloadHandler","param","listener","off","doLogin","safeJsonStringify","getMsgPayloadFromHistory","tmpMsg","jsonstr","onOpen","openHandler","ConnectionManager","connect_1","commands_1","jwtconstants_1","crypto_1","jwt_1","safejson_1","log_1","url_1","connectionSplitPackages_1","appname","splitManager","ConnectionSplitPackages","connectStorage","OKXCONNECTOR_CACHE_KEY_DAPP","crypto","SessionCrypto","inTMA","isInTMA","reportLog","keyPairInfo","getCachedCryptoKeyPair","jwtKeyPair","getCachedJWTKeyPair","saveJWTKeyPair","connector","OKXCONNECTOR_WS_URL_1","packageId","connectedWalletPK","currentTopic","refreshPackageId","nowDate","saveCryptoKeyPair","keyPair","cacheInfo","encryptStoreMsg","OKXCONNECTOR_CRYPTO_KEY","kp","getAndDecrypt","content","clearCache","strkeyPair","toHexString","secretKey","OKXCONNECTOR_JWT_KEY","strKeyPairInfo","hexToByteArray","generateKeyPair","isWalletPKReady","makeJWT","topic","signJWT","OKXCONNECTOR_JWT_SIDE","OKXCONNECTOR_JWT_TTL","parsePackage","input_1","input","ignoreACK","_k","_l","_m","_o","sendACK","getItem","OKXCONNECTOR_TOKEN_CACHE","inputObj","messageId","msgPlayloadObject","tryParseMessageSplitPayload","msgObject","topicId","messageObject","publishedAt","onReceivedPackageCheck","completeMessageIdList","msgId","sendReceive","restoreConnect","getConnectInfo","generateTopic","info","channelId","clientId","stringifyKeypair","fromRestore","timeLog","getTime","lastConnectId","cachedSenderPublicKey","OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE","jwtToken","timeOne","timeF","sendFetchAndConsumeMessages","init","sendRaw","timeTh","catch","jsonrpc","CONNECT_JSONRPC_VER","method","token","replace","parsedMessage","updateProtocolVersion","protocolVersion","updateTopicSenderVersion","fail","msgObj","trimStart","inputDataObj","msgResult","ttl","OKXCONNECTOR_MESSAGE_TTL","sendEncryptedMsg","topic_1","encryptedMsg_1","encryptedMsg","msg_1","encrypt","sendSplitPackages","msgId_1","success_1","reason","fetchedMessages","hasMore","receivedMsgs","timeFive","cleanCache","saveSessionContent","key","OKXCONNECTOR_SESSION_PREFIX_KEY","jsonData","getSessionContent","jsonStr","object","getCurrentConnectionReady","__importDefault","localforage_1","ConnectionSplitSupportedVersionLimit","ConnectionSplitSupportedSizeLimit","ConnectionReceiveKey","ConnectionSendKey","ConnectionTopicVersionKey","side","splitMessageSendArray","Map","splitMessageReceivedArray","splitMessageSenderVersionMap","splitPackageCache","default","createInstance","OKXCONNECTOR_STORAGE_PROTOCOL_CACHE","sendRawMsg","recoverFromCache","payloadList","entries","splice","syncCache","messageObj","protocol_version","protocolMessageObject","package_group_id","set","sendMsg","senderVersion","msgLength","msg_parts","msg_part_length","groupId","generateGroupId","splitMessagePackages","map","index","total_count","package_index","mergePackageArray","completeMap","inputTopic","itemList","item","messageCache","index_check","sort","a","b","messageList","reduce","msgList","messageIdList","msgIdList","join","receivedList","includes","isSending","inputPayloadArray","inputSendArray","filtedArray","accept","sendCacheArray","cachedPayload","sendArray","concat","inputReceiveArray","receiveCacheArray","receiveArray","setItem","rec_array","send_array","CONNECT_PROTOCOL_VER","OKXCONNECTOR_WS_URL_IDX_KEY","OKXCONNECTOR_WS_URL_3","OKXCONNECTOR_WS_URL_2","EVENT_EMITTER_MAX_LISTENERS","OKXCONNECTOR_PROTOCOL_VERSION","Engine","iconnector_1","connectionManager_1","sessionUtils_1","wallet_info_1","appName","connectors","useConnector","connectionManager","addConnectionListener","getConnector","setAccountChangeListener","accountChangeListener","registerConnector","setConnectionManager","hasWsConnector","isWsConnector","getTag","OKX_TG_WALLET","OKX_APP_WALLET","isInjectedConnector","OKX_INJECT_WALLET","universalConnect","sessionConfig","connectInfoAndUrl","JSON","stringify","universalRequest","connectInfo","requestId","openUniversalLink","openUniversalUrl","universalConnectRequest","protocolVer","Number","tonConnectSdkVersion","dAppInfo","dappInfo","requests","redirect","base64Encoded","encodeConnectParams","openOKXLink","getOKXLink","useMini","tmaReturnUrl","openMethod","openWallet","connectRequest","openOKXTMAWalletlinkWithFallback","useShortLink","openOKXUniversalLink","openOKXDeeplinkWithFallback","isIOS","isIos","addOnConnectResultListener","response","connectResponse","buildNameSpacesByConnectResponse","UNKNOWN_ERROR","walletName","responses","wallet","tag","OKXWalletName","OKXMiniWalletName","OKXInjectWalletName","find","methodsResponse","connectRequestMethods","signResponse","maxProtocolVersion","setUseConnector","sendSession","connectResultListener","setOnConnectResultListener","engineConnectInfo","requestAnswer","clearData","addDisconnectListener","disconnecter","getTagByappName","setConnectConnector","setSessionConnectingListener","sessionConnectingListener","restoreconnect","sessionInfo","onConnectResult","restoreconnectFromTopic","namespaceKeys","connectManagerDisconnect","jsonResponse","WalletConnectionManager","walletConnectionManager_1","engine_1","MULTICODEC_ED25519_LENGTH","MULTICODEC_ED25519_HEADER","MULTICODEC_ED25519_BASE","MULTICODEC_ED25519_ENCODING","DID_METHOD","DID_PREFIX","DID_DELIMITER","KEY_PAIR_SEED_LENGTH","DATA_ENCODING","JSON_ENCODING","JWT_ENCODING","JWT_DELIMITER","JWT_IRIDIUM_TYP","JWT_IRIDIUM_ALG","JWTHeaderType","decodeJSON","encodeJSON","encodeIss","decodeIss","encodeSig","decodeSig","encodeData","decodeData","encodeJWT","decodeJWT","verifyJWT","ed25519","tweetnacl_1","stringUtils_1","sign","str","okxtoString","okxfromString","val","publicKeyStr","issuer","multicodec","bytes","encoded","header","jwt","sub_1","aud_1","ttl_1","keyPair_1","sub","aud","iat","Math","floor","alg","typ","iss","exp","act","detached","verify","OKXCONNECTOR_JWT_WALLET_SIDE","buildRequestAccountNameSpacesByConnectResponse","buildAccountNameSpaces","requestAccountNameSpaces","universalResponse","filterAccount","namespace","ton_addr","tonAddress","tonProof","ton_proof","addresses","methods","addressItem","addressArr","utils_3","crypto_js_1","subKey","beforeKey","localStorage","resolveLocalStorage","checkAndUpgradeCache","storeKey","cipherIV","cacheStr","cacheKey","cache","cacheObj","fromCacheKey","toCacheKey","removeItem","timestamp","saveItem","localKey","totalCacheStr","getCachedPBKDF2InfoKey","pwLen","saltLen","pw","iv","salt","OKXCONNECTOR_STORAGER_CRYPTO_SALT","randomBytes","OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD","OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV","ivBuffer","PBKDF2","iterations","storeInfo","AES","enc","Utf8","OKXCONNECTOR_STORAGE_CIPHER_METHOD","OKXCONNECTOR_TON_KEY","WalletConnectionManagerEvent","WalletConnectionManagerTopicInfoCacheKey","RECEIVE_REQUEST","walletConnectionConstants_1","communicateEvents","sessionCryptoInfoMap","inLogin","isLogined","offset","isTopicPublicKeyExist","timestampStr","parseInternalMsg","internalMsg","internalObj","origin","originContent","base64decode","updateClientId","cid","lastCheck","getLastSixMd5Hash","dappPublicKey","syncCacheSessionInfo","_p","_q","_r","_s","ignoreReceive","isInternalData","inner_message","inner_topic","decryptWallet","sessionInfoString","base64Content","inner_connection","toObject","recovrySessionInfoFromCache","cacheMap","topicItem","cryptoItem","cryptoKeyPair","cacheSessionInfo","sync","duplicatedTopics","delete","appendTopic","sessionPublicKey","subscribeTopics","confirmAppendingTopics","keys","getSessionPublicKey","getCurrentCachedTopicIdList","needPublicKey","useRaw","connectedDappPK","cryptoObject","useCrypto","encryptWallet","messageStr","sendUnsubscribe","sendBatchFetchAndConsumeMessages","topicIdList","topics","withInternalData","finishCount","idx","AppwalletConnector","ws_connector_1","WsConnector","super","walletNameKey","shortUniversalLink","appConnectEncodeParams","appDeepLink","getAppWalletDeepLink","isOS","openDeeplinkWithFallback","stackDeepLink","openLinkBlank","standardUniversalLink","OkxwalletInjectConnector","TgwalletConnector","InjectConnector","appwallet_connector_1","inject_connector_1","tgwallet_connector_1","okxwallet_inject_connector_1","SolProvider_1","AptosProvider_1","media_1","TONProvider_1","inject_1","sui_provider_1","disconnectListener","providerMap","accountChangedEVMHandler","accountChangedSolanaPublicKeyHandler","accountChangedTONHandler","disconnectHandler","enable","NameSpaceKeyEip155","Eip155Provider","NameSpaceKeySOL","SolProvider","AptosProvider","NameSpaceKeyTON","TONProvider","NameSpaceKeySui","SuiProvider","getInjectProvider","nameSpace","mapKey","BAD_REQUEST_ERROR","okxwallet","requestAccounts","version","getVersion","platform","navigator","appVersion","responseItem","required","requiredNamespaces","optional","optionalNamespaces","needPop","signalChain","isDevice","singleItem","singleProvider","getAccountByRequestWallets","getRequestId","newRequest","onAck","checkWalletMatch","injectProvider","USER_REJECTS_ERROR","errorResponse","CHAIN_NOT_SUPPORTED","sessionLocal","WALLET_NOT_SUPPORTED","checkAccountChanged","getRequireNameSpaceFromSession","resultNameSpace","compareAndModifyNamespaces","nameSpaces1","nameSpaces2","isAccountsSame","ns1","ns2","areAccountsSame","_","allReady","every","namespaceKey","connectReady","toJSON","namespacesKey","connectWalletNameSpace","aptosChains","chainStr","aptosChain","replaceChainNameToChainId","ton_proof_result_Item","proofItem","proof","allEqual","accountsItem","sessionAccounts","areEqual","aptosAdd","isAccountChange","walletInfo","accountResult","walletInfoItem","connectWallet","requestWallets","allNameSpace","eventkey","walletInfoFirst","hasTON","itemResult","parseConnectResponse","cheeckRequire","requireItem","resultSel","resultItem","hasChainAdd","addItem","configEventWithKey","solana","sui","okxTonWallet","tonconnect","encodeTGParams","encodeTWAConnectURLParams","tgUrl","getTelegramWalletTWAUrl","pendingRequests","getDefaultReporter","beginReport","handleResponse","bindRequestForPromise","clear","nonceLength","sessionKeyPair","createKeypairFromString","createKeypair","box","createNonce","receiverPublicKey","encodedMessage","TextEncoder","encode","encrypted","concatInfo","concatUint8Arrays","hexResult","encodedResult","base64encode","senderPublicKey","messageByteArray","toUint8Array","internalMessage","splitToUint8Arrays","decrypted","open","TextDecoder","decode","__exportStar","p","hasOKXInjectedProvider","getWindowProviderNamespace","providerSearch","property","path","_provider","SuiMethods","TONMethods","AptosMethods","SOLANAMethods","Eip55Methods","InjectUtils_1","aptos","hash","METHOD_NOT_SUPPORTED","accountChange","connectRequestWalletResponse","connectChain","selectedAddress","coinType","namespaceChainId","nameSpaceResponse","bs58_1","bufferResult","injectResult","allResult","signAllTransactions","signAndSendResult","signAndSendTransaction","signalChainConnectResult","tonParams","resultMe","getChainId","tonResult","tonItem","manifestUrl","itmes","items","needProof","restoreConnection","ethParams","typedDataJson","switchChainId","parseInt","resultSwitch","chainHex","currentChain","getSuiPublicKey","suiAccount","suiPublicKey","getSuiWallet","originalRarams","injectSignResult","features","signTransactionBlock","injectSendResult","signAndExecuteTransactionBlock","digest","injectPersonalResult","signPersonalMessage","TON_CHAINS","COSMOS_CHAINS","APTOS_CHAINS","SUI_CHAINS","SOLANA_CHAINS","BTC_CHAINS","MAINNET","FRACTAL","TESTNET","SONIC_TESTNET","COSMOS_MAINNET","IEngine","ISignClient","ISignClientEvents","IEngineEvents","client","creatOKXInjectWalletInfo","creatOKXMiniAppWalletInfo","creatOKXWalletInfo","getBigIntRpcId","formatJsonRpcRequest","isJsonRpcError","isJsonRpcResponse","parseConnectionError","isHttpUrl","formatJsonRpcError","json_rpc_1","isJsonRpcPayload","isJsonRpcRequest","isJsonRpcResult","payloadId","formatJsonRpcResult","isReservedErrorCode","getError","getErrorByCode","formatErrorMessage","isWsUrl","okx_connect_error_1","IncrementalRandomGenerator","bits","Uint16Array","Uint32Array","initialValue","getNextValue","uint8Generator","uint16Generator","date","BigInt","RESERVED_ERROR_CODES","STANDARD_ERROR_MAP","DEFAULT_ERROR","match","INTERNAL_ERROR","SERVER_ERROR","getUrlProtocol","matches","RegExp","matchRegexProtocol","regex","test","CONNECT_ITEM_ERROR_CODES","TONCHAIN","connect_wallet_1","connect_event_1","getTestTwaUrl","okxTesttwaUrl","getTestTgTwaUrl","okxTestTgtwaUrl","getBotNameAndAppName","urlObj","URL","pathnameParts","pathname","Boolean","botName","OKX_MINI_WALLET_NAME","OKX_APP_WALLET_NAME","tgwalletAppName","tgwalletName","standardDeeplink","downloadUrl","okxDeeplink","SERVER_ERROR_CODE_RANGE","INVALID_PARAMS","METHOD_NOT_FOUND","INVALID_REQUEST","PARSE_ERROR","getDefaultMessageByCode","setPrototypeOf","ALREADY_CONNECTED_ERROR","NOT_CONNECTED_ERROR","UNKNOWN_APP_ERROR","USER_REJECTS_ERROR_CAUSE_REGISTER","NameSpaceKeyStarknet","NameSpaceKeyTron","NameSpaceKeyCosmos","NameSpaceKeyBtc","misc_1","chains_1","callForSuccess","fn","options","attempts","delayMs","lastError","delay","timeout","signal","aborted","timeoutId","chainName2IdMap","replaceChainIdToChainName","checkMetaData","versionCompare","isBrowser","isMobileUserAgent","openLink","toSafeBase64FromBase64","isValidObject","getAppWalletShortDeepLink","encodeTelegramUrlParameters","isTelegramUrl","openOKXDeeplink","getUniversalLink","logWarning","call_for_success_1","web_api_1","tma_api_1","request_1","debug","forceReport","defaultReporter","OKXReporter","packageJson","okxLogDebug","sendRecordContent","warn","action","content_1","mediaNotTouch","mediaTouch","maxWidth","media","mediaMin","mediaMax","mediaMinMax","device","getWindow","isTmaPlatform","width","innerWidth","tablet","mobile","isMobile","isTelegram","TelegramWebviewProxy","maxTouchPoints","px","pxMin","pxMax","OKXReportSide","versionStr","cross_fetch_1","reportApiList","reportCacheKey","reportUUIDKey","MAX_LIMIT_REPORTCOUNT","DEFAULT_HTTP_HEADERS","Accept","DEFAULT_HTTP_METHOD","DEFAULT_FETCH_OPTS","headers","PAGE_IN","PAGE_OUT","CLICK","DAPP","WALLET","fetchListWithTimeout","urls_1","args_1","urls","controller","AbortController","fetchPromise","timeoutPromise","abort","race","ok","status","currentSide","currentVersion","storage","recordList","currentUUID","configVersionAndSide","recordCacheKey","reportPlatform","startErrorCatching","records","uuid","sendCachedRecords","cachedErrors","sendRecord","record","body","res","language","ua","userAgent","reportItem","lang","markRecordItem","sendList","allSettled","results","keepIndex","markRecord","Report_WalletType_Key","Report_Proceed_QRCode_Click","Report_ChooseType_Download_Click","Report_ChooseType_ConnectWallet_Click","Report_Proceed_Retry_Click","Report_ChooseType_ConnectWallet_View","Report_Loading_ConnectWallet_View","Report_Proceed_QRCode_View","Report_Proceed_Proceed_View","dappMetaData","icon","JSONStringify","JSONParse","json","numbersBiggerThanMaxInt","serializedData","group","parse","isCustomFormatBigInt","alloc","allocUnsafe","basics_1","string","encoding","base","BASES","decoder","encoder","createCodec","ascii","bufNum","String","fromCharCode","charCodeAt","utf8","bases","base16","latin1","binary","inTg","isInTelegramBrowser","sendExpand","sendOpenTelegramLink","initParams","locationHash","urlParseHashParams","tmaPlatform","tgWebAppPlatform","Telegram","WebApp","webAppVersion","tgWebAppVersion","platforms","isTelegramWebview","TelegramWebview","postEvent","link","fallback","pathFull","search","isIframe","versionAtLeast","path_full","parent","eventType","eventData","external","notify","trustedTarget","postMessage","indexOf","_path","urlSafeDecode","qIndex","pathParam","substr","query_params","urlParseQueryString","urlencoded","decodeURIComponent","queryString","paramName","paramValue","queryStringParams","v1","v2","p1","p2","v1List","v2List","max","ver","removeUrlLastSlash","addPathToUrl","constants_2","deeplinkUrl","useStandardUniversalLink","deeplinkEncodeUrl","encodeURIComponent","fullUrl","isInIOSLine","href","deepLinkOpened","timeoutDuration","newWindow","fallbackToDownloadPage","isInIOSLark","isInIOSWeChat","count","interval","setInterval","hidden","clearInterval","parameters","encodedParameters","connectRequestWithVersion","connectRequestStr","utf8Array","btoa","connectParam","redirectStr","okxconnect","extraparams","fromtg","base64ContentStr","urlSafeBase64","twaDeepLink","openTelegramLink","RANDOM_LENGTH","hasLocalStorage","hashKey","generateRandomBytes32","tweetnacl_util_1","to_string_1","sha256_1","BASE16","hexString","byteArray","byte","buffer1","buffer2","mergedArray","subArray1","subArray2","encodeUint8Array","urlSafe","encodeBase64","decodeToUint8Array","decodeBase64","uint8Array","decodeUTF8","decodedUint8Array","encodeUTF8","scheme","global","self","randomBytes32","obj","getPrototypeOf","inLine","isIOSDevice","MSStream","isIPadOS","MD5","base64","getUserAgent","ua_parser_js_1","target","doFallback","fallbackTimeout","check","vendor","opera","getResult","osName","os","toLowerCase","deviceModel","model","browserName","browser","OKXSolanaProvider","web3_js_1","defaultChainMap","has","caip","SOON_MAIN_NET_CAIP","SOON_TEST_NET_CAIP","ECLIPSE_MAIN_NET_CAIP","SOON_MAIN_NET_ID","SOON_TEST_NET_ID","ECLIPSE_MAIN_NET_ID","realMessage","Transaction","VersionedTransaction","deserialize","pubkey","PublicKey","serializedMessage","serialize","requireAllSignatures","verifySignatures","getSignedTransaction","transactions","newTransactions","s","c","transactionStr","resultTx","OKXSolanaProvider_1","OKXSuiProvider","universal_provider_1","transactions_1","client_1","suiClient","rpcUrl","getFullnodeUrl","suiProvider","rpcMap","SuiClient","txBytes","txSerialize","generateTsBytesAndSerizlize","ret","transactionBlockBytes","errorData","signAndExecuteTransaction","confirmedLocalExecution","b64encoded","atob","messageBytes","resultTuple","senderAccounts","requestAccountsWithNamespace","transactionBlock","setSender","build","toBase64","OKXSuiProvider_1","OKXBtcProvider","_1","getAddressForChainId","ns","checkChainId","sendBitcoin","toAddress","satoshis","to","feeRate","txhash","checkParameters","signPsbt","psbtHex","signPsbts","psbtResults","psbtHexs","signAndPushPsbt","sendInscription","inscriptionId","extension","coinId","protocolId","atomicSuffix","ordinalsSuffix","endsWith","removeSuffix","scenario","txType","batchBean","coinAmount","nftId","sendRunes","runeid","amount","fromAddress","inscribeTransfer","ticker","suffix","unexistKeys","OKXCosmosProvider","algo","bech32Address","pubKey","hexToUint8Array","signArbitrary","signerAddress","signDoc","chain_id","account_number","sequence","fee","gas","msgs","memo","signData","signAmino","signOptions","resData","signed","signDirect","bodyBytes","authInfoBytes","accountNumber","messageToBuffer","arr","output","x","padStart","arrayBuffer","byteValue","isNaN","OKXStarknetProvider","STARKNET_CHAIN_ID","getChain","typedData","sendTransaction","transactionData","transaction_hash","signMessageDeclareContractPayload","sendMessageExecuteTransactionDetail","calls","abis","transactionsDetail","executionRequest","OKXTonProvider","statusChangeSubscriptions","statusChangeErrorSubscriptions","tonWallet","errorsHandler","connected","tonNameSpace","walletStateInit","sessionWallet","tonDeviceInfo","connectItems","onStatusChange","requestParams","OKXTronProvider","TRON_CHAIN_ID","stringToHex","signMessageV2","signedTx","realSignTx","visible","txID","rawData","contract","raw_data","expiration","ref_block_bytes","fee_limit","ref_block_hash","raw_data_hex","OKXUniversalProvider","eip155_1","sui_1","core_2","namespaces_1","solana_1","btc_1","aptos_1","ton_1","cosmos_1","tron_1","packages_1","provider_1","starknet_1","opts","setGlobal","okxConnectUniversalinwindow","initialize","providerOpts","rpcProviders","requestParam","buildRequestParamFromRequest","getProvider","validateChain","keyArr","connectOpts","called","onRequestSent","disconnectAndEmit","cleanup","engine","replaceNamespace","aptosNameSpace","realNS","replaceNamespaceInner","optionAptosNameSpace","realOptionNS","defaultChain","replaceSessionAptos","disconnectInner","connectAndSign","signRequest","updatedOpts","setNamespaces","onConnect","requestItem","signResponseList","okxConnectUniversalUIinwindow","creatNotSupportMethodItemReplay","syncAllAddresses","syncAddressAvailable","syncAllAddress","setDefaultChain","checkStorage","sessionInfoStr","getFromStore","createProviders","registerEventListeners","SignClient","providersToCreate","parseNamespaceKey","namespacesValue","currentNameSpace","opts1","solanaProvider","sonicProvider","svmProvider","soonProvider","eclipseProvider","optsTon","tonProvider","optsSui","optsBtc","btcProvider","fbProvider","aptosProvider","moveProvider","cosmosProvider","tronProvider","starknetProvider","PROVIDER_EVENTS","DEFAULT_CHAIN_CHANGED","caip2ChainId","onChainChanged","UPDATE_NAMESPACES","nameSpaces","nameSpacekey","persist","isChainNamespaceInSession","chainsArr","defaultNamespace","getDefaultChain","namespaceStr","caip2Chain","sessionProperties","showRequestModal","listenerCount","OKXUniversalProvider_1","OKXBtcProvider_1","OKXCosmosProvider_1","OKXTonProvider_1","OKXTronProvider_1","OKXStarknetProvider_1","ConnectMethodUtils_1","metaData","requestAccountItem","nameSpaceToConnectWalletNameSpace","SESSION_CONNECTING","connectMethodsToConnectWalletMethods","metadata","fillParamsToSession","connectMethodsResponseUpdate","openOKXWallet","allAddressStr","syncResoonseToRequire","connectSupportMethods","connectMethodsAdaptOldVersion","isRecord","notSupportError","errorItem","callBackParams","solAccount","account1","solAddress","fromAccountToAddress","encodeMessage","suiMessage","convertedArray","btcAccounts","account2","btcAccount","btcAddress","paramData","aptosAccount","account3","aptosAddress","aptosChainId","cosmosAccount","account_cosmos","cosmosAddress","cosmosData","cosmosBase64Encoded","methodItem","solanaSuccessData","suiMethod","requestMethod","suiMessageb64","aptosSignature","requireNameSpace","includeEip155","some","space","syncAddressHostAvailable","includeChain","paramsArr","firstParam","firstObj","aptosParams","currentURL","signChainId","applicationUrl","cosmosChain","responseAddressStr","allAddress","isEvm","deriveName","addr","ci","evmAddress","freeze","getAccountsChains","isCaipNamespace","mergeRpcMap","targetRpcMap","sourceRpcMap","mergeNamespaces","source","fixMobileBtcSession","btcNameSpace","addressType","compressedPublicKey","GENERIC_SUBPROVIDER_NAME","RPC_URL","STORAGE","CONTEXT","WC_VERSION","PROTOCOL","RELAY_URL","LOGGER","JsonRpcConnection_1","JsonRpcProvider_1","httpProviders","createHttpProviders","updateNamespace","getAccounts","setHttpProvider","http","parsedChainId","parsedRpc","getRpcUrl","httpProvider","createHttpProvider","getHttpProvider","rpc","JsonRpcProvider","JsonRpcConnection","getGlobal","BtcProvider","CosmosProvider","updateRequestParams","isDic","decimalNumber","selectedChainId","chainNum","paramsChainId","paramsChainString","adaptArray","addressObj","isEqual","chainAddress","messages","secondObj","hexChainId","getHexChainIdFromRequest","isChainApproved","configAddressAdaptInjectWallet","handleSwitchChain","addEthereumChain","resultData","rpcUrls","eip155","disableProviderPing","isAvailable","registering","register","parseError","types_1","IJSONRpcProvider","connection","hasRegisteredEventListeners","setConnection","context","requestStrict","_error","SolanaProvider","getPubkey","getWalletAddress","components","StarknetProvider","__rest","getOwnPropertySymbols","propertyIsEnumerable","validUntil","newParams","boc","TronProvider","IJSONRpcConnection","opt","globals","convertChainIdToNumber","parseChainId","mergeArrays","projectId","reference","CAIP_DELIMITER","okxGlobal","_createElementBlock","_hoisted_1","_createVNode","_component_el_container","_withCtx","_component_el_header","_cache","_createTextVNode","_component_el_main","_component_el_card","class","_createElementVNode","style","_component_el_row","_component_el_col","span","_toDisplayString","$options","_ctx","_component_el_checkbox","modelValue","withUI","$event","onChange","handleWithUI","universalToTG","handleUniversalToTG","_component_el_select","modals","placeholder","handleModalsSelect","multiple","_component_el_option","label","returnStrategy","handleReturnStrategySelect","_Fragment","_renderList","returnStrategies","strategy","_createBlock","_component_el_input","deeplink","handleReturnStrategyDeeplink","disabled","_createCommentVNode","handleLanguageSelect","locales","locale","theme","handleThemeSelect","THEME","LIGHT","DARK","selectedMethod","handleConnectMethodsSelect","connectMethods","tonProofValue","gutter","align","availableChains","checked","areChainsInit","isOptionalChecked","handleOptionChange","_component_el_button","onClick","initBtnClicked","connectInitStr","testTonConnect","connectTonStr","connectBtnClicked","connectStatusStr","syncAllAddressClick","syncAllAddressStr","disconnectAction","walletAddress","disconnectStatusStr","_Teleport","showModal","closeModal","_withModifiers","_component_qrcode_vue","qrValue","level","_component_el_tabs","activeTab","onTabClick","clickActiveTab","_component_el_tab_pane","eth_requestAccounts","eth_chainId","wallet_switchEthereumChain","wallet_addEthereumChain","personal_sign","eth_signTypedData_v4","eth_sendTransaction_transfer","eth_sendTransaction_approve","eth_sendTransaction_mint","wallet_watchAsset","oversized_personal_sign","ton_getAccount","ton_sendTransaction","sol_signMessage","sol_signTransaction","sol_signVersionedTransaction","sol_signAllTransactions","sol_signAllVersionedTransactions","sol_signAndSendTransaction","sol_signAndSendVersionedTransaction","_component_SuiPanel","onGenerateTransactionParams","sui_generateTransactionParams","_component_BTCPanel","btc_generateTransactionParams","_component_FractalPanel","fractal_generateTransactionParams","_component_TronTransactionPanel","tron_generateTransactionParams","onGenerateTransactionResult","tron_getTransactionResult","aptos_signMessage","aptos_signTransaction","aptos_signAndSubmitTransaction","cosmos_signArbitrary","cosmos_signAmino","cosmos_signDirect","Polygon_RPCRequest","eth_sendTransaction_swap","move_signTransaction","move_signAndSubmitTransaction","_component_StarknetPanel","ref","starknet_generateTransactionParams","starknet_getTransactionResult","testBase64UrlSafe","xs","sm","handleRedirectSelect","canChainAddRedirectParam","redirectDeeplink","handleRedirectDeeplink","addRedirectParam","testTransaction","rows","testboc","$setup","sendBtnDisabled","testTransactionStr","btc_getAccount","btc_signMessage","sendAmount","clearable","btc_send","sendSatoshisAmount","btc_sendBitcoin","btc_signPsbt_up","btc_signAndPushPsbt_up","receiver","btc_sendInscription","runsAddress","runsId","runsAmount","btc_sendRunes","intTicker","intAmount","btc_inscribeTransfer","props","setup","$emit","alert","autoFinalized","__exports__","fractal_getAccount","fractal_signMessage","fractal_send","fractal_sendBitcoin","fractal_signPsbt_up","fractal_signAndPushPsbt_up","fractal_sendInscription","fractal_sendRunes","fractal_inscribeTransfer","sui_getAccount","sui_signMessage","sui_signPersonalMessage","sui_signTransaction2","sui_signAndExecuteTransaction","sui_requestRpc","sui_signTransaction_pre_execution","sui_signAndExecuteTransaction_pre_execution","recipientAddress","SuiTransaction","coin","splitCoins","transferObjects","showEffects","currentSuiTransaction","currentSuiMethod","starknet_signMessage","starknet_sendTransaction","getCurrentAddress","rpcProvider","RpcProvider","nodeUrl","pk","Account","that","verifyMessage","isValid","uint256","bnToUint256","transferCalldata","CallData","compile","DAITokenAddress","invokeParams","contract_address","entry_point","calldata","getPublicKey","tron_signMessage","tron_signMessageV2","tron_signTransaction","tron_signAndSendTransactionContract","tron_signAndSendTransactionApprove","tronWeb","TronWeb","trx","base58Address","verifyMessageV2","isOnlySign","transactionBuilder","sendTrx","getContract","contractAddress","abi","entrys","parameter","triggerSmartContract","verifyADR36Amino","fromBech32","VConsole","allChains","chainsThatCanAddRedirectParam","optionChains","selectedModals","selectedReturnStrategy","selectedDeepLink","selectedLanguage","selectedTheme","TronTransactionPanel","QrcodeVue","BTCPanel","FractalPanel","SuiPanel","StarknetPanel","testTopic","testPublicKey","testProofPayload","pendingDeepLink","logList","localPubKey","localSecKey","selectedChain","ProofPayloadVerify","showVerifyRow","selectedMethodData","isChecked","reload","starknetPanelTypedData","computed","selectedChains","initChains","newChains","updatedChains","tab","tabName","testTon","openModal","initCall","OKXTonConnectUI","actionsConfiguration","uiPreferences","OKXUniversalConnectUI","onModalStateChange","uri","isPC","testTonSdk","blockExplorerUrls","chainName","nativeCurrency","symbol","decimals","requestEVMAccountWithSession","evmNameSpace","dataETH","dataPolygon","types","EIP712Domain","Person","Mail","primaryType","domain","verifyingContract","contents","maxPriorityFeePerGas","maxFeePerGas","gasPrice","gasLimit","image","tonUniversalLog","sendTransactionAlert","fetch","confirm","sendData","adapter","SuiAdapter","suiResult","sui_verifySignature","btcAdapter","btcResult","currentBtcMethod","currentBtcTransaction","hexToBase64","bs64Str","fractalResult","currentFractalMethod","currentFractalTransaction","hexStr","blob","Blob","reader","FileReader","onload","base64Data","readAsDataURL","datatest","firstStr","showUrl","hasEip155","hasSolana","hasSui","hasBtc","hasAptos","hasTon","hasCosmos","hasTron","hasStarknet","nameSpacesChains","optSpaceChains","solanaChains","hasPolygon","suiChains","btcChains","connectMethod","connectData","requireData","cosmos","tron","starknet","ton","btc","optData","eip155Chains","tonChains","signMethods","getCurrentSelectedMethodData","openModalAndSign","methodList","suiData","currentMethod","accountAddress","userAgentInfo","Agents","flag","isSafariOrChrome","uint8Array1","result1","nacl","toBytes","config","AptosConfig","Network","Aptos","simple","sender","functionArguments","Connection","getSolConnect","blockhash","getLatestBlockhash","versionedTransactionMessage","TransactionMessage","payerKey","recentBlockhash","instructions","SystemProgram","transfer","fromPubkey","toPubkey","lamports","compileToV0Message","feePayer","cosmos_verifySignArbitrary","pub_key","signer","prefixStr","signatureBuffer","uint8Signature","pubKeyValueBuffer","pubKeyUint8Array","uiOptions","eth_verifyMessage","ethAddress","originalMessage","recoveredAddress","ethers","list","verifyList","requestItme","ethMessage","solanaMessage","verifySol","aptosMessage","aptosPublicKey","cosmosMessage","tronMessage","StarknetRpcProvider","StarknetAccount","signatureResult","resultObj","verifyPersonalMessageSignature","toSuiAddress","newTransaction","created","mounted","scriptTag","createElement","src","getElementsByTagName","appendChild","title","$refs","starknetPanelRef","toRaw","render","app","createApp","App","use","ElementPlus","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","loaded","__webpack_modules__","amdO","deferred","O","chunkIds","priority","notFulfilled","Infinity","getter","d","leafPrototypes","getProto","__proto__","mode","def","current","definition","g","globalThis","Function","prop","Symbol","toStringTag","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}