{"version":3,"file":"js/app.f2e2674d.js","mappings":"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","sources":["webpack://okxconnectdemo/../packages/aptos-provider/src/AptosUtils.js","webpack://okxconnectdemo/../packages/aptos-provider/src/OKXAptosProvider.js","webpack://okxconnectdemo/../packages/aptos-provider/src/index.js","webpack://okxconnectdemo/../packages/core/src/connect/commands.js","webpack://okxconnectdemo/../packages/core/src/connect/connect.js","webpack://okxconnectdemo/../packages/core/src/connect/connectionManager.js","webpack://okxconnectdemo/../packages/core/src/connect/constants.js","webpack://okxconnectdemo/../packages/core/src/connect/engine.js","webpack://okxconnectdemo/../packages/core/src/connect/index.js","webpack://okxconnectdemo/../packages/core/src/connect/jwt.js","webpack://okxconnectdemo/../packages/core/src/connect/jwtconstants.js","webpack://okxconnectdemo/../packages/core/src/connect/sessionUtils.js","webpack://okxconnectdemo/../packages/core/src/connect/storage.js","webpack://okxconnectdemo/../packages/core/src/connect/storageconstants.js","webpack://okxconnectdemo/../packages/core/src/connect/walletConnectionConstants.js","webpack://okxconnectdemo/../packages/core/src/connect/walletConnectionManager.js","webpack://okxconnectdemo/../packages/core/src/crypto/crypto.js","webpack://okxconnectdemo/../packages/core/src/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/engine.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/json-rpc.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/connect-event.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/connect-wallet.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/wallet-info.js","webpack://okxconnectdemo/../packages/core/src/protocol/constants.js","webpack://okxconnectdemo/../packages/core/src/protocol/error/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/error/okx-connect.error.js","webpack://okxconnectdemo/../packages/core/src/protocol/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/misc.js","webpack://okxconnectdemo/../packages/core/src/utils/call-for-success.js","webpack://okxconnectdemo/../packages/core/src/utils/index.js","webpack://okxconnectdemo/../packages/core/src/utils/log.js","webpack://okxconnectdemo/../packages/core/src/utils/report.js","webpack://okxconnectdemo/../packages/core/src/utils/reportconstants.js","webpack://okxconnectdemo/../packages/core/src/utils/request.js","webpack://okxconnectdemo/../packages/core/src/utils/safejson.js","webpack://okxconnectdemo/../packages/core/src/utils/stringUtils.js","webpack://okxconnectdemo/../packages/core/src/utils/tma-api.js","webpack://okxconnectdemo/../packages/core/src/utils/url.js","webpack://okxconnectdemo/../packages/core/src/utils/utils.js","webpack://okxconnectdemo/../packages/core/src/utils/web-api.js","webpack://okxconnectdemo/../packages/solana-provider/src/OKXSolanaProvider.js","webpack://okxconnectdemo/../packages/solana-provider/src/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXBtcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXCosmosProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXStarknetProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTonProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTronProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXUniversalProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/sign-client/client.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/ConnectMethodUtils.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/namespaces.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/events.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/values.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/aptos.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/btc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/cosmos.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/eip155.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcConnection.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/solana.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/starknet.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/sui.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/ton.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/tron.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/misc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/providers.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/globals.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/misc.js","webpack://okxconnectdemo/./src/App.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue?1b44","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue?e4fb","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue?aa83","webpack://okxconnectdemo/./src/components/StarknetTransactionPanel.vue","webpack://okxconnectdemo/./src/components/StarknetTransactionPanel.vue?1a06","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue?089a","webpack://okxconnectdemo/./src/App.vue?7ccd","webpack://okxconnectdemo/./src/main.js","webpack://okxconnectdemo/webpack/bootstrap","webpack://okxconnectdemo/webpack/runtime/amd options","webpack://okxconnectdemo/webpack/runtime/chunk loaded","webpack://okxconnectdemo/webpack/runtime/compat get default export","webpack://okxconnectdemo/webpack/runtime/create fake namespace object","webpack://okxconnectdemo/webpack/runtime/define property getters","webpack://okxconnectdemo/webpack/runtime/global","webpack://okxconnectdemo/webpack/runtime/hasOwnProperty shorthand","webpack://okxconnectdemo/webpack/runtime/make namespace object","webpack://okxconnectdemo/webpack/runtime/node module decorator","webpack://okxconnectdemo/webpack/runtime/jsonp chunk loading","webpack://okxconnectdemo/webpack/startup"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AptosUtils = void 0;\nclass AptosUtils {\n    static getTransaction(o) {\n        if (\"rawTransaction\" in o) {\n            let transaction = o;\n            if (\"entryFunction\" in transaction.rawTransaction.payload) {\n                let entryFunction = transaction.rawTransaction.payload.entryFunction;\n                let typeArgs = entryFunction.type_args;\n                let typeArguments = new Array();\n                typeArgs.forEach(typeTag => {\n                    typeArguments.push(typeTag.toString());\n                });\n                let realArguments = new Array();\n                this.getTypeArguments(entryFunction.args, realArguments);\n                let i = {\n                    arguments: realArguments,\n                    function: `${entryFunction.module_name.address.data ? entryFunction.module_name.address.toString() : entryFunction.module_name.address}::${entryFunction.module_name.name.identifier ? entryFunction.module_name.name.identifier : entryFunction.module_name.name}::${entryFunction.function_name.identifier ? entryFunction.function_name.identifier : entryFunction.function_name}`,\n                    type: \"entry_function_payload\",\n                    type_arguments: typeArguments\n                };\n                return this.getArguments(i);\n            }\n        }\n        return o;\n    }\n    static getTypeArguments(args, array) {\n        for (let j = 0; j < args.length; j++) {\n            let y = args[j];\n            if (\"values\" in y && y.values != null && y.values instanceof Array) {\n                let subArray = new Array();\n                array.push(subArray);\n                this.getTypeArguments(y.values, subArray);\n            }\n            else {\n                this.dealArrayElements(y, array);\n            }\n        }\n    }\n    static dealArrayElements(e, array) {\n        if (\"value\" in e && e.value != null) {\n            array.push(e.value.toString());\n        }\n        else if (\"data\" in e && e.data != null && e.data instanceof Uint8Array) {\n            return array.push(e.toString());\n        }\n        else {\n            return array.push(e.toString());\n        }\n    }\n    static getArguments(e) {\n        if (\"arguments\" in e) {\n            let t = e.arguments;\n            if (Array.isArray(t)) {\n                let r = new Array();\n                t.forEach(n => {\n                    if (n instanceof Uint8Array) {\n                        let o = new Array();\n                        n.forEach(i => {\n                            o.push(i);\n                        });\n                        r.push(o);\n                    }\n                    else\n                        r.push(n);\n                });\n                e = Object.assign(Object.assign({}, e), { arguments: r });\n            }\n        }\n        return e;\n    }\n}\nexports.AptosUtils = AptosUtils;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXAptosProvider = void 0;\nconst buffer_1 = require(\"buffer\");\nconst AptosUtils_1 = require(\"./AptosUtils\");\nconst core_1 = require(\"@okxconnect/core\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nclass OKXAptosProvider {\n    constructor(provider) {\n        this.chainsSet = new Set();\n        this.provider = provider.getUniversalProvider();\n        this.getConnectedNamespace();\n    }\n    get defaultNetwork() {\n        let network = this.provider.requestDefaultChainWithNamespace(core_1.NameSpaceKeyAptos);\n        return network;\n    }\n    get currentChainId() {\n        return `aptos:${this.defaultNetwork}`;\n    }\n    getRealChainId(chainId) {\n        if (chainId == \"aptos:mainnet\") {\n            return \"aptos:637\";\n        }\n        else if (chainId == \"movement:testnet\") {\n            return \"aptos:70000060\";\n        }\n        if (chainId == null) {\n            if (this.chainsSet.size == 1) {\n                return this.currentChainId;\n            }\n            else {\n                throw new Error(\"connected to multiple aptos chains,chainId can not be null\");\n            }\n        }\n        else {\n            return chainId;\n        }\n    }\n    getConnectedNamespace() {\n        var _a, _b, _c;\n        (_c = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces) === null || _b === void 0 ? void 0 : _b['aptos']) === null || _c === void 0 ? void 0 : _c.chains.forEach(chain => {\n            this.chainsSet.add(chain);\n        });\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n        chainId = this.getRealChainId(chainId);\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['aptos']) === null || _b === void 0 ? void 0 : _b.accounts[0];\n        if (chainId != null) {\n            account = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces['aptos']) === null || _d === void 0 ? void 0 : _d.accounts.filter(function (account) {\n                return account.startsWith(chainId);\n            })[0];\n        }\n        (0, core_1.logDebug)(\"getAccount\", account);\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        console.log(\"aptos_publicKey\", (_f = (_e = this.provider.session) === null || _e === void 0 ? void 0 : _e.namespaces['aptos']) === null || _f === void 0 ? void 0 : _f.extra);\n        let extra = (_j = (_h = (_g = this.provider.session) === null || _g === void 0 ? void 0 : _g.namespaces['aptos']) === null || _h === void 0 ? void 0 : _h.extra) === null || _j === void 0 ? void 0 : _j[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n            console.log(\"aptos_publicKey\", publicKey);\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address,\n            publicKey: publicKey\n        };\n    }\n    signMessage(payload, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            let realChain = this.getRealChainId(chainId);\n            try {\n                let prefix = \"APTOS\";\n                let address = (_a = this.getAccount(realChain)) === null || _a === void 0 ? void 0 : _a.address;\n                let message = \"\", nonce = \"\";\n                var fullMessage = prefix;\n                let application = window.location.protocol + \"//\" + window.location.hostname;\n                if (\"address\" in payload && payload.address) {\n                    fullMessage += \"\\naddress: \" + address;\n                }\n                if (\"application\" in payload && payload.application) {\n                    fullMessage += \"\\napplication: \" + application;\n                }\n                if (\"chainId\" in payload && payload.chainId) {\n                    fullMessage += \"\\nchainId: \" + realChain;\n                }\n                if (\"message\" in payload) {\n                    fullMessage += \"\\nmessage: \" + payload.message;\n                    message = payload.message;\n                }\n                if (\"nonce\" in payload) {\n                    fullMessage += \"\\nnonce: \" + payload.nonce;\n                    nonce = payload.nonce;\n                }\n                console.log(\"signMessage\", fullMessage);\n                const buffer = buffer_1.Buffer.from(fullMessage);\n                const hex = this.bufferToHex(buffer);\n                let data = {\n                    \"chainId\": realChain,\n                    \"method\": \"aptos_signMessage\",\n                    \"params\": {\n                        \"message\": hex,\n                    }\n                };\n                let signedMessage = yield this.provider.request(data, realChain);\n                if ('result' in signedMessage) {\n                    let successData = signedMessage.result;\n                    let publicKey = (_b = this.getAccount(realChain)) === null || _b === void 0 ? void 0 : _b.publicKey;\n                    // Remove the 0x prefix\n                    const key = publicKey.slice(2, 66);\n                    console.log(\"apt_signMessage\", buffer_1.Buffer.from(successData, 'hex'));\n                    console.log(\"apt_signMessage\", successData);\n                    const verified = tweetnacl_1.default.sign.detached.verify(buffer_1.Buffer.from(fullMessage), buffer_1.Buffer.from(successData.slice(2, successData.length), 'hex'), buffer_1.Buffer.from(publicKey, 'hex'));\n                    console.log(\"signMessage\", verified);\n                    return new Promise((resolve, reject) => {\n                        resolve({\n                            address: address,\n                            application: application,\n                            chainId: realChain,\n                            fullMessage: fullMessage,\n                            message: message,\n                            nonce: nonce,\n                            prefix: prefix,\n                            signature: successData,\n                            // verified:verified\n                        });\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        if (\"error\" in signedMessage) {\n                            resolve(signedMessage.error);\n                        }\n                    });\n                }\n            }\n            catch (error) {\n                console.error('方法数据回调失败 --Error--', error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    signTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let tx = AptosUtils_1.AptosUtils.getTransaction(transaction);\n            console.log(\"signTransaction\", tx);\n            let realChain = this.getRealChainId(chainId);\n            try {\n                let signature = yield this.provider.request({\n                    \"method\": \"aptos_signTransaction\",\n                    \"params\": tx\n                }, realChain);\n                if ('result' in signature) {\n                    let successData = signature.result;\n                    return new Promise((resolve, reject) => {\n                        resolve(buffer_1.Buffer.from(successData));\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        reject(signature);\n                    });\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"getSignedTransaction\", error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    signAndSubmitTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let tx = AptosUtils_1.AptosUtils.getTransaction(transaction);\n            console.log(\"signAndSubmitTransaction\", tx);\n            let realChain = this.getRealChainId(chainId);\n            try {\n                let signature = yield this.provider.request({\n                    \"method\": \"aptos_signAndSubmitTransaction\",\n                    \"params\": tx\n                }, realChain);\n                if ('result' in signature) {\n                    let successData = signature.result;\n                    return new Promise((resolve, reject) => {\n                        resolve(successData);\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        reject(signature);\n                    });\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"getSignedTransaction\", error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    bufferToHex(buf) {\n        return \"0x\" + buffer_1.Buffer.from(buf).toString(\"hex\");\n    }\n}\nexports.OKXAptosProvider = OKXAptosProvider;\nexports.default = OKXAptosProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXAptosProvider = void 0;\nvar OKXAptosProvider_1 = require(\"./OKXAptosProvider\");\nObject.defineProperty(exports, \"OKXAptosProvider\", { enumerable: true, get: function () { return OKXAptosProvider_1.OKXAptosProvider; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_METHOD_BATCH_FETCHMSG = exports.CONNECT_METHOD_FETCHMSG = exports.CONNECT_METHOD_RECEIVE = exports.CONNECT_METHOD_UNSUB = exports.CONNECT_METHOD_SUB = exports.CONNECT_METHOD_PUBLISH = exports.CONNECT_METHOD_LOGIN = exports.CONNECT_METHOD_PUSH = void 0;\n// --------------- ws methods -------------\nexports.CONNECT_METHOD_PUSH = \"push\";\nexports.CONNECT_METHOD_LOGIN = \"login\";\nexports.CONNECT_METHOD_PUBLISH = \"publish\";\nexports.CONNECT_METHOD_SUB = \"subscribe\";\nexports.CONNECT_METHOD_UNSUB = \"unsubscribe\";\nexports.CONNECT_METHOD_RECEIVE = \"receive\";\nexports.CONNECT_METHOD_FETCHMSG = \"fetchMessages\";\nexports.CONNECT_METHOD_BATCH_FETCHMSG = \"batchFetchMessages\";\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXWalletConnector = void 0;\nconst constants_1 = require(\"./constants\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils\");\nconst utils_2 = require(\"../utils/utils\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst log = __importStar(require(\"../utils/log\"));\nconst protocol_1 = require(\"../protocol\");\nconst report_1 = require(\"../utils/report\");\nconst WS = (0, utils_2.resolveWebSocketImplementation)();\nclass OKXWalletConnector {\n    constructor(url) {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.state = constants_1.ConnectorState.InitState;\n        this.selectedUrlIndex = 0;\n        // reconnect\n        this.retryCount = 0;\n        // default timeout limit: 8 sec\n        this.timeOutLimit = 8000;\n        if (!(0, utils_2.checkWSUrl)(url)) {\n            throw new Error(`CONNECTOR: invalid url ${url}`);\n        }\n        this.url = url;\n        this.heartbeatTimer = null;\n        this.connectionTimeoutTimer = null;\n        this.connectURLStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY + storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n    }\n    get connecting() {\n        return this.state == constants_1.ConnectorState.Connecting;\n    }\n    // ------------------------------------------------------\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        log.logDebug('get received data');\n        log.logDebug(e);\n        if (typeof e.data === \"string\") {\n            let rsp = e.data;\n            if (rsp === \"pong\") {\n                log.logDebug(`CONNECT: receive pong ${Date.now().toString()}`);\n                return;\n            }\n        }\n        this.events.emit(\"payload\", e.data);\n    }\n    onClose(event) {\n        var _a;\n        log.logDebug('socket get closed: ', (_a = this.socket) === null || _a === void 0 ? void 0 : _a.url, event.code);\n        this.socket = undefined;\n        this.events.emit(\"close\", event);\n    }\n    onError(id, e) {\n        const payload = { id: id, msg: e.toString() };\n        this.events.emit(\"payload\", payload);\n    }\n    onopen(socket) {\n        socket.onmessage = (event) => this.onPayload(event);\n        socket.onclose = (event) => this.onClose(event);\n        this.socket = socket;\n        this.state = constants_1.ConnectorState.Connected;\n        this.events.emit(\"open\");\n    }\n    // ------------------------------------------------------\n    emitError(errorEvent) {\n        this.events.emit(\"fail\", errorEvent);\n    }\n    // ------------------------------------------------------\n    heartbeat() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.heartbeatTimer) {\n                clearTimeout(this.heartbeatTimer);\n            }\n            if (this.state != constants_1.ConnectorState.Connected && this.state != constants_1.ConnectorState.OnError) {\n                log.logDebug('heart beat close');\n                return;\n            }\n            if (!this.socket) {\n                log.logDebug('socket not exist');\n                if (this.state == constants_1.ConnectorState.Connected || this.state == constants_1.ConnectorState.OnError) {\n                    log.logDebug('socket reconnect by heartbeat');\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                        this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n                    }\n                }\n                return;\n            }\n            if (this.socket.readyState !== WebSocket.OPEN) {\n                log.logDebug('socket not ready');\n                if (this.state == constants_1.ConnectorState.Connected || this.state == constants_1.ConnectorState.OnError) {\n                    log.logDebug('socket reconnect by heartbeat with state', this.state, this.socket.readyState);\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                        this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n                    }\n                }\n                return;\n            }\n            log.logDebug(`send ping heart beat: ${Date.now().toString()}, ${this.socket}`);\n            this.socket.send(\"ping\");\n            this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n        });\n    }\n    registOpen(url = this.url, inRetry = false) {\n        if (!(0, utils_2.checkWSUrl)(url)) {\n            throw new Error(`CONNECTOR: invalid url ${url}`);\n        }\n        this.url = url;\n        if (!inRetry) {\n            log.logDebug('Connection connect:', this.url, new Date().toUTCString());\n        }\n        this.state = constants_1.ConnectorState.Connecting;\n        const origin = new URLSearchParams(url).get(\"origin\");\n        return new Promise((resolve, reject) => {\n            const socket = new WS(url, []);\n            log.logDebug('Connection connect Begin:', this.url, new Date().toUTCString());\n            this.startTimeOutTimer(socket);\n            if ((0, utils_2.hasBuiltInWebSocket)()) {\n                log.logDebug('Add socket error handler');\n                socket.onerror = () => {\n                    reject(new Error('socket error'));\n                    socket.close();\n                };\n            }\n            else {\n                log.logDebug('Add socket error handler');\n                socket.on(\"error\", () => {\n                    reject(new Error('socket error'));\n                    socket.close();\n                });\n            }\n            socket.onopen = () => {\n                log.logDebug('socket opened');\n                this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.FINISHED);\n                this.onopen(socket);\n                this.heartbeat();\n                resolve(socket);\n            };\n        });\n    }\n    checkMaxRetry() {\n        log.logDebug('current retry count:', this.retryCount, 'of', constants_1.OKXCONNECTOR_WS_URL_LIST.length);\n        return this.retryCount > (constants_1.OKXCONNECTOR_WS_URL_LIST.length * 3);\n    }\n    connectionTryNext() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.checkMaxRetry()) {\n                //TODO: mark descent\n                this.retryCount += 1;\n                let nextUrl = this.getNextSelectUrl();\n                log.logDebug('Connection retry:', nextUrl, new Date().toUTCString());\n                return this.registOpen(nextUrl, true);\n            }\n            else {\n                log.logDebug('Max Connection retry ', this.retryCount, new Date().toUTCString());\n            }\n        });\n    }\n    startTimeOutTimer(socket) {\n        if (this.connectionTimeoutTimer) {\n            this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.CANCELED);\n        }\n        this.pendingSocket = socket;\n        this.connectionTimeoutTimer = setTimeout(() => {\n            if (this.pendingSocket) {\n                this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.TIME_OUT);\n            }\n        }, this.timeOutLimit);\n    }\n    resetTimeOutTimer(code) {\n        var _a;\n        // 1. cancel connecting pending sockets\n        if (code == constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.TIME_OUT) {\n            // 2. remove timer\n            clearTimeout(this.connectionTimeoutTimer);\n            (_a = this.pendingSocket) === null || _a === void 0 ? void 0 : _a.close();\n            this.pendingSocket = undefined;\n            log.reportEvent(report_1.OKXReportType.LOG, 'timeout', this.retryCount.toString());\n            throw new Error('socket timeout');\n        }\n        else {\n            this.pendingSocket = undefined;\n            // 2. remove timer\n            clearTimeout(this.connectionTimeoutTimer);\n        }\n    }\n    cacheSuccessUrlSelect() {\n        this.connectURLStorage.saveContent(this.selectedUrlIndex.toString(), storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n    }\n    // private getSuccessUrlSelect(): string {\n    //     let selectIndex = this.connectURLStorage.getItem(OKXCONNECTOR_CACHE_KEY)?.content\n    //     let index = 0\n    //     if (selectIndex) {\n    //         index = Number(selectIndex)\n    //     }\n    //     this.selectedUrlIndex = index\n    //     return OKXCONNECTOR_WS_URL_LIST[index]\n    // }\n    getNextSelectUrl() {\n        this.selectedUrlIndex += 1;\n        this.selectedUrlIndex = this.selectedUrlIndex % constants_1.OKXCONNECTOR_WS_URL_LIST.length;\n        return constants_1.OKXCONNECTOR_WS_URL_LIST[this.selectedUrlIndex];\n    }\n    // ------------------------------------------------------\n    onVisibleChanged() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (document.visibilityState === 'visible') {\n                // check and restore\n                log.logDebug(`get changed ${this.state}, ${this.socket}`);\n                if (this.state == constants_1.ConnectorState.Connected && typeof this.socket === \"undefined\") {\n                    log.logDebug('CONNECTION need reopen');\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                    }\n                    return;\n                }\n            }\n        });\n    }\n    tryRegistOpen() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (this.connecting) {\n                log.logDebug('tryRegistOpen => connecting state');\n                return new Promise((resolve, reject) => {\n                    this.events.once('fail', (e) => {\n                        log.logDebug('tryRegistOpen => connecting fail listener', e);\n                        return reject(e);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.socket == \"undefined\") {\n                            return reject(new Error(\"Connect lost\"));\n                        }\n                        return resolve(this.socket);\n                    });\n                });\n            }\n            log.logDebug('tryRegistOpen => try registOpen until retry limit is hit');\n            let inRetry = false;\n            while (!this.checkMaxRetry() && !this.socket) {\n                try {\n                    log.logDebug('tryRegistOpen => call registOpen, try count:', this.retryCount, inRetry);\n                    yield this.registOpen(url, inRetry);\n                }\n                catch (err) {\n                    log.logDebug('tryRegistOpen => registOpen failed', err);\n                    this.retryCount += 1;\n                    url = this.getNextSelectUrl();\n                    inRetry = true;\n                }\n            }\n            log.logDebug('tryRegistOpen => exit while loop', this.retryCount, this.socket);\n            if (!this.socket && this.checkMaxRetry()) {\n                log.logDebug('tryRegistOpen => failed to open a socket', this.retryCount, this.socket);\n                this.retryCount = 0;\n                this.state = constants_1.ConnectorState.OnError;\n                this.emitError(new Error('tryRegistOpen failed'));\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CONNECTION_ERROR, \"Failed to connect\");\n            }\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.tryRegistOpen();\n                // listener for reconnect\n                document.removeEventListener('visibilitychange', this.onVisibleChanged.bind(this));\n                document.addEventListener('visibilitychange', this.onVisibleChanged.bind(this));\n            }\n            catch (e) {\n                log.logDebug('connect => failed to connect', e);\n                throw e;\n            }\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.state = constants_1.ConnectorState.Disconnected;\n            return new Promise((resolve, reject) => {\n                if (typeof this.socket === \"undefined\") {\n                    // reject(new Error(\"CONNECTION closed\"))\n                    resolve();\n                    return;\n                }\n                this.socket.onclose = (event) => {\n                    this.onClose(event);\n                    resolve();\n                };\n                this.socket.close();\n                if (this.heartbeatTimer) {\n                    clearTimeout(this.heartbeatTimer);\n                }\n            });\n        });\n    }\n    currentStatus() {\n        return {\n            state: this.state,\n            url: this.url\n        };\n    }\n    // event will be jsonstr\n    /// @params Promise\n    /// @params success/failed callback\n    addListener(event, decrypt, success, failed) {\n        if (this.listenPayloadHandler) {\n            this.events.removeListener(\"payload\", this.listenPayloadHandler);\n        }\n        this.listenPayloadHandler = (e) => {\n            var _a;\n            log.logDebug(`<<< get payload ${e}`);\n            let parsedEvent = (0, utils_1.safeJsonParse)(e);\n            // parse the data to chose success or failed\n            if (parsedEvent.params && parsedEvent.params.data) {\n                let rawMsg = (_a = parsedEvent.params.data) === null || _a === void 0 ? void 0 : _a.message;\n                if (rawMsg) {\n                    try {\n                        let msg = decrypt(rawMsg);\n                        if (msg === undefined) {\n                            log.logDebug(`CONNECT: decrypt undefined`);\n                            failed(event, 'Decrypt undefined');\n                        }\n                        else {\n                            success(event, msg);\n                        }\n                    }\n                    catch (e) {\n                        log.logDebug(`CONNECT: decrypt failed: ${e}`);\n                        failed(event, e.message);\n                    }\n                }\n            }\n        };\n        this.events.on(\"payload\", this.listenPayloadHandler);\n        if (this.failHandler) {\n            this.events.removeListener(\"fail\", this.failHandler);\n        }\n        this.failHandler = (e) => {\n            if (e) {\n                log.logDebug(`CONNECT failed: ${e}`);\n                failed(event, e.message);\n            }\n            else {\n                failed(event, \"Unkonow error\");\n            }\n        };\n        this.events.on(\"fail\", this.failHandler);\n    }\n    addPackageParse(callback) {\n        if (this.payloadHandler) {\n            this.events.removeListener(\"payload\", this.payloadHandler);\n        }\n        this.payloadHandler = (e) => __awaiter(this, void 0, void 0, function* () {\n            // parse the data to chose success or failed\n            log.logDebug(`CONNECTION @[${new Date().toUTCString()}] <<<< received e:${e}`);\n            let param = (0, utils_1.safeJsonParse)(e);\n            yield callback(param);\n        });\n        this.events.on(\"payload\", this.payloadHandler);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    send(doLogin, payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (typeof this.socket === \"undefined\") {\n                    log.logDebug(`>>> send payload undefined ${payload}`);\n                    // this.socket = await this.registOpen();\n                    yield doLogin();\n                }\n                log.logDebug(`CONNECTION @[${new Date().toUTCString()}]>>> send payload ${(0, utils_1.safeJsonStringify)(payload)}`);\n                if (this.socket) {\n                    this.socket.send((0, utils_1.safeJsonStringify)(payload));\n                }\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    getMsgPayloadFromHistory(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof msg === \"undefined\")\n                return;\n            let tmpMsg = {\n                params: {\n                    data: msg\n                }\n            };\n            let jsonstr = (0, utils_1.safeJsonStringify)(msg);\n            log.logDebug('get received data from history');\n            log.logDebug(jsonstr);\n            jsonstr = (0, utils_1.safeJsonStringify)(tmpMsg);\n            this.events.emit(\"payload\", jsonstr);\n        });\n    }\n    onOpen(callback) {\n        if (this.openHandler) {\n            this.events.removeListener(\"open\", this.openHandler);\n        }\n        this.openHandler = () => __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> ws opened: `);\n            yield callback();\n        });\n        this.events.on(\"open\", this.openHandler);\n        this.cacheSuccessUrlSelect();\n    }\n}\nexports.OKXWalletConnector = OKXWalletConnector;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionManager = void 0;\nconst connect_1 = require(\"./connect\");\nconst commands_1 = require(\"./commands\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst jwtconstants_1 = require(\"./jwtconstants\");\nconst constants_1 = require(\"./constants\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils/utils\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst jwt_1 = require(\"./jwt\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst report_1 = require(\"../utils/report\");\nconst url_1 = require(\"../utils/url\");\nclass ConnectionManager {\n    constructor(appname = undefined) {\n        this.events = new eventemitter3_1.EventEmitter();\n        // local storage\n        this.connectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY_DAPP + appname, storageconstants_1.OKXCONNECTOR_CACHE_KEY_DAPP);\n        this.crypto = new crypto_1.SessionCrypto();\n        let inTMA = (0, url_1.isInTMA)();\n        (0, log_1.logDebug)('do init:', inTMA);\n        log.reportLog('connection manager do init');\n        if (inTMA) {\n            // recovery from cache\n            const keyPairInfo = this.getCachedCryptoKeyPair();\n            (0, log_1.logDebug)('use same pk:', keyPairInfo);\n            this.crypto = new crypto_1.SessionCrypto(keyPairInfo);\n        }\n        this.jwtKeyPair = this.getCachedJWTKeyPair();\n        this.saveJWTKeyPair(this.jwtKeyPair);\n        // wss connection\n        this.connector = new connect_1.OKXWalletConnector(constants_1.OKXCONNECTOR_WS_URL_1);\n        this.packageId = Date.now();\n        // connection state\n        this.connectedWalletPK = '';\n        this.currentTopic = '';\n        log.logDebug(`this.connectedWalletPK  constructor   ${this.connectedWalletPK}`);\n    }\n    refreshPackageId() {\n        this.packageId = Date.now();\n    }\n    saveCryptoKeyPair(keyPair) {\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(keyPair);\n        // encrypt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_CRYPTO_KEY);\n    }\n    getCachedCryptoKeyPair() {\n        // decrypt kp\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_CRYPTO_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            log.logDebug('get cached crypto key:');\n            log.logDebug(content);\n            let keyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            return keyPairInfo;\n        }\n        else {\n            this.connectStorage.clearCache();\n        }\n        return null;\n    }\n    saveJWTKeyPair(keyPair) {\n        var strkeyPair = {\n            publicKey: (0, utils_1.toHexString)(keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(keyPair.secretKey)\n        };\n        log.logDebug('save jwt kp');\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(strkeyPair);\n        log.logDebug(cacheInfo);\n        // encrypt jwt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_JWT_KEY);\n    }\n    getCachedJWTKeyPair() {\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            // TODO: decrypt jwt kp\n            log.logDebug('get cached jwt kp:');\n            log.logDebug(content);\n            let strKeyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            log.logDebug('save jwt kp');\n            log.logDebug(strKeyPairInfo);\n            var keyPair = {\n                publicKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.publicKey),\n                secretKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.secretKey)\n            };\n            return keyPair;\n        }\n        else {\n            return (0, jwt_1.generateKeyPair)();\n        }\n    }\n    isWalletPKReady() {\n        log.logDebug(`isWalletPKReady  ===> ${this.connectedWalletPK}`);\n        return this.connectedWalletPK.length > 0;\n    }\n    makeJWT(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, jwt_1.signJWT)(topic, jwtconstants_1.OKXCONNECTOR_JWT_SIDE, jwtconstants_1.OKXCONNECTOR_JWT_TTL, // 24h\n            this.jwtKeyPair);\n        });\n    }\n    parsePackage(input_1) {\n        return __awaiter(this, arguments, void 0, function* (input, ignoreACK = false) {\n            var _a, _b, _c, _d, _e;\n            this.events.emit(input.id, input);\n            // send back ACK\n            if (!ignoreACK) {\n                yield this.sendACK(input.id, true);\n                let topic = (_a = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE)) === null || _a === void 0 ? void 0 : _a.content;\n                if (topic) {\n                    let inputObj = input;\n                    if ((_c = (_b = inputObj.params) === null || _b === void 0 ? void 0 : _b.data) === null || _c === void 0 ? void 0 : _c.messageId) {\n                        this.refreshPackageId();\n                        yield this.sendReceive(this.packageId.toString(), (_e = (_d = inputObj.params) === null || _d === void 0 ? void 0 : _d.data) === null || _e === void 0 ? void 0 : _e.messageId, topic);\n                    }\n                }\n            }\n        });\n    }\n    restoreConnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.reportLog('connection manager restore connection');\n            log.logDebug(`connectionManager  restoreConenct   ${topic}`);\n            if ((typeof topic !== 'string') || topic.length === 0) {\n                throw new Error('CONNECTION: invalid topic');\n            }\n            log.logDebug(`connectionManager  restoreConenct   disconnect`);\n            yield this.disconnect(true);\n            this.connectStorage.saveContent(topic, storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`connectionManager  restoreConenct   conect`);\n            yield this.connect(true);\n        });\n    }\n    getConnectInfo() {\n        var topic = (0, utils_1.generateTopic)();\n        log.logDebug(`generate topic token: ${topic}`);\n        log.reportLog('connection manager generate connection info');\n        this.currentTopic = topic;\n        const info = {\n            channelId: topic,\n            clientId: this.crypto.stringifyKeypair().publicKey,\n        };\n        return info;\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            this.timeLog = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---enter->\", this.timeLog);\n            log.reportLog('connection manager begin connect');\n            let lastConnectId = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            //1. generate topic & jwt\n            var topic = this.currentTopic;\n            log.logDebug(`generate topic token: ${topic}`);\n            // crypto keypair\n            if (fromRestore) {\n                if (typeof lastConnectId !== 'undefined' && lastConnectId !== null) {\n                    log.logDebug(`read last connect id: ${lastConnectId}`);\n                    topic = lastConnectId.content;\n                }\n                var cachedSenderPublicKey = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                if (cachedSenderPublicKey) {\n                    this.connectedWalletPK = cachedSenderPublicKey.content;\n                    (0, log_1.logDebug)(`connectionManager connect() this.connectedWalletPK : ${this.connectedWalletPK}`);\n                }\n                log.reportLog('connection manager do restore connection');\n            }\n            if (fromRestore) {\n                // recovery from cache\n                const keyPairInfo = this.getCachedCryptoKeyPair();\n                if (keyPairInfo) {\n                    this.crypto = new crypto_1.SessionCrypto(keyPairInfo);\n                }\n            }\n            log.logDebug(`use crypto client id: ${this.crypto.stringifyKeypair().publicKey}`);\n            // cache topic\n            this.connectStorage.saveContent(topic, storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            var jwtToken = yield this.makeJWT(topic);\n            log.logDebug(`generate jwt token: ${jwtToken}`);\n            this.connectStorage.saveContent(jwtToken, 'jwt');\n            return new Promise((resolve, reject) => {\n                // 1. when websocket opened\n                this.connector.onOpen(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug(`1. connector on open`);\n                    log.reportLog('1. connect ws open');\n                    const timeOne = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---open->\", timeOne - this.timeLog);\n                    //2. send jwt to login\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when login');\n                            log.reportLog('2. connect login failed');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // throw error\n                            reject(error);\n                        }\n                        //3. send subscribe\n                        this.refreshPackageId();\n                        this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                            // ack\n                            if (rsp && rsp.error) {\n                                log.logError('failed when subscribe');\n                                log.reportLog('3. connect subscribe failed');\n                                yield this.connector.disconnect();\n                                var error = new Error();\n                                error.message = rsp.error.message;\n                                error.name = rsp.error.code.toString();\n                                // throw error\n                                reject(error);\n                            }\n                            this.refreshPackageId();\n                            log.logDebug(`4. subscribe callback then send fetch: ${this.packageId}`);\n                            log.reportLog('4. subscribe callback then send fetch');\n                            const timeF = new Date().getTime();\n                            (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n                            // 4. fetch messages\n                            yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                            resolve();\n                        }));\n                        log.logDebug(`3. login callback then send subscribe: ${this.packageId}`);\n                        log.reportLog('3. connect subscribe failed');\n                        const timeTh = new Date().getTime();\n                        (0, log_1.logDebug)(\"ConnectTime---login callback->\", timeTh - this.timeLog);\n                        yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                            log.logDebug('CONNECT: reconnect before send');\n                            yield this.connector.connect()\n                                .catch((err) => {\n                                (0, log_1.logDebug)('ConnectionManager connect error', err);\n                                reject(err);\n                            });\n                        }), {\n                            id: this.packageId.toString(),\n                            jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                            method: commands_1.CONNECT_METHOD_SUB,\n                            params: {\n                                topic: topic\n                            }\n                        });\n                    }));\n                    log.logDebug(`2. login called`);\n                    log.reportLog('2. connection manager connect call login');\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        yield this.connector.connect()\n                            .catch((err) => {\n                            (0, log_1.logDebug)('ConnectionManager connect error', err);\n                            reject(err);\n                        });\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_LOGIN,\n                        params: {\n                            token: jwtToken\n                        }\n                    });\n                    // 4. listen when dapp back to front, receive wallet public key\n                    this.connector.addPackageParse((event) => {\n                        var _a;\n                        log.logDebug(`connect: parse package`);\n                        log.logDebug(event);\n                        if (!(\"params\" in event) || !(\"data\" in event[\"params\"])) {\n                            this.parsePackage(event, true);\n                            return;\n                        }\n                        let rawMsg = (_a = event.params.data) === null || _a === void 0 ? void 0 : _a.message;\n                        if (typeof rawMsg !== 'undefined') {\n                            rawMsg = rawMsg.replace(/'/g, '\"');\n                            let parsedMessage = (0, safejson_1.safeJsonParse)(rawMsg);\n                            if (typeof parsedMessage !== 'string' && \"clientId\" in parsedMessage && parsedMessage.clientId && parsedMessage.clientId.length > 0) {\n                                this.connectedWalletPK = parsedMessage.clientId;\n                                log.logDebug(`this.connectedWalletPK  addPackageParse   ${this.connectedWalletPK}`);\n                                // exchange sender public key\n                                // cache wallet public key\n                                this.connectStorage.saveContent(this.connectedWalletPK, storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                                // cache crypto keypair\n                                this.saveCryptoKeyPair(this.crypto.stringifyKeypair());\n                            }\n                        }\n                        // ignore receive echo\n                        this.parsePackage(event, event.method === commands_1.CONNECT_METHOD_RECEIVE);\n                    });\n                }));\n                this.connector.connect().catch((err) => {\n                    (0, log_1.logDebug)('ConnectionManager connect error', err);\n                    reject(err);\n                });\n            });\n        });\n    }\n    disconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            yield this.connector.disconnect();\n            log.reportLog('connect disconnect');\n            //clean cached topic\n            //如果是恢复连接，就不清理解密public key\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            if (!fromRestore) {\n                this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                this.connectedWalletPK = '';\n                (0, log_1.logDebug)(`connectionManager disconnect() this.connectedWalletPK : ${this.connectedWalletPK}`);\n            }\n        });\n    }\n    addListener(event, success, fail) {\n        this.connector.addListener((0, safejson_1.safeJsonStringify)(event), (rawMsg) => {\n            rawMsg = rawMsg.replace(/'/g, '\"');\n            log.logDebug(`addListener ===> ${rawMsg}`);\n            if (typeof rawMsg !== 'undefined') {\n                var msgObj = (0, safejson_1.safeJsonParse)(rawMsg);\n                var msg = msgObj.message;\n                let result;\n                if (msg.trimStart().startsWith('{')) {\n                    result = msg;\n                }\n                else {\n                    if (msgObj.clientId && msgObj.clientId.length > 0) {\n                        this.connectedWalletPK = msgObj.clientId;\n                        this.connectStorage.saveContent(this.connectedWalletPK, storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                        log.logDebug(`this.connectedWalletPK  addListener   ${this.connectedWalletPK}`);\n                        log.logDebug(`this.cryptoKey  addListener   ${(0, utils_1.toHexString)(this.crypto.keyPair.publicKey)}`);\n                        // cache crypto keypair\n                        this.saveCryptoKeyPair(this.crypto.stringifyKeypair());\n                    }\n                    result = this.crypto.decrypt(msg, this.connectedWalletPK);\n                }\n                log.logDebug(`addListener ===> ${result}`);\n                return result;\n            }\n            return undefined;\n        }, success, fail);\n    }\n    sendRaw(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`message send =====> ${msg}`);\n            log.reportLog('connect send raw msg');\n            let message = msg;\n            log.logDebug(`message send =====encrypt message.length>>>> ${message.length}`);\n            // only one topic\n            let topic = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`message send =====topic>>>> ${topic === null || topic === void 0 ? void 0 : topic.content}`);\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                method: commands_1.CONNECT_METHOD_PUBLISH,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                params: {\n                    message: {\n                        topic: topic === null || topic === void 0 ? void 0 : topic.content,\n                        message: message,\n                        ttl: constants_1.OKXCONNECTOR_MESSAGE_TTL\n                    }\n                } // crypted\n            };\n            this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                // ack\n                if (rsp && rsp.error) {\n                    log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                }\n                else if (rsp && !rsp.error) {\n                    log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                }\n            }));\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n            return this.packageId;\n        });\n    }\n    send(msg_1) {\n        return __awaiter(this, arguments, void 0, function* (msg, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL) {\n            // make send msg payload\n            log.logDebug(`message send =====> ${msg}`);\n            log.reportLog('connect send msg');\n            if (!this.isWalletPKReady()) {\n                // channel not ready\n                throw new Error('connection not finish');\n            }\n            let message = this.crypto.encrypt(msg, this.connectedWalletPK);\n            log.logDebug(`message send =====encrypt message.length>>>> ${message.length}`);\n            log.reportEvent(report_1.OKXReportType.LOG, 'msg_size', message.length.toString());\n            // only one topic\n            let topic = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`message send =====topic>>>> ${topic === null || topic === void 0 ? void 0 : topic.content}`);\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                method: commands_1.CONNECT_METHOD_PUBLISH,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                params: {\n                    message: {\n                        topic: topic === null || topic === void 0 ? void 0 : topic.content,\n                        message: message,\n                        ttl: ttl\n                    }\n                } // crypted\n            };\n            this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                // ack\n                if (rsp && rsp.error) {\n                    log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                }\n                else if (rsp && !rsp.error) {\n                    log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                }\n            }));\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n            return this.packageId;\n        });\n    }\n    sendACK(msgId_1, success_1) {\n        return __awaiter(this, arguments, void 0, function* (msgId, success, reason = undefined) {\n            if (success === true) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    result: true\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n            else if (reason) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    error: {\n                        code: reason.code, //int\n                        message: reason.message\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    // send receive\n    sendReceive(msgId, messageId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECEIVE,\n                params: {\n                    data: {\n                        messageId: messageId,\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendConnectSessionInfo(msgId, messageId, topic, params) {\n        return __awaiter(this, void 0, void 0, function* () {\n        });\n    }\n    // send receive\n    // 1. fetch all \n    // 2. send back receive\n    // 3. check has more, if so, repeat from 1st step\n    sendFetchAndConsumeMessages(msgId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(msgId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic == topic) {\n                                let messageId = msg.messageId;\n                                log.reportLog('5. get fetch result');\n                                yield this.connector.getMsgPayloadFromHistory(msg);\n                                // send receive command to relay server\n                                this.refreshPackageId();\n                                yield this.sendReceive(this.packageId.toString(), messageId, topic);\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            log.reportLog('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_FETCHMSG,\n                params: {\n                    data: {\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    cleanCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.reportLog('connection cache clean called');\n            this.connectStorage.clearCache();\n        });\n    }\n    saveSessionContent(key, data) {\n        if (!data) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(data);\n        this.connectStorage.encryptStoreMsg(jsonData, storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n    }\n    getSessionContent(key) {\n        let jsonStr = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        if (jsonStr) {\n            let object = (0, safejson_1.safeJsonParse)(jsonStr);\n            return object;\n        }\n        return undefined;\n    }\n    getCurrentConnectionReady() {\n        return this.isWalletPKReady();\n    }\n}\nexports.ConnectionManager = ConnectionManager;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectorState = exports.CONNECT_JSONRPC_VER = exports.OKXCONNECTOR_MESSAGE_TTL = exports.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE = exports.OKXCONNECTOR_WS_URL_LIST = exports.OKXCONNECTOR_WS_URL_IDX_KEY = exports.OKXCONNECTOR_WS_URL_3 = exports.OKXCONNECTOR_WS_URL_2 = exports.OKXCONNECTOR_WS_URL_1 = exports.EVENT_EMITTER_MAX_LISTENERS = void 0;\nexports.EVENT_EMITTER_MAX_LISTENERS = 10;\nexports.OKXCONNECTOR_WS_URL_1 = \"wss://wsdexpri.okx.com/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_2 = \"wss://wsdexpri.okx.ac/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_3 = \"wss://wsdexpri.coinall.ltd/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_IDX_KEY = \"wuik\";\nexports.OKXCONNECTOR_WS_URL_LIST = [\n    exports.OKXCONNECTOR_WS_URL_1,\n    exports.OKXCONNECTOR_WS_URL_2,\n    exports.OKXCONNECTOR_WS_URL_3,\n];\nexports.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE = {\n    TIME_OUT: 3990,\n    CANCELED: 3991,\n    FINISHED: 3992,\n};\nexports.OKXCONNECTOR_MESSAGE_TTL = 300000;\n// --------------- JSON RPC ---------------\nexports.CONNECT_JSONRPC_VER = \"2.0\";\nexports.ConnectorState = {\n    InitState: 0,\n    Connecting: 1,\n    Connected: 2,\n    Disconnected: 3,\n    OnError: 4,\n};\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Engine = void 0;\nconst safejson_1 = require(\"../utils/safejson\");\nconst log_1 = require(\"../utils/log\");\nconst protocol_1 = require(\"../protocol\");\n// import {standardDeeplink, tonConnectSdkVersion} from \"../../ton/tonsdk/constants/version\";\nconst utils_1 = require(\"../utils\");\nconst utils_2 = require(\"../utils\");\nconst sessionUtils_1 = require(\"./sessionUtils\");\nconst url_1 = require(\"../utils/url\");\nclass Engine {\n    constructor(connectionManager) {\n        this.pendingRequests = new Map();\n        this.disconnectListener = [];\n        this.connectionManager = connectionManager;\n        // report api begin\n        (0, log_1.getDefaultReporter)().beginReport();\n        this.connectionManager.addListener(\"sdk_response\", (event, msg) => {\n            var jsonResponse = (0, safejson_1.safeJsonParse)(msg);\n            (0, log_1.logDebug)(`Engine ==>> addListener ==> success ==> ${jsonResponse}`);\n            this.handleResponse(event, jsonResponse);\n        }, function () {\n        });\n    }\n    addDisconnectListener(disconnecter) {\n        this.disconnectListener.push(disconnecter);\n    }\n    setSessionConnectingListener(sessionConnectingListener) {\n        this.sessionConnectingListener = sessionConnectingListener;\n    }\n    disconnect() {\n        (0, log_1.logDebug)('Engine ==>> disconnect');\n        this.pendingRequests.clear();\n    }\n    getRequestId() {\n        const requestId = Date.now().toString();\n        (0, log_1.logDebug)('Engine ==>> getRequestId ==>', requestId);\n        return requestId;\n    }\n    bindRequestForPromise(requestId, resolve) {\n        this.pendingRequests.set(requestId, resolve);\n    }\n    send(request, requestAnswer, option, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('Engine ==>> send  request==>', JSON.stringify(request));\n            const requestId = this.getRequestId();\n            try {\n                let packageId = yield this.connectionManager.send(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId })), ttl);\n                this.connectionManager.events.once(packageId.toString(), (event) => {\n                    var _a;\n                    (0, log_1.logDebug)(`Engine ==> send => onAck => ${(0, safejson_1.safeJsonStringify)(event)}`);\n                    if (event && event.result) {\n                        (_a = requestAnswer.onAck) === null || _a === void 0 ? void 0 : _a.call(requestAnswer);\n                    }\n                });\n                if (requestAnswer.resolve) {\n                    this.bindRequestForPromise(requestId, requestAnswer.resolve);\n                }\n            }\n            catch (e) {\n                return Promise.reject(e);\n            }\n        });\n    }\n    sendSession(sessionInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('[Connect] sendSession called:', sessionInfo);\n            const requestId = this.getRequestId();\n            let request = {\n                method: 'session_info',\n                params: { sessionInfo: sessionInfo }\n            };\n            yield this.connectionManager.sendRaw(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId })));\n            // try {\n            //     let packageId = await callForSuccess(() =>\n            //         , option)\n            //     this.connectionManager.events.once(packageId.toString(),(event)=>{\n            //         logDebug(`Engine ==> send => onAck => ${safeJsonStringify(event)}`)\n            //         if (event && event.result){\n            //             requestAnswer.onAck?.()\n            //         }\n            //     })\n            //     if (requestAnswer.resolve){\n            //         this.bindRequestForPromise(requestId, requestAnswer.resolve)\n            //     }\n            // }catch (e) {\n            //     return Promise.reject(e)\n            // }\n        });\n    }\n    handleResponse(event, response) {\n        (0, log_1.logDebug)(`Engine ==>> handleResponse_1  ======>response: ${(0, safejson_1.safeJsonStringify)(response)}`, event);\n        if (\"requestId\" in response) {\n            (0, log_1.logDebug)(\"Engine ==>> handleResponse_2  ===> in response\");\n            let requestId = response.requestId;\n            const resolve = this.pendingRequests.get(requestId);\n            if (resolve) {\n                (0, log_1.logDebug)(\"Engine ==>> handleResponse_3  ===> find resolve:\", resolve);\n                resolve(response);\n                // 从pendingRequests中删除这个Promise\n                this.pendingRequests.delete(requestId);\n            }\n            else {\n                (0, log_1.logDebug)(\"Engine ==>> handleResponse_3  ===> not find resolve:\");\n                if (response.method === \"disconnect\") {\n                    this.disconnectListener.forEach(listener => listener());\n                    this.disconnectListener = [];\n                    this.disconnect();\n                }\n                else if (response.method === \"session_connecting\") {\n                    (0, log_1.logDebug)(\"Engine ==>> handleResponse_4  ===> sessionConnectingListener\");\n                    if (this.sessionConnectingListener) {\n                        (0, log_1.logDebug)(\"Engine ==>> handleResponse_4  ===> sessionConnectingListener not null\");\n                        this.sessionConnectingListener();\n                        this.sessionConnectingListener = undefined;\n                    }\n                }\n            }\n        }\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.restoreConnect(sessionInfo.topic));\n            onConnectResult(sessionInfo);\n        });\n    }\n    conect(request, sessionConfig, onConnectResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            const connectInfo = this.connectionManager.getConnectInfo();\n            const requestId = this.getRequestId();\n            let openUniversalLink = (_a = sessionConfig.openUniversalUrl) !== null && _a !== void 0 ? _a : false;\n            const connectRequest = {\n                protocolVer: Number(protocol_1.tonConnectSdkVersion),\n                topic: connectInfo.channelId,\n                clientId: connectInfo.clientId,\n                requestId: requestId,\n                dAppInfo: sessionConfig.dappInfo,\n                requests: request,\n            };\n            const connectRequestStr = JSON.stringify(connectRequest);\n            const utf8Array = new TextEncoder().encode(connectRequestStr);\n            const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n            const deeplinkUrl = `${protocol_1.standardDeeplink}?param=${base64Encoded}`;\n            (0, log_1.logDebug)('engine ==>> connect ==>>deeplinkUrl:', deeplinkUrl);\n            const isIOS = (0, utils_2.isIos)();\n            (0, log_1.logDebug)(`engine ==>> connect ==>>isIOS: ${isIOS}   openUniversalLink: ${openUniversalLink}`);\n            if (isIOS && openUniversalLink) {\n                (0, log_1.logDebug)('bridge-provider ==>> connect_3');\n                (0, utils_1.openOKXDeeplinkWithFallback)(deeplinkUrl);\n            }\n            yield ((_b = this.connectionManager) === null || _b === void 0 ? void 0 : _b.disconnect(false));\n            this.bindRequestForPromise(requestId, (response) => {\n                let session = this.onConnect(response, sessionConfig, connectInfo.channelId);\n                onConnectResult(session, response);\n            });\n            try {\n                yield this.connectionManager.connect();\n            }\n            catch (e) {\n                (0, log_1.logDebug)('Engine conect error', e);\n                throw e;\n            }\n            if (!isIOS && openUniversalLink) {\n                (0, log_1.logDebug)('bridge-provider ==>> connect_4');\n                (0, utils_1.openOKXDeeplinkWithFallback)(deeplinkUrl);\n            }\n            return {\n                connectInfo: connectInfo,\n                deeplinkUrl: (0, utils_1.getUniversalLink)(deeplinkUrl)\n            };\n        });\n    }\n    onConnect(connectResponse, sessionConfig, topic) {\n        if (connectResponse.method == \"connect\") {\n            let namespaces = (0, sessionUtils_1.buildNameSpacesByConnectResponse)(connectResponse);\n            if (namespaces) {\n                let session = {\n                    topic: topic,\n                    sessionConfig: sessionConfig,\n                    namespaces: namespaces\n                };\n                return session;\n            }\n        }\n        return null;\n    }\n    universalConnect(request, sessionConfig, connectInfoAndUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b, _c, _d;\n                try {\n                    (0, log_1.logDebug)(\"engine universalConnect request :\", JSON.stringify(request));\n                    (0, log_1.logDebug)(\"engine universalConnect sessionConfig :\", JSON.stringify(sessionConfig));\n                    let universalRequest = [];\n                    request.forEach((item) => {\n                        let name = item.name;\n                        if (name.startsWith(\"requestAccounts\") || name.startsWith(\"ton\")) {\n                            universalRequest.push(item);\n                        }\n                    });\n                    (0, log_1.logDebug)(\"engine universalConnect universalRequest :\", JSON.stringify(universalRequest));\n                    const connectInfo = this.connectionManager.getConnectInfo();\n                    const requestId = this.getRequestId();\n                    let openUniversalLink = (_a = sessionConfig.openUniversalUrl) !== null && _a !== void 0 ? _a : false;\n                    const universalConnectRequest = {\n                        protocolVer: Number(protocol_1.tonConnectSdkVersion),\n                        topic: connectInfo.channelId,\n                        clientId: connectInfo.clientId,\n                        requestId: requestId,\n                        dAppInfo: sessionConfig.dappInfo,\n                        requests: universalRequest,\n                        redirect: (_b = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _b !== void 0 ? _b : \"none\"\n                    };\n                    const base64Encoded = (0, url_1.encodeConnectParams)(universalConnectRequest);\n                    universalConnectRequest.redirect = (_c = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _c !== void 0 ? _c : \"none\";\n                    (0, log_1.logDebug)('engine universalConnect ==>>universalConnectRequest:', JSON.stringify(universalConnectRequest));\n                    var openOKXLink = \"\";\n                    // open app wallet\n                    if (openUniversalLink) {\n                        openOKXLink = (0, url_1.getOKXLink)(universalConnectRequest, sessionConfig.useMini, sessionConfig.tmaReturnUrl);\n                        (0, log_1.logDebug)('engine universalConnect ==>>openOKXLink:', openOKXLink);\n                    }\n                    const openMethod = () => sessionConfig.useMini ? (0, url_1.openOKXTMAWalletlinkWithFallback)(openOKXLink) :\n                        (0, utils_1.useShortLink)() ? (0, utils_1.openOKXUniversalLink)(openOKXLink) : (0, utils_1.openOKXDeeplinkWithFallback)(openOKXLink);\n                    (0, log_1.logDebug)('engine universalConnect ==>>openOKXLink:', openOKXLink);\n                    const isIOS = (0, utils_2.isIos)();\n                    if (isIOS && openUniversalLink) {\n                        (0, log_1.logDebug)(`engine universalConnect ==>>isIOS: ${isIOS}   openUniversalLink: ${openUniversalLink}`);\n                        openMethod();\n                    }\n                    yield ((_d = this.connectionManager) === null || _d === void 0 ? void 0 : _d.disconnect(false));\n                    this.bindRequestForPromise(requestId, (response) => {\n                        var _a, _b, _c, _d;\n                        try {\n                            let connectResponse = response;\n                            if (connectResponse.method == \"connect\") {\n                                (0, log_1.logDebug)(\"engin  universalConnect success connectResponse:>>>\", JSON.stringify(connectResponse));\n                                let namespaces = (0, sessionUtils_1.buildNameSpacesByConnectResponse)(connectResponse);\n                                if (namespaces) {\n                                    let walletName = undefined;\n                                    if (((_b = (_a = connectResponse.payload) === null || _a === void 0 ? void 0 : _a.responses) === null || _b === void 0 ? void 0 : _b[0]) && \"walletName\" in connectResponse.payload.responses[0]) {\n                                        walletName = connectResponse.payload.responses[0]['walletName'];\n                                    }\n                                    let session = {\n                                        topic: connectInfo.channelId,\n                                        sessionConfig: sessionConfig,\n                                        namespaces: namespaces,\n                                        wallet: Object.assign(Object.assign({}, (_c = connectResponse.payload) === null || _c === void 0 ? void 0 : _c.wallet), { walletName: walletName }),\n                                    };\n                                    let methodsResponse = connectResponse.payload.responses.find(item => item.name === 'requestAccounts');\n                                    if (methodsResponse && methodsResponse.connectRequestMethods) {\n                                        session.signResponse = methodsResponse.connectRequestMethods;\n                                    }\n                                    (0, log_1.logDebug)(\"engin  universalConnect success session:>>>\", JSON.stringify(session));\n                                    resolve(session);\n                                }\n                                else {\n                                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n                                }\n                            }\n                            else if (connectResponse.method == \"connect_error\" && ((_d = connectResponse.payload) === null || _d === void 0 ? void 0 : _d.code)) {\n                                throw new protocol_1.OKXConnectError(connectResponse.payload.code);\n                            }\n                        }\n                        catch (e) {\n                            reject(e);\n                        }\n                    });\n                    try {\n                        yield this.connectionManager.connect();\n                    }\n                    catch (e) {\n                        (0, log_1.logDebug)('Engine universalConnect error', e);\n                        throw e;\n                    }\n                    if (!isIOS && openUniversalLink) {\n                        openMethod();\n                    }\n                    (0, log_1.logDebug)('engin  universalConnect ==>> connectInfoAndUrl:', connectInfoAndUrl);\n                    this.sendSession(base64Encoded);\n                    if (connectInfoAndUrl) {\n                        const info = {\n                            connectRequest: universalConnectRequest,\n                            redirect: sessionConfig.redirect,\n                            tmaReturnUrl: sessionConfig.tmaReturnUrl,\n                        };\n                        (0, log_1.logDebug)(\"universalConnect connectInfoAndUrl info :\", JSON.stringify(info));\n                        connectInfoAndUrl(info);\n                    }\n                }\n                catch (error) {\n                    (0, log_1.logDebug)(\"Engine universalConnect catch error\", error);\n                    reject(error);\n                }\n            }));\n        });\n    }\n}\nexports.Engine = Engine;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = exports.Engine = exports.WalletConnectionManager = exports.ConnectionManager = exports.OKXWalletConnector = void 0;\nvar connect_1 = require(\"./connect\");\nObject.defineProperty(exports, \"OKXWalletConnector\", { enumerable: true, get: function () { return connect_1.OKXWalletConnector; } });\nvar connectionManager_1 = require(\"./connectionManager\");\nObject.defineProperty(exports, \"ConnectionManager\", { enumerable: true, get: function () { return connectionManager_1.ConnectionManager; } });\nvar walletConnectionManager_1 = require(\"./walletConnectionManager\");\nObject.defineProperty(exports, \"WalletConnectionManager\", { enumerable: true, get: function () { return walletConnectionManager_1.WalletConnectionManager; } });\nvar engine_1 = require(\"./engine\");\nObject.defineProperty(exports, \"Engine\", { enumerable: true, get: function () { return engine_1.Engine; } });\nvar storage_1 = require(\"./storage\");\nObject.defineProperty(exports, \"Storage\", { enumerable: true, get: function () { return storage_1.Storage; } });\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MULTICODEC_ED25519_LENGTH = exports.MULTICODEC_ED25519_HEADER = exports.MULTICODEC_ED25519_BASE = exports.MULTICODEC_ED25519_ENCODING = exports.DID_METHOD = exports.DID_PREFIX = exports.DID_DELIMITER = exports.KEY_PAIR_SEED_LENGTH = exports.DATA_ENCODING = exports.JSON_ENCODING = exports.JWT_ENCODING = exports.JWT_DELIMITER = exports.JWT_IRIDIUM_TYP = exports.JWT_IRIDIUM_ALG = exports.JWTHeaderType = void 0;\nexports.generateKeyPair = generateKeyPair;\nexports.decodeJSON = decodeJSON;\nexports.encodeJSON = encodeJSON;\nexports.encodeIss = encodeIss;\nexports.decodeIss = decodeIss;\nexports.encodeSig = encodeSig;\nexports.decodeSig = decodeSig;\nexports.encodeData = encodeData;\nexports.decodeData = decodeData;\nexports.encodeJWT = encodeJWT;\nexports.decodeJWT = decodeJWT;\nexports.signJWT = signJWT;\nexports.verifyJWT = verifyJWT;\nconst ed25519 = __importStar(require(\"@stablelib/ed25519\"));\nconst safejson_1 = require(\"../utils/safejson\");\nconst utils_1 = require(\"../utils/utils\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst log = __importStar(require(\"../utils/log\"));\nconst stringUtils_1 = require(\"../utils/stringUtils\");\nexports.JWTHeaderType = \"dapp\";\nexports.JWT_IRIDIUM_ALG = \"EdDSA\";\nexports.JWT_IRIDIUM_TYP = \"JWT\";\nexports.JWT_DELIMITER = \".\";\nexports.JWT_ENCODING = \"base64url\";\nexports.JSON_ENCODING = \"utf8\";\nexports.DATA_ENCODING = \"utf8\";\nexports.KEY_PAIR_SEED_LENGTH = 32;\nexports.DID_DELIMITER = \":\";\nexports.DID_PREFIX = \"did\";\nexports.DID_METHOD = \"key\";\nexports.MULTICODEC_ED25519_ENCODING = \"base58btc\";\nexports.MULTICODEC_ED25519_BASE = \"z\";\nexports.MULTICODEC_ED25519_HEADER = \"K36\";\nexports.MULTICODEC_ED25519_LENGTH = 32;\nfunction generateKeyPair() {\n    // let local_seed = randomBytes(KEY_PAIR_SEED_LENGTH)\n    // return ed25519.generateKeyPairFromSeed(local_seed);\n    return tweetnacl_1.default.sign.keyPair();\n}\nfunction decodeJSON(str) {\n    return (0, safejson_1.safeJsonParse)((0, stringUtils_1.okxtoString)((0, stringUtils_1.okxfromString)(str, exports.JWT_ENCODING), exports.JSON_ENCODING));\n}\nfunction encodeJSON(val) {\n    return (0, stringUtils_1.okxtoString)((0, stringUtils_1.okxfromString)((0, safejson_1.safeJsonStringify)(val), exports.JSON_ENCODING), exports.JWT_ENCODING);\n}\nfunction encodeIss(publicKey) {\n    log.logDebug(`publicKey: ${(0, utils_1.toHexString)(publicKey)}`);\n    var publicKeyStr = (0, stringUtils_1.okxtoString)(publicKey, exports.MULTICODEC_ED25519_ENCODING);\n    return [exports.DID_PREFIX, exports.DID_METHOD, publicKeyStr].join(exports.DID_DELIMITER);\n}\nfunction decodeIss(issuer) {\n    const [prefix, method, multicodec] = issuer.split(exports.DID_DELIMITER);\n    if (prefix !== exports.DID_PREFIX || method !== exports.DID_METHOD) {\n        throw new Error(`Issuer must be a DID with method \"key\"`);\n    }\n    if (multicodec === undefined) {\n        throw new Error('multicodec is undefined');\n    }\n    const publicKey = (0, stringUtils_1.okxfromString)(multicodec, exports.MULTICODEC_ED25519_ENCODING);\n    if (publicKey === undefined || publicKey.length !== exports.MULTICODEC_ED25519_LENGTH) {\n        throw new Error(`Issuer must be a public key with length 32 bytes`);\n    }\n    return publicKey;\n}\n// ---------- Signature ----------------------------------------------- //\nfunction encodeSig(bytes) {\n    return (0, stringUtils_1.okxtoString)(bytes, exports.JWT_ENCODING);\n}\nfunction decodeSig(encoded) {\n    return (0, stringUtils_1.okxfromString)(encoded, exports.JWT_ENCODING);\n}\n// ---------- Data ----------------------------------------------- //\nfunction encodeData(params) {\n    return (0, stringUtils_1.okxfromString)([encodeJSON(params.header), encodeJSON(params.payload)].join(exports.JWT_DELIMITER), exports.DATA_ENCODING);\n}\nfunction decodeData(data) {\n    var _a, _b;\n    const params = (0, stringUtils_1.okxtoString)(data, exports.DATA_ENCODING).split(exports.JWT_DELIMITER);\n    const header = decodeJSON((_a = params[0]) !== null && _a !== void 0 ? _a : '{}');\n    const payload = decodeJSON((_b = params[1]) !== null && _b !== void 0 ? _b : '{}');\n    return { header, payload };\n}\n// ---------- JWT ----------------------------------------------- //\nfunction encodeJWT(params) {\n    return [encodeJSON(params.header), encodeJSON(params.payload), encodeSig(params.signature)].join(exports.JWT_DELIMITER);\n}\nfunction decodeJWT(jwt) {\n    var _a, _b, _c;\n    const params = jwt.split(exports.JWT_DELIMITER);\n    const header = decodeJSON((_a = params[0]) !== null && _a !== void 0 ? _a : '{}');\n    const payload = decodeJSON((_b = params[1]) !== null && _b !== void 0 ? _b : '{}');\n    const signature = decodeSig((_c = params[2]) !== null && _c !== void 0 ? _c : '{}');\n    const data = (0, stringUtils_1.okxfromString)(params.slice(0, 2).join(exports.JWT_DELIMITER), exports.DATA_ENCODING);\n    return { header, payload, signature, data };\n}\nfunction signJWT(sub_1, aud_1, ttl_1, keyPair_1) {\n    return __awaiter(this, arguments, void 0, function* (sub, aud, ttl, keyPair, iat = Math.floor(Date.now())) {\n        const header = { alg: exports.JWT_IRIDIUM_ALG, typ: exports.JWT_IRIDIUM_TYP };\n        const iss = encodeIss(keyPair.publicKey);\n        const exp = iat + ttl;\n        const act = \"authenticate user\";\n        const payload = { iss, sub, aud, act, iat, exp };\n        const data = encodeData({ header, payload });\n        // const signature = ed25519.sign(keyPair.secretKey, data);\n        log.logDebug(`get sec kp: ${keyPair.secretKey} {${keyPair.secretKey.length}}`);\n        const signature = tweetnacl_1.default.sign.detached(data, keyPair.secretKey);\n        return encodeJWT({ header, payload, signature });\n    });\n}\nfunction verifyJWT(jwt) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { header, payload, data, signature } = decodeJWT(jwt);\n        if (header.alg !== exports.JWT_IRIDIUM_ALG || header.typ !== exports.JWT_IRIDIUM_TYP) {\n            throw new Error(\"JWT must use EdDSA algorithm\");\n        }\n        const publicKey = decodeIss(payload.iss);\n        return ed25519.verify(publicKey, data, signature);\n    });\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCONNECTOR_JWT_TTL = exports.OKXCONNECTOR_JWT_WALLET_SIDE = exports.OKXCONNECTOR_JWT_SIDE = void 0;\nexports.OKXCONNECTOR_JWT_SIDE = \"wallet\";\nexports.OKXCONNECTOR_JWT_WALLET_SIDE = \"dapp\";\nexports.OKXCONNECTOR_JWT_TTL = 86400000;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildNameSpacesByConnectResponse = buildNameSpacesByConnectResponse;\nexports.buildRequestAccountNameSpacesByConnectResponse = buildRequestAccountNameSpacesByConnectResponse;\nconst log_1 = require(\"../utils/log\");\nfunction buildNameSpacesByConnectResponse(connectResponse) {\n    let requestAccountNameSpaces = buildRequestAccountNameSpacesByConnectResponse(connectResponse);\n    return requestAccountNameSpaces;\n}\nfunction buildRequestAccountNameSpacesByConnectResponse(connectResponse) {\n    let result = {};\n    (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start connectResponse111>>', JSON.stringify(connectResponse));\n    let universalResponse = connectResponse.payload.responses.find(item => item.name === 'requestAccounts');\n    if (universalResponse && universalResponse.accounts) {\n        let filterAccount = [];\n        for (const item of universalResponse.accounts) {\n            if (item.namespace === \"ton\") {\n                if (item.data && item.data.ton_addr) {\n                    if (item.data.ton_addr.address && item.data.ton_addr.address.length > 0) {\n                        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start TON>>', JSON.stringify(item));\n                        filterAccount.push(item);\n                    }\n                }\n            }\n            else {\n                (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start other>>', JSON.stringify(item));\n                filterAccount.push(item);\n            }\n        }\n        universalResponse.accounts = filterAccount;\n    }\n    const tonAddress = connectResponse.payload.responses.find(item => item.name === 'ton_addr');\n    const tonProof = connectResponse.payload.responses.find(item => item.name === 'ton_proof');\n    if (tonAddress && !universalResponse) { //adapt tonsdk\n        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse adapt ton data >>');\n        let address = tonAddress.address;\n        address = 'ton:' + tonAddress.network + \":\" + address;\n        let data = {\n            ton_addr: tonAddress\n        };\n        if (tonProof) {\n            data.ton_proof = tonProof;\n        }\n        universalResponse = {\n            name: \"requestAccounts\",\n            accounts: [{\n                    namespace: 'ton',\n                    addresses: [address],\n                    methods: ['ton_sendTransaction'],\n                    extra: {},\n                    data: data,\n                }]\n        };\n    }\n    (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse end universalResponse>>>', JSON.stringify(universalResponse));\n    universalResponse.accounts.forEach(item => {\n        var chains = [];\n        var accounts = [];\n        item.addresses.forEach(addressItem => {\n            var addressArr = addressItem.split(\":\");\n            (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse addressArr>>', addressArr.length);\n            if (addressArr.length >= 3) {\n                let chain = addressArr.slice(0, 2).join(\":\");\n                chains.push(chain);\n                accounts.push(addressItem);\n                (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse chain:>>', chain, \"addressItem:\", addressItem);\n            }\n        });\n        if (item.data && item.data.ton_addr) {\n            item.data.ton_addr.name = 'ton_addr';\n        }\n        if (item.data && item.data.ton_proof) {\n            item.data.ton_proof.name = 'ton_proof';\n        }\n        result[item.namespace] = {\n            chains: chains,\n            accounts: accounts,\n            methods: item.methods,\n            extra: item.extra,\n            payload: item.data\n        };\n        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse result>>', JSON.stringify(result));\n    });\n    return result;\n}\n/*export function buildTonNameSpaceByConnectResponse(connectResponse: ConnectResponseSuccess): Namespaces | undefined {\n    const tonAddrItem: TonAddressItemReply = connectResponse.payload.responses.find(\n        item => item.name === 'ton_addr'\n    ) as TonAddressItemReply;\n\n    const tonProfItem: TonProofItemReply = connectResponse.payload.responses.find(\n        item => item.name === 'ton_proof'\n    ) as TonProofItemReply;\n\n    if (!tonAddrItem) {\n        return undefined\n    }\n\n    return {\n        NameSpaceKeyTON: {\n            chains: [tonAddrItem.network],\n            accounts: [],\n            methods: connectResponse.payload.wallet.features?.ton,\n            payload: {\n                tonAccount: {\n                    address: tonAddrItem.address,\n                    chain: tonAddrItem.network,\n                    walletStateInit: tonAddrItem.walletStateInit,\n                    publicKey: tonAddrItem.publicKey\n                },\n                tonProof: tonProfItem\n            }\n        }\n    }\n}*/\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = void 0;\nconst storageconstants_1 = require(\"./storageconstants\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst utils_1 = require(\"../utils/utils\");\nconst utils_2 = require(\"../utils\");\nconst log = __importStar(require(\"../utils/log\"));\nconst utils_3 = require(\"../utils\");\nconst crypto_js_1 = require(\"crypto-js\");\nclass Storage {\n    constructor(subKey, beforeKey = undefined) {\n        const localStorage = (0, utils_1.resolveLocalStorage)();\n        // 0. check and upgrade beforeKey\n        log.logDebug('------ update before cache ------');\n        if (beforeKey) {\n            this.checkAndUpgradeCache(beforeKey, subKey);\n        }\n        // 1. load data from local storage\n        this.storeKey = '';\n        this.cipherIV = '';\n        this.subKey = subKey;\n        log.logDebug('--------get current local storage --------');\n        log.logDebug(localStorage);\n        const cacheStr = localStorage.getItem(Storage.cacheKey + subKey);\n        if (typeof cacheStr === \"undefined\" || cacheStr === null) {\n            log.logDebug(\"with no cache\");\n            this.cache = {};\n            return;\n        }\n        log.logDebug(cacheStr);\n        if ((cacheStr === null || cacheStr === void 0 ? void 0 : cacheStr.length) > 0) {\n            var cacheObj = (0, utils_2.safeJsonParse)(cacheStr);\n            this.cache = cacheObj;\n        }\n        log.logDebug(`get cache obj: ${this.cache}`);\n        if (typeof this.cache === 'undefined' || this.cache == null) {\n            this.cache = {};\n        }\n    }\n    checkAndUpgradeCache(fromCacheKey, toCacheKey) {\n        if (fromCacheKey && fromCacheKey.length > 0 && toCacheKey && toCacheKey.length > 0) {\n            // 1. get all infos from from-cache-key\n            log.logDebug('--------get current local storage --------');\n            log.logDebug(localStorage);\n            const cacheStr = localStorage.getItem(Storage.cacheKey + fromCacheKey);\n            if (typeof cacheStr === \"undefined\" || cacheStr === null) {\n                log.logDebug(\"no pre cache content\");\n                return;\n            }\n            log.logDebug(cacheStr);\n            if ((cacheStr === null || cacheStr === void 0 ? void 0 : cacheStr.length) > 0) {\n                // 2. save to to-cache-key\n                log.logDebug(\"write in cache content: \", fromCacheKey, '->', toCacheKey);\n                localStorage.setItem(Storage.cacheKey + toCacheKey, cacheStr);\n                // 3. clean from item\n                log.logDebug(\"clean in cache content: \", fromCacheKey);\n                localStorage.removeItem(Storage.cacheKey + fromCacheKey);\n            }\n        }\n        else {\n            log.logDebug('no pre cache key:', fromCacheKey);\n        }\n    }\n    saveContent(content, key, id = '-') {\n        let item = {\n            id: id,\n            timestamp: Date.now().toString(),\n            content: content\n        };\n        this.saveItem(item, key);\n    }\n    saveItem(item, key) {\n        let localKey = Storage.cacheKey + this.subKey;\n        const localStorage = (0, utils_1.resolveLocalStorage)();\n        log.logDebug(this.cache);\n        log.logDebug(`get cache obj: ${this.cache}, ${key}, ${item}`);\n        this.cache[key] = item;\n        let totalCacheStr = (0, utils_2.safeJsonStringify)(this.cache);\n        log.logDebug(`STORAGE: ${key} @ ${this.cache}`);\n        localStorage.setItem(localKey, totalCacheStr);\n    }\n    getItem(key) {\n        log.logDebug(`STORAGE >> getItem: ${key} @ ${this.cache}`);\n        return this.cache[key];\n    }\n    getCachedPBKDF2InfoKey() {\n        var _a, _b, _c, _d;\n        const pwLen = 32;\n        const saltLen = 24;\n        if (this.storeKey.length > 0 && ((_a = this.cipherIV) === null || _a === void 0 ? void 0 : _a.length) > 0) {\n            return {\n                pw: this.storeKey,\n                iv: this.cipherIV\n            };\n        }\n        let salt = (_b = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGER_CRYPTO_SALT)) === null || _b === void 0 ? void 0 : _b.content;\n        if (!salt) {\n            salt = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(saltLen));\n            this.saveContent(salt, storageconstants_1.OKXCONNECTOR_STORAGER_CRYPTO_SALT);\n        }\n        let pw = (_c = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD)) === null || _c === void 0 ? void 0 : _c.content;\n        if (!pw) {\n            pw = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(pwLen));\n            this.saveContent(pw, storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD);\n        }\n        let cipherIV = (_d = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV)) === null || _d === void 0 ? void 0 : _d.content;\n        if (!cipherIV) {\n            // let ivBuffer = Buffer.from(nacl.randomBytes(16))\n            let ivBuffer = tweetnacl_1.default.randomBytes(16);\n            cipherIV = (0, utils_1.toHexString)(ivBuffer);\n            this.saveContent(cipherIV, storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV);\n        }\n        this.cipherIV = cipherIV;\n        this.storeKey = (0, crypto_js_1.PBKDF2)(pw, salt, { iterations: 10 }).toString();\n        return {\n            pw: this.storeKey,\n            iv: this.cipherIV\n        };\n    }\n    encryptStoreMsg(msg, key) {\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg start ${Date.now()}`);\n        let storeInfo = this.getCachedPBKDF2InfoKey();\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg mid ${Date.now()}`);\n        var result = crypto_js_1.AES.encrypt(msg, storeInfo.pw).toString();\n        this.saveContent(result, key);\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg end ${Date.now()}`);\n    }\n    getAndDecrypt(key) {\n        (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt start ${Date.now()}`);\n        let item = this.getItem(key);\n        if (item && item.content) {\n            let storeInfo = this.getCachedPBKDF2InfoKey();\n            (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt mid ${Date.now()}`);\n            let result = crypto_js_1.AES.decrypt(item.content, storeInfo.pw).toString(crypto_js_1.enc.Utf8);\n            (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt end ${Date.now()}`);\n            return result;\n        }\n        return null;\n    }\n    clearCache(key = undefined) {\n        if (key === undefined) {\n            // clean all\n            this.cache = {};\n            let localKey = Storage.cacheKey + this.subKey;\n            localStorage.setItem(localKey, '');\n        }\n        else {\n            let localKey = Storage.cacheKey + this.subKey;\n            const localStorage = (0, utils_1.resolveLocalStorage)();\n            log.logDebug(this.cache);\n            this.cache[key] = null;\n            let totalCacheStr = (0, utils_2.safeJsonStringify)(this.cache);\n            log.logDebug(`STORAGE: clean key ${key} @ ${this.cache}`);\n            localStorage.setItem(localKey, totalCacheStr);\n        }\n    }\n}\nexports.Storage = Storage;\nStorage.cacheKey = 'OKXStorageKey';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCONNECTOR_STORAGE_CIPHER_METHOD = exports.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV = exports.OKXCONNECTOR_STORAGER_CRYPTO_SALT = exports.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD = exports.OKXCONNECTOR_TON_KEY = exports.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE = exports.OKXCONNECTOR_TOKEN_CACHE = exports.OKXCONNECTOR_JWT_KEY = exports.OKXCONNECTOR_SESSION_PREFIX_KEY = exports.OKXCONNECTOR_CRYPTO_KEY = exports.OKXCONNECTOR_CACHE_KEY_DAPP = exports.OKXCONNECTOR_CACHE_KEY = void 0;\nexports.OKXCONNECTOR_CACHE_KEY = \"ck\";\nexports.OKXCONNECTOR_CACHE_KEY_DAPP = \"ck_dapp\";\nexports.OKXCONNECTOR_CRYPTO_KEY = \"cck_k\";\nexports.OKXCONNECTOR_SESSION_PREFIX_KEY = \"cspk_\";\nexports.OKXCONNECTOR_JWT_KEY = \"cjk_k\";\nexports.OKXCONNECTOR_TOKEN_CACHE = \"ct\";\nexports.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE = \"csp\";\nexports.OKXCONNECTOR_TON_KEY = \"OKXStorage_ctc\";\nexports.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD = \"scp\";\nexports.OKXCONNECTOR_STORAGER_CRYPTO_SALT = \"scs\";\nexports.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV = \"scpc\";\nexports.OKXCONNECTOR_STORAGE_CIPHER_METHOD = \"aes-256-cbc\";\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnectionManagerEvent = exports.WalletConnectionManagerTopicInfoCacheKey = void 0;\nexports.WalletConnectionManagerTopicInfoCacheKey = \"wcmtic\";\nexports.WalletConnectionManagerEvent = {\n    RECEIVE_REQUEST: \"payload\"\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnectionManager = void 0;\nconst connect_1 = require(\"./connect\");\nconst commands_1 = require(\"./commands\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst jwtconstants_1 = require(\"./jwtconstants\");\nconst constants_1 = require(\"./constants\");\nconst walletConnectionConstants_1 = require(\"./walletConnectionConstants\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils/utils\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst jwt_1 = require(\"./jwt\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst utils_2 = require(\"../utils\");\nclass WalletConnectionManager {\n    constructor() {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.communicateEvents = new eventemitter3_1.EventEmitter();\n        log.logDebug('connect manager construct');\n        // local storage\n        this.connectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n        // this.crypto = new SessionCrypto()\n        this.jwtKeyPair = this.getCachedJWTKeyPair();\n        this.saveJWTKeyPair(this.jwtKeyPair);\n        // wss connection\n        this.connector = new connect_1.OKXWalletConnector(constants_1.OKXCONNECTOR_WS_URL_1);\n        this.packageId = Date.now();\n        // connection state\n        this.sessionCryptoInfoMap = new Map();\n        // log.logDebug(`this.connectedWalletPK  constructor   ${this.connectedWalletPK}`)\n        this.inLogin = false;\n        this.isLogined = false;\n    }\n    refreshPackageId(offset = 0) {\n        this.packageId = Date.now() + offset;\n    }\n    saveCryptoKeyPair(topicId, keyPair) {\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(keyPair);\n        // encrypt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_CRYPTO_KEY + topicId);\n    }\n    getCachedCryptoKeyPair(topicId) {\n        // decrypt kp\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_CRYPTO_KEY + topicId);\n        const content = kp;\n        if (typeof content == 'string') {\n            log.logDebug('get cached crypto key:');\n            log.logDebug(content);\n            let keyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            return keyPairInfo;\n        }\n        else {\n            this.connectStorage.clearCache();\n        }\n        return null;\n    }\n    saveJWTKeyPair(keyPair) {\n        var strkeyPair = {\n            publicKey: (0, utils_1.toHexString)(keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(keyPair.secretKey)\n        };\n        log.logDebug('save jwt kp');\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(strkeyPair);\n        log.logDebug(cacheInfo);\n        // encrypt jwt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        log.logDebug('after save jwt kp');\n    }\n    getCachedJWTKeyPair() {\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            // TODO: decrypt jwt kp\n            log.logDebug('get cached jwt kp:');\n            log.logDebug(content);\n            let strKeyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            log.logDebug('save jwt kp');\n            log.logDebug(strKeyPairInfo);\n            var keyPair = {\n                publicKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.publicKey),\n                secretKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.secretKey)\n            };\n            return keyPair;\n        }\n        else {\n            return (0, jwt_1.generateKeyPair)();\n        }\n    }\n    isTopicPublicKeyExist(topicId) {\n        log.logDebug(`isTopicPublicKeyExist  ===> ${topicId}`);\n        return this.sessionCryptoInfoMap.get(topicId);\n    }\n    makeJWT(timestampStr) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, jwt_1.signJWT)(timestampStr, jwtconstants_1.OKXCONNECTOR_JWT_WALLET_SIDE, jwtconstants_1.OKXCONNECTOR_JWT_TTL, // 24h\n            this.jwtKeyPair);\n        });\n    }\n    parseInternalMsg(internalMsg) {\n        try {\n            let internalObj = (0, safejson_1.safeJsonParse)(internalMsg);\n            let origin = internalObj['ivur-igbfft-ptjip'];\n            if (origin && origin.length > 0) {\n                let originContent = (0, utils_2.base64decode)(origin, true);\n                return originContent.toString();\n            }\n        }\n        catch (error) {\n            log.logError('parse internal msg', error);\n        }\n    }\n    updateClientId(topic, clientId) {\n        let sessionInfo = this.sessionCryptoInfoMap.get(topic);\n        (0, log_1.logDebug)('updateClientId', sessionInfo, topic, clientId);\n        if (sessionInfo && clientId && clientId.length > 0) {\n            if (sessionInfo.cid) {\n                // check\n                let lastCheck = (0, utils_1.getLastSixMd5Hash)(clientId);\n                if (sessionInfo.cid == lastCheck) {\n                    sessionInfo.dappPublicKey = clientId;\n                }\n                else {\n                    log.logError('cid check failed', sessionInfo, topic, clientId);\n                }\n            }\n            else {\n                sessionInfo.dappPublicKey = clientId;\n            }\n            // \n            this.syncCacheSessionInfo();\n        }\n        return false;\n    }\n    parsePackage(topic_1, input_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, input, ignoreACK = false) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;\n            this.events.emit(input.id, input);\n            // emit event\n            let sessionInfo = this.sessionCryptoInfoMap.get(topic);\n            log.logDebug('get sessionInfo for decrypt topic:', topic);\n            log.logDebug('get sessionInfo for decrypt:', input.id, topic, sessionInfo, this.sessionCryptoInfoMap);\n            if (sessionInfo && input.params.data) {\n                if ((_a = input.params.data) === null || _a === void 0 ? void 0 : _a.message) {\n                    // try parse internal message\n                    if ((_b = input.params.data) === null || _b === void 0 ? void 0 : _b.isInternalData) {\n                        let inner_message = (_c = input.params.data) === null || _c === void 0 ? void 0 : _c.message;\n                        let inner_topic = (_d = input.params.data) === null || _d === void 0 ? void 0 : _d.topic;\n                        let originContent = this.parseInternalMsg(inner_message);\n                        (0, log_1.logDebug)('parse internal origin: ', originContent);\n                        if (originContent && originContent.length > 0) {\n                            this.communicateEvents.emit(\"origin\", originContent, inner_topic);\n                        }\n                    }\n                    else {\n                        // try parse message base64\n                        try {\n                            let message = (_e = input.params.data) === null || _e === void 0 ? void 0 : _e.message;\n                            if (message.trimStart().startsWith('{')) {\n                                let messageObj = (0, safejson_1.safeJsonParse)(message);\n                                if (messageObj.method) {\n                                    if (messageObj.method == 'session_info') {\n                                        let sessionInfoString = messageObj.params.sessionInfo;\n                                        let base64Content = (0, utils_2.base64decode)(sessionInfoString, false);\n                                        (0, log_1.logDebug)(\"wallet connection manager requset base64Content:\", base64Content);\n                                        (0, log_1.logDebug)(\"base64Content:\" + base64Content);\n                                        let inner_connection = base64Content.toObject();\n                                        this.updateClientId(topic, inner_connection.clientId);\n                                    }\n                                    (0, log_1.logDebug)('<<< parse raw msg:', topic, messageObj);\n                                    this.communicateEvents.emit(topic, message);\n                                }\n                            }\n                            else {\n                                let message = sessionInfo.crypto.decryptWallet((_f = input.params.data) === null || _f === void 0 ? void 0 : _f.message, sessionInfo.dappPublicKey);\n                                (0, log_1.logDebug)('<<< receive msg:', topic, message);\n                                this.communicateEvents.emit(topic, message);\n                            }\n                        }\n                        catch (error) {\n                            let message = sessionInfo.crypto.decryptWallet((_g = input.params.data) === null || _g === void 0 ? void 0 : _g.message, sessionInfo.dappPublicKey);\n                            (0, log_1.logDebug)('<<< receive msg:', topic, message);\n                            this.communicateEvents.emit(topic, message);\n                        }\n                    }\n                }\n                else {\n                }\n            }\n            // send back ACK\n            if (!ignoreACK) {\n                yield this.sendACK(input.id, true);\n                if (topic) {\n                    let inputObj = input;\n                    if ((_j = (_h = inputObj.params) === null || _h === void 0 ? void 0 : _h.data) === null || _j === void 0 ? void 0 : _j.messageId) {\n                        this.refreshPackageId();\n                        yield this.sendReceive(this.packageId.toString(), (_l = (_k = inputObj.params) === null || _k === void 0 ? void 0 : _k.data) === null || _l === void 0 ? void 0 : _l.messageId, topic);\n                    }\n                }\n            }\n        });\n    }\n    recovrySessionInfoFromCache() {\n        // get topic ids and keys from session\n        // WalletConnectionCryptoCacheMap\n        // {[topicId]: {cryptoKeypair: {publicKey:string, secretKey:string}, dappPublicKey:clientId}}\n        let jsonStr = this.connectStorage.getAndDecrypt(walletConnectionConstants_1.WalletConnectionManagerTopicInfoCacheKey);\n        log.logDebug('get cached sessionInfos:', jsonStr);\n        if (jsonStr) {\n            let cacheMap = (0, safejson_1.safeJsonParse)(jsonStr);\n            for (let topicId in cacheMap) {\n                let topicItem = cacheMap[topicId];\n                log.logDebug('make topicItem:', topicItem);\n                let cryptoItem = {\n                    topic: topicId,\n                    crypto: new crypto_1.SessionCrypto({\n                        publicKey: topicItem.cryptoKeyPair.publicKey,\n                        secretKey: topicItem.cryptoKeyPair.secretKey\n                    }),\n                    dappPublicKey: topicItem.dappPublicKey,\n                    cid: topicItem.cid\n                };\n                this.sessionCryptoInfoMap.set(topicId, cryptoItem);\n            }\n        }\n        log.logDebug('get cached sessionInfos map:', this.sessionCryptoInfoMap);\n    }\n    syncCacheSessionInfo() {\n        let cacheMap = {};\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            log.logDebug('for each Keys', topicId);\n            if (cryptoItem) {\n                cacheMap[topicId] = {\n                    cryptoKeyPair: cryptoItem.crypto.stringifyKeypair(),\n                    dappPublicKey: cryptoItem.dappPublicKey,\n                    cid: cryptoItem.cid\n                };\n            }\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(cacheMap);\n        log.logDebug('sync cache sessionInfos:', jsonData);\n        this.connectStorage.encryptStoreMsg(jsonData, walletConnectionConstants_1.WalletConnectionManagerTopicInfoCacheKey);\n    }\n    cacheSessionInfo(topic, sessionInfo, sync = true) {\n        let dappPublicKey = sessionInfo.dappPublicKey;\n        // 1. search dapp public related topic ids\n        let duplicatedTopics = [];\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            log.logDebug('for each Keys', topicId);\n            if (cryptoItem.dappPublicKey == dappPublicKey) {\n                log.logDebug('duplicated dapp public key:', topicId, dappPublicKey);\n                duplicatedTopics.push(topicId);\n            }\n        }\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            if (duplicatedTopics.includes(topicId)) {\n                this.sessionCryptoInfoMap.delete(topicId);\n            }\n        }\n        // discard useless topics\n        log.logDebug('cleaned connect session cache:', this.sessionCryptoInfoMap);\n        // 2. remove previous connected topic ids\n        // 3. write in current topic\n        this.sessionCryptoInfoMap.set(topic, sessionInfo);\n        // TODO: search domain info and then delete \n        log.logDebug('cache sessionInfo:', topic, sessionInfo, this.sessionCryptoInfoMap);\n        if (sync) {\n            this.syncCacheSessionInfo();\n        }\n        return duplicatedTopics;\n    }\n    // add and subscribe topic\n    appendTopic(topic, sessionPublicKey, cid) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('4.1. get append Topic:', topic);\n            // 1. check if connected\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.isLogined) {\n                    var error = new Error();\n                    error.message = \"connection is not logined\";\n                    error.name = \"append error\";\n                    // throw error\n                    reject(error);\n                    return;\n                }\n                // 2. subscribe topic and session public key\n                let cryptoItem = {\n                    topic: topic,\n                    crypto: new crypto_1.SessionCrypto(),\n                    dappPublicKey: sessionPublicKey ? sessionPublicKey : \"\",\n                    cid: cid\n                };\n                let duplicatedTopics = this.cacheSessionInfo(topic, cryptoItem, false);\n                // make sure cache session info before subscribe\n                yield this.subscribeTopics(Array.from([topic]));\n                this.refreshPackageId();\n                log.logDebug(`5. subscribe callback then fetch append message: ${this.packageId}, ${topic}`);\n                log.reportLog(`5. subscribe callback then fetch append message`);\n                const timeF = new Date().getTime();\n                (0, log_1.logDebug)(\"Append --subscribe callback->\", timeF - this.timeLog);\n                resolve(duplicatedTopics);\n            }));\n        });\n    }\n    confirmAppendingTopics() {\n        this.syncCacheSessionInfo();\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.timeLog = new Date().getTime();\n            (0, log_1.logDebug)(\"[Wallet] ConnectTime---enter->\", this.timeLog);\n            log.reportLog('wallet connect connect called');\n            // 0. get cached topics and infos\n            let timestampStr = Date.now().toString();\n            var jwtToken = yield this.makeJWT(timestampStr);\n            log.logDebug(`generate jwt token: ${jwtToken}`);\n            this.connectStorage.saveContent(jwtToken, 'jwt');\n            this.recovrySessionInfoFromCache();\n            // 1.\n            return new Promise((resolve, reject) => {\n                // 1. when websocket opened\n                this.inLogin = true;\n                this.connector.onOpen(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug(`1. connector on open`);\n                    log.reportLog('1. wallet connect connect on open');\n                    const timeOne = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---open->\", timeOne - this.timeLog);\n                    //2. send jwt to login\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when login');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // throw error\n                            reject(error);\n                        }\n                        else {\n                            this.isLogined = true;\n                            resolve();\n                            // 3. subscribe cached topics\n                            log.logDebug('3. subscribe cached topics', this.sessionCryptoInfoMap);\n                            log.reportLog('3. wallet connect connect subscribe cached topics');\n                            if (this.sessionCryptoInfoMap.size > 0) {\n                                yield this.subscribeTopics(Array.from(this.sessionCryptoInfoMap.keys()));\n                            }\n                        }\n                    }));\n                    log.logDebug(`2. login called`);\n                    log.reportLog('2. wallet connect login called');\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        return yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_LOGIN,\n                        params: {\n                            token: jwtToken\n                        }\n                    });\n                }));\n                this.connector.connect().catch((err) => {\n                    (0, log_1.logDebug)('WalletConnectionManager connect error', err);\n                    reject(err);\n                });\n                // add callback\n                this.connector.addPackageParse((event) => {\n                    var _a, _b;\n                    log.logDebug(`connect: parse package`);\n                    log.logDebug(event);\n                    if (!(\"params\" in event) || !(\"data\" in event[\"params\"])) {\n                        this.parsePackage(\"\", event, true);\n                        return;\n                    }\n                    // ignore receive echo\n                    if ((_a = event.params.data) === null || _a === void 0 ? void 0 : _a.topic) {\n                        this.parsePackage((_b = event.params.data) === null || _b === void 0 ? void 0 : _b.topic, event, event.method === commands_1.CONNECT_METHOD_RECEIVE);\n                    }\n                });\n                // this.connector.addListener(safeJsonStringify(event), (rawMsg: string)=> {\n                //    rawMsg = rawMsg.replace(/'/g, '\"')\n                //    log.logDebug(`addListener ===> ${rawMsg}`)\n                //    if (typeof rawMsg !== 'undefined') {\n                //       var msgObj = safeJsonParse(rawMsg)\n                //       var msg = msgObj.message\n                //       let crypto = \n                //       var result = this.crypto.decrypt(msg, this.connectedWalletPK)\n                //       log.logDebug(`addListener ===> ${result}`)\n                //       return result\n                //    }\n                //    return undefined\n                // }, ()=>{\n                //    // emit success\n                // }, ()=>{\n                //    // emit fail\n                // })\n            });\n        });\n    }\n    // 获取对应topic session下的钱包公钥\n    // 在返回approve时需要填充到clientId字段中\n    getSessionPublicKey(topicId) {\n        if (this.isTopicPublicKeyExist(topicId)) {\n            let item = this.sessionCryptoInfoMap.get(topicId);\n            if (item) {\n                return (0, utils_1.toHexString)(item.crypto.keyPair.publicKey);\n            }\n        }\n        return undefined;\n    }\n    getCurrentCachedTopicIdList() {\n        return Array.from(this.sessionCryptoInfoMap.keys());\n    }\n    disconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            yield this.connector.disconnect();\n            //clean cached topic\n            //如果是恢复连接，就不清理解密public key\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            if (!fromRestore) {\n                this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n            }\n        });\n    }\n    send(topic_1, msg_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, msg, needPublicKey = false, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL, useRaw = false) {\n            var _a, _b;\n            // make send msg payload\n            log.logDebug(`message send =====> ${msg}`);\n            if (!this.isTopicPublicKeyExist(topic)) {\n                // channel not ready\n                throw new Error('connection not finish');\n            }\n            let connectedDappPK = (_a = this.sessionCryptoInfoMap.get(topic)) === null || _a === void 0 ? void 0 : _a.dappPublicKey;\n            let cryptoObject = (_b = this.sessionCryptoInfoMap.get(topic)) === null || _b === void 0 ? void 0 : _b.crypto;\n            let messageObj = undefined;\n            if (useRaw) {\n                messageObj = {\n                    message: msg,\n                };\n            }\n            if (cryptoObject && connectedDappPK && !useRaw) {\n                let message = cryptoObject.encryptWallet(msg, connectedDappPK);\n                messageObj = {\n                    message: message,\n                };\n            }\n            if (messageObj) {\n                if (needPublicKey && cryptoObject) {\n                    messageObj.clientId = (0, utils_1.toHexString)(cryptoObject.keyPair.publicKey);\n                    // let privateKey = toHexString(cryptoObject.keyPair.secretKey)\n                    // log.logDebug(`message send use dapp publicKey =====> ${connectedDappPK}`)\n                    // log.logDebug(`message send use publicKey =====> ${messageObj.clientId}`)\n                    // log.logDebug(`message send use secretKey =====> ${privateKey}`)\n                }\n                this.refreshPackageId();\n                const payload = {\n                    id: this.packageId.toString(),\n                    method: commands_1.CONNECT_METHOD_PUBLISH,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    params: {\n                        message: {\n                            topic: topic,\n                            message: (0, safejson_1.safeJsonStringify)(messageObj),\n                            ttl: ttl\n                        }\n                    } // crypted\n                };\n                this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                    // ack\n                    if (rsp && rsp.error) {\n                        log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                    }\n                    else if (rsp && !rsp.error) {\n                        log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                    }\n                }));\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n                return this.packageId;\n            }\n        });\n    }\n    sendACK(msgId_1, success_1) {\n        return __awaiter(this, arguments, void 0, function* (msgId, success, reason = undefined) {\n            if (success === true) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    result: true\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n            else if (reason) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    error: {\n                        code: reason.code, //int\n                        message: reason.message\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    // send receive\n    sendReceive(msgId, messageId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECEIVE,\n                params: {\n                    data: {\n                        messageId: messageId,\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendUnsubscribe(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: make disconnect payload\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), {\n                id: this.packageId.toString(),\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_UNSUB,\n                params: {\n                    topic: topic\n                }\n            });\n            // remove topicId\n            this.sessionCryptoInfoMap.delete(topic);\n            this.syncCacheSessionInfo();\n        });\n    }\n    // send receive\n    // 1. fetch all \n    // 2. send back receive\n    // 3. check has more, if so, repeat from 1st step\n    sendFetchAndConsumeMessages(msgId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(msgId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic == topic) {\n                                let messageId = msg.messageId;\n                                yield this.connector.getMsgPayloadFromHistory(msg);\n                                // send receive command to relay server\n                                this.refreshPackageId();\n                                yield this.sendReceive(this.packageId.toString(), messageId, topic);\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_FETCHMSG,\n                params: {\n                    data: {\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendBatchFetchAndConsumeMessages(packageId, topicIdList) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(packageId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic) {\n                                let messageId = msg.messageId;\n                                yield this.connector.getMsgPayloadFromHistory(msg);\n                                // send receive command to relay server\n                                this.refreshPackageId(i);\n                                yield this.sendReceive(this.packageId.toString(), messageId, msg.topic);\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendBatchFetchAndConsumeMessages(this.packageId.toString(), topicIdList);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            log.reportLog('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: packageId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_BATCH_FETCHMSG,\n                params: {\n                    topics: topicIdList,\n                    withInternalData: true\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                yield this.connector.connect();\n            }), payload);\n        });\n    }\n    cleanCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.connectStorage.clearCache();\n        });\n    }\n    saveSessionContent(key, data) {\n        if (!data) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(data);\n        this.connectStorage.encryptStoreMsg(jsonData, storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n    }\n    getSessionContent(key) {\n        let jsonStr = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        if (jsonStr) {\n            let object = (0, safejson_1.safeJsonParse)(jsonStr);\n            return object;\n        }\n        return undefined;\n    }\n    // subscribe then fetch messages for each topics\n    subscribeTopics(topicIdList) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)(\"4. topicid list\", topicIdList);\n            log.reportLog(\"4. topicid list\");\n            this.refreshPackageId();\n            const timeF = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let finishCount = 0;\n                //3. send subscribe\n                for (let idx = 0; idx < topicIdList.length; ++idx) {\n                    let topicId = topicIdList[idx];\n                    this.refreshPackageId(idx);\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when subscribe');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // reject(error)\n                            finishCount += 1;\n                            if (finishCount == topicIdList.length) {\n                                resolve();\n                            }\n                        }\n                        this.refreshPackageId(idx);\n                        const timeF = new Date().getTime();\n                        (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n                        finishCount += 1;\n                        if (finishCount == topicIdList.length) {\n                            // 4. fetch messages\n                            log.logDebug(`5. send fetch msg: ${this.packageId}, ${topicId}`);\n                            yield this.sendBatchFetchAndConsumeMessages(this.packageId.toString(), topicIdList);\n                            resolve();\n                        }\n                    }));\n                    log.logDebug(`3. login callback then send subscribe: ${this.packageId}, ${topicId}`);\n                    log.reportLog('3. login callback then send subscribe');\n                    const timeTh = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---login callback->\", timeTh - this.timeLog);\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        return yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_SUB,\n                        params: {\n                            topic: topicId\n                        }\n                    });\n                }\n            }));\n        });\n    }\n}\nexports.WalletConnectionManager = WalletConnectionManager;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SessionCrypto = void 0;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst utils_1 = require(\"../utils/utils\");\nclass SessionCrypto {\n    constructor(keyPair = undefined) {\n        this.nonceLength = 24;\n        this.sessionKeyPair = keyPair ? this.createKeypairFromString(keyPair) : this.createKeypair();\n    }\n    createKeypair() {\n        return tweetnacl_1.default.box.keyPair();\n    }\n    createKeypairFromString(keyPair) {\n        return {\n            publicKey: (0, utils_1.hexToByteArray)(keyPair.publicKey),\n            secretKey: (0, utils_1.hexToByteArray)(keyPair.secretKey),\n        };\n    }\n    createNonce() {\n        return tweetnacl_1.default.randomBytes(this.nonceLength);\n    }\n    get keyPair() {\n        return this.sessionKeyPair;\n    }\n    // dapp 加密:\n    // base64(hex（nonce+加密内容）)\n    encrypt(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl_1.default.box(encodedMessage, nonce, (0, utils_1.hexToByteArray)(receiverPublicKey), this.keyPair.secretKey);\n        let concatInfo = (0, utils_1.concatUint8Arrays)(nonce, encrypted);\n        var hexResult = (0, utils_1.toHexString)(concatInfo);\n        var encodedResult = new TextEncoder().encode(hexResult);\n        return (0, utils_1.base64encode)(encodedResult, false);\n    }\n    // 钱包加密内容\n    // 注意：没有中间hex的环节\n    // base64（nonce+加密内容)\n    encryptWallet(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl_1.default.box(encodedMessage, nonce, (0, utils_1.hexToByteArray)(receiverPublicKey), this.keyPair.secretKey);\n        let concatInfo = (0, utils_1.concatUint8Arrays)(nonce, encrypted);\n        return (0, utils_1.base64encode)(concatInfo, false);\n    }\n    // dapp 解密\n    // base64(split(nonce+加密内容))\n    decrypt(message, senderPublicKey) {\n        let base64Content = (0, utils_1.base64decode)(message, true);\n        let messageByteArray = base64Content.toUint8Array();\n        const [nonce, internalMessage] = (0, utils_1.splitToUint8Arrays)(messageByteArray, this.nonceLength);\n        const decrypted = tweetnacl_1.default.box.open(internalMessage, nonce, (0, utils_1.hexToByteArray)(senderPublicKey), this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${(0, utils_1.toHexString)(this.keyPair.publicKey)} \\n keypair secretkey: ${(0, utils_1.toHexString)(this.keyPair.secretKey)}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    // dapp 解密\n    // base64(hextoByte(split(nonce+加密内容)))\n    decryptWallet(message, senderPublicKey) {\n        let base64Content = (0, utils_1.base64decode)(message, true);\n        let messageByteArray = (0, utils_1.hexToByteArray)(base64Content.toString());\n        const [nonce, internalMessage] = (0, utils_1.splitToUint8Arrays)(messageByteArray, this.nonceLength);\n        const decrypted = tweetnacl_1.default.box.open(internalMessage, nonce, (0, utils_1.hexToByteArray)(senderPublicKey), this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${(0, utils_1.toHexString)(this.keyPair.publicKey)} \\n keypair secretkey: ${(0, utils_1.toHexString)(this.keyPair.secretKey)}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    stringifyKeypair() {\n        return {\n            publicKey: (0, utils_1.toHexString)(this.keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(this.keyPair.secretKey)\n        };\n    }\n}\nexports.SessionCrypto = SessionCrypto;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./connect\"), exports);\n__exportStar(require(\"./protocol\"), exports);\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IEngine = exports.ISignClient = exports.ISignClientEvents = exports.IEngineEvents = void 0;\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nclass IEngineEvents extends eventemitter3_1.default {\n    constructor() {\n        super();\n    }\n}\nexports.IEngineEvents = IEngineEvents;\nclass ISignClientEvents extends eventemitter3_1.default {\n    constructor() {\n        super();\n    }\n}\nexports.ISignClientEvents = ISignClientEvents;\nclass ISignClient {\n    constructor(data) {\n        this.data = data;\n    }\n}\nexports.ISignClient = ISignClient;\nclass IEngine {\n    constructor(client) {\n        this.client = client;\n    }\n}\nexports.IEngine = IEngine;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.creatOKXMiniAppWalletInfo = exports.creatOKXWalletInfo = exports.ISignClientEvents = exports.IEngine = exports.IEngineEvents = exports.ISignClient = exports.getBigIntRpcId = exports.formatJsonRpcRequest = exports.isJsonRpcError = exports.isJsonRpcResponse = exports.parseConnectionError = exports.isHttpUrl = exports.formatJsonRpcError = void 0;\nvar json_rpc_1 = require(\"./json-rpc\");\nObject.defineProperty(exports, \"formatJsonRpcError\", { enumerable: true, get: function () { return json_rpc_1.formatJsonRpcError; } });\nObject.defineProperty(exports, \"isHttpUrl\", { enumerable: true, get: function () { return json_rpc_1.isHttpUrl; } });\nObject.defineProperty(exports, \"parseConnectionError\", { enumerable: true, get: function () { return json_rpc_1.parseConnectionError; } });\nObject.defineProperty(exports, \"isJsonRpcResponse\", { enumerable: true, get: function () { return json_rpc_1.isJsonRpcResponse; } });\nObject.defineProperty(exports, \"isJsonRpcError\", { enumerable: true, get: function () { return json_rpc_1.isJsonRpcError; } });\nObject.defineProperty(exports, \"formatJsonRpcRequest\", { enumerable: true, get: function () { return json_rpc_1.formatJsonRpcRequest; } });\nObject.defineProperty(exports, \"getBigIntRpcId\", { enumerable: true, get: function () { return json_rpc_1.getBigIntRpcId; } });\nvar engine_1 = require(\"./engine\");\nObject.defineProperty(exports, \"ISignClient\", { enumerable: true, get: function () { return engine_1.ISignClient; } });\nObject.defineProperty(exports, \"IEngineEvents\", { enumerable: true, get: function () { return engine_1.IEngineEvents; } });\nObject.defineProperty(exports, \"IEngine\", { enumerable: true, get: function () { return engine_1.IEngine; } });\nObject.defineProperty(exports, \"ISignClientEvents\", { enumerable: true, get: function () { return engine_1.ISignClientEvents; } });\n__exportStar(require(\"./ton\"), exports);\nvar wallet_info_1 = require(\"./wallet-info\");\nObject.defineProperty(exports, \"creatOKXWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXWalletInfo; } });\nObject.defineProperty(exports, \"creatOKXMiniAppWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXMiniAppWalletInfo; } });\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isJsonRpcPayload = isJsonRpcPayload;\nexports.isJsonRpcRequest = isJsonRpcRequest;\nexports.isJsonRpcResponse = isJsonRpcResponse;\nexports.isJsonRpcResult = isJsonRpcResult;\nexports.isJsonRpcError = isJsonRpcError;\nexports.payloadId = payloadId;\nexports.getBigIntRpcId = getBigIntRpcId;\nexports.formatJsonRpcRequest = formatJsonRpcRequest;\nexports.formatJsonRpcResult = formatJsonRpcResult;\nexports.formatJsonRpcError = formatJsonRpcError;\nexports.isReservedErrorCode = isReservedErrorCode;\nexports.getError = getError;\nexports.getErrorByCode = getErrorByCode;\nexports.formatErrorMessage = formatErrorMessage;\nexports.isHttpUrl = isHttpUrl;\nexports.isWsUrl = isWsUrl;\nexports.parseConnectionError = parseConnectionError;\nfunction isJsonRpcPayload(payload) {\n    return (typeof payload === \"object\" &&\n        \"id\" in payload &&\n        \"jsonrpc\" in payload &&\n        payload.jsonrpc === \"2.0\");\n}\nfunction isJsonRpcRequest(payload) {\n    return isJsonRpcPayload(payload) && \"method\" in payload;\n}\nfunction isJsonRpcResponse(payload) {\n    return isJsonRpcPayload(payload) && (isJsonRpcResult(payload) || isJsonRpcError(payload));\n}\nfunction isJsonRpcResult(payload) {\n    return \"result\" in payload;\n}\nfunction isJsonRpcError(payload) {\n    return \"error\" in payload;\n}\nconst okx_connect_error_1 = require(\"../error/okx-connect.error\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nclass IncrementalRandomGenerator {\n    constructor(bits) {\n        this.i = 1;\n        const typedArray = bits === 8 ? new Uint8Array(1) : bits === 16 ? new Uint16Array(1) : new Uint32Array(1);\n        if (bits) {\n            this.initialValue = tweetnacl_1.default.randomBytes(bits / 8)[0];\n        }\n        else {\n            this.initialValue = 0;\n        }\n    }\n    getNextValue() {\n        return this.initialValue + this.i++;\n    }\n}\nconst uint8Generator = new IncrementalRandomGenerator(8);\nconst uint16Generator = new IncrementalRandomGenerator(16);\nfunction payloadId() {\n    const date = Date.now() * 1000;\n    const extra = uint8Generator.getNextValue();\n    return date + extra;\n}\nfunction getBigIntRpcId() {\n    const date = BigInt(Date.now()) * BigInt(1000000);\n    const extra = BigInt(uint16Generator.getNextValue());\n    return date + extra;\n}\nfunction formatJsonRpcRequest(method, params, id) {\n    return {\n        id: id || payloadId(),\n        jsonrpc: \"2.0\",\n        method,\n        params,\n    };\n}\nfunction formatJsonRpcResult(id, result) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        result,\n    };\n}\nfunction formatJsonRpcError(id, error, data) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        error: formatErrorMessage(error, data),\n    };\n}\nfunction isReservedErrorCode(code) {\n    return okx_connect_error_1.RESERVED_ERROR_CODES.includes(code);\n}\nfunction getError(type) {\n    if (!Object.keys(okx_connect_error_1.STANDARD_ERROR_MAP).includes(type)) {\n        return okx_connect_error_1.STANDARD_ERROR_MAP[okx_connect_error_1.DEFAULT_ERROR];\n    }\n    return okx_connect_error_1.STANDARD_ERROR_MAP[type];\n}\nfunction getErrorByCode(code) {\n    const match = Object.values(okx_connect_error_1.STANDARD_ERROR_MAP).find((e) => e.code === code);\n    if (!match) {\n        return okx_connect_error_1.STANDARD_ERROR_MAP[okx_connect_error_1.DEFAULT_ERROR];\n    }\n    return match;\n}\nfunction formatErrorMessage(error, data) {\n    if (typeof error === \"undefined\") {\n        return getError(okx_connect_error_1.INTERNAL_ERROR);\n    }\n    if (typeof error === \"string\") {\n        error = Object.assign(Object.assign({}, getError(okx_connect_error_1.SERVER_ERROR)), { message: error });\n    }\n    if (typeof data !== \"undefined\") {\n        error.data = data;\n    }\n    if (isReservedErrorCode(error.code)) {\n        error = getErrorByCode(error.code);\n    }\n    return error;\n}\nfunction getUrlProtocol(url) {\n    const matches = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!matches || !matches.length)\n        return;\n    return matches[0];\n}\nfunction matchRegexProtocol(url, regex) {\n    const protocol = getUrlProtocol(url);\n    if (typeof protocol === \"undefined\")\n        return false;\n    return new RegExp(regex).test(protocol);\n}\nfunction isHttpUrl(url) {\n    return matchRegexProtocol(url, \"^https?:\");\n}\nfunction isWsUrl(url) {\n    return matchRegexProtocol(url, \"^wss?:\");\n}\nfunction parseConnectionError(e, url, type) {\n    return e.message.includes(\"getaddrinfo ENOTFOUND\") || e.message.includes(\"connect ECONNREFUSED\")\n        ? new Error(`Unavailable ${type} RPC url at ${url}`)\n        : e;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_ITEM_ERROR_CODES = void 0;\nvar CONNECT_ITEM_ERROR_CODES;\n(function (CONNECT_ITEM_ERROR_CODES) {\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(CONNECT_ITEM_ERROR_CODES || (exports.CONNECT_ITEM_ERROR_CODES = CONNECT_ITEM_ERROR_CODES = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TONCHAIN = void 0;\nvar TONCHAIN;\n(function (TONCHAIN) {\n    TONCHAIN[\"MAINNET\"] = \"-239\";\n})(TONCHAIN || (exports.TONCHAIN = TONCHAIN = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_ITEM_ERROR_CODES = exports.TONCHAIN = void 0;\nvar connect_wallet_1 = require(\"./connect-wallet\");\nObject.defineProperty(exports, \"TONCHAIN\", { enumerable: true, get: function () { return connect_wallet_1.TONCHAIN; } });\nvar connect_event_1 = require(\"./connect-event\");\nObject.defineProperty(exports, \"CONNECT_ITEM_ERROR_CODES\", { enumerable: true, get: function () { return connect_event_1.CONNECT_ITEM_ERROR_CODES; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.creatOKXWalletInfo = creatOKXWalletInfo;\nexports.creatOKXMiniAppWalletInfo = creatOKXMiniAppWalletInfo;\nconst constants_1 = require(\"../constants\");\nfunction creatOKXWalletInfo() {\n    return {\n        \"appName\": \"okxAppWallet\",\n        \"name\": constants_1.OKX_APP_WALLET_NAME,\n        \"imageUrl\": \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\",\n        \"aboutUrl\": constants_1.downloadUrl,\n        \"universalLink\": constants_1.standardUniversalLink,\n        \"deepLink\": constants_1.standardDeeplink,\n        \"platforms\": [\"ios\", \"android\"]\n    };\n}\nfunction creatOKXMiniAppWalletInfo() {\n    return {\n        \"appName\": \"okxMiniApp\",\n        \"name\": constants_1.OKX_MINI_WALLET_NAME,\n        \"imageUrl\": \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\",\n        \"aboutUrl\": constants_1.downloadUrl,\n        \"universalLink\": `https://t.me/${constants_1.tgwalletName}/start`,\n        \"deepLink\": \"\",\n        \"platforms\": [\"ios\", \"android\", 'macos', 'windows']\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_MINI_WALLET_NAME = exports.OKX_APP_WALLET_NAME = exports.tgwalletAppName = exports.tgwalletName = exports.tonConnectSdkVersion = exports.shortUniversalLink = exports.standardDeeplink = exports.downloadUrl = exports.standardUniversalLink = exports.okxDeeplink = void 0;\nexports.getTestTwaUrl = getTestTwaUrl;\nexports.getTestTgTwaUrl = getTestTgTwaUrl;\nexports.getBotNameAndAppName = getBotNameAndAppName;\nexports.okxDeeplink = 'okx://web3';\nexports.standardUniversalLink = typeof window !== \"undefined\" && window.location.hostname.includes(\"okx.com\")\n    ? \"https://link.okx.com/download\"\n    : \"https://www.okx.com/download\";\nexports.downloadUrl = \"https://www.okx.com/download\";\n// export const standardUniversalLink = 'http://localhost:5173';\nexports.standardDeeplink = `${exports.okxDeeplink}/wallet/connect`;\nexports.shortUniversalLink = `https://www.okx.com/ul/connect`;\n// export const standardDeeplink = 'http://localhost:5173';\nexports.tonConnectSdkVersion = '1';\n// export const tgwalletName: string = \"TCTestqdqwdqwdqBot\"\nexports.tgwalletName = \"OKX_WALLET_BOT\";\nexports.tgwalletAppName = \"start\";\n// https://t.me/OKX_WALLET_BOT/start\nfunction getTestTwaUrl() {\n    return window.okxTesttwaUrl;\n}\nfunction getTestTgTwaUrl() {\n    return window.okxTestTgtwaUrl;\n}\nfunction getBotNameAndAppName(url) {\n    const urlObj = new URL(url);\n    const pathnameParts = urlObj.pathname.split('/').filter(Boolean);\n    if (pathnameParts.length >= 2) {\n        const botName = pathnameParts[0]; // 获取 'test_12312313123_bot'\n        const appName = pathnameParts[1]; // 获取 'testtest'\n        return { botName, appName };\n    }\n}\nexports.OKX_APP_WALLET_NAME = 'OKX Wallet';\nexports.OKX_MINI_WALLET_NAME = 'OKX Mini Wallet';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_CONNECT_ERROR_CODES = exports.OKXConnectError = void 0;\nvar okx_connect_error_1 = require(\"./okx-connect.error\");\nObject.defineProperty(exports, \"OKXConnectError\", { enumerable: true, get: function () { return okx_connect_error_1.OKXConnectError; } });\nObject.defineProperty(exports, \"OKX_CONNECT_ERROR_CODES\", { enumerable: true, get: function () { return okx_connect_error_1.OKX_CONNECT_ERROR_CODES; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_ERROR = exports.STANDARD_ERROR_MAP = exports.SERVER_ERROR_CODE_RANGE = exports.RESERVED_ERROR_CODES = exports.SERVER_ERROR = exports.INTERNAL_ERROR = exports.INVALID_PARAMS = exports.METHOD_NOT_FOUND = exports.INVALID_REQUEST = exports.PARSE_ERROR = exports.OKX_CONNECT_ERROR_CODES = exports.OKXConnectError = void 0;\nclass OKXConnectError extends Error {\n    constructor(code, message) {\n        if (message == undefined) {\n            message = getDefaultMessageByCode(code);\n        }\n        super(message);\n        this.code = code;\n        this.message = `${OKXConnectError.prefix} ${message ? '\\n' + message : ''}`;\n        Object.setPrototypeOf(this, OKXConnectError.prototype);\n    }\n    toJSON() {\n        return {\n            message: this.message,\n            code: this.code\n        };\n    }\n}\nexports.OKXConnectError = OKXConnectError;\nOKXConnectError.prefix = '[OKX_CONNECT_SDK_ERROR]';\nfunction getDefaultMessageByCode(code) {\n    if (code == OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR) {\n        return \"unknown error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR) {\n        return \"bad request error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.ALREADY_CONNECTED_ERROR) {\n        return \"already connected error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR) {\n        return \"not connected error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.UNKNOWN_APP_ERROR) {\n        return \"unknown app error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n        return \"user rejects error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR_CAUSE_REGISTER) {\n        return \"wallet address are registering\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED) {\n        return \"method not supported\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.CONNECTION_ERROR) {\n        return \"connect error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED) {\n        return \"chain not supported\";\n    }\n    return \"unknown error\";\n}\nvar OKX_CONNECT_ERROR_CODES;\n(function (OKX_CONNECT_ERROR_CODES) {\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"BAD_REQUEST_ERROR\"] = 1] = \"BAD_REQUEST_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"ALREADY_CONNECTED_ERROR\"] = 11] = \"ALREADY_CONNECTED_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"NOT_CONNECTED_ERROR\"] = 12] = \"NOT_CONNECTED_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"UNKNOWN_APP_ERROR\"] = 100] = \"UNKNOWN_APP_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"USER_REJECTS_ERROR\"] = 300] = \"USER_REJECTS_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"USER_REJECTS_ERROR_CAUSE_REGISTER\"] = 301] = \"USER_REJECTS_ERROR_CAUSE_REGISTER\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"CHAIN_NOT_SUPPORTED\"] = 500] = \"CHAIN_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"WALLET_NOT_SUPPORTED\"] = 600] = \"WALLET_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"CONNECTION_ERROR\"] = 700] = \"CONNECTION_ERROR\";\n})(OKX_CONNECT_ERROR_CODES || (exports.OKX_CONNECT_ERROR_CODES = OKX_CONNECT_ERROR_CODES = {}));\nexports.PARSE_ERROR = \"PARSE_ERROR\";\nexports.INVALID_REQUEST = \"INVALID_REQUEST\";\nexports.METHOD_NOT_FOUND = \"METHOD_NOT_FOUND\";\nexports.INVALID_PARAMS = \"INVALID_PARAMS\";\nexports.INTERNAL_ERROR = \"INTERNAL_ERROR\";\nexports.SERVER_ERROR = \"SERVER_ERROR\";\nexports.RESERVED_ERROR_CODES = [-32700, -32600, -32601, -32602, -32603];\nexports.SERVER_ERROR_CODE_RANGE = [-32000, -32099];\nexports.STANDARD_ERROR_MAP = {\n    [exports.PARSE_ERROR]: { code: -32700, message: \"Parse error\" },\n    [exports.INVALID_REQUEST]: { code: -32600, message: \"Invalid Request\" },\n    [exports.METHOD_NOT_FOUND]: { code: -32601, message: \"Method not found\" },\n    [exports.INVALID_PARAMS]: { code: -32602, message: \"Invalid params\" },\n    [exports.INTERNAL_ERROR]: { code: -32603, message: \"Internal error\" },\n    [exports.SERVER_ERROR]: { code: -32000, message: \"Server error\" },\n};\nexports.DEFAULT_ERROR = exports.SERVER_ERROR;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_APP_WALLET_NAME = exports.downloadUrl = exports.okxDeeplink = exports.tonConnectSdkVersion = exports.standardDeeplink = exports.standardUniversalLink = exports.NameSpaceKeyStarknet = exports.NameSpaceKeyTron = exports.NameSpaceKeyCosmos = exports.NameSpaceKeyAptos = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.NameSpaceKeyTON = exports.NameSpaceKeySOL = exports.NameSpaceKeyEip155 = void 0;\n__exportStar(require(\"./error\"), exports);\nvar misc_1 = require(\"./misc\");\nObject.defineProperty(exports, \"NameSpaceKeyEip155\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyEip155; } });\nObject.defineProperty(exports, \"NameSpaceKeySOL\", { enumerable: true, get: function () { return misc_1.NameSpaceKeySOL; } });\nObject.defineProperty(exports, \"NameSpaceKeyTON\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyTON; } });\nObject.defineProperty(exports, \"NameSpaceKeySui\", { enumerable: true, get: function () { return misc_1.NameSpaceKeySui; } });\nObject.defineProperty(exports, \"NameSpaceKeyBtc\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyBtc; } });\nObject.defineProperty(exports, \"NameSpaceKeyAptos\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyAptos; } });\nObject.defineProperty(exports, \"NameSpaceKeyCosmos\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyCosmos; } });\nObject.defineProperty(exports, \"NameSpaceKeyTron\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyTron; } });\nObject.defineProperty(exports, \"NameSpaceKeyStarknet\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyStarknet; } });\nvar constants_1 = require(\"./constants\");\nObject.defineProperty(exports, \"standardUniversalLink\", { enumerable: true, get: function () { return constants_1.standardUniversalLink; } });\nObject.defineProperty(exports, \"standardDeeplink\", { enumerable: true, get: function () { return constants_1.standardDeeplink; } });\nObject.defineProperty(exports, \"tonConnectSdkVersion\", { enumerable: true, get: function () { return constants_1.tonConnectSdkVersion; } });\nObject.defineProperty(exports, \"okxDeeplink\", { enumerable: true, get: function () { return constants_1.okxDeeplink; } });\nObject.defineProperty(exports, \"downloadUrl\", { enumerable: true, get: function () { return constants_1.downloadUrl; } });\nObject.defineProperty(exports, \"OKX_APP_WALLET_NAME\", { enumerable: true, get: function () { return constants_1.OKX_APP_WALLET_NAME; } });\n__exportStar(require(\"./connect\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NameSpaceKeyStarknet = exports.NameSpaceKeyTron = exports.NameSpaceKeyCosmos = exports.NameSpaceKeyAptos = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.NameSpaceKeyTON = exports.NameSpaceKeySOL = exports.NameSpaceKeyEip155 = void 0;\nexports.NameSpaceKeyEip155 = \"eip155\";\nexports.NameSpaceKeySOL = \"solana\";\nexports.NameSpaceKeyTON = \"ton\";\nexports.NameSpaceKeySui = \"sui\";\nexports.NameSpaceKeyBtc = \"btc\";\nexports.NameSpaceKeyAptos = \"aptos\";\nexports.NameSpaceKeyCosmos = \"cosmos\";\nexports.NameSpaceKeyTron = \"tron\";\nexports.NameSpaceKeyStarknet = \"starknet\";\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.callForSuccess = callForSuccess;\nexports.delay = delay;\n/**\n * Function to call ton api until we get response.\n * Because ton network is pretty unstable we need to make sure response is final.\n * @param {T} fn - function to call\n * @param {CallForSuccessOptions} [options] - optional configuration options\n */\nfunction callForSuccess(fn, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b;\n        const attempts = (_a = options === null || options === void 0 ? void 0 : options.attempts) !== null && _a !== void 0 ? _a : 3;\n        const delayMs = (_b = options === null || options === void 0 ? void 0 : options.delayMs) !== null && _b !== void 0 ? _b : 800;\n        if (typeof fn !== 'function') {\n            throw new Error(`Expected a function, got ${typeof fn}`);\n        }\n        let i = 0;\n        let lastError;\n        while (i < attempts) {\n            try {\n                return yield fn();\n            }\n            catch (err) {\n                lastError = err;\n                i++;\n                if (i < attempts) {\n                    yield delay(delayMs);\n                }\n            }\n        }\n        throw lastError;\n    });\n}\n/**\n * Delays the execution of code for a specified number of milliseconds.\n * @param {number} timeout - The number of milliseconds to delay the execution.\n * @param {DelayOptions} [options] - Optional configuration options for the delay.\n * @return {Promise<void>} - A promise that resolves after the specified delay, or rejects if the delay is aborted.\n */\nfunction delay(timeout, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            var _a, _b;\n            if ((_a = options === null || options === void 0 ? void 0 : options.signal) === null || _a === void 0 ? void 0 : _a.aborted) {\n                reject(new Error('Delay aborted'));\n                return;\n            }\n            const timeoutId = setTimeout(() => resolve(), timeout);\n            (_b = options === null || options === void 0 ? void 0 : options.signal) === null || _b === void 0 ? void 0 : _b.addEventListener('abort', () => {\n                clearTimeout(timeoutId);\n                reject(new Error('Delay aborted'));\n            });\n        });\n    });\n}\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkMetaData = exports.versionCompare = exports.isBrowser = exports.isOS = exports.isMobileUserAgent = exports.openDeeplinkWithFallback = exports.openLinkBlank = exports.openLink = exports.useShortLink = exports.toSafeBase64FromBase64 = exports.isValidObject = exports.isIos = exports.base64decode = exports.base64encode = exports.splitToUint8Arrays = exports.concatUint8Arrays = exports.toHexString = exports.hexToByteArray = exports.getOKXLink = exports.openOKXUniversalLink = exports.getAppWalletShortDeepLink = exports.encodeTWAConnectURLParams = exports.encodeConnectParams = exports.openOKXTMAWalletlinkWithFallback = exports.getTelegramWalletTWAUrl = exports.getAppWalletDeepLink = exports.encodeTelegramUrlParameters = exports.isTelegramUrl = exports.openOKXDeeplinkWithFallback = exports.openOKXDeeplink = exports.getUniversalLink = exports.safeJsonStringify = exports.safeJsonParse = exports.getDefaultReporter = exports.reportEvent = exports.reportLog = exports.logWarning = exports.logError = exports.logDebug = exports.callForSuccess = void 0;\nvar call_for_success_1 = require(\"./call-for-success\");\nObject.defineProperty(exports, \"callForSuccess\", { enumerable: true, get: function () { return call_for_success_1.callForSuccess; } });\nvar log_1 = require(\"./log\");\nObject.defineProperty(exports, \"logDebug\", { enumerable: true, get: function () { return log_1.logDebug; } });\nObject.defineProperty(exports, \"logError\", { enumerable: true, get: function () { return log_1.logError; } });\nObject.defineProperty(exports, \"logWarning\", { enumerable: true, get: function () { return log_1.logWarning; } });\nObject.defineProperty(exports, \"reportLog\", { enumerable: true, get: function () { return log_1.reportLog; } });\nObject.defineProperty(exports, \"reportEvent\", { enumerable: true, get: function () { return log_1.reportEvent; } });\nObject.defineProperty(exports, \"getDefaultReporter\", { enumerable: true, get: function () { return log_1.getDefaultReporter; } });\n__exportStar(require(\"./reportconstants\"), exports);\n__exportStar(require(\"./report\"), exports);\nvar safejson_1 = require(\"./safejson\");\nObject.defineProperty(exports, \"safeJsonParse\", { enumerable: true, get: function () { return safejson_1.safeJsonParse; } });\nObject.defineProperty(exports, \"safeJsonStringify\", { enumerable: true, get: function () { return safejson_1.safeJsonStringify; } });\nvar url_1 = require(\"./url\");\nObject.defineProperty(exports, \"getUniversalLink\", { enumerable: true, get: function () { return url_1.getUniversalLink; } });\nObject.defineProperty(exports, \"openOKXDeeplink\", { enumerable: true, get: function () { return url_1.openOKXDeeplink; } });\nObject.defineProperty(exports, \"openOKXDeeplinkWithFallback\", { enumerable: true, get: function () { return url_1.openOKXDeeplinkWithFallback; } });\nObject.defineProperty(exports, \"isTelegramUrl\", { enumerable: true, get: function () { return url_1.isTelegramUrl; } });\nObject.defineProperty(exports, \"encodeTelegramUrlParameters\", { enumerable: true, get: function () { return url_1.encodeTelegramUrlParameters; } });\nObject.defineProperty(exports, \"getAppWalletDeepLink\", { enumerable: true, get: function () { return url_1.getAppWalletDeepLink; } });\nObject.defineProperty(exports, \"getTelegramWalletTWAUrl\", { enumerable: true, get: function () { return url_1.getTelegramWalletTWAUrl; } });\nObject.defineProperty(exports, \"openOKXTMAWalletlinkWithFallback\", { enumerable: true, get: function () { return url_1.openOKXTMAWalletlinkWithFallback; } });\nObject.defineProperty(exports, \"encodeConnectParams\", { enumerable: true, get: function () { return url_1.encodeConnectParams; } });\nObject.defineProperty(exports, \"encodeTWAConnectURLParams\", { enumerable: true, get: function () { return url_1.encodeTWAConnectURLParams; } });\nObject.defineProperty(exports, \"getAppWalletShortDeepLink\", { enumerable: true, get: function () { return url_1.getAppWalletShortDeepLink; } });\nObject.defineProperty(exports, \"openOKXUniversalLink\", { enumerable: true, get: function () { return url_1.openOKXUniversalLink; } });\nObject.defineProperty(exports, \"getOKXLink\", { enumerable: true, get: function () { return url_1.getOKXLink; } });\nvar utils_1 = require(\"./utils\");\nObject.defineProperty(exports, \"hexToByteArray\", { enumerable: true, get: function () { return utils_1.hexToByteArray; } });\nObject.defineProperty(exports, \"toHexString\", { enumerable: true, get: function () { return utils_1.toHexString; } });\nObject.defineProperty(exports, \"concatUint8Arrays\", { enumerable: true, get: function () { return utils_1.concatUint8Arrays; } });\nObject.defineProperty(exports, \"splitToUint8Arrays\", { enumerable: true, get: function () { return utils_1.splitToUint8Arrays; } });\nObject.defineProperty(exports, \"base64encode\", { enumerable: true, get: function () { return utils_1.base64encode; } });\nObject.defineProperty(exports, \"base64decode\", { enumerable: true, get: function () { return utils_1.base64decode; } });\nObject.defineProperty(exports, \"isIos\", { enumerable: true, get: function () { return utils_1.isIos; } });\nObject.defineProperty(exports, \"isValidObject\", { enumerable: true, get: function () { return utils_1.isValidObject; } });\nObject.defineProperty(exports, \"toSafeBase64FromBase64\", { enumerable: true, get: function () { return utils_1.toSafeBase64FromBase64; } });\nObject.defineProperty(exports, \"useShortLink\", { enumerable: true, get: function () { return utils_1.useShortLink; } });\nvar web_api_1 = require(\"./web-api\");\nObject.defineProperty(exports, \"openLink\", { enumerable: true, get: function () { return web_api_1.openLink; } });\nObject.defineProperty(exports, \"openLinkBlank\", { enumerable: true, get: function () { return web_api_1.openLinkBlank; } });\nObject.defineProperty(exports, \"openDeeplinkWithFallback\", { enumerable: true, get: function () { return web_api_1.openDeeplinkWithFallback; } });\nObject.defineProperty(exports, \"isMobileUserAgent\", { enumerable: true, get: function () { return web_api_1.isMobileUserAgent; } });\nObject.defineProperty(exports, \"isOS\", { enumerable: true, get: function () { return web_api_1.isOS; } });\nObject.defineProperty(exports, \"isBrowser\", { enumerable: true, get: function () { return web_api_1.isBrowser; } });\nvar tma_api_1 = require(\"./tma-api\");\nObject.defineProperty(exports, \"versionCompare\", { enumerable: true, get: function () { return tma_api_1.versionCompare; } });\nvar request_1 = require(\"./request\");\nObject.defineProperty(exports, \"checkMetaData\", { enumerable: true, get: function () { return request_1.checkMetaData; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getDefaultReporter = getDefaultReporter;\nexports.logDebug = logDebug;\nexports.logError = logError;\nexports.logWarning = logWarning;\nexports.reportEvent = reportEvent;\nexports.reportLog = reportLog;\nconst debug = false;\nconst forceReport = false;\nconst report_1 = require(\"./report\");\nconst defaultReporter = new report_1.OKXReporter();\nfunction getDefaultReporter() {\n    return defaultReporter;\n}\nconst packageJson = require('../../package.json');\nconst version = packageJson.version;\nfunction logDebug(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.log(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction logError(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.error(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n            if (forceReport || !debug) {\n                let content = '';\n                content += [...args].reduce((result, item) => {\n                    if (typeof item == 'string') {\n                        result += ',' + item;\n                    }\n                    else if (typeof item == 'object') {\n                        result += JSON.stringify(item);\n                    }\n                });\n                defaultReporter.sendRecordContent(content, report_1.OKXReportType.LOG, '');\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction logWarning(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.warn(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction reportEvent(type, action, content) {\n    return __awaiter(this, void 0, void 0, function* () {\n        yield defaultReporter.sendRecordContent(content, type, action);\n    });\n}\nfunction reportLog(content_1) {\n    return __awaiter(this, arguments, void 0, function* (content, action = 'default') {\n        // await defaultReporter.sendRecordContent(content, OKXReportType.LOG, action)\n    });\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXReporter = exports.OKXReportSide = exports.OKXReportType = exports.versionStr = void 0;\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst log_1 = require(\"./log\");\nconst url_1 = require(\"./url\");\nconst utils_1 = require(\"../utils\");\nconst localforage_1 = __importDefault(require(\"localforage\"));\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nexports.versionStr = '1.6.5';\nconst reportApiList = [\n    'https://www.okx.com/dappstat/wallet-connect',\n    'https://www.okx.ac/dappstat/wallet-connect'\n];\nconst reportCacheKey = 'OKX_RP_CK';\nconst reportUUIDKey = 'OKX_RP_UUID_CK';\nconst MAX_LIMIT_REPORTCOUNT = 100;\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"*/*\",\n    \"Content-Type\": \"text/plain\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\nexports.OKXReportType = {\n    PAGE_IN: 'page_in',\n    PAGE_OUT: 'page_out',\n    CLICK: 'click',\n    LOG: 'log',\n};\nexports.OKXReportSide = {\n    DAPP: 'dapp',\n    WALLET: 'wallet',\n};\nclass IReporter {\n}\nconst fetchWithTimeout = (url, options, timeout = 5000) => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n    const fetchPromise = (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, options), { signal }));\n    const timeoutPromise = new Promise((_, reject) => setTimeout(() => {\n        controller.abort();\n        reject(new Error('Request timed out'));\n    }, timeout));\n    return Promise.race([fetchPromise, timeoutPromise]);\n};\nconst fetchListWithTimeout = (urls_1, ...args_1) => __awaiter(void 0, [urls_1, ...args_1], void 0, function* (urls, options = {}, timeout = 5000) {\n    for (const url of urls) {\n        try {\n            const controller = new AbortController();\n            const signal = controller.signal;\n            const fetchPromise = (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, options), { signal }));\n            const timeoutPromise = new Promise((_, reject) => setTimeout(() => {\n                controller.abort();\n                reject(new Error('Request timed out'));\n            }, timeout));\n            const response = yield Promise.race([fetchPromise, timeoutPromise]);\n            if (response.ok) {\n                return response;\n            }\n            if (response.status == 502) {\n                console.error(`Fetch error status 502`, url);\n                return response;\n            }\n        }\n        catch (error) {\n            console.error(`Fetch error for ${url}:`, error);\n        }\n    }\n    console.error(`'All fetch attempts failed.'`);\n    throw new Error('All fetch attempts failed.');\n});\nclass OKXReporter {\n    constructor() {\n        this.currentSide = exports.OKXReportSide.DAPP;\n        this.currentVersion = exports.versionStr;\n        this.storage = localforage_1.default.createInstance({\n            name: \"OKXReporter\"\n        });\n        this.recordList = new Array();\n        this.currentUUID = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(16));\n    }\n    configVersionAndSide(version, side, appname) {\n        this.currentVersion = version;\n        this.currentSide = side;\n        this.appName = appname;\n    }\n    get recordCacheKey() {\n        return reportCacheKey + \"@\" + this.appName;\n    }\n    get reportPlatform() {\n        if ((0, utils_1.isMobileUserAgent)()) {\n            if ((0, utils_1.isIos)()) {\n                return 'iOS';\n            }\n            else {\n                return 'android';\n            }\n        }\n        else {\n            return 'pc';\n        }\n    }\n    beginReport() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.startErrorCatching();\n            let records = yield this.storage.getItem(this.recordCacheKey);\n            let uuid = yield this.storage.getItem(reportUUIDKey);\n            if (uuid) {\n                this.currentUUID = uuid;\n            }\n            else {\n                this.storage.setItem(reportUUIDKey, this.currentUUID);\n            }\n            if (records) {\n                this.recordList = records;\n                (0, log_1.logDebug)('resume records from cache length: ', this.recordList.length);\n                yield this.sendCachedRecords();\n            }\n        });\n    }\n    startErrorCatching() {\n        let window = (0, url_1.getWindow)();\n        if (window) {\n            (0, log_1.logDebug)('begin capture console error');\n            // window.onerror = (event: Event | string, source?: string, lineno?: number, colno?: number, error?: Error) => {\n            //     logDebug('capture error info:', error, source)\n            //     this.markRecord(error?.message+'/'+error?.name+'/'+error?.stack, OKXReportType.LOG, '', this.currentSide)\n            // }\n        }\n    }\n    cachedErrors() {\n        return this.recordList;\n    }\n    sendRecord(record) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    const body = JSON.stringify(record);\n                    (0, log_1.logDebug)('[REPORT] record: ', body);\n                    const res = yield fetchListWithTimeout(reportApiList, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body: body }));\n                    (0, log_1.logDebug)('[REPORT] get rsp:', res);\n                    if (res && res.status && res.status == 200) {\n                        this.recordList = this.recordList.filter((item) => {\n                            return item.timestamp != record.timestamp || item.content != record.content;\n                        });\n                        yield this.storage.setItem(this.recordCacheKey, this.recordList);\n                        resolve(true);\n                    }\n                    else {\n                        reject(false);\n                    }\n                }\n                catch (e) {\n                    (0, log_1.logDebug)('send record error:', e);\n                    resolve(true);\n                    // reject(e)\n                }\n            }));\n        });\n    }\n    sendRecordContent(content, type, action) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            let path = (_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.location.pathname;\n            let location = (_b = (0, url_1.getWindow)()) === null || _b === void 0 ? void 0 : _b.location.origin;\n            if (path && location) {\n                location = location + path;\n            }\n            let language = (_c = (0, url_1.getWindow)()) === null || _c === void 0 ? void 0 : _c.navigator.language;\n            let ua = (_d = (0, url_1.getWindow)()) === null || _d === void 0 ? void 0 : _d.navigator.userAgent;\n            let platform = this.reportPlatform;\n            let reportItem = {\n                uuid: this.currentUUID,\n                version: this.currentVersion,\n                content: content,\n                action: action,\n                side: this.currentSide,\n                timestamp: new Date().getTime(),\n                url: location,\n                lang: language,\n                type: type,\n                platform: platform,\n                \"user-agent\": ua\n            };\n            yield this.markRecordItem(reportItem);\n            yield this.sendRecord(reportItem);\n        });\n    }\n    sendCachedRecords() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let sendList = this.recordList.map(record => this.sendRecord(record));\n                (0, log_1.logDebug)('[REPORT] submit & clean recorded caches begin @', new Date().toUTCString());\n                Promise.allSettled(sendList).then((results) => {\n                    (0, log_1.logDebug)('[REPORT] submit & clean recorded caches ends @', new Date().toUTCString());\n                    let keepIndex = [];\n                    results.forEach((result, index) => {\n                        if (result.status == \"rejected\") {\n                            keepIndex.push(index);\n                        }\n                    });\n                    this.recordList = this.recordList.filter((_, index) => !keepIndex.includes(index));\n                    this.storage.setItem(this.recordCacheKey, this.recordList).then(function (value) {\n                        resolve();\n                    }).catch(function (err) {\n                        reject(err);\n                    });\n                });\n            }));\n        });\n    }\n    markRecordItem(item) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.recordList.push(item);\n            if (this.recordList.length > MAX_LIMIT_REPORTCOUNT) {\n                let offset = this.recordList.length - MAX_LIMIT_REPORTCOUNT;\n                this.recordList.splice(0, offset);\n            }\n            return new Promise((resolve, reject) => {\n                this.storage.setItem(this.recordCacheKey, this.recordList).then(function (value) {\n                    resolve(item);\n                }).catch(function (err) {\n                    reject(err);\n                });\n            });\n        });\n    }\n    markRecord(content, type, action, side) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            let path = (_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.location.pathname;\n            let location = (_b = (0, url_1.getWindow)()) === null || _b === void 0 ? void 0 : _b.location.origin;\n            if (path && location) {\n                location = location + path;\n            }\n            let language = (_c = (0, url_1.getWindow)()) === null || _c === void 0 ? void 0 : _c.navigator.language;\n            let platform = this.reportPlatform;\n            let ua = (_d = (0, url_1.getWindow)()) === null || _d === void 0 ? void 0 : _d.navigator.userAgent;\n            let reportItem = {\n                uuid: this.currentUUID,\n                version: this.currentVersion,\n                content: content,\n                action: action,\n                side: side,\n                timestamp: new Date().getTime(),\n                url: location,\n                lang: language,\n                type: type,\n                platform: platform,\n                \"user-agent\": ua\n            };\n            return yield this.markRecordItem(reportItem);\n        });\n    }\n}\nexports.OKXReporter = OKXReporter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Report_WalletType_Key = exports.Report_Proceed_QRCode_Click = exports.Report_ChooseType_Download_Click = exports.Report_ChooseType_ConnectWallet_Click = exports.Report_Proceed_Retry_Click = exports.Report_ChooseType_ConnectWallet_View = exports.Report_Loading_ConnectWallet_View = exports.Report_Proceed_QRCode_View = exports.Report_Proceed_Proceed_View = void 0;\nexports.Report_Proceed_Proceed_View = \"OKXConnectSDK_Proceed_Proceed_View\";\nexports.Report_Proceed_QRCode_View = \"OKXConnectSDK_Proceed_QRCode_View\";\nexports.Report_Loading_ConnectWallet_View = \"OKXConnectSDK_Loading_ConnectWallet_View\";\nexports.Report_ChooseType_ConnectWallet_View = \"OKXConnectSDK_ChooseType_ConnectWallet_View\";\nexports.Report_Proceed_Retry_Click = \"OKXConnectSDK_Proceed_Retry_Click\";\nexports.Report_ChooseType_ConnectWallet_Click = \"OKXConnectSDK_ChooseType_ConnectWallet_Click\";\nexports.Report_ChooseType_Download_Click = \"OKXConnectSDK_ChooseType_Download_Click\";\nexports.Report_Proceed_QRCode_Click = \"OKXConnectSDK_Proceed_QRCode_Click\";\nexports.Report_WalletType_Key = 'wallet_type';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkMetaData = checkMetaData;\nconst protocol_1 = require(\"../protocol\");\nfunction checkMetaData(dappMetaData) {\n    if (!dappMetaData) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"You have to specify a `dappMetaData`in the options.\");\n    }\n    if (!dappMetaData.name) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"dappName is required\");\n    }\n    if (!dappMetaData.icon) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"icon is required\");\n    }\n    return true;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.safeJsonParse = safeJsonParse;\nexports.safeJsonStringify = safeJsonStringify;\nconst log_1 = require(\"./log\");\nconst JSONStringify = (data) => JSON.stringify(data, (_, value) => (typeof value === \"bigint\" ? value.toString() + \"n\" : value));\n/*\n  Function to parse JSON.\n  If JSON has values in our custom format BigInt (strings with \"n\" character at the end), we just parse them to BigInt values.\n  If JSON has big number values, but not in our custom format, we copy it, and in a copy we convert those values to our custom format,\n  then parse them to BigInt values.\n  Other values (not big numbers and not our custom format BigInt values) are not affected and parsed as native JSON.parse() would parse them.\n*/\nconst JSONParse = (json) => {\n    /*\n      Big numbers are found and marked using Regex with this condition:\n      Number's length is bigger than 16 || Number's length is 16 and any numerical digit of the number is greater than that of the Number.MAX_SAFE_INTEGER\n      Additionally, it skips values that are strings (between double quotes).\n      */\n    // prettier-ignore\n    // eslint-disable-next-line no-useless-escape\n    const numbersBiggerThanMaxInt = /:(\\b\\d{17,}|\\b(?:[9](?:[1-9]07199254740991|0[1-9]7199254740991|00[8-9]199254740991|007[2-9]99254740991|007199[3-9]54740991|0071992[6-9]4740991|00719925[5-9]740991|007199254[8-9]40991|0071992547[5-9]0991|00719925474[1-9]991|00719925474099[2-9])))(?=[,\\}\\]]|$)/g;\n    const serializedData = json.replace(numbersBiggerThanMaxInt, (match, group) => `:\"${group}n\"`);\n    try {\n        return JSON.parse(serializedData, (_, value) => {\n            const isCustomFormatBigInt = typeof value === \"string\" && value.match(/^\\d+n$/);\n            if (isCustomFormatBigInt)\n                return BigInt(value.substring(0, value.length - 1));\n            return value;\n        });\n    }\n    catch (e) {\n        return JSON.parse(json);\n    }\n};\nfunction safeJsonParse(value) {\n    if (typeof value !== \"string\") {\n        (0, log_1.logDebug)(value);\n        throw new Error(`Cannot safe json parse value of type ${typeof value}`);\n    }\n    try {\n        return JSONParse(value);\n    }\n    catch (e) {\n        // eslint-disable-next-line no-console\n        console.error(\"safeJsonParse error:\", e);\n        return value;\n    }\n}\nfunction safeJsonStringify(value) {\n    return typeof value === \"string\" ? value : JSONStringify(value) || \"\";\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.okxfromString = okxfromString;\nexports.okxtoString = okxtoString;\nexports.alloc = alloc;\nexports.allocUnsafe = allocUnsafe;\nconst basics_1 = require(\"multiformats/basics\");\nconst log_1 = require(\"../utils/log\");\nfunction okxfromString(string, encoding = 'utf8') {\n    const base = BASES[encoding];\n    (0, log_1.logDebug)(\"okxfromstring ====> \");\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    return base.decoder.decode(`${base.prefix}${string}`);\n}\nfunction okxtoString(array, encoding = 'utf8') {\n    const base = BASES[encoding];\n    (0, log_1.logDebug)(\"okxtoString ====> \");\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    return base.encoder.encode(array).substring(1);\n}\nfunction alloc(size = 0) {\n    return new Uint8Array(size);\n}\nfunction allocUnsafe(size = 0) {\n    return new Uint8Array(size);\n}\nfunction createCodec(name, prefix, encode, decode) {\n    return {\n        name,\n        prefix,\n        encoder: {\n            name,\n            prefix,\n            encode\n        },\n        decoder: { decode }\n    };\n}\nconst string = createCodec('utf8', 'u', buf => {\n    const decoder = new TextDecoder('utf8');\n    return 'u' + decoder.decode(buf);\n}, str => {\n    const encoder = new TextEncoder();\n    return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n    let result = 'a';\n    for (let i = 0; i < buf.length; i++) {\n        let bufNum = buf[i];\n        if (bufNum && String.fromCharCode(bufNum)) {\n            result += String.fromCharCode(bufNum);\n        }\n    }\n    return result;\n}, str => {\n    str = str.substring(1);\n    const buf = allocUnsafe(str.length);\n    for (let i = 0; i < str.length; i++) {\n        buf[i] = str.charCodeAt(i);\n    }\n    return buf;\n});\nconst BASES = Object.assign({ utf8: string, 'utf-8': string, hex: basics_1.bases.base16, latin1: ascii, ascii: ascii, binary: ascii }, basics_1.bases);\n","\"use strict\";\nvar _a, _b, _c, _d, _e, _f, _g;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isTmaPlatform = isTmaPlatform;\nexports.isInTMA = isInTMA;\nexports.isInTelegramBrowser = isInTelegramBrowser;\nexports.sendExpand = sendExpand;\nexports.sendOpenTelegramLink = sendOpenTelegramLink;\nexports.versionCompare = versionCompare;\nconst url_1 = require(\"./url\");\nconst log_1 = require(\"./log\");\nconst protocol_1 = require(\"../protocol\");\nconst web_api_1 = require(\"./web-api\");\nlet initParams = {};\ntry {\n    let locationHash = location.hash.toString();\n    initParams = urlParseHashParams(locationHash);\n}\ncatch (e) { }\nlet tmaPlatform = 'unknown';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppPlatform) {\n    tmaPlatform = (_a = initParams.tgWebAppPlatform) !== null && _a !== void 0 ? _a : 'unknown';\n}\nif (tmaPlatform === 'unknown') {\n    const window = (0, url_1.getWindow)();\n    tmaPlatform = (_d = (_c = (_b = window === null || window === void 0 ? void 0 : window.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : 'unknown';\n}\nlet webAppVersion = '6.0';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppVersion) {\n    webAppVersion = initParams.tgWebAppVersion;\n}\nif (!webAppVersion) {\n    const window = (0, url_1.getWindow)();\n    webAppVersion = (_g = (_f = (_e = window === null || window === void 0 ? void 0 : window.Telegram) === null || _e === void 0 ? void 0 : _e.WebApp) === null || _f === void 0 ? void 0 : _f.version) !== null && _g !== void 0 ? _g : '6.0';\n}\n/**\n * Returns true if the app is running in TMA on the specified platform.\n * @param platforms\n */\nfunction isTmaPlatform(...platforms) {\n    return platforms.includes(tmaPlatform);\n}\n/**\n * Returns true if the app is running in TMA.\n */\nfunction isInTMA() {\n    var _a;\n    return tmaPlatform !== 'unknown' || !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n}\n/**\n * Returns true if the app is running in the Telegram browser.\n */\nfunction isInTelegramBrowser() {\n    var _a;\n    const isTelegramWebview = !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebview);\n    return (isInTMA() || isTelegramWebview) && tmaPlatform === 'unknown';\n}\n/**\n * Expand the app window.\n */\nfunction sendExpand() {\n    postEvent('web_app_expand', {});\n}\n/**\n * Opens link in TMA or in new tab and returns a function that closes the tab.\n * @param link The link to open.\n * @param fallback The function to call if the link can't be opened in TMA.\n */\nfunction sendOpenTelegramLink(link, fallback) {\n    const url = new URL(link);\n    if (url.protocol !== 'http:' && url.protocol !== 'https:') {\n        if (fallback) {\n            return fallback();\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Url protocol is not supported: ${url}`);\n    }\n    if (url.hostname !== 't.me') {\n        if (fallback) {\n            return fallback();\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Url host is not supported: ${url}`);\n    }\n    const pathFull = url.pathname + url.search;\n    if (isIframe() || versionAtLeast('6.1')) {\n        postEvent('web_app_open_tg_link', { path_full: pathFull });\n    }\n    else {\n        (0, web_api_1.openLinkBlank)('https://t.me' + pathFull);\n    }\n}\nfunction isIframe() {\n    try {\n        const window = (0, url_1.getWindow)();\n        if (!window) {\n            return false;\n        }\n        return window.parent != null && window !== window.parent;\n    }\n    catch (e) {\n        return false;\n    }\n}\nfunction postEvent(eventType, eventData) {\n    try {\n        const window = (0, url_1.getWindow)();\n        if (!window) {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Can't post event to parent window: window is not defined`);\n        }\n        if (window.TelegramWebviewProxy !== undefined) {\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.TelegramWebviewProxy.postEvent(eventType, JSON.stringify(eventData));\n        }\n        else if (window.external && 'notify' in window.external) {\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.external.notify(JSON.stringify({ eventType: eventType, eventData: eventData }));\n        }\n        else if (isIframe()) {\n            const trustedTarget = '*';\n            const message = JSON.stringify({ eventType: eventType, eventData: eventData });\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.parent.postMessage(message, trustedTarget);\n        }\n        else {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Can't post event to TMA`);\n        }\n    }\n    catch (e) {\n        (0, log_1.logError)(`Can't post event to parent window: ${e}`);\n    }\n}\nfunction urlParseHashParams(locationHash) {\n    locationHash = locationHash.replace(/^#/, '');\n    let params = {};\n    if (!locationHash.length) {\n        return params;\n    }\n    if (locationHash.indexOf('=') < 0 && locationHash.indexOf('?') < 0) {\n        params._path = urlSafeDecode(locationHash);\n        return params;\n    }\n    let qIndex = locationHash.indexOf('?');\n    if (qIndex >= 0) {\n        let pathParam = locationHash.substr(0, qIndex);\n        params._path = urlSafeDecode(pathParam);\n        locationHash = locationHash.substr(qIndex + 1);\n    }\n    let query_params = urlParseQueryString(locationHash);\n    for (let k in query_params) {\n        params[k] = query_params[k];\n    }\n    return params;\n}\nfunction urlSafeDecode(urlencoded) {\n    try {\n        urlencoded = urlencoded.replace(/\\+/g, '%20');\n        return decodeURIComponent(urlencoded);\n    }\n    catch (e) {\n        return urlencoded;\n    }\n}\nfunction urlParseQueryString(queryString) {\n    let params = {};\n    if (!queryString.length) {\n        return params;\n    }\n    let queryStringParams = queryString.split('&');\n    let i, param, paramName, paramValue;\n    for (i = 0; i < queryStringParams.length; i++) {\n        param = queryStringParams[i].split('=');\n        paramName = urlSafeDecode(param[0]);\n        paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n        params[paramName] = paramValue;\n    }\n    return params;\n}\nfunction versionCompare(v1, v2) {\n    if (typeof v1 !== 'string')\n        v1 = '';\n    if (typeof v2 !== 'string')\n        v2 = '';\n    let v1List = v1.replace(/^\\s+|\\s+$/g, '').split('.');\n    let v2List = v2.replace(/^\\s+|\\s+$/g, '').split('.');\n    let a, i, p1, p2;\n    a = Math.max(v1List.length, v2List.length);\n    for (i = 0; i < a; i++) {\n        p1 = parseInt(v1List[i]) || 0;\n        p2 = parseInt(v2List[i]) || 0;\n        if (p1 === p2)\n            continue;\n        if (p1 > p2)\n            return 1;\n        return -1;\n    }\n    return 0;\n}\nfunction versionAtLeast(ver) {\n    return versionCompare(webAppVersion, ver) >= 0;\n}\n","\"use strict\";\nvar _a, _b, _c, _d;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.removeUrlLastSlash = removeUrlLastSlash;\nexports.addPathToUrl = addPathToUrl;\nexports.getUniversalLink = getUniversalLink;\nexports.openOKXDeeplink = openOKXDeeplink;\nexports.openOKXUniversalLink = openOKXUniversalLink;\nexports.openOKXDeeplinkWithFallback = openOKXDeeplinkWithFallback;\nexports.getWindow = getWindow;\nexports.isTelegramUrl = isTelegramUrl;\nexports.encodeTelegramUrlParameters = encodeTelegramUrlParameters;\nexports.encodeConnectParams = encodeConnectParams;\nexports.encodeTWAConnectURLParams = encodeTWAConnectURLParams;\nexports.getAppWalletDeepLink = getAppWalletDeepLink;\nexports.getAppWalletShortDeepLink = getAppWalletShortDeepLink;\nexports.getTelegramWalletTWAUrl = getTelegramWalletTWAUrl;\nexports.openOKXTMAWalletlinkWithFallback = openOKXTMAWalletlinkWithFallback;\nexports.isInTMA = isInTMA;\nexports.isInTelegramBrowser = isInTelegramBrowser;\nexports.getOKXLink = getOKXLink;\nconst protocol_1 = require(\"../protocol\");\nconst log_1 = require(\"./log\");\nconst constants_1 = require(\"../protocol/constants\");\nconst utils_1 = require(\"./utils\");\nconst tma_api_1 = require(\"./tma-api\");\nfunction removeUrlLastSlash(url) {\n    if (url.slice(-1) === '/') {\n        return url.slice(0, -1);\n    }\n    return url;\n}\nfunction addPathToUrl(url, path) {\n    return removeUrlLastSlash(url) + '/' + path;\n}\nfunction getUniversalLink(deeplinkUrl, useStandardUniversalLink = false) {\n    console.log(\"getUniversalLink deeplinkUrl:\", deeplinkUrl, \", useStandardUniversalLink:\", useStandardUniversalLink);\n    /*const replaceStrWithParam = `${standardDeeplink}?param=`\n    if(!useStandardUniversalLink && deeplinkUrl.startsWith(replaceStrWithParam)){\n        const cleanUrl = deeplinkUrl.replace(replaceStrWithParam, '');\n        logDebug(\"getUniversalLink cleanUrl:\",cleanUrl)\n        const deeplinkEncodeUrl= encodeURIComponent(cleanUrl);\n        logDebug(\"getUniversalLink standardUniversalLink:\",standardUniversalLink)\n        logDebug(\"getUniversalLink `${shortUniversalLink}?param=${deeplinkEncodeUrl}`:\",`${shortUniversalLink}?param=${deeplinkEncodeUrl}`)\n        return `${shortUniversalLink}?param=${deeplinkEncodeUrl}`;\n    }else if(!useStandardUniversalLink && deeplinkUrl == standardDeeplink){\n        logDebug(\"getUniversalLink shortUniversalLink:\",shortUniversalLink)\n        return shortUniversalLink;\n    }else {\n        const deeplinkEncodeUrl= encodeURIComponent(deeplinkUrl);\n        console.log(\"getUniversalLink standardUniversalLink:\",standardUniversalLink)\n\n        return `${standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`;\n    }*/\n    const deeplinkEncodeUrl = encodeURIComponent(deeplinkUrl);\n    console.log(\"getUniversalLink standardUniversalLink:\", protocol_1.standardUniversalLink);\n    console.log(\"getUniversalLink standardUniversalLink:\", `${protocol_1.standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`);\n    return `${protocol_1.standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`;\n}\nfunction openOKXDeeplink(deeplinkUrl) {\n    var _a;\n    const fullUrl = getUniversalLink(deeplinkUrl);\n    const isTelegram = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n    console.log(\"openOKXDeeplink fullUrl:\", fullUrl);\n    if (!(0, utils_1.isIos)()) {\n        let newWindow = null;\n        if (isTelegram) {\n            newWindow = window.open(deeplinkUrl, '_blank');\n        }\n        else {\n            window.location.href = deeplinkUrl;\n        }\n    }\n    else {\n        openOKXUniversalLink(fullUrl);\n    }\n}\nfunction openOKXUniversalLink(fullUrl) {\n    if (!(0, utils_1.isIos)()) {\n        // if (isTelegram) {\n        window.open(fullUrl, '_blank');\n        // } else {\n        //     window.location.href = fullUrl;\n        // }\n    }\n    else {\n        if (isInTMA()) {\n            window.open(fullUrl, '_blank');\n        }\n        else {\n            console.log(\"windowOpen[before]: \", Date.now());\n            if (window === null || window === void 0 ? void 0 : window.okxLogDebug) {\n                window.open(fullUrl, '_blank');\n            }\n            else {\n                window.open(fullUrl, '_self');\n            }\n            console.log(\"windowOpen[after]: \", Date.now());\n        }\n    }\n}\nfunction openOKXDeeplinkWithFallback(deeplinkUrl) {\n    var _a;\n    const fullUrl = getUniversalLink(deeplinkUrl);\n    const isTelegram = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n    console.log(\"openOKXDeeplinkWithFallback fullUrl:\", fullUrl);\n    let deepLinkOpened = false;\n    const timeoutDuration = 3000; // 1.5秒的等待时间\n    const downloadUrl = protocol_1.standardUniversalLink;\n    console.log(\"openOKXDeeplinkWithFallback standardUniversalLink:\", protocol_1.standardUniversalLink);\n    if (!(0, utils_1.isIos)()) {\n        let newWindow = null;\n        var fallbackToDownloadPage = () => {\n            if (!deepLinkOpened) {\n                if (newWindow) {\n                    newWindow.open(fullUrl, '_self');\n                }\n                else {\n                    window.open(fullUrl, '_blank');\n                }\n            }\n        };\n        if (isTelegram) {\n            newWindow = window.open(deeplinkUrl, '_blank');\n        }\n        else {\n            window.location.href = deeplinkUrl;\n        }\n        setTimeout(fallbackToDownloadPage, timeoutDuration);\n        window.addEventListener('blur', () => {\n            deepLinkOpened = true;\n        }, { once: true });\n        document.addEventListener('visibilitychange', () => {\n            if (document.visibilityState === 'hidden') {\n                deepLinkOpened = true;\n            }\n        });\n    }\n    else {\n        if (isTelegram) {\n            window.open(fullUrl, '_blank');\n        }\n        else {\n            console.log(\"windowOpen[before]: \", Date.now());\n            if (window === null || window === void 0 ? void 0 : window.okxLogDebug) {\n                window.open(fullUrl, '_blank');\n            }\n            else {\n                window.open(fullUrl, '_self');\n            }\n            console.log(\"windowOpen[after]: \", Date.now());\n        }\n    }\n}\nfunction getWindow() {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    return undefined;\n}\nfunction isTelegramUrl(link) {\n    if (!link) {\n        return false;\n    }\n    const url = new URL(link);\n    return url.protocol === 'tg:' || url.hostname === 't.me';\n}\nfunction encodeTelegramUrlParameters(parameters) {\n    let encodedParameters = parameters;\n    encodedParameters = encodedParameters.replace(/\\./g, '%2E');\n    encodedParameters = encodedParameters.replace(/-/g, '%2D');\n    encodedParameters = encodedParameters.replace(/_/g, '%5F');\n    encodedParameters = encodedParameters.replace(/&/g, '-');\n    encodedParameters = encodedParameters.replace(/=/g, '__');\n    encodedParameters = encodedParameters.replace(/%/g, '--');\n    return encodedParameters;\n}\nfunction encodeConnectParams(connectRequest) {\n    const connectRequestStr = JSON.stringify(connectRequest);\n    (0, log_1.logDebug)(\"url encodeConnectParams connectRequestStr \", connectRequestStr);\n    const utf8Array = new TextEncoder().encode(connectRequestStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    // .replace(/\\+/g, '-')\n    // .replace(/\\//g, '_')\n    // .replace(/=+$/, ''); //Compatible with older versions of iOS. Cannot be added directly  (Base64 URL Safe)\n    (0, log_1.logDebug)(\"url encodeConnectParams base64Encoded \", base64Encoded);\n    return base64Encoded;\n}\nfunction encodeTWAConnectURLParams(connectRequest) {\n    const connectRequestStr = JSON.stringify({ topic: connectRequest.topic, clientId: connectRequest.clientId });\n    (0, log_1.logDebug)(\"url encodeConnectParams connectRequestStr\", connectRequestStr);\n    const utf8Array = new TextEncoder().encode(connectRequestStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    return base64Encoded;\n}\nfunction getAppWalletDeepLink(connectParam) {\n    return `${protocol_1.standardDeeplink}?param=${connectParam}`;\n}\nfunction getAppWalletShortDeepLink(topic, clientId) {\n    return `${constants_1.shortUniversalLink}?topic=${topic}${(0, utils_1.getLastSixMd5Hash)(clientId)}`;\n}\n//  make telegram okx wallet TWA url\nfunction getTelegramWalletTWAUrl(connectParam, redirectStr) {\n    let base64Content = { okxconnect: \"\", redirect: \"\", extraparams: \"\", fromtg: false };\n    if (connectParam) {\n        base64Content.okxconnect = connectParam;\n    }\n    if (redirectStr) {\n        base64Content.redirect = redirectStr;\n    }\n    if (!isInTMA()) {\n        base64Content.fromtg = false;\n    }\n    else {\n        base64Content.fromtg = true;\n    }\n    (0, log_1.logDebug)('getTelegramWalletTWAUrl redirect:', base64Content.redirect);\n    let base64ContentStr = JSON.stringify(base64Content);\n    const utf8Array = new TextEncoder().encode(base64ContentStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    const urlSafeBase64 = (0, utils_1.toSafeBase64FromBase64)(base64Encoded);\n    (0, log_1.logDebug)('[TWA] open link:', base64Content, base64Encoded);\n    if (connectParam || redirectStr) {\n        if (!isInTMA()) {\n            // return `http://localhost:5173?tgWebAppStartParam=${urlSafeBase64}`\n            if ((0, constants_1.getTestTwaUrl)()) {\n                return `${(0, constants_1.getTestTwaUrl)()}?tgWebAppStartParam=${urlSafeBase64}`;\n            }\n            else if ((0, constants_1.getTestTgTwaUrl)()) {\n                let result = (0, constants_1.getBotNameAndAppName)((0, constants_1.getTestTgTwaUrl)());\n                if (result) {\n                    let { botName, appName } = result;\n                    return `tg://resolve?domain=${botName}&appname=${appName}&startapp=${urlSafeBase64}`;\n                }\n                return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}&startapp=${urlSafeBase64}`;\n            }\n            else {\n                return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}&startapp=${urlSafeBase64}`;\n            }\n        }\n        else {\n            if ((0, constants_1.getTestTgTwaUrl)()) {\n                return `${(0, constants_1.getTestTgTwaUrl)()}?startapp=${urlSafeBase64}`;\n            }\n            else {\n                return `https://t.me/${constants_1.tgwalletName}/start?startapp=${urlSafeBase64}`;\n            }\n        }\n    }\n    if (!isInTMA()) {\n        // return \"http://localhost:5173\"\n        if ((0, constants_1.getTestTwaUrl)()) {\n            return `${(0, constants_1.getTestTwaUrl)()}`;\n        }\n        else if ((0, constants_1.getTestTgTwaUrl)()) {\n            let result = (0, constants_1.getBotNameAndAppName)((0, constants_1.getTestTgTwaUrl)());\n            if (result) {\n                let { botName, appName } = result;\n                return `tg://resolve?domain=${botName}&appname=${appName}`;\n            }\n            return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}`;\n        }\n        else {\n            return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}`;\n        }\n    }\n    else {\n        if ((0, constants_1.getTestTgTwaUrl)()) {\n            return `${(0, constants_1.getTestTgTwaUrl)()}`;\n        }\n        else {\n            return `https://t.me/${constants_1.tgwalletName}/start`;\n        }\n    }\n}\n//  open TWA url in telegram\nfunction openOKXTMAWalletlinkWithFallback(twaDeepLink) {\n    var _a, _b, _c, _d, _e;\n    (0, log_1.logDebug)('[TWA] open link:', twaDeepLink, \"isInTMA ==> \", isInTMA());\n    if (!isInTMA()) {\n        if ((0, constants_1.getTestTwaUrl)()) {\n            window.open(twaDeepLink, '_blank');\n        }\n        else {\n            window.open(twaDeepLink, '_self');\n        }\n    }\n    else {\n        if ((_b = (_a = getWindow()) === null || _a === void 0 ? void 0 : _a.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) {\n            (_e = (_d = (_c = getWindow()) === null || _c === void 0 ? void 0 : _c.Telegram) === null || _d === void 0 ? void 0 : _d.WebApp) === null || _e === void 0 ? void 0 : _e.openTelegramLink(twaDeepLink);\n        }\n        else {\n            (0, tma_api_1.sendOpenTelegramLink)(twaDeepLink);\n        }\n    }\n}\n/**\n * Returns true if the app is running in TMA.\n */\nfunction urlSafeDecode(urlencoded) {\n    try {\n        urlencoded = urlencoded.replace(/\\+/g, '%20');\n        return decodeURIComponent(urlencoded);\n    }\n    catch (e) {\n        return urlencoded;\n    }\n}\nfunction urlParseQueryString(queryString) {\n    let params = {};\n    if (!queryString.length) {\n        return params;\n    }\n    let queryStringParams = queryString.split('&');\n    let i, param, paramName, paramValue;\n    for (i = 0; i < queryStringParams.length; i++) {\n        param = queryStringParams[i].split('=');\n        paramName = urlSafeDecode(param[0]);\n        paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n        params[paramName] = paramValue;\n    }\n    return params;\n}\nfunction urlParseHashParams(locationHash) {\n    locationHash = locationHash.replace(/^#/, '');\n    let params = {};\n    if (!locationHash.length) {\n        return params;\n    }\n    if (locationHash.indexOf('=') < 0 && locationHash.indexOf('?') < 0) {\n        params._path = urlSafeDecode(locationHash);\n        return params;\n    }\n    let qIndex = locationHash.indexOf('?');\n    if (qIndex >= 0) {\n        let pathParam = locationHash.substr(0, qIndex);\n        params._path = urlSafeDecode(pathParam);\n        locationHash = locationHash.substr(qIndex + 1);\n    }\n    let query_params = urlParseQueryString(locationHash);\n    for (let k in query_params) {\n        params[k] = query_params[k];\n    }\n    return params;\n}\nlet initParams = {};\ntry {\n    let locationHash = location.hash.toString();\n    initParams = urlParseHashParams(locationHash);\n}\ncatch (e) { }\nlet tmaPlatform = 'unknown';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppPlatform) {\n    tmaPlatform = (_a = initParams.tgWebAppPlatform) !== null && _a !== void 0 ? _a : 'unknown';\n}\nif (tmaPlatform === 'unknown') {\n    const window = getWindow();\n    tmaPlatform = (_d = (_c = (_b = window === null || window === void 0 ? void 0 : window.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : 'unknown';\n}\nfunction isInTMA() {\n    var _a;\n    return tmaPlatform !== 'unknown' || !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n}\n/**\n * Returns true if the app is running in the Telegram browser.\n */\nfunction isInTelegramBrowser() {\n    var _a;\n    const isTelegramWebview = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebview);\n    return (isInTMA() || isTelegramWebview) && tmaPlatform === 'unknown';\n}\nfunction getOKXLink(connectRequest, useMini = false, tmaReturnUrl) {\n    (0, log_1.logDebug)(`url  getOKXLink() called connectRequest==> ${JSON.stringify(connectRequest)}  useMini=> ${useMini}  tmaReturnUrl==> ${tmaReturnUrl}`);\n    if (useMini) {\n        var encodeTGParams = encodeTWAConnectURLParams(connectRequest);\n        return getTelegramWalletTWAUrl(encodeTGParams, tmaReturnUrl !== null && tmaReturnUrl !== void 0 ? tmaReturnUrl : \"back\");\n    }\n    else {\n        if ((0, utils_1.useShortLink)()) {\n            return getAppWalletShortDeepLink(connectRequest.topic, connectRequest.clientId);\n        }\n        else {\n            const base64Encoded = encodeConnectParams(connectRequest);\n            return `${protocol_1.standardDeeplink}?param=${base64Encoded}`;\n        }\n    }\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isValidObject = exports.RANDOM_LENGTH = exports.isBrowser = exports.resolveLocalStorage = exports.hasLocalStorage = exports.hasBuiltInWebSocket = exports.resolveWebSocketImplementation = void 0;\nexports.hexToByteArray = hexToByteArray;\nexports.toHexString = toHexString;\nexports.concatUint8Arrays = concatUint8Arrays;\nexports.splitToUint8Arrays = splitToUint8Arrays;\nexports.base64encode = base64encode;\nexports.base64decode = base64decode;\nexports.checkWSUrl = checkWSUrl;\nexports.hashKey = hashKey;\nexports.generateRandomBytes32 = generateRandomBytes32;\nexports.generateTopic = generateTopic;\nexports.isIos = isIos;\nexports.getLastSixMd5Hash = getLastSixMd5Hash;\nexports.toSafeBase64FromBase64 = toSafeBase64FromBase64;\nexports.useShortLink = useShortLink;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst tweetnacl_util_1 = __importDefault(require(\"tweetnacl-util\"));\nconst to_string_1 = require(\"uint8arrays/to-string\");\nconst sha256_1 = require(\"@stablelib/sha256\");\nconst safejson_1 = require(\"./safejson\");\nconst log_1 = require(\"./log\");\nconst stringUtils_1 = require(\"../utils/stringUtils\");\nconst crypto_js_1 = __importDefault(require(\"crypto-js\"));\nconst BASE16 = \"base16\";\nfunction hexToByteArray(hexString) {\n    if (hexString.length % 2 !== 0) {\n        throw new Error(`Cannot convert ${hexString} to bytesArray`);\n    }\n    const result = new Uint8Array(hexString.length / 2);\n    for (let i = 0; i < hexString.length; i += 2) {\n        result[i / 2] = parseInt(hexString.slice(i, i + 2), 16);\n    }\n    return result;\n}\nfunction toHexString(byteArray) {\n    let hexString = '';\n    byteArray.forEach(byte => {\n        hexString += ('0' + (byte & 0xff).toString(16)).slice(-2);\n    });\n    return hexString;\n}\nfunction concatUint8Arrays(buffer1, buffer2) {\n    const mergedArray = new Uint8Array(buffer1.length + buffer2.length);\n    mergedArray.set(buffer1);\n    mergedArray.set(buffer2, buffer1.length);\n    return mergedArray;\n}\nfunction splitToUint8Arrays(array, index) {\n    if (index >= array.length) {\n        throw new Error('Index is out of buffer');\n    }\n    const subArray1 = array.slice(0, index);\n    const subArray2 = array.slice(index);\n    return [subArray1, subArray2];\n}\nfunction encodeUint8Array(value, urlSafe) {\n    const encoded = tweetnacl_util_1.default.encodeBase64(value);\n    if (!urlSafe) {\n        return encoded;\n    }\n    return encodeURIComponent(encoded);\n}\nfunction decodeToUint8Array(value, urlSafe) {\n    if (urlSafe) {\n        value = decodeURIComponent(value);\n    }\n    return tweetnacl_util_1.default.decodeBase64(value);\n}\nfunction base64encode(value, urlSafe) {\n    let uint8Array;\n    if (value instanceof Uint8Array) {\n        uint8Array = value;\n    }\n    else {\n        if (typeof value !== 'string') {\n            value = (0, safejson_1.safeJsonStringify)(value);\n        }\n        uint8Array = tweetnacl_util_1.default.decodeUTF8(value);\n    }\n    return encodeUint8Array(uint8Array, urlSafe);\n}\nfunction base64decode(value, urlSafe) {\n    const decodedUint8Array = decodeToUint8Array(value, urlSafe);\n    return {\n        toString() {\n            return tweetnacl_util_1.default.encodeUTF8(decodedUint8Array);\n        },\n        toObject() {\n            try {\n                return (0, safejson_1.safeJsonParse)(tweetnacl_util_1.default.encodeUTF8(decodedUint8Array));\n            }\n            catch (e) {\n                return null;\n            }\n        },\n        toUint8Array() {\n            return decodedUint8Array;\n        }\n    };\n}\nfunction checkWSUrl(url) {\n    const match = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!match || !match.length) {\n        return false;\n    }\n    let scheme = match[0];\n    if (scheme === undefined) {\n        return false;\n    }\n    return new RegExp(\"^wss?:\").test(scheme);\n}\nconst resolveWebSocketImplementation = () => {\n    if (typeof WebSocket !== \"undefined\") {\n        return WebSocket;\n    }\n    else if (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") {\n        return global.WebSocket;\n    }\n    else if (typeof window !== \"undefined\" && typeof window.WebSocket !== \"undefined\") {\n        return window.WebSocket;\n    }\n    else if (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\") {\n        return self.WebSocket;\n    }\n    return WebSocket;\n    //\n    // return require(\"ws\");\n};\nexports.resolveWebSocketImplementation = resolveWebSocketImplementation;\nconst hasBuiltInWebSocket = () => typeof WebSocket !== \"undefined\" ||\n    (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") ||\n    (typeof window !== \"undefined\" && typeof window.WebSocket !== \"undefined\") ||\n    (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\");\nexports.hasBuiltInWebSocket = hasBuiltInWebSocket;\nconst hasLocalStorage = () => (typeof global !== \"undefined\" && (typeof global.localStorage !== \"undefined\")) ||\n    (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\");\nexports.hasLocalStorage = hasLocalStorage;\nconst resolveLocalStorage = () => {\n    if (typeof global !== \"undefined\" && typeof global.localStorage !== \"undefined\") {\n        return global.localStorage;\n    }\n    else if (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\") {\n        return window.localStorage;\n    }\n    return localStorage;\n};\nexports.resolveLocalStorage = resolveLocalStorage;\nconst isBrowser = () => typeof window !== \"undefined\";\nexports.isBrowser = isBrowser;\nexports.RANDOM_LENGTH = 32;\nfunction hashKey(key, encode = BASE16) {\n    (0, log_1.logDebug)(`hash key called ${key}`);\n    const result = (0, sha256_1.hash)((0, stringUtils_1.okxfromString)(key, encode));\n    return (0, to_string_1.toString)(result, encode);\n}\nfunction generateRandomBytes32() {\n    return tweetnacl_1.default.randomBytes(exports.RANDOM_LENGTH);\n}\nfunction generateTopic() {\n    let randomBytes32 = generateRandomBytes32();\n    (0, log_1.logDebug)(`generate topic called ${randomBytes32}`);\n    return hashKey((0, to_string_1.toString)(randomBytes32, BASE16));\n}\nconst isValidObject = (obj) => Object.getPrototypeOf(obj) === Object.prototype && Object.keys(obj).length;\nexports.isValidObject = isValidObject;\nfunction isIos() {\n    const userAgent = navigator.userAgent;\n    const maxTouchPoints = navigator.maxTouchPoints || 0;\n    // 检测 iPhone、iPod 和传统的 iPad\n    const isIOSDevice = /iPad|iPhone|iPod/.test(userAgent) && !window.MSStream;\n    // 针对 iPadOS 13 及以上的设备进行额外判断\n    const isIPadOS = (userAgent.includes('Mac') && maxTouchPoints > 1);\n    (0, log_1.logDebug)(`utils isIos >>>isIOSDevice: ${isIOSDevice}    >> isIPadOS: ${isIPadOS}`);\n    // 如果是 iOS 设备或者是 iPadOS 设备，返回 true\n    return isIOSDevice || isIPadOS;\n}\nfunction getLastSixMd5Hash(input) {\n    // 生成 MD5 哈希\n    const hash = crypto_js_1.default.MD5(input).toString();\n    // 获取最后六位\n    return hash.slice(-6);\n}\nfunction toSafeBase64FromBase64(base64) {\n    return base64\n        .replace(/=/g, \"\")\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\");\n}\nfunction useShortLink() {\n    return !!window.useShortLink;\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.openLink = openLink;\nexports.openLinkBlank = openLinkBlank;\nexports.openDeeplinkWithFallback = openDeeplinkWithFallback;\nexports.isMobileUserAgent = isMobileUserAgent;\nexports.getUserAgent = getUserAgent;\nexports.isOS = isOS;\nexports.isBrowser = isBrowser;\nconst ua_parser_js_1 = __importDefault(require(\"ua-parser-js\"));\nconst log_1 = require(\"./log\");\nfunction openLink(href, target = '_self') {\n    (0, log_1.logDebug)('openLink', href, target);\n    window.open(href, target, 'noopener noreferrer');\n}\nfunction openLinkBlank(href) {\n    openLink(href, '_blank');\n}\nfunction openDeeplinkWithFallback(href, fallback) {\n    const doFallback = () => {\n        if (isBrowser('safari') || (isOS('android') && isBrowser('firefox'))) {\n            // Safari does not support fallback to direct link.\n            return;\n        }\n        fallback();\n    };\n    const fallbackTimeout = setTimeout(() => doFallback(), 500);\n    window.addEventListener('blur', () => clearTimeout(fallbackTimeout), { once: true });\n    openLink(href, '_self');\n}\nfunction isMobileUserAgent() {\n    let check = false;\n    (function (a) {\n        if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) ||\n            /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.slice(0, 4)))\n            check = true;\n    })(navigator.userAgent ||\n        navigator.vendor ||\n        window.opera);\n    return check;\n}\nfunction getUserAgent() {\n    var _a, _b, _c;\n    const results = new ua_parser_js_1.default().getResult();\n    const osName = (_a = results.os.name) === null || _a === void 0 ? void 0 : _a.toLowerCase();\n    const deviceModel = (_b = results.device.model) === null || _b === void 0 ? void 0 : _b.toLowerCase();\n    let os;\n    switch (true) {\n        case deviceModel === 'ipad':\n            os = 'ipad';\n            break;\n        case osName === 'ios':\n            os = 'ios';\n            break;\n        case osName === 'android':\n            os = 'android';\n            break;\n        case osName === 'mac os':\n            os = 'macos';\n            break;\n        case osName === 'linux':\n            os = 'linux';\n            break;\n        case osName === null || osName === void 0 ? void 0 : osName.includes('windows'):\n            os = 'windows';\n            break;\n    }\n    const browserName = (_c = results.browser.name) === null || _c === void 0 ? void 0 : _c.toLowerCase();\n    let browser;\n    switch (true) {\n        case browserName === 'chrome':\n            browser = 'chrome';\n            break;\n        case browserName === 'firefox':\n            browser = 'firefox';\n            break;\n        case browserName === null || browserName === void 0 ? void 0 : browserName.includes('safari'):\n            browser = 'safari';\n            break;\n        case browserName === null || browserName === void 0 ? void 0 : browserName.includes('opera'):\n            browser = 'opera';\n            break;\n    }\n    return {\n        os,\n        browser\n    };\n}\nfunction isOS(...os) {\n    return os.includes(getUserAgent().os);\n}\nfunction isBrowser(...browser) {\n    return browser.includes(getUserAgent().browser);\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXSolanaProvider = void 0;\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXSolanaProvider {\n    getRealChainId(chainId) {\n        if (chainId == null) {\n            if (this.chainsSet.size == 1) {\n                let realChain = \"\";\n                let map = this.defaultChainMap;\n                this.chainsSet.forEach(function (chain) {\n                    if (map.has(chain)) {\n                        realChain = map.get(chain);\n                    }\n                });\n                if (realChain == \"\") {\n                    throw new Error(\"unsupported chainId\");\n                }\n                else {\n                    return realChain;\n                }\n            }\n            else {\n                throw new Error(\"connected to multiple solana chains,chainId can not be null\");\n            }\n        }\n        else {\n            if (chainId.startsWith(\"svm\")) {\n                return chainId;\n            }\n            else {\n                if (this.caip.includes(chainId)) {\n                    return chainId;\n                }\n                else {\n                    throw new Error(\"wrong chainId\");\n                }\n            }\n        }\n    }\n    getConnectedNamespace() {\n        var _a, _b, _c;\n        (_c = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces) === null || _b === void 0 ? void 0 : _b['solana']) === null || _c === void 0 ? void 0 : _c.chains.forEach(chain => {\n            this.chainsSet.add(chain.split(\":\")[0]);\n        });\n    }\n    constructor(provider) {\n        this.chainsSet = new Set();\n        this.caip = [\n            \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n            \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n            \"sonic:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n            \"sonic:EtWTRABZaYq6iMfeYKouRu166VU2xqa1\"\n        ];\n        this.defaultChainMap = new Map();\n        this.provider = provider.getUniversalProvider();\n        this.defaultChainMap.set(\"solana\", \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\");\n        this.defaultChainMap.set(\"sonic\", \"sonic:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\");\n        this.getConnectedNamespace();\n    }\n    signMessage(message, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            chainId = this.getRealChainId(chainId);\n            try {\n                let data = {\n                    \"chainId\": chainId,\n                    \"method\": \"solana_signMessage\",\n                    \"params\": {\n                        \"message\": message,\n                        \"pubkey\": (_a = this.getAccount(chainId)) === null || _a === void 0 ? void 0 : _a.address\n                    }\n                };\n                let signedMessage = yield this.provider.request(data, chainId);\n                (0, core_1.logDebug)(\"signMessage111\", signedMessage);\n                if ('result' in signedMessage) {\n                    let successData = signedMessage.result;\n                    return new Promise((resolve, reject) => {\n                        var _a;\n                        resolve({\n                            \"signature\": bs58_1.default.decode(successData),\n                            \"publicKey\": (_a = this.getAccount(chainId)) === null || _a === void 0 ? void 0 : _a.address\n                        });\n                    });\n                }\n                else {\n                    (0, core_1.logDebug)(\"signMessage111\", signedMessage);\n                    return new Promise((resolve, reject) => {\n                        resolve(signedMessage.error);\n                    });\n                }\n            }\n            catch (error) {\n                console.error('方法数据回调失败 --Error--', error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d;\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['solana']) === null || _b === void 0 ? void 0 : _b.accounts[0];\n        if (chainId != null) {\n            account = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces['solana']) === null || _d === void 0 ? void 0 : _d.accounts.filter(function (account) {\n                return account.startsWith(chainId);\n            })[0];\n        }\n        (0, core_1.logDebug)(\"getAccount\", account);\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const address = account.split(':')[2];\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address,\n            publicKey: new web3_js_1.PublicKey(address)\n        };\n    }\n    signTransaction(transaction, chainId) {\n        var _a, _b;\n        (0, core_1.logDebug)(\"OKXSolanaProvider\", typeof transaction);\n        chainId = this.getRealChainId(chainId);\n        try {\n            let serializedMessage = transaction.serialize({\n                requireAllSignatures: false,\n                verifySignatures: false,\n            });\n            let data = { \"data\": bs58_1.default.encode(serializedMessage), \"from\": (_a = this.getAccount(chainId)) === null || _a === void 0 ? void 0 : _a.address };\n            return this.getSignedTransaction(\"solana_signTransaction\", data, chainId);\n        }\n        catch (e) {\n            let serializedMessage = transaction.serialize();\n            let data = { \"data\": bs58_1.default.encode(serializedMessage), \"from\": (_b = this.getAccount(chainId)) === null || _b === void 0 ? void 0 : _b.address };\n            return this.getSignedTransaction(\"solana_signTransaction\", data, chainId);\n        }\n    }\n    signAllTransactions(transactions, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getRealChainId(chainId);\n            try {\n                var array = transactions.map((tx) => {\n                    var _a;\n                    var serializedMessage;\n                    if (tx instanceof web3_js_1.VersionedTransaction) {\n                        serializedMessage = tx.serialize();\n                    }\n                    else {\n                        serializedMessage = tx.serialize({\n                            requireAllSignatures: false,\n                            verifySignatures: false,\n                        });\n                    }\n                    return { \"data\": bs58_1.default.encode(serializedMessage), \"from\": (_a = this.getAccount(chainId)) === null || _a === void 0 ? void 0 : _a.address };\n                });\n                const response = yield this.provider.request({\n                    \"method\": \"solana_signAllTransactions\",\n                    \"params\": {\n                        \"transactions\": array\n                    }\n                }, chainId);\n                if (\"result\" in response) {\n                    let result = response.result;\n                    let newTransactions = JSON.parse(result).map((s) => {\n                        let c = bs58_1.default.decode(s);\n                        try {\n                            let transaction = web3_js_1.Transaction.from(c);\n                            (0, core_1.logDebug)(\"verifySignatures\", transaction.verifySignatures());\n                            return transaction;\n                        }\n                        catch (error) {\n                            return web3_js_1.VersionedTransaction.deserialize(c);\n                        }\n                    });\n                    return new Promise((resolve, reject) => {\n                        resolve(newTransactions);\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        resolve(response);\n                    });\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"getSignedTransaction\", error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    signAndSendTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            chainId = this.getRealChainId(chainId);\n            try {\n                let data = {};\n                try {\n                    let serializedMessage = transaction.serialize({\n                        requireAllSignatures: false,\n                        verifySignatures: false,\n                    });\n                    data = { \"data\": bs58_1.default.encode(serializedMessage), \"from\": (_a = this.getAccount(chainId)) === null || _a === void 0 ? void 0 : _a.address };\n                }\n                catch (e) {\n                    let serializedMessage = transaction.serialize();\n                    data = { \"data\": bs58_1.default.encode(serializedMessage), \"from\": (_b = this.getAccount(chainId)) === null || _b === void 0 ? void 0 : _b.address };\n                }\n                let signature = yield this.provider.request({\n                    \"method\": \"solana_signAndSendTransaction\",\n                    \"params\": data\n                }, chainId);\n                if ('result' in signature) {\n                    let successData = signature.result;\n                    return new Promise((resolve, reject) => {\n                        resolve(successData);\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        resolve(signature);\n                    });\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"getSignedTransaction\", error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    getSignedTransaction(method, transactionStr, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let signature = yield this.provider.request({\n                    \"method\": method,\n                    \"params\": transactionStr\n                }, chainId);\n                if ('result' in signature) {\n                    let successData = signature.result;\n                    let c = bs58_1.default.decode(successData);\n                    let resultTx;\n                    try {\n                        resultTx = web3_js_1.Transaction.from(c);\n                    }\n                    catch (error) {\n                        resultTx = web3_js_1.VersionedTransaction.deserialize(c);\n                    }\n                    if (!(resultTx instanceof web3_js_1.VersionedTransaction)) {\n                        (0, core_1.logDebug)(\"verifySignatures\", resultTx.verifySignatures());\n                    }\n                    return new Promise((resolve, reject) => {\n                        resolve(resultTx);\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        reject(signature);\n                    });\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"getSignedTransaction\", error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n}\nexports.OKXSolanaProvider = OKXSolanaProvider;\nexports.default = OKXSolanaProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXSolanaProvider = void 0;\nvar OKXSolanaProvider_1 = require(\"./OKXSolanaProvider\");\nObject.defineProperty(exports, \"OKXSolanaProvider\", { enumerable: true, get: function () { return OKXSolanaProvider_1.OKXSolanaProvider; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXBtcProvider = void 0;\nconst _1 = require(\"./\");\nclass OKXBtcProvider {\n    constructor(provider) {\n        this.caip = [\n            \"btc:mainnet\",\n            \"fractal:mainnet\"\n        ];\n        this.provider = provider;\n    }\n    getAddressForChainId(chainId) {\n        var _a, _b;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let accounts = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        });\n        if (accounts == undefined || accounts.length < 0) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `no connected account`);\n        }\n        let account = accounts[0];\n        const address = account.split(':')[2];\n        return address;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let extra = (_c = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.extra) === null || _c === void 0 ? void 0 : _c[chainId];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"compressedPublicKey\"];\n        }\n        return {\n            address: this.getAddressForChainId(chainId),\n            publicKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param signStr\n     * @param chainId\n     * @param type\n     * @returns\n     */\n    signMessage(chainId, signStr, type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (signStr === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signMessage parmas error`);\n            }\n            let params = {\n                signStr: signStr,\n                from: this.getAddressForChainId(chainId)\n            };\n            if (type) {\n                params.type = type;\n            }\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signMessage\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param toAddress\n     * @param satoshis\n     * @param options { feeRate: 0 }\n     * @returns\n     */\n    sendBitcoin(chainId, toAddress, satoshis, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            let params = {\n                from: this.getAddressForChainId(chainId),\n                to: toAddress,\n                value: (satoshis / 100000000).toString(),\n            };\n            if (options === null || options === void 0 ? void 0 : options.feeRate) {\n                params[\"satBytes\"] = options.feeRate.toString();\n            }\n            let result = yield this.send(chainId, params);\n            if (result !== undefined && ('txhash' in result)) {\n                // return txhash directly\n                return result.txhash;\n            }\n            // or return unexpected result\n            return result;\n        });\n    }\n    //  from - string：当前连接的钱包的 BTC 地址\n    //  to - string：接受 BTC 的地址\n    //  value - string：发送 BTC 的数量\n    //  satBytes - string： (可选) 自定义费率\n    //  memo - string： (可选) 指定 outputs OP_RETURN 内容 示例\n    //  memoPos - number： (可选) 指定 outputs OP_RETURN 输出位置，如果传了 memo 则必须传入 memoPos 指定位置，否则 memo 不生效\n    send(chainId, input) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (!this.checkParameters(input, 'to', 'value')) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send parmas  error`);\n            }\n            input[\"from\"] = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: 'btc_send',\n                    params: input\n                }, chainId);\n                if ('result' in ret) {\n                    return {\n                        txhash: ret.result\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param psbtHex string 要签名的 psbt 的十六进制字符串\n     * @param options object { autoFinalized: 0 }\n     */\n    signPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.signPsbts(chainId, [psbtHex], [options]).then(psbtResults => {\n                    let results = JSON.parse(psbtResults);\n                    resolve(results[0]);\n                }).catch(error => {\n                    reject(error);\n                });\n            });\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHexs Array\n     * @param options Array [{ autoFinalized: 0 }]\n     * @returns\n     */\n    signPsbts(chainId, psbtHexs, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHexs === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHexs: psbtHexs,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signPsbts\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHex string\n     * @param options object\n     * @returns\n     */\n    signAndPushPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHex === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHex: psbtHex,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signAndPushPsbt\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return JSON.parse(ret.result);\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param address string, receiver address\n     * @param inscriptionId string, 铭文 ID + 协议，没有传协议则默认是 Ordinals NFT ，目前仅支持 Ordinals 及 Atomicals 协议\n     * @param options object, { feeRate: number } custom rates\n     */\n    sendInscription(chainId, address, inscriptionId, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let extension = {\n                address: address,\n                inscriptionId: inscriptionId,\n                options: options\n            };\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (address === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method sendInscription params error`);\n            }\n            var feeRate = 0;\n            if (options && ('feeRate' in options)) {\n                feeRate = options.feeRate;\n            }\n            let coinId = '';\n            let from = this.getAddressForChainId(chainId);\n            var protocolId = 7; //ProtocolIdBRCNFT\n            if (inscriptionId !== 'undefined') {\n                let atomicSuffix = \"-Atomicals\";\n                let ordinalsSuffix = \"-Ordinals\";\n                if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(atomicSuffix.toLowerCase())) {\n                    protocolId = 8; //WXRCProtocolIdARCNFT\n                    inscriptionId = this.removeSuffix(inscriptionId, atomicSuffix);\n                }\n                else if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(ordinalsSuffix.toLowerCase())) {\n                    inscriptionId = this.removeSuffix(inscriptionId, ordinalsSuffix);\n                }\n            }\n            let params = {\n                scenario: 5,\n                feeRate: feeRate,\n                txType: \"20\",\n                to: address,\n                batchBean: [\n                    {\n                        coinAmount: \"1\",\n                        nftId: inscriptionId,\n                        protocolId: protocolId,\n                        coinId: coinId,\n                        inscriptionId: \"\",\n                        from: from\n                    }\n                ],\n                extension: extension\n            };\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_sendInscription\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    removeSuffix(str, suffix) {\n        if (str.endsWith(suffix)) {\n            return str.slice(0, str.length - suffix.length);\n        }\n        return str;\n    }\n    checkParameters(params, ...keys) {\n        var unexistKeys = [];\n        keys.forEach(key => {\n            if (!(`${key}` in params)) {\n                unexistKeys.push(key);\n            }\n        });\n        if (unexistKeys.length > 0) {\n            console.log('not find key: ', unexistKeys.join(\",\"));\n            return false;\n        }\n        return true;\n    }\n    /**\n     *\n     * @param chainId eg. btc:mainnet\n     * @returns eg. btc\n     */\n    checkChainId(chainId) {\n        if (this.caip.includes(chainId)) {\n            let [namespaceKey, _] = chainId.split(\":\");\n            return namespaceKey;\n        }\n        return undefined;\n    }\n}\nexports.OKXBtcProvider = OKXBtcProvider;\nexports.default = OKXBtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCosmosProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXCosmosProvider {\n    constructor(provider) {\n        this.provider = provider;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e, _f;\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount chainId:\", chainId);\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount namespaces:\", JSON.stringify((_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces));\n        let account = (_c = (_b = this.provider.session) === null || _b === void 0 ? void 0 : _b.namespaces[core_1.NameSpaceKeyCosmos]) === null || _c === void 0 ? void 0 : _c.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount account:\", JSON.stringify(account));\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount address:\", address);\n        let extra = (_f = (_e = (_d = this.provider.session) === null || _d === void 0 ? void 0 : _d.namespaces[core_1.NameSpaceKeyCosmos]) === null || _e === void 0 ? void 0 : _e.extra) === null || _f === void 0 ? void 0 : _f[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n            console.log(\"aptos_publicKey\", publicKey);\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            algo: \"secp256k1\",\n            address: address,\n            bech32Address: address,\n            pubKey: this.hexToUint8Array(publicKey),\n        };\n    }\n    signArbitrary(chainId, signerAddress, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const base64Encoded = window.btoa(data);\n            const signDoc = {\n                chain_id: \"\",\n                account_number: \"0\",\n                sequence: \"0\",\n                fee: {\n                    gas: \"0\",\n                    amount: []\n                },\n                msgs: [{\n                        \"type\": \"sign/MsgSignData\",\n                        \"value\": {\n                            \"signer\": signerAddress,\n                            \"data\": base64Encoded\n                        }\n                    }],\n                memo: \"\"\n            };\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signArbitrary\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chain_id\": chainId.split(\":\")[1],\n                    \"data\": signDoc\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    if (typeof ret.result == \"string\") {\n                        return JSON.parse(ret.result);\n                    }\n                    else {\n                        return ret.result;\n                    }\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAmino(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (signDoc.msgs[0].type == \"sign/MsgSignData\") {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signArbitrary\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chain_id\": chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        return ret.result;\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    return error;\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                }\n            }\n            else {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signAmino\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chainId\": chainId.split(\":\")[1],\n                        \"sign_doc\": signDoc,\n                        \"signOptions\": signOptions\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        const resData = JSON.parse(ret.result);\n                        console.log(\"signdoc\", signDoc, resData.signDoc);\n                        signDoc.fee = resData.signDoc.fee;\n                        return { signed: signDoc, signature: resData.signature };\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                    return error;\n                }\n            }\n        });\n    }\n    signDirect(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const object = {\n                bodyBytes: this.bufferToHex(signDoc.bodyBytes),\n                authInfoBytes: this.bufferToHex(signDoc.authInfoBytes),\n                chainId: signDoc.chainId,\n                accountNumber: signDoc.accountNumber ? signDoc.accountNumber.toString() : null,\n                signOptions: signOptions ? signOptions : null\n            };\n            let data = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signDirect\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chainId\": chainId.split(\":\")[1],\n                    \"sign_doc\": object,\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    const res = JSON.parse(ret.result);\n                    console.log(\"signdirect result\", res);\n                    signDoc.authInfoBytes = this.messageToBuffer(res.signDoc.authInfoBytes);\n                    return { signed: signDoc, signature: res.signature };\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    messageToBuffer(message) {\n        var buffer = Uint8Array.from([]);\n        try {\n            if (typeof message === \"string\") {\n                buffer = this.hexToUint8Array(message.replace(\"0x\", \"\"));\n            }\n            else {\n                buffer = Uint8Array.from(message);\n            }\n        }\n        catch (err) {\n            console.log(`messageToBuffer error: ${err}`);\n        }\n        return buffer;\n    }\n    bufferToHex(arr) {\n        let output = [...new Uint8Array(arr)]\n            .map(x => x.toString(16).padStart(2, '0'))\n            .join('');\n        return '0x' + output;\n    }\n    hexToUint8Array(hexString) {\n        if (hexString.length % 2 !== 0) {\n            throw \"Invalid hexString\";\n        }\n        var arrayBuffer = new Uint8Array(hexString.length / 2);\n        for (var i = 0; i < hexString.length; i += 2) {\n            var byteValue = parseInt(hexString.substr(i, 2), 16);\n            if (isNaN(byteValue)) {\n                throw \"Invalid hexString\";\n            }\n            arrayBuffer[i / 2] = byteValue;\n        }\n        return arrayBuffer;\n    }\n}\nexports.OKXCosmosProvider = OKXCosmosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXStarknetProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXStarknetProvider {\n    constructor(provider) {\n        this.STARKNET_CHAIN_ID = \"starknet:mainnet\";\n        this.provider = provider;\n    }\n    getChain(chainId) {\n        if (chainId == null) {\n            chainId = this.STARKNET_CHAIN_ID;\n        }\n        if (chainId != this.STARKNET_CHAIN_ID) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, \"The chainId:\" + chainId + \"is wrong for OKXStarknetProvider\");\n        }\n        return chainId;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyStarknet]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyStarknet]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address,\n            pubKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param chainId\n     * @param signerAddress\n     * @param data: { types, primaryType, domain, message } as TypedData\n     * @returns [signedDataR, signedDataS]\n     */\n    signMessage(signerAddress, typedData, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            if (signerAddress.length == 0) {\n                signerAddress = this.getAccount(chainId)[\"address\"];\n            }\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"starknet_signMessage\",\n                \"params\": {\n                    \"accountAddress\": signerAddress,\n                    \"typedData\": typedData\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    let results = ret.result;\n                    if (typeof results == 'string') {\n                        results = JSON.parse(results);\n                    }\n                    return [results[\"signedDataR\"], results[\"signedDataS\"]];\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     * sendTransaction\n     * @param chainId\n     * @param signerAddress\n     * @param transaction\n     * @returns { transaction_hash }\n     */\n    sendTransaction(signerAddress, transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let transactionData = {\n                \"accountAddress\": signerAddress,\n                \"executionRequest\": transaction\n            };\n            let data = {\n                \"method\": \"starknet_sendTransaction\",\n                \"params\": {\n                    \"data\": JSON.stringify(transactionData),\n                    \"from\": signerAddress\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return { transaction_hash: ret.result };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * signMessage old API（rarely used, no need provide to external）\n     * @param chainId\n     * @param payload\n     * @returns {transaction_hash, class_hash}\n     */\n    signMessageDeclareContractPayload(payload, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            try {\n                let data = {\n                    \"method\": \"starknet_signMessage\",\n                    \"params\": payload\n                };\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return {\n                        \"transaction_hash\": ret.result[\"txHash\"],\n                        \"class_hash\": ret.result[\"classHash\"]\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     * sendTransaction old API（rarely used, no need provide to external）\n     * @param chainId\n     * @param signerAddress\n     * @param calls\n     * @param abis\n     * @param transactionsDetail\n     * @returns { transaction_hash }\n     */\n    /// todo： \n    /// 修改方法名\n    /// chainId 放后面\n    sendMessageExecuteTransactionDetail(signerAddress, calls, abis, transactionsDetail, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            const transactions = Array.isArray(calls) ? calls : [calls];\n            const executionRequest = {\n                \"calls\": transactions,\n                \"abis\": abis,\n                \"transactionsDetail\": {\n                    \"nonce\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.nonce,\n                    \"maxFee\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.nonce,\n                    \"version\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.version,\n                }\n            };\n            return this.sendTransaction(signerAddress, executionRequest, chainId);\n        });\n    }\n}\nexports.OKXStarknetProvider = OKXStarknetProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTonProvider = void 0;\nconst _1 = require(\"./\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTonProvider {\n    constructor(generator) {\n        this.statusChangeSubscriptions = [];\n        this.statusChangeErrorSubscriptions = [];\n        this.provider = generator;\n        this.provider.on(\"connect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event connect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"reconnect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event reconnect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"disconnect\", () => {\n            (0, core_1.logDebug)(\"OKXTONProvider event disconnect:\");\n            this.statusChangeSubscriptions.forEach(callback => callback(null));\n        });\n        this.provider.on(\"connect_error\", (error) => {\n            (0, core_1.logDebug)(\"OKXTONProvider event connect_error:\", JSON.stringify(error));\n            this.statusChangeErrorSubscriptions.forEach(errorsHandler => errorsHandler(error));\n        });\n    }\n    connected() {\n        if (this.provider.connected()) {\n            return !!this.provider.session.namespaces[\"ton\"];\n        }\n        return false;\n    }\n    account() {\n        try {\n            if (!this.provider.session) {\n                return null;\n            }\n            let tonNameSpace = this.provider.session.namespaces['ton'];\n            if (!tonNameSpace || !tonNameSpace.payload || !tonNameSpace.payload.ton_addr) {\n                return null;\n            }\n            let ton_addr = tonNameSpace.payload.ton_addr;\n            return {\n                address: ton_addr.address,\n                chain: ton_addr.network,\n                walletStateInit: ton_addr.walletStateInit,\n                publicKey: ton_addr.publicKey,\n            };\n        }\n        catch (e) {\n            (0, core_1.logDebug)(\"OKXTONProvider account  error:\", JSON.stringify(e));\n            return null;\n        }\n    }\n    wallet() {\n        if (this.connected()) {\n            try {\n                let sessionWallet = this.provider.session.wallet;\n                let tonDeviceInfo = {\n                    platform: sessionWallet.platform,\n                    appName: sessionWallet.appName,\n                    appVersion: sessionWallet.appVersion,\n                    maxProtocolVersion: sessionWallet.maxProtocolVersion,\n                    features: ['ton_sendTransaction'],\n                };\n                const wallet = {\n                    device: tonDeviceInfo,\n                    provider: \"http\",\n                    account: this.account()\n                };\n                let tonNameSpace = this.provider.session.namespaces['ton'];\n                if (tonNameSpace && tonNameSpace.payload && tonNameSpace.payload.ton_proof) {\n                    wallet.connectItems = {\n                        tonProof: tonNameSpace.payload.ton_proof\n                    };\n                }\n                (0, core_1.logDebug)(\"OKXTONProvider wallet :\", JSON.stringify(wallet));\n                return wallet;\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"OKXTONProvider wallet  error:\", JSON.stringify(e));\n                return null;\n            }\n        }\n        return null;\n    }\n    onStatusChange(callback, errorsHandler) {\n        this.statusChangeSubscriptions.push(callback);\n        if (errorsHandler) {\n            this.statusChangeErrorSubscriptions.push(errorsHandler);\n        }\n        return () => {\n            this.statusChangeSubscriptions = this.statusChangeSubscriptions.filter(item => item !== callback);\n            if (errorsHandler) {\n                this.statusChangeErrorSubscriptions = this.statusChangeErrorSubscriptions.filter(item => item !== errorsHandler);\n            }\n        };\n    }\n    sendTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (transaction.network && transaction.network !== core_1.TONCHAIN.MAINNET) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, 'OKXTONProvider sendTransaction network error');\n            }\n            if (!transaction.network) {\n                transaction.network = core_1.TONCHAIN.MAINNET;\n            }\n            if (this.provider.session) {\n                if (!transaction.from) {\n                    const accounts = this.provider.requestAccountsWithNamespace('ton');\n                    transaction.from = accounts[0];\n                }\n            }\n            const requestParams = {\n                method: \"ton_sendTransaction\",\n                params: transaction,\n            };\n            let chain = 'ton:' + core_1.TONCHAIN.MAINNET;\n            (0, core_1.logDebug)(\"OKXTONProvider sendTransaction transaction----:\", chain, JSON.stringify(requestParams));\n            return this.provider.request(requestParams, chain);\n        });\n    }\n}\nexports.OKXTonProvider = OKXTonProvider;\nexports.default = OKXTonProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTronProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTronProvider {\n    constructor(provider) {\n        this.TRON_CHAIN_ID = \"tron:mainnet\";\n        this.provider = provider;\n    }\n    getChain(chainId) {\n        if (chainId == null) {\n            chainId = this.TRON_CHAIN_ID;\n        }\n        if (chainId != this.TRON_CHAIN_ID) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, \"The chainId:\" + chainId + \"is wrong for OKXTronProvider\");\n        }\n        return chainId;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        chainId = this.getChain(chainId);\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyTron]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyTron]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address\n        };\n    }\n    stringToHex(str) {\n        let hex = '';\n        for (let i = 0; i < str.length; i++) {\n            hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n        }\n        return hex;\n    }\n    signMessage(data, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessage\",\n                \"params\": {\n                    \"message\": this.stringToHex(data)\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signMessageV2(data, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessageV2\",\n                \"params\": {\n                    \"message\": data\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let data = {\n                \"method\": \"tron_signTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    let signedTx;\n                    if (typeof ret.result == \"string\") {\n                        signedTx = JSON.parse(ret.result);\n                    }\n                    else {\n                        signedTx = ret.result;\n                    }\n                    let realSignTx = {};\n                    realSignTx.visible = signedTx.visible;\n                    realSignTx.txID = signedTx.txID;\n                    let rawData = {};\n                    rawData.contract = signedTx.raw_data.contract;\n                    rawData.expiration = signedTx.raw_data.expiration;\n                    rawData.ref_block_bytes = signedTx.raw_data.ref_block_bytes;\n                    rawData.fee_limit = signedTx.raw_data.fee_limit;\n                    rawData.ref_block_hash = signedTx.raw_data.ref_block_hash;\n                    rawData.timestamp = signedTx.raw_data.timestamp;\n                    realSignTx.raw_data = rawData;\n                    realSignTx.raw_data_hex = signedTx.raw_data_hex;\n                    realSignTx.signature = signedTx.signature;\n                    return realSignTx;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAndSendTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let data = {\n                \"method\": \"tron_signAndSendTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n}\nexports.OKXTronProvider = OKXTronProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXUniversalProvider = void 0;\nconst eip155_1 = require(\"./provider/providers/eip155\");\nconst sui_1 = require(\"./provider/providers/sui\");\nconst constants_1 = require(\"./provider/constants\");\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nconst client_1 = require(\"./packages/sign-client/client\");\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"./packages/utils/namespaces\");\nconst solana_1 = __importDefault(require(\"./provider/providers/solana\"));\nconst btc_1 = __importDefault(require(\"./provider/providers/btc\"));\nconst aptos_1 = __importDefault(require(\"./provider/providers/aptos\"));\nconst ton_1 = __importDefault(require(\"./provider/providers/ton\"));\nconst cosmos_1 = __importDefault(require(\"./provider/providers/cosmos\"));\nconst tron_1 = __importDefault(require(\"./provider/providers/tron\"));\nconst utils_1 = require(\"./provider/utils\");\nconst packages_1 = require(\"./packages\");\nconst provider_1 = require(\"./provider\");\nconst starknet_1 = __importDefault(require(\"./provider/providers/starknet\"));\nclass OKXUniversalProvider {\n    static init(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider init() called');\n            (0, core_1.checkMetaData)(opts.dappMetaData);\n            // ignore rpc provider check by default\n            (0, utils_1.setGlobal)('disableProviderPing', true);\n            let provider;\n            if (window && window.okxConnectUniversalinwindow && window.okxConnectUniversalinwindow instanceof OKXUniversalProvider) {\n                (0, core_1.logDebug)('OKXUniversalConnect init() old called');\n                provider = window.okxConnectUniversalinwindow;\n            }\n            else {\n                (0, core_1.logDebug)('OKXUniversalConnect init() new called');\n                provider = new OKXUniversalProvider(opts);\n                if (window) {\n                    window.okxConnectUniversalinwindow = provider;\n                }\n                yield provider.initialize();\n            }\n            (0, core_1.getDefaultReporter)().configVersionAndSide('universalprovider-1.5.2', 'dapp', provider.providerOpts.dappMetaData.name);\n            return provider;\n        });\n    }\n    constructor(opts) {\n        this.rpcProviders = {};\n        this.events = new eventemitter3_1.default();\n        this.providerOpts = opts;\n    }\n    request(args, chain) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider request() called');\n            (0, core_1.reportLog)('OKXUniversalProvider request() called');\n            if (!this.connected()) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return yield this.getProvider(namespace).request(requestParam);\n        });\n    }\n    buildRequestParamFromRequest(args, chain) {\n        var _a;\n        (0, core_1.logDebug)(\"UniversalProvider request args >>>>>>>: \", chain, JSON.stringify(args));\n        let [namespace, chainId] = this.validateChain(chain);\n        if (!this.session) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Please call connect() before request()\");\n        }\n        let keyArr = Object.keys(this.session.namespaces);\n        if (!chain && keyArr && keyArr.length > 1) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Multiple chains have been linked, the request method requires chain`);\n        }\n        if (namespace == \"aptos\" && chainId == \"mainnet\") {\n            namespace = \"aptos\";\n            chainId = \"637\";\n        }\n        if (namespace == \"movement\" && chainId == \"testnet\") {\n            namespace = \"aptos\";\n            chainId = \"70000060\";\n        }\n        const requestParam = Object.assign(Object.assign({}, args), { chainId: `${namespace}:${chainId}`, redirect: (_a = args.redirect) !== null && _a !== void 0 ? _a : this.sessionConfig.redirect });\n        return { namespace, requestParam };\n    }\n    enable() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.client) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (!this.session) {\n                if (this.connectOpts) {\n                    yield this.connect(this.connectOpts);\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n                }\n            }\n            const accounts = yield this.requestAccounts();\n            return accounts;\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider disconnect() called');\n            (0, core_1.reportLog)('provider disconnect called');\n            if (!this.session) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                let called = false;\n                const onRequestSent = () => __awaiter(this, void 0, void 0, function* () {\n                    if (!called) {\n                        called = true;\n                        yield this.disconnectAndEmit();\n                        yield this.cleanup();\n                        resolve();\n                        (0, core_1.logDebug)(\"UniversalProvider disconnect Disconnected\");\n                        (0, core_1.reportLog)('provider disconnect disconnected');\n                    }\n                });\n                try {\n                    yield this.client.disconnect();\n                    yield onRequestSent();\n                }\n                catch (e) {\n                    yield onRequestSent();\n                }\n            }));\n        });\n    }\n    disconnectAndEmit() {\n        var _a, _b;\n        this.client.engine.connectionManager.disconnect();\n        this.events.emit(\"disconnect\", { topic: (_a = this.session) === null || _a === void 0 ? void 0 : _a.topic });\n        this.events.emit(\"session_delete\", { topic: (_b = this.session) === null || _b === void 0 ? void 0 : _b.topic });\n    }\n    aptosChainNameToGeneralId(chainId) {\n        if (chainId == \"aptos:mainnet\") {\n            return \"aptos:637\";\n        }\n        else if (chainId == \"movement:testnet\") {\n            return \"aptos:70000060\";\n        }\n        else {\n            return chainId;\n        }\n    }\n    replaceAptos(opts) {\n        var _a, _b;\n        let aptosNameSpace = (_a = opts.namespaces) === null || _a === void 0 ? void 0 : _a[\"aptos\"];\n        if (aptosNameSpace != undefined) {\n            let realNS = this.replaceAptosInner(aptosNameSpace);\n            if (opts.namespaces != undefined && \"aptos\" in opts.namespaces && realNS != undefined) {\n                opts.namespaces.aptos = realNS;\n            }\n        }\n        let optionAptosNameSpace = (_b = opts.optionalNamespaces) === null || _b === void 0 ? void 0 : _b[\"aptos\"];\n        if (optionAptosNameSpace != undefined) {\n            let realOptionNS = this.replaceAptosInner(optionAptosNameSpace);\n            if (opts.optionalNamespaces != undefined && \"aptos\" in opts.optionalNamespaces && realOptionNS != undefined) {\n                opts.optionalNamespaces.aptos = realOptionNS;\n            }\n        }\n        return opts;\n    }\n    replaceAptosInner(aptosNameSpace) {\n        var _a;\n        if (aptosNameSpace != undefined) {\n            aptosNameSpace.chains = (_a = aptosNameSpace.chains) === null || _a === void 0 ? void 0 : _a.map(chainId => {\n                return this.aptosChainNameToGeneralId(chainId);\n            });\n            if (aptosNameSpace.defaultChain != undefined) {\n                aptosNameSpace.defaultChain = this.aptosChainNameToGeneralId(aptosNameSpace.defaultChain);\n            }\n        }\n        return aptosNameSpace;\n    }\n    replaceAptosGeneralIdWithNetName(chainId) {\n        if (chainId.includes(\"aptos:637\")) {\n            chainId = chainId.replace(\"aptos:637\", \"aptos:mainnet\");\n        }\n        else if (chainId.includes(\"aptos:70000060\")) {\n            chainId = chainId.replace(\"aptos:70000060\", \"movement:testnet\");\n        }\n        return chainId;\n    }\n    replaceSessionAptos(session) {\n        var _a;\n        let namespaces = (_a = session === null || session === void 0 ? void 0 : session.namespaces) === null || _a === void 0 ? void 0 : _a[\"aptos\"];\n        if (namespaces != undefined && namespaces.chains != undefined) {\n            namespaces.chains = namespaces.chains.map(chain => {\n                return this.replaceAptosGeneralIdWithNetName(chain);\n            });\n            namespaces.accounts = namespaces.accounts.map((account) => {\n                return this.replaceAptosGeneralIdWithNetName(account);\n            });\n            let extra = {};\n            Object.keys(namespaces.extra || {}).forEach((key, index) => {\n                let newKey = this.replaceAptosGeneralIdWithNetName(key);\n                extra[this.replaceAptosGeneralIdWithNetName(key)] = Object.values((session === null || session === void 0 ? void 0 : session.namespaces[\"aptos\"].extra) || {})[index];\n            });\n            namespaces.extra = extra;\n        }\n        (0, core_1.logDebug)(\"replaceSessionAptos\", session);\n    }\n    connected() {\n        (0, core_1.logDebug)('OKXUniversalProvider connected() called');\n        (0, core_1.reportLog)('provider connected called');\n        let disconnectInner = () => {\n            try {\n                this.cleanup();\n                this.client.engine.connectionManager.disconnect();\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"Error during disconnect:\", e);\n            }\n        };\n        try {\n            if (!this.session)\n                return false;\n            if (!this.client.engine.connectionManager.getCurrentConnectionReady()) {\n                disconnectInner();\n                return false;\n            }\n            return true;\n        }\n        catch (e) {\n            disconnectInner();\n            return false;\n        }\n    }\n    connectAndSign(opts, signRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() called');\n            const updatedOpts = Object.assign(Object.assign({}, opts), { signRequest });\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() opts:', JSON.stringify(opts));\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() signRequest:', JSON.stringify(signRequest));\n            return yield this.connect(updatedOpts);\n        });\n    }\n    connect(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider connect() called');\n            (0, core_1.reportLog)('provider connect called');\n            if (!this.client) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (this.connected()) {\n                return this.session;\n            }\n            opts = this.replaceAptos(opts);\n            (0, core_1.logDebug)(`OKXUniversalProvider connect >>>>`, JSON.stringify(opts));\n            if (opts.sessionConfig === undefined) {\n                opts.sessionConfig = {};\n            }\n            if (opts.sessionConfig.openUniversalUrl === undefined) {\n                opts.sessionConfig.openUniversalUrl = (0, core_1.isMobileUserAgent)();\n            }\n            this.setNamespaces(opts);\n            try {\n                (0, core_1.logDebug)(`UniversalProvider connect opts.stringify ====> ${JSON.stringify(opts)}`);\n                let session = yield this.client.connect(opts);\n                this.replaceSessionAptos(session);\n                (0, core_1.logDebug)(`UniversalProvider connect success ====> ${JSON.stringify(session)}`);\n                if (session) {\n                    this.session = session;\n                    this.client.session = session;\n                    (0, core_1.logDebug)(`OKXUniversalProvider connect success opts>>>>`, JSON.stringify(opts));\n                    this.onConnect();\n                    if (opts.signRequest && opts.signRequest.length > 0) {\n                        let requestItem = opts.signRequest[0];\n                        let signResponseList = [];\n                        if (typeof window !== \"undefined\" && window && window.okxConnectUniversalUIinwindow) { //from UI\n                            (0, core_1.logDebug)(`OKXUniversalProvider connect success, us UI SDK>>>>`);\n                            if (this.session.signResponse && this.session.signResponse.length > 0) { // >=6.96\n                                signResponseList = this.session.signResponse;\n                            }\n                        }\n                        else {\n                            (0, core_1.logDebug)(`OKXUniversalProvider connect success, us Universal SDK>>>>`);\n                            if (this.session.signResponse && this.session.signResponse.length > 0) { // >=6.96\n                                signResponseList = this.session.signResponse;\n                            }\n                            else {\n                                signResponseList.push((0, packages_1.creatNotSupportMethodItemReplay)(requestItem));\n                            }\n                        }\n                        (0, core_1.logDebug)(`UniversalProvider connect success connectRequestReply ====> ${JSON.stringify(signResponseList)}`);\n                        setTimeout(() => {\n                            this.events.emit(\"connect_signResponse\", signResponseList);\n                        }, 100);\n                    }\n                    return session;\n                }\n                return undefined;\n            }\n            catch (error) {\n                (0, core_1.logDebug)(`UniversalProvider connect error ====> `, JSON.stringify(error));\n                throw error;\n            }\n        });\n    }\n    syncAllAddresses() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if ((0, provider_1.syncAddressAvailable)(this.session.wallet)) {\n                return this.client.syncAllAddress();\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n            }\n        });\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    setDefaultChain(chain, rpcUrl) {\n        (0, core_1.logDebug)('OKXUniversalProvider setDefaultChain() called');\n        // chain = this.aptosChainNameToGeneralId(chain)\n        try {\n            // ignore without active session\n            if (!this.connected())\n                return;\n            const [namespace, chainId] = this.validateChain(chain);\n            const provider = this.getProvider(namespace);\n            provider.setDefaultChain(chainId, rpcUrl);\n        }\n        catch (error) {\n            // ignore the error if the fx is used prematurely before namespaces are set\n            if (!/Please call connect/.test(error.message))\n                throw error;\n        }\n    }\n    checkStorage() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let sessionInfoStr = yield this.getFromStore(\"connectSession\");\n            (0, core_1.logDebug)(sessionInfoStr);\n            if (sessionInfoStr) {\n                let sessionInfo = sessionInfoStr;\n                this.session = sessionInfo;\n                this.client.session = this.session;\n                this.sessionConfig = sessionInfo.sessionConfig;\n                this.client.sessionConfig = this.sessionConfig;\n                (0, core_1.logDebug)('[evm u-provider] do reconnection', this.session);\n                yield this.client.restoreconnect(sessionInfo);\n                this.createProviders();\n                this.registerEventListeners();\n                setTimeout(() => {\n                    this.events.emit(\"reconnect\", { session: this.session });\n                }, 100);\n                this.registerEventListeners();\n            }\n        });\n    }\n    initialize() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider initialize() called');\n            (0, core_1.reportLog)('provider initialize called');\n            const data = Object.assign({ url: window.location.hostname, origin: window.location.origin }, this.providerOpts.dappMetaData);\n            this.client = new client_1.SignClient(data, this.events);\n            yield this.checkStorage();\n        });\n    }\n    createProviders() {\n        if (!this.client) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n        }\n        if (!this.connected()) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Session not initialized. Please call connect() before enable()\");\n        }\n        const providersToCreate = [\n            ...new Set(Object.keys(this.session.namespaces)\n                .filter((namespace) => { var _a, _b; return ((_b = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.accounts) === null || _b === void 0 ? void 0 : _b.length) > 0; })\n                .map((namespace) => (0, namespaces_1.parseNamespaceKey)(namespace))),\n        ];\n        providersToCreate.forEach((namespace) => {\n            if (!this.session)\n                return;\n            const namespacesValue = this.session.namespaces;\n            const currentNameSpace = namespacesValue[namespace];\n            (0, core_1.logDebug)(\"init eip155 >> \", currentNameSpace);\n            switch (namespace) {\n                case \"eip155\":\n                    const opts = {\n                        namespace: currentNameSpace\n                    };\n                    this.rpcProviders[namespace] = new eip155_1.Eip155Provider(opts, this.client, this.events);\n                    break;\n                case \"solana\":\n                    const opts1 = {\n                        namespace: currentNameSpace\n                    };\n                    let solanaProvider = new solana_1.default(opts1, \"solana\", this.client, this.events);\n                    this.rpcProviders[namespace] = solanaProvider;\n                    let sonicProvider = new solana_1.default(opts1, \"sonic\", this.client, this.events);\n                    this.rpcProviders['sonic'] = sonicProvider;\n                    let svmProvider = new solana_1.default(opts1, \"svm\", this.client, this.events);\n                    this.rpcProviders['svm'] = svmProvider;\n                    // this.rpcProviders[namespace] = new SolanaProvider(opts1, () => { return this.session; });\n                    break;\n                case \"ton\":\n                    const optsTon = {\n                        namespace: currentNameSpace\n                    };\n                    let tonProvider = new ton_1.default(optsTon, this.client, this.events);\n                    this.rpcProviders[namespace] = tonProvider;\n                    break;\n                case \"sui\":\n                    const optsSui = {\n                        namespace: currentNameSpace\n                    };\n                    let suiProvider = new sui_1.SuiProvider(optsSui, this.client, this.events);\n                    suiProvider.name = \"sui\";\n                    this.rpcProviders[namespace] = suiProvider;\n                    break;\n                case \"btc\":\n                    const optsBtc = {\n                        namespace: currentNameSpace\n                    };\n                    let btcProvider = new btc_1.default(optsBtc, \"btc\", this.client, this.events);\n                    this.rpcProviders[\"btc\"] = btcProvider;\n                    let fbProvider = new btc_1.default(optsBtc, \"fractal\", this.client, this.events);\n                    this.rpcProviders[\"fractal\"] = fbProvider;\n                    break;\n                case \"aptos\":\n                    let aptosProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"aptos\", this.client, this.events);\n                    this.rpcProviders[namespace] = aptosProvider;\n                    let moveProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"movement\", this.client, this.events);\n                    this.rpcProviders[\"movement\"] = moveProvider;\n                    break;\n                case \"cosmos\":\n                    let cosmosProvider = new cosmos_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = cosmosProvider;\n                    break;\n                case \"tron\":\n                    let tronProvider = new tron_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = tronProvider;\n                    break;\n                case \"starknet\":\n                    let starknetProvider = new starknet_1.default({\n                        namespace: currentNameSpace\n                    }, \"starknet\", this.client, this.events);\n                    this.rpcProviders[namespace] = starknetProvider;\n                    break;\n            }\n        });\n    }\n    registerEventListeners() {\n        if (typeof this.client === \"undefined\") {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client is not initialized\");\n        }\n        this.client.engine.addDisconnectListener(() => {\n            this.disconnectAndEmit();\n            this.cleanup();\n        });\n        this.on(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, (caip2ChainId) => {\n            this.onChainChanged(caip2ChainId);\n        });\n        this.on(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, (nameSpaces) => {\n            if (nameSpaces) {\n                const nameSpacekey = Object.keys(nameSpaces)[0];\n                if (this.session) {\n                    this.session.namespaces[nameSpacekey] = nameSpaces[nameSpacekey];\n                    if (this.session) {\n                        this.persist(\"connectSession\", this.session);\n                        this.events.emit(\"session_update\", this.session);\n                    }\n                    (0, core_1.logDebug)(\"PROVIDER_EVENTS.UPDATE_NAMESPACES this.session... ->>>\", JSON.stringify(this.session));\n                }\n            }\n        });\n    }\n    getProvider(namespace) {\n        (0, core_1.logDebug)('current get providers', this.rpcProviders);\n        (0, core_1.logDebug)('query namespace: ', namespace);\n        return this.rpcProviders[namespace];\n    }\n    setNamespaces(params) {\n        this.connectOpts = params;\n        const { namespaces, sessionConfig } = params;\n        const data = {\n            origin: window.location.origin,\n            url: window.location.hostname,\n            name: this.providerOpts.dappMetaData.name,\n            icon: this.providerOpts.dappMetaData.icon,\n        };\n        this.sessionConfig = Object.assign({ dappInfo: data }, sessionConfig);\n        (0, core_1.logDebug)(\"setNamespaces sessionConfig>>>\", this.sessionConfig);\n        this.client.sessionConfig = this.sessionConfig;\n        this.persist(\"sessionConfig\", sessionConfig);\n    }\n    validateChain(chain) {\n        var _a;\n        let [namespace, chainId] = (chain === null || chain === void 0 ? void 0 : chain.split(\":\")) || [\"\", \"\"];\n        if (!this.session || !this.session.namespaces || !Object.keys(this.session.namespaces).length) {\n            (0, core_1.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        if (namespace) {\n            if (!this.isChainNamespaceInSession(namespace)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace '${namespace}' is not configured. Please call connect() first with namespace config.`);\n            }\n            if (chainId && chain) {\n                (0, core_1.logDebug)('this.session.namespaces -->> ', namespace, JSON.stringify(this.session.namespaces));\n                const chainsArr = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.chains;\n                (0, core_1.logDebug)('get chainsArr & chain', JSON.stringify(chainsArr), chain);\n                if (chainsArr && !chainsArr.includes(chain)) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace not include the chain '${chain}'`);\n                }\n            }\n        }\n        if (namespace && chainId) {\n            (0, core_1.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        let defaultNamespace = (0, namespaces_1.parseNamespaceKey)(Object.keys(this.session.namespaces)[0]);\n        const defaultChain = this.rpcProviders[defaultNamespace].getDefaultChain();\n        (0, core_1.logDebug)('get default chain:', defaultChain);\n        return [defaultNamespace, defaultChain];\n    }\n    isChainNamespaceInSession(namespaceStr) {\n        var _a, _b;\n        if (Object.keys(((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces) || {})\n            .map((key) => (0, namespaces_1.parseNamespaceKey)(key))\n            .includes(namespaceStr)) {\n            return true;\n        }\n        let isChainNamespaceInSession = false;\n        Object.values(((_b = this.session) === null || _b === void 0 ? void 0 : _b.namespaces) || {})\n            .forEach(namespace => {\n            namespace.chains.forEach(chain => {\n                if (chain.split(\":\")[0] == namespaceStr) {\n                    isChainNamespaceInSession = true;\n                }\n            });\n        });\n        return isChainNamespaceInSession;\n    }\n    requestAccountsWithNamespace(namespace) {\n        return this.getProvider(namespace).requestAccounts();\n    }\n    requestDefaultChainWithNamespace(namespace) {\n        return this.getProvider(namespace).getDefaultChain();\n    }\n    requestAccounts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const [namespace] = this.validateChain();\n            return yield this.getProvider(namespace).requestAccounts();\n        });\n    }\n    onChainChanged(caip2Chain) {\n        var _a;\n        if (!((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces))\n            return;\n        const [namespace, chainId] = this.validateChain(caip2Chain);\n        if (!chainId)\n            return;\n        if (this.session.namespaces[namespace]) {\n            this.session.namespaces[namespace].defaultChain = chainId;\n            this.persist(\"connectSession\", this.session);\n        }\n        this.events.emit(\"chainChanged\", chainId);\n    }\n    onConnect() {\n        this.createProviders();\n        if (this.session) {\n            this.persist(\"connectSession\", this.session);\n        }\n        this.events.emit(\"connect\", { session: this.session });\n        this.registerEventListeners();\n    }\n    cleanup() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.session = undefined;\n            this.client.session = undefined;\n            this.sessionProperties = undefined;\n            this.persist(\"optionalNamespaces\", undefined);\n            this.persist(\"sessionProperties\", undefined);\n            this.persist(\"connectSession\", undefined);\n        });\n    }\n    persist(key, data) {\n        (0, core_1.logDebug)('[evm u-provider] persisit data', key, data);\n        return this.client.engine.connectionManager.saveSessionContent(key, data);\n    }\n    getFromStore(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.client.engine.connectionManager.getSessionContent(key);\n        });\n    }\n    showRequestModal(args, chain) {\n        try {\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return this.getProvider(namespace).showRequestModal(requestParam);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n}\nexports.OKXUniversalProvider = OKXUniversalProvider;\nexports.default = OKXUniversalProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXStarknetProvider = exports.OKXTronProvider = exports.OKXTonProvider = exports.OKXCosmosProvider = exports.OKXBtcProvider = exports.OKXUniversalProvider = void 0;\n__exportStar(require(\"./provider/types\"), exports);\n__exportStar(require(\"./packages\"), exports);\nvar OKXUniversalProvider_1 = require(\"./OKXUniversalProvider\");\nObject.defineProperty(exports, \"OKXUniversalProvider\", { enumerable: true, get: function () { return OKXUniversalProvider_1.OKXUniversalProvider; } });\nvar OKXBtcProvider_1 = require(\"./OKXBtcProvider\");\nObject.defineProperty(exports, \"OKXBtcProvider\", { enumerable: true, get: function () { return OKXBtcProvider_1.OKXBtcProvider; } });\nvar OKXCosmosProvider_1 = require(\"./OKXCosmosProvider\");\nObject.defineProperty(exports, \"OKXCosmosProvider\", { enumerable: true, get: function () { return OKXCosmosProvider_1.OKXCosmosProvider; } });\nvar OKXTonProvider_1 = require(\"./OKXTonProvider\");\nObject.defineProperty(exports, \"OKXTonProvider\", { enumerable: true, get: function () { return OKXTonProvider_1.OKXTonProvider; } });\nvar OKXTronProvider_1 = require(\"./OKXTronProvider\");\nObject.defineProperty(exports, \"OKXTronProvider\", { enumerable: true, get: function () { return OKXTronProvider_1.OKXTronProvider; } });\nvar OKXStarknetProvider_1 = require(\"./OKXStarknetProvider\");\nObject.defineProperty(exports, \"OKXStarknetProvider\", { enumerable: true, get: function () { return OKXStarknetProvider_1.OKXStarknetProvider; } });\n__exportStar(require(\"@okxconnect/core\"), exports);\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignClient = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"../utils/namespaces\");\nconst ConnectMethodUtils_1 = require(\"../utils/ConnectMethodUtils\");\nconst constants_1 = require(\"../../provider/constants\");\nclass SignClient extends core_1.ISignClient {\n    constructor(metaData, events) {\n        super(metaData);\n        // ---------- Engine ----------------------------------------------- //\n        this.connect = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    var connectRequest = [];\n                    (0, core_1.logDebug)(`client connect params >>>`, JSON.stringify(params));\n                    var requestAccountItem = {\n                        name: \"requestAccounts\",\n                        requiredNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.namespaces),\n                        optionalNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.optionalNamespaces),\n                    };\n                    this.engine.setSessionConnectingListener(() => {\n                        (0, core_1.logDebug)(`sessionConnectingListener >>>`);\n                        this.events.emit(constants_1.PROVIDER_EVENTS.SESSION_CONNECTING);\n                    });\n                    if (params.signRequest) {\n                        requestAccountItem.connectRequestMethods = yield (0, ConnectMethodUtils_1.connectMethodsToConnectWalletMethods)(params.signRequest, requestAccountItem.requiredNamespaces);\n                    }\n                    connectRequest.push(requestAccountItem);\n                    (0, core_1.logDebug)(`client connect connectRequest >>>`, JSON.stringify(connectRequest));\n                    this.engine.universalConnect(connectRequest, Object.assign({ dappInfo: this.metadata }, params.sessionConfig), (info) => {\n                        if (info && info.connectRequest) {\n                            (0, core_1.logDebug)(`universalConect info.connectRequest :`, info.connectRequest);\n                            (0, core_1.logDebug)(`universalConect url:`, (0, core_1.getOKXLink)(info.connectRequest, this.sessionConfig.useMini));\n                            this.events.emit(\"display_uri\", (0, core_1.getOKXLink)(info.connectRequest, this.sessionConfig.useMini));\n                            this.events.emit(\"short_display_uri\", (0, core_1.getAppWalletShortDeepLink)(info.connectRequest.topic, info.connectRequest.clientId));\n                            (0, core_1.logDebug)(`universalConect EngineConnectInfo  ${JSON.stringify(info)}`);\n                            this.events.emit(\"okx_engine_connect_params\", info);\n                        }\n                    }).then((session) => __awaiter(this, void 0, void 0, function* () {\n                        (0, namespaces_1.fillParamsToSession)(session, params.namespaces, params.optionalNamespaces, this.sessionConfig);\n                        (0, core_1.logDebug)(`signClient: connect: session ${JSON.stringify(session)}`);\n                        if (params.signRequest) {\n                            yield (0, ConnectMethodUtils_1.connectMethodsResponseUpdate)(session, params.signRequest);\n                        }\n                        resolve(session);\n                    })).catch((e) => {\n                        (0, core_1.logDebug)(`signClient: connect: catch ${JSON.stringify(e)}`);\n                        this.events.emit(\"connect_error\", e);\n                        reject(e);\n                    });\n                }\n                catch (error) {\n                    (0, core_1.logDebug)(`signClient: connect:  ${JSON.stringify(error)}`);\n                    reject(error);\n                }\n            }));\n        });\n        this.restoreconnect = (sessionConfig) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.restoreconnect(sessionConfig, (session) => {\n                    resolve(session);\n                });\n            });\n        });\n        this.reject = (params) => __awaiter(this, void 0, void 0, function* () {\n            //   try {\n            //     return await this.engine.reject(params);\n            //   } catch (error: any) {\n            //     this.logger.error(error.message);\n            //     throw error;\n            //   }\n        });\n        //\n        // public update: ISignClient[\"update\"] = async (params) => {\n        //   return\n        // //   try {\n        // //     return await this.engine.update(params);\n        // //   } catch (error: any) {\n        // //     this.logger.error(error.message);\n        // //     throw error;\n        // //   }\n        // };\n        this.request = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                (0, core_1.logDebug)(\"clint request --params>>>> >\", this.engine.connectionManager.getCurrentConnectionReady(), (_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl, JSON.stringify(params));\n                try {\n                    // this.sessionConfig\n                    if (((_b = this.sessionConfig) === null || _b === void 0 ? void 0 : _b.openUniversalUrl) && (0, core_1.isIos)()) {\n                        this.openOKXWallet();\n                    }\n                    yield this.engine.send(params, {\n                        resolve: (response) => {\n                            delete response.requestId;\n                            (0, core_1.logDebug)(\"clint request --response >\", JSON.stringify(response));\n                            if (('error' in response) && response.error) {\n                                let error = response.error;\n                                reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                            }\n                            else {\n                                resolve(response);\n                            }\n                        },\n                        onAck: () => {\n                            var _a;\n                            if (!(0, core_1.isIos)() && ((_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl)) {\n                                this.openOKXWallet();\n                            }\n                        }\n                    });\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }));\n        });\n        // public emit: ISignClient[\"emit\"] = async (params) => {\n        //     try {\n        //         // return await this.engine.emit(params);\n        //     } catch (error: any) {\n        //         throw error;\n        //     }\n        // };\n        this.disconnect = () => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"disconnect\"\n                }, {\n                    onAck: () => {\n                        resolve();\n                    }\n                }, undefined, 86400000).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n        this.engine = new core_1.Engine(new core_1.ConnectionManager(metaData.name));\n        this.events = events;\n        this.metadata = metaData;\n    }\n    openOKXWallet() {\n        var _a;\n        // if (this.openUniversalUrl){\n        (0, core_1.logDebug)('bridge-provider ==>> connect_5');\n        if ((_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.useMini) {\n            let url = (0, core_1.getTelegramWalletTWAUrl)(undefined, this.sessionConfig.tmaReturnUrl);\n            (0, core_1.openOKXTMAWalletlinkWithFallback)(url);\n        }\n        else {\n            (0, core_1.openOKXDeeplink)(core_1.standardDeeplink);\n        }\n        // }\n    }\n    syncAllAddress() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"sync_all_addresses\"\n                }, {\n                    resolve: (response) => {\n                        delete response.requestId;\n                        (0, core_1.logDebug)(\"clint syncAllAddress --response >\", JSON.stringify(response));\n                        if (('error' in response) && response.error) {\n                            let error = response.error;\n                            reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                        }\n                        else {\n                            let allAddressStr = response.result;\n                            resolve((0, ConnectMethodUtils_1.syncResoonseToRequire)(allAddressStr));\n                        }\n                    }\n                }).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n    }\n}\nexports.SignClient = SignClient;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.connectSupportMethods = void 0;\nexports.creatNotSupportMethodItemReplay = creatNotSupportMethodItemReplay;\nexports.connectMethodsAdaptOldVersion = connectMethodsAdaptOldVersion;\nexports.connectMethodsResponseUpdate = connectMethodsResponseUpdate;\nexports.connectMethodsToConnectWalletMethods = connectMethodsToConnectWalletMethods;\nexports.syncResoonseToRequire = syncResoonseToRequire;\nconst core_1 = require(\"@okxconnect/core\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst provider_1 = require(\"../../provider\");\nfunction isArray(value) {\n    return typeof value === \"object\" && value !== null && Array.isArray(value);\n}\nfunction isRecord(value) {\n    return typeof value === \"object\" && value !== null && !Array.isArray(value);\n}\n// \"wallet_addEthereumChain\",\n// \"solana_signMessage\",  There are risks\nexports.connectSupportMethods = Object.freeze([\n    \"personal_sign\",\n    \"sui_signMessage\",\n    \"sui_signPersonalMessage\",\n    \"btc_signMessage\",\n    \"aptos_signMessage\",\n    \"cosmos_signArbitrary\",\n    \"tron_signMessage\",\n    \"tron_signMessageV2\",\n    \"starknet_signMessage\",\n    \"sync_all_addresses\",\n    \"solana_signMessage\"\n]);\nfunction creatNotSupportMethodItemReplay(requestParams) {\n    let notSupportError = new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n    var errorItem = {\n        method: requestParams.method,\n        chainId: requestParams.chainId,\n        error: {\n            code: notSupportError.code,\n            message: notSupportError.message\n        },\n    };\n    return errorItem;\n}\nfunction connectMethodsAdaptOldVersion(requestParams, session) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b, _c, _d, _e;\n        try {\n            (0, core_1.logDebug)(\"connectMethodsAdaptOldVersion start params :\", JSON.stringify(requestParams));\n            let callBackParams = {};\n            if (requestParams.method === \"solana_signMessage\") {\n                let solAccount = (_a = session.namespaces[core_1.NameSpaceKeySOL]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account1) {\n                    return account1.startsWith(requestParams.chainId);\n                })[0];\n                const solAddress = (0, provider_1.fromAccountToAddress)(solAccount);\n                if (requestParams.params && solAddress && \"message\" in requestParams.params) {\n                    let realMessage = requestParams.params.message;\n                    if (((_b = session.wallet) === null || _b === void 0 ? void 0 : _b.appName) == \"OKX Wallet\") {\n                        let encodeMessage = new TextEncoder().encode(realMessage);\n                        realMessage = bs58_1.default.encode(encodeMessage);\n                    }\n                    requestParams.params = {\n                        message: realMessage,\n                        \"pubkey\": solAddress\n                    };\n                    callBackParams = {\n                        publicKey: solAddress\n                    };\n                    (0, core_1.logDebug)(\"solana_signMessage account and address:\", JSON.stringify(solAccount), solAddress);\n                    (0, core_1.logDebug)(\"solana_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"sui_signMessage\" || requestParams.method === \"sui_signPersonalMessage\") {\n                if (\"message\" in requestParams.params && requestParams.params.message) {\n                    let suiMessage = JSON.parse(JSON.stringify(requestParams.params.message));\n                    let convertedArray = Object.values(suiMessage);\n                    let uint8Array = new Uint8Array(convertedArray);\n                    let decoder = new TextDecoder(\"utf8\");\n                    let b64encoded = btoa(decoder.decode(uint8Array));\n                    requestParams.params = {\n                        message: atob(b64encoded),\n                    };\n                    console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", JSON.stringify(requestParams.params), b64encoded);\n                    if (requestParams.method === \"sui_signMessage\") {\n                        callBackParams = {\n                            \"messageBytes\": b64encoded,\n                            \"signature\": \"\"\n                        };\n                    }\n                    else if (requestParams.method === \"sui_signPersonalMessage\") {\n                        callBackParams = {\n                            \"bytes\": b64encoded,\n                            \"signature\": \"\"\n                        };\n                    }\n                    (0, core_1.logDebug)(\"sui_signMessage/sui_signPersonalMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"btc_signMessage\") {\n                let btcAccounts = (_c = session.namespaces[core_1.NameSpaceKeyBtc]) === null || _c === void 0 ? void 0 : _c.accounts.filter(function (account2) {\n                    return account2.startsWith(requestParams.chainId);\n                });\n                let btcAccount = btcAccounts[0];\n                const btcAddress = (0, provider_1.fromAccountToAddress)(btcAccount);\n                (0, core_1.logDebug)(\"btc_signMessage account and address:\", JSON.stringify(btcAccount), btcAddress);\n                if (btcAddress) {\n                    if (\"message\" in requestParams.params && requestParams.params.message && typeof requestParams.params.message === 'string') {\n                        requestParams.params = {\n                            from: btcAddress,\n                            signStr: requestParams.params.message\n                        };\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                    }\n                    requestParams.params[\"from\"] = btcAddress;\n                    (0, core_1.logDebug)(\"btc_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"aptos_signMessage\") {\n                let paramData = requestParams.params;\n                let aptosAccount = (_d = session.namespaces[core_1.NameSpaceKeyAptos]) === null || _d === void 0 ? void 0 : _d.accounts.filter(function (account3) {\n                    return account3.startsWith(requestParams.chainId);\n                })[0];\n                let aptosAddress = (0, provider_1.fromAccountToAddress)(aptosAccount);\n                if (paramData && aptosAddress) {\n                    let prefix = \"APTOS\";\n                    let message = \"\", nonce = \"\";\n                    var fullMessage = prefix;\n                    let application = window.location.protocol + \"//\" + window.location.hostname;\n                    if (\"address\" in paramData && paramData.address) {\n                        fullMessage += \"\\naddress: \" + aptosAddress;\n                    }\n                    if (\"application\" in paramData && paramData.application) {\n                        fullMessage += \"\\napplication: \" + application;\n                    }\n                    let aptosChainId = 1;\n                    if (\"chainId\" in paramData && paramData.chainId) {\n                        if (paramData.chainId == \"aptos:mainnet\") {\n                            aptosChainId = 1;\n                        }\n                        else if (paramData.chainId == \"movement:testnet\") {\n                            aptosChainId = 2;\n                        }\n                        fullMessage += \"\\nchainId: \" + aptosChainId;\n                    }\n                    if (\"message\" in paramData) {\n                        fullMessage += \"\\nmessage: \" + paramData.message;\n                        message = paramData.message;\n                    }\n                    if (\"nonce\" in paramData) {\n                        fullMessage += \"\\nnonce: \" + paramData.nonce;\n                        nonce = paramData.nonce;\n                    }\n                    const utf8Array = new TextEncoder().encode(fullMessage);\n                    const hex = Array.from(utf8Array)\n                        .map(byte => byte.toString(16).padStart(2, \"0\"))\n                        .join(\"\");\n                    requestParams.params = {\n                        \"message\": hex,\n                    };\n                    (0, core_1.logDebug)(\"aptos_signMessage requestParams:\", JSON.stringify(requestParams));\n                    callBackParams = {\n                        address: aptosAddress,\n                        application: application,\n                        chainId: aptosChainId,\n                        fullMessage: fullMessage,\n                        message: message,\n                        nonce: nonce,\n                        prefix: prefix,\n                        signature: \"\",\n                    };\n                    (0, core_1.logDebug)(\"aptos_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"cosmos_signArbitrary\") {\n                let cosmosAccount = (_e = session === null || session === void 0 ? void 0 : session.namespaces[core_1.NameSpaceKeyCosmos]) === null || _e === void 0 ? void 0 : _e.accounts.filter(function (account_cosmos) {\n                    return account_cosmos.startsWith(requestParams.chainId);\n                })[0];\n                const cosmosAddress = (0, provider_1.fromAccountToAddress)(cosmosAccount);\n                let cosmosData = requestParams.params[\"message\"];\n                const cosmosBase64Encoded = btoa(cosmosData);\n                (0, core_1.logDebug)(\"cosmos_signArbitrary account and address:\", JSON.stringify(cosmosAccount), cosmosAddress);\n                (0, core_1.logDebug)(\"cosmos_signArbitrary cosmosBase64Encoded:\", cosmosBase64Encoded);\n                if (cosmosData && cosmosAddress) {\n                    const signDoc = {\n                        chain_id: \"\",\n                        account_number: \"0\",\n                        sequence: \"0\",\n                        fee: {\n                            gas: \"0\",\n                            amount: []\n                        },\n                        msgs: [{\n                                \"type\": \"sign/MsgSignData\",\n                                \"value\": {\n                                    \"signer\": cosmosAddress,\n                                    \"data\": cosmosBase64Encoded\n                                }\n                            }],\n                        memo: \"\"\n                    };\n                    requestParams.params = {\n                        \"signer\": cosmosAddress,\n                        \"chain_id\": requestParams.chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    };\n                    (0, core_1.logDebug)(\"cosmos_signArbitrary callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            (0, core_1.logDebug)(\"sol_handleSignatureData end params:\", JSON.stringify(requestParams));\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\nfunction connectMethodsResponseUpdate(session, requestParams) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a;\n        try {\n            if (session.signResponse) {\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate signResponse:\", JSON.stringify(session.signResponse));\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate session.namespaces:\", JSON.stringify(session.namespaces));\n                for (const methodItem of session.signResponse) {\n                    (0, core_1.logDebug)(\"connectMethodsResponseUpdate methodItem:\", JSON.stringify(methodItem));\n                    if (\"result\" in methodItem) {\n                        if (methodItem.method === \"solana_signMessage\") {\n                            let solanaSuccessData = methodItem.result;\n                            (0, core_1.logDebug)(\"solana_signMessage methodItem.chainId:\", methodItem.chainId);\n                            let account = (_a = session.namespaces[core_1.NameSpaceKeySOL]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account) {\n                                (0, core_1.logDebug)(\"solana_signMessage account:\", account);\n                                return account.startsWith(methodItem.chainId);\n                            })[0];\n                            (0, core_1.logDebug)(\"solana_signMessage result account:\", solanaSuccessData, account);\n                            if (solanaSuccessData && account) {\n                                methodItem.result = {\n                                    \"signature\": bs58_1.default.decode(solanaSuccessData),\n                                    \"publicKey\": (0, provider_1.fromAccountToAddress)(account)\n                                };\n                            }\n                        }\n                        else if (methodItem.method === \"sui_signMessage\" || methodItem.method === \"sui_signPersonalMessage\") {\n                            let suiMethod = requestParams.filter(function (requestMethod) {\n                                return requestMethod.method === methodItem.method;\n                            })[0];\n                            if (suiMethod && suiMethod.params && \"message\" in suiMethod.params) {\n                                let suiMessage = suiMethod.params.message;\n                                let suiMessageb64 = btoa(suiMessage);\n                                console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", suiMessage, suiMessageb64);\n                                if (methodItem.method === \"sui_signMessage\") {\n                                    methodItem.result = {\n                                        \"messageBytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                                else if (methodItem.method === \"sui_signPersonalMessage\") {\n                                    methodItem.result = {\n                                        \"bytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                            }\n                        }\n                        else if (methodItem.method === \"aptos_signMessage\") {\n                            if (methodItem.chainId === \"aptos:637\") {\n                                methodItem.chainId = \"aptos:mainnet\";\n                            }\n                            else if (methodItem.chainId === \"aptos:70000060\") {\n                                methodItem.chainId = \"movement:testnet\";\n                            }\n                            methodItem.result = JSON.parse(methodItem.result);\n                            console.log(\"aptos_signMessage result methodItem.result before:>>>>\", JSON.stringify(methodItem.result));\n                            if (methodItem.result && \"signature\" in methodItem.result) {\n                                let aptosSignature = methodItem.result.signature;\n                                if (aptosSignature && aptosSignature.startsWith(\"0x\")) {\n                                    aptosSignature = aptosSignature.slice(2, aptosSignature.length);\n                                    methodItem.result.signature = aptosSignature;\n                                }\n                            }\n                            console.log(\"aptos_signMessage result methodItem.result after:>>>>\", JSON.stringify(methodItem.result));\n                        }\n                        else if (methodItem.method === \"cosmos_signArbitrary\") {\n                            methodItem.result = JSON.parse(methodItem.result);\n                        }\n                        else if (methodItem.method == 'starknet_signMessage') {\n                            let results = methodItem.result;\n                            if (typeof results == 'string') {\n                                results = JSON.parse(results);\n                            }\n                            methodItem.result = [results[\"signedDataR\"], results[\"signedDataS\"]];\n                        }\n                        else if (methodItem.method == 'sync_all_addresses') {\n                            methodItem.result = syncResoonseToRequire(methodItem.result);\n                        }\n                    }\n                }\n            }\n        }\n        catch (error) {\n            (0, core_1.logDebug)(\"connectMethodsResponseUpdate signResponse Error:\", JSON.stringify(error));\n            throw error;\n        }\n    });\n}\nfunction connectMethodsToConnectWalletMethods(params, requireNameSpace) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods requestMethods:\", JSON.stringify(params));\n            const result = [];\n            //TODO  后面需要打开限制\n            // if (params && params.length>1){\n            //     throw new OKXConnectError(\n            //         OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR,\n            //         `connectAndSign/openModalAndSign signRequest only support one data`\n            //     );\n            // }\n            if (!requireNameSpace && params && params.length > 0) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error , RequestMethods cannot be added when the NameSpace is empty`);\n            }\n            // check chianId\n            for (const methodItem of params) {\n                if (methodItem.method === \"aptos_signMessage\") { //update chainId\n                    if (methodItem.chainId === \"aptos:mainnet\") {\n                        methodItem.chainId = \"aptos:637\";\n                    }\n                    else if (methodItem.chainId === \"movement:testnet\") {\n                        methodItem.chainId = \"aptos:70000060\";\n                    }\n                }\n                // check chianId\n                if (methodItem.method === \"wallet_addEthereumChain\") {\n                    var includeEip155 = requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.namespace.includes(\"eip155\"));\n                    if (!includeEip155) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', the EVM chain needs to be included in the NameSpace`);\n                    }\n                }\n                else if (methodItem.method === \"sync_all_addresses\") {\n                    if ((0, provider_1.syncAddressHostAvailable)()) {\n                        methodItem.chainId = \"\";\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                    }\n                }\n                else {\n                    const includeChain = !!(requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.chains.some(chain => chain.includes(`${methodItem.chainId}`))));\n                    if (!includeChain) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', NameSpace must contain '${methodItem.chainId}'`);\n                    }\n                }\n            }\n            for (const item of params) {\n                if (!exports.connectSupportMethods.includes(item.method)) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect requestMethods not support method, method: '${item.method}'`);\n                }\n                if (item.method === \"wallet_addEthereumChain\") {\n                    if (Array.isArray(item.params)) {\n                        const paramsArr = item.params;\n                        if (paramsArr && paramsArr.length === 1) {\n                            const firstParam = paramsArr[0];\n                            if (isRecord(firstParam)) {\n                                item.params = firstParam;\n                            }\n                        }\n                        else if (paramsArr && paramsArr.length > 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params only support one data, method: '${item.method}'`);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is nil, method: '${item.method}'`);\n                        }\n                    }\n                }\n                else if (item.method === \"personal_sign\") {\n                    if (isArray(item.params)) {\n                        if (item.params && item.params.length !== 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params error,  method: '${item.method}' `);\n                        }\n                        let firstObj = item.params[0];\n                        if (firstObj && typeof firstObj === 'string') {\n                            item.params = {\n                                message: firstObj\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                }\n                else if (item.method === \"sui_signMessage\" || item.method === \"sui_signPersonalMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message) {\n                            (0, core_1.logDebug)(\"sui_signMessage item.params.message :\", item.params.message);\n                            let message = JSON.parse(JSON.stringify(item.params.message));\n                            let convertedArray = Object.values(message);\n                            let uint8Array = new Uint8Array(convertedArray);\n                            let decoder = new TextDecoder(\"utf8\");\n                            let b64encoded = btoa(decoder.decode(uint8Array));\n                            item.params.message = atob(b64encoded);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"solana_signMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            let encodeMessage = new TextEncoder().encode(item.params.message);\n                            item.params[\"bs58Message\"] = bs58_1.default.encode(encodeMessage);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"aptos_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (item.chainId && (item.chainId === \"aptos:637\" || item.chainId === \"aptos:70000060\")) {\n                            var aptosParams = item.params;\n                            var currentURL = window.location.protocol + \"//\" + window.location.hostname;\n                            let signChainId = 1;\n                            if (item.chainId === \"aptos:637\") {\n                            }\n                            else if (item.chainId === \"aptos:70000060\") {\n                                signChainId = 2;\n                            }\n                            item.params = {\n                                data: aptosParams,\n                                applicationUrl: currentURL,\n                                prefix: \"APTOS\",\n                                aptosChainId: signChainId\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"cosmos_signArbitrary\") {\n                    if (isRecord(item.params)) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            const base64Encoded = btoa(item.params.message);\n                            let cosmosChain = item.chainId.split(\":\")[1];\n                            if (cosmosChain) {\n                                item.params = {\n                                    chain_id: cosmosChain,\n                                    data: {\n                                        chain_id: \"\",\n                                        account_number: \"0\",\n                                        sequence: \"0\",\n                                        fee: {\n                                            gas: \"0\",\n                                            amount: []\n                                        },\n                                        msgs: [{\n                                                \"type\": \"sign/MsgSignData\",\n                                                \"value\": {\n                                                    \"signer\": \"\", //address\n                                                    \"data\": base64Encoded\n                                                }\n                                            }],\n                                        memo: \"\"\n                                    }\n                                };\n                            }\n                            else {\n                                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                            }\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params message is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method == \"tron_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (\"message\" in item.params && item.params.message && typeof item.params.message === 'string') {\n                            item.params.message = stringToHex(item.params.message);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method == \"btc_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (\"message\" in item.params && item.params.message && typeof item.params.message === 'string') {\n                            item.params = {\n                                signStr: item.params.message\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods item:\", JSON.stringify(item));\n                result.push(item);\n            }\n            return result;\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\nfunction stringToHex(str) {\n    let hex = '';\n    for (let i = 0; i < str.length; i++) {\n        hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n    }\n    return hex;\n}\nfunction syncResoonseToRequire(responseAddressStr) {\n    const allAddress = JSON.parse(responseAddressStr);\n    const result = {\n        type: allAddress.type,\n        isEvm: allAddress.isEvm,\n        walletName: allAddress.walletName,\n        deriveName: allAddress.deriveName,\n        addresses: allAddress.addresses.map((addr) => ({\n            coinId: addr.ci,\n            address: addr.a && addr.a !== 'null' ? addr.a : allAddress.evmAddress,\n        })),\n    };\n    return result;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.creatNotSupportMethodItemReplay = exports.connectMethodsAdaptOldVersion = void 0;\nvar ConnectMethodUtils_1 = require(\"./ConnectMethodUtils\");\nObject.defineProperty(exports, \"connectMethodsAdaptOldVersion\", { enumerable: true, get: function () { return ConnectMethodUtils_1.connectMethodsAdaptOldVersion; } });\nObject.defineProperty(exports, \"creatNotSupportMethodItemReplay\", { enumerable: true, get: function () { return ConnectMethodUtils_1.creatNotSupportMethodItemReplay; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAccountsChains = getAccountsChains;\nexports.nameSpaceToConnectWalletNameSpace = nameSpaceToConnectWalletNameSpace;\nexports.fillParamsToSession = fillParamsToSession;\nexports.isCaipNamespace = isCaipNamespace;\nexports.parseNamespaceKey = parseNamespaceKey;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getAccountsChains(accounts) {\n    const chains = [];\n    accounts.forEach((account) => {\n        const [chain, chainId] = account.split(\":\");\n        chains.push(`${chain}:${chainId}`);\n    });\n    return chains;\n}\nfunction nameSpaceToConnectWalletNameSpace(namespaces) {\n    var result = [];\n    if (!namespaces) {\n        return result;\n    }\n    Object.keys(namespaces).forEach((key) => {\n        if (key === core_1.NameSpaceKeyEip155 || key === core_1.NameSpaceKeySOL || key === core_1.NameSpaceKeySui || key === core_1.NameSpaceKeyAptos\n            || key == core_1.NameSpaceKeyBtc || key === core_1.NameSpaceKeyTON || key === core_1.NameSpaceKeyCosmos || key === core_1.NameSpaceKeyTron || key === core_1.NameSpaceKeyStarknet) {\n            if (namespaces[key].chains) {\n                result.push({\n                    namespace: key,\n                    chains: namespaces[key].chains,\n                    params: namespaces[key].params\n                });\n            }\n        }\n    });\n    return result;\n}\nfunction fillParamsToSession(session, namespaces, optionalNamespaces, sessionConfig) {\n    // Helper function to merge rpcMaps\n    const mergeRpcMap = (targetRpcMap, sourceRpcMap) => {\n        Object.assign(targetRpcMap, sourceRpcMap);\n    };\n    // Merge function for namespaces\n    const mergeNamespaces = (target, source) => {\n        for (const key in source) {\n            if (source.hasOwnProperty(key) && source[key].rpcMap) {\n                if (source[key].rpcMap) {\n                    if (!target[key].rpcMap) {\n                        target[key].rpcMap = {};\n                    }\n                    // 合并 rpcMap\n                    mergeRpcMap(target[key].rpcMap, source[key].rpcMap);\n                }\n                if (source[key].defaultChain && target[key].defaultChain === undefined) {\n                    //defaultChain need in session nameSpace\n                    if (target[key].chains.some(chain => chain.split(\":\")[1] === source[key].defaultChain)) {\n                        target[key].defaultChain = source[key].defaultChain;\n                    }\n                }\n            }\n        }\n    };\n    // 合并 namespaces\n    if (namespaces) {\n        mergeNamespaces(session.namespaces, namespaces);\n    }\n    // 合并 optionalNamespaces\n    if (optionalNamespaces) {\n        mergeNamespaces(session.namespaces, optionalNamespaces);\n    }\n    for (const key in session.namespaces) {\n        const namespace = session.namespaces[key];\n        if (!(namespace === null || namespace === void 0 ? void 0 : namespace.accounts) || namespace.accounts.length === 0) {\n            delete session.namespaces[key];\n        }\n    }\n    if (session.namespaces[core_1.NameSpaceKeyBtc] && session.wallet.appName === core_1.OKX_APP_WALLET_NAME) {\n        fixMobileBtcSession(session.namespaces[core_1.NameSpaceKeyBtc]);\n    }\n    session.sessionConfig = sessionConfig;\n}\nfunction fixMobileBtcSession(btcNameSpace) {\n    try {\n        if (btcNameSpace && btcNameSpace.extra) {\n            var data = btcNameSpace.extra;\n            Object.keys(data).forEach(key => {\n                const item = data[key];\n                if (Number(item.addressType) === 6) {\n                    item.publicKey = item.compressedPublicKey.slice(2);\n                }\n                else {\n                    item.publicKey = item.compressedPublicKey;\n                }\n            });\n        }\n    }\n    catch (e) {\n        (0, core_1.logDebug)(\"namespaces fixMobileBtcSession error\");\n    }\n}\n/**\n * util designed for Wallets that builds namespaces structure by provided supported chains, methods, events & accounts.\n * It takes required & optional namespaces provided in the session proposal\n * along with the supported chains/methods/events/accounts by the wallet and returns a structured namespaces object\n * @param {BuildApprovedNamespacesParams} params\n * @returns {SessionTypes.Namespaces}\n */\n// export function buildApprovedNamespaces(\n//   params: BuildApprovedNamespacesParams,\n// ): SessionTypes.Namespaces {\n//   const {\n//     proposal: { requiredNamespaces, optionalNamespaces = {} },\n//     supportedNamespaces,\n//   } = params;\n//   const normalizedRequired = normalizeNamespaces(requiredNamespaces);\n//   const normalizedOptional = normalizeNamespaces(optionalNamespaces);\n//\n//   // build approved namespaces\n//   const namespaces = {};\n//   Object.keys(supportedNamespaces).forEach((namespace) => {\n//     const supportedChains = supportedNamespaces[namespace].chains;\n//     const supportedMethods = supportedNamespaces[namespace].methods;\n//     const supportedEvents = supportedNamespaces[namespace].events;\n//     const supportedAccounts = supportedNamespaces[namespace].accounts;\n//\n//     supportedChains.forEach((chain) => {\n//       if (!supportedAccounts.some((account) => account.includes(chain))) {\n//         throw new Error(`No accounts provided for chain ${chain} in namespace ${namespace}`);\n//       }\n//     });\n//\n//     namespaces[namespace] = {\n//       chains: supportedChains,\n//       methods: supportedMethods,\n//       events: supportedEvents,\n//       accounts: supportedAccounts,\n//     };\n//   });\n//\n//   // verify all required namespaces are supported\n//   const err = isConformingNamespaces(requiredNamespaces, namespaces, \"approve()\");\n//   if (err) throw new Error(err.message);\n//\n//   const approvedNamespaces = {};\n//\n//   // if both required & optional namespaces are empty, return all supported namespaces by the wallet\n//   if (!Object.keys(requiredNamespaces).length && !Object.keys(optionalNamespaces).length)\n//     return namespaces;\n//\n//   // assign accounts for the required namespaces\n//   Object.keys(normalizedRequired).forEach((requiredNamespace) => {\n//     const chains = supportedNamespaces[requiredNamespace].chains.filter((chain) =>\n//       normalizedRequired[requiredNamespace]?.chains?.includes(chain),\n//     );\n//     const methods = supportedNamespaces[requiredNamespace].methods.filter((method) =>\n//       normalizedRequired[requiredNamespace]?.methods?.includes(method),\n//     );\n//     const events = supportedNamespaces[requiredNamespace].events.filter((event) =>\n//       normalizedRequired[requiredNamespace]?.events?.includes(event),\n//     );\n//\n//     const accounts = chains\n//       .map((chain: string) =>\n//         supportedNamespaces[requiredNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[requiredNamespace] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   });\n//\n//   // add optional namespaces\n//   Object.keys(normalizedOptional).forEach((optionalNamespace) => {\n//     if (!supportedNamespaces[optionalNamespace]) return;\n//\n//     const chainsToAdd = normalizedOptional[optionalNamespace]?.chains?.filter((chain) =>\n//       supportedNamespaces[optionalNamespace].chains.includes(chain),\n//     );\n//     const methodsToAdd = supportedNamespaces[optionalNamespace].methods.filter((method) =>\n//       normalizedOptional[optionalNamespace]?.methods?.includes(method),\n//     );\n//     const eventsToAdd = supportedNamespaces[optionalNamespace].events.filter((event) =>\n//       normalizedOptional[optionalNamespace]?.events?.includes(event),\n//     );\n//\n//     const accountsToAdd = chainsToAdd\n//       ?.map((chain: string) =>\n//         supportedNamespaces[optionalNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[optionalNamespace] = {\n//       chains: mergeArrays(approvedNamespaces[optionalNamespace]?.chains, chainsToAdd),\n//       methods: mergeArrays(approvedNamespaces[optionalNamespace]?.methods, methodsToAdd),\n//       events: mergeArrays(approvedNamespaces[optionalNamespace]?.events, eventsToAdd),\n//       accounts: mergeArrays(approvedNamespaces[optionalNamespace]?.accounts, accountsToAdd),\n//     };\n//   });\n//\n//   return approvedNamespaces;\n// }\nfunction isCaipNamespace(namespace) {\n    return namespace.includes(\":\");\n}\nfunction parseNamespaceKey(namespace) {\n    return isCaipNamespace(namespace) ? namespace.split(\":\")[0] : namespace;\n}\n/**\n * Converts\n * ```\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * ```\n * into\n * ```\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *```\n */\n// export function normalizeNamespaces(\n//   namespaces: ProposalTypes.RequiredNamespaces,\n// ): ProposalTypes.RequiredNamespaces {\n//   const normalizedNamespaces = {} as ProposalTypes.RequiredNamespaces;\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       methods: mergeArrays(methods, normalizedNamespaces[normalizedKey]?.methods),\n//       events: mergeArrays(events, normalizedNamespaces[normalizedKey]?.events),\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n// export function getNamespacesFromAccounts(accounts: string[]) {\n//   const namespaces = {};\n//   accounts?.forEach((account) => {\n//     const [namespace, chainId] = account.split(\":\");\n//     if (!namespaces[namespace]) {\n//       namespaces[namespace] = {\n//         accounts: [],\n//         chains: [],\n//         events: [],\n//       };\n//     }\n//     namespaces[namespace].accounts.push(account);\n//     namespaces[namespace].chains.push(`${namespace}:${chainId}`);\n//   });\n//\n//   return namespaces;\n// }\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PROVIDER_EVENTS = void 0;\nexports.PROVIDER_EVENTS = {\n    DEFAULT_CHAIN_CHANGED: \"default_chain_changed\",\n    UPDATE_NAMESPACES: \"update_name_spaces\",\n    SESSION_CONNECTING: \"session_connecting\"\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./values\"), exports);\n__exportStar(require(\"./events\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GENERIC_SUBPROVIDER_NAME = exports.RPC_URL = exports.STORAGE = exports.CONTEXT = exports.WC_VERSION = exports.PROTOCOL = exports.RELAY_URL = exports.LOGGER = void 0;\nexports.LOGGER = \"error\";\nexports.RELAY_URL = \"wss://relay.walletconnect.com\";\nexports.PROTOCOL = \"wc\";\nexports.WC_VERSION = 2;\nexports.CONTEXT = \"universal_provider\";\nexports.STORAGE = `${exports.PROTOCOL}@${exports.WC_VERSION}:${exports.CONTEXT}:`;\nexports.RPC_URL = \"https://rpc.walletconnect.com/v1/\";\nexports.GENERIC_SUBPROVIDER_NAME = \"generic\";\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./types\"), exports);\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass AptosProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"aptos\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"solana request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"solana provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = AptosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass BtcProvider {\n    constructor(opts, name, client, events) {\n        this.name = core_1.NameSpaceKeyBtc;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"btc request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"btc provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = BtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass CosmosProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyCosmos;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"cosmos request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"cosmos provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = CosmosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Eip155Provider = void 0;\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nclass Eip155Provider {\n    constructor(opts, client, events) {\n        this.name = \"eip155\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = parseInt(this.getDefaultChain());\n        // rpc\n        this.httpProviders = this.createHttpProviders();\n        (0, core_1.logDebug)(\"eip155 constructor --opts.namespace-->\", opts.namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    isArray(value) {\n        return typeof value === \"object\" && value !== null && Array.isArray(value);\n    }\n    updateRequestParams(args) {\n        let isDic = args.params && typeof args.params === 'object' && !Array.isArray(args.params);\n        if (args.method === 'wallet_switchEthereumChain') {\n            const switchChainId = args.chainId.split(\":\")[1];\n            // const hexChainId = parseInt(switchChainId, 16);\n            const decimalNumber = parseInt(switchChainId, 10);\n            if (isNaN(decimalNumber)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid decimal number,  chainId: '${switchChainId}' `);\n            }\n            if (!args.params) {\n                args.params = { chainId: '0x' + decimalNumber.toString(16) };\n            }\n            else if (isDic) { //为 Record<string, unknown>\n                let params = args.params;\n                if (!('chainId' in params)) {\n                    params['chainId'] = '0x' + decimalNumber.toString(16);\n                    args.params = params;\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params error ,  method: '${args.method}' `);\n            }\n        }\n        else if (args.method === 'personal_sign'\n            || args.method === 'eth_signTypedData_v4'\n            || args.method === 'eth_sendTransaction'\n            || args.method === 'wallet_watchAsset') {\n            if (!args.params) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params is nil, method: '${args.method}'`);\n            }\n            if (this.isRecord(args.params)) {\n                let params = args.params;\n                (0, core_1.logDebug)(\"eip155 updateRequestParams params>\", JSON.stringify(params));\n                if ('chainId' in params) {\n                    const selectedChainId = args.chainId.split(\":\")[1];\n                    const chainNum = parseInt(selectedChainId, 10);\n                    let paramsChainString = String(params.chainId);\n                    let paramsChainId;\n                    if (paramsChainString.startsWith(this.name) && args.chainId === paramsChainString) { //为\n                        paramsChainId = chainNum;\n                    }\n                    else if (paramsChainString.startsWith(\"0x\")) {\n                        paramsChainId = parseInt(paramsChainString, 16);\n                    }\n                    else if (!isNaN(Number(paramsChainString))) { //数字\n                        paramsChainId = parseInt(paramsChainString, 10);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid params.chainId format, method: '${args.method}'`);\n                    }\n                    if (chainNum !== paramsChainId) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params.chainId not equal chain,  method: '${args.method}' `);\n                    }\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid request params type, method: '${args.method}'`);\n            }\n        }\n    }\n    //adapt array\n    adaptArray(args) {\n        if (args.method === 'wallet_switchEthereumChain'\n            || args.method === 'wallet_addEthereumChain'\n            || args.method === 'wallet_watchAsset'\n            || args.method === 'eth_sendTransaction') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr) {\n                    if (paramsArr.length === 1) {\n                        let firstParam = args.params[0];\n                        if (this.isRecord(firstParam)) {\n                            args.params = firstParam;\n                        }\n                    }\n                    else if (paramsArr.length > 1) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                    }\n                }\n            }\n        }\n        else if (args.method === 'eth_signTypedData_v4') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr && paramsArr.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                }\n                else if (paramsArr && paramsArr.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let messageObj = {};\n                if (paramsArr && paramsArr.length === 2) {\n                    let addressObj = args.params[0]; //address\n                    if (addressObj && typeof addressObj === 'string') { //check address\n                        let isEqual = false;\n                        this.namespace.accounts.forEach((account) => {\n                            let chainAddress = (0, utils_1.fromAccountToAddress)(account);\n                            if (chainAddress.toLowerCase() === addressObj.toLowerCase()) {\n                                isEqual = true;\n                            }\n                        });\n                        (0, core_1.logDebug)(\"eip155 adaptArray eth_signTypedData_v4 >>>isEqual: \", isEqual);\n                        if (!isEqual) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error, not equal,  method: '${args.method}' `);\n                        }\n                        if (this.isRecord(args.params[1])) {\n                            messageObj = args.params[1];\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error , not string,  method: '${args.method}' `);\n                    }\n                }\n                else if (paramsArr && paramsArr.length === 1) {\n                    if (this.isRecord(args.params[0])) {\n                        messageObj = args.params[0];\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                    }\n                }\n                try {\n                    let messages = JSON.stringify(messageObj);\n                    args.params = {\n                        typedDataJson: messages\n                    };\n                }\n                catch (err) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params call JSON.stringify() failed,  method: '${args.method}' `);\n                }\n            }\n        }\n        else if (args.method === 'personal_sign') {\n            if (this.isArray(args.params)) {\n                if (args.params && args.params.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params error,  method: '${args.method}' `);\n                }\n                else if (args.params && args.params.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let firstObj = args.params[0];\n                let secondObj = args.params[1];\n                if (secondObj && typeof secondObj === 'string') { //check address\n                    let isEqual = false;\n                    this.namespace.accounts.forEach((account) => {\n                        let chainAddress = (0, utils_1.fromAccountToAddress)(account);\n                        if (chainAddress.toLowerCase() === secondObj.toLowerCase()) {\n                            isEqual = true;\n                        }\n                    });\n                    (0, core_1.logDebug)(\"eip155 adaptArray personal_sign >>>isEqual: \", isEqual);\n                    if (!isEqual) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error,  method: '${args.method}' `);\n                    }\n                }\n                if (firstObj && typeof firstObj === 'string') {\n                    args.params = {\n                        message: firstObj\n                    };\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is error,  method: '${args.method}' `);\n                }\n            }\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"eth_requestAccounts\":\n            case \"eth_accounts\":\n            case \"eth_chainId\":\n                return false;\n            case \"eth_sendTransaction\":\n            case \"eth_signTransaction\":\n            case \"eth_sign\":\n            case \"personal_sign\":\n            case \"eth_signTypedData\":\n            case \"wallet_addEthereumChain\":\n            case \"wallet_watchAsset\":\n            case \"eth_signTypedData_v4\":\n                return true;\n            case \"wallet_switchEthereumChain\": {\n                this.adaptArray(args);\n                this.updateRequestParams(args);\n                const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n                return !this.isChainApproved(parsedChainId);\n            }\n            default:\n                return false;\n        }\n        return false;\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.adaptArray(args);\n            (0, core_1.logDebug)(\"eip155 request --args--string>\", JSON.stringify(args));\n            this.updateRequestParams(args);\n            (0, core_1.logDebug)(\"eip155 request --params--string>\", JSON.stringify(args));\n            switch (args.method) {\n                case \"eth_requestAccounts\":\n                    return this.getAccounts();\n                case \"eth_accounts\":\n                    return this.getAccounts();\n                case \"eth_chainId\":\n                    return parseInt(this.getDefaultChain());\n                case \"wallet_switchEthereumChain\": {\n                    return (yield this.handleSwitchChain(args));\n                }\n                case \"wallet_addEthereumChain\":\n                    return this.addEthereumChain(args);\n                default:\n                    break;\n            }\n            if (this.namespace.methods.includes(args.method)) {\n                // personal_sign\n                // eth_signTypedData_v4\n                // eth_sendTransaction\n                // wallet_watchAsset\n                try {\n                    const response = yield this.client.request(args);\n                    (0, core_1.logDebug)(\"eip155 request --response----string>\", JSON.stringify(response));\n                    if (this.isRecord(response)) {\n                        if ('result' in response) {\n                            let result = response.result;\n                            if (result && typeof result === 'string' && (result === \"true\" || result === \"false\")) {\n                                (0, core_1.logDebug)(\"eip155 request --wallet_watchAsset>>>>\", result === \"true\");\n                                return (result === \"true\");\n                            }\n                            return response.result;\n                        }\n                    }\n                    return response;\n                }\n                catch (e) {\n                    (0, core_1.logDebug)(`eip155 request --response --error--string> e instanceof OKXConnectError ${e instanceof core_1.OKXConnectError}`, JSON.stringify(e));\n                    throw e;\n                }\n            }\n            else {\n                (0, core_1.logDebug)('[RPC] request begin');\n                return yield this.getHttpProvider().request(args);\n            }\n        });\n    }\n    addEthereumChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let resultData = (yield this.client.request(args));\n            try {\n                if ('result' in resultData) {\n                    let successData = resultData;\n                    let account = resultData.result;\n                    if (account) {\n                        const nameSpace = account.split(\":\")[0];\n                        const chainId = account.split(\":\")[1];\n                        const chain = nameSpace + ':' + chainId;\n                        let newNameSpace = this.namespace;\n                        this.namespace.accounts.push(account);\n                        this.namespace.chains.push(chain);\n                        if (this.isRecord(args.params)) {\n                            if (\"rpcUrls\" in args.params) {\n                                let rpcUrls = args.params.rpcUrls;\n                                let rpcUrl = rpcUrls ? rpcUrls[0] : undefined;\n                                if (rpcUrl) {\n                                    if (this.namespace.rpcMap) {\n                                        this.namespace.rpcMap[chainId] = rpcUrl;\n                                    }\n                                    else {\n                                        this.namespace.rpcMap = {\n                                            [chainId]: rpcUrl\n                                        };\n                                    }\n                                    this.setHttpProvider(chainId, rpcUrl);\n                                }\n                            }\n                        }\n                        this.events.emit(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, {\n                            eip155: this.namespace\n                        });\n                    }\n                }\n                else {\n                    new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request error`);\n                }\n            }\n            catch (error) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request  error`);\n            }\n            return null;\n        });\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        this.chainId = parseInt(chainId);\n        // set rpc\n        if (!this.httpProviders[chainId]) {\n            const rpc = rpcUrl || (0, utils_1.getRpcUrl)(`${this.name}:${chainId}`, this.namespace);\n            if (!rpc) {\n                // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n                (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            }\n            else {\n                this.setHttpProvider(chainId, rpc);\n            }\n        }\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId.toString();\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // ---------- Private ----------------------------------------------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"eip155 getAccounts \", accounts, this.chainId);\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => {\n                return (0, utils_1.fromAccountToAddress)(account);\n            })),\n        ];\n    }\n    getHexChainIdFromRequest(args) {\n        let params = args.params;\n        let hexChainId = \"0x0\";\n        if (params && \"chainId\" in params) {\n            hexChainId = params.chainId;\n        }\n        hexChainId = hexChainId.startsWith(\"0x\") ? hexChainId : `0x${hexChainId}`;\n        (0, core_1.logDebug)(\"handleSwitchChain -->args \", args);\n        (0, core_1.logDebug)(\"handleSwitchChain -->hexChainId \", hexChainId);\n        const parsedChainId = parseInt(hexChainId, 16);\n        (0, core_1.logDebug)(\"handleSwitchChain -->parsedChainId \", parsedChainId);\n        return { parsedChainId, hexChainId };\n    }\n    handleSwitchChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n            if (this.isChainApproved(parsedChainId)) {\n                this.setDefaultChain(`${parsedChainId}`);\n            }\n            else {\n                const resultData = (yield this.client.request({\n                    method: \"wallet_switchEthereumChain\",\n                    chainId: args.chainId,\n                    params: {\n                        chainId: hexChainId,\n                    },\n                }));\n                try {\n                    if ('result' in resultData) {\n                        let successData = resultData;\n                        let account = resultData.result;\n                        if (account) {\n                            const nameSpace = account.split(\":\")[0];\n                            const chainId = account.split(\":\")[1];\n                            const chain = nameSpace + ':' + chainId;\n                            let newNameSpace = this.namespace;\n                            this.namespace.accounts.push(account);\n                            this.namespace.chains.push(chain);\n                            (0, core_1.logDebug)(\"handleSwitchChain -->wallet_switchEthereumChain \", resultData);\n                            this.setDefaultChain(`${parsedChainId}`);\n                            this.events.emit(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, {\n                                eip155: this.namespace\n                            });\n                        }\n                    }\n                    else {\n                        new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request error`);\n                    }\n                }\n                catch (error) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request  error`);\n                }\n            }\n            return null;\n        });\n    }\n    isChainApproved(chainId) {\n        return this.namespace.chains.includes(`${this.name}:${chainId}`);\n    }\n    // rpc\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            //   throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            (0, core_1.logDebug)('get parsed chain and rpc:', parsedChainId, parsedRpc);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        (0, core_1.logDebug)('get http providermap:', http);\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n}\nexports.Eip155Provider = Eip155Provider;\nexports.default = Eip155Provider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcConnection = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\n// Source: https://nodejs.org/api/events.html#emittersetmaxlistenersn\nconst EVENT_EMITTER_MAX_LISTENERS_DEFAULT = 10;\nclass JsonRpcConnection {\n    constructor(url, disableProviderPing = false) {\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n        this.events = new eventemitter3_1.EventEmitter();\n        this.isAvailable = false;\n        this.registering = false;\n        if (!(0, core_2.isHttpUrl)(url)) {\n            throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n        }\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n    }\n    get connected() {\n        return this.isAvailable;\n    }\n    get connecting() {\n        return this.registering;\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            yield this.register(url);\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                throw new Error(\"Connection already closed\");\n            }\n            this.onClose();\n        });\n    }\n    send(payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                yield this.register();\n            }\n            try {\n                const body = (0, core_1.safeJsonStringify)(payload);\n                const res = yield (0, cross_fetch_1.default)(this.url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                const data = yield res.json();\n                this.onPayload({ data });\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    register() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (!(0, core_2.isHttpUrl)(url)) {\n                throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n            }\n            if (this.registering) {\n                return new Promise((resolve, reject) => {\n                    this.events.once(\"register_error\", (error) => {\n                        reject(error);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.isAvailable === \"undefined\") {\n                            return reject(new Error(\"HTTP connection is missing or invalid\"));\n                        }\n                        resolve();\n                    });\n                });\n            }\n            this.url = url;\n            this.registering = true;\n            try {\n                if (!this.disableProviderPing) {\n                    const body = (0, core_1.safeJsonStringify)({ id: 1, jsonrpc: \"2.0\", method: \"test\", params: [] });\n                    yield (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                }\n                this.onOpen();\n            }\n            catch (e) {\n                const error = this.parseError(e);\n                this.events.emit(\"register_error\", error);\n                this.onClose();\n                throw error;\n            }\n        });\n    }\n    onOpen() {\n        this.isAvailable = true;\n        this.registering = false;\n        this.events.emit(\"open\");\n    }\n    onClose() {\n        this.isAvailable = false;\n        this.registering = false;\n        this.events.emit(\"close\");\n    }\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        const payload = typeof e.data === \"string\" ? (0, core_1.safeJsonParse)(e.data) : e.data;\n        this.events.emit(\"payload\", payload);\n    }\n    onError(id, e) {\n        const error = this.parseError(e);\n        const message = error.message || error.toString();\n        const payload = (0, core_2.formatJsonRpcError)(id, message);\n        this.events.emit(\"payload\", payload);\n    }\n    parseError(e, url = this.url) {\n        return (0, core_2.parseConnectionError)(e, url, \"HTTP\");\n    }\n}\nexports.JsonRpcConnection = JsonRpcConnection;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcProvider = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst types_1 = require(\"../../types\");\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nclass JsonRpcProvider extends types_1.IJSONRpcProvider {\n    constructor(connection) {\n        super(connection);\n        this.events = new eventemitter3_1.EventEmitter();\n        this.connected = false;\n        this.connecting = false;\n        this.hasRegisteredEventListeners = false;\n        this.connection = this.setConnection(connection);\n        if (this.connection.connected) {\n            this.registerEventListeners();\n        }\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            yield this.open(connection);\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.close();\n        });\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    request(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.requestStrict((0, core_1.formatJsonRpcRequest)(request.method, request.params || [], (0, core_1.getBigIntRpcId)().toString()), // casting to any is required in order to use BigInt as rpcId\n            context);\n        });\n    }\n    // ---------- Protected ----------------------------------------------- //\n    requestStrict(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.connection.connected) {\n                    try {\n                        yield this.open();\n                    }\n                    catch (e) {\n                        reject(e);\n                    }\n                }\n                this.events.on(`${request.id}`, (response) => {\n                    if ((0, core_1.isJsonRpcError)(response)) {\n                        reject(response.error);\n                    }\n                    else {\n                        resolve(response.result);\n                    }\n                });\n                try {\n                    (0, core_2.logDebug)('[RPC] >>> send request', request, context);\n                    yield this.connection.send(request, context);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }));\n        });\n    }\n    setConnection(connection = this.connection) {\n        return connection;\n    }\n    onPayload(payload) {\n        this.events.emit(\"payload\", payload);\n        if ((0, core_1.isJsonRpcResponse)(payload)) {\n            this.events.emit(`${payload.id}`, payload);\n        }\n        else {\n            this.events.emit(\"message\", {\n                type: payload.method,\n                data: payload.params,\n            });\n        }\n    }\n    onClose(event) {\n        // Code 3000 indicates an abnormal closure signalled by the relay -> emit an error in this case.\n        if (event && event.code === 3000) {\n            this.events.emit(\"error\", new Error(`WebSocket connection closed abnormally with code: ${event.code} ${event.reason ? `(${event.reason})` : \"\"}`));\n        }\n        this.events.emit(\"disconnect\");\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            if (this.connection === connection && this.connection.connected)\n                return;\n            if (this.connection.connected)\n                this.close();\n            if (typeof connection === \"string\") {\n                yield this.connection.open(connection);\n                connection = this.connection;\n            }\n            this.connection = this.setConnection(connection);\n            yield this.connection.open();\n            this.registerEventListeners();\n            this.events.emit(\"connect\");\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.connection.close();\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    registerEventListeners() {\n        if (this.hasRegisteredEventListeners)\n            return;\n        this.connection.on(\"payload\", (payload) => this.onPayload(payload));\n        this.connection.on(\"close\", (event) => this.onClose(event));\n        this.connection.on(\"error\", (error) => this.events.emit(\"error\", error));\n        this.connection.on(\"register_error\", (_error) => this.onClose());\n        this.hasRegisteredEventListeners = true;\n    }\n}\nexports.JsonRpcProvider = JsonRpcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolanaProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SolanaProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"solana\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"solana request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"solana provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    //   {\n    //     \"chains\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\" ],\n    //     \"accounts\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp:F7wnJc5wiBGy1k87jv6gyNwE3jMEWd18oTQiYsF1xVG7\"],\n    //     \"methods\": [\n    //         \"solana_signTransaction\",\n    //         \"solana_signMessage\"\n    //     ],\n    //     \"defaultChain\": \"5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\"\n    // }\n    // TODO:确认上面的defaultChain是否正确（没有solana前缀）\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"solana\"))) {\n                chainId = `solana:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.SolanaProvider = SolanaProvider;\nexports.default = SolanaProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass StarknetProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"starknet\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"starknet request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"starknet provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Wallet doesn't support\" + args.method);\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = StarknetProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuiProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SuiProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeySui;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"sui request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"sui provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"sui\"))) {\n                chainId = `sui:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"sui_signMessage\":\n            case \"sui_signPersonalMessage\":\n            case \"sui_signTransactionBlock\":\n            case \"sui_signAndExecuteTransactionBlock\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.SuiProvider = SuiProvider;\nexports.default = SuiProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TONProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTON;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            (0, core_1.logDebug)(\"TONProvider request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"TONProvider request provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                if (!args.params) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params is nil\");\n                }\n                if (this.isRecord(args.params)) {\n                    const _e = args.params, { validUntil } = _e, newParams = __rest(_e, [\"validUntil\"]);\n                    let fromAddress = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n                    if ('from' in newParams) {\n                        fromAddress = newParams.from || ((_d = (_c = this.namespace.payload) === null || _c === void 0 ? void 0 : _c.ton_addr) === null || _d === void 0 ? void 0 : _d.address);\n                    }\n                    args.params['from'] = fromAddress;\n                    args.params['network'] = this.getDefaultChain();\n                    args.params['valid_until'] = validUntil;\n                    let response = yield this.client.request(args);\n                    if (this.isRecord(response) && 'result' in response) {\n                        const result = {\n                            boc: response.result.toString()\n                        };\n                        (0, core_1.logDebug)(\"TONProvider request provider response: \", JSON.stringify(response));\n                        (0, core_1.logDebug)(\"TONProvider request provider result: \", JSON.stringify(result));\n                        return result;\n                    }\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton_send request response is nil\");\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params type add nil\");\n                }\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        var _a, _b;\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"ton getAccounts accounts :\", accounts);\n        (0, core_1.logDebug)(\"ton getAccounts .namespace :\", JSON.stringify(this.namespace));\n        if (!accounts) {\n            return [];\n        }\n        let address = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n        (0, core_1.logDebug)(\"ton getAccounts address :\", address);\n        if (address) {\n            return [\n                address\n            ];\n        }\n        return [];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"ton_sendTransaction\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.default = TONProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TronProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTron;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"tron request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"tron provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = TronProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./providers\"), exports);\n__exportStar(require(\"./misc\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IJSONRpcProvider = exports.IJSONRpcConnection = void 0;\nclass IJSONRpcConnection {\n}\nexports.IJSONRpcConnection = IJSONRpcConnection;\nclass IJSONRpcProvider {\n    constructor(opt) {\n    }\n}\nexports.IJSONRpcProvider = IJSONRpcProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setGlobal = exports.getGlobal = void 0;\nconst globals = {};\nconst getGlobal = (key) => {\n    return globals[key];\n};\nexports.getGlobal = getGlobal;\nconst setGlobal = (key, value) => {\n    globals[key] = value;\n};\nexports.setGlobal = setGlobal;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./misc\"), exports);\n__exportStar(require(\"./globals\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRpcUrl = getRpcUrl;\nexports.getChainId = getChainId;\nexports.fromAccountToAddress = fromAccountToAddress;\nexports.convertChainIdToNumber = convertChainIdToNumber;\nexports.parseChainId = parseChainId;\nexports.mergeArrays = mergeArrays;\nexports.syncAddressAvailable = syncAddressAvailable;\nexports.syncAddressHostAvailable = syncAddressHostAvailable;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getRpcUrl(chainId, rpc, projectId) {\n    var _a;\n    const chain = parseChainId(chainId);\n    // no default\n    return (((_a = rpc.rpcMap) === null || _a === void 0 ? void 0 : _a[chain.reference]) ||\n        ``);\n}\nfunction getChainId(chain) {\n    return chain.includes(\":\") ? chain.split(\":\")[1] : chain;\n}\nfunction fromAccountToAddress(account) {\n    if (!account) {\n        return \"\";\n    }\n    try {\n        let addressArr = account.split(\":\").slice(2);\n        let address = addressArr.length > 0 ? addressArr.join(\":\") : \"\";\n        (0, core_1.logDebug)(\"fromAccountToAddress address and account:\", address, account);\n        return address;\n    }\n    catch (e) {\n        (0, core_1.logError)(\"fromAccountToAddress error:\", account);\n        return \"\";\n    }\n}\n// export function validateChainApproval(chain: string, chains: string[]): void {\n//   if (!chains.includes(chain)) {\n//     throw new Error(\n//       `Chain '${chain}' not approved. Please use one of the following: ${chains.toString()}`,\n//     );\n//   }\n// }\n// export function getChainsFromApprovedSession(accounts: string[]): string[] {\n//   return accounts.map((address) => `${address.split(\":\")[0]}:${address.split(\":\")[1]}`);\n// }\n// export function getAccountsFromSession(namespace: string, session: SessionTypes.Struct): string[] {\n//   // match namespaces e.g. eip155 with eip155:1\n//   const matchedNamespaceKeys = Object.keys(session.namespaces).filter((key) =>\n//     key.includes(namespace),\n//   );\n//   if (!matchedNamespaceKeys.length) return [];\n//   const accounts: string[] = [];\n//   matchedNamespaceKeys.forEach((key) => {\n//     const accountsForNamespace = session.namespaces[key].accounts;\n//     accounts.push(...accountsForNamespace);\n//   });\n//   return accounts;\n// }\n// export function mergeRequiredOptionalNamespaces(\n//   required: NamespaceConfig = {},\n//   optional: NamespaceConfig = {},\n// ){\n//   const requiredNamespaces = normalizeNamespaces(required);\n//   const optionalNamespaces = normalizeNamespaces(optional);\n//    return merge.merge(requiredNamespaces,optionalNamespaces)\n// }\n/**\n * Converts\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * into\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *\n */\n// export function normalizeNamespaces(namespaces: NamespaceConfig): NamespaceConfig {\n//   const normalizedNamespaces: NamespaceConfig = {};\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const rpcMap = values.rpcMap || {};\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       ...values,\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       rpcMap: { ...rpcMap, ...normalizedNamespaces[normalizedKey]?.rpcMap },\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n//\n// export function parseCaip10Account(caip10Account: string): string {\n//   return caip10Account.includes(\":\") ? caip10Account.split(\":\")[2] : caip10Account;\n// }\n/**\n * Populates the chains array for each namespace with the chains extracted from the accounts if are otherwise missing\n */\n// export function populateNamespacesChains(\n//   namespaces: SessionTypes.Namespaces,\n// ): Record<string, SessionTypes.Namespace> {\n//   const parsedNamespaces: Record<string, SessionTypes.Namespace> = {};\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const accounts = values.accounts || [];\n//     // If the key includes a CAIP separator `:` we know it's a namespace + chainId (e.g. `eip155:1`)\n//     const chains = isCaipNamespace(key)\n//       ? [key]\n//       : values.chains\n//       ? values.chains\n//       : getChainsFromApprovedSession(values.accounts);\n//     parsedNamespaces[key] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   }\n//   return parsedNamespaces;\n// }\nfunction convertChainIdToNumber(chainId) {\n    if (typeof chainId === \"number\")\n        return chainId;\n    if (chainId.includes(\"0x\")) {\n        return parseInt(chainId, 16);\n    }\n    chainId = chainId.includes(\":\") ? chainId.split(\":\")[1] : chainId;\n    return isNaN(Number(chainId)) ? chainId : Number(chainId);\n}\nconst CAIP_DELIMITER = \":\";\nfunction parseChainId(chain) {\n    const [namespace, reference] = chain.split(CAIP_DELIMITER);\n    return { namespace, reference };\n}\nfunction mergeArrays(a = [], b = []) {\n    return [...new Set([...a, ...b])];\n}\nfunction syncAddressAvailable(wallet) {\n    if (!wallet) {\n        return false;\n    }\n    if (wallet.appName !== 'OKX Wallet') {\n        return false;\n    }\n    if ((0, core_1.versionCompare)('6.97.0', wallet.appVersion) > 0) {\n        return false;\n    }\n    return syncAddressHostAvailable();\n}\nfunction syncAddressHostAvailable() {\n    try {\n        return !!(window.okxGlobal);\n    }\n    catch (e) {\n        return false;\n    }\n}\n","<template>\n  <div id=\"app\">\n    <el-container>\n      <el-header>OKX Connect</el-header>\n      <el-main>\n        <el-card class=\"wallet-info\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Wallet Info</div>\n          </template>\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Wallet Address:</strong> {{ getWalletAddress }}\n            </el-col>\n          </el-row>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Status :</strong> {{ currentStatus }}\n            </el-col>\n          </el-row>\n\n        </el-card>\n\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Connect Params</div>\n          </template>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"withUI\" @change=\"handleWithUI\">\n                Show UI</el-checkbox>\n            </el-col>\n\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"universalToTG\" @change=\"handleUniversalToTG\">\n                Use mini wallet</el-checkbox>\n            </el-col>\n          </el-row>\n\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Modals</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"modals\" placeholder=\"Modals\" @change=\"handleModalsSelect\" multiple>\n                <el-option label=\"Before\" value=\"before\" />\n                <el-option label=\"Success\" value=\"success\" />\n                <el-option label=\"Error\" value=\"error\" />\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center; justify-content: space-between;\">\n            <el-col :span=\"6\" style=\"gap: 2px\">\n              <p style=\"font-size: 11pt; margin: 0px\">Return Strategy</p>\n              <p style=\"font-size: 9pt; margin: 0px\">(Mobile only)</p>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-select\n                v-model=\"returnStrategy\"\n                @change=\"handleReturnStrategySelect\"\n                placeholder=\"Return Strategy\"\n              >\n                <el-option\n                  v-for=\"strategy in returnStrategies\"\n                  :key=\"`return-strategy-select-option-${strategy}`\"\n                  :label=\"strategy\"\n                  :value=\"strategy\"\n                />\n              </el-select>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-input\n                v-if=\"returnStrategy === 'deeplink'\"\n                v-model=\"deeplink\"\n                @change=\"handleReturnStrategyDeeplink\"\n                placeholder=\"Deeplink\"\n                :disabled=\"returnStrategy !== 'deeplink'\"\n                style=\"margin: 0px\"\n              />\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Lang</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"language\" @change=\"handleLanguageSelect\" placeholder=\"Language\">\n                <el-option v-for=\"locale in locales\" :key=\"`language-select-option-${locale}`\" :label=\"locale\"\n                  :value=\"locale\" />\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Theme</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"theme\" @change=\"handleThemeSelect\" placeholder=\"Theme\">\n                <el-option label=\"LIGHT\" :value=\"THEME.LIGHT\" />\n                <el-option label=\"DARK\" :value=\"THEME.DARK\" />\n              </el-select>\n            </el-col>\n          </el-row>\n\n<!--          <el-row>-->\n<!--          <el-row style=\"align-items: center\">-->\n<!--            <el-col :span=\"4\">-->\n<!--              <p style=\"font-size: 11pt\">Connect</p>-->\n<!--              <p style=\"font-size: 11pt\">Methods</p>-->\n<!--            </el-col>-->\n<!--            <el-col :span=\"20\">-->\n<!--              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" placeholder=\"Methods\">-->\n<!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n<!--                           :value=\"methods\" />-->\n\n<!--              </el-select>-->\n<!--            </el-col>-->\n<!--          </el-row>-->\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Connect</p>\n              <p style=\"font-size: 11pt\">Methods</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" multiple placeholder=\"methods\">\n                <el-option\n                    v-for=\"item in connectMethods\"\n                    :key=\"item\"\n                    :label=\"item\"\n                    :value=\"item\">\n                </el-option>\n              </el-select>\n\n\n<!--              <el-select v-model=\"selectedMethod\" placeholder=\"Methods\" @change=\"handleConnectMethodsSelect\" multiple>-->\n<!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n<!--                           :value=\"methods\" />-->\n<!--              </el-select>-->\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">ton_proof</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-input v-model=\"tonProofValue\"  placeholder=\"input ton_proof\"></el-input>\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" align=\"middle\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Required Chains</div>\n            </el-col>\n            <el-col\n              :span=\"6\"\n              v-for=\"item in Object.keys(availableChains)\"\n              :key=\"item\"\n            >\n              <el-checkbox\n                v-model=\"availableChains[item].checked\"\n                :disabled=\"!areChainsInit\"\n                >{{ availableChains[item].name }}</el-checkbox\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" align=\"middle\" style=\"margin-top: 20px\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Optional Chains</div>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(43114)\" @change=\"() => handleOptionChange(43114)\">\n                AVAX</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(10)\" @change=\"() => handleOptionChange(10)\">OP</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(8453)\" @change=\"() => handleOptionChange(8453)\">\n                BASE</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(99781165)\"\n                @change=\"() => handleOptionChange(99781165)\">Nonexist</el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp')\" @change=\"() => handleOptionChange('solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp')\">Solana</el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('ton:-239')\" @change=\"() => handleOptionChange('ton:-239')\">Ton</el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('btc:mainnet')\" @change=\"() => handleOptionChange('btc:mainnet')\">btc</el-checkbox>\n            </el-col>\n\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"initBtnClicked\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectInitStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                type=\"primary\"\n                @click=\"connectBtnClicked\"\n                icon=\"el-icon-connection\"\n                :disabled=\"!areChainsInit\"\n                >{{ connectStatusStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"syncAllAddressClick\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ syncAllAddressStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                type=\"danger\"\n                @click=\"disconnectAction\"\n                icon=\"el-icon-switch-button\"\n                :disabled=\"!areChainsInit || walletAddress.length == 0\"\n                >{{ disconnectStatusStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n          <teleport to=\"body\">\n            <div v-if=\"showModal\" class=\"modal-overlay\" @click=\"closeModal\">\n              <div class=\"modal-content\" @click.stop>\n                <button class=\"close-button\" @click=\"closeModal\">\n                  &times;\n                </button>\n                <h2>Scan to connect</h2>\n                <qrcode-vue :value=\"qrValue\" :size=\"350\" level=\"L\" />\n              </div>\n            </div>\n          </teleport>\n        </el-card>\n\n        <!-- 发送交易 -->\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Transactions</div>\n          </template>\n\n          <el-tabs v-model=\"activeTab\" type=\"border-card\" @tab-click=\"clickActiveTab\">\n            <!-- ETH -->\n            <el-tab-pane label=\"ETH\" name=\"eip155:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to ETH)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve TONCoin)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(eth mint\n                    nft)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add SPX6900)\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TON\" name=\"ton:-239\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_getAccount\">ton_getAccount</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_sendTransaction\">ton_sendTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- solana -->\n            <el-tab-pane label=\"Sol\" name=\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- Sui-->\n            <el-tab-pane label=\"Sui\" name=\"sui:mainnet\">\n              <SuiPanel @generateTransactionParams=\"sui_generateTransactionParams\" />\n            </el-tab-pane>\n            <!-- BTC -->\n            <el-tab-pane label=\"BTC\" name=\"btc:mainnet\">\n              <BTCPanel @generateTransactionParams=\"btc_generateTransactionParams\" />\n            </el-tab-pane>\n\n            <!-- Fractal BTC -->\n            <el-tab-pane label=\"Fractal\" name=\"fractal:mainnet\">\n              <FractalPanel @generateTransactionParams=\"fractal_generateTransactionParams\" />\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Tron\" name=\"tron:mainnet\">\n              <TronTransactionPanel\n                  @generateTransactionParams=\"tron_generateTransactionParams\"\n                  @generateTransactionResult=\"tron_getTransactionResult\" />\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Aptos\" name=\"aptos:mainnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signTransaction\">aptos_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"aptos_signAndSubmitTransaction\">aptos_signAndSubmitTransaction</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Cosmos\" name=\"cosmos:cosmoshub-4\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <!-- Polygon-->\n            <el-tab-pane label=\"Polygon\" name=\"eip155:137\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send POL)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve sushi)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(polygon mint\n                    nft)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add LGNS)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_testRpc()\">wallet_testRpc(Polygon)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\"\n                  >eth_sendTransaction(转账FUSE)</el-button\n                  >\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\"\n                  >eth_sendTransaction(授权USDC)</el-button\n                  >\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- BSC-->\n            <el-tab-pane label=\"BNB\" name=\"eip155:56\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to BNB)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve POSI)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add FET)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_testRpc()\">wallet_testRpc(check balance on eth)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Fuse\" name=\"eip155:122\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_swap\">eth_sendTransaction(Swap)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Sonic testnet\" name=\"svm:70000062\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Movement\" name=\"movement:testnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"move_signTransaction\">move_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"move_signAndSubmitTransaction\">move_signAndSubmitTransaction</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n\n            <el-tab-pane label=\"osmos\" name=\"cosmos:osmosis-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"SEI\" name=\"cosmos:pacific-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Starknet\" name=\"starknet:mainnet\">\n              <StarknetPanel ref=\"starknetPanelRef\" @generateTransactionParams=\"starknet_generateTransactionParams\" @generateTransactionResult=\"starknet_getTransactionResult\" />\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TEST \" name=\"test:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"testBase64UrlSafe\">testBase64UrlSafe</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n          </el-tabs>\n\n          <el-col :xs=\"24\" :sm=\"24\" style=\"margin: 16px 0px;\">\n            <el-row style=\"align-items: center; justify-content: space-between; margin-bottom: 8px;\">\n              <el-col :span=\"4\">\n                <p style=\"font-size: 11pt; margin: 0px; text-align: start\">Redirect param (only for ETH, Polygon, BNB, Fuse)</p>\n              </el-col>\n              <el-col :span=\"9\">\n                <el-select\n                  v-model=\"redirect\"\n                  @change=\"handleRedirectSelect\"\n                  placeholder=\"Return Strategy\"\n                  :disabled=\"!canChainAddRedirectParam()\"\n                  >\n                  <el-option\n                    v-for=\"strategy in returnStrategies\"\n                    :key=\"`return-strategy-select-option-${strategy}`\"\n                    :label=\"strategy\"\n                    :value=\"strategy\"\n                  />\n                </el-select>\n              </el-col>\n              <el-col :span=\"10\">\n                <el-input\n                  v-if=\"redirect === 'deeplink'\"\n                  v-model=\"redirectDeeplink\"\n                  @change=\"handleRedirectDeeplink\"\n                  placeholder=\"Deeplink\"\n                  :disabled=\"!canChainAddRedirectParam() || redirect !== 'deeplink'\"\n                  style=\"margin: 0px\"\n                />\n              </el-col>\n            </el-row>\n            <el-button\n              type=\"primary\" @click=\"addRedirectParam()\"\n              :disabled=\"!canChainAddRedirectParam() || !testTransaction\"\n            >\n              Add redirect param to data\n            </el-button>\n          </el-col>\n\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Data:</div>\n            <el-input v-model=\"testTransaction\" type=\"textarea\" :rows=\"5\" placeholder=\"sendTransactions\"></el-input>\n          </el-col>\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Result :</div>\n            <el-input v-model=\"testboc\" type=\"textarea\" :rows=\"5\" placeholder=\"boc\"></el-input>\n          </el-col>\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button type=\"primary\" :disabled=\"sendBtnDisabled\" @click=\"sendTransaction()\">{{\n                testTransactionStr\n                }}</el-button>\n            </el-col>\n          </el-row>\n        </el-card>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<style scoped>\n/* 重置全局边距和内边距 */\nbody,\nhtml {\n  margin: 0;\n  padding: 0;\n  height: 100%;\n}\n\n/* 确保 app 容器占满整个视口 */\n#app {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin: 0 auto;\n  /* 居中 */\n  max-width: 600px;\n  /* 设置最大宽度 */\n  padding: 0 20px;\n  /* 添加一些左右内边距 */\n}\n\n/* 调整 el-container 样式 */\n.el-container {\n  min-height: 100vh;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n}\n\n/* 调整 el-header 样式 */\n.el-header {\n  background-color: #333333;\n  color: white;\n  height: 50px;\n  line-height: 50px;\n  font-size: 18px;\n  font-weight: bold;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n}\n\n/* 调整 el-main 样式 */\n.el-main {\n  padding: 70px 0 20px;\n  /* 增加顶部内边距以避免被固定header遮挡 */\n  flex-grow: 1;\n}\n\n.el-card {\n  margin-bottom: 20px;\n}\n\n.info-row {\n  margin-bottom: 10px;\n}\n\n.input-label {\n  margin-bottom: 5px;\n  text-align: left;\n}\n\n.el-input {\n  margin-bottom: 10px;\n}\n\n/* 通用按钮样式 */\n.wallet-actions .el-button,\n.transaction .el-button,\n.clear-cache .el-button {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 40px;\n}\n\n.wallet-actions .el-button span,\n.transaction .el-button span,\n.clear-cache .el-button span {\n  margin: 0 auto;\n}\n\n/* 按钮行间距 */\n.wallet-actions .button-row,\n.transaction .button-row {\n  margin-bottom: 8px;\n}\n\n.wallet-actions .button-row:last-child,\n.transaction .button-row:last-child {\n  margin-bottom: 0;\n}\n\n/* 调整图标和文字的对齐 */\n.wallet-actions .el-button [class^=\"el-icon-\"],\n.transaction .el-button [class^=\"el-icon-\"],\n.clear-cache .el-button [class^=\"el-icon-\"] {\n  margin-right: 5px;\n  vertical-align: middle;\n}\n\n/* 新增：调整发送交易按钮与输入框的间距 */\n.transaction .el-row:not(:last-child) {\n  margin-bottom: 10px;\n}\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  text-align: center;\n  position: relative;\n  max-width: 90%;\n  width: 400px;\n}\n\n.close-button {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  font-size: 24px;\n  border: none;\n  background: none;\n  cursor: pointer;\n}\n\n/* 响应式调整 */\n@media (max-width: 600px) {\n  #app {\n    padding: 0 10px;\n  }\n\n  .el-main {\n    padding: 60px 0 10px;\n  }\n}\n</style>\n<script>\nimport {OKX_CONNECT_ERROR_CODES, safeJsonStringify,getAppWalletDeepLink,getUniversalLink} from \"@okxconnect/core\"\nimport {\n  OKXBtcProvider,\n  OKXUniversalProvider,\n  OKXCosmosProvider,\n  OKXTonProvider,\n  OKXTronProvider,\n  OKXStarknetProvider\n} from \"@okxconnect/universal-provider\"\nimport {OKXSolanaProvider} from \"@okxconnect/solana-provider\";\nimport {\n  Connection,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n  TransactionMessage,\n  VersionedTransaction\n} from '@solana/web3.js';\nimport {OKXSuiProvider as SuiAdapter} from \"@okxconnect/sui-provider\"\nimport QrcodeVue from 'qrcode.vue'\n\nimport {OKXAptosProvider} from \"@okxconnect/aptos-provider\";\nimport {Aptos, AptosConfig, Network} from \"@aptos-labs/ts-sdk\";\n\nimport BTCPanel from \"./components/BtcTransactionPanel.vue\";\nimport FractalPanel from \"./components/FractalTransactionPanel.vue\"\nimport SuiPanel from \"./components/SuiTransactionPanel.vue\";\nimport StarknetPanel from \"./components/StarknetTransactionPanel.vue\";\n\nimport {OKXUniversalConnectUI, THEME} from \"@okxconnect/ui\";\nimport {ethers} from 'ethers';\nimport VConsole from 'vconsole';\nimport nacl from \"tweetnacl\";\nconst { verifyADR36Amino } = require('@keplr-wallet/cosmos')\nconst { fromBech32 } = require('@cosmjs/encoding')\nimport { verifyPersonalMessageSignature } from '@mysten/sui/verify';\nimport {useShortLink} from \"@okxconnect/core\";\nimport TronTransactionPanel from \"@/components/TronTransactionPanel.vue\";\nimport {TronWeb} from \"tronweb\";\nimport { RpcProvider as StarknetRpcProvider, Account as StarknetAccount } from \"starknet\";\nimport { ref, toRaw } from \"vue\";\nnew VConsole();\n\nconst allChains = {\n  1: { name: \"Eth\", checked: false },\n  56: { name: \"BNB\", checked: false },\n  137: { name: \"Polygon\", checked: false },\n  122: { name: \"Fuse\", checked: false },\n  \"ton:-239\":{name: \"TON\",checked: false},\n  \"btc:mainnet\": { name: \"BTC\", checked: false },\n  \"sui:mainnet\": { name: \"Sui\", checked: false },\n  \"aptos:mainnet\": { name: \"Aptos\", checked: false },\n  \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\": {\n    name: \"Solana\",\n    checked: false,\n  },\n  \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\": {\n    name: \"Sol testnet\",\n    checked: false,\n  },\n  \"svm:70000062\": {\n    name: \"Sonic testnet\",\n    checked: false,\n  },\n  \"movement:testnet\": { name: \"Movement\", checked: false },\n  \"fractal:mainnet\": { name: \"Fractal\", checked: false },\n  \"cosmos:osmosis-1\": {name: \"Osmos\", checked: false},\n  \"cosmos:cosmoshub-4\": {name: \"Cosmos\", checked: false},\n  \"cosmos:pacific-1\": {name: \"SEI\", checked: false},\n  \"cosmos:abvdefg\": {name: \"cosmos:abvdefg\", checked: false},\n  \"tron:mainnet\": {name: \"tron\", checked: false},\n  997865: { name: \"Non Exist chain\", checked: false },\n  2020: { name: \"Ronin\", checked: false },\n  1666600000: { name: \"Harmony\", checked: false },\n  \"starknet:mainnet\": { name: \"starknet\", checked: false }\n};\n\nconst chainsThatCanAddRedirectParam = [\n  \"eip\"\n]\n\nvar optionChains = new Set([]);\nvar selectedModals = [\"before\", \"success\", \"error\"];\nvar selectedReturnStrategy = \"none\";\nvar selectedDeepLink = \"tg://resolve\";\nvar selectedLanguage = \"en_US\";\nvar selectedTheme = THEME.LIGHT;\n\n// import QrcodeVue from 'qrcode.vue'\nexport default {\n  name: \"App\",\n  components: {\n    TronTransactionPanel,\n    QrcodeVue,\n    BTCPanel,\n    FractalPanel,\n    SuiPanel,\n    StarknetPanel\n  },\n\n  setup() {\n    const sendBtnDisabled = ref(false)\n\n    return {\n      sendBtnDisabled\n    }\n  },\n  data: () => {\n    return {\n      activeTab: \"eip155:1\",\n      testTopic: \"\",\n      testPublicKey: \"\",\n      testProofPayload: \"\",\n      tonProofValue:\"\",\n      pendingDeepLink: \"-\",\n      logList: [],\n      connectReady: false,\n      connectStatusStr: \"Connect\",\n      syncAllAddressStr: \"syncAllAddress\",\n      connectInitStr: \"init test\",\n      disconnectStatusStr: \"Disconnect\",\n      localPubKey: \"\",\n      localSecKey: \"\",\n      testTransaction: \"\",\n      selectedChain: \"eip155:1\",\n      testTransactionStr: \"Send\",\n      walletAddress: \"\",\n      testboc: \"\",\n      ProofPayloadVerify: \"\",\n      showModal: false,\n      showVerifyRow: false,\n      qrValue: \"https://www.okx.com/download\",\n      currentStatus: \"\",\n      areChainsInit: false,\n      availableChains: allChains,\n      isOptionalChecked: (chainId) => {\n        return optionChains.has(chainId);\n      },\n      withUI: localStorage.getItem(\"autoRefresh\") != \"false\",\n      universalToTG: localStorage.getItem(\"universalToTG\") != \"false\",\n      modals: selectedModals,\n      returnStrategies: [\"none\", \"back\", \"deeplink\"],\n      returnStrategy: selectedReturnStrategy,\n      deeplink: selectedDeepLink,\n      locales: [\n        \"en_US\",\n        \"ru_RU\",\n        \"zh_CN\",\n        \"zh\",\n        \"ar_AE\",\n        \"cs_CZ\",\n        \"de_DE\",\n        \"es_ES\",\n        \"es_LAT\",\n        \"fr_FR\",\n        \"id_ID\",\n        \"it_IT\",\n        \"nl_NL\",\n        \"pl_PL\",\n        \"pt_BR\",\n        \"pt_PT\",\n        \"ro_RO\",\n        \"tr_TR\",\n        \"uk_UA\",\n        \"vi_VN\",\n        \"zh_TW\"\n      ],\n      selectedMethod:[],\n      selectedMethodData:[],\n      connectMethods:[\n        \"wallet_addEthereumChain(ETH)\",\n        \"personal_sign(ETH)\",\n        \"solana_signMessage(Sol mainnet)\",\n        \"sui_signMessage(Sui mainnet)\",\n        \"sui_signPersonalMessage(Sui mainnet)\",\n        \"btc_signMessage(BTC)\",\n        \"aptos_signMessage(aptos mainnet)\",\n        \"cosmos_signArbitrary(cosmoshub)\",\n        \"test_noSupport_eth(ETH)\",\n        \"tron_signMessage\",\n        \"tron_signMessageV2\",\n        \"starknet_signMessage\",\n        \"sync_all_addresses\"\n      ],\n\n      language: selectedLanguage,\n      theme: selectedTheme,\n      THEME: THEME,\n      redirect: selectedReturnStrategy,\n      redirectDeeplink: selectedDeepLink,\n      handleWithUI: (isChecked) => {\n        localStorage.setItem(\"autoRefresh\", `${isChecked}`);\n        location.reload();\n      },\n      handleUniversalToTG: (isChecked) => {\n        localStorage.setItem(\"universalToTG\", `${isChecked}`);\n      },\n      handleOptionChange: (chainId) => {\n        if (optionChains.has(chainId)) {\n          optionChains.delete(chainId);\n        } else {\n          optionChains.add(chainId);\n        }\n      },\n      starknetPanelTypedData: ''\n    };\n  },\n  computed: {\n    getWalletAddress: function () {\n      return this.walletAddress;\n    },\n  },\n  methods: {\n    isChecked(chainId) {\n      return this.selectedChains.has(chainId);\n    },\n\n    initChains(newChains) {\n      if (newChains.length > 0) {\n        const updatedChains = Object.assign({}, this.availableChains);\n        for (const chainId of newChains) {\n          if (updatedChains[chainId]){\n            updatedChains[chainId].checked = !updatedChains[chainId].checked;\n          }\n        }\n        this.availableChains = updatedChains;\n      }\n\n      this.areChainsInit = true;\n    },\n\n    async clickActiveTab(tab) {\n      const tabName = tab.props ? tab.props.name : tab.name;\n      this.selectedChain = tabName;\n      console.log(`已切换到链 :`, tabName);\n\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (tabName == \"starknet:mainnet\") {\n        this.sendBtnDisabled = true\n      }else {\n        this.sendBtnDisabled = false\n      }\n\n      window.provider.setDefaultChain(this.selectedChain);\n    },\n\n    async initBtnClicked() {\n      window.okxLogDebug = true\n      var initCall;\n      if (!this.withUI) {\n        initCall = OKXUniversalProvider.init({\n          dappMetaData: {\n            name: \"univer test dapp\",\n            icon: \"https://avatars.githubusercontent.com/u/37784886\",\n          },\n        });\n      } else {\n        initCall = OKXUniversalConnectUI.init({\n          dappMetaData: {\n            icon: \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\",\n            name: \"OKX WalletConnect UI Demo\",\n          },\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: 'all',\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme\n          },\n        });\n      }\n\n      initCall.then((provider) => {\n        window.provider = provider;\n        window.tonProvider = new OKXTonProvider(window.provider);\n        window.tonProvider.onStatusChange((walletInfo) => {\n              console.log('TONConnection onStatusChange:', JSON.stringify(walletInfo));\n            }, (err) => {\n              console.log('TONConnection onStatusChange error:', err);\n            }\n        )\n\n        if (window.provider instanceof OKXUniversalConnectUI) {\n          window.provider.onModalStateChange((state)=>{\n            console.log(`onModalStateChange   ${JSON.stringify(state)}`)\n          })\n        }\n\n        console.log(\"init finished:\", provider);\n        console.log(\"init finished session:\", JSON.stringify(provider.session));\n\n        if (provider.session?.namespaces) {\n          const newChains = [];\n          console.log(\"namespaces\", provider.session.namespaces);\n          Object.entries(provider.session.namespaces).forEach(([key, value]) => {\n            if (key === \"eip155\") {\n              value.chains.forEach((chain) => {\n                newChains.push(parseInt(chain.substring(7)));\n              });\n            }\n            else {\n              value.chains.forEach((chain) => {\n                newChains.push(chain);\n              });\n            }\n          });\n\n          console.log(\"existing chains:\", newChains);\n          this.initChains(newChains);\n        } else {\n          this.initChains([]);\n        }\n\n        provider.on(\"display_uri\", (uri) => {\n          if (!useShortLink()){\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>display_uri  ==> \", uri);\n        });\n\n        provider.on(\"connect_signResponse\", (items) => {\n          console.log(\"通知>>>connect_signResponse  ==> \", JSON.stringify(items));\n          this.verifyMessage(items)\n        })\n\n        provider.on(\"short_display_uri\", (uri) => {\n          if (useShortLink()){\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>short_display_uri  ==> \", uri);\n        });\n\n\n        provider.on(\"session_connecting\", () => {\n          if (useShortLink()){\n            alert(\"session_connecting\")\n          }\n          console.log(\"通知>>>session_connecting  ==> \");\n        });\n\n        provider.on(\"connect\", (session) => {\n          console.log(\"通知>>>get connect session\", session);\n        });\n        provider.on(\"reconnect\", (session) => {\n          console.log(\"通知>>>get reconnect session\", session);\n          this.walletAddress = \"connected\";\n        });\n        provider.on(\"disconnect\", ({ topic }) => {\n          console.log(`通知>>>get disconnect  ${topic}`);\n          this.walletAddress = \"disconnecteddddd\";\n        });\n        provider.on(\"session_delete\", ({ topic }) => {\n          console.log(`通知>>>get session_delete  ${topic}`);\n        });\n        provider.on(\"session_update\", (session) => {\n          console.log(`通知>>>get session_update `, JSON.stringify(session));\n        });\n      });\n    },\n\n    async connectBtnClicked() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        this.testTonSdk();\n      } else {\n        console.log(`connectBtnClicked provider not finish init`);\n      }\n    },\n\n    async syncAllAddressClick() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        if (window.provider instanceof OKXUniversalProvider){\n          if (window.provider.connected()){\n            try {\n              let message = await window.provider.syncAllAddresses()\n              if (typeof message == \"string\") {\n                this.testboc = message\n              } else {\n                this.testboc = JSON.stringify(message)\n              }\n            }catch (e) {\n              this.testboc = JSON.stringify(e)\n            }\n          }else{\n            this.testboc = \"not connected\"\n          }\n        }\n\n      } else {\n        console.log(`syncAllAddress provider not finish init`);\n      }\n    },\n\n    async disconnectAction() {\n      try {\n        console.log(\"get disconnect wallet btn clicked\");\n        // await TON.disconnect();\n        var provider = window.provider;\n        await provider.disconnect();\n        this.walletAddress = \"disconnected\";\n      } catch (error) {\n        console.log(\"Disconnect  error ==>> \", error.message);\n        this.currentStatus = error.message;\n      }\n    },\n\n    async eth_requestAccounts() {\n      var data = { method: \"eth_requestAccounts\" };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_chainId() {\n      var data = { method: \"eth_chainId\" };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_switchEthereumChain() {\n      var data = { method: \"wallet_switchEthereumChain\" };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_addEthereumChain() {\n      var data = {\n        method: \"wallet_addEthereumChain\",\n        params: {\n          blockExplorerUrls: [\"https://explorer.fuse.io\"],\n          chainId: \"0x7a\",\n          chainName: \"Fuse\",\n          nativeCurrency: { name: \"Fuse\", symbol: \"FUSE\", decimals: 18 },\n          rpcUrls: [\"https://rpc.fuse.io\"],\n        },\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n    async personal_sign() {\n      if (this.selectedChain === \"eip155:1\") {\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0x1ca023f10e157d148deed210f8bee193657a1eaa7f187909e20a9dc3b071dbc364c41fde37960c05093359f410a061ec8a7dca8c0c39fc7c1e24de8a3329775d1b\n\n        var accounts = await window.provider.request(\n          { method: \"eth_requestAccounts\" },\n          \"eip155:1\"\n        );\n        var address = accounts[0];\n        console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n        var dataETH = {\n          method: \"personal_sign\",\n          params: [\n            \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n            address,\n          ],\n        };\n\n        this.testTransaction = JSON.stringify(dataETH);\n      } else if (\n        this.selectedChain === \"eip155:137\" ||\n        this.selectedChain === \"eip155:122\"\n      ) {\n        // method\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0xebda9cfa2af43999058dffa0107031d1ef7fc0252dca85dcbd22ea097af922ca39b64d509ef61ce42b7641c5840b8a80337ffd1411b13e87e2260a3f1b6c151c1b\n\n        var dataPolygon = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n        this.testTransaction = JSON.stringify(dataPolygon);\n      } else if (this.selectedChain === \"eip155:56\") {\n        var data = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n\n        this.testTransaction = JSON.stringify(data);\n      }\n    },\n\n    async eth_sendTransaction_swap() {\n      var data = {\n        method: \"eth_sendTransaction\",\n        chainId: \"eip155:122\",\n        params: {\n          value: \"0x38d7ea4c68000\",\n          gas: \"0x2665f\",\n          to: \"0xf2614A233c7C3e7f08b1F887Ba133a13f1eb2c55\",\n          from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n          data: \"0x2646478b000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00000000000000000000000000000000000000000000000000038d7ea4c68000000000000000000000000000620fd5fa44be6af63715ef4e65ddfa0387ad13f5000000000000000000000000000000000000000000000000000000000000001b000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000700301ffff0201602352A9Eb5234466Eac23E59e7B99bCaE79C39c0BE9e53fd7EDaC9F859882AfdDa116645287C629040BE9e53fd7EDaC9F859882AfdDa116645287C62900602352A9Eb5234466Eac23E59e7B99bCaE79C39c01f2F3e73be57031114dd1f4E75c1DD87658be7F0E000bb800000000000000000000000000000000\",\n        },\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_signTypedData_v4() {\n      // method\n      // eth_signTypedData\n      // address\n      // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n      // valid\n      // true\n      // result\n      // 0xa8bb3c6b33a119d2d567c7632195c21988df778006082742125a591f5c633f716107883a37f7de6531a6312a5f69022135bf46fe5ab77905b62c82b3395f985e1b\n      //\n\n      // var data = {\n      //   \"method\": \"eth_signTypedData_v4\",\n      //   \"params\": {\n      //     \"typedDataJson\":\"{\\\"types\\\":{\\\"EIP712Domain\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"version\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"chainId\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"name\\\":\\\"verifyingContract\\\",\\\"type\\\":\\\"address\\\"}],\\\"Person\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"wallet\\\",\\\"type\\\":\\\"address\\\"}],\\\"Mail\\\":[{\\\"name\\\":\\\"from\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"to\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"contents\\\",\\\"type\\\":\\\"string\\\"}]},\\\"primaryType\\\":\\\"Mail\\\",\\\"domain\\\":{\\\"name\\\":\\\"Ether Mail\\\",\\\"version\\\":\\\"1\\\",\\\"chainId\\\":1,\\\"verifyingContract\\\":\\\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\\\"},\\\"message\\\":{\\\"from\\\":{\\\"name\\\":\\\"Cow\\\",\\\"wallet\\\":\\\"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\\\"},\\\"to\\\":{\\\"name\\\":\\\"Bob\\\",\\\"wallet\\\":\\\"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\\\"},\\\"contents\\\":\\\"Hello, Bob!\\\"}}\"\n      // }}\n\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        this.selectedChain\n      );\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n      var data = {\n        method: \"eth_signTypedData_v4\",\n        params: [\n          address,\n          {\n            types: {\n              EIP712Domain: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"version\",\n                  type: \"string\",\n                },\n                {\n                  name: \"chainId\",\n                  type: \"uint256\",\n                },\n                {\n                  name: \"verifyingContract\",\n                  type: \"address\",\n                },\n              ],\n              Person: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"wallet\",\n                  type: \"address\",\n                },\n              ],\n              Mail: [\n                {\n                  name: \"from\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"to\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"contents\",\n                  type: \"string\",\n                },\n              ],\n            },\n            primaryType: \"Mail\",\n            domain: {\n              name: \"Ether Mail\",\n              version: \"1\",\n              chainId: 1,\n              verifyingContract: \"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\",\n            },\n            message: {\n              from: {\n                name: \"Cow\",\n                wallet: \"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\",\n              },\n              to: {\n                name: \"Bob\",\n                wallet: \"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\",\n              },\n              contents: \"Hello, Bob!\",\n            },\n          },\n        ],\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_sendTransaction_transfer() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            chainId: \"0x1\",\n            to: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            value: \"0x5af3107a4000\",\n            maxPriorityFeePerGas: \"0x3b9aca00\",\n            gas: \"0x5e56\",\n            maxFeePerGas: \"0x2643b9db8\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gasPrice: \"0x17003f6530\",\n            nonce: \"0x0d30\",\n            data: \"0x\",\n            value: \"0x00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasLimit: \"0x5208\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x5e56\",\n            value: \"0x5af3107a4000\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasPrice: \"0x3b9aca00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            chainId: \"0x38\",\n          },\n        };\n      }else if(this.selectedChain === \"eip155:122\"){\n         data =   {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            value: \"0x0\",\n            chainId: \"0x7a\",\n          }\n        }\n      }\n\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        this.selectedChain\n      );\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"to\"] = address;\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_approve() {\n      var data = {};\n\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000000000000022d473030f116ddee9f6b43ac78ba3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x582d872a1b094fc48f5de31d3b73f2d9be47def1\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000f6f8096ac575b0\",\n            to: \"0x0b3F868E0BE5597D5DB7fEB59E1CADBb0fdDa50a\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            value: \"0x0\",\n            gas: \"0xe117\",\n            gasPrice: \"0xb2d05e00\",\n            data: \"0x095ea7b300000000000000000000000031c2f6fcff4f8759b3bd5bf0e1084a055615c768ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x5CA42204cDaa70d5c773946e69dE942b85CA6706\",\n          },\n        };\n      }else if (this.selectedChain === 'eip155:122'){\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000000000000013b3\",\n            to: \"0x620fd5fa44BE6af63715Ef4E65DDFA0387aD13F5\",\n          },\n        };\n      }\n\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        this.selectedChain\n      );\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_mint() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x4cacb\",\n            data: \"0xa64dfa75000000000000000000000000ed688002f3797599db8b4feacfe8b1dda0df1c8d000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cecb15396825a895ff8da8fc2d2c77a234dccee00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f6261667962656968643737366b6177706e71336f6f6a6635693274787a76617737737164656b34616a776472637472703261366f626b70723773792f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x30795\",\n            data: \"0xa64dfa75000000000000000000000000341b3687f0309778f08f29336b2c4b9c38b9f110000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f62616679626569686a6279676b68747a71376b68377434336266686e676e793236337668766f6578716a6d6e377161716166366e717a64743777712f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      }\n\n      let str = JSON.stringify(data);\n      console.log(\"-----长度--->\", str.length);\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n          this.selectedChain\n      );\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_testRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n        `eip155:56`,\n        `https://eth-mainnet.g.alchemy.com/v2/NxUfYJUr-TQtEpLmSXhhD5pXn70GwsyV`\n      );\n      var data = {\n        method: \"eth_getBalance\",\n        params: [\"0x8D97689C9818892B700e27F316cc3E41e17fBeb9\", \"latest\"],\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_watchAsset() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xe0f63a424a4439cbe457d80e4f4b51ad25b2c56c\",\n              symbol: \"SPX6900\",\n              image:\n                \"https://assets.coingecko.com/coins/images/31401/standard/sticker_%281%29.jpg?1702371083\",\n              decimals: 8,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xeB51D9A39AD5EEF215dC0Bf39a8821ff804A0F01\",\n              symbol: \"LGNS\",\n              image: \"https://polygonscan.com/token/images/originlgns_32.png\",\n              decimals: 9,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0x031b41e504677879370e9dbcf937283a8691fa7f\",\n              symbol: \"FET\",\n              image: \"https://bscscan.com/token/images/fetch_32.png\",\n              decimals: 18,\n            },\n          },\n        };\n      }\n\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async ton_sendTransaction() {\n      var data  = {\n        \"messages\":[{\"address\":\"EQARULUYsmJq1RiZ-YiH-IJLcAZUVkVff-KBPwEmmaQGH6aC\",\"amount\":\"205000000\",\"payload\":\"te6cckEBAgEAhwABbQ+KfqUAAADNgG7tIEATEtAIAO87mQKicbKgHIk4pSPP4k5xhHqutqYgAB7USnesDnCcECwbgQMBAJUlk4VhgBD3JEg1TUr75iTijBghOKm/sxNDXUBl7CD6WMut0Q85x4RafwA/Es89DBXoTxuqxVFxyBbzt9Rav2HBUKl7hmkvLuKHLBCW57aK\"}],\n        \"validUntil\":1792481054,\n        \"network\":'-239'}\n      this.testTransaction = JSON.stringify(data)\n    },\n    ton_getAccount() {\n      this.testTransaction = \"这里是同步获取 不再需要点击 <<发送交易>>\"\n      let result =   window.tonProvider.account()\n      if (result) {\n        this.testboc = JSON.stringify(result);\n      } else {\n        this.testboc = 'null'\n      }\n    },\n\n    async tonUniversalLog() {\n      console.log(\"ton 信息: tonProvider  connected:\",window.tonProvider.connected())\n      console.log(\"ton 信息: tonProvider  account:\",JSON.stringify(window.tonProvider.account()))\n      console.log(\"ton 信息: tonProvider  wallet:\",JSON.stringify(window.tonProvider.wallet()))\n    },\n\n    async sendTransactionAlert() {\n      //\n      const response = await fetch(`https://apitest.fireverse.ai/oauth/okx/getNonce?publicAddress=0x0cecb15396825a895ff8da8fc2d2c77a234dccee`);\n      const data = await response.json();\n      console.log(\"请求数据----\",JSON.stringify(data))\n      await this.personal_sign()\n      if (confirm(\"Are you want to sign message?\")) {\n        this.sendTransaction();\n      }\n\n      // window.open(\"https://www.okx.com/download?deeplink=okx%3A%2F%2Fweb3%2Fwallet%2Fconnect\",'_self')\n    },\n\n    async sendTransaction() {\n      if (this.selectedChain.startsWith(\"aptos\")\n          || this.selectedChain.startsWith(\"movement\")\n          || this.selectedChain.startsWith(\"solana\")\n          || this.selectedChain.startsWith(\"sonic\")\n          || this.selectedChain.startsWith(\"cosmos\")) {\n        return\n      }\n      console.log(\"sendTransaction\", window.provider);\n      console.log(\"sendTransaction内容11------\", this.testTransaction);\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (this.testTransaction && window.provider) {\n        // eslint-disable-next-line no-undef\n        const sendData = JSON.parse(this.testTransaction);\n        try {\n          console.log(\"sendTransaction-----22method>>\", sendData.method);\n\n          let chainId = \"eip155:1\";\n          if (this.selectedChain) {\n            chainId = this.selectedChain;\n            console.log(\n              \"sendTransaction-----this.selectedChain>>\",\n              this.selectedChain\n            );\n          }\n          console.log(\"windowOpen[click_1]: \", Date.now());\n          if (chainId == \"sui:mainnet\") {\n            const adapter = new SuiAdapter(window.provider);\n            var suiResult = \"invalid result\";\n            if (this.currentSuiMethod == 'sui_getAccount') {\n              let result = adapter.getAccount()\n              if (typeof result == \"string\") {\n                this.testboc = result\n              } else {\n                this.testboc = JSON.stringify(result)\n              }\n            }\n            if (this.currentSuiMethod == \"sui_signTransaction\") {\n              suiResult = await adapter.signTransaction(\n                this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signAndExecuteTransaction\") {\n              suiResult = await adapter.signAndExecuteTransaction(\n                this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signMessage\") {\n              console.log(\"signMessage----\", this.currentSuiTransaction);\n              suiResult = await adapter.signMessage(this.currentSuiTransaction);\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_signPersonalMessage\") {\n              console.log(\n                \"signPersonalMessage----\",\n                this.currentSuiTransaction\n              );\n              suiResult = await adapter.signPersonalMessage(\n                this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_testRpc\") {\n              console.log(\"test rpc----\", this.currentSuiTransaction);\n              console.log(\n                `请求数据发送 rpc ----->> ${JSON.stringify(sendData)}`\n              );\n              const res = await window.provider.request(sendData, chainId);\n              console.log(`请求数据回调 rpc ----->> ${JSON.stringify(result)}`);\n              if (typeof res == \"string\") {\n                this.testboc = res;\n              } else {\n                this.testboc = JSON.stringify(res);\n              }\n            }\n            console.log(\"windowOpen[click_2]: \", Date.now());\n            return;\n          }else if(chainId === \"ton:-239\"){\n            console.log(\n                `请求数据发送 sendTransaction ---ton-->> ${JSON.stringify(sendData)}`\n            );\n            let result =  await window.tonProvider.sendTransaction(sendData)\n            console.log(\n                `请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`\n            );\n            if (typeof result == \"string\") {\n              this.testboc = result;\n            } else {\n              this.testboc = JSON.stringify(result);\n            }\n            return\n          }\n\n          if (chainId == 'btc:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var btcResult = 'invalid result'\n\n            if (this.currentBtcMethod == 'btc_signMessage') {\n              btcResult = await btcAdapter.signMessage(chainId, this.currentBtcTransaction[\"signStr\"])\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_send') {\n              btcResult = await btcAdapter.send(chainId, this.currentBtcTransaction)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signPsbt') {\n              btcResult = await btcAdapter.signPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n\n              this.hexToBase64(btcResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentBtcMethod == 'btc_signPsbts') {\n              btcResult = await btcAdapter.signPsbts(chainId, this.currentBtcTransaction.psbtHexs, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_sendInscription') {\n              btcResult = await btcAdapter.sendInscription(chainId, this.currentBtcTransaction.address, this.currentBtcTransaction.inscriptionId, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signAndPushPsbt') {\n              btcResult = await btcAdapter.signAndPushPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            }else if (this.currentBtcMethod == 'btc_sendBitcoin') {\n              btcResult = await btcAdapter.sendBitcoin(chainId, this.currentBtcTransaction.toAddress, this.currentBtcTransaction.satoshis, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            }else if (this.currentBtcMethod == 'btc_getAccount'){\n              btcResult = btcAdapter.getAccount(chainId)\n              this.testboc = JSON.stringify(btcResult)\n            }\n\n            return\n          }\n\n          if (chainId == 'fractal:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var fractalResult = 'invalid result'\n\n            if (this.currentFractalMethod == 'fractal_signMessage') {\n              fractalResult = await btcAdapter.signMessage(chainId, this.currentFractalTransaction['signStr'])\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_send') {\n              fractalResult = await btcAdapter.send(chainId, this.currentFractalTransaction)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signPsbt') {\n              fractalResult = await btcAdapter.signPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.hexToBase64(fractalResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentFractalMethod == 'fractal_signPsbts') {\n              fractalResult = await btcAdapter.signPsbts(chainId, this.currentFractalTransaction.psbtHexs, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_sendInscription') {\n              fractalResult = await btcAdapter.sendInscription(chainId, this.currentFractalTransaction.address, this.currentFractalTransaction.inscriptionId, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signAndPushPsbt') {\n              fractalResult = await btcAdapter.signAndPushPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            }else if (this.currentFractalMethod == 'fractal_sendBitcoin') {\n              fractalResult = await btcAdapter.sendBitcoin(chainId, this.currentFractalTransaction.toAddress, this.currentFractalTransaction.satoshis, this.currentFractalTransaction.options)\n\n              this.testboc = JSON.stringify(fractalResult)\n            }else if (this.currentFractalMethod == 'fractal_getAccount'){\n              fractalResult = btcAdapter.getAccount(chainId)\n              this.testboc = JSON.stringify(fractalResult)\n            }\n\n            return\n          }\n\n          console.log(`请求数据发送 sendTransaction ----->> ${JSON.stringify(sendData)}`)\n          var result = await window.provider.request(sendData, chainId)\n          console.log(`请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`)\n\n          console.log(\"windowOpen[click_3]: \", Date.now());\n          if (typeof result == \"string\") {\n            this.testboc = result;\n          } else {\n            this.testboc = JSON.stringify(result);\n          }\n          console.log(\"方法数据回调 --this.testboc--\", this.testboc);\n        } catch (error) {\n          console.error(\"方法数据回调失败 --Error--\", error.message);\n\n          if (error.code === OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n            this.testboc = error.message;\n          } else {\n            this.testboc = \"wrong signature！\" + error.message;\n          }\n        }\n      } else {\n        alert(\"Please input transaction data\");\n      }\n    },\n\n    hexToBase64(hexStr) {\n      var bytes = [];\n      for (var i = 0; i < hexStr.length; i += 2) {\n        bytes.push(parseInt(hexStr.substr(i, 2), 16));\n      }\n      const buffer = new Uint8Array(bytes)\n      const blob = new Blob([buffer]);\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = function (e) {\n          var base64Data = e.target.result.split(\",\")[1]\n          resolve(base64Data);\n        };\n        reader.onerror = function (e) {\n          reject(e);\n        };\n        reader.readAsDataURL(blob);\n      });\n    },\n    testBase64UrlSafe(){\n      let datatest = {\"protocolVer\":1,\"topic\":\"8a7a4c3be73802d0ae2587123ade7bb79f27433b9aa3ca589a2208a2089eecfd\",\"clientId\":\"5f1bbf9eac92160affa7ef04d0a710817ddb6d8c22ebbd6263e86f059930b404\",\"requestId\":\"1731383250054\",\"dAppInfo\":{\"url\":\"connect.oker.vip\",\"origin\":\"https://connect.oker.vip\",\"name\":\"univer test dapp\",\"icon\":\"https://avatars.githubusercontent.com/u/37784886\"},\"requests\":[{\"name\":\"requestAccounts\",\"requiredNamespaces\":[{\"namespace\":\"aptos\",\"chains\":[\"aptos:637\"]}],\"optionalNamespaces\":[],\"connectRequestMethods\":[{\"chainId\":\"aptos:637\",\"method\":\"aptos_signMessage\",\"params\":{\"data\":{\"address\":true,\"application\":true,\"chainId\":true,\"message\":\"123 中文测试!\",\"nonce\":\"1234\"},\"applicationUrl\":\"https://connect.oker.vip\",\"prefix\":\"APTOS\",\"aptosChainId\":\"1\"}}]}],\"redirect\":\"none\"}\n      let json = JSON.stringify(datatest)\n      const utf8Array = new TextEncoder().encode(json);\n      let binary = '';\n      utf8Array.forEach(byte => {\n        binary += String.fromCharCode(byte);\n      });\n\n      let firstStr =  btoa(binary)\n      console.log(\"字符串编码1>>>>\",firstStr)\n      firstStr = firstStr.replace(/\\+/g, '-')  // 替换 '+'\n      console.log(\"字符串编码2>>>>\",firstStr)\n      firstStr = firstStr.replace(/\\//g, '_')  // 替换 '/'\n      console.log(\"字符串编码3>>>>\",firstStr)\n      firstStr = firstStr.replace(/=+$/, '');  // 移除 '=';\n      console.log(\"字符串编码4>>>>\",firstStr)\n\n      let showUrl =  getUniversalLink(getAppWalletDeepLink(firstStr))\n      console.log(\"字符串编码5>>>>\",showUrl)\n      this.qrValue = showUrl;\n      this.showModal = true;\n    },\n\n\n    async testTonSdk() {\n      // 1. connect\n      //  create sub providers for each namespace/chain\n      let nameSpacesChains = [];\n      let optSpaceChains = [];\n\n      let solanaChains = [\n        \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n        \"svm:70000062\",\n      ];\n      let hasEip155, hasSolana, hasSui, hasBtc, hasAptos, hasTon, hasCosmos, hasTron, hasStarknet = false\n\n      let suiChains = [\n        \"sui:mainnet\",\n      ];\n\n      let btcChains = [\n        \"btc:mainnet\",\n        \"fractal:mainnet\"\n      ];\n\n      const chains = Object.entries(this.availableChains)\n          .filter((chain) => chain[1].checked)\n          .map((chain) => chain[0]);\n      console.log(`chains  ===> ${chains.values()}`)\n      chains.forEach(function (chainId) {\n        console.log(`chains.forEach chainId  ===> ${chainId}`)\n\n        if (solanaChains.includes(chainId)) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"ton\")) {\n          nameSpacesChains.push(chainId)\n          hasTon = true\n          return\n        }\n        if (typeof chainId == 'string' && (chainId.startsWith(\"aptos\") || chainId.startsWith(\"movement\"))) {\n          nameSpacesChains.push(chainId)\n          hasAptos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId)\n          hasSolana = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"cosmos\")) {\n          nameSpacesChains.push(chainId)\n          hasCosmos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"tron\")) {\n          nameSpacesChains.push(chainId)\n          hasTron = true\n          return\n        }\n\n        if (typeof chainId == 'string' && chainId.startsWith(\"starknet\")) {\n          nameSpacesChains.push(chainId)\n          hasStarknet = true\n          return\n        }\n\n        if (suiChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`);\n          nameSpacesChains.push(chainId);\n          hasSui = true;\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`)\n          nameSpacesChains.push(chainId)\n          hasBtc = true\n          return\n        }\n\n        hasEip155 = true\n        nameSpacesChains.push(`eip155:${chainId}`)\n      })\n\n\n      optionChains.forEach(function (chainId) {\n        if (solanaChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n        if (typeof chainId == \"string\" && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (suiChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          optSpaceChains.push(chainId)\n          return\n        }\n\n        if (chainId.startsWith('ton')) {\n          optSpaceChains.push(chainId)\n          return\n        }\n\n        optSpaceChains.push(`eip155:${chainId}`)\n      })\n\n      console.log(`namespaceChains  ===> ${JSON.stringify(nameSpacesChains)}`);\n      var connectData = {};\n      if (nameSpacesChains && nameSpacesChains.length > 0) {\n        var requireData = {};\n\n        if (hasEip155) {\n          requireData.eip155 = {\n            chains: nameSpacesChains.filter((item) =>\n              item.startsWith(\"eip155\")\n            ),\n            defaultChain: nameSpacesChains.filter((item) =>\n              item.startsWith(\"eip155\")\n            )[0],\n          };\n        }\n        if (hasSolana) {\n          requireData.solana = {\n            chains: nameSpacesChains.filter(\n              (item) =>\n                item.startsWith(\"solana\") ||\n                item.startsWith(\"sonic\") ||\n                item.startsWith(\"svm\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n              (item) =>\n                item.startsWith(\"solana\") ||\n                item.startsWith(\"sonic\") ||\n                item.startsWith(\"svm\")\n            )[0],\n          };\n        }\n\n        if (hasCosmos) {\n          requireData.cosmos = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            )[0],\n          }\n        }\n        if (hasTron) {\n          requireData.tron = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            )[0],\n          }\n        }\n        if (hasStarknet) {\n          requireData.starknet = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"starknet\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"starknet\")\n            )[0],\n          }\n        }\n        if (hasTon) {\n\n          //\n          let tonParams = {\n            ton_addr:{\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue){\n            tonParams = {\n              ton_addr:{\n                name: 'ton_addr',\n              },\n              ton_proof:{\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          requireData.ton = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"ton\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"ton\"))[0],\n            params:tonParams\n          };\n        }\n\n        if (hasSui) {\n          requireData.sui = {\n            chains: nameSpacesChains.filter((item) => item.startsWith(\"sui\")),\n            defaultChain: nameSpacesChains.filter((item) =>\n              item.startsWith(\"sui\")\n            )[0],\n            rpcMap: {\n              \"sui:mainnet\": \"https://www.okx.com/fullnode/sui/discover/rpc\"\n            }\n          };\n        }\n        if (hasAptos) {\n          requireData.aptos = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\"))[0]\n          }\n        }\n\n        if (hasBtc) {\n          let btcChains = nameSpacesChains.filter(item => item.startsWith(\"btc\") || item.startsWith(\"fractal\"))\n          requireData.btc = {\n            chains: btcChains,\n            defaultChain: btcChains[0]\n          }\n        }\n        console.log(`requireData  ===> ${JSON.stringify(requireData)}`)\n        connectData['namespaces'] = requireData;\n        console.log(JSON.stringify(connectData))\n      }\n\n      if (optSpaceChains && optSpaceChains.length > 0) {\n        const optData = {};\n\n        const eip155Chains = optSpaceChains.filter((item) => item.startsWith(\"eip155\"));\n        if (eip155Chains.length > 0) {\n          optData[\"eip155\"] = {\n            chains: eip155Chains,\n            defaultChain: eip155Chains[0],\n          };\n        }\n\n        const solanaChains = optSpaceChains.filter((item) => item.startsWith(\"solana\"));\n        if (solanaChains.length > 0) {\n          optData[\"solana\"] = {\n            chains: solanaChains,\n            defaultChain: solanaChains[0],\n          };\n        }\n\n        const tonChains = optSpaceChains.filter((item) => item.startsWith(\"ton\"));\n        if (tonChains.length > 0) {\n\n          let tonParams = {\n            ton_addr:{\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue){\n            tonParams = {\n              ton_addr:{\n                name: 'ton_addr',\n              },\n              ton_proof:{\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          optData[\"ton\"] = {\n            chains: tonChains,\n            defaultChain: tonChains[0],\n            params: tonParams\n          };\n        }\n\n        const btcChains = optSpaceChains.filter((item) => item.startsWith(\"btc\"));\n        if (btcChains.length > 0) {\n          optData[\"btc\"] = {\n            chains: btcChains,\n            defaultChain: btcChains[0],\n          };\n        }\n\n        connectData[\"optionalNamespaces\"] = optData;\n      }\n\n      if (nameSpacesChains.length === 0 && optSpaceChains.length === 0) {\n        //未选择链\n        alert(\"Please select a chain from above to continue\");\n        return;\n      }\n      console.log(\"=====>connectData \");\n      console.log(connectData);\n\n      var connectMethod;\n      let signMethods = this.getCurrentSelectedMethodData();\n      if (window.provider instanceof OKXUniversalConnectUI) {\n\n        if (signMethods && signMethods.length>0){\n          connectMethod = window.provider.openModalAndSign(connectData,JSON.parse(JSON.stringify(signMethods)));\n        }else {\n          connectMethod = window.provider.openModal(connectData);\n        }\n      } else {\n        if (this.universalToTG){\n          connectData.sessionConfig = {\n            useMini:true,\n            openUniversalUrl:true,\n            tmaReturnUrl:'back'\n          }\n        }else{\n          connectData.sessionConfig = {\n            redirect: selectedReturnStrategy\n          }\n        }\n        if (signMethods && signMethods.length>0){\n          connectMethod = window.provider.connectAndSign(connectData,JSON.parse(JSON.stringify(signMethods)));\n        }else {\n          connectMethod = window.provider.connect(connectData);\n        }\n      }\n\n      await connectMethod\n        .then((result) => {\n          // 2. set defaul chain\n          this.walletAddress = \"connected\";\n          if (this.isPC()) {\n            this.showModal = false;\n          }\n          if (result){\n            this.testboc = JSON.stringify(result)\n          }\n\n          if (window.provider.session && window.provider.session.namespaces){\n            let ton = window.provider.session.namespaces[\"ton\"];\n          console.log(\"是否包含ton\",ton)\n            if (ton){\n              this.tonUniversalLog()\n            }\n          }\n        })\n        .catch((error) => {\n          if (error.code == 301) {\n            setTimeout(() => {\n              alert(error.message)\n            }, 0.5);\n          } else if (error.message){\n            alert(error.message)\n          }\n          console.error(\"发生了错误：\", error);\n        });\n    },\n\n    getCurrentSelectedMethodData(){// 连接签名\n      var methodList = [];\n      this.selectedMethod.forEach(method =>{\n        switch (method) {\n          case \"wallet_addEthereumChain(ETH)\":\n            methodList.push({\n              method: \"wallet_addEthereumChain\",\n              chainId:\"eip155:1\",\n              params: {\n                blockExplorerUrls: [\"https://explorer.fuse.io\"],\n                chainId: \"0x7a\",\n                chainName: \"Fuse\",\n                nativeCurrency: { name: \"Fuse\", symbol: \"FUSE\", decimals: 18 },\n                rpcUrls: [\"https://rpc.fuse.io\"],\n              },\n            })\n            break;\n          case \"personal_sign(ETH)\":\n            methodList.push(\n              {\n                method: \"personal_sign\",\n                chainId: \"eip155:1\",\n                params: [\n                  \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n                ],\n              });\n            break;\n          case \"solana_signMessage(Sol mainnet)\":\n            methodList.push(\n              {\n                \"chainId\": \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n                \"method\": \"solana_signMessage\",\n                \"params\": {\n                  \"message\": \"Hello Solana\",\n                }\n              }\n            );\n            break;\n          case \"sui_signMessage(Sui mainnet)\":\n          case \"sui_signPersonalMessage(Sui mainnet)\": {\n            let suiData = [\n              76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n              109, 111, 118, 101,\n            ];\n            let uint8Array = new Uint8Array(suiData);\n            let currentMethod = \"sui_signMessage\";\n            this.currentSuiTransaction = {\n              message:uint8Array\n            }\n\n            if(method.startsWith(\"sui_signPersonalMessage\")){\n              currentMethod = \"sui_signPersonalMessage\";\n            }\n            methodList.push(\n                {\n                  method: currentMethod,\n                  chainId: \"sui:mainnet\",\n                  params: {\n                    message: uint8Array,\n                  }\n                }\n            );\n            break;\n          }\n          case \"btc_signMessage(BTC)\":\n            methodList.push(\n              {\n                method: \"btc_signMessage\",\n                chainId: \"btc:mainnet\",\n                params: {\n                  message: \"Welcome to BTC\"\n                }\n              }\n            )\n            break;\n          case \"aptos_signMessage(aptos mainnet)\":\n            methodList.push(\n              {\n                \"chainId\": \"aptos:mainnet\",\n                \"method\": \"aptos_signMessage\",\n                \"params\": {\n                  address: true,\n                  application: true,\n                  chainId: true,\n                  message: \"Hello Aptos\",\n                  nonce: \"1234\"\n                }\n              }\n            )\n            break;\n          case \"cosmos_signArbitrary(cosmoshub)\":\n            methodList.push(\n                {\n                  \"chainId\": \"cosmos:cosmoshub-4\",\n                  \"method\": \"cosmos_signArbitrary\",\n                  \"params\": {\n                    message: \"test cosmos\"\n                  }\n                }\n            )\n\n            break;\n          case \"test_noSupport_eth(ETH)\":\n            methodList.push(\n                {\n                  chainId: \"eip155:1\",\n                  method: \"test_noSupport_eth\",\n                  params: {\n                    message: \"test hello\",\n                  }\n                }\n            )\n            break;\n          case \"sync_all_addresses\":\n            methodList.push(\n                {\n                  method: \"sync_all_addresses\",\n                });\n            break;\n          case \"tron_signMessage\":\n            methodList.push(\n                {\n                  chainId:\"tron:mainnet\",\n                  method: \"tron_signMessage\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n          case \"tron_signMessageV2\":\n            methodList.push(\n                {\n                  chainId:\"tron:mainnet\",\n                  method: \"tron_signMessageV2\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n\n            //\n          case \"starknet_signMessage\": {\n            const signData = {\n              \"domain\": {\n                \"chainId\": \"0x534e5f4d41494e\",\n                \"name\": \"STRKFarm\",\n                \"version\": \"1\"\n              },\n              \"message\": {\n                \"document\": \"app.strkfarm.xyz/tnc/v1\",\n                \"message\": \"Read and Agree T&C\"\n              },\n              \"primaryType\": \"Tnc\",\n              \"types\": {\n                \"StarkNetDomain\": [\n                  {\n                    \"name\": \"name\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"version\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"chainId\",\n                    \"type\": \"felt\"\n                  }\n                ],\n                \"Tnc\": [\n                  {\n                    \"name\": \"message\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"document\",\n                    \"type\": \"felt\"\n                  }\n                ]\n              }\n            }\n            methodList.push({\n              chainId:\"starknet:mainnet\",\n              method: \"starknet_signMessage\",\n              params: {\n                accountAddress: \"\",\n                typedData: signData\n              }\n            })\n          }\n            break\n          default:\n\n            break;\n        }\n      })\n      this.selectedMethodData = methodList\n      return methodList\n\n    },\n\n    closeModal() {\n      this.showModal = false;\n    },\n\n    isPC() {\n      const userAgentInfo = navigator.userAgent;\n      console.log(\"current device ua is ===>\", userAgentInfo);\n\n      const Agents = [\n        \"Android\",\n        \"iPhone\",\n        \"SymbianOS\",\n        \"Windows Phone\",\n        \"iPad\",\n        \"iPod\",\n      ];\n      let flag = true;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = false;\n          break;\n        }\n      }\n      return flag;\n    },\n    isSafariOrChrome() {\n      const userAgentInfo = navigator.userAgent;\n      const Agents = [\"Safari\", \"Chrome\"];\n      let flag = false;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = true;\n          break;\n        }\n      }\n      return flag;\n    },\n\n    /// solana\n    async sol_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      try {\n        let data = {\n          method: \"solana_signMessage\",\n          params: {\n            message: \"Hello Solana\",\n            pubkey: \"\",\n          },\n        };\n        this.testTransaction = JSON.stringify(data);\n        let provider = new OKXSolanaProvider(window.provider);\n\n        let message = await provider.signMessage(\n            \"Hello Solana\",\n            this.selectedChain\n        );\n        console.log(\"solana_signMessage Result:\",JSON.stringify(message))\n        const result1 = nacl.sign.detached.verify(\n            new TextEncoder().encode(\"Hello Solana\"),\n            message.signature,\n            new PublicKey(message.publicKey).toBytes()\n        );\n        console.log(result1)\n\n        if (typeof message == \"string\") {\n          this.testboc = result1;\n        } else {\n          this.testboc = result1;\n        }\n      }catch (e) {\n        console.log(\"solana_signMessage error:\",JSON.stringify(e))\n        this.testboc = e.message\n      }\n\n    },\n\n    async aptos_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      let data = {\n        address: true,\n        application: true,\n        chainId: true,\n        message: \"Hello Aptos\",\n        nonce: \"1234\"\n      }\n\n      let provider = new OKXAptosProvider(window.provider)\n      let message = await provider.signMessage(data, this.selectedChain)\n      this.testTransaction = JSON.stringify(data)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n          functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n          functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        },\n      });\n\n      // let data = {\n      //   \"arguments\": [\"100000\",[\"0\",\"0\",\"10533\"],[\"10\",\"5\",\"5\"],[\"false\",\"false\",\"true\"]],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x3\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\",\"0x73eb84966be67e4697fc5ae75173ca6c35089e802650f75422ab49a8729704ec::coin::DooDoo\",\"0x53a30a6e5936c0a4c5140daed34de39d17ca7fcae08f947c02e979cef98a3719::coin::LSD\",\"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::CurveV1\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x54cb0bb2c18564b86e34539b9f89cfe1186e39d89fce54e1cd007b8e61673a85::bin_steps::X80\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async sol_signVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(\n        provider.getAccount(\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\").address\n      );\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n         recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signTransaction(\n        transaction,\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAndSendVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n        transaction,\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllVersionedTransactions() {\n      let provider = new OKXSolanaProvider(window.provider);\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n        [transaction],\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signTransaction() {\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n         recentBlockhash: blockhash,\n      }).add(\n        SystemProgram.transfer({\n          fromPubkey: new PublicKey(provider.getAccount().address),\n          toPubkey: new PublicKey(provider.getAccount().address),\n          lamports: 1000,\n        })\n      );\n\n      this.testTransaction = safeJsonStringify(transaction)\n      let result = await provider.signTransaction(\n        transaction,\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllTransactions() {\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n        SystemProgram.transfer({\n          fromPubkey: new PublicKey(provider.getAccount().address),\n          toPubkey: new PublicKey(provider.getAccount().address),\n          lamports: \"100\",\n        })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n        [transaction],\n        this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    getSolConnect() {\n      let rpc = \"https://www.okx.com/fullnode/sol/discover/rpc\"\n      if (this.selectedChain === \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\") {\n        rpc = \"https://www.okx.com//fullnode/sol/discover/rpc\"\n      } else if (this.selectedChain === \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\"){\n        rpc = \"https://www.okx.com/fullnode/soltestnet/discover/rpc\"\n      } else if (this.selectedChain === \"svm:70000062\") {\n        rpc = \"https://www.okx.com/fullnode/sonic/testnet/discover/rpc\"\n      }\n      return rpc\n    },\n\n    async sol_signAndSendTransaction() {\n\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n        SystemProgram.transfer({\n          fromPubkey: new PublicKey(provider.getAccount().address),\n          toPubkey: new PublicKey(provider.getAccount().address),\n          lamports: \"100\",\n        })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n        transaction,\n        this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async cosmos_signArbitrary() {\n      let provider = new OKXCosmosProvider(window.provider)\n      let message = await provider.signArbitrary(this.selectedChain, provider.getAccount(this.selectedChain).address, \"test cosmos\")\n      if (typeof message == \"string\") {\n        this.testboc = message;\n      } else {\n        let isValid =  await this.cosmos_verifySignArbitrary(provider.getAccount(this.selectedChain).address,\"test cosmos\",message.signature, message.pub_key.value)\n        console.log(\"verify\",isValid)\n        this.testboc = \"verify:\" + isValid + JSON.stringify(message);\n      }\n    },\n\n    async cosmos_verifySignArbitrary(signer, data, signature, pubkey) {\n      try {\n        console.log(\"cosmos_verifySignArbitrary signer:\",signer)\n        console.log(\"cosmos_verifySignArbitrary data:\",JSON.stringify(data))\n        console.log(\"cosmos_verifySignArbitrary signature:\",signature)\n        console.log(\"cosmos_verifySignArbitrary pubkey:\",pubkey)\n\n        // 将bech32地址转换为公钥\n        const {prefix: prefixStr} = fromBech32(signer)\n\n        const signatureBuffer = Buffer.from(signature, 'base64');\n\n        const uint8Signature = new Uint8Array(signatureBuffer); // Convert the buffer to an Uint8Array\n\n        const pubKeyValueBuffer = Buffer.from(pubkey, 'base64'); // Decode the base64 encoded value\n\n        const pubKeyUint8Array = new Uint8Array(pubKeyValueBuffer); // Convert the buffer to an Uint8Array\n\n        // 验证签名\n        return await verifyADR36Amino(\n            prefixStr,\n            signer,\n            data,\n            pubKeyUint8Array,\n            uint8Signature\n        )\n      } catch (err) {\n        console.error('Verification failed:', err)\n        return false\n      }\n    },\n\n    async cosmos_signAmino(){\n      let provider = new OKXCosmosProvider(window.provider)\n      // const rpcUrl = 'https://osmosis-rpc.publicnode.com:443';\n      // const client = await StargateClient.connect(rpcUrl);\n      // const height = await client.getHeight();\n      // let address = provider.getAccount(this.selectedChain).address\n      // const sequence = await client.getSequence(address)\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      // let signDoc = makeSignDoc(\n      //     transaction.msgs,\n      //     transaction.fee,\n      //     this.selectedChain.split(\":\")[1],\n      //     transaction.memo,\n      //     transaction.accountNumber,\n      //     transaction.sequence,\n      // )\n      let signDoc = {\n        \"chain_id\": \"osmosis-1\",\n        \"account_number\": \"630104\",\n        \"sequence\": \"480\",\n        \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]},\n        \"msgs\": [{\n          \"type\": \"osmosis/poolmanager/swap-exact-amount-in\",\n          \"value\": {\n            \"sender\": \"osmo1u6lts9ng4etxj0zdaxsada6zgl8dudpgelmuyu\",\n            \"routes\": [{\n              \"pool_id\": \"1096\",\n              \"token_out_denom\": \"ibc/987C17B11ABC2B20019178ACE62929FE9840202CE79498E29FE8E5CB02B7C0A4\"\n            }, {\n              \"pool_id\": \"611\",\n              \"token_out_denom\": \"ibc/27394FB092D2ECCD56123C74F36E4C1F926001CEADA9CA97EA622B25F41E5EB2\"\n            }],\n            \"token_in\": {\"denom\": \"uosmo\", \"amount\": \"100\"},\n            \"token_out_min_amount\": \"8\"\n          }\n        }],\n        \"memo\": \"FE\",\n        \"timeout_height\": \"23603788\",\n        \"signOptions\": {\n          \"useOneClickTrading\": false,\n          \"preferNoSetFee\": true,\n          \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]}\n        }\n      }\n\n\n\n\n\n\n\n      // let signOption = {\n      //   memo: true, // optional\n      //   fee: true, // optional\n      //   gasRate: {\n      //     // optional\n      //     average: \"0.2\",\n      //     low: \"0.02\",\n      //     tiny: \"0.002\",\n      //   },\n      // }\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signAmino(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, signDoc)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    messageToBuffer(message) {\n      var buffer = Buffer.from([]);\n      try {\n        if (typeof message === \"string\") {\n          buffer = Buffer.from(message.replace(\"0x\", \"\"), \"hex\");\n        } else {\n          buffer = Buffer.from(message);\n        }\n      } catch (err) {\n        console.log(`messageToBuffer error: ${err}`);\n      }\n      return buffer;\n    },\n\n\n\n    async cosmos_signDirect() {\n      let provider = new OKXCosmosProvider(window.provider)\n\n      let signDoc = {\n        \"bodyBytes\": this.messageToBuffer(\"0x0ac1010a292f6962632e6170706c69636174696f6e732e7472616e736665722e76312e4d73675472616e736665721293010a087472616e7366657212096368616e6e656c2d301a0d0a05756f736d6f120431303030222b6f736d6f3175366c7473396e67346574786a307a64617873616461367a676c386475647067656c6d7579752a2d636f736d6f733175366c7473396e67346574786a307a64617873616461367a676c386475647067337967766a773207080410ebe3f90a3880b0bcafd18cec8218\"),\n        \"authInfoBytes\": this.messageToBuffer(\"0x0a510a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a2102446e19e94ac0e83ea896d2712507577eb39fbdd2d6ae9f0fc0b9759f1fbaba9012040a02080118e00312140a0e0a05756f736d6f1205323530303010859a11\"),\n        \"chainId\": \"osmosis-1\",\n        \"accountNumber\": \"630104\",\n      }\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signDirect(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, transaction)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    sui_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentSuiTransaction = params\n      this.currentSuiMethod = flag\n    },\n\n    btc_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentBtcTransaction = params\n      this.currentBtcMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n\n    fractal_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentFractalTransaction = params\n      this.currentFractalMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n    tron_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n    tron_generateTransactionParams(params){\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n\n    starknet_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n\n    starknet_generateTransactionParams(params) {\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n\n    handleModalsSelect(modals) {\n      selectedModals = modals;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: modals.length === 3 ? \"all\" : modals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n\n    handleReturnStrategySelect(returnStrategy) {\n      selectedReturnStrategy = returnStrategy === \"deeplink\" ? this.deeplink : returnStrategy;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = selectedReturnStrategy;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: selectedReturnStrategy\n          };\n        }\n      }\n    },\n\n    handleReturnStrategyDeeplink(deeplink) {\n      console.log('handleReturnStrategyDeeplink', deeplink)\n      selectedReturnStrategy = deeplink;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: deeplink,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = deeplink;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: deeplink\n          };\n        }\n      }\n    },\n\n    handleLanguageSelect(language) {\n      selectedLanguage = language;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: language,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n    handleConnectMethodsSelect() {\n      console.log(\"当前的方法 this.selectedMethod>>>>\",this.selectedMethod);\n    },\n\n    eth_verifyMessage(message, signature,ethAddress) {\n      console.log(\"eth_verifyMessage   message>>>\",message)\n      console.log(\"eth_verifyMessage   signature>>>\",signature)\n      console.log(\"eth_verifyMessage   ethAddress>>>\",ethAddress)\n      if (!message || !signature){\n        return \"\"\n      }\n      let originalMessage = message\n      if (message.startsWith(\"0x\")){\n        originalMessage = originalMessage.replace(/^0x/, '');\n        let str = '';\n        for (let i = 0; i < originalMessage.length; i += 2) {\n          const byte = originalMessage.slice(i, i + 2);\n          str += String.fromCharCode(parseInt(byte, 16));\n        }\n        originalMessage = str\n      }\n      console.log(\"eth_verifyMessage   originalMessage>>>\",originalMessage)\n\n      // const messageHash = ethers.utils.hashMessage(originalMessage);\n      const recoveredAddress = ethers.utils.verifyMessage(originalMessage, signature);\n      console.log(\"eth_verifyMessage recoveredAddress:\", recoveredAddress);\n      return recoveredAddress.toLowerCase() === ethAddress.toLowerCase();\n    },\n\n    async verifyMessage(list){ //连接验签\n\n        if (window.provider && window.provider.session && list && list.length>0){\n          let verifyList = {}\n          for (let methodItem of list){\n            if (\"result\" in methodItem && \"method\" in methodItem){\n              let requestItme = this.selectedMethodData.filter(item => item.method === methodItem.method)[0];\n              console.log(\"验证签名 请求>>>:\", JSON.stringify(requestItme));\n              console.log(\"验证签名 结果>>>:\", JSON.stringify(methodItem));\n              if (methodItem.method === \"personal_sign\"){\n                let ethAddress = await window.provider.request({ method: \"eth_requestAccounts\" },methodItem.chainId)\n                ethAddress = ethAddress[0];\n                console.log(\"验证eth 钱包地址>>>:\", ethAddress);\n                let ethMessage = requestItme.params[0]\n                console.log(\"验证eth 签名消息体>>:\", JSON.stringify(ethMessage));\n                verifyList[methodItem.method] = this.eth_verifyMessage(ethMessage,methodItem.result,ethAddress)\n              }else if(methodItem.method === \"solana_signMessage\"){\n                let solanaMessage = methodItem.result\n                if (\"signature\" in solanaMessage && \"publicKey\" in solanaMessage){\n                  const verifySol = nacl.sign.detached.verify(\n                      new TextEncoder().encode(\"Hello Solana\"),\n                      solanaMessage.signature,\n                      new PublicKey(solanaMessage.publicKey).toBytes()\n                  );\n                  verifyList[methodItem.method] = verifySol\n                }else {\n                  verifyList[methodItem.method] = false\n                }\n              }else if(methodItem.method === \"sui_signPersonalMessage\" || methodItem.method === \"sui_signMessage\"){\n                let suiResult =  this.sui_verifySignature(methodItem.result);\n                  verifyList[methodItem.method] = (await suiResult).result\n              }else if(methodItem.method === \"btc_signMessage\"){\n\n                verifyList[methodItem.method] = \"Not verified yet\"\n\n              }else if(methodItem.method === \"aptos_signMessage\"){\n                let aptosMessage = methodItem.result\n                let aptosProvider = new OKXAptosProvider(window.provider)\n                let  aptosPublicKey  = aptosProvider.getAccount(methodItem.chainId)?.publicKey\n\n                let signStr = aptosMessage.signature\n                if (signStr.startsWith(\"0x\")) {\n                  signStr = signStr.slice(2, signStr.length)\n                }\n\n                console.log(\"aptos_signMessage aptosPublicKey And signStr\",aptosPublicKey,signStr)\n                verifyList[methodItem.method] = nacl.sign.detached.verify(\n                    Buffer.from(aptosMessage.fullMessage),\n                    Buffer.from(signStr, 'hex'),\n                    Buffer.from(aptosPublicKey, 'hex'),\n                );\n              }else if(methodItem.method === \"cosmos_signArbitrary\"){\n                let cosmosProvider = new OKXCosmosProvider(window.provider)\n                let cosmosAddress = cosmosProvider.getAccount(methodItem.chainId)?.address\n                let cosmosMessage = methodItem.result\n                let isValid =  await this.cosmos_verifySignArbitrary(cosmosAddress,\"test cosmos\",cosmosMessage.signature, cosmosMessage.pub_key.value)\n                verifyList[methodItem.method] = isValid\n\n              }else if (methodItem.method === \"tron_signMessage\") {\n                let tronMessage = methodItem.result\n                let tronWeb = new TronWeb({\n                  \"fullHost\": 'https://api.trongrid.io',\n                  \"headers\": {},\n                  \"privateKey\": ''\n                })\n                let provider = new OKXTronProvider(window.provider)\n                verifyList[methodItem.method] = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), tronMessage, provider.getAccount(\"tron:mainnet\").address)\n              } else if (methodItem.method === \"tron_signMessageV2\") {\n                let tronMessage = methodItem.result\n                let tronWeb = new TronWeb({\n                  \"fullHost\": 'https://api.trongrid.io',\n                  \"headers\": {},\n                  \"privateKey\": ''\n                })\n                const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", tronMessage);\n                let provider = new OKXTronProvider(window.provider)\n\n                verifyList[methodItem.method] = base58Address === provider.getAccount(\"tron:mainnet\").address\n              }else if (methodItem.method === \"starknet_signMessage\") {\n                let res = methodItem.result\n                let signData = this.starknetPanelTypedData\n\n                const rpcProvider = new StarknetRpcProvider({ nodeUrl: \"https://free-rpc.nethermind.io/mainnet-juno/v0_7\" });\n\n                let provider = new OKXStarknetProvider(window.provider)\n                let address = provider.getAccount(\"starknet:mainnet\").address\n                let pk = \"0x123\"; /// random pk\n                const account = new StarknetAccount(rpcProvider, address, pk)\n\n                let that = this\n                account.verifyMessage(signData, res).then(function (isValid) {\n                  that.testTransaction = `Verifyed result: \\n${isValid}`\n                }).catch(function (error) {\n                  that.testTransaction = `Verifyed failed: \\n${error}`\n                })\n                verifyList[methodItem.method] = \"starknet is verifying signature...\"\n              }\n              else {\n                verifyList[methodItem.method] = \"Not verified yet\"\n\n              }\n            }else if(\"method\" in methodItem && \"error\" in methodItem) {\n              verifyList[methodItem.method] = methodItem.error\n            }\n\n          }\n\n          console.log(\"验证签名 最后的结果>>>:\", JSON.stringify(verifyList));\n          this.testTransaction = \"签名验证结果如下: \\n\" + JSON.stringify(verifyList)\n        }else {\n          console.log(\"验证签名 window.provider.session.connectMethodsReply 为空:\");\n\n        }\n\n    },\n\n    handleThemeSelect(theme) {\n      selectedTheme = theme;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: theme,\n          },\n        };\n      }\n    },\n\n    async sui_verifySignature(signatureResult) {\n      let resultObj = signatureResult\n      let result = false\n      let msg = ''\n      try {\n        /// 获取当前account\n        const adapter = new SuiAdapter(window.provider);\n        let account = adapter.getAccount()\n        console.log(`Account中获取的address：${account.address}`)\n\n        /// 验证签名\n        let pubKey = await verifyPersonalMessageSignature(this.currentSuiTransaction.message, resultObj.signature)\n        let address = pubKey.toSuiAddress()\n        console.log(`验签结果计算得到address：${address}`)\n\n        /// 对比pubKey\n        console.log(`account pubkey: ${account.publicKey}`,)\n        console.log(`result pubkey: ${pubKey.toBase64()}`)\n        result = (account.address === address) && (account.publicKey === pubKey.toBase64())\n\n        msg = `address verify: ${account.address === address}\\npublicKey verify: ${account.publicKey === pubKey.toBase64()}`\n        console.log(\"signature verify success: \", pubKey)\n      } catch (e) {\n        console.log(\"signature verify failed: \", e)\n      }\n      return {\n        result,\n        msg\n      }\n    },\n\n\n    handleRedirectSelect(input) {\n      this.redirect = input;\n    },\n\n    handleRedirectDeeplink(input) {\n      this.redirectDeeplink = input;\n    },\n\n    addRedirectParam() {\n      if (this.testTransaction) {\n        const newTransaction = JSON.parse(this.testTransaction);\n        newTransaction.redirect = this.redirect === 'deeplink' ? this.redirectDeeplink : this.redirect;\n        this.testTransaction = JSON.stringify(newTransaction);\n      }\n    },\n\n    canChainAddRedirectParam() {\n      return chainsThatCanAddRedirectParam.some((c) => this.selectedChain.startsWith(c));\n    }\n  },\n  created() {\n    // for (const eventName of Object.values(OKX_TON_CONNECTION_AND_TRANSACTION_EVENT)) {\n    //   console.log(eventName);\n    //   window.addEventListener(eventName, (event) => {\n    //     console.log(eventName,event.detail)\n    //     this.currentStatus = eventName\n    //   });\n    // }\n  },\n\n  mounted() {\n\n    var scriptTag = document.createElement(\"script\");\n    scriptTag.src = \"https://telegram.org/js/telegram-web-app.js\";\n    scriptTag.id = \"tgsdk\";\n    document.getElementsByTagName('head')[0].appendChild(scriptTag);\n\n    this.connectReady = true;\n    document.title = \"OKX Connect\";\n    this.initBtnClicked()\n\n    console.log(\"挂载成功:\")\n    if (this.$refs.starknetPanelRef) {\n      this.starknetPanelTypedData = toRaw(this.$refs.starknetPanelRef.signData)\n      console.log(\"111: \", this.starknetPanelTypedData)\n    }else {\n      console.log(\"222\")\n    }\n  },\n};\n</script>\n","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_getAccount()\">getAccount(BTC)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signMessage()\">signMessage(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_send()\">send(BTC)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendBitcoin()\">sendBitcoin(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signPsbt_up()\">signPsbt(上架NFT)</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"btc_signAndPushPsbt_up()\">signAndPushPsbt(上架NFT)</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在OKX App选择要上架的Btc NFT，点击【上架】\n        </li>\n        <li>\n          2. 弹出签名面板，点开高级选项，查看\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出上架流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendInscription()\">sendInscription(BTC)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Btc NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount\n    }\n  },\n  methods: {\n\n    btc_getAccount() {\n      this.$emit('generateTransactionParams', {}, \"btc_getAccount\")\n    },\n\n    btc_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to BTC\"\n      };\n      this.$emit('generateTransactionParams', params, \"btc_signMessage\")\n    },\n\n    btc_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"btc_send\")\n    },\n\n    btc_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"btc_sendBitcoin\")\n    },\n\n    btc_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"btc_signPsbt\")\n    },\n\n    btc_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"btc_signAndPushPsbt\")\n    },\n\n    btc_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"btc_sendInscription\")\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./BtcTransactionPanel.vue?vue&type=template&id=376d03bc&scoped=true\"\nimport script from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./BtcTransactionPanel.vue?vue&type=style&index=0&id=376d03bc&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-376d03bc\"]])\n\nexport default __exports__","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_getAccount()\">getAccount(Fractal)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signMessage()\">signMessage(Fractal)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_send()\">send(Fractal)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_sendBitcoin()\">sendBitcoin(Fractal)</el-button>\n\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signPsbt_up()\">signPsbt(上架NFT)</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_signAndPushPsbt_up()\">signAndPushPsbt(上架NFT)</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在OKX App选择要上架的Fractal NFT，点击【上架】\n        </li>\n        <li>\n          2. 弹出签名面板，点开高级选项，查看\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出上架流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_sendInscription()\">sendInscription(Fractal)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Fractal NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount\n    }\n  },\n  methods: {\n\n    fractal_getAccount() {\n      this.$emit('generateTransactionParams', {}, \"fractal_getAccount\")\n    },\n\n    fractal_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to UniSat!\\n\\nClick to sign in and accept the UniSat Terms of Service (https://unisat.io/terms-of-service.html) and Privacy Policy (https://unisat.io/privacy-policy.html).\\n    \\nThis request will not trigger a blockchain transaction.\\n    \\nYour authentication status will reset after 24 hours.\\n    \\nWallet address:\\nbc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\\n    \\nNonce:\\n162d70e3-8c21-4cfd-9a22-9bf0a4b7be51\\n\"\n      };\n      this.$emit('generateTransactionParams', params, \"fractal_signMessage\")\n    },\n\n    fractal_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_send\")\n    },\n\n    fractal_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_sendBitcoin\")\n    },\n\n    fractal_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"fractal_signPsbt\")\n    },\n\n    fractal_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"fractal_signAndPushPsbt\")\n    },\n\n    fractal_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"fractal_sendInscription\")\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./FractalTransactionPanel.vue?vue&type=template&id=fb2f7e38&scoped=true\"\nimport script from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./FractalTransactionPanel.vue?vue&type=style&index=0&id=fb2f7e38&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-fb2f7e38\"]])\n\nexport default __exports__","<script>\n\nimport {getFullnodeUrl, SuiClient} from \"@mysten/sui/client\";\nimport {Transaction as SuiTransaction} from '@mysten/sui/transactions';\n\nexport default {\n  name: \"SuiTransactionPanel\",\n  methods: {\n    sui_getAccount() {\n      this.$emit('generateTransactionParams', '', \"sui_getAccount\")\n    },\n\n    //对单个交易签名（不发送)\n    async sui_signMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signMessage\")\n    },\n\n    async sui_signPersonalMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signPersonalMessage\")\n    },\n\n    sui_signTransaction2() {\n      // 定义要转移的金额和目标地址\n      const amount = 109; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    async sui_requestRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n          `sui:mainnet`,\n          `https://fullnode.mainnet.sui.io:443`\n      );\n      var data = {\n        method: \"suix_getBalance\",\n        params: [\n          \"0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae\",\n          \"0x168da5bf1f48dafc111b0a488fa454aca95e0b5e::usdc::USDC\",\n        ],\n      };\n\n      this.$emit(\"generateTransactionParams\", data, \"sui_testRpc\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 102; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signAndExecuteTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n      this.$emit(\"generateTransactionParams\", input, \"sui_signAndExecuteTransaction\")\n    },\n\n    /// generate txBytes and txSerialize\n    async generateTsBytesAndSerizlize(input) {\n      /// txBytes and txSerialize may be constructed in advance by the dapp side\n      let resultTuple = [\"\", \"\"];\n      if (\n          \"txBytes\" in input &&\n          input.txBytes.length > 0 &&\n          \"txSerialize\" in input &&\n          input.txSerialize.length > 0\n      ) {\n        resultTuple = [input.txBytes, input.txSerialize];\n      }\n\n      /// Otherwise, a transactionBlock parameter is required.\n      if (!(\"transactionBlock\" in input)) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      // if (this.walletAddress != \"connected\") {\n      //   alert(\"请先连接钱包\");\n      //   return new Promise((resolve) => {\n      //     resolve(resultTuple);\n      //   });\n      // }\n\n      let senderAccounts = window.provider.requestAccountsWithNamespace(\"sui\");\n      if (senderAccounts.length == 0) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      try {\n        let rpcUrl = getFullnodeUrl(\"mainnet\");\n        rpcUrl = \"https://www.okx.com/fullnode/sui/discover/rpc\"\n        const suiClient = new SuiClient({ url: rpcUrl });\n\n        /// sender is required\n        input.transactionBlock.setSender(senderAccounts[0]);\n        const result = await input.transactionBlock.build({\n          client: suiClient,\n        });\n        const txBytes = Buffer(result).toString(\"base64\");\n        const txSerialize = await SuiTransaction.from(txBytes).toJSON();\n        resultTuple = [txBytes, txSerialize];\n      } catch (error) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      return new Promise((resolve) => {\n        resolve(resultTuple)\n      })\n    },\n\n    //签名并发送交易\n    sui_signAndExecuteTransaction() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n        \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.testTransaction = JSON.stringify(input);\n      this.currentSuiTransaction = input;\n      this.currentSuiMethod = \"sui_signAndExecuteTransaction\";\n    },\n  },\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_getAccount()\">getAccount(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signMessage()\">signMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signPersonalMessage()\">signPersonalMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signTransaction2()\">signTransaction(Sui)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signAndExecuteTransaction()\">sendTransaction(Sui)</el-button>\n      <div style=\"font-size: 12px; color: gray;\">(send to Rally Tiger account)</div>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_requestRpc()\">RPC_getBalance</el-button>\n      <div style=\"font-size: 12px; color: gray;\">get USDC balance of address:</div>\n      <div style=\"font-size: 12px; color: gray\">0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae</div>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signTransaction_pre_execution()\">signTransaction(prepared data)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signAndExecuteTransaction_pre_execution()\">sendTransaction(prepared data)</el-button>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./SuiTransactionPanel.vue?vue&type=template&id=56a8eddf&scoped=true\"\nimport script from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./SuiTransactionPanel.vue?vue&type=style&index=0&id=56a8eddf&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-56a8eddf\"]])\n\nexport default __exports__","<script>\nimport { OKXStarknetProvider } from \"@okxconnect/universal-provider\";\nimport { CallData, uint256, RpcProvider, Account } from \"starknet\";\n\nexport default {\n  name: \"StarknetTransactionPanel\",\n  methods: {\n    async starknet_signMessage() {\n      this.address = this.getCurrentAddress()\n      if (this.address === \"\") {\n        alert(\"address can't be ''\");\n        return\n      }\n\n      let signData = this.signData\n      this.$emit(\"generateTransactionParams\", JSON.stringify(signData))\n      let provider = new OKXStarknetProvider(window.provider)\n      let res = await provider.signMessage(this.address, signData, \"starknet:mainnet\")\n      if (res.code) {\n        if (res.code == 301) {\n          let msg = \"Wallet address is registering, please try again later!\"\n          alert(msg)\n          this.$emit(\"generateTransactionResult\", msg, \"starknet_signMessage\")\n        }\n        this.$emit(\"generateTransactionResult\", res, \"starknet_signMessage\")\n        return\n      }\n      console.log(res)\n\n      const rpcProvider = new RpcProvider({ nodeUrl: \"https://free-rpc.nethermind.io/mainnet-juno/v0_7\" });\n      let pk = \"0x123\"; /// random pk\n      const account = new Account(rpcProvider, this.address, pk)\n      let that = this\n      account.verifyMessage(signData, res).then(function (isValid) {\n        that.$emit(\"generateTransactionResult\", \"verify:\" + isValid + \"\\n\" + res, \"starknet_signMessage\")\n      }).catch(function (error) {\n        that.$emit(\"generateTransactionResult\", \"failed:\" + error + \"\\n\" + res, \"starknet_signMessage\")\n      })\n    },\n\n    async starknet_sendTransaction() {\n      this.address = this.getCurrentAddress()\n      if (this.address === \"\") {\n        alert(\"address can't be ''\");\n        return\n      }\n\n      let val = uint256.bnToUint256(120000000000000000)\n      const transferCalldata = CallData.compile({\n        to: \"0x00b909cefa36ab6bc26f5887a867e46ef162238f0a171b1c2974b665afd4237f\",\n        value: val\n      })\n\n      // const ETHTokenAddress = \"0x049d36570d4e46f48e99674bd3fcc84644ddd6b96f7c741b1562b82f9e004dc7\"\n      // const STARKTokenAddress = \"0x04718f5a0fc34cc1af16a1cdee98ffb20c31f5cd61d6ab07201858f4287c938d\"\n      const DAITokenAddress = \"0x00da114221cb83fa859dbdb4c44beeaa0bb37c7537ad5ae66fe5e0efd20e6eb3\"\n\n      const invokeParams = {\n        calls: [\n          {\n            contract_address: DAITokenAddress,\n            entry_point: \"transfer\",\n            calldata: transferCalldata\n          }\n        ],\n      }\n\n      this.$emit(\"generateTransactionParams\", JSON.stringify(invokeParams))\n      let provider = new OKXStarknetProvider(window.provider)\n\n      let that = this\n      provider.sendTransaction(this.address, invokeParams, \"starknet:mainnet\").then(function(res){\n        console.log(\"starknet_sendTransaction result \", res)\n        that.$emit(\"generateTransactionResult\", res, \"starknet_sendTransaction\")\n      }).catch(function(error) {\n        if (error.code == 301) {\n          let msg = \"Wallet address is registering, please try again later!\"\n          alert(msg)\n          that.$emit(\"generateTransactionResult\", msg, \"starknet_sendTransaction\")\n        }else {\n          that.$emit(\"generateTransactionResult\", error, \"starknet_sendTransaction\")\n        }\n      });\n    },\n\n    getCurrentAddress() {\n      let provider = new OKXStarknetProvider(window.provider)\n      const address = provider.getAccount(\"starknet:mainnet\")?.address\n      return address\n    },\n\n    getPublicKey() {\n      let provider = new OKXStarknetProvider(window.provider)\n      const account = provider.getAccount(\"starknet:mainnet\")\n      console.log(\"获取到的account是：\")\n      console.log(account)\n      return \"05d8e5e9c1dd686246716c888159271d2f13986cb4acee46164e2c4e034629c0\"\n    }\n  },\n\n  data() {\n    const signData = {\n        \"domain\": {\n          \"chainId\": \"0x534e5f4d41494e\",\n          \"name\": \"STRKFarm\",\n          \"version\": \"1\"\n        },\n        \"message\": {\n          \"document\": \"app.strkfarm.xyz/tnc/v1\",\n          \"message\": \"Read and Agree T&C\"\n        },\n        \"primaryType\": \"Tnc\",\n        \"types\": {\n          \"StarkNetDomain\": [\n            {\n              \"name\": \"name\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"version\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"chainId\",\n              \"type\": \"felt\"\n            }\n          ],\n          \"Tnc\": [\n            {\n              \"name\": \"message\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"document\",\n              \"type\": \"felt\"\n            }\n          ]\n        }\n    }\n\n    return {\n      signData\n    }\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"starknet_signMessage()\">signMessage</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 验签不成功的话，请尝试连接VPN\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"starknet_sendTransaction(true)\">\n        sendTransaction\n      </el-button>\n\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 发送0.12个DAI到0x00b9...4237f的地址\n        </li>\n        <li>\n          2. 请保证你的钱包有足够的DAI\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./StarknetTransactionPanel.vue?vue&type=template&id=082fda2b&scoped=true\"\nimport script from \"./StarknetTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./StarknetTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./StarknetTransactionPanel.vue?vue&type=style&index=0&id=082fda2b&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-082fda2b\"]])\n\nexport default __exports__","<script>\n\n\nimport {OKXTronProvider} from \"@okxconnect/universal-provider\";\nimport {TronWeb} from \"tronweb\";\n\nexport default {\n  name: \"TronTransactionPanel\",\n  methods: {\n\n    async tron_signMessage() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessage(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n\n      const verify = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), res, provider.getAccount(\"tron:mainnet\").address)\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" + res, \"tron_signMessage\")\n    },\n\n    async tron_signMessageV2() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessageV2(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", res);\n      console.log(\"tron_signMessageV2_base58Address\", base58Address)\n      console.log(\"tron_signMessageV2_address\", provider.getAccount(\"tron:mainnet\").address)\n      const verify = base58Address === provider.getAccount(\"tron:mainnet\").address\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" +  res, \"tron_signMessage\")\n    },\n\n    async tron_signTransaction(isOnlySign) {\n      let provider = new OKXTronProvider(window.provider)\n        let tronWeb = new TronWeb({\n          \"fullHost\": 'https://api.trongrid.io',\n          \"headers\": {},\n          \"privateKey\": ''\n        })\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const transaction = await tronWeb.transactionBuilder.sendTrx(\"TGBcVLMnVtvJzjPWZpPiYBgwwb7th1w3BF\", 1000, address);\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let res = await provider.signTransaction( transaction, \"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", res, \"tron_signTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async getContract() {\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n      \n      try {\n        const contract = await tronWeb.trx.getContract(contractAddress)\n        const abi = contract.abi.entrys;\n        console.log(\"获取到的合约：\")\n        console.log(abi)\n      } catch (error) {\n        console.log(\"Error getting contract ABI:\", error);\n      }\n    },\n    \n    async tron_signAndSendTransactionContract(isOnlySign) {\n      // this.getContract()\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n      ]\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"quote(uint256,uint256,uint256)\", {}, parameter, address);\n      console.log(\"=====>transaction: \")\n      console.log(ret);\n      this.$emit(\"generateTransactionParams\", ret.transaction)\n      if (isOnlySign) {\n        let tx = await provider.signTransaction( ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async tron_signAndSendTransactionApprove(isOnlySign) {\n      let contractAddress = \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'address', value: contractAddress},\n        {type: 'uint256', value: 1000},\n      ]\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"approve(address,uint256)\", {}, parameter, address);\n\n      let transaction = ret.transaction\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let tx = await provider.signTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n\n    }\n\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessage()\">tron_signMessage</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessageV2()\">tron_signMessageV2</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(true)\">\n        tron_signTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(true)\">\n        tron_signTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(true)\">\n        tron_signTransaction(Approve)\n      </el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(false)\">\n        tron_signAndSendTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(false)\">\n        tron_signAndSendTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(false)\">\n        tron_signAndSendTransaction(approve)\n      </el-button>\n    </el-col>\n\n\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./TronTransactionPanel.vue?vue&type=template&id=55a13ab0&scoped=true\"\nimport script from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./TronTransactionPanel.vue?vue&type=style&index=0&id=55a13ab0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-55a13ab0\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=19c6ea28&scoped=true\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=19c6ea28&scoped=true&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-19c6ea28\"]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\nimport App from './App.vue'\n\nconst app = createApp(App)\n\napp.use(ElementPlus)\napp.mount('#app')","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkokxconnectdemo\"] = self[\"webpackChunkokxconnectdemo\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(18806); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["require","Object","defineProperty","exports","value","AptosUtils","getTransaction","o","transaction","rawTransaction","payload","entryFunction","typeArgs","type_args","typeArguments","Array","forEach","typeTag","push","toString","realArguments","this","getTypeArguments","args","i","arguments","function","module_name","address","data","name","identifier","function_name","type","type_arguments","getArguments","array","j","length","y","values","subArray","dealArrayElements","e","Uint8Array","t","isArray","r","n","assign","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","rejected","result","done","then","apply","__importDefault","mod","__esModule","OKXAptosProvider","buffer_1","AptosUtils_1","core_1","tweetnacl_1","constructor","provider","chainsSet","Set","getUniversalProvider","getConnectedNamespace","defaultNetwork","network","requestDefaultChainWithNamespace","NameSpaceKeyAptos","currentChainId","getRealChainId","chainId","size","Error","_a","_b","_c","session","namespaces","chains","chain","add","getAccount","_d","_e","_f","_g","_h","_j","account","accounts","filter","startsWith","logDebug","accountArray","split","console","log","extra","publicKey","undefined","signMessage","realChain","prefix","message","nonce","fullMessage","application","window","location","protocol","hostname","buffer","Buffer","from","hex","bufferToHex","signedMessage","request","successData","slice","verified","default","sign","detached","verify","signature","error","signTransaction","tx","signAndSubmitTransaction","buf","OKXAptosProvider_1","enumerable","get","CONNECT_METHOD_BATCH_FETCHMSG","CONNECT_METHOD_FETCHMSG","CONNECT_METHOD_RECEIVE","CONNECT_METHOD_UNSUB","CONNECT_METHOD_SUB","CONNECT_METHOD_PUBLISH","CONNECT_METHOD_LOGIN","CONNECT_METHOD_PUSH","__createBinding","create","m","k","k2","desc","getOwnPropertyDescriptor","writable","configurable","__setModuleDefault","v","__importStar","prototype","hasOwnProperty","call","OKXWalletConnector","constants_1","storageconstants_1","storage_1","utils_1","utils_2","eventemitter3_1","protocol_1","report_1","WS","resolveWebSocketImplementation","url","events","EventEmitter","state","ConnectorState","InitState","selectedUrlIndex","retryCount","timeOutLimit","checkWSUrl","heartbeatTimer","connectionTimeoutTimer","connectURLStorage","Storage","OKXCONNECTOR_CACHE_KEY","connecting","Connecting","onPayload","rsp","Date","now","emit","onClose","event","socket","code","onError","id","msg","onopen","onmessage","onclose","Connected","emitError","errorEvent","heartbeat","clearTimeout","OnError","readyState","WebSocket","OPEN","send","setTimeout","bind","tryRegistOpen","logError","registOpen","inRetry","toUTCString","URLSearchParams","startTimeOutTimer","hasBuiltInWebSocket","onerror","close","on","resetTimeOutTimer","OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE","FINISHED","checkMaxRetry","OKXCONNECTOR_WS_URL_LIST","connectionTryNext","nextUrl","getNextSelectUrl","CANCELED","pendingSocket","TIME_OUT","reportEvent","OKXReportType","LOG","cacheSuccessUrlSelect","saveContent","onVisibleChanged","document","visibilityState","once","err","OKXConnectError","OKX_CONNECT_ERROR_CODES","CONNECTION_ERROR","connect","removeEventListener","addEventListener","disconnect","Disconnected","currentStatus","addListener","decrypt","success","failed","listenPayloadHandler","removeListener","parsedEvent","safeJsonParse","params","rawMsg","failHandler","addPackageParse","callback","payloadHandler","param","listener","off","doLogin","safeJsonStringify","getMsgPayloadFromHistory","tmpMsg","jsonstr","onOpen","openHandler","ConnectionManager","connect_1","commands_1","jwtconstants_1","crypto_1","jwt_1","safejson_1","log_1","url_1","appname","connectStorage","OKXCONNECTOR_CACHE_KEY_DAPP","crypto","SessionCrypto","inTMA","isInTMA","reportLog","keyPairInfo","getCachedCryptoKeyPair","jwtKeyPair","getCachedJWTKeyPair","saveJWTKeyPair","connector","OKXCONNECTOR_WS_URL_1","packageId","connectedWalletPK","currentTopic","refreshPackageId","saveCryptoKeyPair","keyPair","cacheInfo","encryptStoreMsg","OKXCONNECTOR_CRYPTO_KEY","kp","getAndDecrypt","content","clearCache","strkeyPair","toHexString","secretKey","OKXCONNECTOR_JWT_KEY","strKeyPairInfo","hexToByteArray","generateKeyPair","isWalletPKReady","makeJWT","topic","signJWT","OKXCONNECTOR_JWT_SIDE","OKXCONNECTOR_JWT_TTL","parsePackage","input_1","input","ignoreACK","sendACK","getItem","OKXCONNECTOR_TOKEN_CACHE","inputObj","messageId","sendReceive","restoreConnect","getConnectInfo","generateTopic","info","channelId","clientId","stringifyKeypair","fromRestore","timeLog","getTime","lastConnectId","cachedSenderPublicKey","OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE","jwtToken","timeOne","timeF","sendFetchAndConsumeMessages","timeTh","catch","jsonrpc","CONNECT_JSONRPC_VER","method","token","replace","parsedMessage","fail","msgObj","trimStart","sendRaw","ttl","OKXCONNECTOR_MESSAGE_TTL","msg_1","encrypt","msgId_1","success_1","msgId","reason","sendConnectSessionInfo","fetchedMessages","hasMore","receivedMsgs","timeFive","cleanCache","saveSessionContent","key","OKXCONNECTOR_SESSION_PREFIX_KEY","jsonData","getSessionContent","jsonStr","object","getCurrentConnectionReady","OKXCONNECTOR_WS_URL_IDX_KEY","OKXCONNECTOR_WS_URL_3","OKXCONNECTOR_WS_URL_2","EVENT_EMITTER_MAX_LISTENERS","Engine","sessionUtils_1","connectionManager","pendingRequests","Map","disconnectListener","getDefaultReporter","beginReport","jsonResponse","handleResponse","addDisconnectListener","disconnecter","setSessionConnectingListener","sessionConnectingListener","clear","getRequestId","requestId","bindRequestForPromise","set","requestAnswer","option","JSON","stringify","onAck","sendSession","sessionInfo","response","delete","restoreconnect","onConnectResult","conect","sessionConfig","connectInfo","openUniversalLink","openUniversalUrl","connectRequest","protocolVer","Number","tonConnectSdkVersion","dAppInfo","dappInfo","requests","connectRequestStr","utf8Array","TextEncoder","encode","base64Encoded","btoa","String","fromCharCode","deeplinkUrl","standardDeeplink","isIOS","isIos","openOKXDeeplinkWithFallback","onConnect","getUniversalLink","connectResponse","buildNameSpacesByConnectResponse","universalConnect","connectInfoAndUrl","universalRequest","item","universalConnectRequest","redirect","encodeConnectParams","openOKXLink","getOKXLink","useMini","tmaReturnUrl","openMethod","openOKXTMAWalletlinkWithFallback","useShortLink","openOKXUniversalLink","UNKNOWN_ERROR","walletName","responses","wallet","methodsResponse","find","connectRequestMethods","signResponse","WalletConnectionManager","connectionManager_1","walletConnectionManager_1","engine_1","MULTICODEC_ED25519_LENGTH","MULTICODEC_ED25519_HEADER","MULTICODEC_ED25519_BASE","MULTICODEC_ED25519_ENCODING","DID_METHOD","DID_PREFIX","DID_DELIMITER","KEY_PAIR_SEED_LENGTH","DATA_ENCODING","JSON_ENCODING","JWT_ENCODING","JWT_DELIMITER","JWT_IRIDIUM_TYP","JWT_IRIDIUM_ALG","JWTHeaderType","decodeJSON","encodeJSON","encodeIss","decodeIss","encodeSig","decodeSig","encodeData","decodeData","encodeJWT","decodeJWT","verifyJWT","ed25519","stringUtils_1","str","okxtoString","okxfromString","val","publicKeyStr","join","issuer","multicodec","bytes","encoded","header","jwt","sub_1","aud_1","ttl_1","keyPair_1","sub","aud","iat","Math","floor","alg","typ","iss","exp","act","OKXCONNECTOR_JWT_WALLET_SIDE","buildRequestAccountNameSpacesByConnectResponse","requestAccountNameSpaces","universalResponse","filterAccount","namespace","ton_addr","tonAddress","tonProof","ton_proof","addresses","methods","addressItem","addressArr","utils_3","crypto_js_1","subKey","beforeKey","localStorage","resolveLocalStorage","checkAndUpgradeCache","storeKey","cipherIV","cacheStr","cacheKey","cache","cacheObj","fromCacheKey","toCacheKey","setItem","removeItem","timestamp","saveItem","localKey","totalCacheStr","getCachedPBKDF2InfoKey","pwLen","saltLen","pw","iv","salt","OKXCONNECTOR_STORAGER_CRYPTO_SALT","randomBytes","OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD","OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV","ivBuffer","PBKDF2","iterations","storeInfo","AES","enc","Utf8","OKXCONNECTOR_STORAGE_CIPHER_METHOD","OKXCONNECTOR_TON_KEY","WalletConnectionManagerEvent","WalletConnectionManagerTopicInfoCacheKey","RECEIVE_REQUEST","walletConnectionConstants_1","communicateEvents","sessionCryptoInfoMap","inLogin","isLogined","offset","topicId","isTopicPublicKeyExist","timestampStr","parseInternalMsg","internalMsg","internalObj","origin","originContent","base64decode","updateClientId","cid","lastCheck","getLastSixMd5Hash","dappPublicKey","syncCacheSessionInfo","topic_1","_k","_l","isInternalData","inner_message","inner_topic","messageObj","sessionInfoString","base64Content","inner_connection","toObject","decryptWallet","recovrySessionInfoFromCache","cacheMap","topicItem","cryptoItem","cryptoKeyPair","cacheSessionInfo","sync","duplicatedTopics","includes","appendTopic","sessionPublicKey","subscribeTopics","confirmAppendingTopics","keys","getSessionPublicKey","getCurrentCachedTopicIdList","needPublicKey","useRaw","connectedDappPK","cryptoObject","encryptWallet","sendUnsubscribe","sendBatchFetchAndConsumeMessages","topicIdList","topics","withInternalData","finishCount","idx","nonceLength","sessionKeyPair","createKeypairFromString","createKeypair","box","createNonce","receiverPublicKey","encodedMessage","encrypted","concatInfo","concatUint8Arrays","hexResult","encodedResult","base64encode","senderPublicKey","messageByteArray","toUint8Array","internalMessage","splitToUint8Arrays","decrypted","open","TextDecoder","decode","__exportStar","p","IEngine","ISignClient","ISignClientEvents","IEngineEvents","super","client","creatOKXMiniAppWalletInfo","creatOKXWalletInfo","getBigIntRpcId","formatJsonRpcRequest","isJsonRpcError","isJsonRpcResponse","parseConnectionError","isHttpUrl","formatJsonRpcError","json_rpc_1","wallet_info_1","isJsonRpcPayload","isJsonRpcRequest","isJsonRpcResult","payloadId","formatJsonRpcResult","isReservedErrorCode","getError","getErrorByCode","formatErrorMessage","isWsUrl","okx_connect_error_1","IncrementalRandomGenerator","bits","Uint16Array","Uint32Array","initialValue","getNextValue","uint8Generator","uint16Generator","date","BigInt","RESERVED_ERROR_CODES","STANDARD_ERROR_MAP","DEFAULT_ERROR","match","INTERNAL_ERROR","SERVER_ERROR","getUrlProtocol","matches","RegExp","matchRegexProtocol","regex","test","CONNECT_ITEM_ERROR_CODES","TONCHAIN","connect_wallet_1","connect_event_1","OKX_APP_WALLET_NAME","downloadUrl","standardUniversalLink","OKX_MINI_WALLET_NAME","tgwalletName","getTestTwaUrl","okxTesttwaUrl","getTestTgTwaUrl","okxTestTgtwaUrl","getBotNameAndAppName","urlObj","URL","pathnameParts","pathname","Boolean","botName","appName","tgwalletAppName","shortUniversalLink","okxDeeplink","SERVER_ERROR_CODE_RANGE","INVALID_PARAMS","METHOD_NOT_FOUND","INVALID_REQUEST","PARSE_ERROR","getDefaultMessageByCode","setPrototypeOf","toJSON","BAD_REQUEST_ERROR","ALREADY_CONNECTED_ERROR","NOT_CONNECTED_ERROR","UNKNOWN_APP_ERROR","USER_REJECTS_ERROR","USER_REJECTS_ERROR_CAUSE_REGISTER","METHOD_NOT_SUPPORTED","CHAIN_NOT_SUPPORTED","NameSpaceKeyStarknet","NameSpaceKeyTron","NameSpaceKeyCosmos","NameSpaceKeyBtc","NameSpaceKeySui","NameSpaceKeyTON","NameSpaceKeySOL","NameSpaceKeyEip155","misc_1","callForSuccess","fn","options","attempts","delayMs","lastError","delay","timeout","signal","aborted","timeoutId","checkMetaData","versionCompare","isBrowser","isOS","isMobileUserAgent","openDeeplinkWithFallback","openLinkBlank","openLink","toSafeBase64FromBase64","isValidObject","getAppWalletShortDeepLink","encodeTWAConnectURLParams","getTelegramWalletTWAUrl","getAppWalletDeepLink","encodeTelegramUrlParameters","isTelegramUrl","openOKXDeeplink","logWarning","call_for_success_1","web_api_1","tma_api_1","request_1","debug","forceReport","defaultReporter","OKXReporter","packageJson","version","okxLogDebug","reduce","sendRecordContent","warn","action","content_1","OKXReportSide","versionStr","cross_fetch_1","localforage_1","reportApiList","reportCacheKey","reportUUIDKey","MAX_LIMIT_REPORTCOUNT","DEFAULT_HTTP_HEADERS","Accept","DEFAULT_HTTP_METHOD","DEFAULT_FETCH_OPTS","headers","PAGE_IN","PAGE_OUT","CLICK","DAPP","WALLET","fetchListWithTimeout","urls_1","args_1","urls","controller","AbortController","fetchPromise","timeoutPromise","_","abort","race","ok","status","currentSide","currentVersion","storage","createInstance","recordList","currentUUID","configVersionAndSide","side","recordCacheKey","reportPlatform","startErrorCatching","records","uuid","sendCachedRecords","getWindow","cachedErrors","sendRecord","record","body","res","path","language","navigator","ua","userAgent","platform","reportItem","lang","markRecordItem","sendList","map","allSettled","results","keepIndex","index","splice","markRecord","Report_WalletType_Key","Report_Proceed_QRCode_Click","Report_ChooseType_Download_Click","Report_ChooseType_ConnectWallet_Click","Report_Proceed_Retry_Click","Report_ChooseType_ConnectWallet_View","Report_Loading_ConnectWallet_View","Report_Proceed_QRCode_View","Report_Proceed_Proceed_View","dappMetaData","icon","JSONStringify","JSONParse","json","numbersBiggerThanMaxInt","serializedData","group","parse","isCustomFormatBigInt","substring","alloc","allocUnsafe","basics_1","string","encoding","base","BASES","decoder","encoder","createCodec","ascii","bufNum","charCodeAt","utf8","bases","base16","latin1","binary","isTmaPlatform","isInTelegramBrowser","sendExpand","sendOpenTelegramLink","initParams","locationHash","hash","urlParseHashParams","tmaPlatform","tgWebAppPlatform","Telegram","WebApp","webAppVersion","tgWebAppVersion","platforms","TelegramWebviewProxy","isTelegramWebview","TelegramWebview","postEvent","link","fallback","pathFull","search","isIframe","versionAtLeast","path_full","parent","eventType","eventData","external","notify","trustedTarget","postMessage","indexOf","_path","urlSafeDecode","qIndex","pathParam","substr","query_params","urlParseQueryString","urlencoded","decodeURIComponent","queryString","paramName","paramValue","queryStringParams","v1","v2","a","p1","p2","v1List","v2List","max","parseInt","ver","removeUrlLastSlash","addPathToUrl","useStandardUniversalLink","deeplinkEncodeUrl","encodeURIComponent","fullUrl","isTelegram","newWindow","href","deepLinkOpened","timeoutDuration","fallbackToDownloadPage","parameters","encodedParameters","connectParam","redirectStr","okxconnect","extraparams","fromtg","base64ContentStr","urlSafeBase64","twaDeepLink","openTelegramLink","encodeTGParams","RANDOM_LENGTH","hasLocalStorage","hashKey","generateRandomBytes32","tweetnacl_util_1","to_string_1","sha256_1","BASE16","hexString","byteArray","byte","buffer1","buffer2","mergedArray","subArray1","subArray2","encodeUint8Array","urlSafe","encodeBase64","decodeToUint8Array","decodeBase64","uint8Array","decodeUTF8","decodedUint8Array","encodeUTF8","scheme","global","self","randomBytes32","obj","getPrototypeOf","maxTouchPoints","isIOSDevice","MSStream","isIPadOS","MD5","base64","getUserAgent","ua_parser_js_1","target","doFallback","fallbackTimeout","check","vendor","opera","getResult","osName","os","toLowerCase","deviceModel","device","model","browserName","browser","OKXSolanaProvider","web3_js_1","bs58_1","defaultChainMap","has","caip","PublicKey","serializedMessage","serialize","requireAllSignatures","verifySignatures","getSignedTransaction","signAllTransactions","transactions","VersionedTransaction","newTransactions","s","c","Transaction","deserialize","signAndSendTransaction","transactionStr","resultTx","OKXSolanaProvider_1","OKXBtcProvider","_1","getAddressForChainId","ns","checkChainId","signStr","ret","errorData","sendBitcoin","toAddress","satoshis","to","feeRate","txhash","checkParameters","signPsbt","psbtHex","signPsbts","psbtResults","psbtHexs","signAndPushPsbt","sendInscription","inscriptionId","extension","coinId","protocolId","atomicSuffix","ordinalsSuffix","endsWith","removeSuffix","scenario","txType","batchBean","coinAmount","nftId","suffix","unexistKeys","namespaceKey","OKXCosmosProvider","algo","bech32Address","pubKey","hexToUint8Array","signArbitrary","signerAddress","signDoc","chain_id","account_number","sequence","fee","gas","amount","msgs","memo","signData","signAmino","signOptions","resData","signed","signDirect","bodyBytes","authInfoBytes","accountNumber","messageToBuffer","arr","output","x","padStart","arrayBuffer","byteValue","isNaN","OKXStarknetProvider","STARKNET_CHAIN_ID","getChain","typedData","sendTransaction","transactionData","transaction_hash","signMessageDeclareContractPayload","sendMessageExecuteTransactionDetail","calls","abis","transactionsDetail","executionRequest","OKXTonProvider","statusChangeSubscriptions","statusChangeErrorSubscriptions","tonWallet","errorsHandler","connected","tonNameSpace","walletStateInit","sessionWallet","tonDeviceInfo","appVersion","maxProtocolVersion","features","connectItems","onStatusChange","MAINNET","requestAccountsWithNamespace","requestParams","OKXTronProvider","TRON_CHAIN_ID","stringToHex","signMessageV2","signedTx","realSignTx","visible","txID","rawData","contract","raw_data","expiration","ref_block_bytes","fee_limit","ref_block_hash","raw_data_hex","OKXUniversalProvider","eip155_1","sui_1","client_1","namespaces_1","solana_1","btc_1","aptos_1","ton_1","cosmos_1","tron_1","packages_1","provider_1","starknet_1","init","opts","setGlobal","okxConnectUniversalinwindow","initialize","providerOpts","rpcProviders","requestParam","buildRequestParamFromRequest","getProvider","validateChain","keyArr","enable","connectOpts","requestAccounts","called","onRequestSent","disconnectAndEmit","cleanup","engine","aptosChainNameToGeneralId","replaceAptos","aptosNameSpace","realNS","replaceAptosInner","aptos","optionAptosNameSpace","optionalNamespaces","realOptionNS","defaultChain","replaceAptosGeneralIdWithNetName","replaceSessionAptos","disconnectInner","connectAndSign","signRequest","updatedOpts","setNamespaces","requestItem","signResponseList","okxConnectUniversalUIinwindow","creatNotSupportMethodItemReplay","syncAllAddresses","syncAddressAvailable","syncAllAddress","setDefaultChain","rpcUrl","checkStorage","sessionInfoStr","getFromStore","createProviders","registerEventListeners","SignClient","providersToCreate","parseNamespaceKey","namespacesValue","currentNameSpace","Eip155Provider","opts1","solanaProvider","sonicProvider","svmProvider","optsTon","tonProvider","optsSui","suiProvider","SuiProvider","optsBtc","btcProvider","fbProvider","aptosProvider","moveProvider","cosmosProvider","tronProvider","starknetProvider","PROVIDER_EVENTS","DEFAULT_CHAIN_CHANGED","caip2ChainId","onChainChanged","UPDATE_NAMESPACES","nameSpaces","nameSpacekey","persist","isChainNamespaceInSession","chainsArr","defaultNamespace","getDefaultChain","namespaceStr","caip2Chain","sessionProperties","showRequestModal","OKXUniversalProvider_1","OKXBtcProvider_1","OKXCosmosProvider_1","OKXTonProvider_1","OKXTronProvider_1","OKXStarknetProvider_1","ConnectMethodUtils_1","metaData","requestAccountItem","requiredNamespaces","nameSpaceToConnectWalletNameSpace","SESSION_CONNECTING","connectMethodsToConnectWalletMethods","metadata","fillParamsToSession","connectMethodsResponseUpdate","openOKXWallet","allAddressStr","syncResoonseToRequire","connectSupportMethods","connectMethodsAdaptOldVersion","isRecord","notSupportError","errorItem","callBackParams","solAccount","account1","solAddress","fromAccountToAddress","realMessage","encodeMessage","suiMessage","convertedArray","b64encoded","atob","btcAccounts","account2","btcAccount","btcAddress","paramData","aptosAccount","account3","aptosAddress","aptosChainId","cosmosAccount","account_cosmos","cosmosAddress","cosmosData","cosmosBase64Encoded","methodItem","solanaSuccessData","suiMethod","requestMethod","suiMessageb64","aptosSignature","requireNameSpace","includeEip155","some","space","syncAddressHostAvailable","includeChain","paramsArr","firstParam","firstObj","aptosParams","currentURL","signChainId","applicationUrl","cosmosChain","responseAddressStr","allAddress","isEvm","deriveName","addr","ci","evmAddress","freeze","getAccountsChains","isCaipNamespace","mergeRpcMap","targetRpcMap","sourceRpcMap","mergeNamespaces","source","rpcMap","fixMobileBtcSession","btcNameSpace","addressType","compressedPublicKey","GENERIC_SUBPROVIDER_NAME","RPC_URL","STORAGE","CONTEXT","WC_VERSION","PROTOCOL","RELAY_URL","LOGGER","JsonRpcConnection_1","JsonRpcProvider_1","AptosProvider","httpProviders","createHttpProviders","updateNamespace","getAccounts","setHttpProvider","http","parsedChainId","getChainId","parsedRpc","getRpcUrl","httpProvider","createHttpProvider","getHttpProvider","rpc","JsonRpcProvider","JsonRpcConnection","getGlobal","BtcProvider","CosmosProvider","updateRequestParams","isDic","switchChainId","decimalNumber","selectedChainId","chainNum","paramsChainId","paramsChainString","adaptArray","addressObj","isEqual","chainAddress","messages","typedDataJson","secondObj","hexChainId","getHexChainIdFromRequest","isChainApproved","handleSwitchChain","addEthereumChain","resultData","nameSpace","rpcUrls","eip155","core_2","disableProviderPing","isAvailable","registering","register","parseError","types_1","IJSONRpcProvider","connection","hasRegisteredEventListeners","setConnection","context","requestStrict","_error","SolanaProvider","getPubkey","getWalletAddress","components","StarknetProvider","__rest","getOwnPropertySymbols","propertyIsEnumerable","TONProvider","validUntil","newParams","fromAddress","boc","TronProvider","IJSONRpcConnection","opt","globals","convertChainIdToNumber","parseChainId","mergeArrays","projectId","reference","CAIP_DELIMITER","b","okxGlobal","_createElementBlock","_hoisted_1","_createVNode","_component_el_container","_withCtx","_component_el_header","_cache","_createTextVNode","_component_el_main","_component_el_card","class","_createElementVNode","style","_component_el_row","_component_el_col","span","_toDisplayString","$options","_ctx","_component_el_checkbox","modelValue","withUI","$event","onChange","handleWithUI","universalToTG","handleUniversalToTG","_component_el_select","modals","placeholder","handleModalsSelect","multiple","_component_el_option","label","returnStrategy","handleReturnStrategySelect","_Fragment","_renderList","returnStrategies","strategy","_createBlock","_component_el_input","deeplink","handleReturnStrategyDeeplink","disabled","_createCommentVNode","handleLanguageSelect","locales","locale","theme","handleThemeSelect","THEME","LIGHT","DARK","selectedMethod","handleConnectMethodsSelect","connectMethods","tonProofValue","gutter","align","availableChains","checked","areChainsInit","isOptionalChecked","handleOptionChange","_component_el_button","onClick","initBtnClicked","connectInitStr","connectBtnClicked","connectStatusStr","syncAllAddressClick","syncAllAddressStr","disconnectAction","walletAddress","disconnectStatusStr","_Teleport","showModal","closeModal","_withModifiers","_component_qrcode_vue","qrValue","level","_component_el_tabs","activeTab","onTabClick","clickActiveTab","_component_el_tab_pane","eth_requestAccounts","eth_chainId","wallet_switchEthereumChain","wallet_addEthereumChain","personal_sign","eth_signTypedData_v4","eth_sendTransaction_transfer","eth_sendTransaction_approve","eth_sendTransaction_mint","wallet_watchAsset","ton_getAccount","ton_sendTransaction","sol_signMessage","sol_signTransaction","sol_signVersionedTransaction","sol_signAllTransactions","sol_signAllVersionedTransactions","sol_signAndSendTransaction","sol_signAndSendVersionedTransaction","_component_SuiPanel","onGenerateTransactionParams","sui_generateTransactionParams","_component_BTCPanel","btc_generateTransactionParams","_component_FractalPanel","fractal_generateTransactionParams","_component_TronTransactionPanel","tron_generateTransactionParams","onGenerateTransactionResult","tron_getTransactionResult","aptos_signMessage","aptos_signTransaction","aptos_signAndSubmitTransaction","cosmos_signArbitrary","cosmos_signAmino","cosmos_signDirect","wallet_testRpc","eth_sendTransaction_swap","move_signTransaction","move_signAndSubmitTransaction","_component_StarknetPanel","ref","starknet_generateTransactionParams","starknet_getTransactionResult","testBase64UrlSafe","xs","sm","handleRedirectSelect","canChainAddRedirectParam","redirectDeeplink","handleRedirectDeeplink","addRedirectParam","testTransaction","rows","testboc","$setup","sendBtnDisabled","testTransactionStr","btc_getAccount","btc_signMessage","sendAmount","clearable","btc_send","sendSatoshisAmount","btc_sendBitcoin","btc_signPsbt_up","btc_signAndPushPsbt_up","receiver","btc_sendInscription","props","setup","$emit","alert","autoFinalized","__exports__","fractal_getAccount","fractal_signMessage","fractal_send","fractal_sendBitcoin","fractal_signPsbt_up","fractal_signAndPushPsbt_up","fractal_sendInscription","sui_getAccount","sui_signMessage","sui_signPersonalMessage","sui_signTransaction2","sui_signAndExecuteTransaction","sui_requestRpc","sui_signTransaction_pre_execution","sui_signAndExecuteTransaction_pre_execution","recipientAddress","SuiTransaction","coin","splitCoins","transferObjects","transactionBlock","showEffects","txBytes","txSerialize","generateTsBytesAndSerizlize","resultTuple","senderAccounts","getFullnodeUrl","suiClient","SuiClient","setSender","build","currentSuiTransaction","currentSuiMethod","starknet_signMessage","starknet_sendTransaction","getCurrentAddress","rpcProvider","RpcProvider","nodeUrl","pk","Account","that","verifyMessage","isValid","uint256","bnToUint256","transferCalldata","CallData","compile","DAITokenAddress","invokeParams","contract_address","entry_point","calldata","getPublicKey","tron_signMessage","tron_signMessageV2","tron_signTransaction","tron_signAndSendTransactionContract","tron_signAndSendTransactionApprove","tronWeb","TronWeb","trx","base58Address","verifyMessageV2","isOnlySign","transactionBuilder","sendTrx","getContract","contractAddress","abi","entrys","parameter","triggerSmartContract","verifyADR36Amino","fromBech32","VConsole","allChains","chainsThatCanAddRedirectParam","optionChains","selectedModals","selectedReturnStrategy","selectedDeepLink","selectedLanguage","selectedTheme","TronTransactionPanel","QrcodeVue","BTCPanel","FractalPanel","SuiPanel","StarknetPanel","testTopic","testPublicKey","testProofPayload","pendingDeepLink","logList","connectReady","localPubKey","localSecKey","selectedChain","ProofPayloadVerify","showVerifyRow","selectedMethodData","isChecked","reload","starknetPanelTypedData","computed","selectedChains","initChains","newChains","updatedChains","tab","tabName","initCall","OKXUniversalConnectUI","actionsConfiguration","uiPreferences","walletInfo","onModalStateChange","entries","uri","isPC","items","testTonSdk","blockExplorerUrls","chainName","nativeCurrency","symbol","decimals","dataETH","dataPolygon","types","EIP712Domain","Person","Mail","primaryType","domain","verifyingContract","contents","maxPriorityFeePerGas","maxFeePerGas","gasPrice","gasLimit","image","tonUniversalLog","sendTransactionAlert","fetch","confirm","sendData","adapter","SuiAdapter","suiResult","signAndExecuteTransaction","sui_verifySignature","signPersonalMessage","btcAdapter","btcResult","currentBtcMethod","currentBtcTransaction","hexToBase64","bs64Str","fractalResult","currentFractalMethod","currentFractalTransaction","hexStr","blob","Blob","reader","FileReader","onload","base64Data","readAsDataURL","datatest","firstStr","showUrl","hasEip155","hasSolana","hasSui","hasBtc","hasAptos","hasTon","hasCosmos","hasTron","nameSpacesChains","optSpaceChains","solanaChains","hasStarknet","suiChains","btcChains","connectMethod","connectData","requireData","solana","cosmos","tron","starknet","tonParams","ton","sui","btc","optData","eip155Chains","tonChains","signMethods","getCurrentSelectedMethodData","openModalAndSign","openModal","methodList","suiData","currentMethod","accountAddress","userAgentInfo","Agents","flag","isSafariOrChrome","pubkey","result1","nacl","toBytes","config","AptosConfig","Network","Aptos","simple","sender","functionArguments","Connection","getSolConnect","blockhash","getLatestBlockhash","versionedTransactionMessage","TransactionMessage","payerKey","recentBlockhash","instructions","SystemProgram","transfer","fromPubkey","toPubkey","lamports","compileToV0Message","feePayer","cosmos_verifySignArbitrary","pub_key","signer","prefixStr","signatureBuffer","uint8Signature","pubKeyValueBuffer","pubKeyUint8Array","uiOptions","eth_verifyMessage","ethAddress","originalMessage","recoveredAddress","ethers","list","verifyList","requestItme","ethMessage","solanaMessage","verifySol","aptosMessage","aptosPublicKey","cosmosMessage","tronMessage","StarknetRpcProvider","StarknetAccount","signatureResult","resultObj","verifyPersonalMessageSignature","toSuiAddress","toBase64","newTransaction","created","mounted","scriptTag","createElement","src","getElementsByTagName","appendChild","title","$refs","starknetPanelRef","toRaw","render","app","createApp","App","use","ElementPlus","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","loaded","__webpack_modules__","amdO","deferred","O","chunkIds","priority","notFulfilled","Infinity","every","getter","d","leafPrototypes","getProto","__proto__","mode","def","current","getOwnPropertyNames","definition","g","globalThis","Function","prop","Symbol","toStringTag","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}