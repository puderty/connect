{"version":3,"file":"js/app.14055eff.js","mappings":"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","sources":["webpack://okxconnectdemo/../packages/universal-provider/src/OKXBtcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXCosmosProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTronProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXUniversalProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/sign-client/client.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/namespaces.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/events.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/values.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/aptos.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/btc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/cosmos.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/eip155.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcConnection.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/solana.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/sui.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/ton.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/tron.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/misc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/providers.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/globals.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/misc.js","webpack://okxconnectdemo/./src/App.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue?1b44","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue?e4fb","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue?aa83","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue?089a","webpack://okxconnectdemo/./src/App.vue?7ccd","webpack://okxconnectdemo/./src/main.js","webpack://okxconnectdemo/webpack/bootstrap","webpack://okxconnectdemo/webpack/runtime/amd options","webpack://okxconnectdemo/webpack/runtime/chunk loaded","webpack://okxconnectdemo/webpack/runtime/compat get default export","webpack://okxconnectdemo/webpack/runtime/define property getters","webpack://okxconnectdemo/webpack/runtime/global","webpack://okxconnectdemo/webpack/runtime/hasOwnProperty shorthand","webpack://okxconnectdemo/webpack/runtime/make namespace object","webpack://okxconnectdemo/webpack/runtime/node module decorator","webpack://okxconnectdemo/webpack/runtime/jsonp chunk loading","webpack://okxconnectdemo/webpack/startup"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXBtcProvider = void 0;\nconst _1 = require(\"./\");\nclass OKXBtcProvider {\n    constructor(generator) {\n        this.caip = [\n            \"btc:mainnet\",\n            \"fractal:mainnet\"\n        ];\n        this.provider = generator.getUniversalProvider();\n    }\n    getAddressForChainId(chainId) {\n        var _a, _b;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let accounts = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        });\n        if (accounts == undefined || accounts.length < 0) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `no connected account`);\n        }\n        let account = accounts[0];\n        const address = account.split(':')[2];\n        return address;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let extra = (_c = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[ns]) === null || _b === void 0 ? void 0 : _b.extra) === null || _c === void 0 ? void 0 : _c[chainId];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        return {\n            address: this.getAddressForChainId(chainId),\n            publicKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param signStr\n     * @param chainId\n     * @param type\n     * @returns\n     */\n    signMessage(chainId, signStr, type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (signStr === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signMessage parmas error`);\n            }\n            let params = {\n                signStr: signStr,\n                from: this.getAddressForChainId(chainId)\n            };\n            if (type) {\n                params.type = type;\n            }\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signMessage\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param toAddress\n     * @param satoshis\n     * @param options { feeRate: 0 }\n     * @returns\n     */\n    sendBitcoin(chainId, toAddress, satoshis, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            let params = {\n                from: this.getAddressForChainId(chainId),\n                to: toAddress,\n                value: (satoshis / 100000000).toString(),\n            };\n            if (options === null || options === void 0 ? void 0 : options.feeRate) {\n                params[\"satBytes\"] = options.feeRate.toString();\n            }\n            let result = yield this.send(chainId, params);\n            if (result !== undefined && ('txhash' in result)) {\n                // return txhash directly\n                return result.txhash;\n            }\n            // or return unexpected result\n            return result;\n        });\n    }\n    //  from - string：当前连接的钱包的 BTC 地址\n    //  to - string：接受 BTC 的地址\n    //  value - string：发送 BTC 的数量\n    //  satBytes - string： (可选) 自定义费率\n    //  memo - string： (可选) 指定 outputs OP_RETURN 内容 示例\n    //  memoPos - number： (可选) 指定 outputs OP_RETURN 输出位置，如果传了 memo 则必须传入 memoPos 指定位置，否则 memo 不生效\n    send(chainId, input) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (!this.checkParameters(input, 'to', 'value')) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send parmas  error`);\n            }\n            input[\"from\"] = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: 'btc_send',\n                    params: input\n                }, chainId);\n                if ('result' in ret) {\n                    return {\n                        txhash: ret.result\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param psbtHex string 要签名的 psbt 的十六进制字符串\n     * @param options object { autoFinalized: 0 }\n     */\n    signPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.signPsbts(chainId, [psbtHex], [options]).then(psbtResults => {\n                    let results = JSON.parse(psbtResults);\n                    resolve(results[0]);\n                }).catch(error => {\n                    reject(error);\n                });\n            });\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHexs Array\n     * @param options Array [{ autoFinalized: 0 }]\n     * @returns\n     */\n    signPsbts(chainId, psbtHexs, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHexs === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHexs: psbtHexs,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signPsbts\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHex string\n     * @param options object\n     * @returns\n     */\n    signAndPushPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHex === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHex: psbtHex,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signAndPushPsbt\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return JSON.parse(ret.result);\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param address string, receiver address\n     * @param inscriptionId string, 铭文 ID + 协议，没有传协议则默认是 Ordinals NFT ，目前仅支持 Ordinals 及 Atomicals 协议\n     * @param options object, { feeRate: number } custom rates\n     */\n    sendInscription(chainId, address, inscriptionId, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let extension = {\n                address: address,\n                inscriptionId: inscriptionId,\n                options: options\n            };\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (address === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method sendInscription params error`);\n            }\n            var feeRate = 0;\n            if (options && ('feeRate' in options)) {\n                feeRate = options.feeRate;\n            }\n            let coinId = '';\n            let from = this.getAddressForChainId(chainId);\n            var protocolId = 7; //ProtocolIdBRCNFT\n            if (inscriptionId !== 'undefined') {\n                let atomicSuffix = \"-Atomicals\";\n                let ordinalsSuffix = \"-Ordinals\";\n                if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(atomicSuffix.toLowerCase())) {\n                    protocolId = 8; //WXRCProtocolIdARCNFT\n                    inscriptionId = this.removeSuffix(inscriptionId, atomicSuffix);\n                }\n                else if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(ordinalsSuffix.toLowerCase())) {\n                    inscriptionId = this.removeSuffix(inscriptionId, ordinalsSuffix);\n                }\n            }\n            let params = {\n                scenario: 5,\n                feeRate: feeRate,\n                txType: \"20\",\n                to: address,\n                batchBean: [\n                    {\n                        coinAmount: \"1\",\n                        nftId: inscriptionId,\n                        protocolId: protocolId,\n                        coinId: coinId,\n                        inscriptionId: \"\",\n                        from: from\n                    }\n                ],\n                extension: extension\n            };\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_sendInscription\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    removeSuffix(str, suffix) {\n        if (str.endsWith(suffix)) {\n            return str.slice(0, str.length - suffix.length);\n        }\n        return str;\n    }\n    checkParameters(params, ...keys) {\n        var unexistKeys = [];\n        keys.forEach(key => {\n            if (!(`${key}` in params)) {\n                unexistKeys.push(key);\n            }\n        });\n        if (unexistKeys.length > 0) {\n            console.log('not find key: ', unexistKeys.join(\",\"));\n            return false;\n        }\n        return true;\n    }\n    /**\n     *\n     * @param chainId eg. btc:mainnet\n     * @returns eg. btc\n     */\n    checkChainId(chainId) {\n        if (this.caip.includes(chainId)) {\n            let [namespaceKey, _] = chainId.split(\":\");\n            return namespaceKey;\n        }\n        return undefined;\n    }\n}\nexports.OKXBtcProvider = OKXBtcProvider;\nexports.default = OKXBtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCosmosProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXCosmosProvider {\n    constructor(provider) {\n        this.provider = provider.getUniversalProvider();\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyCosmos]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyCosmos]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n            console.log(\"aptos_publicKey\", publicKey);\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            algo: \"secp256k1\",\n            address: address,\n            bech32Address: address,\n            pubKey: this.hexToUint8Array(publicKey),\n        };\n    }\n    signArbitrary(chainId, signerAddress, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const base64Encoded = window.btoa(data);\n            const signDoc = {\n                chain_id: \"\",\n                account_number: \"0\",\n                sequence: \"0\",\n                fee: {\n                    gas: \"0\",\n                    amount: []\n                },\n                msgs: [{\n                        \"type\": \"sign/MsgSignData\",\n                        \"value\": {\n                            \"signer\": signerAddress,\n                            \"data\": base64Encoded\n                        }\n                    }],\n                memo: \"\"\n            };\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signArbitrary\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chain_id\": chainId.split(\":\")[1],\n                    \"data\": signDoc\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    if (typeof ret.result == \"string\") {\n                        return JSON.parse(ret.result);\n                    }\n                    else {\n                        return ret.result;\n                    }\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAmino(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (signDoc.msgs[0].type == \"sign/MsgSignData\") {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signArbitrary\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chain_id\": chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        return ret.result;\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    return error;\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                }\n            }\n            else {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signAmino\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chainId\": chainId.split(\":\")[1],\n                        \"sign_doc\": signDoc,\n                        \"signOptions\": signOptions\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        const resData = JSON.parse(ret.result);\n                        console.log(\"signdoc\", signDoc, resData.signDoc);\n                        signDoc.fee = resData.signDoc.fee;\n                        return { signed: signDoc, signature: resData.signature };\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                    return error;\n                }\n            }\n        });\n    }\n    signDirect(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const object = {\n                bodyBytes: this.bufferToHex(signDoc.bodyBytes),\n                authInfoBytes: this.bufferToHex(signDoc.authInfoBytes),\n                chainId: signDoc.chainId,\n                accountNumber: signDoc.accountNumber ? signDoc.accountNumber.toString() : null,\n                signOptions: signOptions ? signOptions : null\n            };\n            let data = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signDirect\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chainId\": chainId.split(\":\")[1],\n                    \"sign_doc\": object,\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    const res = JSON.parse(ret.result);\n                    console.log(\"signdirect result\", res);\n                    signDoc.authInfoBytes = this.messageToBuffer(res.signDoc.authInfoBytes);\n                    return { signed: signDoc, signature: res.signature };\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    messageToBuffer(message) {\n        var buffer = Uint8Array.from([]);\n        try {\n            if (typeof message === \"string\") {\n                buffer = this.hexToUint8Array(message.replace(\"0x\", \"\"));\n            }\n            else {\n                buffer = Uint8Array.from(message);\n            }\n        }\n        catch (err) {\n            console.log(`messageToBuffer error: ${err}`);\n        }\n        return buffer;\n    }\n    bufferToHex(arr) {\n        let output = [...new Uint8Array(arr)]\n            .map(x => x.toString(16).padStart(2, '0'))\n            .join('');\n        return '0x' + output;\n    }\n    hexToUint8Array(hexString) {\n        if (hexString.length % 2 !== 0) {\n            throw \"Invalid hexString\";\n        }\n        var arrayBuffer = new Uint8Array(hexString.length / 2);\n        for (var i = 0; i < hexString.length; i += 2) {\n            var byteValue = parseInt(hexString.substr(i, 2), 16);\n            if (isNaN(byteValue)) {\n                throw \"Invalid hexString\";\n            }\n            arrayBuffer[i / 2] = byteValue;\n        }\n        return arrayBuffer;\n    }\n}\nexports.OKXCosmosProvider = OKXCosmosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTronProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTronProvider {\n    constructor(provider) {\n        this.provider = provider.getUniversalProvider();\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyTron]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyTron]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address,\n            pubKey: publicKey\n        };\n    }\n    stringToHex(str) {\n        let hex = '';\n        for (let i = 0; i < str.length; i++) {\n            hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n        }\n        return hex;\n    }\n    signMessage(chainId, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessage\",\n                \"params\": {\n                    \"message\": this.stringToHex(data)\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signMessageV2(chainId, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessageV2\",\n                \"params\": {\n                    \"message\": data\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signTransaction(chainId, transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let data = {\n                \"method\": \"tron_signTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    let signedTx;\n                    if (typeof ret.result == \"string\") {\n                        signedTx = JSON.parse(ret.result);\n                    }\n                    else {\n                        signedTx = ret.result;\n                    }\n                    let realSignTx = {};\n                    realSignTx.visible = signedTx.visible;\n                    realSignTx.txID = signedTx.txID;\n                    let rawData = {};\n                    rawData.contract = signedTx.raw_data.contract;\n                    rawData.expiration = signedTx.raw_data.expiration;\n                    rawData.ref_block_bytes = signedTx.raw_data.ref_block_bytes;\n                    rawData.ref_block_hash = signedTx.raw_data.ref_block_hash;\n                    rawData.timestamp = signedTx.raw_data.timestamp;\n                    realSignTx.raw_data = rawData;\n                    realSignTx.raw_data_hex = signedTx.raw_data_hex;\n                    realSignTx.signature = signedTx.signature;\n                    return realSignTx;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAndSendTransaction(chainId, transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let data = {\n                \"method\": \"tron_signAndSendTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n}\nexports.OKXTronProvider = OKXTronProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXUniversalProvider = void 0;\nconst eip155_1 = require(\"./provider/providers/eip155\");\nconst sui_1 = require(\"./provider/providers/sui\");\nconst constants_1 = require(\"./provider/constants\");\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nconst client_1 = require(\"./packages/sign-client/client\");\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"./packages/utils/namespaces\");\nconst solana_1 = __importDefault(require(\"./provider/providers/solana\"));\nconst btc_1 = __importDefault(require(\"./provider/providers/btc\"));\nconst aptos_1 = __importDefault(require(\"./provider/providers/aptos\"));\nconst ton_1 = __importDefault(require(\"./provider/providers/ton\"));\nconst cosmos_1 = __importDefault(require(\"./provider/providers/cosmos\"));\nconst tron_1 = __importDefault(require(\"./provider/providers/tron\"));\nclass OKXUniversalProvider {\n    static init(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const provider = new OKXUniversalProvider(opts);\n            yield provider.initialize();\n            return provider;\n        });\n    }\n    getUniversalProvider() {\n        return this;\n    }\n    constructor(opts) {\n        this.rpcProviders = {};\n        this.events = new eventemitter3_1.default();\n        this.providerOpts = opts;\n    }\n    request(args, chain) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.connected()) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return yield this.getProvider(namespace).request(requestParam);\n        });\n    }\n    buildRequestParamFromRequest(args, chain) {\n        (0, core_1.logDebug)(\"UniversalProvider request args >>>: \", chain, JSON.stringify(args));\n        const [namespace, chainId] = this.validateChain(chain);\n        if (!this.session) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Please call connect() before request()\");\n        }\n        let keyArr = Object.keys(this.session.namespaces);\n        if (!chain && keyArr && keyArr.length > 1) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Multiple chains have been linked, the request method requires chain`);\n        }\n        (0, core_1.logDebug)(\"UniversalProvider request >>args>>>: \", args);\n        const requestParam = Object.assign(Object.assign({}, args), { chainId: `${namespace}:${chainId}` });\n        return { namespace, requestParam };\n    }\n    enable() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.client) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (!this.session) {\n                if (this.connectOpts) {\n                    yield this.connect(this.connectOpts);\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n                }\n            }\n            const accounts = yield this.requestAccounts();\n            return accounts;\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.session) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                let called = false;\n                const onRequestSent = () => __awaiter(this, void 0, void 0, function* () {\n                    if (!called) {\n                        called = true;\n                        yield this.disconnectAndEmit();\n                        yield this.cleanup();\n                        resolve();\n                        (0, core_1.logDebug)(\"UniversalProvider disconnect Disconnected\");\n                    }\n                });\n                try {\n                    yield this.client.disconnect();\n                    yield onRequestSent();\n                }\n                catch (e) {\n                    yield onRequestSent();\n                }\n            }));\n        });\n    }\n    disconnectAndEmit() {\n        var _a, _b;\n        this.client.engine.connectionManager.disconnect();\n        this.events.emit(\"disconnect\", { topic: (_a = this.session) === null || _a === void 0 ? void 0 : _a.topic });\n        this.events.emit(\"session_delete\", { topic: (_b = this.session) === null || _b === void 0 ? void 0 : _b.topic });\n    }\n    aptosChainNameToGeneralId(chainId) {\n        if (chainId == \"aptos:mainnet\") {\n            return \"aptos:637\";\n        }\n        else if (chainId == \"movement:testnet\") {\n            return \"aptos:70000060\";\n        }\n        else {\n            return chainId;\n        }\n    }\n    replaceAptos(opts) {\n        var _a, _b;\n        let aptosNameSpace = (_a = opts.namespaces) === null || _a === void 0 ? void 0 : _a[\"aptos\"];\n        if (aptosNameSpace != undefined) {\n            let realNS = this.replaceAptosInner(aptosNameSpace);\n            if (opts.namespaces != undefined && \"aptos\" in opts.namespaces && realNS != undefined) {\n                opts.namespaces.aptos = realNS;\n            }\n        }\n        let optionAptosNameSpace = (_b = opts.optionalNamespaces) === null || _b === void 0 ? void 0 : _b[\"aptos\"];\n        if (optionAptosNameSpace != undefined) {\n            let realOptionNS = this.replaceAptosInner(optionAptosNameSpace);\n            if (opts.optionalNamespaces != undefined && \"aptos\" in opts.optionalNamespaces && realOptionNS != undefined) {\n                opts.optionalNamespaces.aptos = realOptionNS;\n            }\n        }\n        return opts;\n    }\n    replaceAptosInner(aptosNameSpace) {\n        var _a;\n        if (aptosNameSpace != undefined) {\n            aptosNameSpace.chains = (_a = aptosNameSpace.chains) === null || _a === void 0 ? void 0 : _a.map(chainId => {\n                return this.aptosChainNameToGeneralId(chainId);\n            });\n            if (aptosNameSpace.defaultChain != undefined) {\n                aptosNameSpace.defaultChain = this.aptosChainNameToGeneralId(aptosNameSpace.defaultChain);\n            }\n        }\n        return aptosNameSpace;\n    }\n    connected() {\n        let disconnectInner = () => {\n            try {\n                this.cleanup();\n                this.client.engine.connectionManager.disconnect();\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"Error during disconnect:\", e);\n            }\n        };\n        try {\n            if (!this.session)\n                return false;\n            if (!this.client.engine.connectionManager.getCurrentConnectionReady()) {\n                disconnectInner();\n                return false;\n            }\n            return true;\n        }\n        catch (e) {\n            disconnectInner();\n            return false;\n        }\n    }\n    connect(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.client) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            opts = this.replaceAptos(opts);\n            if (this.connected()) {\n                return this.session;\n            }\n            (0, core_1.logDebug)(`OKXUniversalProvider connect >>>>`, JSON.stringify(opts));\n            if (opts.sessionConfig === undefined) {\n                opts.sessionConfig = {};\n            }\n            if (opts.sessionConfig.openUniversalUrl === undefined) {\n                opts.sessionConfig.openUniversalUrl = (0, core_1.isMobileUserAgent)();\n            }\n            this.setNamespaces(opts);\n            try {\n                (0, core_1.logDebug)(`UniversalProvider connect opts.stringify ====> ${JSON.stringify(opts)}`);\n                let session = yield this.client.connect(opts);\n                (0, core_1.logDebug)(`UniversalProvider connect success ====> ${JSON.stringify(session)}`);\n                if (session) {\n                    this.session = session;\n                    this.onConnect();\n                    return session;\n                }\n                return undefined;\n            }\n            catch (error) {\n                (0, core_1.logDebug)(`UniversalProvider connect error ====> `, JSON.stringify(error));\n                throw error;\n            }\n        });\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    setDefaultChain(chain, rpcUrl) {\n        chain = this.aptosChainNameToGeneralId(chain);\n        try {\n            // ignore without active session\n            if (!this.connected())\n                return;\n            const [namespace, chainId] = this.validateChain(chain);\n            const provider = this.getProvider(namespace);\n            provider.setDefaultChain(chainId, rpcUrl);\n        }\n        catch (error) {\n            // ignore the error if the fx is used prematurely before namespaces are set\n            if (!/Please call connect/.test(error.message))\n                throw error;\n        }\n    }\n    checkStorage() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let sessionInfoStr = yield this.getFromStore(\"connectSession\");\n            (0, core_1.logDebug)(sessionInfoStr);\n            if (sessionInfoStr) {\n                let sessionInfo = sessionInfoStr;\n                this.session = sessionInfo;\n                this.client.session = this.session;\n                this.sessionConfig = sessionInfo.sessionConfig;\n                this.client.sessionConfig = this.sessionConfig;\n                (0, core_1.logDebug)('[evm u-provider] do reconnection', this.session);\n                yield this.client.restoreconnect(sessionInfo);\n                this.createProviders();\n                this.registerEventListeners();\n                setTimeout(() => {\n                    this.events.emit(\"reconnect\", { session: this.session });\n                }, 100);\n            }\n        });\n    }\n    initialize() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const data = Object.assign({ url: window.location.hostname, origin: window.location.origin }, this.providerOpts.dappMetaData);\n            this.client = new client_1.SignClient(data, this.events);\n            yield this.checkStorage();\n        });\n    }\n    createProviders() {\n        if (!this.client) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n        }\n        if (!this.connected()) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Session not initialized. Please call connect() before enable()\");\n        }\n        const providersToCreate = [\n            ...new Set(Object.keys(this.session.namespaces).map((namespace) => (0, namespaces_1.parseNamespaceKey)(namespace))),\n        ];\n        providersToCreate.forEach((namespace) => {\n            if (!this.session)\n                return;\n            const namespacesValue = this.session.namespaces;\n            const currentNameSpace = namespacesValue[namespace];\n            (0, core_1.logDebug)(\"init eip155 >> \", currentNameSpace);\n            switch (namespace) {\n                case \"eip155\":\n                    const opts = {\n                        namespace: currentNameSpace\n                    };\n                    this.rpcProviders[namespace] = new eip155_1.Eip155Provider(opts, this.client, this.events);\n                    break;\n                case \"solana\":\n                    const opts1 = {\n                        namespace: currentNameSpace\n                    };\n                    let solanaProvider = new solana_1.default(opts1, \"solana\", this.client, this.events);\n                    this.rpcProviders[namespace] = solanaProvider;\n                    let sonicProvider = new solana_1.default(opts1, \"sonic\", this.client, this.events);\n                    this.rpcProviders['sonic'] = sonicProvider;\n                    let svmProvider = new solana_1.default(opts1, \"svm\", this.client, this.events);\n                    this.rpcProviders['svm'] = svmProvider;\n                    // this.rpcProviders[namespace] = new SolanaProvider(opts1, () => { return this.session; });\n                    break;\n                case \"ton\":\n                    const optsTon = {\n                        namespace: currentNameSpace\n                    };\n                    let tonProvider = new ton_1.default(optsTon, this.client, this.events);\n                    this.rpcProviders[namespace] = tonProvider;\n                    break;\n                case \"sui\":\n                    const optsSui = {\n                        namespace: currentNameSpace\n                    };\n                    let suiProvider = new sui_1.SuiProvider(optsSui, this.client, this.events);\n                    suiProvider.name = \"sui\";\n                    this.rpcProviders[namespace] = suiProvider;\n                    break;\n                case \"btc\":\n                    const optsBtc = {\n                        namespace: currentNameSpace\n                    };\n                    let btcProvider = new btc_1.default(optsBtc, \"btc\", this.client, this.events);\n                    this.rpcProviders[\"btc\"] = btcProvider;\n                    let fbProvider = new btc_1.default(optsBtc, \"fractal\", this.client, this.events);\n                    this.rpcProviders[\"fractal\"] = fbProvider;\n                    break;\n                case \"aptos\":\n                    let aptosProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"aptos\", this.client, this.events);\n                    this.rpcProviders[namespace] = aptosProvider;\n                    break;\n                case \"cosmos\":\n                    let cosmosProvider = new cosmos_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = cosmosProvider;\n                    break;\n                case \"tron\":\n                    let tronProvider = new tron_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = tronProvider;\n                    break;\n            }\n        });\n    }\n    registerEventListeners() {\n        if (typeof this.client === \"undefined\") {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client is not initialized\");\n        }\n        this.client.engine.addDisconnectListener(() => {\n            this.disconnectAndEmit();\n            this.cleanup();\n        });\n        this.on(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, (caip2ChainId) => {\n            this.onChainChanged(caip2ChainId);\n        });\n        this.on(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, (nameSpaces) => {\n            if (nameSpaces) {\n                const nameSpacekey = Object.keys(nameSpaces)[0];\n                if (this.session) {\n                    this.session.namespaces[nameSpacekey] = nameSpaces[nameSpacekey];\n                    if (this.session) {\n                        this.persist(\"connectSession\", this.session);\n                        this.events.emit(\"session_update\", this.session);\n                    }\n                    (0, core_1.logDebug)(\"PROVIDER_EVENTS.UPDATE_NAMESPACES this.session... ->>>\", JSON.stringify(this.session));\n                }\n            }\n        });\n    }\n    getProvider(namespace) {\n        (0, core_1.logDebug)('current get providers', this.rpcProviders);\n        (0, core_1.logDebug)('query namespace: ', namespace);\n        return this.rpcProviders[namespace];\n    }\n    setNamespaces(params) {\n        this.connectOpts = params;\n        const { namespaces, sessionConfig } = params;\n        const data = {\n            origin: window.location.origin,\n            url: window.location.hostname,\n            name: this.providerOpts.dappMetaData.name,\n            icon: this.providerOpts.dappMetaData.icon,\n        };\n        this.sessionConfig = {\n            dappInfo: data,\n            openUniversalUrl: sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.openUniversalUrl,\n            redirect: sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect,\n        };\n        (0, core_1.logDebug)(\"setNamespaces sessionConfig>>>\", this.sessionConfig);\n        this.client.sessionConfig = this.sessionConfig;\n        this.persist(\"sessionConfig\", sessionConfig);\n    }\n    validateChain(chain) {\n        var _a;\n        let [namespace, chainId] = (chain === null || chain === void 0 ? void 0 : chain.split(\":\")) || [\"\", \"\"];\n        if (!this.session || !this.session.namespaces || !Object.keys(this.session.namespaces).length) {\n            (0, core_1.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        if (namespace) {\n            if (!this.isChainNamespaceInSession(namespace)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace '${namespace}' is not configured. Please call connect() first with namespace config.`);\n            }\n            if (chainId && chain) {\n                (0, core_1.logDebug)('this.session.namespaces -->> ', namespace, JSON.stringify(this.session.namespaces));\n                const chainsArr = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.chains;\n                (0, core_1.logDebug)('get chainsArr & chain', JSON.stringify(chainsArr), chain);\n                if (chainsArr && !chainsArr.includes(chain)) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace not include the chain '${chain}'`);\n                }\n            }\n        }\n        if (namespace && chainId) {\n            (0, core_1.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        let defaultNamespace = (0, namespaces_1.parseNamespaceKey)(Object.keys(this.session.namespaces)[0]);\n        const defaultChain = this.rpcProviders[defaultNamespace].getDefaultChain();\n        (0, core_1.logDebug)('get default chain:', defaultChain);\n        return [defaultNamespace, defaultChain];\n    }\n    isChainNamespaceInSession(namespaceStr) {\n        var _a, _b;\n        if (Object.keys(((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces) || {})\n            .map((key) => (0, namespaces_1.parseNamespaceKey)(key))\n            .includes(namespaceStr)) {\n            return true;\n        }\n        let isChainNamespaceInSession = false;\n        Object.values(((_b = this.session) === null || _b === void 0 ? void 0 : _b.namespaces) || {})\n            .forEach(namespace => {\n            namespace.chains.forEach(chain => {\n                if (chain.split(\":\")[0] == namespaceStr) {\n                    isChainNamespaceInSession = true;\n                }\n            });\n        });\n        return isChainNamespaceInSession;\n    }\n    requestAccountsWithNamespace(namespace) {\n        return this.getProvider(namespace).requestAccounts();\n    }\n    requestDefaultChainWithNamespace(namespace) {\n        return this.getProvider(namespace).getDefaultChain();\n    }\n    requestAccounts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const [namespace] = this.validateChain();\n            return yield this.getProvider(namespace).requestAccounts();\n        });\n    }\n    onChainChanged(caip2Chain) {\n        var _a;\n        if (!((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces))\n            return;\n        const [namespace, chainId] = this.validateChain(caip2Chain);\n        if (!chainId)\n            return;\n        if (this.session.namespaces[namespace]) {\n            this.session.namespaces[namespace].defaultChain = chainId;\n            this.persist(\"connectSession\", this.session);\n        }\n        this.events.emit(\"chainChanged\", chainId);\n    }\n    onConnect() {\n        this.createProviders();\n        if (this.session) {\n            this.persist(\"connectSession\", this.session);\n        }\n        this.events.emit(\"connect\", { session: this.session });\n        this.registerEventListeners();\n    }\n    cleanup() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.session = undefined;\n            this.sessionProperties = undefined;\n            this.persist(\"optionalNamespaces\", undefined);\n            this.persist(\"sessionProperties\", undefined);\n            this.persist(\"connectSession\", undefined);\n        });\n    }\n    persist(key, data) {\n        (0, core_1.logDebug)('[evm u-provider] persisit data', key, data);\n        return this.client.engine.connectionManager.saveSessionContent(key, data);\n    }\n    getFromStore(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.client.engine.connectionManager.getSessionContent(key);\n        });\n    }\n    showRequestModal(args, chain) {\n        try {\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return this.getProvider(namespace).showRequestModal(requestParam);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n}\nexports.OKXUniversalProvider = OKXUniversalProvider;\nexports.default = OKXUniversalProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXConnectError = exports.OKX_CONNECT_ERROR_CODES = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.OKXTronProvider = exports.OKXCosmosProvider = exports.OKXBtcProvider = exports.OKXUniversalProvider = void 0;\n__exportStar(require(\"./provider/types\"), exports);\nvar OKXUniversalProvider_1 = require(\"./OKXUniversalProvider\");\nObject.defineProperty(exports, \"OKXUniversalProvider\", { enumerable: true, get: function () { return OKXUniversalProvider_1.OKXUniversalProvider; } });\nvar OKXBtcProvider_1 = require(\"./OKXBtcProvider\");\nObject.defineProperty(exports, \"OKXBtcProvider\", { enumerable: true, get: function () { return OKXBtcProvider_1.OKXBtcProvider; } });\nvar OKXCosmosProvider_1 = require(\"./OKXCosmosProvider\");\nObject.defineProperty(exports, \"OKXCosmosProvider\", { enumerable: true, get: function () { return OKXCosmosProvider_1.OKXCosmosProvider; } });\nvar OKXTronProvider_1 = require(\"./OKXTronProvider\");\nObject.defineProperty(exports, \"OKXTronProvider\", { enumerable: true, get: function () { return OKXTronProvider_1.OKXTronProvider; } });\nvar core_1 = require(\"@okxconnect/core\");\nObject.defineProperty(exports, \"NameSpaceKeySui\", { enumerable: true, get: function () { return core_1.NameSpaceKeySui; } });\nObject.defineProperty(exports, \"NameSpaceKeyBtc\", { enumerable: true, get: function () { return core_1.NameSpaceKeyBtc; } });\nObject.defineProperty(exports, \"OKX_CONNECT_ERROR_CODES\", { enumerable: true, get: function () { return core_1.OKX_CONNECT_ERROR_CODES; } });\nObject.defineProperty(exports, \"OKXConnectError\", { enumerable: true, get: function () { return core_1.OKXConnectError; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignClient = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"../utils/namespaces\");\nclass SignClient extends core_1.ISignClient {\n    constructor(metaData, events) {\n        super(metaData);\n        this.engine = new core_1.Engine(new core_1.ConnectionManager());\n        // ---------- Engine ----------------------------------------------- //\n        this.connect = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                var connectRequest = [];\n                (0, core_1.logDebug)(`client connect params >>>`, JSON.stringify(params));\n                var requestAccountItem = {\n                    name: \"requestAccounts\",\n                    requiredNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.namespaces),\n                    optionalNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.optionalNamespaces)\n                };\n                (0, core_1.logDebug)(`client connect connectRequest >>>`, JSON.stringify(connectRequest));\n                connectRequest.push(requestAccountItem);\n                this.engine.universalConnect(connectRequest, Object.assign({ dappInfo: this.metadata }, params.sessionConfig), (info) => {\n                    if (info && info.connectRequest) {\n                        var encodeParams = (0, core_1.encodeConnectParams)(info.connectRequest);\n                        this.events.emit(\"display_uri\", (0, core_1.getUniversalLink)((0, core_1.getAppWalletDeepLink)(encodeParams)));\n                        (0, core_1.logDebug)(`universalConect EngineConnectInfo  ${JSON.stringify(info)}`);\n                        this.events.emit(\"okx_engine_connect_params\", info);\n                    }\n                }).then((session) => {\n                    (0, namespaces_1.fillParamsToSession)(session, params.namespaces, params.optionalNamespaces, this.sessionConfig);\n                    (0, core_1.logDebug)(`signClient: connect: session ${JSON.stringify(session)}`);\n                    resolve(session);\n                }).catch((e) => {\n                    (0, core_1.logDebug)(`signClient: connect: catch ${JSON.stringify(e)}`);\n                    this.events.emit(\"connect_error\", e);\n                    reject(e);\n                });\n            });\n        });\n        this.restoreconnect = (sessionConfig) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.restoreconnect(sessionConfig, (session) => {\n                    resolve(session);\n                });\n            });\n        });\n        this.reject = (params) => __awaiter(this, void 0, void 0, function* () {\n            //   try {\n            //     return await this.engine.reject(params);\n            //   } catch (error: any) {\n            //     this.logger.error(error.message);\n            //     throw error;\n            //   }\n        });\n        //\n        // public update: ISignClient[\"update\"] = async (params) => {\n        //   return\n        // //   try {\n        // //     return await this.engine.update(params);\n        // //   } catch (error: any) {\n        // //     this.logger.error(error.message);\n        // //     throw error;\n        // //   }\n        // };\n        this.request = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                (0, core_1.logDebug)(\"clint request --params>>>> >\", this.engine.connectionManager.getCurrentConnectionReady(), (_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl, JSON.stringify(params));\n                try {\n                    // this.sessionConfig\n                    if (((_b = this.sessionConfig) === null || _b === void 0 ? void 0 : _b.openUniversalUrl) && (0, core_1.isIos)()) {\n                        this.openOKXWallet();\n                    }\n                    yield this.engine.send(params, {\n                        resolve: (response) => {\n                            delete response.requestId;\n                            (0, core_1.logDebug)(\"clint request --response >\", JSON.stringify(response));\n                            if (('error' in response) && response.error) {\n                                let error = response.error;\n                                reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                            }\n                            else {\n                                resolve(response);\n                            }\n                        },\n                        onAck: () => {\n                            var _a;\n                            if (!(0, core_1.isIos)() && ((_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl)) {\n                                this.openOKXWallet();\n                            }\n                        }\n                    });\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }));\n        });\n        // public emit: ISignClient[\"emit\"] = async (params) => {\n        //     try {\n        //         // return await this.engine.emit(params);\n        //     } catch (error: any) {\n        //         throw error;\n        //     }\n        // };\n        this.disconnect = () => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"disconnect\"\n                }, {\n                    onAck: () => {\n                        resolve();\n                    }\n                }).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n        this.events = events;\n        this.metadata = metaData;\n    }\n    openOKXWallet() {\n        // if (this.openUniversalUrl){\n        (0, core_1.logDebug)('bridge-provider ==>> connect_5');\n        (0, core_1.openOKXDeeplink)(core_1.standardDeeplink);\n        // }\n    }\n}\nexports.SignClient = SignClient;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAccountsChains = getAccountsChains;\nexports.nameSpaceToConnectWalletNameSpace = nameSpaceToConnectWalletNameSpace;\nexports.fillParamsToSession = fillParamsToSession;\nexports.isCaipNamespace = isCaipNamespace;\nexports.parseNamespaceKey = parseNamespaceKey;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getAccountsChains(accounts) {\n    const chains = [];\n    accounts.forEach((account) => {\n        const [chain, chainId] = account.split(\":\");\n        chains.push(`${chain}:${chainId}`);\n    });\n    return chains;\n}\nfunction nameSpaceToConnectWalletNameSpace(namespaces) {\n    var result = [];\n    if (!namespaces) {\n        return result;\n    }\n    Object.keys(namespaces).forEach((key) => {\n        if (key === core_1.NameSpaceKeyEip155 || key === core_1.NameSpaceKeySOL || key === core_1.NameSpaceKeySui || key === core_1.NameSpaceKeyAptos\n            || key == core_1.NameSpaceKeyBtc || key === core_1.NameSpaceKeyTON || key === core_1.NameSpaceKeyCosmos || key === core_1.NameSpaceKeyTron) {\n            if (namespaces[key].chains) {\n                result.push({\n                    namespace: key,\n                    chains: namespaces[key].chains,\n                    params: namespaces[key].params\n                });\n            }\n        }\n    });\n    return result;\n}\nfunction fillParamsToSession(session, namespaces, optionalNamespaces, sessionConfig) {\n    // Helper function to merge rpcMaps\n    const mergeRpcMap = (targetRpcMap, sourceRpcMap) => {\n        Object.assign(targetRpcMap, sourceRpcMap);\n    };\n    // Merge function for namespaces\n    const mergeNamespaces = (target, source) => {\n        for (const key in source) {\n            if (source.hasOwnProperty(key) && source[key].rpcMap) {\n                if (source[key].rpcMap) {\n                    if (!target[key].rpcMap) {\n                        target[key].rpcMap = {};\n                    }\n                    // 合并 rpcMap\n                    mergeRpcMap(target[key].rpcMap, source[key].rpcMap);\n                }\n                if (source[key].defaultChain && target[key].defaultChain === undefined) {\n                    //defaultChain need in session nameSpace\n                    if (target[key].chains.some(chain => chain.split(\":\")[1] === source[key].defaultChain)) {\n                        target[key].defaultChain = source[key].defaultChain;\n                    }\n                }\n            }\n        }\n    };\n    // 合并 namespaces\n    if (namespaces) {\n        mergeNamespaces(session.namespaces, namespaces);\n    }\n    // 合并 optionalNamespaces\n    if (optionalNamespaces) {\n        mergeNamespaces(session.namespaces, optionalNamespaces);\n    }\n    session.sessionConfig = sessionConfig;\n}\n/**\n * util designed for Wallets that builds namespaces structure by provided supported chains, methods, events & accounts.\n * It takes required & optional namespaces provided in the session proposal\n * along with the supported chains/methods/events/accounts by the wallet and returns a structured namespaces object\n * @param {BuildApprovedNamespacesParams} params\n * @returns {SessionTypes.Namespaces}\n */\n// export function buildApprovedNamespaces(\n//   params: BuildApprovedNamespacesParams,\n// ): SessionTypes.Namespaces {\n//   const {\n//     proposal: { requiredNamespaces, optionalNamespaces = {} },\n//     supportedNamespaces,\n//   } = params;\n//   const normalizedRequired = normalizeNamespaces(requiredNamespaces);\n//   const normalizedOptional = normalizeNamespaces(optionalNamespaces);\n//\n//   // build approved namespaces\n//   const namespaces = {};\n//   Object.keys(supportedNamespaces).forEach((namespace) => {\n//     const supportedChains = supportedNamespaces[namespace].chains;\n//     const supportedMethods = supportedNamespaces[namespace].methods;\n//     const supportedEvents = supportedNamespaces[namespace].events;\n//     const supportedAccounts = supportedNamespaces[namespace].accounts;\n//\n//     supportedChains.forEach((chain) => {\n//       if (!supportedAccounts.some((account) => account.includes(chain))) {\n//         throw new Error(`No accounts provided for chain ${chain} in namespace ${namespace}`);\n//       }\n//     });\n//\n//     namespaces[namespace] = {\n//       chains: supportedChains,\n//       methods: supportedMethods,\n//       events: supportedEvents,\n//       accounts: supportedAccounts,\n//     };\n//   });\n//\n//   // verify all required namespaces are supported\n//   const err = isConformingNamespaces(requiredNamespaces, namespaces, \"approve()\");\n//   if (err) throw new Error(err.message);\n//\n//   const approvedNamespaces = {};\n//\n//   // if both required & optional namespaces are empty, return all supported namespaces by the wallet\n//   if (!Object.keys(requiredNamespaces).length && !Object.keys(optionalNamespaces).length)\n//     return namespaces;\n//\n//   // assign accounts for the required namespaces\n//   Object.keys(normalizedRequired).forEach((requiredNamespace) => {\n//     const chains = supportedNamespaces[requiredNamespace].chains.filter((chain) =>\n//       normalizedRequired[requiredNamespace]?.chains?.includes(chain),\n//     );\n//     const methods = supportedNamespaces[requiredNamespace].methods.filter((method) =>\n//       normalizedRequired[requiredNamespace]?.methods?.includes(method),\n//     );\n//     const events = supportedNamespaces[requiredNamespace].events.filter((event) =>\n//       normalizedRequired[requiredNamespace]?.events?.includes(event),\n//     );\n//\n//     const accounts = chains\n//       .map((chain: string) =>\n//         supportedNamespaces[requiredNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[requiredNamespace] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   });\n//\n//   // add optional namespaces\n//   Object.keys(normalizedOptional).forEach((optionalNamespace) => {\n//     if (!supportedNamespaces[optionalNamespace]) return;\n//\n//     const chainsToAdd = normalizedOptional[optionalNamespace]?.chains?.filter((chain) =>\n//       supportedNamespaces[optionalNamespace].chains.includes(chain),\n//     );\n//     const methodsToAdd = supportedNamespaces[optionalNamespace].methods.filter((method) =>\n//       normalizedOptional[optionalNamespace]?.methods?.includes(method),\n//     );\n//     const eventsToAdd = supportedNamespaces[optionalNamespace].events.filter((event) =>\n//       normalizedOptional[optionalNamespace]?.events?.includes(event),\n//     );\n//\n//     const accountsToAdd = chainsToAdd\n//       ?.map((chain: string) =>\n//         supportedNamespaces[optionalNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[optionalNamespace] = {\n//       chains: mergeArrays(approvedNamespaces[optionalNamespace]?.chains, chainsToAdd),\n//       methods: mergeArrays(approvedNamespaces[optionalNamespace]?.methods, methodsToAdd),\n//       events: mergeArrays(approvedNamespaces[optionalNamespace]?.events, eventsToAdd),\n//       accounts: mergeArrays(approvedNamespaces[optionalNamespace]?.accounts, accountsToAdd),\n//     };\n//   });\n//\n//   return approvedNamespaces;\n// }\nfunction isCaipNamespace(namespace) {\n    return namespace.includes(\":\");\n}\nfunction parseNamespaceKey(namespace) {\n    return isCaipNamespace(namespace) ? namespace.split(\":\")[0] : namespace;\n}\n/**\n * Converts\n * ```\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * ```\n * into\n * ```\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *```\n */\n// export function normalizeNamespaces(\n//   namespaces: ProposalTypes.RequiredNamespaces,\n// ): ProposalTypes.RequiredNamespaces {\n//   const normalizedNamespaces = {} as ProposalTypes.RequiredNamespaces;\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       methods: mergeArrays(methods, normalizedNamespaces[normalizedKey]?.methods),\n//       events: mergeArrays(events, normalizedNamespaces[normalizedKey]?.events),\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n// export function getNamespacesFromAccounts(accounts: string[]) {\n//   const namespaces = {};\n//   accounts?.forEach((account) => {\n//     const [namespace, chainId] = account.split(\":\");\n//     if (!namespaces[namespace]) {\n//       namespaces[namespace] = {\n//         accounts: [],\n//         chains: [],\n//         events: [],\n//       };\n//     }\n//     namespaces[namespace].accounts.push(account);\n//     namespaces[namespace].chains.push(`${namespace}:${chainId}`);\n//   });\n//\n//   return namespaces;\n// }\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PROVIDER_EVENTS = void 0;\nexports.PROVIDER_EVENTS = {\n    DEFAULT_CHAIN_CHANGED: \"default_chain_changed\",\n    UPDATE_NAMESPACES: \"update_name_spaces\",\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./values\"), exports);\n__exportStar(require(\"./events\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GENERIC_SUBPROVIDER_NAME = exports.RPC_URL = exports.STORAGE = exports.CONTEXT = exports.WC_VERSION = exports.PROTOCOL = exports.RELAY_URL = exports.LOGGER = void 0;\nexports.LOGGER = \"error\";\nexports.RELAY_URL = \"wss://relay.walletconnect.com\";\nexports.PROTOCOL = \"wc\";\nexports.WC_VERSION = 2;\nexports.CONTEXT = \"universal_provider\";\nexports.STORAGE = `${exports.PROTOCOL}@${exports.WC_VERSION}:${exports.CONTEXT}:`;\nexports.RPC_URL = \"https://rpc.walletconnect.com/v1/\";\nexports.GENERIC_SUBPROVIDER_NAME = \"generic\";\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass AptosProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"aptos\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"solana request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"solana provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = AptosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass BtcProvider {\n    constructor(opts, name, client, events) {\n        this.name = core_1.NameSpaceKeyBtc;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"btc request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"btc provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = BtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass CosmosProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyCosmos;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"cosmos request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"cosmos provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = CosmosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Eip155Provider = void 0;\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nclass Eip155Provider {\n    constructor(opts, client, events) {\n        this.name = \"eip155\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = parseInt(this.getDefaultChain());\n        // rpc\n        this.httpProviders = this.createHttpProviders();\n        (0, core_1.logDebug)(\"eip155 constructor --opts.namespace-->\", opts.namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    isArray(value) {\n        return typeof value === \"object\" && value !== null && Array.isArray(value);\n    }\n    updateRequestParams(args) {\n        let isDic = args.params && typeof args.params === 'object' && !Array.isArray(args.params);\n        if (args.method === 'wallet_switchEthereumChain') {\n            const switchChainId = args.chainId.split(\":\")[1];\n            // const hexChainId = parseInt(switchChainId, 16);\n            const decimalNumber = parseInt(switchChainId, 10);\n            if (isNaN(decimalNumber)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid decimal number,  chainId: '${switchChainId}' `);\n            }\n            if (!args.params) {\n                args.params = { chainId: '0x' + decimalNumber.toString(16) };\n            }\n            else if (isDic) { //为 Record<string, unknown>\n                let params = args.params;\n                if (!('chainId' in params)) {\n                    params['chainId'] = '0x' + decimalNumber.toString(16);\n                    args.params = params;\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params error ,  method: '${args.method}' `);\n            }\n        }\n        else if (args.method === 'personal_sign'\n            || args.method === 'eth_signTypedData_v4'\n            || args.method === 'eth_sendTransaction'\n            || args.method === 'wallet_watchAsset') {\n            if (!args.params) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params is nil, method: '${args.method}'`);\n            }\n            if (this.isRecord(args.params)) {\n                let params = args.params;\n                (0, core_1.logDebug)(\"eip155 updateRequestParams params>\", JSON.stringify(params));\n                if ('chainId' in params) {\n                    const selectedChainId = args.chainId.split(\":\")[1];\n                    const chainNum = parseInt(selectedChainId, 10);\n                    let paramsChainString = String(params.chainId);\n                    let paramsChainId;\n                    if (paramsChainString.startsWith(this.name) && args.chainId === paramsChainString) { //为\n                        paramsChainId = chainNum;\n                    }\n                    else if (paramsChainString.startsWith(\"0x\")) {\n                        paramsChainId = parseInt(paramsChainString, 16);\n                    }\n                    else if (!isNaN(Number(paramsChainString))) { //数字\n                        paramsChainId = parseInt(paramsChainString, 10);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid params.chainId format, method: '${args.method}'`);\n                    }\n                    if (chainNum !== paramsChainId) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params.chainId not equal chain,  method: '${args.method}' `);\n                    }\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid request params type, method: '${args.method}'`);\n            }\n        }\n    }\n    //adapt array\n    adaptArray(args) {\n        if (args.method === 'wallet_switchEthereumChain'\n            || args.method === 'wallet_addEthereumChain'\n            || args.method === 'wallet_watchAsset'\n            || args.method === 'eth_sendTransaction') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr) {\n                    if (paramsArr.length === 1) {\n                        let firstParam = args.params[0];\n                        if (this.isRecord(firstParam)) {\n                            args.params = firstParam;\n                        }\n                    }\n                    else if (paramsArr.length > 1) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                    }\n                }\n            }\n        }\n        else if (args.method === 'eth_signTypedData_v4') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr && paramsArr.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                }\n                else if (paramsArr && paramsArr.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let messageObj = {};\n                if (paramsArr && paramsArr.length === 2) {\n                    let addressObj = args.params[0]; //address\n                    if (addressObj && typeof addressObj === 'string') { //check address\n                        let isEqual = false;\n                        this.namespace.accounts.forEach((chain) => {\n                            let chainAddress = chain.split(':')[2];\n                            if (chainAddress === addressObj) {\n                                isEqual = true;\n                            }\n                        });\n                        (0, core_1.logDebug)(\"eip155 adaptArray eth_signTypedData_v4 >>>isEqual: \", isEqual);\n                        if (!isEqual) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error, not equal,  method: '${args.method}' `);\n                        }\n                        if (this.isRecord(args.params[1])) {\n                            messageObj = args.params[1];\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error , not string,  method: '${args.method}' `);\n                    }\n                }\n                else if (paramsArr && paramsArr.length === 1) {\n                    if (this.isRecord(args.params[0])) {\n                        messageObj = args.params[0];\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                    }\n                }\n                try {\n                    let messages = JSON.stringify(messageObj);\n                    args.params = {\n                        typedDataJson: messages\n                    };\n                }\n                catch (err) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params call JSON.stringify() failed,  method: '${args.method}' `);\n                }\n            }\n        }\n        else if (args.method === 'personal_sign') {\n            if (this.isArray(args.params)) {\n                if (args.params && args.params.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params error,  method: '${args.method}' `);\n                }\n                else if (args.params && args.params.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let firstObj = args.params[0];\n                let secondObj = args.params[1];\n                if (secondObj && typeof secondObj === 'string') { //check address\n                    let isEqual = false;\n                    this.namespace.accounts.forEach((chain) => {\n                        let chainAddress = chain.split(':')[2];\n                        if (chainAddress === secondObj) {\n                            isEqual = true;\n                        }\n                    });\n                    (0, core_1.logDebug)(\"eip155 adaptArray personal_sign >>>isEqual: \", isEqual);\n                    if (!isEqual) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error,  method: '${args.method}' `);\n                    }\n                }\n                if (firstObj && typeof firstObj === 'string') {\n                    args.params = {\n                        message: firstObj\n                    };\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is error,  method: '${args.method}' `);\n                }\n            }\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"eth_requestAccounts\":\n            case \"eth_accounts\":\n            case \"eth_chainId\":\n                return false;\n            case \"eth_sendTransaction\":\n            case \"eth_signTransaction\":\n            case \"eth_sign\":\n            case \"personal_sign\":\n            case \"eth_signTypedData\":\n            case \"wallet_addEthereumChain\":\n            case \"wallet_watchAsset\":\n            case \"eth_signTypedData_v4\":\n                return true;\n            case \"wallet_switchEthereumChain\": {\n                this.adaptArray(args);\n                this.updateRequestParams(args);\n                const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n                return !this.isChainApproved(parsedChainId);\n            }\n            default:\n                return false;\n        }\n        return false;\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.adaptArray(args);\n            (0, core_1.logDebug)(\"eip155 request --args--string>\", JSON.stringify(args));\n            this.updateRequestParams(args);\n            (0, core_1.logDebug)(\"eip155 request --params--string>\", JSON.stringify(args));\n            switch (args.method) {\n                case \"eth_requestAccounts\":\n                    return this.getAccounts();\n                case \"eth_accounts\":\n                    return this.getAccounts();\n                case \"eth_chainId\":\n                    return parseInt(this.getDefaultChain());\n                case \"wallet_switchEthereumChain\": {\n                    return (yield this.handleSwitchChain(args));\n                }\n                case \"wallet_addEthereumChain\":\n                    return this.addEthereumChain(args);\n                default:\n                    break;\n            }\n            if (this.namespace.methods.includes(args.method)) {\n                // personal_sign\n                // eth_signTypedData_v4\n                // eth_sendTransaction\n                // wallet_watchAsset\n                try {\n                    const response = yield this.client.request(args);\n                    (0, core_1.logDebug)(\"eip155 request --response----string>\", JSON.stringify(response));\n                    if (this.isRecord(response)) {\n                        if ('result' in response) {\n                            let result = response.result;\n                            if (result && typeof result === 'string' && (result === \"true\" || result === \"false\")) {\n                                (0, core_1.logDebug)(\"eip155 request --wallet_watchAsset>>>>\", result === \"true\");\n                                return (result === \"true\");\n                            }\n                            return response.result;\n                        }\n                    }\n                    return response;\n                }\n                catch (e) {\n                    (0, core_1.logDebug)(`eip155 request --response --error--string> e instanceof OKXConnectError ${e instanceof core_1.OKXConnectError}`, JSON.stringify(e));\n                    throw e;\n                }\n            }\n            else {\n                (0, core_1.logDebug)('[RPC] request begin');\n                return yield this.getHttpProvider().request(args);\n            }\n        });\n    }\n    addEthereumChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let resultData = (yield this.client.request(args));\n            try {\n                if ('result' in resultData) {\n                    let successData = resultData;\n                    let account = resultData.result;\n                    if (account) {\n                        const nameSpace = account.split(\":\")[0];\n                        const chainId = account.split(\":\")[1];\n                        const chain = nameSpace + ':' + chainId;\n                        let newNameSpace = this.namespace;\n                        this.namespace.accounts.push(account);\n                        this.namespace.chains.push(chain);\n                        if (this.isRecord(args.params)) {\n                            if (\"rpcUrls\" in args.params) {\n                                let rpcUrls = args.params.rpcUrls;\n                                let rpcUrl = rpcUrls ? rpcUrls[0] : undefined;\n                                if (rpcUrl) {\n                                    if (this.namespace.rpcMap) {\n                                        this.namespace.rpcMap[chainId] = rpcUrl;\n                                    }\n                                    else {\n                                        this.namespace.rpcMap = {\n                                            [chainId]: rpcUrl\n                                        };\n                                    }\n                                    this.setHttpProvider(chainId, rpcUrl);\n                                }\n                            }\n                        }\n                        this.events.emit(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, {\n                            eip155: this.namespace\n                        });\n                    }\n                }\n                else {\n                    new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request error`);\n                }\n            }\n            catch (error) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request  error`);\n            }\n            return null;\n        });\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        this.chainId = parseInt(chainId);\n        // set rpc\n        if (!this.httpProviders[chainId]) {\n            const rpc = rpcUrl || (0, utils_1.getRpcUrl)(`${this.name}:${chainId}`, this.namespace);\n            if (!rpc) {\n                // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n                (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            }\n            else {\n                this.setHttpProvider(chainId, rpc);\n            }\n        }\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId.toString();\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // ---------- Private ----------------------------------------------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"eip155 getAccounts \", accounts, this.chainId);\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    getHexChainIdFromRequest(args) {\n        let params = args.params;\n        let hexChainId = \"0x0\";\n        if (params && \"chainId\" in params) {\n            hexChainId = params.chainId;\n        }\n        hexChainId = hexChainId.startsWith(\"0x\") ? hexChainId : `0x${hexChainId}`;\n        (0, core_1.logDebug)(\"handleSwitchChain -->args \", args);\n        (0, core_1.logDebug)(\"handleSwitchChain -->hexChainId \", hexChainId);\n        const parsedChainId = parseInt(hexChainId, 16);\n        (0, core_1.logDebug)(\"handleSwitchChain -->parsedChainId \", parsedChainId);\n        return { parsedChainId, hexChainId };\n    }\n    handleSwitchChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n            if (this.isChainApproved(parsedChainId)) {\n                this.setDefaultChain(`${parsedChainId}`);\n            }\n            else {\n                const resultData = (yield this.client.request({\n                    method: \"wallet_switchEthereumChain\",\n                    chainId: args.chainId,\n                    params: {\n                        chainId: hexChainId,\n                    },\n                }));\n                try {\n                    if ('result' in resultData) {\n                        let successData = resultData;\n                        let account = resultData.result;\n                        if (account) {\n                            const nameSpace = account.split(\":\")[0];\n                            const chainId = account.split(\":\")[1];\n                            const chain = nameSpace + ':' + chainId;\n                            let newNameSpace = this.namespace;\n                            this.namespace.accounts.push(account);\n                            this.namespace.chains.push(chain);\n                            (0, core_1.logDebug)(\"handleSwitchChain -->wallet_switchEthereumChain \", resultData);\n                            this.setDefaultChain(`${parsedChainId}`);\n                            this.events.emit(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, {\n                                eip155: this.namespace\n                            });\n                        }\n                    }\n                    else {\n                        new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request error`);\n                    }\n                }\n                catch (error) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request  error`);\n                }\n            }\n            return null;\n        });\n    }\n    isChainApproved(chainId) {\n        return this.namespace.chains.includes(`${this.name}:${chainId}`);\n    }\n    // rpc\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            //   throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            (0, core_1.logDebug)('get parsed chain and rpc:', parsedChainId, parsedRpc);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        (0, core_1.logDebug)('get http providermap:', http);\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n}\nexports.Eip155Provider = Eip155Provider;\nexports.default = Eip155Provider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcConnection = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\n// Source: https://nodejs.org/api/events.html#emittersetmaxlistenersn\nconst EVENT_EMITTER_MAX_LISTENERS_DEFAULT = 10;\nclass JsonRpcConnection {\n    constructor(url, disableProviderPing = false) {\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n        this.events = new eventemitter3_1.EventEmitter();\n        this.isAvailable = false;\n        this.registering = false;\n        if (!(0, core_2.isHttpUrl)(url)) {\n            throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n        }\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n    }\n    get connected() {\n        return this.isAvailable;\n    }\n    get connecting() {\n        return this.registering;\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            yield this.register(url);\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                throw new Error(\"Connection already closed\");\n            }\n            this.onClose();\n        });\n    }\n    send(payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                yield this.register();\n            }\n            try {\n                const body = (0, core_1.safeJsonStringify)(payload);\n                const res = yield (0, cross_fetch_1.default)(this.url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                const data = yield res.json();\n                this.onPayload({ data });\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    register() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (!(0, core_2.isHttpUrl)(url)) {\n                throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n            }\n            if (this.registering) {\n                return new Promise((resolve, reject) => {\n                    this.events.once(\"register_error\", (error) => {\n                        reject(error);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.isAvailable === \"undefined\") {\n                            return reject(new Error(\"HTTP connection is missing or invalid\"));\n                        }\n                        resolve();\n                    });\n                });\n            }\n            this.url = url;\n            this.registering = true;\n            try {\n                if (!this.disableProviderPing) {\n                    const body = (0, core_1.safeJsonStringify)({ id: 1, jsonrpc: \"2.0\", method: \"test\", params: [] });\n                    yield (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                }\n                this.onOpen();\n            }\n            catch (e) {\n                const error = this.parseError(e);\n                this.events.emit(\"register_error\", error);\n                this.onClose();\n                throw error;\n            }\n        });\n    }\n    onOpen() {\n        this.isAvailable = true;\n        this.registering = false;\n        this.events.emit(\"open\");\n    }\n    onClose() {\n        this.isAvailable = false;\n        this.registering = false;\n        this.events.emit(\"close\");\n    }\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        const payload = typeof e.data === \"string\" ? (0, core_1.safeJsonParse)(e.data) : e.data;\n        this.events.emit(\"payload\", payload);\n    }\n    onError(id, e) {\n        const error = this.parseError(e);\n        const message = error.message || error.toString();\n        const payload = (0, core_2.formatJsonRpcError)(id, message);\n        this.events.emit(\"payload\", payload);\n    }\n    parseError(e, url = this.url) {\n        return (0, core_2.parseConnectionError)(e, url, \"HTTP\");\n    }\n}\nexports.JsonRpcConnection = JsonRpcConnection;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcProvider = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst types_1 = require(\"../../types\");\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nclass JsonRpcProvider extends types_1.IJSONRpcProvider {\n    constructor(connection) {\n        super(connection);\n        this.events = new eventemitter3_1.EventEmitter();\n        this.connected = false;\n        this.connecting = false;\n        this.hasRegisteredEventListeners = false;\n        this.connection = this.setConnection(connection);\n        if (this.connection.connected) {\n            this.registerEventListeners();\n        }\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            yield this.open(connection);\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.close();\n        });\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    request(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.requestStrict((0, core_1.formatJsonRpcRequest)(request.method, request.params || [], (0, core_1.getBigIntRpcId)().toString()), // casting to any is required in order to use BigInt as rpcId\n            context);\n        });\n    }\n    // ---------- Protected ----------------------------------------------- //\n    requestStrict(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.connection.connected) {\n                    try {\n                        yield this.open();\n                    }\n                    catch (e) {\n                        reject(e);\n                    }\n                }\n                this.events.on(`${request.id}`, (response) => {\n                    if ((0, core_1.isJsonRpcError)(response)) {\n                        reject(response.error);\n                    }\n                    else {\n                        resolve(response.result);\n                    }\n                });\n                try {\n                    (0, core_2.logDebug)('[RPC] >>> send request', request, context);\n                    yield this.connection.send(request, context);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }));\n        });\n    }\n    setConnection(connection = this.connection) {\n        return connection;\n    }\n    onPayload(payload) {\n        this.events.emit(\"payload\", payload);\n        if ((0, core_1.isJsonRpcResponse)(payload)) {\n            this.events.emit(`${payload.id}`, payload);\n        }\n        else {\n            this.events.emit(\"message\", {\n                type: payload.method,\n                data: payload.params,\n            });\n        }\n    }\n    onClose(event) {\n        // Code 3000 indicates an abnormal closure signalled by the relay -> emit an error in this case.\n        if (event && event.code === 3000) {\n            this.events.emit(\"error\", new Error(`WebSocket connection closed abnormally with code: ${event.code} ${event.reason ? `(${event.reason})` : \"\"}`));\n        }\n        this.events.emit(\"disconnect\");\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            if (this.connection === connection && this.connection.connected)\n                return;\n            if (this.connection.connected)\n                this.close();\n            if (typeof connection === \"string\") {\n                yield this.connection.open(connection);\n                connection = this.connection;\n            }\n            this.connection = this.setConnection(connection);\n            yield this.connection.open();\n            this.registerEventListeners();\n            this.events.emit(\"connect\");\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.connection.close();\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    registerEventListeners() {\n        if (this.hasRegisteredEventListeners)\n            return;\n        this.connection.on(\"payload\", (payload) => this.onPayload(payload));\n        this.connection.on(\"close\", (event) => this.onClose(event));\n        this.connection.on(\"error\", (error) => this.events.emit(\"error\", error));\n        this.connection.on(\"register_error\", (_error) => this.onClose());\n        this.hasRegisteredEventListeners = true;\n    }\n}\nexports.JsonRpcProvider = JsonRpcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolanaProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SolanaProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"solana\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"solana request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"solana provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    //   {\n    //     \"chains\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\" ],\n    //     \"accounts\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp:F7wnJc5wiBGy1k87jv6gyNwE3jMEWd18oTQiYsF1xVG7\"],\n    //     \"methods\": [\n    //         \"solana_signTransaction\",\n    //         \"solana_signMessage\"\n    //     ],\n    //     \"defaultChain\": \"5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\"\n    // }\n    // TODO:确认上面的defaultChain是否正确（没有solana前缀）\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"solana\"))) {\n                chainId = `solana:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.SolanaProvider = SolanaProvider;\nexports.default = SolanaProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuiProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SuiProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeySui;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"sui request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"sui provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"sui\"))) {\n                chainId = `sui:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"sui_signMessage\":\n            case \"sui_signPersonalMessage\":\n            case \"sui_signTransactionBlock\":\n            case \"sui_signAndExecuteTransactionBlock\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.SuiProvider = SuiProvider;\nexports.default = SuiProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TONProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTON;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            (0, core_1.logDebug)(\"TONProvider request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"TONProvider request provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                if (!args.params) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params is nil\");\n                }\n                if (this.isRecord(args.params)) {\n                    const _e = args.params, { validUntil } = _e, newParams = __rest(_e, [\"validUntil\"]);\n                    let fromAddress = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n                    if ('from' in newParams) {\n                        fromAddress = newParams.from || ((_d = (_c = this.namespace.payload) === null || _c === void 0 ? void 0 : _c.ton_addr) === null || _d === void 0 ? void 0 : _d.address);\n                    }\n                    args.params['from'] = fromAddress;\n                    args.params['network'] = this.getDefaultChain();\n                    args.params['valid_until'] = validUntil;\n                    let response = yield this.client.request(args);\n                    if (this.isRecord(response) && 'result' in response) {\n                        const result = {\n                            boc: response.result.toString()\n                        };\n                        (0, core_1.logDebug)(\"TONProvider request provider response: \", JSON.stringify(response));\n                        (0, core_1.logDebug)(\"TONProvider request provider result: \", JSON.stringify(result));\n                        return result;\n                    }\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton_send request response is nil\");\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params type add nil\");\n                }\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        var _a, _b;\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"ton getAccounts accounts :\", accounts);\n        (0, core_1.logDebug)(\"ton getAccounts .namespace :\", JSON.stringify(this.namespace));\n        if (!accounts) {\n            return [];\n        }\n        let address = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n        (0, core_1.logDebug)(\"ton getAccounts address :\", address);\n        if (address) {\n            return [\n                address\n            ];\n        }\n        return [];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"ton_sendTransaction\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.default = TONProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TronProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTron;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"tron request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"tron provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = TronProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./providers\"), exports);\n__exportStar(require(\"./misc\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IJSONRpcProvider = exports.IJSONRpcConnection = void 0;\nclass IJSONRpcConnection {\n}\nexports.IJSONRpcConnection = IJSONRpcConnection;\nclass IJSONRpcProvider {\n    constructor(opt) {\n    }\n}\nexports.IJSONRpcProvider = IJSONRpcProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setGlobal = exports.getGlobal = void 0;\nconst globals = {};\nconst getGlobal = (key) => {\n    return globals[key];\n};\nexports.getGlobal = getGlobal;\nconst setGlobal = (key, value) => {\n    globals[key] = value;\n};\nexports.setGlobal = setGlobal;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./misc\"), exports);\n__exportStar(require(\"./globals\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRpcUrl = getRpcUrl;\nexports.getChainId = getChainId;\nexports.convertChainIdToNumber = convertChainIdToNumber;\nexports.parseChainId = parseChainId;\nexports.mergeArrays = mergeArrays;\nfunction getRpcUrl(chainId, rpc, projectId) {\n    var _a;\n    const chain = parseChainId(chainId);\n    // no default\n    return (((_a = rpc.rpcMap) === null || _a === void 0 ? void 0 : _a[chain.reference]) ||\n        ``);\n}\nfunction getChainId(chain) {\n    return chain.includes(\":\") ? chain.split(\":\")[1] : chain;\n}\n// export function validateChainApproval(chain: string, chains: string[]): void {\n//   if (!chains.includes(chain)) {\n//     throw new Error(\n//       `Chain '${chain}' not approved. Please use one of the following: ${chains.toString()}`,\n//     );\n//   }\n// }\n// export function getChainsFromApprovedSession(accounts: string[]): string[] {\n//   return accounts.map((address) => `${address.split(\":\")[0]}:${address.split(\":\")[1]}`);\n// }\n// export function getAccountsFromSession(namespace: string, session: SessionTypes.Struct): string[] {\n//   // match namespaces e.g. eip155 with eip155:1\n//   const matchedNamespaceKeys = Object.keys(session.namespaces).filter((key) =>\n//     key.includes(namespace),\n//   );\n//   if (!matchedNamespaceKeys.length) return [];\n//   const accounts: string[] = [];\n//   matchedNamespaceKeys.forEach((key) => {\n//     const accountsForNamespace = session.namespaces[key].accounts;\n//     accounts.push(...accountsForNamespace);\n//   });\n//   return accounts;\n// }\n// export function mergeRequiredOptionalNamespaces(\n//   required: NamespaceConfig = {},\n//   optional: NamespaceConfig = {},\n// ){\n//   const requiredNamespaces = normalizeNamespaces(required);\n//   const optionalNamespaces = normalizeNamespaces(optional);\n//    return merge.merge(requiredNamespaces,optionalNamespaces)\n// }\n/**\n * Converts\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * into\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *\n */\n// export function normalizeNamespaces(namespaces: NamespaceConfig): NamespaceConfig {\n//   const normalizedNamespaces: NamespaceConfig = {};\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const rpcMap = values.rpcMap || {};\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       ...values,\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       rpcMap: { ...rpcMap, ...normalizedNamespaces[normalizedKey]?.rpcMap },\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n//\n// export function parseCaip10Account(caip10Account: string): string {\n//   return caip10Account.includes(\":\") ? caip10Account.split(\":\")[2] : caip10Account;\n// }\n/**\n * Populates the chains array for each namespace with the chains extracted from the accounts if are otherwise missing\n */\n// export function populateNamespacesChains(\n//   namespaces: SessionTypes.Namespaces,\n// ): Record<string, SessionTypes.Namespace> {\n//   const parsedNamespaces: Record<string, SessionTypes.Namespace> = {};\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const accounts = values.accounts || [];\n//     // If the key includes a CAIP separator `:` we know it's a namespace + chainId (e.g. `eip155:1`)\n//     const chains = isCaipNamespace(key)\n//       ? [key]\n//       : values.chains\n//       ? values.chains\n//       : getChainsFromApprovedSession(values.accounts);\n//     parsedNamespaces[key] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   }\n//   return parsedNamespaces;\n// }\nfunction convertChainIdToNumber(chainId) {\n    if (typeof chainId === \"number\")\n        return chainId;\n    if (chainId.includes(\"0x\")) {\n        return parseInt(chainId, 16);\n    }\n    chainId = chainId.includes(\":\") ? chainId.split(\":\")[1] : chainId;\n    return isNaN(Number(chainId)) ? chainId : Number(chainId);\n}\nconst CAIP_DELIMITER = \":\";\nfunction parseChainId(chain) {\n    const [namespace, reference] = chain.split(CAIP_DELIMITER);\n    return { namespace, reference };\n}\nfunction mergeArrays(a = [], b = []) {\n    return [...new Set([...a, ...b])];\n}\n","<template>\n  <div id=\"app\">\n    <el-container>\n      <el-header>OKX Connect</el-header>\n      <el-main>\n        <!-- 钱包信息 -->\n        <el-card class=\"wallet-info\">\n          <template #header>\n            <div>Wallet Info</div>\n          </template>\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Wallet Address:</strong> {{ getWalletAddress }}\n            </el-col>\n          </el-row>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Status :</strong> {{ currentStatus }}\n            </el-col>\n          </el-row>\n\n          <!--          <el-row class=\"info-row\">-->\n          <!--            <el-col :span=\"24\">-->\n          <!--              <strong>Universal Link:</strong> {{ updateUniLink }}-->\n          <!--            </el-col>-->\n          <!--          </el-row>-->\n        </el-card>\n\n        <!-- 连接钱包 -->\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div>Actions</div>\n          </template>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <el-checkbox v-model=\"withUI\" @change=\"handleWithUI\">\n                show UI</el-checkbox>\n            </el-col>\n          </el-row>\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Modals</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"modals\" placeholder=\"Modals\" @change=\"handleModalsSelect\" multiple>\n                <el-option label=\"Before\" value=\"before\" />\n                <el-option label=\"Success\" value=\"success\" />\n                <el-option label=\"Error\" value=\"error\" />\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center; justify-content: space-between;\">\n            <el-col :span=\"4\" style=\"gap: 2px\">\n              <p style=\"font-size: 11pt; margin: 0px\">Return Strategy</p>\n              <p style=\"font-size: 9pt; margin: 0px\">(Mobile only)</p>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-select\n                v-model=\"returnStrategy\"\n                @change=\"handleReturnStrategySelect\"\n                placeholder=\"Return Strategy\"\n              >\n                <el-option\n                  v-for=\"strategy in returnStrategies\"\n                  :key=\"`return-strategy-select-option-${strategy}`\"\n                  :label=\"strategy\"\n                  :value=\"strategy\"\n                />\n              </el-select>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-input\n                v-if=\"returnStrategy === 'deeplink'\"\n                v-model=\"deeplink\"\n                @change=\"handleReturnStrategyDeeplink\"\n                placeholder=\"Deeplink\"\n                :disabled=\"returnStrategy !== 'deeplink'\"\n                style=\"margin: 0px\"\n              />\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Language</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"language\" @change=\"handleLanguageSelect\" placeholder=\"Language\">\n                <el-option v-for=\"locale in locales\" :key=\"`language-select-option-${locale}`\" :label=\"locale\"\n                  :value=\"locale\" />\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Theme</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"theme\" @change=\"handleThemeSelect\" placeholder=\"Theme\">\n                <el-option label=\"LIGHT\" :value=\"THEME.LIGHT\" />\n                <el-option label=\"DARK\" :value=\"THEME.DARK\" />\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">ton_proof</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-input v-model=\"tonProofValue\"  placeholder=\"input ton_proof\"></el-input>\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" align=\"middle\">\n            <el-col :span=\"4\">\n              <div>req</div>\n            </el-col>\n            <el-col\n              :span=\"6\"\n              v-for=\"item in Object.keys(availableChains)\"\n              :key=\"item\"\n            >\n              <el-checkbox\n                v-model=\"availableChains[item].checked\"\n                :disabled=\"!areChainsInit\"\n                >{{ availableChains[item].name }}</el-checkbox\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" align=\"middle\" style=\"margin-top: 20px\">\n            <el-col :span=\"4\">\n              <div>opt</div>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(43114)\" @change=\"() => handleOptionChange(43114)\">\n                avax</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(10)\" @change=\"() => handleOptionChange(10)\">op</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(8453)\" @change=\"() => handleOptionChange(8453)\">\n                BASE</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(99781165)\"\n                @change=\"() => handleOptionChange(99781165)\">Non-exist chain</el-checkbox>\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                type=\"primary\"\n                @click=\"connectBtnClicked\"\n                icon=\"el-icon-connection\"\n                :disabled=\"!areChainsInit\"\n                >{{ connectStatusStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                type=\"danger\"\n                @click=\"disconnectAction\"\n                icon=\"el-icon-switch-button\"\n                :disabled=\"!areChainsInit || walletAddress.length == 0\"\n                >{{ disconnectStatusStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n          <teleport to=\"body\">\n            <div v-if=\"showModal\" class=\"modal-overlay\" @click=\"closeModal\">\n              <div class=\"modal-content\" @click.stop>\n                <button class=\"close-button\" @click=\"closeModal\">\n                  &times;\n                </button>\n                <h2>Scan to connect</h2>\n                <qrcode-vue :value=\"qrValue\" :size=\"200\" level=\"H\" />\n              </div>\n            </div>\n          </teleport>\n        </el-card>\n\n        <!-- 发送交易 -->\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div>Transactions</div>\n          </template>\n\n          <el-tabs v-model=\"activeTab\" type=\"border-card\" @tab-click=\"clickActiveTab\">\n            <!-- ETH -->\n            <el-tab-pane label=\"ETH\" name=\"eip155:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to ETH)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve TONCoin)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(eth mint\n                    nft)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add SPX6900)\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n            <!-- Polygon-->\n            <el-tab-pane label=\"Polygon\" name=\"eip155:137\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send POL)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve sushi)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(polygon mint\n                    nft)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add LGNS)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_testRpc()\">wallet_testRpc(Polygon)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- BSC-->\n            <el-tab-pane label=\"BNB\" name=\"eip155:56\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to BNB)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve POSI)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add FET)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_testRpc()\">wallet_testRpc(check balance on eth)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Fuse\" name=\"eip155:122\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_swap\">eth_sendTransaction(Swap)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TON\" name=\"ton:-239\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_getAccount\">ton_getAccount</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_sendTransaction\">ton_sendTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- solana -->\n            <el-tab-pane label=\"Sol\" name=\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Sonic\" name=\"sonic:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Sonic(svm)\" name=\"svm:70000059\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- Sui-->\n            <el-tab-pane label=\"Sui\" name=\"sui:mainnet\">\n              <SuiPanel @generateTransactionParams=\"sui_generateTransactionParams\" />\n            </el-tab-pane>\n            <!-- BTC -->\n            <el-tab-pane label=\"BTC\" name=\"btc:mainnet\">\n              <BTCPanel @generateTransactionParams=\"btc_generateTransactionParams\" />\n            </el-tab-pane>\n\n            <!-- Fractal BTC -->\n            <el-tab-pane label=\"Fractal\" name=\"fractal:mainnet\">\n              <FractalPanel @generateTransactionParams=\"fractal_generateTransactionParams\" />\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Tron\" name=\"tron:mainnet\">\n              <TronTransactionPanel\n                  @generateTransactionParams=\"tron_generateTransactionParams\"\n                  @generateTransactionResult=\"tron_getTransactionResult\" />\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Aptos\" name=\"aptos:mainnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signTransaction\">aptos_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"aptos_signAndSubmitTransaction\">aptos_signAndSubmitTransaction</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Movement\" name=\"movement:testnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"move_signTransaction\">move_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"move_signAndSubmitTransaction\">move_signAndSubmitTransaction</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"cosmos\" name=\"cosmos:cosmoshub-4\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"osmos\" name=\"cosmos:osmosis-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"sei交易\" name=\"cosmos:pacific-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n          </el-tabs>\n\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Data:</div>\n            <el-input v-model=\"testTransaction\" type=\"textarea\" :rows=\"5\" placeholder=\"sendTransactions\"></el-input>\n          </el-col>\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Result :</div>\n            <el-input v-model=\"testboc\" type=\"textarea\" :rows=\"5\" placeholder=\"boc\"></el-input>\n          </el-col>\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button type=\"primary\" @click=\"sendTransaction()\">{{\n                testTransactionStr\n                }}</el-button>\n            </el-col>\n          </el-row>\n        </el-card>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<style scoped>\n/* 重置全局边距和内边距 */\nbody,\nhtml {\n  margin: 0;\n  padding: 0;\n  height: 100%;\n}\n\n/* 确保 app 容器占满整个视口 */\n#app {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin: 0 auto;\n  /* 居中 */\n  max-width: 600px;\n  /* 设置最大宽度 */\n  padding: 0 20px;\n  /* 添加一些左右内边距 */\n}\n\n/* 调整 el-container 样式 */\n.el-container {\n  min-height: 100vh;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n}\n\n/* 调整 el-header 样式 */\n.el-header {\n  background-color: #333333;\n  color: white;\n  height: 50px;\n  line-height: 50px;\n  font-size: 18px;\n  font-weight: bold;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n}\n\n/* 调整 el-main 样式 */\n.el-main {\n  padding: 70px 0 20px;\n  /* 增加顶部内边距以避免被固定header遮挡 */\n  flex-grow: 1;\n}\n\n.el-card {\n  margin-bottom: 20px;\n}\n\n.info-row {\n  margin-bottom: 10px;\n}\n\n.input-label {\n  margin-bottom: 5px;\n  text-align: left;\n}\n\n.el-input {\n  margin-bottom: 10px;\n}\n\n/* 通用按钮样式 */\n.wallet-actions .el-button,\n.transaction .el-button,\n.clear-cache .el-button {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 40px;\n}\n\n.wallet-actions .el-button span,\n.transaction .el-button span,\n.clear-cache .el-button span {\n  margin: 0 auto;\n}\n\n/* 按钮行间距 */\n.wallet-actions .button-row,\n.transaction .button-row {\n  margin-bottom: 8px;\n}\n\n.wallet-actions .button-row:last-child,\n.transaction .button-row:last-child {\n  margin-bottom: 0;\n}\n\n/* 调整图标和文字的对齐 */\n.wallet-actions .el-button [class^=\"el-icon-\"],\n.transaction .el-button [class^=\"el-icon-\"],\n.clear-cache .el-button [class^=\"el-icon-\"] {\n  margin-right: 5px;\n  vertical-align: middle;\n}\n\n/* 新增：调整发送交易按钮与输入框的间距 */\n.transaction .el-row:not(:last-child) {\n  margin-bottom: 10px;\n}\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  text-align: center;\n  position: relative;\n  max-width: 90%;\n  width: 300px;\n}\n\n.close-button {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  font-size: 24px;\n  border: none;\n  background: none;\n  cursor: pointer;\n}\n\n/* 响应式调整 */\n@media (max-width: 600px) {\n  #app {\n    padding: 0 10px;\n  }\n\n  .el-main {\n    padding: 60px 0 10px;\n  }\n}\n</style>\n<script>\n\nimport {OKX_CONNECT_ERROR_CODES, safeJsonStringify} from \"@okxconnect/core\"\nimport {OKXBtcProvider, OKXUniversalProvider, OKXCosmosProvider} from \"@okxconnect/universal-provider\"\nimport {OKXSolanaProvider} from \"@okxconnect/solana-provider\";\nimport {\n  Connection,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n  TransactionMessage,\n  VersionedTransaction\n} from '@solana/web3.js';\nimport {OKXSuiProvider as SuiAdapter} from \"@okxconnect/sui-provider\"\nimport QrcodeVue from 'qrcode.vue'\n\nimport { OKXTONProvider } from \"@okxconnect/ton-provider\"\n\nimport {OKXAptosProvider} from \"@okxconnect/aptos-provider\";\nimport {Aptos, AptosConfig, Network} from \"@aptos-labs/ts-sdk\";\n\nimport BTCPanel from \"./components/BtcTransactionPanel.vue\";\nimport FractalPanel from \"./components/FractalTransactionPanel.vue\"\nimport SuiPanel from \"./components/SuiTransactionPanel.vue\";\n\nimport {OKXUniversalConnectUI, THEME} from \"@okxconnect/ui\";\nimport VConsole from 'vconsole';\nimport nacl from \"tweetnacl\";\nconst { verifyADR36Amino } = require('@keplr-wallet/cosmos')\nconst { fromBech32 } = require('@cosmjs/encoding')\nimport { verifyPersonalMessageSignature } from '@mysten/sui/verify';\nimport TronTransactionPanel from \"@/components/TronTransactionPanel.vue\";\n\nnew VConsole();\n\nconst allChains = {\n  1: { name: \"eth\", checked: false },\n  56: { name: \"BNB\", checked: false },\n  137: { name: \"Polygon\", checked: false },\n  122: { name: \"Fuse\", checked: false },\n  \"ton:-239\":{name: \"TON\",checked: false},\n  \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\": {\n    name: \"Sol mainnet\",\n    checked: false,\n  },\n  \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\": {\n    name: \"Sol testnet\",\n    checked: false,\n  },\n  \"sonic:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\": {\n    name: \"Sonic testnet\",\n    checked: false,\n  },\n  \"svm:70000059\": { name: \"70000059\", checked: false },\n  \"sui:mainnet\": { name: \"Sui mainnet\", checked: false },\n  \"aptos:mainnet\": { name: \"Aptos mainnet\", checked: false },\n  \"movement:testnet\": { name: \"Movement\", checked: false },\n  \"btc:mainnet\": { name: \"BTC\", checked: false },\n  \"fractal:mainnet\": { name: \"Fractal\", checked: false },\n  \"cosmos:osmosis-1\": {name: \"osmos\", checked: false},\n  \"cosmos:cosmoshub-4\": {name: \"cosmoshub\", checked: false},\n  \"cosmos:pacific-1\": {name: \"sei\", checked: false},\n  \"cosmos:abvdefg\": {name: \"cosmos:abvdefg\", checked: false},\n  \"tron:mainnet\": {name: \"tron\", checked: false},\n  997865: { name: \"Non Exist chain\", checked: false },\n};\n\nvar optionChains = new Set([]);\nvar selectedModals = [\"before\", \"success\", \"error\"];\nvar selectedReturnStrategy = \"none\";\nvar selectedDeepLink = \"tg://resolve\";\nvar selectedLanguage = \"en_US\";\nvar selectedTheme = THEME.LIGHT;\n\n// import QrcodeVue from 'qrcode.vue'\nexport default {\n  name: \"App\",\n  components: {\n    TronTransactionPanel,\n    QrcodeVue,\n    BTCPanel,\n    FractalPanel,\n    SuiPanel\n  },\n\n  data: () => {\n    return {\n      activeTab: \"eip155:1\",\n      testTopic: \"\",\n      testPublicKey: \"\",\n      testProofPayload: \"\",\n      tonProofValue:\"\",\n      pendingDeepLink: \"-\",\n      logList: [],\n      connectReady: false,\n      connectStatusStr: \"Connect\",\n      disconnectStatusStr: \"Disconnect\",\n      localPubKey: \"\",\n      localSecKey: \"\",\n      testTransaction: \"\",\n      selectedChain: \"eip155:1\",\n      testTransactionStr: \"Send\",\n      walletAddress: \"\",\n      testboc: \"\",\n      ProofPayloadVerify: \"\",\n      showModal: false,\n      showVerifyRow: false,\n      qrValue: \"https://www.okx.com/download\",\n      currentStatus: \"\",\n      areChainsInit: false,\n      availableChains: allChains,\n      isOptionalChecked: (chainId) => {\n        return optionChains.has(chainId);\n      },\n      withUI: localStorage.getItem(\"autoRefresh\") != \"false\",\n      modals: selectedModals,\n      returnStrategies: [\"none\", \"back\", \"deeplink\"],\n      returnStrategy: selectedReturnStrategy,\n      deeplink: selectedDeepLink,\n      locales: [\n        \"en_US\",\n        \"ru_RU\",\n        \"zh_CN\",\n        \"zh\",\n        \"ar_AE\",\n        \"cs_CZ\",\n        \"de_DE\",\n        \"es_ES\",\n        \"es_LAT\",\n        \"fr_FR\",\n        \"id_ID\",\n        \"it_IT\",\n        \"nl_NL\",\n        \"pl_PL\",\n        \"pt_BR\",\n        \"pt_PT\",\n        \"ro_RO\",\n        \"tr_TR\",\n        \"uk_UA\",\n        \"vi_VN\",\n      ],\n      language: selectedLanguage,\n      theme: selectedTheme,\n      THEME: THEME,\n      handleWithUI: (isChecked) => {\n        localStorage.setItem(\"autoRefresh\", `${isChecked}`);\n        location.reload();\n      },\n      handleOptionChange: (chainId) => {\n        if (optionChains.has(chainId)) {\n          optionChains.delete(chainId);\n        } else {\n          optionChains.add(chainId);\n        }\n      },\n    };\n  },\n  computed: {\n    getWalletAddress: function () {\n      return this.walletAddress;\n    },\n  },\n  methods: {\n    isChecked(chainId) {\n      return this.selectedChains.has(chainId);\n    },\n\n    initChains(newChains) {\n      if (newChains.length > 0) {\n        const updatedChains = Object.assign({}, this.availableChains);\n        for (const chainId of newChains) {\n          if (updatedChains[chainId]){\n            updatedChains[chainId].checked = !updatedChains[chainId].checked;\n          }\n        }\n        this.availableChains = updatedChains;\n      }\n\n      this.areChainsInit = true;\n    },\n\n    async clickActiveTab(tab) {\n      const tabName = tab.props ? tab.props.name : tab.name;\n      this.selectedChain = tabName;\n      console.log(`已切换到链 :`, tabName);\n\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n      window.provider.setDefaultChain(this.selectedChain);\n    },\n\n    async connectBtnClicked() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        this.testTonSdk();\n      } else {\n        console.log(`connectBtnClicked provider not finish init`);\n      }\n    },\n\n    async disconnectAction() {\n      try {\n        console.log(\"get disconnect wallet btn clicked\");\n        // await TON.disconnect();\n        var provider = window.provider;\n        await provider.disconnect();\n        this.walletAddress = \"disconnected\";\n      } catch (error) {\n        console.log(\"Disconnect  error ==>> \", error.message);\n        this.currentStatus = error.message;\n      }\n    },\n\n    async eth_requestAccounts() {\n      var data = { method: \"eth_requestAccounts\" };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_chainId() {\n      var data = { method: \"eth_chainId\" };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_switchEthereumChain() {\n      var data = { method: \"wallet_switchEthereumChain\" };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_addEthereumChain() {\n      var data = {\n        method: \"wallet_addEthereumChain\",\n        params: {\n          blockExplorerUrls: [\"https://explorer.fuse.io\"],\n          chainId: \"0x7a\",\n          chainName: \"Fuse\",\n          nativeCurrency: { name: \"Fuse\", symbol: \"FUSE\", decimals: 18 },\n          rpcUrls: [\"https://rpc.fuse.io\"],\n        },\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n    async personal_sign() {\n      if (this.selectedChain === \"eip155:1\") {\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0x1ca023f10e157d148deed210f8bee193657a1eaa7f187909e20a9dc3b071dbc364c41fde37960c05093359f410a061ec8a7dca8c0c39fc7c1e24de8a3329775d1b\n\n        var accounts = await window.provider.request(\n          { method: \"eth_requestAccounts\" },\n          \"eip155\"\n        );\n        var address = accounts[0];\n        console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n        var dataETH = {\n          method: \"personal_sign\",\n          params: [\n            \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n            address,\n          ],\n        };\n\n        this.testTransaction = JSON.stringify(dataETH);\n      } else if (\n        this.selectedChain === \"eip155:137\" ||\n        this.selectedChain === \"eip155:122\"\n      ) {\n        // method\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0xebda9cfa2af43999058dffa0107031d1ef7fc0252dca85dcbd22ea097af922ca39b64d509ef61ce42b7641c5840b8a80337ffd1411b13e87e2260a3f1b6c151c1b\n\n        var dataPolygon = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n        this.testTransaction = JSON.stringify(dataPolygon);\n      } else if (this.selectedChain === \"eip155:56\") {\n        var data = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n\n        this.testTransaction = JSON.stringify(data);\n      }\n    },\n\n    async eth_sendTransaction_swap() {\n      var data = {\n        method: \"eth_sendTransaction\",\n        chainId: \"eip155:122\",\n        params: {\n          value: \"0x38d7ea4c68000\",\n          gas: \"0x2665f\",\n          to: \"0xf2614A233c7C3e7f08b1F887Ba133a13f1eb2c55\",\n          from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n          data: \"0x2646478b000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00000000000000000000000000000000000000000000000000038d7ea4c68000000000000000000000000000620fd5fa44be6af63715ef4e65ddfa0387ad13f5000000000000000000000000000000000000000000000000000000000000001b000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000700301ffff0201602352A9Eb5234466Eac23E59e7B99bCaE79C39c0BE9e53fd7EDaC9F859882AfdDa116645287C629040BE9e53fd7EDaC9F859882AfdDa116645287C62900602352A9Eb5234466Eac23E59e7B99bCaE79C39c01f2F3e73be57031114dd1f4E75c1DD87658be7F0E000bb800000000000000000000000000000000\",\n        },\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_signTypedData_v4() {\n      // method\n      // eth_signTypedData\n      // address\n      // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n      // valid\n      // true\n      // result\n      // 0xa8bb3c6b33a119d2d567c7632195c21988df778006082742125a591f5c633f716107883a37f7de6531a6312a5f69022135bf46fe5ab77905b62c82b3395f985e1b\n      //\n\n      // var data = {\n      //   \"method\": \"eth_signTypedData_v4\",\n      //   \"params\": {\n      //     \"typedDataJson\":\"{\\\"types\\\":{\\\"EIP712Domain\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"version\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"chainId\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"name\\\":\\\"verifyingContract\\\",\\\"type\\\":\\\"address\\\"}],\\\"Person\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"wallet\\\",\\\"type\\\":\\\"address\\\"}],\\\"Mail\\\":[{\\\"name\\\":\\\"from\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"to\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"contents\\\",\\\"type\\\":\\\"string\\\"}]},\\\"primaryType\\\":\\\"Mail\\\",\\\"domain\\\":{\\\"name\\\":\\\"Ether Mail\\\",\\\"version\\\":\\\"1\\\",\\\"chainId\\\":1,\\\"verifyingContract\\\":\\\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\\\"},\\\"message\\\":{\\\"from\\\":{\\\"name\\\":\\\"Cow\\\",\\\"wallet\\\":\\\"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\\\"},\\\"to\\\":{\\\"name\\\":\\\"Bob\\\",\\\"wallet\\\":\\\"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\\\"},\\\"contents\\\":\\\"Hello, Bob!\\\"}}\"\n      // }}\n\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        \"eip155\"\n      );\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n      var data = {\n        method: \"eth_signTypedData_v4\",\n        params: [\n          address,\n          {\n            types: {\n              EIP712Domain: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"version\",\n                  type: \"string\",\n                },\n                {\n                  name: \"chainId\",\n                  type: \"uint256\",\n                },\n                {\n                  name: \"verifyingContract\",\n                  type: \"address\",\n                },\n              ],\n              Person: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"wallet\",\n                  type: \"address\",\n                },\n              ],\n              Mail: [\n                {\n                  name: \"from\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"to\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"contents\",\n                  type: \"string\",\n                },\n              ],\n            },\n            primaryType: \"Mail\",\n            domain: {\n              name: \"Ether Mail\",\n              version: \"1\",\n              chainId: 1,\n              verifyingContract: \"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\",\n            },\n            message: {\n              from: {\n                name: \"Cow\",\n                wallet: \"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\",\n              },\n              to: {\n                name: \"Bob\",\n                wallet: \"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\",\n              },\n              contents: \"Hello, Bob!\",\n            },\n          },\n        ],\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_sendTransaction_transfer() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            chainId: \"0x1\",\n            to: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            value: \"0x5af3107a4000\",\n            maxPriorityFeePerGas: \"0x3b9aca00\",\n            gas: \"0x5e56\",\n            maxFeePerGas: \"0x2643b9db8\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gasPrice: \"0x17003f6530\",\n            nonce: \"0x0d30\",\n            data: \"0x\",\n            value: \"0x00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasLimit: \"0x5208\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x5e56\",\n            value: \"0x5af3107a4000\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasPrice: \"0x3b9aca00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            chainId: \"0x38\",\n          },\n        };\n      }\n\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        \"eip155\"\n      );\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"to\"] = address;\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_approve() {\n      var data = {};\n\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000000000000022d473030f116ddee9f6b43ac78ba3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x582d872a1b094fc48f5de31d3b73f2d9be47def1\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000f6f8096ac575b0\",\n            to: \"0x0b3F868E0BE5597D5DB7fEB59E1CADBb0fdDa50a\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            value: \"0x0\",\n            gas: \"0xe117\",\n            gasPrice: \"0xb2d05e00\",\n            data: \"0x095ea7b300000000000000000000000031c2f6fcff4f8759b3bd5bf0e1084a055615c768ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x5CA42204cDaa70d5c773946e69dE942b85CA6706\",\n          },\n        };\n      }\n\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        \"eip155\"\n      );\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_mint() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x4cacb\",\n            data: \"0xa64dfa75000000000000000000000000ed688002f3797599db8b4feacfe8b1dda0df1c8d000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cecb15396825a895ff8da8fc2d2c77a234dccee00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f6261667962656968643737366b6177706e71336f6f6a6635693274787a76617737737164656b34616a776472637472703261366f626b70723773792f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x30795\",\n            data: \"0xa64dfa75000000000000000000000000341b3687f0309778f08f29336b2c4b9c38b9f110000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f62616679626569686a6279676b68747a71376b68377434336266686e676e793236337668766f6578716a6d6e377161716166366e717a64743777712f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      }\n\n      let str = JSON.stringify(data);\n      console.log(\"-----长度--->\", str.length);\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        \"eip155\"\n      );\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_testRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n        `eip155:56`,\n        `https://eth-mainnet.g.alchemy.com/v2/NxUfYJUr-TQtEpLmSXhhD5pXn70GwsyV`\n      );\n      var data = {\n        method: \"eth_getBalance\",\n        params: [\"0x8D97689C9818892B700e27F316cc3E41e17fBeb9\", \"latest\"],\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_watchAsset() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xe0f63a424a4439cbe457d80e4f4b51ad25b2c56c\",\n              symbol: \"SPX6900\",\n              image:\n                \"https://assets.coingecko.com/coins/images/31401/standard/sticker_%281%29.jpg?1702371083\",\n              decimals: 8,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xeB51D9A39AD5EEF215dC0Bf39a8821ff804A0F01\",\n              symbol: \"LGNS\",\n              image: \"https://polygonscan.com/token/images/originlgns_32.png\",\n              decimals: 9,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0x031b41e504677879370e9dbcf937283a8691fa7f\",\n              symbol: \"FET\",\n              image: \"https://bscscan.com/token/images/fetch_32.png\",\n              decimals: 18,\n            },\n          },\n        };\n      }\n\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async ton_sendTransaction() {\n      var data  = {\n        \"messages\":[{\"address\":\"EQARULUYsmJq1RiZ-YiH-IJLcAZUVkVff-KBPwEmmaQGH6aC\",\"amount\":\"205000000\",\"payload\":\"te6cckEBAgEAhwABbQ+KfqUAAADNgG7tIEATEtAIAO87mQKicbKgHIk4pSPP4k5xhHqutqYgAB7USnesDnCcECwbgQMBAJUlk4VhgBD3JEg1TUr75iTijBghOKm/sxNDXUBl7CD6WMut0Q85x4RafwA/Es89DBXoTxuqxVFxyBbzt9Rav2HBUKl7hmkvLuKHLBCW57aK\"}],\n        \"validUntil\":1792481054,\n        \"network\":'-239'}\n      this.testTransaction = JSON.stringify(data)\n    },\n    ton_getAccount() {\n      this.testTransaction = \"这里是同步获取 不再需要点击 <<发送交易>>\"\n      const adapter = new OKXTONProvider(window.provider);\n      let result =   adapter.getAccount()\n      if (result) {\n        this.testboc = JSON.stringify(result);\n      } else {\n        this.testboc = 'null'\n      }\n    },\n\n\n    async sendTransaction() {\n      if (this.selectedChain.startsWith(\"aptos\")\n          || this.selectedChain.startsWith(\"movement\")\n          || this.selectedChain.startsWith(\"solana\")\n          || this.selectedChain.startsWith(\"sonic\")\n          || this.selectedChain.startsWith(\"cosmos\")) {\n        return\n      }\n      console.log(\"sendTransaction\", window.provider);\n      console.log(\"sendTransaction内容11------\", this.testTransaction);\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (this.testTransaction && window.provider) {\n        // eslint-disable-next-line no-undef\n        const sendData = JSON.parse(this.testTransaction);\n        try {\n          console.log(\"sendTransaction-----22method>>\", sendData.method);\n\n          let chainId = \"eip155:1\";\n          if (this.selectedChain) {\n            chainId = this.selectedChain;\n            console.log(\n              \"sendTransaction-----this.selectedChain>>\",\n              this.selectedChain\n            );\n          }\n          console.log(\"windowOpen[click_1]: \", Date.now());\n          if (chainId == \"sui:mainnet\") {\n            const adapter = new SuiAdapter(window.provider);\n            var suiResult = \"invalid result\";\n            if (this.currentSuiMethod == 'sui_getAccount') {\n              let result = adapter.getAccount()\n              if (typeof result == \"string\") {\n                this.testboc = result\n              } else {\n                this.testboc = JSON.stringify(result)\n              }\n            }\n            if (this.currentSuiMethod == \"sui_signTransaction\") {\n              suiResult = await adapter.signTransaction(\n                this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signAndExecuteTransaction\") {\n              suiResult = await adapter.signAndExecuteTransaction(\n                this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signMessage\") {\n              console.log(\"signMessage----\", this.currentSuiTransaction);\n              suiResult = await adapter.signMessage(this.currentSuiTransaction);\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_signPersonalMessage\") {\n              console.log(\n                \"signPersonalMessage----\",\n                this.currentSuiTransaction\n              );\n              suiResult = await adapter.signPersonalMessage(\n                this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_testRpc\") {\n              console.log(\"test rpc----\", this.currentSuiTransaction);\n              console.log(\n                `请求数据发送 rpc ----->> ${JSON.stringify(sendData)}`\n              );\n              const res = await window.provider.request(sendData, chainId);\n              console.log(`请求数据回调 rpc ----->> ${JSON.stringify(result)}`);\n              if (typeof res == \"string\") {\n                this.testboc = res;\n              } else {\n                this.testboc = JSON.stringify(res);\n              }\n            }\n            console.log(\"windowOpen[click_2]: \", Date.now());\n            return;\n          }else if(chainId === \"ton:-239\"){\n            console.log(\n                `请求数据发送 sendTransaction ---ton-->> ${JSON.stringify(sendData)}`\n            );\n            const adapter = new OKXTONProvider(window.provider);\n            let result =  await adapter.sendTransaction(sendData)\n            console.log(\n                `请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`\n            );\n            if (typeof result == \"string\") {\n              this.testboc = result;\n            } else {\n              this.testboc = JSON.stringify(result);\n            }\n            return\n          }\n\n          if (chainId == 'btc:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var btcResult = 'invalid result'\n\n            if (this.currentBtcMethod == 'btc_signMessage') {\n              btcResult = await btcAdapter.signMessage(chainId, this.currentBtcTransaction[\"signStr\"])\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_send') {\n              btcResult = await btcAdapter.send(chainId, this.currentBtcTransaction)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signPsbt') {\n              btcResult = await btcAdapter.signPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n\n              this.hexToBase64(btcResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentBtcMethod == 'btc_signPsbts') {\n              btcResult = await btcAdapter.signPsbts(chainId, this.currentBtcTransaction.psbtHexs, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_sendInscription') {\n              btcResult = await btcAdapter.sendInscription(chainId, this.currentBtcTransaction.address, this.currentBtcTransaction.inscriptionId, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signAndPushPsbt') {\n              btcResult = await btcAdapter.signAndPushPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            }else if (this.currentBtcMethod == 'btc_sendBitcoin') {\n              btcResult = await btcAdapter.sendBitcoin(chainId, this.currentBtcTransaction.toAddress, this.currentBtcTransaction.satoshis, this.currentBtcTransaction.options)\n\n              this.testboc = JSON.stringify(btcResult)\n            }\n            return\n          }\n\n          if (chainId == 'fractal:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var fractalResult = 'invalid result'\n\n            if (this.currentFractalMethod == 'fractal_signMessage') {\n              fractalResult = await btcAdapter.signMessage(chainId, this.currentFractalTransaction['signStr'])\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_send') {\n              fractalResult = await btcAdapter.send(chainId, this.currentFractalTransaction)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signPsbt') {\n              fractalResult = await btcAdapter.signPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.hexToBase64(fractalResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentFractalMethod == 'fractal_signPsbts') {\n              fractalResult = await btcAdapter.signPsbts(chainId, this.currentFractalTransaction.psbtHexs, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_sendInscription') {\n              fractalResult = await btcAdapter.sendInscription(chainId, this.currentFractalTransaction.address, this.currentFractalTransaction.inscriptionId, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signAndPushPsbt') {\n              fractalResult = await btcAdapter.signAndPushPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            }else if (this.currentFractalMethod == 'fractal_sendBitcoin') {\n              fractalResult = await btcAdapter.sendBitcoin(chainId, this.currentFractalTransaction.toAddress, this.currentFractalTransaction.satoshis, this.currentFractalTransaction.options)\n\n              this.testboc = JSON.stringify(fractalResult)\n            }\n\n            return\n          }\n\n          console.log(`请求数据发送 sendTransaction ----->> ${JSON.stringify(sendData)}`)\n          var result = await window.provider.request(sendData, chainId)\n          console.log(`请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`)\n\n          console.log(\"windowOpen[click_3]: \", Date.now());\n          if (typeof result == \"string\") {\n            this.testboc = result;\n          } else {\n            this.testboc = JSON.stringify(result);\n          }\n          console.log(\"方法数据回调 --this.testboc--\", this.testboc);\n        } catch (error) {\n          console.error(\"方法数据回调失败 --Error--\", error.message);\n\n          if (error.code === OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n            this.testboc = error.message;\n          } else {\n            this.testboc = \"签名错误！\" + error.message;\n          }\n        }\n      } else {\n        alert(\"交易数据为空，请选则或输入交易数据。\");\n      }\n    },\n\n    hexToBase64(hexStr) {\n      var bytes = [];\n      for (var i = 0; i < hexStr.length; i += 2) {\n        bytes.push(parseInt(hexStr.substr(i, 2), 16));\n      }\n      const buffer = new Uint8Array(bytes)\n      const blob = new Blob([buffer]);\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = function (e) {\n          var base64Data = e.target.result.split(\",\")[1]\n          resolve(base64Data);\n        };\n        reader.onerror = function (e) {\n          reject(e);\n        };\n        reader.readAsDataURL(blob);\n      });\n    },\n\n    async testTonSdk() {\n      // 1. connect\n      //  create sub providers for each namespace/chain\n      let nameSpacesChains = [];\n      let optSpaceChains = [];\n\n      let solanaChains = [\n        \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n        \"sonic:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n      ];\n      let hasEip155, hasSolana, hasSui, hasBtc, hasAptos, hasTon, hasCosmos, hasTron = false\n\n      let suiChains = [\n        \"sui:mainnet\",\n      ];\n\n      let btcChains = [\n        \"btc:mainnet\",\n        \"fractal:mainnet\"\n      ];\n\n      const chains = Object.entries(this.availableChains)\n          .filter((chain) => chain[1].checked)\n          .map((chain) => chain[0]);\n      console.log(`chains  ===> ${chains.values()}`)\n      chains.forEach(function (chainId) {\n        console.log(`chains.forEach chainId  ===> ${chainId}`)\n\n        if (solanaChains.includes(chainId)) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"ton\")) {\n          nameSpacesChains.push(chainId)\n          hasTon = true\n          return\n        }\n        if (typeof chainId == 'string' && (chainId.startsWith(\"aptos\") || chainId.startsWith(\"movement\"))) {\n          nameSpacesChains.push(chainId)\n          hasAptos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId)\n          hasSolana = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"cosmos\")) {\n          nameSpacesChains.push(chainId)\n          hasCosmos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"tron\")) {\n          nameSpacesChains.push(chainId)\n          hasTron = true\n          return\n        }\n\n        if (suiChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`);\n          nameSpacesChains.push(chainId);\n          hasSui = true;\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`)\n          nameSpacesChains.push(chainId)\n          hasBtc = true\n          return\n        }\n\n        hasEip155 = true\n        nameSpacesChains.push(`eip155:${chainId}`)\n      })\n\n\n      optionChains.forEach(function (chainId) {\n        if (solanaChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n        if (typeof chainId == \"string\" && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (suiChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          optSpaceChains.push(chainId)\n          return\n        }\n\n        optSpaceChains.push(`eip155:${chainId}`)\n      })\n\n      console.log(`namespaceChains  ===> ${JSON.stringify(nameSpacesChains)}`);\n      var connectData = {};\n      if (nameSpacesChains && nameSpacesChains.length > 0) {\n        var requireData = {};\n        if (hasEip155) {\n          requireData.eip155 = {\n            chains: nameSpacesChains.filter((item) =>\n              item.startsWith(\"eip155\")\n            ),\n            defaultChain: nameSpacesChains.filter((item) =>\n              item.startsWith(\"eip155\")\n            )[0],\n          };\n        }\n        if (hasSolana) {\n          requireData.solana = {\n            chains: nameSpacesChains.filter(\n              (item) =>\n                item.startsWith(\"solana\") ||\n                item.startsWith(\"sonic\") ||\n                item.startsWith(\"svm\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n              (item) =>\n                item.startsWith(\"solana\") ||\n                item.startsWith(\"sonic\") ||\n                item.startsWith(\"svm\")\n            )[0],\n          };\n        }\n\n        if (hasCosmos) {\n          requireData.cosmos = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            )[0],\n          }\n        }\n        if (hasTron) {\n          requireData.tron = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            )[0],\n          }\n        }\n        if (hasTon) {\n\n          //\n          let tonParams = {\n            ton_addr:{\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue){\n            tonParams = {\n              ton_addr:{\n                name: 'ton_addr',\n              },\n              ton_proof:{\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          requireData.ton = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"ton\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"ton\"))[0],\n            params:tonParams\n          };\n        }\n\n        if (hasSui) {\n          requireData.sui = {\n            chains: nameSpacesChains.filter((item) => item.startsWith(\"sui\")),\n            defaultChain: nameSpacesChains.filter((item) =>\n              item.startsWith(\"sui\")\n            )[0],\n            rpcMap: {\n              \"sui:mainnet\": \"https://www.okx.com/fullnode/sui/discover/rpc\"\n            }\n          };\n        }\n        if (hasAptos) {\n          requireData.aptos = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\"))[0]\n          }\n        }\n\n        if (hasBtc) {\n          let btcChains = nameSpacesChains.filter(item => item.startsWith(\"btc\") || item.startsWith(\"fractal\"))\n          requireData.btc = {\n            chains: btcChains,\n            defaultChain: btcChains[0]\n          }\n        }\n        console.log(`requireData  ===> ${JSON.stringify(requireData)}`)\n        connectData['namespaces'] = requireData;\n        console.log(JSON.stringify(connectData))\n      }\n\n      if (optSpaceChains && optSpaceChains.length > 0) {\n        var optData = {\n          eip155: {\n            chains: optSpaceChains.filter((item) => item.startsWith(\"eip155\")),\n            defaultChain: optSpaceChains.filter((item) =>\n              item.startsWith(\"eip155\")\n            )[0],\n          },\n        };\n        connectData[\"optionalNamespaces\"] = optData;\n      }\n\n      if (nameSpacesChains.length === 0 && optSpaceChains.length === 0) {\n        //未选择链\n        alert(\"请选择一条链\");\n        return;\n      }\n      console.log(\"=====>connectData \");\n      console.log(connectData);\n\n      var connectMethod;\n      if (window.provider instanceof OKXUniversalConnectUI) {\n        connectMethod = window.provider.openModal(connectData);\n      } else {\n        connectMethod = window.provider.connect(connectData);\n      }\n\n      await connectMethod\n        .then(() => {\n          // 2. set defaul chain\n          this.walletAddress = \"connected\";\n          if (this.isPC()) {\n            this.showModal = false;\n          }\n        })\n        .catch((error) => {\n          console.error(\"发生了错误：\", error);\n        });\n    },\n\n    closeModal() {\n      this.showModal = false;\n    },\n\n    isPC() {\n      const userAgentInfo = navigator.userAgent;\n      console.log(\"current device ua is ===>\", userAgentInfo);\n\n      const Agents = [\n        \"Android\",\n        \"iPhone\",\n        \"SymbianOS\",\n        \"Windows Phone\",\n        \"iPad\",\n        \"iPod\",\n      ];\n      let flag = true;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = false;\n          break;\n        }\n      }\n      return flag;\n    },\n    isSafariOrChrome() {\n      const userAgentInfo = navigator.userAgent;\n      const Agents = [\"Safari\", \"Chrome\"];\n      let flag = false;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = true;\n          break;\n        }\n      }\n      return flag;\n    },\n\n    /// solana\n    async sol_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      let data = {\n        method: \"solana_signMessage\",\n        params: {\n          message: \"Hello Solana\",\n          pubkey: \"\",\n        },\n      };\n      this.testTransaction = JSON.stringify(data);\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let message = await provider.signMessage(\n          \"Hello Solana\",\n        this.selectedChain\n      );\n\n      const result1 = nacl.sign.detached.verify(\n          new TextEncoder().encode(\"Hello Solana\"),\n          message.signature,\n          new PublicKey(message.publicKey).toBytes()\n      );\n      console.log(result1)\n\n      if (typeof message == \"string\") {\n        this.testboc = result1;\n      } else {\n        this.testboc = result1;\n      }\n    },\n\n    async aptos_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      let data = {\n        address: true,\n        application: true,\n        chainId: true,\n        message: \"123 签名测试!\",\n        nonce: \"1234\"\n      }\n\n      let provider = new OKXAptosProvider(window.provider)\n      let message = await provider.signMessage(data, this.selectedChain)\n      this.testTransaction = JSON.stringify(data)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n          functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n          functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        },\n      });\n\n      // let data = {\n      //   \"arguments\": [\"100000\",[\"0\",\"0\",\"10533\"],[\"10\",\"5\",\"5\"],[\"false\",\"false\",\"true\"]],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x3\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\",\"0x73eb84966be67e4697fc5ae75173ca6c35089e802650f75422ab49a8729704ec::coin::DooDoo\",\"0x53a30a6e5936c0a4c5140daed34de39d17ca7fcae08f947c02e979cef98a3719::coin::LSD\",\"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::CurveV1\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x54cb0bb2c18564b86e34539b9f89cfe1186e39d89fce54e1cd007b8e61673a85::bin_steps::X80\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async sol_signVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(\n        provider.getAccount(\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\").address\n      );\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n         recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signTransaction(\n        transaction,\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAndSendVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n        transaction,\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllVersionedTransactions() {\n      let provider = new OKXSolanaProvider(window.provider);\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n        [transaction],\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signTransaction() {\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n         recentBlockhash: blockhash,\n      }).add(\n        SystemProgram.transfer({\n          fromPubkey: new PublicKey(provider.getAccount().address),\n          toPubkey: new PublicKey(provider.getAccount().address),\n          lamports: 1000,\n        })\n      );\n\n      this.testTransaction = safeJsonStringify(transaction)\n      let result = await provider.signTransaction(\n        transaction,\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllTransactions() {\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n        SystemProgram.transfer({\n          fromPubkey: new PublicKey(provider.getAccount().address),\n          toPubkey: new PublicKey(provider.getAccount().address),\n          lamports: \"100\",\n        })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n        [transaction],\n        this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    getSolConnect() {\n      let rpc = \"https://www.okx.com/fullnode/sol/discover/rpc\"\n      if (this.selectedChain === \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\") {\n        rpc = \"https://www.okx.com//fullnode/sol/discover/rpc\"\n      } else if (this.selectedChain === \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\"){\n        rpc = \"https://www.okx.com/fullnode/soltestnet/discover/rpc\"\n      } else if (this.selectedChain === \"sonic:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\") {\n        rpc = \"https://www.okx.com/fullnode/sonic/testnet/discover/rpc/sonic-testnet-rpc-light\"\n      }\n      return rpc\n    },\n\n    async sol_signAndSendTransaction() {\n\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n        SystemProgram.transfer({\n          fromPubkey: new PublicKey(provider.getAccount().address),\n          toPubkey: new PublicKey(provider.getAccount().address),\n          lamports: \"100\",\n        })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n        transaction,\n        this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async cosmos_signArbitrary() {\n      let provider = new OKXCosmosProvider(window.provider)\n      let message = await provider.signArbitrary(this.selectedChain, provider.getAccount(this.selectedChain).address, \"test cosmos\")\n      if (typeof message == \"string\") {\n        this.testboc = message;\n      } else {\n        let isValid =  await this.verifySignArbitrary(provider.getAccount(this.selectedChain).address,\"test cosmos\",message.signature, message.pub_key.value)\n        console.log(\"verify\",isValid)\n        this.testboc = \"verify:\" + isValid + JSON.stringify(message);\n      }\n    },\n\n    async verifySignArbitrary(signer, data, signature, pubkey) {\n      try {\n        // 将bech32地址转换为公钥\n        const {prefix: prefixStr} = fromBech32(signer)\n\n        const signatureBuffer = Buffer.from(signature, 'base64');\n\n        const uint8Signature = new Uint8Array(signatureBuffer); // Convert the buffer to an Uint8Array\n\n        const pubKeyValueBuffer = Buffer.from(pubkey, 'base64'); // Decode the base64 encoded value\n\n        const pubKeyUint8Array = new Uint8Array(pubKeyValueBuffer); // Convert the buffer to an Uint8Array\n\n        // 验证签名\n        return await verifyADR36Amino(\n            prefixStr,\n            signer,\n            data,\n            pubKeyUint8Array,\n            uint8Signature\n        )\n      } catch (err) {\n        console.error('Verification failed:', err)\n        return false\n      }\n    },\n\n    async cosmos_signAmino(){\n      let provider = new OKXCosmosProvider(window.provider)\n      // const rpcUrl = 'https://osmosis-rpc.publicnode.com:443';\n      // const client = await StargateClient.connect(rpcUrl);\n      // const height = await client.getHeight();\n      // let address = provider.getAccount(this.selectedChain).address\n      // const sequence = await client.getSequence(address)\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      // let signDoc = makeSignDoc(\n      //     transaction.msgs,\n      //     transaction.fee,\n      //     this.selectedChain.split(\":\")[1],\n      //     transaction.memo,\n      //     transaction.accountNumber,\n      //     transaction.sequence,\n      // )\n      let signDoc = {\n        \"chain_id\": \"osmosis-1\",\n        \"account_number\": \"630104\",\n        \"sequence\": \"480\",\n        \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]},\n        \"msgs\": [{\n          \"type\": \"osmosis/poolmanager/swap-exact-amount-in\",\n          \"value\": {\n            \"sender\": \"osmo1u6lts9ng4etxj0zdaxsada6zgl8dudpgelmuyu\",\n            \"routes\": [{\n              \"pool_id\": \"1096\",\n              \"token_out_denom\": \"ibc/987C17B11ABC2B20019178ACE62929FE9840202CE79498E29FE8E5CB02B7C0A4\"\n            }, {\n              \"pool_id\": \"611\",\n              \"token_out_denom\": \"ibc/27394FB092D2ECCD56123C74F36E4C1F926001CEADA9CA97EA622B25F41E5EB2\"\n            }],\n            \"token_in\": {\"denom\": \"uosmo\", \"amount\": \"100\"},\n            \"token_out_min_amount\": \"8\"\n          }\n        }],\n        \"memo\": \"FE\",\n        \"timeout_height\": \"23603788\",\n        \"signOptions\": {\n          \"useOneClickTrading\": false,\n          \"preferNoSetFee\": true,\n          \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]}\n        }\n      }\n\n\n\n\n\n\n\n      // let signOption = {\n      //   memo: true, // optional\n      //   fee: true, // optional\n      //   gasRate: {\n      //     // optional\n      //     average: \"0.2\",\n      //     low: \"0.02\",\n      //     tiny: \"0.002\",\n      //   },\n      // }\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signAmino(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, signDoc)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    messageToBuffer(message) {\n      var buffer = Buffer.from([]);\n      try {\n        if (typeof message === \"string\") {\n          buffer = Buffer.from(message.replace(\"0x\", \"\"), \"hex\");\n        } else {\n          buffer = Buffer.from(message);\n        }\n      } catch (err) {\n        console.log(`messageToBuffer error: ${err}`);\n      }\n      return buffer;\n    },\n\n\n\n    async cosmos_signDirect() {\n      let provider = new OKXCosmosProvider(window.provider)\n\n      let signDoc = {\n        \"bodyBytes\": this.messageToBuffer(\"0x0ac1010a292f6962632e6170706c69636174696f6e732e7472616e736665722e76312e4d73675472616e736665721293010a087472616e7366657212096368616e6e656c2d301a0d0a05756f736d6f120431303030222b6f736d6f3175366c7473396e67346574786a307a64617873616461367a676c386475647067656c6d7579752a2d636f736d6f733175366c7473396e67346574786a307a64617873616461367a676c386475647067337967766a773207080410ebe3f90a3880b0bcafd18cec8218\"),\n        \"authInfoBytes\": this.messageToBuffer(\"0x0a510a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a2102446e19e94ac0e83ea896d2712507577eb39fbdd2d6ae9f0fc0b9759f1fbaba9012040a02080118e00312140a0e0a05756f736d6f1205323530303010859a11\"),\n        \"chainId\": \"osmosis-1\",\n        \"accountNumber\": \"630104\",\n      }\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signDirect(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, transaction)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    sui_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentSuiTransaction = params\n      this.currentSuiMethod = flag\n    },\n\n    btc_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentBtcTransaction = params\n      this.currentBtcMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n\n    fractal_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentFractalTransaction = params\n      this.currentFractalMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n    tron_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n    tron_generateTransactionParams(params){\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n    handleModalsSelect(modals) {\n      selectedModals = modals;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedDeepLink,\n            modals: modals.length === 3 ? \"all\" : modals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n\n    handleReturnStrategySelect(returnStrategy) {\n      selectedReturnStrategy = returnStrategy === \"deeplink\" ? this.deeplink : returnStrategy;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n\n    handleReturnStrategyDeeplink(deeplink) {\n      selectedReturnStrategy = deeplink;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: deeplink,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n\n    handleLanguageSelect(language) {\n      selectedLanguage = language;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: language,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n\n    handleThemeSelect(theme) {\n      selectedTheme = theme;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: theme,\n          },\n        };\n      }\n    },\n\n    async sui_verifySignature(signatureResult) {\n      let resultObj = signatureResult\n      let result = false\n      let msg = ''\n      try {\n        /// 获取当前account\n        const adapter = new SuiAdapter(window.provider);\n        let account = adapter.getAccount()\n        console.log(`Account中获取的address：${account.address}`)\n\n        /// 验证签名\n        let pubKey = await verifyPersonalMessageSignature(this.currentSuiTransaction.message, resultObj.signature)\n        let address = pubKey.toSuiAddress()\n        console.log(`验签结果计算得到address：${address}`)\n\n        /// 对比pubKey\n        console.log(`account pubkey: ${account.publicKey}`,)\n        console.log(`result pubkey: ${pubKey.toBase64()}`)\n        result = (account.address === address) && (account.publicKey === pubKey.toBase64())\n\n        msg = `address verify: ${account.address === address}\\npublicKey verify: ${account.publicKey === pubKey.toBase64()}`\n        console.log(\"signature verify success: \", pubKey)\n      } catch (e) {\n        console.log(\"signature verify failed: \", e)\n      }\n      return {\n        result,\n        msg\n      }\n    },\n\n  },\n  created() {\n    // for (const eventName of Object.values(OKX_TON_CONNECTION_AND_TRANSACTION_EVENT)) {\n    //   console.log(eventName);\n    //   window.addEventListener(eventName, (event) => {\n    //     console.log(eventName,event.detail)\n    //     this.currentStatus = eventName\n    //   });\n    // }\n  },\n\n  mounted() {\n\n    var scriptTag = document.createElement(\"script\");\n    scriptTag.src = \"https://telegram.org/js/telegram-web-app.js\";\n    scriptTag.id = \"tgsdk\";\n    document.getElementsByTagName('head')[0].appendChild(scriptTag);\n\n    this.connectReady = true;\n    document.title = \"OKX Connect\";\n    var initCall;\n    if (!this.withUI) {\n      initCall = OKXUniversalProvider.init({\n        dappMetaData: {\n          name: \"univer test dapp\",\n          icon: \"https://avatars.githubusercontent.com/u/37784886\",\n        },\n      });\n    } else {\n      initCall = OKXUniversalConnectUI.init({\n        dappMetaData: {\n          icon: \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\",\n          name: \"OKX WalletConnect UI Demo\",\n        },\n        actionsConfiguration: {\n          returnStrategy: selectedReturnStrategy,\n          modals: \"all\",\n        },\n        language: selectedLanguage,\n        uiPreferences: {\n          theme: selectedTheme\n        },\n      });\n    }\n\n    initCall.then((provider) => {\n      window.provider = provider;\n      console.log(\"init finished:\", provider);\n      console.log(\"init finished session:\", JSON.stringify(provider.session));\n\n      if (provider.session?.namespaces) {\n        const newChains = [];\n        console.log(\"namespaces\", provider.session.namespaces);\n        Object.entries(provider.session.namespaces).forEach(([key, value]) => {\n          if (key === \"eip155\") {\n            value.chains.forEach((chain) => {\n              newChains.push(parseInt(chain.substring(7)));\n            });\n          } else if (key === \"aptos\") {\n            value.chains.forEach((chain) => {\n              if (chain === \"aptos:637\") {\n                newChains.push(\"aptos:mainnet\")\n              } else {\n                newChains.push(\"movement:testnet\")\n              }\n            })\n          }\n          else {\n            value.chains.forEach((chain) => {\n              newChains.push(chain);\n            });\n          }\n        });\n\n        console.log(\"existing chains:\", newChains);\n        this.initChains(newChains);\n      } else {\n        this.initChains([]);\n      }\n\n      provider.on(\"display_uri\", (uri) => {\n        if (this.isPC()) {\n          if (uri && !this.withUI) {\n            this.qrValue = uri;\n            this.showModal = true;\n          }\n        }\n        console.log(\"通知>>>display_uri  ==> \", uri);\n      });\n\n      provider.on(\"connect\", (session) => {\n        console.log(\"通知>>>get connect session\", session);\n      });\n      provider.on(\"reconnect\", (session) => {\n        console.log(\"通知>>>get reconnect session\", session);\n        this.walletAddress = \"connected\";\n      });\n      provider.on(\"disconnect\", ({ topic }) => {\n        console.log(`通知>>>get disconnect  ${topic}`);\n        this.walletAddress = \"disconnecteddddd\";\n      });\n      provider.on(\"session_delete\", ({ topic }) => {\n        console.log(`通知>>>get session_delete  ${topic}`);\n      });\n      provider.on(\"session_update\", (session) => {\n        console.log(`通知>>>get session_update `, JSON.stringify(session));\n      });\n    });\n  },\n};\n</script>\n","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signMessage()\">signMessage(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_send()\">send(BTC)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendBitcoin()\">sendBitcoin(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signPsbt_up()\">signPsbt(上架NFT)</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"btc_signAndPushPsbt_up()\">signAndPushPsbt(上架NFT)</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在OKX App选择要上架的Btc NFT，点击【上架】\n        </li>\n        <li>\n          2. 弹出签名面板，点开高级选项，查看\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出上架流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendInscription()\">sendInscription(BTC)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Btc NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount\n    }\n  },\n  methods: {\n    btc_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to UniSat!\\n\\nClick to sign in and accept the UniSat Terms of Service (https://unisat.io/terms-of-service.html) and Privacy Policy (https://unisat.io/privacy-policy.html).\\n    \\nThis request will not trigger a blockchain transaction.\\n    \\nYour authentication status will reset after 24 hours.\\n    \\nWallet address:\\nbc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\\n    \\nNonce:\\n162d70e3-8c21-4cfd-9a22-9bf0a4b7be51\\n\"\n      };\n      this.$emit('generateTransactionParams', params, \"btc_signMessage\")\n    },\n\n    btc_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"btc_send\")\n    },\n\n    btc_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"btc_sendBitcoin\")\n    },\n\n    btc_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"btc_signPsbt\")\n    },\n\n    btc_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"btc_signAndPushPsbt\")\n    },\n\n    btc_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"btc_sendInscription\")\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./BtcTransactionPanel.vue?vue&type=template&id=17e9106e&scoped=true\"\nimport script from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./BtcTransactionPanel.vue?vue&type=style&index=0&id=17e9106e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-17e9106e\"]])\n\nexport default __exports__","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signMessage()\">signMessage(Fractal)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_send()\">send(Fractal)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_sendBitcoin()\">sendBitcoin(Fractal)</el-button>\n\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signPsbt_up()\">signPsbt(上架NFT)</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_signAndPushPsbt_up()\">signAndPushPsbt(上架NFT)</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在OKX App选择要上架的Fractal NFT，点击【上架】\n        </li>\n        <li>\n          2. 弹出签名面板，点开高级选项，查看\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出上架流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_sendInscription()\">sendInscription(Fractal)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Fractal NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount\n    }\n  },\n  methods: {\n    fractal_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to UniSat!\\n\\nClick to sign in and accept the UniSat Terms of Service (https://unisat.io/terms-of-service.html) and Privacy Policy (https://unisat.io/privacy-policy.html).\\n    \\nThis request will not trigger a blockchain transaction.\\n    \\nYour authentication status will reset after 24 hours.\\n    \\nWallet address:\\nbc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\\n    \\nNonce:\\n162d70e3-8c21-4cfd-9a22-9bf0a4b7be51\\n\"\n      };\n      this.$emit('generateTransactionParams', params, \"fractal_signMessage\")\n    },\n\n    fractal_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_send\")\n    },\n\n    fractal_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_sendBitcoin\")\n    },\n\n    fractal_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"fractal_signPsbt\")\n    },\n\n    fractal_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"fractal_signAndPushPsbt\")\n    },\n\n    fractal_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"fractal_sendInscription\")\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./FractalTransactionPanel.vue?vue&type=template&id=02b5b8a5&scoped=true\"\nimport script from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./FractalTransactionPanel.vue?vue&type=style&index=0&id=02b5b8a5&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-02b5b8a5\"]])\n\nexport default __exports__","<script>\n\nimport {getFullnodeUrl, SuiClient} from \"@mysten/sui/client\";\nimport {Transaction as SuiTransaction} from '@mysten/sui/transactions';\n\nexport default {\n  name: \"SuiTransactionPanel\",\n  methods: {\n    sui_getAccount() {\n      this.$emit('generateTransactionParams', '', \"sui_getAccount\")\n    },\n\n    //对单个交易签名（不发送)\n    async sui_signMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signMessage\")\n    },\n\n    async sui_signPersonalMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signPersonalMessage\")\n    },\n\n    sui_signTransaction2() {\n      // 定义要转移的金额和目标地址\n      const amount = 109; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    async sui_requestRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n          `sui:mainnet`,\n          `https://fullnode.mainnet.sui.io:443`\n      );\n      var data = {\n        method: \"suix_getBalance\",\n        params: [\n          \"0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae\",\n          \"0x168da5bf1f48dafc111b0a488fa454aca95e0b5e::usdc::USDC\",\n        ],\n      };\n\n      this.$emit(\"generateTransactionParams\", data, \"sui_testRpc\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 102; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signAndExecuteTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n      this.$emit(\"generateTransactionParams\", input, \"sui_signAndExecuteTransaction\")\n    },\n\n    /// generate txBytes and txSerialize\n    async generateTsBytesAndSerizlize(input) {\n      /// txBytes and txSerialize may be constructed in advance by the dapp side\n      let resultTuple = [\"\", \"\"];\n      if (\n          \"txBytes\" in input &&\n          input.txBytes.length > 0 &&\n          \"txSerialize\" in input &&\n          input.txSerialize.length > 0\n      ) {\n        resultTuple = [input.txBytes, input.txSerialize];\n      }\n\n      /// Otherwise, a transactionBlock parameter is required.\n      if (!(\"transactionBlock\" in input)) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      if (this.walletAddress != \"connected\") {\n        alert(\"请先连接钱包\");\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      let senderAccounts = window.provider.requestAccountsWithNamespace(\"sui\");\n      if (senderAccounts.length == 0) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      try {\n        let rpcUrl = getFullnodeUrl(\"mainnet\");\n        rpcUrl = \"https://www.okx.com/fullnode/sui/discover/rpc\"\n        const suiClient = new SuiClient({ url: rpcUrl });\n\n        /// sender is required\n        input.transactionBlock.setSender(senderAccounts[0]);\n        const result = await input.transactionBlock.build({\n          client: suiClient,\n        });\n        const txBytes = Buffer(result).toString(\"base64\");\n        const txSerialize = await SuiTransaction.from(txBytes).toJSON();\n        resultTuple = [txBytes, txSerialize];\n      } catch (error) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      return new Promise((resolve) => {\n        resolve(resultTuple)\n      })\n    },\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_getAccount()\">getAccount(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signMessage()\">signMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signPersonalMessage()\">signPersonalMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signTransaction2()\">signTransaction(Sui)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signAndExecuteTransaction()\">sendTransaction(Sui)</el-button>\n      <div style=\"font-size: 12px; color: gray;\">(send to Rally Tiger account)</div>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_requestRpc()\">RPC_getBalance</el-button>\n      <div style=\"font-size: 12px; color: gray;\">get USDC balance of address:</div>\n      <div style=\"font-size: 12px; color: gray\">0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae</div>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signTransaction_pre_execution()\">signTransaction(prepared data)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signAndExecuteTransaction_pre_execution()\">sendTransaction(prepared data)</el-button>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./SuiTransactionPanel.vue?vue&type=template&id=30ae15b2&scoped=true\"\nimport script from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./SuiTransactionPanel.vue?vue&type=style&index=0&id=30ae15b2&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-30ae15b2\"]])\n\nexport default __exports__","<script>\n\n\nimport {OKXTronProvider} from \"@okxconnect/universal-provider\";\nimport {TronWeb} from \"tronweb\";\n\nexport default {\n  name: \"TronTransactionPanel\",\n  methods: {\n\n    async tron_signMessage() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessage(\"tron:mainnet\", \"Hello Tron\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n\n      const verify = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), res, provider.getAccount(\"tron:mainnet\").address)\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" + res, \"tron_signMessage\")\n    },\n\n    async tron_signMessageV2() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessageV2(\"tron:mainnet\", \"Hello Tron\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", res);\n      console.log(\"tron_signMessageV2_base58Address\", base58Address)\n      console.log(\"tron_signMessageV2_address\", provider.getAccount(\"tron:mainnet\").address)\n      const verify = base58Address === provider.getAccount(\"tron:mainnet\").address\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" +  res, \"tron_signMessage\")\n    },\n\n    async tron_signTransaction(isOnlySign) {\n      let provider = new OKXTronProvider(window.provider)\n        let tronWeb = new TronWeb({\n          \"fullHost\": 'https://api.trongrid.io',\n          \"headers\": {},\n          \"privateKey\": ''\n        })\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const transaction = await tronWeb.transactionBuilder.sendTrx(\"TGBcVLMnVtvJzjPWZpPiYBgwwb7th1w3BF\", 1000, address);\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let res = await provider.signTransaction(\"tron:mainnet\", transaction)\n        this.$emit(\"generateTransactionResult\", res, \"tron_signTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(\"tron:mainnet\", transaction)\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async getContract() {\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33\"\n      \n      try {\n        const contract = await tronWeb.trx.getContract(contractAddress)\n        const abi = contract.abi.entrys;\n        console.log(\"获取到的合约：\")\n        console.log(abi)\n      } catch (error) {\n        console.log(\"Error getting contract ABI:\", error);\n      }\n    },\n    \n    async tron_signAndSendTransactionContract(isOnlySign) {\n      // this.getContract()\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n      ]\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"quote(uint256,uint256,uint256)\", {}, parameter, address);\n      console.log(\"=====>transaction: \")\n      console.log(ret);\n      this.$emit(\"generateTransactionParams\", ret.transaction)\n      if (isOnlySign) {\n        let tx = await provider.signTransaction(\"tron:mainnet\", ret.transaction)\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(\"tron:mainnet\", ret.transaction)\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async tron_signAndSendTransactionApprove(isOnlySign) {\n      let provider = new OKXTronProvider(window.provider)\n\n      let transaction = {\n        \"visible\": false,\n        \"txID\": \"d1ed31b6abd2c37e248254681d3ee61b2e628fbd776def753b5592712ebd98c5\",\n        \"raw_data\": {\n          \"contract\": [{\n            \"parameter\": {\n              \"value\": {\n                \"data\": \"095ea7b3000000000000000000000000e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n                \"owner_address\": \"4157c140be01fa2bbabf7f055ab879d0c05725293c\",\n                \"contract_address\": \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n              },\n              \"type_url\": \"type.googleapis.com/protocol.TriggerSmartContract\"\n            },\n            \"type\": \"TriggerSmartContract\"\n          }],\n          \"ref_block_bytes\": \"1bde\",\n          \"ref_block_hash\": \"af71fa1aa01b5bd1\",\n          \"expiration\": Date.now() + 60000,\n          \"fee_limit\": 250000000,\n          \"timestamp\": Date.now()\n        },\n        \"raw_data_hex\": \"0a021bde2208af71fa1aa01b5bd140f8b1fa98b4325aae01081f12a9010a31747970652e676f6f676c65617069732e636f6d2f70726f746f636f6c2e54726967676572536d617274436f6e747261637412740a154157c140be01fa2bbabf7f055ab879d0c05725293c121541b4a428ab7092c2f1395f376ce297033b3bb446c12244095ea7b3000000000000000000000000e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff70f1e6f698b432900180e59a77\"\n      }\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let tx = await provider.signTransaction(\"tron:mainnet\", transaction)\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(\"tron:mainnet\", transaction)\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n\n    }\n\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessage()\">tron_signMessage</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessageV2()\">tron_signMessageV2</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(true)\">\n        tron_signTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(true)\">\n        tron_signTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(true)\">\n        tron_signTransaction(Approve)\n      </el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(false)\">\n        tron_signAndSendTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(false)\">\n        tron_signAndSendTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(false)\">\n        tron_signAndSendTransaction(approve)\n      </el-button>\n    </el-col>\n\n\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./TronTransactionPanel.vue?vue&type=template&id=0178d5ea&scoped=true\"\nimport script from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./TronTransactionPanel.vue?vue&type=style&index=0&id=0178d5ea&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0178d5ea\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=32832537&scoped=true\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=32832537&scoped=true&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-32832537\"]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\nimport App from './App.vue'\n\nconst app = createApp(App)\n\napp.use(ElementPlus)\napp.mount('#app')","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkokxconnectdemo\"] = self[\"webpackChunkokxconnectdemo\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(56038); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["require","__awaiter","this","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","OKXBtcProvider","_1","constructor","caip","provider","getUniversalProvider","getAddressForChainId","chainId","_a","_b","ns","checkChainId","undefined","OKXConnectError","OKX_CONNECT_ERROR_CODES","UNKNOWN_ERROR","accounts","session","namespaces","filter","account","startsWith","length","address","split","getAccount","_c","extra","publicKey","signMessage","signStr","type","params","from","ret","request","method","errorData","error","sendBitcoin","toAddress","satoshis","options","to","toString","feeRate","send","txhash","input","checkParameters","signPsbt","psbtHex","signPsbts","psbtResults","results","JSON","parse","catch","psbtHexs","signAndPushPsbt","sendInscription","inscriptionId","extension","coinId","protocolId","atomicSuffix","ordinalsSuffix","toLowerCase","endsWith","removeSuffix","scenario","txType","batchBean","coinAmount","nftId","str","suffix","slice","keys","unexistKeys","forEach","key","push","console","log","join","includes","namespaceKey","_","OKXCosmosProvider","core_1","_d","_e","NameSpaceKeyCosmos","accountArray","algo","bech32Address","pubKey","hexToUint8Array","signArbitrary","signerAddress","data","base64Encoded","window","btoa","signDoc","chain_id","account_number","sequence","fee","gas","amount","msgs","memo","signData","signAmino","signOptions","resData","signed","signature","signDirect","object","bodyBytes","bufferToHex","authInfoBytes","accountNumber","res","messageToBuffer","message","buffer","Uint8Array","replace","err","arr","output","map","x","padStart","hexString","arrayBuffer","i","byteValue","parseInt","substr","isNaN","OKXTronProvider","NameSpaceKeyTron","stringToHex","hex","charCodeAt","signMessageV2","signTransaction","transaction","signedTx","realSignTx","visible","txID","rawData","contract","raw_data","expiration","ref_block_bytes","ref_block_hash","timestamp","raw_data_hex","signAndSendTransaction","__importDefault","mod","__esModule","OKXUniversalProvider","eip155_1","sui_1","constants_1","eventemitter3_1","client_1","namespaces_1","solana_1","btc_1","aptos_1","ton_1","cosmos_1","tron_1","init","opts","initialize","rpcProviders","events","default","providerOpts","args","chain","connected","NOT_CONNECTED_ERROR","namespace","requestParam","buildRequestParamFromRequest","getProvider","logDebug","stringify","validateChain","keyArr","assign","enable","client","connectOpts","connect","requestAccounts","disconnect","called","onRequestSent","disconnectAndEmit","cleanup","engine","connectionManager","emit","topic","aptosChainNameToGeneralId","replaceAptos","aptosNameSpace","realNS","replaceAptosInner","aptos","optionAptosNameSpace","optionalNamespaces","realOptionNS","chains","defaultChain","disconnectInner","getCurrentConnectionReady","sessionConfig","openUniversalUrl","isMobileUserAgent","setNamespaces","onConnect","on","event","listener","once","removeListener","off","setDefaultChain","rpcUrl","test","checkStorage","sessionInfoStr","getFromStore","sessionInfo","restoreconnect","createProviders","registerEventListeners","setTimeout","url","location","hostname","origin","dappMetaData","SignClient","providersToCreate","Set","parseNamespaceKey","namespacesValue","currentNameSpace","Eip155Provider","opts1","solanaProvider","sonicProvider","svmProvider","optsTon","tonProvider","optsSui","suiProvider","SuiProvider","name","optsBtc","btcProvider","fbProvider","aptosProvider","cosmosProvider","tronProvider","addDisconnectListener","PROVIDER_EVENTS","DEFAULT_CHAIN_CHANGED","caip2ChainId","onChainChanged","UPDATE_NAMESPACES","nameSpaces","nameSpacekey","persist","icon","dappInfo","redirect","isChainNamespaceInSession","chainsArr","defaultNamespace","getDefaultChain","namespaceStr","values","requestAccountsWithNamespace","requestDefaultChainWithNamespace","caip2Chain","sessionProperties","saveSessionContent","getSessionContent","showRequestModal","__createBinding","create","o","m","k","k2","desc","getOwnPropertyDescriptor","writable","configurable","enumerable","get","__exportStar","p","prototype","hasOwnProperty","call","NameSpaceKeyBtc","NameSpaceKeySui","OKXUniversalProvider_1","OKXBtcProvider_1","OKXCosmosProvider_1","OKXTronProvider_1","ISignClient","metaData","super","Engine","ConnectionManager","connectRequest","requestAccountItem","requiredNamespaces","nameSpaceToConnectWalletNameSpace","universalConnect","metadata","info","encodeParams","encodeConnectParams","getUniversalLink","getAppWalletDeepLink","fillParamsToSession","isIos","openOKXWallet","response","requestId","code","onAck","openOKXDeeplink","standardDeeplink","getAccountsChains","isCaipNamespace","NameSpaceKeyEip155","NameSpaceKeySOL","NameSpaceKeyAptos","NameSpaceKeyTON","mergeRpcMap","targetRpcMap","sourceRpcMap","mergeNamespaces","target","source","rpcMap","some","GENERIC_SUBPROVIDER_NAME","RPC_URL","STORAGE","CONTEXT","WC_VERSION","PROTOCOL","RELAY_URL","LOGGER","utils_1","JsonRpcConnection_1","JsonRpcProvider_1","AptosProvider","httpProviders","createHttpProviders","updateNamespace","getAccounts","methods","METHOD_NOT_SUPPORTED","setHttpProvider","Error","http","parsedChainId","getChainId","parsedRpc","getRpcUrl","httpProvider","createHttpProvider","getHttpProvider","rpc","JsonRpcProvider","JsonRpcConnection","getGlobal","BtcProvider","logError","CosmosProvider","isRecord","Array","isArray","updateRequestParams","isDic","switchChainId","decimalNumber","selectedChainId","chainNum","paramsChainId","paramsChainString","String","Number","adaptArray","paramsArr","firstParam","messageObj","addressObj","isEqual","chainAddress","messages","typedDataJson","firstObj","secondObj","hexChainId","getHexChainIdFromRequest","isChainApproved","handleSwitchChain","addEthereumChain","resultData","nameSpace","rpcUrls","eip155","cross_fetch_1","core_2","DEFAULT_HTTP_HEADERS","Accept","DEFAULT_HTTP_METHOD","DEFAULT_FETCH_OPTS","headers","disableProviderPing","EventEmitter","isAvailable","registering","isHttpUrl","connecting","open","arguments","register","close","onClose","payload","body","safeJsonStringify","json","onPayload","onError","id","jsonrpc","onOpen","parseError","safeJsonParse","formatJsonRpcError","parseConnectionError","types_1","IJSONRpcProvider","connection","hasRegisteredEventListeners","setConnection","context","requestStrict","formatJsonRpcRequest","getBigIntRpcId","isJsonRpcError","isJsonRpcResponse","reason","_error","SolanaProvider","getPubkey","getWalletAddress","components","__rest","s","t","indexOf","getOwnPropertySymbols","propertyIsEnumerable","TONProvider","validUntil","newParams","fromAddress","ton_addr","boc","TronProvider","IJSONRpcConnection","opt","setGlobal","globals","projectId","parseChainId","reference","convertChainIdToNumber","mergeArrays","CAIP_DELIMITER","a","b","_createElementBlock","_hoisted_1","_createVNode","_component_el_container","_withCtx","_component_el_header","_cache","_createTextVNode","_component_el_main","_component_el_card","class","header","_createElementVNode","_component_el_row","_component_el_col","span","_toDisplayString","$options","_ctx","currentStatus","_component_el_checkbox","modelValue","withUI","$event","onChange","handleWithUI","style","_component_el_select","modals","placeholder","handleModalsSelect","multiple","_component_el_option","label","returnStrategy","handleReturnStrategySelect","_Fragment","_renderList","returnStrategies","strategy","_createBlock","_component_el_input","deeplink","handleReturnStrategyDeeplink","disabled","_createCommentVNode","language","handleLanguageSelect","locales","locale","theme","handleThemeSelect","THEME","LIGHT","DARK","tonProofValue","gutter","align","availableChains","item","checked","areChainsInit","isOptionalChecked","handleOptionChange","_component_el_button","onClick","connectBtnClicked","connectStatusStr","disconnectAction","walletAddress","disconnectStatusStr","_Teleport","showModal","closeModal","_withModifiers","_component_qrcode_vue","qrValue","size","level","_component_el_tabs","activeTab","onTabClick","clickActiveTab","_component_el_tab_pane","eth_requestAccounts","eth_chainId","wallet_switchEthereumChain","wallet_addEthereumChain","personal_sign","eth_signTypedData_v4","eth_sendTransaction_transfer","eth_sendTransaction_approve","eth_sendTransaction_mint","wallet_watchAsset","wallet_testRpc","eth_sendTransaction_swap","ton_getAccount","ton_sendTransaction","sol_signMessage","sol_signTransaction","sol_signVersionedTransaction","sol_signAllTransactions","sol_signAllVersionedTransactions","sol_signAndSendTransaction","sol_signAndSendVersionedTransaction","_component_SuiPanel","onGenerateTransactionParams","sui_generateTransactionParams","_component_BTCPanel","btc_generateTransactionParams","_component_FractalPanel","fractal_generateTransactionParams","_component_TronTransactionPanel","tron_generateTransactionParams","onGenerateTransactionResult","tron_getTransactionResult","aptos_signMessage","aptos_signTransaction","aptos_signAndSubmitTransaction","move_signTransaction","move_signAndSubmitTransaction","cosmos_signArbitrary","cosmos_signAmino","cosmos_signDirect","xs","sm","testTransaction","rows","testboc","sendTransaction","testTransactionStr","btc_signMessage","$setup","sendAmount","clearable","btc_send","sendSatoshisAmount","btc_sendBitcoin","btc_signPsbt_up","btc_signAndPushPsbt_up","receiver","btc_sendInscription","props","msg","setup","ref","$emit","alert","autoFinalized","__exports__","fractal_signMessage","fractal_send","fractal_sendBitcoin","fractal_signPsbt_up","fractal_signAndPushPsbt_up","fractal_sendInscription","sui_getAccount","sui_signMessage","sui_signPersonalMessage","sui_signTransaction2","sui_signAndExecuteTransaction","sui_requestRpc","sui_signTransaction_pre_execution","sui_signAndExecuteTransaction_pre_execution","uint8Array","recipientAddress","tx","SuiTransaction","coin","splitCoins","transferObjects","transactionBlock","showEffects","txBytes","txSerialize","generateTsBytesAndSerizlize","resultTuple","senderAccounts","getFullnodeUrl","suiClient","SuiClient","setSender","build","Buffer","toJSON","tron_signMessage","tron_signMessageV2","tron_signTransaction","tron_signAndSendTransactionContract","tron_signAndSendTransactionApprove","tronWeb","TronWeb","verify","trx","verifyMessage","base58Address","verifyMessageV2","isOnlySign","transactionBuilder","sendTrx","getContract","contractAddress","abi","entrys","parameter","triggerSmartContract","Date","now","verifyADR36Amino","fromBech32","VConsole","allChains","optionChains","selectedModals","selectedReturnStrategy","selectedDeepLink","selectedLanguage","selectedTheme","TronTransactionPanel","QrcodeVue","BTCPanel","FractalPanel","SuiPanel","testTopic","testPublicKey","testProofPayload","pendingDeepLink","logList","connectReady","localPubKey","localSecKey","selectedChain","ProofPayloadVerify","showVerifyRow","has","localStorage","getItem","isChecked","setItem","reload","delete","add","computed","selectedChains","initChains","newChains","updatedChains","tab","tabName","testTonSdk","blockExplorerUrls","chainName","nativeCurrency","symbol","decimals","dataETH","dataPolygon","types","EIP712Domain","Person","Mail","primaryType","domain","version","verifyingContract","wallet","contents","maxPriorityFeePerGas","maxFeePerGas","gasPrice","nonce","gasLimit","image","adapter","OKXTONProvider","sendData","SuiAdapter","suiResult","currentSuiMethod","currentSuiTransaction","signAndExecuteTransaction","sui_verifySignature","signPersonalMessage","btcAdapter","btcResult","currentBtcMethod","currentBtcTransaction","hexToBase64","bs64Str","fractalResult","currentFractalMethod","currentFractalTransaction","USER_REJECTS_ERROR","hexStr","bytes","blob","Blob","reader","FileReader","onload","base64Data","onerror","readAsDataURL","hasEip155","hasSolana","hasSui","hasBtc","hasAptos","hasTon","hasCosmos","nameSpacesChains","optSpaceChains","solanaChains","hasTron","suiChains","btcChains","entries","connectMethod","connectData","requireData","solana","cosmos","tron","tonParams","ton_proof","ton","sui","btc","optData","OKXUniversalConnectUI","openModal","isPC","userAgentInfo","navigator","userAgent","Agents","flag","v","isSafariOrChrome","pubkey","OKXSolanaProvider","result1","nacl","detached","TextEncoder","encode","PublicKey","toBytes","application","OKXAptosProvider","config","AptosConfig","network","Network","MAINNET","Aptos","simple","sender","function","typeArguments","functionArguments","signAndSubmitTransaction","Connection","getSolConnect","blockhash","getLatestBlockhash","versionedTransactionMessage","TransactionMessage","payerKey","recentBlockhash","instructions","SystemProgram","transfer","fromPubkey","toPubkey","lamports","compileToV0Message","VersionedTransaction","signAllTransactions","Transaction","feePayer","isValid","verifySignArbitrary","pub_key","signer","prefix","prefixStr","signatureBuffer","uint8Signature","pubKeyValueBuffer","pubKeyUint8Array","uiOptions","actionsConfiguration","uiPreferences","signatureResult","resultObj","verifyPersonalMessageSignature","toSuiAddress","toBase64","created","mounted","initCall","scriptTag","document","createElement","src","getElementsByTagName","appendChild","title","substring","uri","render","app","createApp","App","use","ElementPlus","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","loaded","__webpack_modules__","amdO","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","j","every","splice","r","n","getter","d","definition","g","globalThis","Function","obj","prop","Symbol","toStringTag","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}