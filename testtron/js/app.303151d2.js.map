{"version":3,"file":"js/app.303151d2.js","mappings":"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","sources":["webpack://okxconnectdemo/./src/App.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue?1b44","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue?e4fb","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue?aa83","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue?089a","webpack://okxconnectdemo/./src/App.vue?7ccd","webpack://okxconnectdemo/./src/main.js","webpack://okxconnectdemo/webpack/bootstrap","webpack://okxconnectdemo/webpack/runtime/amd options","webpack://okxconnectdemo/webpack/runtime/chunk loaded","webpack://okxconnectdemo/webpack/runtime/compat get default export","webpack://okxconnectdemo/webpack/runtime/define property getters","webpack://okxconnectdemo/webpack/runtime/global","webpack://okxconnectdemo/webpack/runtime/hasOwnProperty shorthand","webpack://okxconnectdemo/webpack/runtime/make namespace object","webpack://okxconnectdemo/webpack/runtime/node module decorator","webpack://okxconnectdemo/webpack/runtime/jsonp chunk loading","webpack://okxconnectdemo/webpack/startup"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <el-container>\n      <el-header>OKX Connect</el-header>\n      <el-main>\n        <!-- 钱包信息 -->\n        <el-card class=\"wallet-info\">\n          <template #header>\n            <div>Wallet Info</div>\n          </template>\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Wallet Address:</strong> {{ getWalletAddress }}\n            </el-col>\n          </el-row>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Status :</strong> {{ currentStatus }}\n            </el-col>\n          </el-row>\n\n          <!--          <el-row class=\"info-row\">-->\n          <!--            <el-col :span=\"24\">-->\n          <!--              <strong>Universal Link:</strong> {{ updateUniLink }}-->\n          <!--            </el-col>-->\n          <!--          </el-row>-->\n        </el-card>\n\n        <!-- 连接钱包 -->\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div>Actions</div>\n          </template>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <el-checkbox v-model=\"withUI\" @change=\"handleWithUI\">\n                show UI</el-checkbox>\n            </el-col>\n          </el-row>\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Modals</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"modals\" placeholder=\"Modals\" @change=\"handleModalsSelect\" multiple>\n                <el-option label=\"Before\" value=\"before\" />\n                <el-option label=\"Success\" value=\"success\" />\n                <el-option label=\"Error\" value=\"error\" />\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center; justify-content: space-between;\">\n            <el-col :span=\"4\" style=\"gap: 2px\">\n              <p style=\"font-size: 11pt; margin: 0px\">Return Strategy</p>\n              <p style=\"font-size: 9pt; margin: 0px\">(Mobile only)</p>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-select\n                v-model=\"returnStrategy\"\n                @change=\"handleReturnStrategySelect\"\n                placeholder=\"Return Strategy\"\n              >\n                <el-option\n                  v-for=\"strategy in returnStrategies\"\n                  :key=\"`return-strategy-select-option-${strategy}`\"\n                  :label=\"strategy\"\n                  :value=\"strategy\"\n                />\n              </el-select>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-input\n                v-if=\"returnStrategy === 'deeplink'\"\n                v-model=\"deeplink\"\n                @change=\"handleReturnStrategyDeeplink\"\n                placeholder=\"Deeplink\"\n                :disabled=\"returnStrategy !== 'deeplink'\"\n                style=\"margin: 0px\"\n              />\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Language</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"language\" @change=\"handleLanguageSelect\" placeholder=\"Language\">\n                <el-option v-for=\"locale in locales\" :key=\"`language-select-option-${locale}`\" :label=\"locale\"\n                  :value=\"locale\" />\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Theme</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"theme\" @change=\"handleThemeSelect\" placeholder=\"Theme\">\n                <el-option label=\"LIGHT\" :value=\"THEME.LIGHT\" />\n                <el-option label=\"DARK\" :value=\"THEME.DARK\" />\n              </el-select>\n            </el-col>\n          </el-row>\n\n<!--          <el-row style=\"align-items: center\">-->\n<!--            <el-col :span=\"4\">-->\n<!--              <p style=\"font-size: 11pt\">Connect</p>-->\n<!--              <p style=\"font-size: 11pt\">Methods</p>-->\n<!--            </el-col>-->\n<!--            <el-col :span=\"20\">-->\n<!--              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" placeholder=\"Methods\">-->\n<!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n<!--                           :value=\"methods\" />-->\n\n<!--              </el-select>-->\n<!--            </el-col>-->\n<!--          </el-row>-->\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Connect</p>\n              <p style=\"font-size: 11pt\">Methods</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" multiple placeholder=\"methods\">\n                <el-option\n                    v-for=\"item in connectMethods\"\n                    :key=\"item\"\n                    :label=\"item\"\n                    :value=\"item\">\n                </el-option>\n              </el-select>\n\n\n<!--              <el-select v-model=\"selectedMethod\" placeholder=\"Methods\" @change=\"handleConnectMethodsSelect\" multiple>-->\n<!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n<!--                           :value=\"methods\" />-->\n<!--              </el-select>-->\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">ton_proof</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-input v-model=\"tonProofValue\"  placeholder=\"input ton_proof\"></el-input>\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" align=\"middle\">\n            <el-col :span=\"4\">\n              <div>req</div>\n            </el-col>\n            <el-col\n              :span=\"6\"\n              v-for=\"item in Object.keys(availableChains)\"\n              :key=\"item\"\n            >\n              <el-checkbox\n                v-model=\"availableChains[item].checked\"\n                :disabled=\"!areChainsInit\"\n                >{{ availableChains[item].name }}</el-checkbox\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" align=\"middle\" style=\"margin-top: 20px\">\n            <el-col :span=\"4\">\n              <div>opt</div>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(43114)\" @change=\"() => handleOptionChange(43114)\">\n                avax</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(10)\" @change=\"() => handleOptionChange(10)\">op</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(8453)\" @change=\"() => handleOptionChange(8453)\">\n                BASE</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(99781165)\"\n                @change=\"() => handleOptionChange(99781165)\">Non-exist chain</el-checkbox>\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"initBtnClicked\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectInitStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                type=\"primary\"\n                @click=\"connectBtnClicked\"\n                icon=\"el-icon-connection\"\n                :disabled=\"!areChainsInit\"\n                >{{ connectStatusStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"connectBtnAndSignClicked\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectAndSignStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                type=\"danger\"\n                @click=\"disconnectAction\"\n                icon=\"el-icon-switch-button\"\n                :disabled=\"!areChainsInit || walletAddress.length == 0\"\n                >{{ disconnectStatusStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n          <teleport to=\"body\">\n            <div v-if=\"showModal\" class=\"modal-overlay\" @click=\"closeModal\">\n              <div class=\"modal-content\" @click.stop>\n                <button class=\"close-button\" @click=\"closeModal\">\n                  &times;\n                </button>\n                <h2>Scan to connect</h2>\n                <qrcode-vue :value=\"qrValue\" :size=\"350\" level=\"L\" />\n              </div>\n            </div>\n          </teleport>\n        </el-card>\n\n        <!-- 发送交易 -->\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div>Transactions</div>\n          </template>\n\n          <el-tabs v-model=\"activeTab\" type=\"border-card\" @tab-click=\"clickActiveTab\">\n            <!-- ETH -->\n            <el-tab-pane label=\"ETH\" name=\"eip155:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to ETH)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve TONCoin)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(eth mint\n                    nft)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add SPX6900)\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n            <!-- Polygon-->\n            <el-tab-pane label=\"Polygon\" name=\"eip155:137\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send POL)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve sushi)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(polygon mint\n                    nft)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add LGNS)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_testRpc()\">wallet_testRpc(Polygon)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- BSC-->\n            <el-tab-pane label=\"BNB\" name=\"eip155:56\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to BNB)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve POSI)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add FET)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_testRpc()\">wallet_testRpc(check balance on eth)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Fuse\" name=\"eip155:122\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_swap\">eth_sendTransaction(Swap)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\"\n                  >eth_sendTransaction(转账FUSE)</el-button\n                  >\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\"\n                  >eth_sendTransaction(授权USDC)</el-button\n                  >\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TON\" name=\"ton:-239\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_getAccount\">ton_getAccount</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_sendTransaction\">ton_sendTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- solana -->\n            <el-tab-pane label=\"Sol\" name=\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Sonic testnet\" name=\"svm:70000062\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n\n            <!-- Sui-->\n            <el-tab-pane label=\"Sui\" name=\"sui:mainnet\">\n              <SuiPanel @generateTransactionParams=\"sui_generateTransactionParams\" />\n            </el-tab-pane>\n            <!-- BTC -->\n            <el-tab-pane label=\"BTC\" name=\"btc:mainnet\">\n              <BTCPanel @generateTransactionParams=\"btc_generateTransactionParams\" />\n            </el-tab-pane>\n\n            <!-- Fractal BTC -->\n            <el-tab-pane label=\"Fractal\" name=\"fractal:mainnet\">\n              <FractalPanel @generateTransactionParams=\"fractal_generateTransactionParams\" />\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Tron\" name=\"tron:mainnet\">\n              <TronTransactionPanel\n                  @generateTransactionParams=\"tron_generateTransactionParams\"\n                  @generateTransactionResult=\"tron_getTransactionResult\" />\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Aptos\" name=\"aptos:mainnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signTransaction\">aptos_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"aptos_signAndSubmitTransaction\">aptos_signAndSubmitTransaction</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Movement\" name=\"movement:testnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"move_signTransaction\">move_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"move_signAndSubmitTransaction\">move_signAndSubmitTransaction</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"cosmos\" name=\"cosmos:cosmoshub-4\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"osmos\" name=\"cosmos:osmosis-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"sei交易\" name=\"cosmos:pacific-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TEST \" name=\"test:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"testBase64UrlSafe\">testBase64UrlSafe</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n          </el-tabs>\n\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Data:</div>\n            <el-input v-model=\"testTransaction\" type=\"textarea\" :rows=\"5\" placeholder=\"sendTransactions\"></el-input>\n          </el-col>\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Result :</div>\n            <el-input v-model=\"testboc\" type=\"textarea\" :rows=\"5\" placeholder=\"boc\"></el-input>\n          </el-col>\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button type=\"primary\" @click=\"sendTransaction()\">{{\n                testTransactionStr\n                }}</el-button>\n            </el-col>\n          </el-row>\n        </el-card>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<style scoped>\n/* 重置全局边距和内边距 */\nbody,\nhtml {\n  margin: 0;\n  padding: 0;\n  height: 100%;\n}\n\n/* 确保 app 容器占满整个视口 */\n#app {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin: 0 auto;\n  /* 居中 */\n  max-width: 600px;\n  /* 设置最大宽度 */\n  padding: 0 20px;\n  /* 添加一些左右内边距 */\n}\n\n/* 调整 el-container 样式 */\n.el-container {\n  min-height: 100vh;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n}\n\n/* 调整 el-header 样式 */\n.el-header {\n  background-color: #333333;\n  color: white;\n  height: 50px;\n  line-height: 50px;\n  font-size: 18px;\n  font-weight: bold;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n}\n\n/* 调整 el-main 样式 */\n.el-main {\n  padding: 70px 0 20px;\n  /* 增加顶部内边距以避免被固定header遮挡 */\n  flex-grow: 1;\n}\n\n.el-card {\n  margin-bottom: 20px;\n}\n\n.info-row {\n  margin-bottom: 10px;\n}\n\n.input-label {\n  margin-bottom: 5px;\n  text-align: left;\n}\n\n.el-input {\n  margin-bottom: 10px;\n}\n\n/* 通用按钮样式 */\n.wallet-actions .el-button,\n.transaction .el-button,\n.clear-cache .el-button {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 40px;\n}\n\n.wallet-actions .el-button span,\n.transaction .el-button span,\n.clear-cache .el-button span {\n  margin: 0 auto;\n}\n\n/* 按钮行间距 */\n.wallet-actions .button-row,\n.transaction .button-row {\n  margin-bottom: 8px;\n}\n\n.wallet-actions .button-row:last-child,\n.transaction .button-row:last-child {\n  margin-bottom: 0;\n}\n\n/* 调整图标和文字的对齐 */\n.wallet-actions .el-button [class^=\"el-icon-\"],\n.transaction .el-button [class^=\"el-icon-\"],\n.clear-cache .el-button [class^=\"el-icon-\"] {\n  margin-right: 5px;\n  vertical-align: middle;\n}\n\n/* 新增：调整发送交易按钮与输入框的间距 */\n.transaction .el-row:not(:last-child) {\n  margin-bottom: 10px;\n}\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  text-align: center;\n  position: relative;\n  max-width: 90%;\n  width: 400px;\n}\n\n.close-button {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  font-size: 24px;\n  border: none;\n  background: none;\n  cursor: pointer;\n}\n\n/* 响应式调整 */\n@media (max-width: 600px) {\n  #app {\n    padding: 0 10px;\n  }\n\n  .el-main {\n    padding: 60px 0 10px;\n  }\n}\n</style>\n<script>\nimport {getAppWalletDeepLink, getUniversalLink, OKX_CONNECT_ERROR_CODES, safeJsonStringify} from \"@okxconnect/core\"\nimport {\n  OKXBtcProvider,\n  OKXCosmosProvider,\n  OKXTonProvider,\n  OKXTronProvider,\n  OKXUniversalProvider\n} from \"@okxconnect/universal-provider\"\nimport {OKXSolanaProvider} from \"@okxconnect/solana-provider\";\nimport {\n  Connection,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n  TransactionMessage,\n  VersionedTransaction\n} from '@solana/web3.js';\nimport {OKXSuiProvider as SuiAdapter} from \"@okxconnect/sui-provider\"\nimport QrcodeVue from 'qrcode.vue'\n\nimport {OKXAptosProvider} from \"@okxconnect/aptos-provider\";\nimport {Aptos, AptosConfig, Network} from \"@aptos-labs/ts-sdk\";\n\nimport BTCPanel from \"./components/BtcTransactionPanel.vue\";\nimport FractalPanel from \"./components/FractalTransactionPanel.vue\"\nimport SuiPanel from \"./components/SuiTransactionPanel.vue\";\n\nimport {OKXUniversalConnectUI, THEME} from \"@okxconnect/ui\";\nimport {ethers} from 'ethers';\nimport VConsole from 'vconsole';\nimport nacl from \"tweetnacl\";\nimport {verifyPersonalMessageSignature} from '@mysten/sui/verify';\nimport TronTransactionPanel from \"@/components/TronTransactionPanel.vue\";\nimport {TronWeb} from \"tronweb\";\n\nconst { verifyADR36Amino } = require('@keplr-wallet/cosmos')\nconst { fromBech32 } = require('@cosmjs/encoding')\n\nnew VConsole();\n\nconst allChains = {\n  1: { name: \"eth\", checked: false },\n  56: { name: \"BNB\", checked: false },\n  137: { name: \"Polygon\", checked: false },\n  122: { name: \"Fuse\", checked: false },\n  \"ton:-239\":{name: \"TON\",checked: false},\n  \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\": {\n    name: \"Sol mainnet\",\n    checked: false,\n  },\n  \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\": {\n    name: \"Sol testnet\",\n    checked: false,\n  },\n  \"svm:70000062\": {\n    name: \"Sonic testnet\",\n    checked: false,\n  },\n  \"sui:mainnet\": { name: \"Sui mainnet\", checked: false },\n  \"aptos:mainnet\": { name: \"Aptos mainnet\", checked: false },\n  \"movement:testnet\": { name: \"Movement\", checked: false },\n  \"btc:mainnet\": { name: \"BTC\", checked: false },\n  \"fractal:mainnet\": { name: \"Fractal\", checked: false },\n  \"cosmos:osmosis-1\": {name: \"osmos\", checked: false},\n  \"cosmos:cosmoshub-4\": {name: \"cosmoshub\", checked: false},\n  \"cosmos:pacific-1\": {name: \"sei\", checked: false},\n  \"cosmos:abvdefg\": {name: \"cosmos:abvdefg\", checked: false},\n  \"tron:mainnet\": {name: \"tron\", checked: false},\n  997865: { name: \"Non Exist chain\", checked: false },\n};\n\nvar optionChains = new Set([]);\nvar selectedModals = [\"before\", \"success\", \"error\"];\nvar selectedReturnStrategy = \"none\";\nvar selectedDeepLink = \"tg://resolve\";\nvar selectedLanguage = \"en_US\";\nvar selectedTheme = THEME.LIGHT;\n\n// import QrcodeVue from 'qrcode.vue'\nexport default {\n  name: \"App\",\n  components: {\n    TronTransactionPanel,\n    QrcodeVue,\n    BTCPanel,\n    FractalPanel,\n    SuiPanel\n  },\n\n  data: () => {\n    return {\n      activeTab: \"eip155:1\",\n      testTopic: \"\",\n      testPublicKey: \"\",\n      testProofPayload: \"\",\n      tonProofValue:\"\",\n      pendingDeepLink: \"-\",\n      logList: [],\n      connectReady: false,\n      connectStatusStr: \"Connect\",\n      connectAndSignStr: \"ConnectAndsign(two steps only ETH)\",\n      connectInitStr: \"init test\",\n      disconnectStatusStr: \"Disconnect\",\n      localPubKey: \"\",\n      localSecKey: \"\",\n      testTransaction: \"\",\n      selectedChain: \"eip155:1\",\n      testTransactionStr: \"Send\",\n      walletAddress: \"\",\n      testboc: \"\",\n      ProofPayloadVerify: \"\",\n      showModal: false,\n      showVerifyRow: false,\n      qrValue: \"https://www.okx.com/download\",\n      currentStatus: \"\",\n      areChainsInit: false,\n      availableChains: allChains,\n      isOptionalChecked: (chainId) => {\n        return optionChains.has(chainId);\n      },\n      withUI: localStorage.getItem(\"autoRefresh\") != \"false\",\n      modals: selectedModals,\n      returnStrategies: [\"none\", \"back\", \"deeplink\"],\n      returnStrategy: selectedReturnStrategy,\n      deeplink: selectedDeepLink,\n      locales: [\n        \"en_US\",\n        \"ru_RU\",\n        \"zh_CN\",\n        \"zh\",\n        \"ar_AE\",\n        \"cs_CZ\",\n        \"de_DE\",\n        \"es_ES\",\n        \"es_LAT\",\n        \"fr_FR\",\n        \"id_ID\",\n        \"it_IT\",\n        \"nl_NL\",\n        \"pl_PL\",\n        \"pt_BR\",\n        \"pt_PT\",\n        \"ro_RO\",\n        \"tr_TR\",\n        \"uk_UA\",\n        \"vi_VN\",\n      ],\n      selectedMethod:[],\n      selectedMethodData:[],\n      connectMethods:[\n        \"wallet_addEthereumChain(ETH)\",\n        \"personal_sign(ETH)\",\n        \"solana_signMessage(Sol mainnet)\",\n        \"sui_signMessage(Sui mainnet)\",\n        \"sui_signPersonalMessage(Sui mainnet)\",\n        \"btc_signMessage(BTC)\",\n        \"aptos_signMessage(aptos mainnet)\",\n        \"cosmos_signArbitrary(cosmoshub)\",\n        \"test_noSupport_eth(ETH)\",\n        \"tron_signMessage\",\n        \"tron_signMessageV2\",\n      ],\n\n      language: selectedLanguage,\n      theme: selectedTheme,\n      THEME: THEME,\n      handleWithUI: (isChecked) => {\n        localStorage.setItem(\"autoRefresh\", `${isChecked}`);\n        location.reload();\n      },\n      handleOptionChange: (chainId) => {\n        if (optionChains.has(chainId)) {\n          optionChains.delete(chainId);\n        } else {\n          optionChains.add(chainId);\n        }\n      },\n    };\n  },\n  computed: {\n    getWalletAddress: function () {\n      return this.walletAddress;\n    },\n  },\n  methods: {\n    isChecked(chainId) {\n      return this.selectedChains.has(chainId);\n    },\n\n    initChains(newChains) {\n      if (newChains.length > 0) {\n        const updatedChains = Object.assign({}, this.availableChains);\n        for (const chainId of newChains) {\n          if (updatedChains[chainId]){\n            updatedChains[chainId].checked = !updatedChains[chainId].checked;\n          }\n        }\n        this.availableChains = updatedChains;\n      }\n\n      this.areChainsInit = true;\n    },\n\n    async clickActiveTab(tab) {\n      const tabName = tab.props ? tab.props.name : tab.name;\n      this.selectedChain = tabName;\n      console.log(`已切换到链 :`, tabName);\n\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      window.provider.setDefaultChain(this.selectedChain);\n    },\n\n    async initBtnClicked() {\n      var initCall;\n      if (!this.withUI) {\n        initCall = OKXUniversalProvider.init({\n          dappMetaData: {\n            name: \"univer test dapp\",\n            icon: \"https://avatars.githubusercontent.com/u/37784886\",\n          },\n        });\n      } else {\n        initCall = OKXUniversalConnectUI.init({\n          dappMetaData: {\n            icon: \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\",\n            name: \"OKX WalletConnect UI Demo\",\n          },\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: \"all\",\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme\n          },\n        });\n      }\n\n      initCall.then((provider) => {\n        window.provider = provider;\n        window.tonProvider = new OKXTonProvider(window.provider);\n        window.tonProvider.onStatusChange((walletInfo) => {\n              console.log('TONConnection onStatusChange:', JSON.stringify(walletInfo));\n            }, (err) => {\n              console.log('TONConnection onStatusChange error:', err);\n            }\n        )\n\n        console.log(\"init finished:\", provider);\n        console.log(\"init finished session:\", JSON.stringify(provider.session));\n\n        if (provider.session?.namespaces) {\n          const newChains = [];\n          console.log(\"namespaces\", provider.session.namespaces);\n          Object.entries(provider.session.namespaces).forEach(([key, value]) => {\n            if (key === \"eip155\") {\n              value.chains.forEach((chain) => {\n                newChains.push(parseInt(chain.substring(7)));\n              });\n            }\n            else {\n              value.chains.forEach((chain) => {\n                newChains.push(chain);\n              });\n            }\n          });\n\n          console.log(\"existing chains:\", newChains);\n          this.initChains(newChains);\n        } else {\n          this.initChains([]);\n        }\n\n        provider.on(\"display_uri\", (uri) => {\n          if (this.isPC()) {\n            if (uri && !this.withUI) {\n              this.qrValue = uri;\n              this.showModal = true;\n            }\n          }\n          console.log(\"通知>>>display_uri  ==> \", uri);\n        });\n\n        provider.on(\"connect\", (session) => {\n          console.log(\"通知>>>get connect session\", session);\n          this.verifyMessage();\n        });\n        provider.on(\"reconnect\", (session) => {\n          console.log(\"通知>>>get reconnect session\", session);\n          this.walletAddress = \"connected\";\n        });\n        provider.on(\"disconnect\", ({ topic }) => {\n          console.log(`通知>>>get disconnect  ${topic}`);\n          this.walletAddress = \"disconnecteddddd\";\n        });\n        provider.on(\"session_delete\", ({ topic }) => {\n          console.log(`通知>>>get session_delete  ${topic}`);\n        });\n        provider.on(\"session_update\", (session) => {\n          console.log(`通知>>>get session_update `, JSON.stringify(session));\n        });\n      });\n    },\n\n    async connectBtnClicked() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        this.testTonSdk(false);\n      } else {\n        console.log(`connectBtnClicked provider not finish init`);\n      }\n    },\n    async connectBtnAndSignClicked() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        this.testTonSdk(true);\n      } else {\n        console.log(`connectBtnClicked provider not finish init`);\n      }\n    },\n\n    async disconnectAction() {\n      try {\n        console.log(\"get disconnect wallet btn clicked\");\n        // await TON.disconnect();\n        var provider = window.provider;\n        await provider.disconnect();\n        this.walletAddress = \"disconnected\";\n      } catch (error) {\n        console.log(\"Disconnect  error ==>> \", error.message);\n        this.currentStatus = error.message;\n      }\n    },\n\n    async eth_requestAccounts() {\n      var data = { method: \"eth_requestAccounts\" };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_chainId() {\n      var data = { method: \"eth_chainId\" };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_switchEthereumChain() {\n      var data = { method: \"wallet_switchEthereumChain\" };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_addEthereumChain() {\n      var data = {\n        method: \"wallet_addEthereumChain\",\n        params: {\n          blockExplorerUrls: [\"https://explorer.fuse.io\"],\n          chainId: \"0x7a\",\n          chainName: \"Fuse\",\n          nativeCurrency: { name: \"Fuse\", symbol: \"FUSE\", decimals: 18 },\n          rpcUrls: [\"https://rpc.fuse.io\"],\n        },\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n    async personal_sign() {\n      if (this.selectedChain === \"eip155:1\") {\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0x1ca023f10e157d148deed210f8bee193657a1eaa7f187909e20a9dc3b071dbc364c41fde37960c05093359f410a061ec8a7dca8c0c39fc7c1e24de8a3329775d1b\n\n        var accounts = await window.provider.request(\n          { method: \"eth_requestAccounts\" },\n          \"eip155:1\"\n        );\n        var address = accounts[0];\n        console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n        var dataETH = {\n          method: \"personal_sign\",\n          params: [\n            \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n            address,\n          ],\n        };\n\n        this.testTransaction = JSON.stringify(dataETH);\n      } else if (\n        this.selectedChain === \"eip155:137\" ||\n        this.selectedChain === \"eip155:122\"\n      ) {\n        // method\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0xebda9cfa2af43999058dffa0107031d1ef7fc0252dca85dcbd22ea097af922ca39b64d509ef61ce42b7641c5840b8a80337ffd1411b13e87e2260a3f1b6c151c1b\n\n        var dataPolygon = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n        this.testTransaction = JSON.stringify(dataPolygon);\n      } else if (this.selectedChain === \"eip155:56\") {\n        var data = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n\n        this.testTransaction = JSON.stringify(data);\n      }\n    },\n\n    async eth_sendTransaction_swap() {\n      var data = {\n        method: \"eth_sendTransaction\",\n        chainId: \"eip155:122\",\n        params: {\n          value: \"0x38d7ea4c68000\",\n          gas: \"0x2665f\",\n          to: \"0xf2614A233c7C3e7f08b1F887Ba133a13f1eb2c55\",\n          from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n          data: \"0x2646478b000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00000000000000000000000000000000000000000000000000038d7ea4c68000000000000000000000000000620fd5fa44be6af63715ef4e65ddfa0387ad13f5000000000000000000000000000000000000000000000000000000000000001b000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000700301ffff0201602352A9Eb5234466Eac23E59e7B99bCaE79C39c0BE9e53fd7EDaC9F859882AfdDa116645287C629040BE9e53fd7EDaC9F859882AfdDa116645287C62900602352A9Eb5234466Eac23E59e7B99bCaE79C39c01f2F3e73be57031114dd1f4E75c1DD87658be7F0E000bb800000000000000000000000000000000\",\n        },\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_signTypedData_v4() {\n      // method\n      // eth_signTypedData\n      // address\n      // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n      // valid\n      // true\n      // result\n      // 0xa8bb3c6b33a119d2d567c7632195c21988df778006082742125a591f5c633f716107883a37f7de6531a6312a5f69022135bf46fe5ab77905b62c82b3395f985e1b\n      //\n\n      // var data = {\n      //   \"method\": \"eth_signTypedData_v4\",\n      //   \"params\": {\n      //     \"typedDataJson\":\"{\\\"types\\\":{\\\"EIP712Domain\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"version\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"chainId\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"name\\\":\\\"verifyingContract\\\",\\\"type\\\":\\\"address\\\"}],\\\"Person\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"wallet\\\",\\\"type\\\":\\\"address\\\"}],\\\"Mail\\\":[{\\\"name\\\":\\\"from\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"to\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"contents\\\",\\\"type\\\":\\\"string\\\"}]},\\\"primaryType\\\":\\\"Mail\\\",\\\"domain\\\":{\\\"name\\\":\\\"Ether Mail\\\",\\\"version\\\":\\\"1\\\",\\\"chainId\\\":1,\\\"verifyingContract\\\":\\\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\\\"},\\\"message\\\":{\\\"from\\\":{\\\"name\\\":\\\"Cow\\\",\\\"wallet\\\":\\\"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\\\"},\\\"to\\\":{\\\"name\\\":\\\"Bob\\\",\\\"wallet\\\":\\\"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\\\"},\\\"contents\\\":\\\"Hello, Bob!\\\"}}\"\n      // }}\n\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        \"eip155\"\n      );\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n      var data = {\n        method: \"eth_signTypedData_v4\",\n        params: [\n          address,\n          {\n            types: {\n              EIP712Domain: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"version\",\n                  type: \"string\",\n                },\n                {\n                  name: \"chainId\",\n                  type: \"uint256\",\n                },\n                {\n                  name: \"verifyingContract\",\n                  type: \"address\",\n                },\n              ],\n              Person: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"wallet\",\n                  type: \"address\",\n                },\n              ],\n              Mail: [\n                {\n                  name: \"from\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"to\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"contents\",\n                  type: \"string\",\n                },\n              ],\n            },\n            primaryType: \"Mail\",\n            domain: {\n              name: \"Ether Mail\",\n              version: \"1\",\n              chainId: 1,\n              verifyingContract: \"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\",\n            },\n            message: {\n              from: {\n                name: \"Cow\",\n                wallet: \"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\",\n              },\n              to: {\n                name: \"Bob\",\n                wallet: \"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\",\n              },\n              contents: \"Hello, Bob!\",\n            },\n          },\n        ],\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_sendTransaction_transfer() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            chainId: \"0x1\",\n            to: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            value: \"0x5af3107a4000\",\n            maxPriorityFeePerGas: \"0x3b9aca00\",\n            gas: \"0x5e56\",\n            maxFeePerGas: \"0x2643b9db8\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gasPrice: \"0x17003f6530\",\n            nonce: \"0x0d30\",\n            data: \"0x\",\n            value: \"0x00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasLimit: \"0x5208\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x5e56\",\n            value: \"0x5af3107a4000\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasPrice: \"0x3b9aca00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            chainId: \"0x38\",\n          },\n        };\n      }else if(this.selectedChain === \"eip155:122\"){\n         data =   {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            value: \"0x0\",\n            chainId: \"0x7a\",\n          }\n        }\n      }\n\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        \"eip155\"\n      );\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"to\"] = address;\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_approve() {\n      var data = {};\n\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000000000000022d473030f116ddee9f6b43ac78ba3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x582d872a1b094fc48f5de31d3b73f2d9be47def1\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000f6f8096ac575b0\",\n            to: \"0x0b3F868E0BE5597D5DB7fEB59E1CADBb0fdDa50a\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            value: \"0x0\",\n            gas: \"0xe117\",\n            gasPrice: \"0xb2d05e00\",\n            data: \"0x095ea7b300000000000000000000000031c2f6fcff4f8759b3bd5bf0e1084a055615c768ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x5CA42204cDaa70d5c773946e69dE942b85CA6706\",\n          },\n        };\n      }else if (this.selectedChain === 'eip155:122'){\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000000000000013b3\",\n            to: \"0x620fd5fa44BE6af63715Ef4E65DDFA0387aD13F5\",\n          },\n        };\n      }\n\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        \"eip155\"\n      );\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_mint() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x4cacb\",\n            data: \"0xa64dfa75000000000000000000000000ed688002f3797599db8b4feacfe8b1dda0df1c8d000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cecb15396825a895ff8da8fc2d2c77a234dccee00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f6261667962656968643737366b6177706e71336f6f6a6635693274787a76617737737164656b34616a776472637472703261366f626b70723773792f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x30795\",\n            data: \"0xa64dfa75000000000000000000000000341b3687f0309778f08f29336b2c4b9c38b9f110000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003e00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000042000000000000000000000000000000000000000000000000000000000000005000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000052000000000000000000000000000000000000000000000000000000000000005400000000000000000000000000000000000000000000000000000000000000560000000000000000000000000000000000000000000000000000000000000058000000000000000000000000000000000000000000000000000000000000005a000000000000000000000000000000000000000000000000000000000000005c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f62616679626569686a6279676b68747a71376b68377434336266686e676e793236337668766f6578716a6d6e377161716166366e717a64743777712f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      }\n\n      let str = JSON.stringify(data);\n      console.log(\"-----长度--->\", str.length);\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        \"eip155\"\n      );\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_testRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n        `eip155:56`,\n        `https://eth-mainnet.g.alchemy.com/v2/NxUfYJUr-TQtEpLmSXhhD5pXn70GwsyV`\n      );\n      var data = {\n        method: \"eth_getBalance\",\n        params: [\"0x8D97689C9818892B700e27F316cc3E41e17fBeb9\", \"latest\"],\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_watchAsset() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xe0f63a424a4439cbe457d80e4f4b51ad25b2c56c\",\n              symbol: \"SPX6900\",\n              image:\n                \"https://assets.coingecko.com/coins/images/31401/standard/sticker_%281%29.jpg?1702371083\",\n              decimals: 8,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xeB51D9A39AD5EEF215dC0Bf39a8821ff804A0F01\",\n              symbol: \"LGNS\",\n              image: \"https://polygonscan.com/token/images/originlgns_32.png\",\n              decimals: 9,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0x031b41e504677879370e9dbcf937283a8691fa7f\",\n              symbol: \"FET\",\n              image: \"https://bscscan.com/token/images/fetch_32.png\",\n              decimals: 18,\n            },\n          },\n        };\n      }\n\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async ton_sendTransaction() {\n      var data  = {\n        \"messages\":[{\"address\":\"EQARULUYsmJq1RiZ-YiH-IJLcAZUVkVff-KBPwEmmaQGH6aC\",\"amount\":\"205000000\",\"payload\":\"te6cckEBAgEAhwABbQ+KfqUAAADNgG7tIEATEtAIAO87mQKicbKgHIk4pSPP4k5xhHqutqYgAB7USnesDnCcECwbgQMBAJUlk4VhgBD3JEg1TUr75iTijBghOKm/sxNDXUBl7CD6WMut0Q85x4RafwA/Es89DBXoTxuqxVFxyBbzt9Rav2HBUKl7hmkvLuKHLBCW57aK\"}],\n        \"validUntil\":1792481054,\n        \"network\":'-239'}\n      this.testTransaction = JSON.stringify(data)\n    },\n    ton_getAccount() {\n      this.testTransaction = \"这里是同步获取 不再需要点击 <<发送交易>>\"\n      let result =   window.tonProvider.account()\n      if (result) {\n        this.testboc = JSON.stringify(result);\n      } else {\n        this.testboc = 'null'\n      }\n    },\n\n    async tonUniversalLog() {\n      console.log(\"ton 信息: tonProvider  connected:\",window.tonProvider.connected())\n      console.log(\"ton 信息: tonProvider  account:\",JSON.stringify(window.tonProvider.account()))\n      console.log(\"ton 信息: tonProvider  wallet:\",JSON.stringify(window.tonProvider.wallet()))\n    },\n\n    async sendTransactionAlert() {\n      //\n      const response = await fetch(`https://apitest.fireverse.ai/oauth/okx/getNonce?publicAddress=0x0cecb15396825a895ff8da8fc2d2c77a234dccee`);\n      const data = await response.json();\n      console.log(\"请求数据----\",JSON.stringify(data))\n      await this.personal_sign()\n      if (confirm(\"Are you want to sign message?\")) {\n        this.sendTransaction();\n      }\n\n      // window.open(\"https://www.okx.com/download?deeplink=okx%3A%2F%2Fweb3%2Fwallet%2Fconnect\",'_self')\n    },\n\n    async sendTransaction() {\n      if (this.selectedChain.startsWith(\"aptos\")\n          || this.selectedChain.startsWith(\"movement\")\n          || this.selectedChain.startsWith(\"solana\")\n          || this.selectedChain.startsWith(\"sonic\")\n          || this.selectedChain.startsWith(\"cosmos\")) {\n        return\n      }\n      console.log(\"sendTransaction\", window.provider);\n      console.log(\"sendTransaction内容11------\", this.testTransaction);\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (this.testTransaction && window.provider) {\n        // eslint-disable-next-line no-undef\n        const sendData = JSON.parse(this.testTransaction);\n        try {\n          console.log(\"sendTransaction-----22method>>\", sendData.method);\n\n          let chainId = \"eip155:1\";\n          if (this.selectedChain) {\n            chainId = this.selectedChain;\n            console.log(\n              \"sendTransaction-----this.selectedChain>>\",\n              this.selectedChain\n            );\n          }\n          console.log(\"windowOpen[click_1]: \", Date.now());\n          if (chainId == \"sui:mainnet\") {\n            const adapter = new SuiAdapter(window.provider);\n            var suiResult = \"invalid result\";\n            if (this.currentSuiMethod == 'sui_getAccount') {\n              let result = adapter.getAccount()\n              if (typeof result == \"string\") {\n                this.testboc = result\n              } else {\n                this.testboc = JSON.stringify(result)\n              }\n            }\n            if (this.currentSuiMethod == \"sui_signTransaction\") {\n              suiResult = await adapter.signTransaction(\n                this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signAndExecuteTransaction\") {\n              suiResult = await adapter.signAndExecuteTransaction(\n                this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signMessage\") {\n              console.log(\"signMessage----\", this.currentSuiTransaction);\n              suiResult = await adapter.signMessage(this.currentSuiTransaction);\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_signPersonalMessage\") {\n              console.log(\n                \"signPersonalMessage----\",\n                this.currentSuiTransaction\n              );\n              suiResult = await adapter.signPersonalMessage(\n                this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_testRpc\") {\n              console.log(\"test rpc----\", this.currentSuiTransaction);\n              console.log(\n                `请求数据发送 rpc ----->> ${JSON.stringify(sendData)}`\n              );\n              const res = await window.provider.request(sendData, chainId);\n              console.log(`请求数据回调 rpc ----->> ${JSON.stringify(result)}`);\n              if (typeof res == \"string\") {\n                this.testboc = res;\n              } else {\n                this.testboc = JSON.stringify(res);\n              }\n            }\n            console.log(\"windowOpen[click_2]: \", Date.now());\n            return;\n          }else if(chainId === \"ton:-239\"){\n            console.log(\n                `请求数据发送 sendTransaction ---ton-->> ${JSON.stringify(sendData)}`\n            );\n            let result =  await window.tonProvider.sendTransaction(sendData)\n            console.log(\n                `请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`\n            );\n            if (typeof result == \"string\") {\n              this.testboc = result;\n            } else {\n              this.testboc = JSON.stringify(result);\n            }\n            return\n          }\n\n          if (chainId == 'btc:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var btcResult = 'invalid result'\n\n            if (this.currentBtcMethod == 'btc_signMessage') {\n              btcResult = await btcAdapter.signMessage(chainId, this.currentBtcTransaction[\"signStr\"])\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_send') {\n              btcResult = await btcAdapter.send(chainId, this.currentBtcTransaction)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signPsbt') {\n              btcResult = await btcAdapter.signPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n\n              this.hexToBase64(btcResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentBtcMethod == 'btc_signPsbts') {\n              btcResult = await btcAdapter.signPsbts(chainId, this.currentBtcTransaction.psbtHexs, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_sendInscription') {\n              btcResult = await btcAdapter.sendInscription(chainId, this.currentBtcTransaction.address, this.currentBtcTransaction.inscriptionId, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signAndPushPsbt') {\n              btcResult = await btcAdapter.signAndPushPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            }else if (this.currentBtcMethod == 'btc_sendBitcoin') {\n              btcResult = await btcAdapter.sendBitcoin(chainId, this.currentBtcTransaction.toAddress, this.currentBtcTransaction.satoshis, this.currentBtcTransaction.options)\n\n              this.testboc = JSON.stringify(btcResult)\n            }\n            return\n          }\n\n          if (chainId == 'fractal:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var fractalResult = 'invalid result'\n\n            if (this.currentFractalMethod == 'fractal_signMessage') {\n              fractalResult = await btcAdapter.signMessage(chainId, this.currentFractalTransaction['signStr'])\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_send') {\n              fractalResult = await btcAdapter.send(chainId, this.currentFractalTransaction)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signPsbt') {\n              fractalResult = await btcAdapter.signPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.hexToBase64(fractalResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentFractalMethod == 'fractal_signPsbts') {\n              fractalResult = await btcAdapter.signPsbts(chainId, this.currentFractalTransaction.psbtHexs, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_sendInscription') {\n              fractalResult = await btcAdapter.sendInscription(chainId, this.currentFractalTransaction.address, this.currentFractalTransaction.inscriptionId, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signAndPushPsbt') {\n              fractalResult = await btcAdapter.signAndPushPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            }else if (this.currentFractalMethod == 'fractal_sendBitcoin') {\n              fractalResult = await btcAdapter.sendBitcoin(chainId, this.currentFractalTransaction.toAddress, this.currentFractalTransaction.satoshis, this.currentFractalTransaction.options)\n\n              this.testboc = JSON.stringify(fractalResult)\n            }\n\n            return\n          }\n\n          console.log(`请求数据发送 sendTransaction ----->> ${JSON.stringify(sendData)}`)\n          var result = await window.provider.request(sendData, chainId)\n          console.log(`请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`)\n\n          console.log(\"windowOpen[click_3]: \", Date.now());\n          if (typeof result == \"string\") {\n            this.testboc = result;\n          } else {\n            this.testboc = JSON.stringify(result);\n          }\n          console.log(\"方法数据回调 --this.testboc--\", this.testboc);\n        } catch (error) {\n          console.error(\"方法数据回调失败 --Error--\", error.message);\n\n          if (error.code === OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n            this.testboc = error.message;\n          } else {\n            this.testboc = \"签名错误！\" + error.message;\n          }\n        }\n      } else {\n        alert(\"交易数据为空，请选则或输入交易数据。\");\n      }\n    },\n\n    hexToBase64(hexStr) {\n      var bytes = [];\n      for (var i = 0; i < hexStr.length; i += 2) {\n        bytes.push(parseInt(hexStr.substr(i, 2), 16));\n      }\n      const buffer = new Uint8Array(bytes)\n      const blob = new Blob([buffer]);\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = function (e) {\n          var base64Data = e.target.result.split(\",\")[1]\n          resolve(base64Data);\n        };\n        reader.onerror = function (e) {\n          reject(e);\n        };\n        reader.readAsDataURL(blob);\n      });\n    },\n    testBase64UrlSafe(){\n      let datatest = {\"protocolVer\":1,\"topic\":\"8a7a4c3be73802d0ae2587123ade7bb79f27433b9aa3ca589a2208a2089eecfd\",\"clientId\":\"5f1bbf9eac92160affa7ef04d0a710817ddb6d8c22ebbd6263e86f059930b404\",\"requestId\":\"1731383250054\",\"dAppInfo\":{\"url\":\"connect.oker.vip\",\"origin\":\"https://connect.oker.vip\",\"name\":\"univer test dapp\",\"icon\":\"https://avatars.githubusercontent.com/u/37784886\"},\"requests\":[{\"name\":\"requestAccounts\",\"requiredNamespaces\":[{\"namespace\":\"aptos\",\"chains\":[\"aptos:637\"]}],\"optionalNamespaces\":[],\"connectRequestMethods\":[{\"chainId\":\"aptos:637\",\"method\":\"aptos_signMessage\",\"params\":{\"data\":{\"address\":true,\"application\":true,\"chainId\":true,\"message\":\"123 中文测试!\",\"nonce\":\"1234\"},\"applicationUrl\":\"https://connect.oker.vip\",\"prefix\":\"APTOS\",\"aptosChainId\":\"1\"}}]}],\"redirect\":\"none\"}\n      let json = JSON.stringify(datatest)\n      const utf8Array = new TextEncoder().encode(json);\n      let binary = '';\n      utf8Array.forEach(byte => {\n        binary += String.fromCharCode(byte);\n      });\n\n      let firstStr =  btoa(binary)\n      console.log(\"字符串编码1>>>>\",firstStr)\n      firstStr = firstStr.replace(/\\+/g, '-')  // 替换 '+'\n      console.log(\"字符串编码2>>>>\",firstStr)\n      firstStr = firstStr.replace(/\\//g, '_')  // 替换 '/'\n      console.log(\"字符串编码3>>>>\",firstStr)\n      firstStr = firstStr.replace(/=+$/, '');  // 移除 '=';\n      console.log(\"字符串编码4>>>>\",firstStr)\n\n      let showUrl =  getUniversalLink(getAppWalletDeepLink(firstStr))\n      console.log(\"字符串编码5>>>>\",showUrl)\n      this.qrValue = showUrl;\n      this.showModal = true;\n    },\n\n\n    async testTonSdk(isTwoSteps) {\n      // 1. connect\n      //  create sub providers for each namespace/chain\n      let nameSpacesChains = [];\n      let optSpaceChains = [];\n\n      let solanaChains = [\n        \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n        \"svm:70000062\",\n      ];\n      let hasEip155, hasSolana, hasSui, hasBtc, hasAptos, hasTon, hasCosmos, hasTron = false\n\n      let suiChains = [\n        \"sui:mainnet\",\n      ];\n\n      let btcChains = [\n        \"btc:mainnet\",\n        \"fractal:mainnet\"\n      ];\n\n      const chains = Object.entries(this.availableChains)\n          .filter((chain) => chain[1].checked)\n          .map((chain) => chain[0]);\n      console.log(`chains  ===> ${chains.values()}`)\n      chains.forEach(function (chainId) {\n        console.log(`chains.forEach chainId  ===> ${chainId}`)\n\n        if (solanaChains.includes(chainId)) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"ton\")) {\n          nameSpacesChains.push(chainId)\n          hasTon = true\n          return\n        }\n        if (typeof chainId == 'string' && (chainId.startsWith(\"aptos\") || chainId.startsWith(\"movement\"))) {\n          nameSpacesChains.push(chainId)\n          hasAptos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId)\n          hasSolana = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"cosmos\")) {\n          nameSpacesChains.push(chainId)\n          hasCosmos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"tron\")) {\n          nameSpacesChains.push(chainId)\n          hasTron = true\n          return\n        }\n\n        if (suiChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`);\n          nameSpacesChains.push(chainId);\n          hasSui = true;\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`)\n          nameSpacesChains.push(chainId)\n          hasBtc = true\n          return\n        }\n\n        hasEip155 = true\n        nameSpacesChains.push(`eip155:${chainId}`)\n      })\n\n\n      optionChains.forEach(function (chainId) {\n        if (solanaChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n        if (typeof chainId == \"string\" && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (suiChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          optSpaceChains.push(chainId)\n          return\n        }\n\n        optSpaceChains.push(`eip155:${chainId}`)\n      })\n\n      console.log(`namespaceChains  ===> ${JSON.stringify(nameSpacesChains)}`);\n      var connectData = {};\n      if (nameSpacesChains && nameSpacesChains.length > 0) {\n        var requireData = {};\n        if (isTwoSteps){\n          let includeEth = nameSpacesChains.includes(\"eip155:1\")\n          if (!includeEth){\n            alert(\"请选择ETH \");\n            return;\n          }\n        }\n\n        if (hasEip155) {\n          requireData.eip155 = {\n            chains: nameSpacesChains.filter((item) =>\n              item.startsWith(\"eip155\")\n            ),\n            defaultChain: nameSpacesChains.filter((item) =>\n              item.startsWith(\"eip155\")\n            )[0],\n          };\n        }\n        if (hasSolana) {\n          requireData.solana = {\n            chains: nameSpacesChains.filter(\n              (item) =>\n                item.startsWith(\"solana\") ||\n                item.startsWith(\"sonic\") ||\n                item.startsWith(\"svm\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n              (item) =>\n                item.startsWith(\"solana\") ||\n                item.startsWith(\"sonic\") ||\n                item.startsWith(\"svm\")\n            )[0],\n          };\n        }\n\n        if (hasCosmos) {\n          requireData.cosmos = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            )[0],\n          }\n        }\n        if (hasTron) {\n          requireData.tron = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            )[0],\n          }\n        }\n        if (hasTon) {\n\n          //\n          let tonParams = {\n            ton_addr:{\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue){\n            tonParams = {\n              ton_addr:{\n                name: 'ton_addr',\n              },\n              ton_proof:{\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          requireData.ton = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"ton\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"ton\"))[0],\n            params:tonParams\n          };\n        }\n\n        if (hasSui) {\n          requireData.sui = {\n            chains: nameSpacesChains.filter((item) => item.startsWith(\"sui\")),\n            defaultChain: nameSpacesChains.filter((item) =>\n              item.startsWith(\"sui\")\n            )[0],\n            rpcMap: {\n              \"sui:mainnet\": \"https://www.okx.com/fullnode/sui/discover/rpc\"\n            }\n          };\n        }\n        if (hasAptos) {\n          requireData.aptos = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\"))[0]\n          }\n        }\n\n        if (hasBtc) {\n          let btcChains = nameSpacesChains.filter(item => item.startsWith(\"btc\") || item.startsWith(\"fractal\"))\n          requireData.btc = {\n            chains: btcChains,\n            defaultChain: btcChains[0]\n          }\n        }\n        console.log(`requireData  ===> ${JSON.stringify(requireData)}`)\n        connectData['namespaces'] = requireData;\n        console.log(JSON.stringify(connectData))\n      }\n\n      if (optSpaceChains && optSpaceChains.length > 0) {\n        var optData = {\n          eip155: {\n            chains: optSpaceChains.filter((item) => item.startsWith(\"eip155\")),\n            defaultChain: optSpaceChains.filter((item) =>\n              item.startsWith(\"eip155\")\n            )[0],\n          },\n        };\n        connectData[\"optionalNamespaces\"] = optData;\n      }\n\n      if (nameSpacesChains.length === 0 && optSpaceChains.length === 0) {\n        //未选择链\n        alert(\"请选择一条链\");\n        return;\n      }\n      console.log(\"=====>connectData \");\n      console.log(connectData);\n\n      var connectMethod;\n\n      if (!isTwoSteps){\n        connectData.connectMethods = this.getCurrentSelectedMethodData();\n      }\n\n      if (window.provider instanceof OKXUniversalConnectUI) {\n        connectMethod = window.provider.openModal(connectData);\n      } else {\n        connectMethod = window.provider.connect(connectData);\n      }\n\n      await connectMethod\n        .then((result) => {\n          // 2. set defaul chain\n          this.walletAddress = \"connected\";\n          if (this.isPC()) {\n            this.showModal = false;\n          }\n          if (result){\n            this.testboc = JSON.stringify(result)\n          }\n          if (isTwoSteps){\n            this.sendTransactionAlert()\n          }\n\n          if (window.provider.session && window.provider.session.namespaces){\n            let ton = window.provider.session.namespaces[\"ton\"];\n          console.log(\"是否包含ton\",ton)\n            if (ton){\n              this.tonUniversalLog()\n            }\n          }\n\n\n\n        })\n        .catch((error) => {\n          console.error(\"发生了错误：\", error);\n        });\n    },\n\n    getCurrentSelectedMethodData(){// 连接签名\n      var methodList = [];\n      this.selectedMethod.forEach(method =>{\n        switch (method) {\n          case \"wallet_addEthereumChain(ETH)\":\n            methodList.push({\n              method: \"wallet_addEthereumChain\",\n              chainId:\"eip155:1\",\n              params: {\n                blockExplorerUrls: [\"https://explorer.fuse.io\"],\n                chainId: \"0x7a\",\n                chainName: \"Fuse\",\n                nativeCurrency: { name: \"Fuse\", symbol: \"FUSE\", decimals: 18 },\n                rpcUrls: [\"https://rpc.fuse.io\"],\n              },\n            })\n            break;\n          case \"personal_sign(ETH)\":\n            methodList.push(\n              {\n                method: \"personal_sign\",\n                chainId: \"eip155:1\",\n                params: [\n                  \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n                ],\n              });\n            break;\n          case \"solana_signMessage(Sol mainnet)\":\n            methodList.push(\n              {\n                \"chainId\": \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n                \"method\": \"solana_signMessage\",\n                \"params\": {\n                  \"message\": \"Hello Solana\",\n                }\n              }\n            );\n            break;\n          case \"sui_signMessage(Sui mainnet)\":\n          case \"sui_signPersonalMessage(Sui mainnet)\": {\n            let suiData = [\n              76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n              109, 111, 118, 101,\n            ];\n            let uint8Array = new Uint8Array(suiData);\n            let currentMethod = \"sui_signMessage\";\n            this.currentSuiTransaction = {\n              message:uint8Array\n            }\n\n            if(method.startsWith(\"sui_signPersonalMessage\")){\n              currentMethod = \"sui_signPersonalMessage\";\n            }\n            methodList.push(\n                {\n                  method: currentMethod,\n                  chainId: \"sui:mainnet\",\n                  params: {\n                    message: uint8Array,\n                  }\n                }\n            );\n            break;\n          }\n          case \"btc_signMessage(BTC)\":\n            methodList.push(\n              {\n                method: \"btc_signMessage\",\n                chainId: \"btc:mainnet\",\n                params: {\n                  signStr: \"Welcome to UniSat!\\n\\nClick to sign in and accept the UniSat Terms of Service (https://unisat.io/terms-of-service.html) and Privacy Policy (https://unisat.io/privacy-policy.html).\\n    \\nThis request will not trigger a blockchain transaction.\\n    \\nYour authentication status will reset after 24 hours.\\n    \\nWallet address:\\nbc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\\n    \\nNonce:\\n162d70e3-8c21-4cfd-9a22-9bf0a4b7be51\\n\"\n                }\n              }\n            )\n            break;\n          case \"aptos_signMessage(aptos mainnet)\":\n            methodList.push(\n              {\n                \"chainId\": \"aptos:mainnet\",\n                \"method\": \"aptos_signMessage\",\n                \"params\": {\n                  address: true,\n                  application: true,\n                  chainId: true,\n                  message: \"Hello Aptos\",\n                  nonce: \"1234\"\n                }\n              }\n            )\n            break;\n          case \"cosmos_signArbitrary(cosmoshub)\":\n            methodList.push(\n                {\n                  \"chainId\": \"cosmos:cosmoshub-4\",\n                  \"method\": \"cosmos_signArbitrary\",\n                  \"params\": {\n                    message: \"test cosmos\"\n                  }\n                }\n            )\n\n            break;\n          case \"test_noSupport_eth(ETH)\":\n            methodList.push(\n                {\n                  chainId: \"eip155:1\",\n                  method: \"test_noSupport_eth\",\n                  params: {\n                    message: \"测试不支持的方法\",\n                  }\n                }\n            )\n            break;\n          case \"tron_signMessage\":\n            methodList.push(\n                {\n                  chainId:\"tron:mainnet\",\n                  method: \"tron_signMessage\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n          case \"tron_signMessageV2\":\n            methodList.push(\n                {\n                  chainId:\"tron:mainnet\",\n                  method: \"tron_signMessageV2\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n            //\n          default:\n\n            break;\n        }\n      })\n      this.selectedMethodData = methodList\n      return methodList\n\n    },\n\n\n    closeModal() {\n      this.showModal = false;\n    },\n\n    isPC() {\n      const userAgentInfo = navigator.userAgent;\n      console.log(\"current device ua is ===>\", userAgentInfo);\n\n      const Agents = [\n        \"Android\",\n        \"iPhone\",\n        \"SymbianOS\",\n        \"Windows Phone\",\n        \"iPad\",\n        \"iPod\",\n      ];\n      let flag = true;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = false;\n          break;\n        }\n      }\n      return flag;\n    },\n    isSafariOrChrome() {\n      const userAgentInfo = navigator.userAgent;\n      const Agents = [\"Safari\", \"Chrome\"];\n      let flag = false;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = true;\n          break;\n        }\n      }\n      return flag;\n    },\n\n    /// solana\n    async sol_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      let data = {\n        method: \"solana_signMessage\",\n        params: {\n          message: \"Hello Solana\",\n          pubkey: \"\",\n        },\n      };\n      this.testTransaction = JSON.stringify(data);\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let message = await provider.signMessage(\n          \"Hello Solana\",\n          this.selectedChain\n      );\n      console.log(\"solana_signMessage Result:\",JSON.stringify(message))\n      const result1 = nacl.sign.detached.verify(\n          new TextEncoder().encode(\"Hello Solana\"),\n          message.signature,\n          new PublicKey(message.publicKey).toBytes()\n      );\n      console.log(result1)\n\n      if (typeof message == \"string\") {\n        this.testboc = result1;\n      } else {\n        this.testboc = result1;\n      }\n    },\n\n    async aptos_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      let data = {\n        address: true,\n        application: true,\n        chainId: true,\n        message: \"Hello Aptos\",\n        nonce: \"1234\"\n      }\n\n      let provider = new OKXAptosProvider(window.provider)\n      let message = await provider.signMessage(data, this.selectedChain)\n      this.testTransaction = JSON.stringify(data)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n          functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n          functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        },\n      });\n\n      // let data = {\n      //   \"arguments\": [\"100000\",[\"0\",\"0\",\"10533\"],[\"10\",\"5\",\"5\"],[\"false\",\"false\",\"true\"]],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x3\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\",\"0x73eb84966be67e4697fc5ae75173ca6c35089e802650f75422ab49a8729704ec::coin::DooDoo\",\"0x53a30a6e5936c0a4c5140daed34de39d17ca7fcae08f947c02e979cef98a3719::coin::LSD\",\"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::CurveV1\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x54cb0bb2c18564b86e34539b9f89cfe1186e39d89fce54e1cd007b8e61673a85::bin_steps::X80\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async sol_signVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(\n        provider.getAccount(\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\").address\n      );\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n         recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signTransaction(\n        transaction,\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAndSendVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n        transaction,\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllVersionedTransactions() {\n      let provider = new OKXSolanaProvider(window.provider);\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n        [transaction],\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signTransaction() {\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n         recentBlockhash: blockhash,\n      }).add(\n        SystemProgram.transfer({\n          fromPubkey: new PublicKey(provider.getAccount().address),\n          toPubkey: new PublicKey(provider.getAccount().address),\n          lamports: 1000,\n        })\n      );\n\n      this.testTransaction = safeJsonStringify(transaction)\n      let result = await provider.signTransaction(\n        transaction,\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllTransactions() {\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n        SystemProgram.transfer({\n          fromPubkey: new PublicKey(provider.getAccount().address),\n          toPubkey: new PublicKey(provider.getAccount().address),\n          lamports: \"100\",\n        })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n        [transaction],\n        this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    getSolConnect() {\n      let rpc = \"https://www.okx.com/fullnode/sol/discover/rpc\"\n      if (this.selectedChain === \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\") {\n        rpc = \"https://www.okx.com//fullnode/sol/discover/rpc\"\n      } else if (this.selectedChain === \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\"){\n        rpc = \"https://www.okx.com/fullnode/soltestnet/discover/rpc\"\n      } else if (this.selectedChain === \"svm:70000062\") {\n        rpc = \"https://www.okx.com/fullnode/sonic/testnet/discover/rpc\"\n      }\n      return rpc\n    },\n\n    async sol_signAndSendTransaction() {\n\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n        SystemProgram.transfer({\n          fromPubkey: new PublicKey(provider.getAccount().address),\n          toPubkey: new PublicKey(provider.getAccount().address),\n          lamports: \"100\",\n        })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n        transaction,\n        this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async cosmos_signArbitrary() {\n      let provider = new OKXCosmosProvider(window.provider)\n      let message = await provider.signArbitrary(this.selectedChain, provider.getAccount(this.selectedChain).address, \"test cosmos\")\n      if (typeof message == \"string\") {\n        this.testboc = message;\n      } else {\n        let isValid =  await this.cosmos_verifySignArbitrary(provider.getAccount(this.selectedChain).address,\"test cosmos\",message.signature, message.pub_key.value)\n        console.log(\"verify\",isValid)\n        this.testboc = \"verify:\" + isValid + JSON.stringify(message);\n      }\n    },\n\n    async cosmos_verifySignArbitrary(signer, data, signature, pubkey) {\n      try {\n        // 将bech32地址转换为公钥\n        const {prefix: prefixStr} = fromBech32(signer)\n\n        const signatureBuffer = Buffer.from(signature, 'base64');\n\n        const uint8Signature = new Uint8Array(signatureBuffer); // Convert the buffer to an Uint8Array\n\n        const pubKeyValueBuffer = Buffer.from(pubkey, 'base64'); // Decode the base64 encoded value\n\n        const pubKeyUint8Array = new Uint8Array(pubKeyValueBuffer); // Convert the buffer to an Uint8Array\n\n        // 验证签名\n        return await verifyADR36Amino(\n            prefixStr,\n            signer,\n            data,\n            pubKeyUint8Array,\n            uint8Signature\n        )\n      } catch (err) {\n        console.error('Verification failed:', err)\n        return false\n      }\n    },\n\n    async cosmos_signAmino(){\n      let provider = new OKXCosmosProvider(window.provider)\n      // const rpcUrl = 'https://osmosis-rpc.publicnode.com:443';\n      // const client = await StargateClient.connect(rpcUrl);\n      // const height = await client.getHeight();\n      // let address = provider.getAccount(this.selectedChain).address\n      // const sequence = await client.getSequence(address)\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      // let signDoc = makeSignDoc(\n      //     transaction.msgs,\n      //     transaction.fee,\n      //     this.selectedChain.split(\":\")[1],\n      //     transaction.memo,\n      //     transaction.accountNumber,\n      //     transaction.sequence,\n      // )\n      let signDoc = {\n        \"chain_id\": \"osmosis-1\",\n        \"account_number\": \"630104\",\n        \"sequence\": \"480\",\n        \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]},\n        \"msgs\": [{\n          \"type\": \"osmosis/poolmanager/swap-exact-amount-in\",\n          \"value\": {\n            \"sender\": \"osmo1u6lts9ng4etxj0zdaxsada6zgl8dudpgelmuyu\",\n            \"routes\": [{\n              \"pool_id\": \"1096\",\n              \"token_out_denom\": \"ibc/987C17B11ABC2B20019178ACE62929FE9840202CE79498E29FE8E5CB02B7C0A4\"\n            }, {\n              \"pool_id\": \"611\",\n              \"token_out_denom\": \"ibc/27394FB092D2ECCD56123C74F36E4C1F926001CEADA9CA97EA622B25F41E5EB2\"\n            }],\n            \"token_in\": {\"denom\": \"uosmo\", \"amount\": \"100\"},\n            \"token_out_min_amount\": \"8\"\n          }\n        }],\n        \"memo\": \"FE\",\n        \"timeout_height\": \"23603788\",\n        \"signOptions\": {\n          \"useOneClickTrading\": false,\n          \"preferNoSetFee\": true,\n          \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]}\n        }\n      }\n\n\n\n\n\n\n\n      // let signOption = {\n      //   memo: true, // optional\n      //   fee: true, // optional\n      //   gasRate: {\n      //     // optional\n      //     average: \"0.2\",\n      //     low: \"0.02\",\n      //     tiny: \"0.002\",\n      //   },\n      // }\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signAmino(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, signDoc)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    messageToBuffer(message) {\n      var buffer = Buffer.from([]);\n      try {\n        if (typeof message === \"string\") {\n          buffer = Buffer.from(message.replace(\"0x\", \"\"), \"hex\");\n        } else {\n          buffer = Buffer.from(message);\n        }\n      } catch (err) {\n        console.log(`messageToBuffer error: ${err}`);\n      }\n      return buffer;\n    },\n\n\n\n    async cosmos_signDirect() {\n      let provider = new OKXCosmosProvider(window.provider)\n\n      let signDoc = {\n        \"bodyBytes\": this.messageToBuffer(\"0x0ac1010a292f6962632e6170706c69636174696f6e732e7472616e736665722e76312e4d73675472616e736665721293010a087472616e7366657212096368616e6e656c2d301a0d0a05756f736d6f120431303030222b6f736d6f3175366c7473396e67346574786a307a64617873616461367a676c386475647067656c6d7579752a2d636f736d6f733175366c7473396e67346574786a307a64617873616461367a676c386475647067337967766a773207080410ebe3f90a3880b0bcafd18cec8218\"),\n        \"authInfoBytes\": this.messageToBuffer(\"0x0a510a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a2102446e19e94ac0e83ea896d2712507577eb39fbdd2d6ae9f0fc0b9759f1fbaba9012040a02080118e00312140a0e0a05756f736d6f1205323530303010859a11\"),\n        \"chainId\": \"osmosis-1\",\n        \"accountNumber\": \"630104\",\n      }\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signDirect(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, transaction)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    sui_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentSuiTransaction = params\n      this.currentSuiMethod = flag\n    },\n\n    btc_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentBtcTransaction = params\n      this.currentBtcMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n\n    fractal_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentFractalTransaction = params\n      this.currentFractalMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n    tron_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n    tron_generateTransactionParams(params){\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n    handleModalsSelect(modals) {\n      selectedModals = modals;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedDeepLink,\n            modals: modals.length === 3 ? \"all\" : modals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n\n    handleReturnStrategySelect(returnStrategy) {\n      selectedReturnStrategy = returnStrategy === \"deeplink\" ? this.deeplink : returnStrategy;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n\n    handleReturnStrategyDeeplink(deeplink) {\n      selectedReturnStrategy = deeplink;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: deeplink,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n\n    handleLanguageSelect(language) {\n      selectedLanguage = language;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: language,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n    handleConnectMethodsSelect() {\n      console.log(\"当前的方法 this.selectedMethod>>>>\",this.selectedMethod);\n    },\n\n    eth_verifyMessage(message, signature,ethAddress) {\n      console.log(\"eth_verifyMessage   message>>>\",message)\n      console.log(\"eth_verifyMessage   signature>>>\",signature)\n      console.log(\"eth_verifyMessage   ethAddress>>>\",ethAddress)\n      if (!message || !signature){\n        return \"\"\n      }\n      let originalMessage = message\n      if (message.startsWith(\"0x\")){\n        originalMessage = originalMessage.replace(/^0x/, '');\n        let str = '';\n        for (let i = 0; i < originalMessage.length; i += 2) {\n          const byte = originalMessage.slice(i, i + 2);\n          str += String.fromCharCode(parseInt(byte, 16));\n        }\n        originalMessage = str\n      }\n      console.log(\"eth_verifyMessage   originalMessage>>>\",originalMessage)\n\n      // const messageHash = ethers.utils.hashMessage(originalMessage);\n      const recoveredAddress = ethers.utils.verifyMessage(originalMessage, signature);\n      console.log(\"eth_verifyMessage recoveredAddress:\", recoveredAddress);\n      return recoveredAddress.toLowerCase() === ethAddress.toLowerCase();\n    },\n\n    async verifyMessage(){ //连接验签\n\n        if (window.provider && window.provider.session && window.provider.session.connectMethodsReply && window.provider.session.connectMethodsReply.length>0){\n          let verifyList = {}\n          for (let methodItem of window.provider.session.connectMethodsReply){\n            if (\"result\" in methodItem && \"method\" in methodItem){\n              let requestItme = this.selectedMethodData.filter(item => item.method === methodItem.method)[0];\n              console.log(\"验证签名 请求>>>:\", JSON.stringify(requestItme));\n              console.log(\"验证签名 结果>>>:\", JSON.stringify(methodItem));\n              if (methodItem.method === \"personal_sign\"){\n                let ethAddress = await window.provider.request({ method: \"eth_requestAccounts\" },methodItem.chainId)\n                ethAddress = ethAddress[0];\n                console.log(\"验证eth 钱包地址>>>:\", ethAddress);\n                let ethMessage = requestItme.params[0]\n                console.log(\"验证eth 签名消息体>>:\", JSON.stringify(ethMessage));\n                verifyList[methodItem.method] = this.eth_verifyMessage(ethMessage,methodItem.result,ethAddress)\n              }else if(methodItem.method === \"solana_signMessage\"){\n                let solanaMessage = methodItem.result\n                if (\"signature\" in solanaMessage && \"publicKey\" in solanaMessage){\n                  const verifySol = nacl.sign.detached.verify(\n                      new TextEncoder().encode(\"Hello Solana\"),\n                      solanaMessage.signature,\n                      new PublicKey(solanaMessage.publicKey).toBytes()\n                  );\n                  verifyList[methodItem.method] = verifySol\n                }else {\n                  verifyList[methodItem.method] = false\n                }\n              }else if(methodItem.method === \"sui_signPersonalMessage\" || methodItem.method === \"sui_signMessage\"){\n                let suiResult =  this.sui_verifySignature(methodItem.result);\n                  verifyList[methodItem.method] = (await suiResult).result\n              }else if(methodItem.method === \"btc_signMessage\"){\n\n                verifyList[methodItem.method] = \"Not verified yet\"\n\n              }else if(methodItem.method === \"aptos_signMessage\"){\n                let aptosMessage = methodItem.result\n                let aptosProvider = new OKXAptosProvider(window.provider)\n                let  aptosPublicKey  = aptosProvider.getAccount(methodItem.chainId)?.publicKey\n\n                let signStr = aptosMessage.signature\n                if (signStr.startsWith(\"0x\")) {\n                  signStr = signStr.slice(2, signStr.length)\n                }\n\n                console.log(\"aptos_signMessage aptosPublicKey And signStr\",aptosPublicKey,signStr)\n                verifyList[methodItem.method] = nacl.sign.detached.verify(\n                    Buffer.from(aptosMessage.fullMessage),\n                    Buffer.from(signStr, 'hex'),\n                    Buffer.from(aptosPublicKey, 'hex'),\n                );\n              }else if(methodItem.method === \"cosmos_signArbitrary\"){\n                let cosmosProvider = new OKXCosmosProvider(window.provider)\n                let cosmosAddress = cosmosProvider.getAccount(methodItem.chainId)?.address\n                let cosmosMessage = methodItem.result\n                let isValid =  await this.cosmos_verifySignArbitrary(cosmosAddress,\"test cosmos\",cosmosMessage.signature, cosmosMessage.pub_key.value)\n                verifyList[methodItem.method] = isValid\n\n              }else if (methodItem.method === \"tron_signMessage\") {\n                let tronMessage = methodItem.result\n                let tronWeb = new TronWeb({\n                  \"fullHost\": 'https://api.trongrid.io',\n                  \"headers\": {},\n                  \"privateKey\": ''\n                })\n                let provider = new OKXTronProvider(window.provider)\n                verifyList[methodItem.method] = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), tronMessage, provider.getAccount(\"tron:mainnet\").address)\n              } else if (methodItem.method === \"tron_signMessageV2\") {\n                let tronMessage = methodItem.result\n                let tronWeb = new TronWeb({\n                  \"fullHost\": 'https://api.trongrid.io',\n                  \"headers\": {},\n                  \"privateKey\": ''\n                })\n                const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", tronMessage);\n                let provider = new OKXTronProvider(window.provider)\n\n                verifyList[methodItem.method] = base58Address === provider.getAccount(\"tron:mainnet\").address\n              }\n              else {\n                verifyList[methodItem.method] = \"Not verified yet\"\n\n              }\n            }else if(\"method\" in methodItem && \"error\" in methodItem) {\n              verifyList[methodItem.method] = methodItem.error\n            }\n\n          }\n\n          console.log(\"验证签名 最后的结果>>>:\", JSON.stringify(verifyList));\n          this.testTransaction = \"签名验证结果如下: \\n\" + JSON.stringify(verifyList)\n        }else {\n          console.log(\"验证签名 window.provider.session.connectMethodsReply 为空:\");\n\n        }\n\n    },\n\n    handleThemeSelect(theme) {\n      selectedTheme = theme;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: theme,\n          },\n        };\n      }\n    },\n\n    async sui_verifySignature(signatureResult) {\n      let resultObj = signatureResult\n      let result = false\n      let msg = ''\n      try {\n        /// 获取当前account\n        const adapter = new SuiAdapter(window.provider);\n        let account = adapter.getAccount()\n        console.log(`Account中获取的address：${account.address}`)\n\n        /// 验证签名\n        let pubKey = await verifyPersonalMessageSignature(this.currentSuiTransaction.message, resultObj.signature)\n        let address = pubKey.toSuiAddress()\n        console.log(`验签结果计算得到address：${address}`)\n\n        /// 对比pubKey\n        console.log(`account pubkey: ${account.publicKey}`,)\n        console.log(`result pubkey: ${pubKey.toBase64()}`)\n        result = (account.address === address) && (account.publicKey === pubKey.toBase64())\n\n        msg = `address verify: ${account.address === address}\\npublicKey verify: ${account.publicKey === pubKey.toBase64()}`\n        console.log(\"signature verify success: \", pubKey)\n      } catch (e) {\n        console.log(\"signature verify failed: \", e)\n      }\n      return {\n        result,\n        msg\n      }\n    },\n\n  },\n  created() {\n    // for (const eventName of Object.values(OKX_TON_CONNECTION_AND_TRANSACTION_EVENT)) {\n    //   console.log(eventName);\n    //   window.addEventListener(eventName, (event) => {\n    //     console.log(eventName,event.detail)\n    //     this.currentStatus = eventName\n    //   });\n    // }\n  },\n\n  mounted() {\n\n    var scriptTag = document.createElement(\"script\");\n    scriptTag.src = \"https://telegram.org/js/telegram-web-app.js\";\n    scriptTag.id = \"tgsdk\";\n    document.getElementsByTagName('head')[0].appendChild(scriptTag);\n\n    this.connectReady = true;\n    document.title = \"OKX Connect\";\n    this.initBtnClicked()\n  },\n};\n</script>\n","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signMessage()\">signMessage(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_send()\">send(BTC)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendBitcoin()\">sendBitcoin(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signPsbt_up()\">signPsbt(上架NFT)</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"btc_signAndPushPsbt_up()\">signAndPushPsbt(上架NFT)</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在OKX App选择要上架的Btc NFT，点击【上架】\n        </li>\n        <li>\n          2. 弹出签名面板，点开高级选项，查看\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出上架流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendInscription()\">sendInscription(BTC)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Btc NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount\n    }\n  },\n  methods: {\n    btc_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to UniSat!\\n\\nClick to sign in and accept the UniSat Terms of Service (https://unisat.io/terms-of-service.html) and Privacy Policy (https://unisat.io/privacy-policy.html).\\n    \\nThis request will not trigger a blockchain transaction.\\n    \\nYour authentication status will reset after 24 hours.\\n    \\nWallet address:\\nbc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\\n    \\nNonce:\\n162d70e3-8c21-4cfd-9a22-9bf0a4b7be51\\n\"\n      };\n      this.$emit('generateTransactionParams', params, \"btc_signMessage\")\n    },\n\n    btc_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"btc_send\")\n    },\n\n    btc_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"btc_sendBitcoin\")\n    },\n\n    btc_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"btc_signPsbt\")\n    },\n\n    btc_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"btc_signAndPushPsbt\")\n    },\n\n    btc_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"btc_sendInscription\")\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./BtcTransactionPanel.vue?vue&type=template&id=17e9106e&scoped=true\"\nimport script from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./BtcTransactionPanel.vue?vue&type=style&index=0&id=17e9106e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-17e9106e\"]])\n\nexport default __exports__","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signMessage()\">signMessage(Fractal)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_send()\">send(Fractal)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_sendBitcoin()\">sendBitcoin(Fractal)</el-button>\n\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signPsbt_up()\">signPsbt(上架NFT)</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_signAndPushPsbt_up()\">signAndPushPsbt(上架NFT)</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在OKX App选择要上架的Fractal NFT，点击【上架】\n        </li>\n        <li>\n          2. 弹出签名面板，点开高级选项，查看\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出上架流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_sendInscription()\">sendInscription(Fractal)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Fractal NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount\n    }\n  },\n  methods: {\n    fractal_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to UniSat!\\n\\nClick to sign in and accept the UniSat Terms of Service (https://unisat.io/terms-of-service.html) and Privacy Policy (https://unisat.io/privacy-policy.html).\\n    \\nThis request will not trigger a blockchain transaction.\\n    \\nYour authentication status will reset after 24 hours.\\n    \\nWallet address:\\nbc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\\n    \\nNonce:\\n162d70e3-8c21-4cfd-9a22-9bf0a4b7be51\\n\"\n      };\n      this.$emit('generateTransactionParams', params, \"fractal_signMessage\")\n    },\n\n    fractal_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_send\")\n    },\n\n    fractal_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_sendBitcoin\")\n    },\n\n    fractal_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"fractal_signPsbt\")\n    },\n\n    fractal_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"fractal_signAndPushPsbt\")\n    },\n\n    fractal_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"fractal_sendInscription\")\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./FractalTransactionPanel.vue?vue&type=template&id=02b5b8a5&scoped=true\"\nimport script from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./FractalTransactionPanel.vue?vue&type=style&index=0&id=02b5b8a5&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-02b5b8a5\"]])\n\nexport default __exports__","<script>\n\nimport {getFullnodeUrl, SuiClient} from \"@mysten/sui/client\";\nimport {Transaction as SuiTransaction} from '@mysten/sui/transactions';\n\nexport default {\n  name: \"SuiTransactionPanel\",\n  methods: {\n    sui_getAccount() {\n      this.$emit('generateTransactionParams', '', \"sui_getAccount\")\n    },\n\n    //对单个交易签名（不发送)\n    async sui_signMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signMessage\")\n    },\n\n    async sui_signPersonalMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signPersonalMessage\")\n    },\n\n    sui_signTransaction2() {\n      // 定义要转移的金额和目标地址\n      const amount = 109; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    async sui_requestRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n          `sui:mainnet`,\n          `https://fullnode.mainnet.sui.io:443`\n      );\n      var data = {\n        method: \"suix_getBalance\",\n        params: [\n          \"0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae\",\n          \"0x168da5bf1f48dafc111b0a488fa454aca95e0b5e::usdc::USDC\",\n        ],\n      };\n\n      this.$emit(\"generateTransactionParams\", data, \"sui_testRpc\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 102; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signAndExecuteTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n      this.$emit(\"generateTransactionParams\", input, \"sui_signAndExecuteTransaction\")\n    },\n\n    /// generate txBytes and txSerialize\n    async generateTsBytesAndSerizlize(input) {\n      /// txBytes and txSerialize may be constructed in advance by the dapp side\n      let resultTuple = [\"\", \"\"];\n      if (\n          \"txBytes\" in input &&\n          input.txBytes.length > 0 &&\n          \"txSerialize\" in input &&\n          input.txSerialize.length > 0\n      ) {\n        resultTuple = [input.txBytes, input.txSerialize];\n      }\n\n      /// Otherwise, a transactionBlock parameter is required.\n      if (!(\"transactionBlock\" in input)) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      if (this.walletAddress != \"connected\") {\n        alert(\"请先连接钱包\");\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      let senderAccounts = window.provider.requestAccountsWithNamespace(\"sui\");\n      if (senderAccounts.length == 0) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      try {\n        let rpcUrl = getFullnodeUrl(\"mainnet\");\n        rpcUrl = \"https://www.okx.com/fullnode/sui/discover/rpc\"\n        const suiClient = new SuiClient({ url: rpcUrl });\n\n        /// sender is required\n        input.transactionBlock.setSender(senderAccounts[0]);\n        const result = await input.transactionBlock.build({\n          client: suiClient,\n        });\n        const txBytes = Buffer(result).toString(\"base64\");\n        const txSerialize = await SuiTransaction.from(txBytes).toJSON();\n        resultTuple = [txBytes, txSerialize];\n      } catch (error) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      return new Promise((resolve) => {\n        resolve(resultTuple)\n      })\n    },\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_getAccount()\">getAccount(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signMessage()\">signMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signPersonalMessage()\">signPersonalMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signTransaction2()\">signTransaction(Sui)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signAndExecuteTransaction()\">sendTransaction(Sui)</el-button>\n      <div style=\"font-size: 12px; color: gray;\">(send to Rally Tiger account)</div>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_requestRpc()\">RPC_getBalance</el-button>\n      <div style=\"font-size: 12px; color: gray;\">get USDC balance of address:</div>\n      <div style=\"font-size: 12px; color: gray\">0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae</div>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signTransaction_pre_execution()\">signTransaction(prepared data)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signAndExecuteTransaction_pre_execution()\">sendTransaction(prepared data)</el-button>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./SuiTransactionPanel.vue?vue&type=template&id=30ae15b2&scoped=true\"\nimport script from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./SuiTransactionPanel.vue?vue&type=style&index=0&id=30ae15b2&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-30ae15b2\"]])\n\nexport default __exports__","<script>\n\n\nimport {OKXTronProvider} from \"@okxconnect/universal-provider\";\nimport {TronWeb} from \"tronweb\";\n\nexport default {\n  name: \"TronTransactionPanel\",\n  methods: {\n\n    async tron_signMessage() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessage(\"tron:mainnet\", \"Hello Tron\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n\n      const verify = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), res, provider.getAccount(\"tron:mainnet\").address)\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" + res, \"tron_signMessage\")\n    },\n\n    async tron_signMessageV2() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessageV2(\"tron:mainnet\", \"Hello Tron\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", res);\n      console.log(\"tron_signMessageV2_base58Address\", base58Address)\n      console.log(\"tron_signMessageV2_address\", provider.getAccount(\"tron:mainnet\").address)\n      const verify = base58Address === provider.getAccount(\"tron:mainnet\").address\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" +  res, \"tron_signMessage\")\n    },\n\n    async tron_signTransaction(isOnlySign) {\n      let provider = new OKXTronProvider(window.provider)\n        let tronWeb = new TronWeb({\n          \"fullHost\": 'https://api.trongrid.io',\n          \"headers\": {},\n          \"privateKey\": ''\n        })\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const transaction = await tronWeb.transactionBuilder.sendTrx(\"TGBcVLMnVtvJzjPWZpPiYBgwwb7th1w3BF\", 1000, address);\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let res = await provider.signTransaction(\"tron:mainnet\", transaction)\n        this.$emit(\"generateTransactionResult\", res, \"tron_signTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(\"tron:mainnet\", transaction)\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async getContract() {\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n      \n      try {\n        const contract = await tronWeb.trx.getContract(contractAddress)\n        const abi = contract.abi.entrys;\n        console.log(\"获取到的合约：\")\n        console.log(abi)\n      } catch (error) {\n        console.log(\"Error getting contract ABI:\", error);\n      }\n    },\n    \n    async tron_signAndSendTransactionContract(isOnlySign) {\n      // this.getContract()\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n      ]\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"quote(uint256,uint256,uint256)\", {}, parameter, address);\n      console.log(\"=====>transaction: \")\n      console.log(ret);\n      this.$emit(\"generateTransactionParams\", ret.transaction)\n      if (isOnlySign) {\n        let tx = await provider.signTransaction(\"tron:mainnet\", ret.transaction)\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(\"tron:mainnet\", ret.transaction)\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async tron_signAndSendTransactionApprove(isOnlySign) {\n      let contractAddress = \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'address', value: contractAddress},\n        {type: 'uint256', value: 1000},\n      ]\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"approve(address,uint256)\", {}, parameter, address);\n\n      let transaction = ret.transaction\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let tx = await provider.signTransaction(\"tron:mainnet\", transaction)\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(\"tron:mainnet\", transaction)\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n\n    }\n\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessage()\">tron_signMessage</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessageV2()\">tron_signMessageV2</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(true)\">\n        tron_signTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(true)\">\n        tron_signTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(true)\">\n        tron_signTransaction(Approve)\n      </el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(false)\">\n        tron_signAndSendTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(false)\">\n        tron_signAndSendTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(false)\">\n        tron_signAndSendTransaction(approve)\n      </el-button>\n    </el-col>\n\n\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./TronTransactionPanel.vue?vue&type=template&id=7fdd8e4e&scoped=true\"\nimport script from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./TronTransactionPanel.vue?vue&type=style&index=0&id=7fdd8e4e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7fdd8e4e\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=da043904&scoped=true\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=da043904&scoped=true&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-da043904\"]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\nimport App from './App.vue'\n\nconst app = createApp(App)\n\napp.use(ElementPlus)\napp.mount('#app')","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkokxconnectdemo\"] = self[\"webpackChunkokxconnectdemo\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(24373); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["id","_createElementBlock","_hoisted_1","_createVNode","_component_el_container","default","_withCtx","_component_el_header","_cache","_createTextVNode","_","_component_el_main","_component_el_card","class","header","_createElementVNode","_component_el_row","_component_el_col","span","_toDisplayString","$options","getWalletAddress","_ctx","currentStatus","_component_el_checkbox","modelValue","withUI","$event","onChange","handleWithUI","style","_component_el_select","modals","placeholder","handleModalsSelect","multiple","_component_el_option","label","value","returnStrategy","handleReturnStrategySelect","_Fragment","_renderList","returnStrategies","strategy","_createBlock","key","_component_el_input","deeplink","handleReturnStrategyDeeplink","disabled","_createCommentVNode","language","handleLanguageSelect","locales","locale","theme","handleThemeSelect","THEME","LIGHT","DARK","selectedMethod","handleConnectMethodsSelect","connectMethods","item","tonProofValue","gutter","align","Object","keys","availableChains","checked","areChainsInit","name","isOptionalChecked","handleOptionChange","_component_el_button","type","onClick","initBtnClicked","icon","connectInitStr","connectBtnClicked","connectStatusStr","connectBtnAndSignClicked","connectAndSignStr","disconnectAction","walletAddress","length","disconnectStatusStr","_Teleport","to","showModal","args","closeModal","_withModifiers","_component_qrcode_vue","qrValue","size","level","_component_el_tabs","activeTab","onTabClick","clickActiveTab","_component_el_tab_pane","eth_requestAccounts","eth_chainId","wallet_switchEthereumChain","wallet_addEthereumChain","personal_sign","eth_signTypedData_v4","eth_sendTransaction_transfer","eth_sendTransaction_approve","eth_sendTransaction_mint","wallet_watchAsset","wallet_testRpc","eth_sendTransaction_swap","ton_getAccount","ton_sendTransaction","sol_signMessage","sol_signTransaction","sol_signVersionedTransaction","sol_signAllTransactions","sol_signAllVersionedTransactions","sol_signAndSendTransaction","sol_signAndSendVersionedTransaction","_component_SuiPanel","onGenerateTransactionParams","sui_generateTransactionParams","_component_BTCPanel","btc_generateTransactionParams","_component_FractalPanel","fractal_generateTransactionParams","_component_TronTransactionPanel","tron_generateTransactionParams","onGenerateTransactionResult","tron_getTransactionResult","aptos_signMessage","aptos_signTransaction","aptos_signAndSubmitTransaction","move_signTransaction","move_signAndSubmitTransaction","cosmos_signArbitrary","cosmos_signAmino","cosmos_signDirect","testBase64UrlSafe","xs","sm","testTransaction","rows","testboc","sendTransaction","testTransactionStr","btc_signMessage","$setup","sendAmount","clearable","btc_send","sendSatoshisAmount","btc_sendBitcoin","psbtHex","btc_signPsbt_up","btc_signAndPushPsbt_up","nftId","receiver","btc_sendInscription","props","msg","String","setup","ref","methods","params","from","signStr","this","$emit","alert","toAddress","satoshis","options","feeRate","autoFinalized","address","inscriptionId","__exports__","fractal_signMessage","fractal_send","fractal_sendBitcoin","fractal_signPsbt_up","fractal_signAndPushPsbt_up","fractal_sendInscription","sui_getAccount","sui_signMessage","sui_signPersonalMessage","sui_signTransaction2","sui_signAndExecuteTransaction","sui_requestRpc","sui_signTransaction_pre_execution","sui_signAndExecuteTransaction_pre_execution","data","uint8Array","Uint8Array","input","message","amount","recipientAddress","tx","SuiTransaction","coin","splitCoins","gas","transferObjects","transactionBlock","account","chain","showEffects","provider","window","setDefaultChain","method","txBytes","txSerialize","generateTsBytesAndSerizlize","resultTuple","Promise","resolve","senderAccounts","requestAccountsWithNamespace","rpcUrl","getFullnodeUrl","suiClient","SuiClient","url","setSender","result","build","client","Buffer","toString","toJSON","error","tron_signMessage","tron_signMessageV2","tron_signTransaction","tron_signAndSendTransactionContract","tron_signAndSendTransactionApprove","OKXTronProvider","res","signMessage","code","tronWeb","TronWeb","verify","trx","verifyMessage","getAccount","signMessageV2","base58Address","verifyMessageV2","console","log","isOnlySign","transaction","transactionBuilder","sendTrx","signTransaction","signAndSendTransaction","getContract","contractAddress","contract","abi","entrys","parameter","ret","triggerSmartContract","verifyADR36Amino","require","fromBech32","VConsole","allChains","optionChains","Set","selectedModals","selectedReturnStrategy","selectedDeepLink","selectedLanguage","selectedTheme","components","TronTransactionPanel","QrcodeVue","BTCPanel","FractalPanel","SuiPanel","testTopic","testPublicKey","testProofPayload","pendingDeepLink","logList","connectReady","localPubKey","localSecKey","selectedChain","ProofPayloadVerify","showVerifyRow","chainId","has","localStorage","getItem","selectedMethodData","isChecked","setItem","location","reload","delete","add","computed","selectedChains","initChains","newChains","updatedChains","assign","tab","tabName","initCall","OKXUniversalConnectUI","init","dappMetaData","actionsConfiguration","uiPreferences","OKXUniversalProvider","then","tonProvider","OKXTonProvider","onStatusChange","walletInfo","JSON","stringify","err","session","namespaces","entries","forEach","chains","push","parseInt","substring","on","uri","isPC","topic","Date","now","testTonSdk","disconnect","blockExplorerUrls","chainName","nativeCurrency","symbol","decimals","rpcUrls","accounts","request","dataETH","dataPolygon","types","EIP712Domain","Person","Mail","primaryType","domain","version","verifyingContract","wallet","contents","maxPriorityFeePerGas","maxFeePerGas","gasPrice","nonce","gasLimit","str","image","tonUniversalLog","connected","sendTransactionAlert","response","fetch","json","confirm","startsWith","sendData","parse","adapter","SuiAdapter","suiResult","currentSuiMethod","currentSuiTransaction","signAndExecuteTransaction","sui_verifySignature","signPersonalMessage","btcAdapter","OKXBtcProvider","btcResult","currentBtcMethod","currentBtcTransaction","send","signPsbt","hexToBase64","bs64Str","catch","signPsbts","psbtHexs","sendInscription","signAndPushPsbt","sendBitcoin","fractalResult","currentFractalMethod","currentFractalTransaction","OKX_CONNECT_ERROR_CODES","USER_REJECTS_ERROR","hexStr","bytes","i","substr","buffer","blob","Blob","reject","reader","FileReader","onload","e","base64Data","target","split","onerror","readAsDataURL","datatest","utf8Array","TextEncoder","encode","binary","byte","fromCharCode","firstStr","btoa","replace","showUrl","getUniversalLink","getAppWalletDeepLink","isTwoSteps","hasEip155","hasSolana","hasSui","hasBtc","hasAptos","hasTon","hasCosmos","nameSpacesChains","optSpaceChains","solanaChains","hasTron","suiChains","btcChains","filter","map","values","includes","connectMethod","connectData","requireData","includeEth","eip155","defaultChain","solana","cosmos","tron","tonParams","ton_addr","ton_proof","payload","ton","sui","rpcMap","aptos","btc","optData","getCurrentSelectedMethodData","openModal","connect","methodList","suiData","currentMethod","application","userAgentInfo","navigator","userAgent","Agents","flag","v","indexOf","isSafariOrChrome","pubkey","OKXSolanaProvider","result1","nacl","detached","signature","PublicKey","publicKey","toBytes","OKXAptosProvider","config","AptosConfig","network","Network","MAINNET","Aptos","simple","sender","function","typeArguments","functionArguments","safeJsonStringify","signAndSubmitTransaction","connection","Connection","getSolConnect","blockhash","getLatestBlockhash","versionedTransactionMessage","TransactionMessage","payerKey","recentBlockhash","instructions","SystemProgram","transfer","fromPubkey","toPubkey","lamports","compileToV0Message","VersionedTransaction","signAllTransactions","Transaction","feePayer","rpc","OKXCosmosProvider","signArbitrary","isValid","cosmos_verifySignArbitrary","pub_key","signer","prefix","prefixStr","signatureBuffer","uint8Signature","pubKeyValueBuffer","pubKeyUint8Array","signDoc","signAmino","messageToBuffer","signDirect","uiOptions","eth_verifyMessage","ethAddress","originalMessage","slice","recoveredAddress","ethers","toLowerCase","connectMethodsReply","verifyList","methodItem","requestItme","ethMessage","solanaMessage","verifySol","aptosMessage","aptosProvider","aptosPublicKey","fullMessage","cosmosProvider","cosmosAddress","cosmosMessage","tronMessage","signatureResult","resultObj","pubKey","verifyPersonalMessageSignature","toSuiAddress","toBase64","created","mounted","scriptTag","document","createElement","src","getElementsByTagName","appendChild","title","render","app","createApp","App","use","ElementPlus","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","loaded","__webpack_modules__","call","m","amdO","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","Function","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}