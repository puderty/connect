{"version":3,"file":"js/app.3a460991.js","mappings":"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","sources":["webpack://okxconnectdemo/../packages/aptos-provider/src/AptosUtils.js","webpack://okxconnectdemo/../packages/aptos-provider/src/OKXAptosProvider.js","webpack://okxconnectdemo/../packages/aptos-provider/src/index.js","webpack://okxconnectdemo/../packages/core/src/connect/commands.js","webpack://okxconnectdemo/../packages/core/src/connect/connect.js","webpack://okxconnectdemo/../packages/core/src/connect/connectionManager.js","webpack://okxconnectdemo/../packages/core/src/connect/connectionSplitPackages.js","webpack://okxconnectdemo/../packages/core/src/connect/constants.js","webpack://okxconnectdemo/../packages/core/src/connect/engine.js","webpack://okxconnectdemo/../packages/core/src/connect/index.js","webpack://okxconnectdemo/../packages/core/src/connect/jwt.js","webpack://okxconnectdemo/../packages/core/src/connect/jwtconstants.js","webpack://okxconnectdemo/../packages/core/src/connect/sessionUtils.js","webpack://okxconnectdemo/../packages/core/src/connect/storage.js","webpack://okxconnectdemo/../packages/core/src/connect/storageconstants.js","webpack://okxconnectdemo/../packages/core/src/connect/walletConnectionConstants.js","webpack://okxconnectdemo/../packages/core/src/connect/walletConnectionManager.js","webpack://okxconnectdemo/../packages/core/src/connector/appwallet-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/iconnector.js","webpack://okxconnectdemo/../packages/core/src/connector/index.js","webpack://okxconnectdemo/../packages/core/src/connector/inject-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/okxwallet-inject-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/tgwallet-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/ws-connector.js","webpack://okxconnectdemo/../packages/core/src/crypto/crypto.js","webpack://okxconnectdemo/../packages/core/src/index.js","webpack://okxconnectdemo/../packages/core/src/inject/InjectUtils.js","webpack://okxconnectdemo/../packages/core/src/inject/index.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/AptosProvider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/SolProvider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/TONProvider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/btc-provider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/eip155Provider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/index.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/sui-provider.js","webpack://okxconnectdemo/../packages/core/src/protocol/chains.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/engine.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/json-rpc.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/connect-event.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/connect-wallet.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/wallet-info.js","webpack://okxconnectdemo/../packages/core/src/protocol/constants.js","webpack://okxconnectdemo/../packages/core/src/protocol/error/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/error/okx-connect.error.js","webpack://okxconnectdemo/../packages/core/src/protocol/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/misc.js","webpack://okxconnectdemo/../packages/core/src/utils/call-for-success.js","webpack://okxconnectdemo/../packages/core/src/utils/index.js","webpack://okxconnectdemo/../packages/core/src/utils/log.js","webpack://okxconnectdemo/../packages/core/src/utils/media.js","webpack://okxconnectdemo/../packages/core/src/utils/report.js","webpack://okxconnectdemo/../packages/core/src/utils/reportconstants.js","webpack://okxconnectdemo/../packages/core/src/utils/request.js","webpack://okxconnectdemo/../packages/core/src/utils/safejson.js","webpack://okxconnectdemo/../packages/core/src/utils/stringUtils.js","webpack://okxconnectdemo/../packages/core/src/utils/tma-api.js","webpack://okxconnectdemo/../packages/core/src/utils/url.js","webpack://okxconnectdemo/../packages/core/src/utils/utils.js","webpack://okxconnectdemo/../packages/core/src/utils/web-api.js","webpack://okxconnectdemo/../packages/solana-provider/src/OKXSolanaProvider.js","webpack://okxconnectdemo/../packages/solana-provider/src/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXBtcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXCosmosProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXStarknetProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTonProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTronProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXUniversalProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/sign-client/client.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/ConnectMethodUtils.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/namespaces.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/events.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/values.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/aptos.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/btc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/cosmos.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/eip155.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcConnection.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/solana.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/starknet.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/sui.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/ton.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/tron.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/misc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/providers.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/globals.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/misc.js","webpack://okxconnectdemo/./src/App.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue?1b44","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue?e4fb","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue?aa83","webpack://okxconnectdemo/./src/components/StarknetTransactionPanel.vue","webpack://okxconnectdemo/./src/components/StarknetTransactionPanel.vue?1a06","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue?089a","webpack://okxconnectdemo/./src/App.vue?7ccd","webpack://okxconnectdemo/./src/main.js","webpack://okxconnectdemo/webpack/bootstrap","webpack://okxconnectdemo/webpack/runtime/amd options","webpack://okxconnectdemo/webpack/runtime/chunk loaded","webpack://okxconnectdemo/webpack/runtime/compat get default export","webpack://okxconnectdemo/webpack/runtime/create fake namespace object","webpack://okxconnectdemo/webpack/runtime/define property getters","webpack://okxconnectdemo/webpack/runtime/global","webpack://okxconnectdemo/webpack/runtime/hasOwnProperty shorthand","webpack://okxconnectdemo/webpack/runtime/make namespace object","webpack://okxconnectdemo/webpack/runtime/node module decorator","webpack://okxconnectdemo/webpack/runtime/jsonp chunk loading","webpack://okxconnectdemo/webpack/startup"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AptosUtils = void 0;\nclass AptosUtils {\n    static getTransaction(o) {\n        if (\"rawTransaction\" in o) {\n            let transaction = o;\n            if (\"entryFunction\" in transaction.rawTransaction.payload) {\n                let entryFunction = transaction.rawTransaction.payload.entryFunction;\n                let typeArgs = entryFunction.type_args;\n                let typeArguments = new Array();\n                typeArgs.forEach(typeTag => {\n                    typeArguments.push(typeTag.toString());\n                });\n                let realArguments = new Array();\n                this.getTypeArguments(entryFunction.args, realArguments);\n                let i = {\n                    arguments: realArguments,\n                    function: `${entryFunction.module_name.address.data ? entryFunction.module_name.address.toString() : entryFunction.module_name.address}::${entryFunction.module_name.name.identifier ? entryFunction.module_name.name.identifier : entryFunction.module_name.name}::${entryFunction.function_name.identifier ? entryFunction.function_name.identifier : entryFunction.function_name}`,\n                    type: \"entry_function_payload\",\n                    type_arguments: typeArguments\n                };\n                return this.getArguments(i);\n            }\n        }\n        return o;\n    }\n    static getTypeArguments(args, array) {\n        for (let j = 0; j < args.length; j++) {\n            let y = args[j];\n            if (\"values\" in y && y.values != null && y.values instanceof Array) {\n                let subArray = new Array();\n                array.push(subArray);\n                this.getTypeArguments(y.values, subArray);\n            }\n            else {\n                this.dealArrayElements(y, array);\n            }\n        }\n    }\n    static dealArrayElements(e, array) {\n        if (\"value\" in e && e.value != null) {\n            array.push(e.value.toString());\n        }\n        else if (\"data\" in e && e.data != null && e.data instanceof Uint8Array) {\n            return array.push(e.toString());\n        }\n        else {\n            return array.push(e.toString());\n        }\n    }\n    static getArguments(e) {\n        if (\"arguments\" in e) {\n            let t = e.arguments;\n            if (Array.isArray(t)) {\n                let r = new Array();\n                t.forEach(n => {\n                    if (n instanceof Uint8Array) {\n                        let o = new Array();\n                        n.forEach(i => {\n                            o.push(i);\n                        });\n                        r.push(o);\n                    }\n                    else\n                        r.push(n);\n                });\n                e = Object.assign(Object.assign({}, e), { arguments: r });\n            }\n        }\n        return e;\n    }\n}\nexports.AptosUtils = AptosUtils;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXAptosProvider = void 0;\nconst buffer_1 = require(\"buffer\");\nconst AptosUtils_1 = require(\"./AptosUtils\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXAptosProvider {\n    constructor(provider) {\n        this.chainsSet = new Set();\n        this.provider = provider;\n        this.getConnectedNamespace();\n    }\n    get defaultNetwork() {\n        let network = this.provider.requestDefaultChainWithNamespace(core_1.NameSpaceKeyAptos);\n        return network;\n    }\n    get currentChainId() {\n        return `aptos:${this.defaultNetwork}`;\n    }\n    getRealChainId(chainId) {\n        // if (chainId == \"aptos:mainnet\") {\n        //     return \"aptos:637\"\n        // } else if (chainId == \"movement:testnet\") {\n        //     return \"aptos:70000060\"\n        // }\n        if (chainId == null) {\n            if (this.chainsSet.size == 1) {\n                return this.currentChainId;\n            }\n            else {\n                throw new Error(\"connected to multiple aptos chains,chainId can not be null\");\n            }\n        }\n        else {\n            return chainId;\n        }\n    }\n    getConnectedNamespace() {\n        var _a, _b, _c;\n        (_c = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces) === null || _b === void 0 ? void 0 : _b['aptos']) === null || _c === void 0 ? void 0 : _c.chains.forEach(chain => {\n            this.chainsSet.add(chain);\n        });\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n        chainId = this.getRealChainId(chainId);\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['aptos']) === null || _b === void 0 ? void 0 : _b.accounts[0];\n        if (chainId != null) {\n            account = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces['aptos']) === null || _d === void 0 ? void 0 : _d.accounts.filter(function (account) {\n                return account.startsWith(chainId);\n            })[0];\n        }\n        (0, core_1.logDebug)(\"getAccount\", account);\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        console.log(\"aptos_publicKey\", (_f = (_e = this.provider.session) === null || _e === void 0 ? void 0 : _e.namespaces['aptos']) === null || _f === void 0 ? void 0 : _f.extra);\n        let extra = (_j = (_h = (_g = this.provider.session) === null || _g === void 0 ? void 0 : _g.namespaces['aptos']) === null || _h === void 0 ? void 0 : _h.extra) === null || _j === void 0 ? void 0 : _j[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n            if (publicKey != undefined && publicKey.startsWith(\"0x\")) {\n                publicKey = publicKey.substring(2);\n            }\n            console.log(\"aptos_publicKey\", publicKey);\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address,\n            publicKey: publicKey\n        };\n    }\n    signMessage(payload, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            let realChain = this.getRealChainId(chainId);\n            try {\n                let prefix = \"APTOS\";\n                let address = (_a = this.getAccount(realChain)) === null || _a === void 0 ? void 0 : _a.address;\n                let message = \"\", nonce = \"\";\n                var fullMessage = prefix;\n                let application = window.location.protocol + \"//\" + window.location.hostname;\n                if (\"address\" in payload && payload.address) {\n                    fullMessage += \"\\naddress: \" + address;\n                }\n                if (\"application\" in payload && payload.application) {\n                    fullMessage += \"\\napplication: \" + application;\n                }\n                if (\"chainId\" in payload && payload.chainId) {\n                    let chainId = 1;\n                    if (realChain == \"aptos:mainnet\") {\n                        chainId = 1;\n                    }\n                    else if (realChain == \"movement:testnet\") {\n                        chainId = 2;\n                    }\n                    fullMessage += \"\\nchainId: \" + chainId;\n                }\n                if (\"message\" in payload) {\n                    fullMessage += \"\\nmessage: \" + payload.message;\n                    message = payload.message;\n                }\n                if (\"nonce\" in payload) {\n                    fullMessage += \"\\nnonce: \" + payload.nonce;\n                    nonce = payload.nonce;\n                }\n                console.log(\"signMessage\", fullMessage);\n                const buffer = buffer_1.Buffer.from(fullMessage);\n                const hex = this.bufferToHex(buffer);\n                let data = {\n                    \"chainId\": realChain,\n                    \"method\": \"aptos_signMessage\",\n                    \"params\": {\n                        \"message\": hex,\n                    },\n                    injectParams: payload,\n                };\n                let signedMessage = yield this.provider.request(data, realChain);\n                if ('result' in signedMessage) {\n                    let successData = signedMessage.result;\n                    let signStr = successData;\n                    if (successData.startsWith(\"0x\")) {\n                        signStr = successData.slice(2, successData.length);\n                    }\n                    // try {\n                    //     let publicKey = this.getAccount(realChain)?.publicKey\n                    //     if (publicKey != undefined) {\n                    //         console.log(\"apt_signMessage\", Buffer.from(successData, 'hex'))\n                    //         console.log(\"apt_signMessage\", successData)\n                    //\n                    //         const verified = nacl.sign.detached.verify(\n                    //             Buffer.from(fullMessage),\n                    //             Buffer.from(signStr, 'hex'),\n                    //             Buffer.from(publicKey, 'hex'),\n                    //         );\n                    //         console.log(\"signMessage\", verified);\n                    //     }\n                    // } catch (_) {\n                    // }\n                    return new Promise((resolve, reject) => {\n                        resolve({\n                            address: address,\n                            application: application,\n                            chainId: realChain,\n                            fullMessage: fullMessage,\n                            message: message,\n                            nonce: nonce,\n                            prefix: prefix,\n                            signature: signStr,\n                            // verified:verified\n                        });\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        if (\"error\" in signedMessage) {\n                            resolve(signedMessage.error);\n                        }\n                    });\n                }\n            }\n            catch (error) {\n                console.error('方法数据回调失败 --Error--', error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    signTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let tx = AptosUtils_1.AptosUtils.getTransaction(transaction);\n            console.log(\"signTransaction\", tx);\n            let realChain = this.getRealChainId(chainId);\n            try {\n                let signature = yield this.provider.request({\n                    \"method\": \"aptos_signTransaction\",\n                    \"params\": tx\n                }, realChain);\n                if ('result' in signature) {\n                    let successData = signature.result;\n                    return new Promise((resolve, reject) => {\n                        resolve(buffer_1.Buffer.from(successData));\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        reject(signature);\n                    });\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"getSignedTransaction\", error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    signAndSubmitTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let tx = AptosUtils_1.AptosUtils.getTransaction(transaction);\n            console.log(\"signAndSubmitTransaction\", tx);\n            let realChain = this.getRealChainId(chainId);\n            try {\n                let signature = yield this.provider.request({\n                    \"method\": \"aptos_signAndSubmitTransaction\",\n                    \"params\": tx\n                }, realChain);\n                if ('result' in signature) {\n                    let successData = signature.result;\n                    return new Promise((resolve, reject) => {\n                        resolve(successData);\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        reject(signature);\n                    });\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"getSignedTransaction\", error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    bufferToHex(buf) {\n        return \"0x\" + buffer_1.Buffer.from(buf).toString(\"hex\");\n    }\n}\nexports.OKXAptosProvider = OKXAptosProvider;\nexports.default = OKXAptosProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXAptosProvider = void 0;\nvar OKXAptosProvider_1 = require(\"./OKXAptosProvider\");\nObject.defineProperty(exports, \"OKXAptosProvider\", { enumerable: true, get: function () { return OKXAptosProvider_1.OKXAptosProvider; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_METHOD_BATCH_FETCHMSG = exports.CONNECT_METHOD_FETCHMSG = exports.CONNECT_METHOD_RECEIVE = exports.CONNECT_METHOD_UNSUB = exports.CONNECT_METHOD_SUB = exports.CONNECT_METHOD_PUBLISH = exports.CONNECT_METHOD_LOGIN = exports.CONNECT_METHOD_PUSH = void 0;\n// --------------- ws methods -------------\nexports.CONNECT_METHOD_PUSH = \"push\";\nexports.CONNECT_METHOD_LOGIN = \"login\";\nexports.CONNECT_METHOD_PUBLISH = \"publish\";\nexports.CONNECT_METHOD_SUB = \"subscribe\";\nexports.CONNECT_METHOD_UNSUB = \"unsubscribe\";\nexports.CONNECT_METHOD_RECEIVE = \"receive\";\nexports.CONNECT_METHOD_FETCHMSG = \"fetchMessages\";\nexports.CONNECT_METHOD_BATCH_FETCHMSG = \"batchFetchMessages\";\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXWalletConnector = void 0;\nconst constants_1 = require(\"./constants\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils\");\nconst utils_2 = require(\"../utils/utils\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst log = __importStar(require(\"../utils/log\"));\nconst protocol_1 = require(\"../protocol\");\nconst report_1 = require(\"../utils/report\");\nconst WS = (0, utils_2.resolveWebSocketImplementation)();\nclass OKXWalletConnector {\n    constructor(url) {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.state = constants_1.ConnectorState.InitState;\n        this.selectedUrlIndex = 0;\n        // reconnect\n        this.retryCount = 0;\n        // default timeout limit: 8 sec\n        this.timeOutLimit = 8000;\n        if (!(0, utils_2.checkWSUrl)(url)) {\n            throw new Error(`CONNECTOR: invalid url ${url}`);\n        }\n        this.url = url;\n        this.heartbeatTimer = null;\n        this.connectionTimeoutTimer = null;\n        this.connectURLStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY + storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n    }\n    get connecting() {\n        return this.state == constants_1.ConnectorState.Connecting;\n    }\n    // ------------------------------------------------------\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        log.logDebug('get received data');\n        log.logDebug(e);\n        if (typeof e.data === \"string\") {\n            let rsp = e.data;\n            if (rsp === \"pong\") {\n                log.logDebug(`CONNECT: receive pong ${Date.now().toString()}`);\n                return;\n            }\n        }\n        this.events.emit(\"payload\", e.data);\n    }\n    onClose(event) {\n        var _a;\n        log.logDebug('socket get closed: ', (_a = this.socket) === null || _a === void 0 ? void 0 : _a.url, event.code);\n        this.socket = undefined;\n        this.events.emit(\"close\", event);\n    }\n    onError(id, e) {\n        const payload = { id: id, msg: e.toString() };\n        this.events.emit(\"payload\", payload);\n    }\n    onopen(socket) {\n        socket.onmessage = (event) => this.onPayload(event);\n        socket.onclose = (event) => this.onClose(event);\n        this.socket = socket;\n        this.state = constants_1.ConnectorState.Connected;\n        this.events.emit(\"open\");\n    }\n    // ------------------------------------------------------\n    emitError(errorEvent) {\n        this.events.emit(\"fail\", errorEvent);\n    }\n    // ------------------------------------------------------\n    heartbeat() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.heartbeatTimer) {\n                clearTimeout(this.heartbeatTimer);\n            }\n            if (this.state != constants_1.ConnectorState.Connected && this.state != constants_1.ConnectorState.OnError) {\n                log.logDebug('heart beat close');\n                return;\n            }\n            if (!this.socket) {\n                log.logDebug('socket not exist');\n                if (this.state == constants_1.ConnectorState.Connected || this.state == constants_1.ConnectorState.OnError) {\n                    log.logDebug('socket reconnect by heartbeat');\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                        this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n                    }\n                }\n                return;\n            }\n            if (this.socket.readyState !== WebSocket.OPEN) {\n                log.logDebug('socket not ready');\n                if (this.state == constants_1.ConnectorState.Connected || this.state == constants_1.ConnectorState.OnError) {\n                    log.logDebug('socket reconnect by heartbeat with state', this.state, this.socket.readyState);\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                        this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n                    }\n                }\n                return;\n            }\n            log.logDebug(`send ping heart beat: ${Date.now().toString()}, ${this.socket}`);\n            this.socket.send(\"ping\");\n            this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n        });\n    }\n    registOpen(url = this.url, inRetry = false) {\n        if (!(0, utils_2.checkWSUrl)(url)) {\n            throw new Error(`CONNECTOR: invalid url ${url}`);\n        }\n        this.url = url;\n        if (!inRetry) {\n            log.logDebug('Connection connect:', this.url, new Date().toUTCString());\n        }\n        this.state = constants_1.ConnectorState.Connecting;\n        const origin = new URLSearchParams(url).get(\"origin\");\n        return new Promise((resolve, reject) => {\n            const socket = new WS(url, []);\n            log.logDebug('Connection connect Begin:', this.url, new Date().toUTCString());\n            this.startTimeOutTimer(socket);\n            if ((0, utils_2.hasBuiltInWebSocket)()) {\n                log.logDebug('Add socket error handler');\n                socket.onerror = () => {\n                    reject(new Error('socket error'));\n                    socket.close();\n                };\n            }\n            else {\n                log.logDebug('Add socket error handler');\n                socket.on(\"error\", () => {\n                    reject(new Error('socket error'));\n                    socket.close();\n                });\n            }\n            socket.onopen = () => {\n                log.logDebug('socket opened');\n                this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.FINISHED);\n                this.onopen(socket);\n                this.heartbeat();\n                resolve(socket);\n            };\n        });\n    }\n    checkMaxRetry() {\n        log.logDebug('current retry count:', this.retryCount, 'of', constants_1.OKXCONNECTOR_WS_URL_LIST.length);\n        return this.retryCount > (constants_1.OKXCONNECTOR_WS_URL_LIST.length * 3);\n    }\n    connectionTryNext() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.checkMaxRetry()) {\n                //TODO: mark descent\n                this.retryCount += 1;\n                let nextUrl = this.getNextSelectUrl();\n                log.logDebug('Connection retry:', nextUrl, new Date().toUTCString());\n                return this.registOpen(nextUrl, true);\n            }\n            else {\n                log.logDebug('Max Connection retry ', this.retryCount, new Date().toUTCString());\n            }\n        });\n    }\n    startTimeOutTimer(socket) {\n        if (this.connectionTimeoutTimer) {\n            this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.CANCELED);\n        }\n        this.pendingSocket = socket;\n        this.connectionTimeoutTimer = setTimeout(() => {\n            if (this.pendingSocket) {\n                this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.TIME_OUT);\n            }\n        }, this.timeOutLimit);\n    }\n    resetTimeOutTimer(code) {\n        var _a;\n        // 1. cancel connecting pending sockets\n        if (code == constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.TIME_OUT) {\n            // 2. remove timer\n            clearTimeout(this.connectionTimeoutTimer);\n            (_a = this.pendingSocket) === null || _a === void 0 ? void 0 : _a.close();\n            this.pendingSocket = undefined;\n            log.reportEvent(report_1.OKXReportType.LOG, 'timeout', this.retryCount.toString());\n            throw new Error('socket timeout');\n        }\n        else {\n            this.pendingSocket = undefined;\n            // 2. remove timer\n            clearTimeout(this.connectionTimeoutTimer);\n        }\n    }\n    cacheSuccessUrlSelect() {\n        this.connectURLStorage.saveContent(this.selectedUrlIndex.toString(), storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n    }\n    // private getSuccessUrlSelect(): string {\n    //     let selectIndex = this.connectURLStorage.getItem(OKXCONNECTOR_CACHE_KEY)?.content\n    //     let index = 0\n    //     if (selectIndex) {\n    //         index = Number(selectIndex)\n    //     }\n    //     this.selectedUrlIndex = index\n    //     return OKXCONNECTOR_WS_URL_LIST[index]\n    // }\n    getNextSelectUrl() {\n        this.selectedUrlIndex += 1;\n        this.selectedUrlIndex = this.selectedUrlIndex % constants_1.OKXCONNECTOR_WS_URL_LIST.length;\n        return constants_1.OKXCONNECTOR_WS_URL_LIST[this.selectedUrlIndex];\n    }\n    // ------------------------------------------------------\n    onVisibleChanged() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (document.visibilityState === 'visible') {\n                // check and restore\n                log.logDebug(`get changed ${this.state}, ${this.socket}`);\n                if (this.state == constants_1.ConnectorState.Connected && typeof this.socket === \"undefined\") {\n                    log.logDebug('CONNECTION need reopen');\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                    }\n                    return;\n                }\n            }\n        });\n    }\n    tryRegistOpen() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (this.connecting) {\n                log.logDebug('tryRegistOpen => connecting state');\n                return new Promise((resolve, reject) => {\n                    this.events.once('fail', (e) => {\n                        log.logDebug('tryRegistOpen => connecting fail listener', e);\n                        return reject(e);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.socket == \"undefined\") {\n                            return reject(new Error(\"Connect lost\"));\n                        }\n                        return resolve(this.socket);\n                    });\n                });\n            }\n            log.logDebug('tryRegistOpen => try registOpen until retry limit is hit');\n            let inRetry = false;\n            while (!this.checkMaxRetry() && !this.socket) {\n                try {\n                    log.logDebug('tryRegistOpen => call registOpen, try count:', this.retryCount, inRetry);\n                    yield this.registOpen(url, inRetry);\n                }\n                catch (err) {\n                    log.logDebug('tryRegistOpen => registOpen failed', err);\n                    this.retryCount += 1;\n                    url = this.getNextSelectUrl();\n                    inRetry = true;\n                }\n            }\n            log.logDebug('tryRegistOpen => exit while loop', this.retryCount, this.socket);\n            if (!this.socket && this.checkMaxRetry()) {\n                log.logDebug('tryRegistOpen => failed to open a socket', this.retryCount, this.socket);\n                this.retryCount = 0;\n                this.state = constants_1.ConnectorState.OnError;\n                this.emitError(new Error('tryRegistOpen failed'));\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CONNECTION_ERROR, \"Failed to connect\");\n            }\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.tryRegistOpen();\n                // listener for reconnect\n                document.removeEventListener('visibilitychange', this.onVisibleChanged.bind(this));\n                document.addEventListener('visibilitychange', this.onVisibleChanged.bind(this));\n            }\n            catch (e) {\n                log.logDebug('connect => failed to connect', e);\n                throw e;\n            }\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.state = constants_1.ConnectorState.Disconnected;\n            return new Promise((resolve, reject) => {\n                if (typeof this.socket === \"undefined\") {\n                    // reject(new Error(\"CONNECTION closed\"))\n                    resolve();\n                    return;\n                }\n                this.socket.onclose = (event) => {\n                    this.onClose(event);\n                    resolve();\n                };\n                this.socket.close();\n                if (this.heartbeatTimer) {\n                    clearTimeout(this.heartbeatTimer);\n                }\n            });\n        });\n    }\n    currentStatus() {\n        return {\n            state: this.state,\n            url: this.url\n        };\n    }\n    // event will be jsonstr\n    /// @params Promise\n    /// @params success/failed callback\n    addListener(event, decrypt, success, failed, splitCheckComplete) {\n        if (this.listenPayloadHandler) {\n            this.events.removeListener(\"payload\", this.listenPayloadHandler);\n        }\n        this.listenPayloadHandler = (e) => __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            log.logDebug(`<<< get payload ${e}`);\n            let parsedEvent = (0, utils_1.safeJsonParse)(e);\n            // parse the data to chose success or failed\n            if (parsedEvent.params && parsedEvent.params.data) {\n                let rawMsg = (_a = parsedEvent.params.data) === null || _a === void 0 ? void 0 : _a.message;\n                let skipMsg = false;\n                if (rawMsg) {\n                    // 在这里增加检测流程，如果当前包是“分包”，而且没有finalMessage则不继续触发failed/success结果\n                    if (splitCheckComplete) {\n                        let checkResult = yield splitCheckComplete(parsedEvent.params.data);\n                        skipMsg = checkResult.isSplitPackage && (!checkResult.finalMessage);\n                        if (checkResult.isSplitPackage) {\n                            if (checkResult.finalMessage && checkResult.finalMessage.length > 0) {\n                                log.logDebug('CONNECT: update raw msg content');\n                                rawMsg = checkResult.finalMessage;\n                            }\n                            else {\n                                log.logDebug('CONNECT: skip raw msg content');\n                                skipMsg = true;\n                            }\n                        }\n                    }\n                }\n                if (!skipMsg) {\n                    try {\n                        let msg = decrypt(rawMsg);\n                        if (msg === undefined) {\n                            log.logDebug(`CONNECT: decrypt undefined`);\n                            failed(event, 'Decrypt undefined');\n                        }\n                        else {\n                            success(event, msg);\n                        }\n                    }\n                    catch (e) {\n                        log.logDebug(`CONNECT: decrypt failed: ${e}`);\n                        failed(event, e.message);\n                    }\n                }\n            }\n        });\n        this.events.on(\"payload\", this.listenPayloadHandler);\n        if (this.failHandler) {\n            this.events.removeListener(\"fail\", this.failHandler);\n        }\n        this.failHandler = (e) => {\n            if (e) {\n                log.logDebug(`CONNECT failed: ${e}`);\n                failed(event, e.message);\n            }\n            else {\n                failed(event, \"Unkonow error\");\n            }\n        };\n        this.events.on(\"fail\", this.failHandler);\n    }\n    addPackageParse(callback) {\n        if (this.payloadHandler) {\n            this.events.removeListener(\"payload\", this.payloadHandler);\n        }\n        this.payloadHandler = (e) => __awaiter(this, void 0, void 0, function* () {\n            // parse the data to chose success or failed\n            log.logDebug(`CONNECTION @[${new Date().toUTCString()}] <<<< received e:${e}`);\n            let param = (0, utils_1.safeJsonParse)(e);\n            yield callback(param);\n        });\n        this.events.on(\"payload\", this.payloadHandler);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    send(doLogin, payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (typeof this.socket === \"undefined\") {\n                    log.logDebug(`>>> send payload undefined ${payload}`);\n                    // this.socket = await this.registOpen();\n                    yield doLogin();\n                }\n                log.logDebug(`CONNECTION @[${new Date().toUTCString()}]>>> send payload ${(0, utils_1.safeJsonStringify)(payload)}`);\n                if (this.socket) {\n                    this.socket.send((0, utils_1.safeJsonStringify)(payload));\n                }\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    getMsgPayloadFromHistory(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof msg === \"undefined\")\n                return;\n            let tmpMsg = {\n                params: {\n                    data: msg\n                }\n            };\n            let jsonstr = (0, utils_1.safeJsonStringify)(msg);\n            log.logDebug('get received data from history');\n            log.logDebug(jsonstr);\n            jsonstr = (0, utils_1.safeJsonStringify)(tmpMsg);\n            this.events.emit(\"payload\", jsonstr);\n        });\n    }\n    onOpen(callback) {\n        if (this.openHandler) {\n            this.events.removeListener(\"open\", this.openHandler);\n        }\n        this.openHandler = () => __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> ws opened: `);\n            yield callback();\n        });\n        this.events.on(\"open\", this.openHandler);\n        this.cacheSuccessUrlSelect();\n    }\n}\nexports.OKXWalletConnector = OKXWalletConnector;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionManager = void 0;\nconst connect_1 = require(\"./connect\");\nconst commands_1 = require(\"./commands\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst jwtconstants_1 = require(\"./jwtconstants\");\nconst constants_1 = require(\"./constants\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils/utils\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst jwt_1 = require(\"./jwt\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst report_1 = require(\"../utils/report\");\nconst url_1 = require(\"../utils/url\");\nconst connectionSplitPackages_1 = require(\"./connectionSplitPackages\");\nclass ConnectionManager {\n    constructor(appname = undefined) {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.splitManager = new connectionSplitPackages_1.ConnectionSplitPackages('dapp');\n        // local storage\n        this.connectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY_DAPP + appname, storageconstants_1.OKXCONNECTOR_CACHE_KEY_DAPP);\n        this.crypto = new crypto_1.SessionCrypto();\n        let inTMA = (0, url_1.isInTMA)();\n        (0, log_1.logDebug)('do init:', inTMA);\n        log.reportLog('connection manager do init');\n        if (inTMA) {\n            // recovery from cache\n            try {\n                const keyPairInfo = this.getCachedCryptoKeyPair();\n                (0, log_1.logDebug)('use same pk:', keyPairInfo);\n                this.crypto = new crypto_1.SessionCrypto(keyPairInfo);\n            }\n            catch (error) {\n                this.connectStorage.clearCache();\n                log.reportEvent(report_1.OKXReportType.LOG, 'cache_fail', 'cache failed');\n            }\n        }\n        this.jwtKeyPair = this.getCachedJWTKeyPair();\n        this.saveJWTKeyPair(this.jwtKeyPair);\n        // wss connection\n        this.connector = new connect_1.OKXWalletConnector(constants_1.OKXCONNECTOR_WS_URL_1);\n        this.packageId = Date.now();\n        // connection state\n        this.connectedWalletPK = '';\n        this.currentTopic = '';\n        log.logDebug(`this.connectedWalletPK  constructor   ${this.connectedWalletPK}`);\n    }\n    refreshPackageId() {\n        let nowDate = Date.now();\n        if (nowDate == this.packageId) {\n            this.packageId = nowDate + 1;\n        }\n        this.packageId = nowDate;\n    }\n    saveCryptoKeyPair(keyPair) {\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(keyPair);\n        // encrypt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_CRYPTO_KEY);\n    }\n    getCachedCryptoKeyPair() {\n        // decrypt kp\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_CRYPTO_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            log.logDebug('get cached crypto key:');\n            log.logDebug(content);\n            let keyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            return keyPairInfo;\n        }\n        else {\n            this.connectStorage.clearCache();\n            return null;\n        }\n    }\n    saveJWTKeyPair(keyPair) {\n        var strkeyPair = {\n            publicKey: (0, utils_1.toHexString)(keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(keyPair.secretKey)\n        };\n        log.logDebug('save jwt kp');\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(strkeyPair);\n        log.logDebug(cacheInfo);\n        // encrypt jwt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_JWT_KEY);\n    }\n    getCachedJWTKeyPair() {\n        try {\n            const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_JWT_KEY);\n            const content = kp;\n            if (typeof content == 'string') {\n                // TODO: decrypt jwt kp\n                log.logDebug('get cached jwt kp:');\n                log.logDebug(content);\n                let strKeyPairInfo = (0, safejson_1.safeJsonParse)(content);\n                log.logDebug('save jwt kp');\n                log.logDebug(strKeyPairInfo);\n                var keyPair = {\n                    publicKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.publicKey),\n                    secretKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.secretKey)\n                };\n                return keyPair;\n            }\n            else {\n                return (0, jwt_1.generateKeyPair)();\n            }\n        }\n        catch (error) {\n            log.reportEvent(report_1.OKXReportType.LOG, 'cache_fail', 'cache failed');\n            return (0, jwt_1.generateKeyPair)();\n        }\n    }\n    isWalletPKReady() {\n        log.logDebug(`isWalletPKReady  ===> ${this.connectedWalletPK}`);\n        return this.connectedWalletPK.length > 0;\n    }\n    makeJWT(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, jwt_1.signJWT)(topic, jwtconstants_1.OKXCONNECTOR_JWT_SIDE, jwtconstants_1.OKXCONNECTOR_JWT_TTL, // 24h\n            this.jwtKeyPair);\n        });\n    }\n    parsePackage(input_1) {\n        return __awaiter(this, arguments, void 0, function* (input, ignoreACK = false) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o;\n            this.events.emit(input.id, input);\n            // send back ACK\n            if (!ignoreACK) {\n                yield this.sendACK(input.id, true);\n                let topic = (_a = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE)) === null || _a === void 0 ? void 0 : _a.content;\n                if (topic) {\n                    let inputObj = input;\n                    if ((_c = (_b = inputObj.params) === null || _b === void 0 ? void 0 : _b.data) === null || _c === void 0 ? void 0 : _c.messageId) {\n                        // change into split check receive\n                        let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload((_e = (_d = inputObj.params) === null || _d === void 0 ? void 0 : _d.data) === null || _e === void 0 ? void 0 : _e.message);\n                        if (msgPlayloadObject) {\n                            let msgObject = {\n                                topicId: (_g = (_f = inputObj.params) === null || _f === void 0 ? void 0 : _f.data) === null || _g === void 0 ? void 0 : _g.topic,\n                                messageId: (_j = (_h = inputObj.params) === null || _h === void 0 ? void 0 : _h.data) === null || _j === void 0 ? void 0 : _j.messageId,\n                                messageObject: msgPlayloadObject,\n                                publishedAt: (_l = (_k = inputObj.params) === null || _k === void 0 ? void 0 : _k.data) === null || _l === void 0 ? void 0 : _l.publishedAt,\n                            };\n                            let checkResult = yield this.splitManager.onReceivedPackageCheck(msgObject);\n                            if (checkResult.completeMessageIdList) {\n                                checkResult.completeMessageIdList.forEach((msgId) => __awaiter(this, void 0, void 0, function* () {\n                                    // 发送receive\n                                    this.refreshPackageId();\n                                    yield this.sendReceive(this.packageId.toString(), msgId, topic);\n                                }));\n                            }\n                        }\n                        else {\n                            this.refreshPackageId();\n                            yield this.sendReceive(this.packageId.toString(), (_o = (_m = inputObj.params) === null || _m === void 0 ? void 0 : _m.data) === null || _o === void 0 ? void 0 : _o.messageId, topic);\n                        }\n                    }\n                }\n            }\n        });\n    }\n    restoreConnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.reportLog('connection manager restore connection');\n            log.logDebug(`connectionManager  restoreConenct   ${topic}`);\n            if ((typeof topic !== 'string') || topic.length === 0) {\n                throw new Error('CONNECTION: invalid topic');\n            }\n            log.logDebug(`connectionManager  restoreConenct   disconnect`);\n            yield this.disconnect(true);\n            this.connectStorage.saveContent(topic, storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`connectionManager  restoreConenct   conect`);\n            yield this.connect(true);\n        });\n    }\n    getConnectInfo() {\n        var topic = (0, utils_1.generateTopic)();\n        log.logDebug(`generate topic token: ${topic}`);\n        log.reportLog('connection manager generate connection info');\n        this.currentTopic = topic;\n        const info = {\n            channelId: topic,\n            clientId: this.crypto.stringifyKeypair().publicKey,\n        };\n        return info;\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            this.timeLog = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---enter->\", this.timeLog);\n            log.reportLog('connection manager begin connect');\n            let lastConnectId = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            //1. generate topic & jwt\n            var topic = this.currentTopic;\n            log.logDebug(`generate topic token: ${topic}`);\n            // crypto keypair\n            if (fromRestore) {\n                if (typeof lastConnectId !== 'undefined' && lastConnectId !== null) {\n                    log.logDebug(`read last connect id: ${lastConnectId}`);\n                    topic = lastConnectId.content;\n                }\n                var cachedSenderPublicKey = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                if (cachedSenderPublicKey) {\n                    this.connectedWalletPK = cachedSenderPublicKey.content;\n                    (0, log_1.logDebug)(`connectionManager connect() this.connectedWalletPK : ${this.connectedWalletPK}`);\n                }\n                log.reportLog('connection manager do restore connection');\n            }\n            if (fromRestore) {\n                // recovery from cache\n                try {\n                    const keyPairInfo = this.getCachedCryptoKeyPair();\n                    if (keyPairInfo) {\n                        this.crypto = new crypto_1.SessionCrypto(keyPairInfo);\n                    }\n                }\n                catch (error) {\n                    log.logError('get crypto key pair from cache failed');\n                    log.reportEvent(report_1.OKXReportType.LOG, 'cache_fail', 'cache failed');\n                    this.connectStorage.clearCache();\n                    throw new Error('crypto cache failed');\n                }\n            }\n            log.logDebug(`use crypto client id: ${this.crypto.stringifyKeypair().publicKey}`);\n            // cache topic\n            this.connectStorage.saveContent(topic, storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            var jwtToken = yield this.makeJWT(topic);\n            log.logDebug(`generate jwt token: ${jwtToken}`);\n            this.connectStorage.saveContent(jwtToken, 'jwt');\n            return new Promise((resolve, reject) => {\n                // 1. when websocket opened\n                this.connector.onOpen(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug(`1. connector on open`);\n                    log.reportLog('1. connect ws open');\n                    const timeOne = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---open->\", timeOne - this.timeLog);\n                    //2. send jwt to login\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when login');\n                            log.reportLog('2. connect login failed');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // throw error\n                            reject(error);\n                        }\n                        //3. send subscribe\n                        this.refreshPackageId();\n                        this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                            // ack\n                            if (rsp && rsp.error) {\n                                log.logError('failed when subscribe');\n                                log.reportLog('3. connect subscribe failed');\n                                yield this.connector.disconnect();\n                                var error = new Error();\n                                error.message = rsp.error.message;\n                                error.name = rsp.error.code.toString();\n                                // throw error\n                                reject(error);\n                            }\n                            this.refreshPackageId();\n                            log.logDebug(`4. subscribe callback then send fetch: ${this.packageId}`);\n                            log.reportLog('4. subscribe callback then send fetch');\n                            const timeF = new Date().getTime();\n                            (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n                            // 4. fetch messages\n                            yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                            // 5. split init\n                            log.logDebug(`5. splitmanager init: ${this.packageId}`);\n                            log.reportLog('5. splitmanager init');\n                            yield this.splitManager.init(this.sendRaw.bind(this));\n                            resolve();\n                        }));\n                        log.logDebug(`3. login callback then send subscribe: ${this.packageId}`);\n                        log.reportLog('3. connect subscribe failed');\n                        const timeTh = new Date().getTime();\n                        (0, log_1.logDebug)(\"ConnectTime---login callback->\", timeTh - this.timeLog);\n                        yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                            log.logDebug('CONNECT: reconnect before send');\n                            yield this.connector.connect()\n                                .catch((err) => {\n                                (0, log_1.logDebug)('ConnectionManager connect error', err);\n                                reject(err);\n                            });\n                        }), {\n                            id: this.packageId.toString(),\n                            jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                            method: commands_1.CONNECT_METHOD_SUB,\n                            params: {\n                                topic: topic\n                            }\n                        });\n                    }));\n                    log.logDebug(`2. login called`);\n                    log.reportLog('2. connection manager connect call login');\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        yield this.connector.connect()\n                            .catch((err) => {\n                            (0, log_1.logDebug)('ConnectionManager connect error', err);\n                            reject(err);\n                        });\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_LOGIN,\n                        params: {\n                            token: jwtToken\n                        }\n                    });\n                    // 4. listen when dapp back to front, receive wallet public key\n                    this.connector.addPackageParse((event) => {\n                        var _a;\n                        log.logDebug(`connect: parse package`);\n                        log.logDebug(event);\n                        if (!(\"params\" in event) || !(\"data\" in event[\"params\"])) {\n                            this.parsePackage(event, true);\n                            return;\n                        }\n                        let rawMsg = (_a = event.params.data) === null || _a === void 0 ? void 0 : _a.message;\n                        if (typeof rawMsg !== 'undefined') {\n                            rawMsg = rawMsg.replace(/'/g, '\"');\n                            let parsedMessage = (0, safejson_1.safeJsonParse)(rawMsg);\n                            if (typeof parsedMessage !== 'string' && \"clientId\" in parsedMessage && parsedMessage.clientId && parsedMessage.clientId.length > 0) {\n                                this.connectedWalletPK = parsedMessage.clientId;\n                                log.logDebug(`this.connectedWalletPK  addPackageParse   ${this.connectedWalletPK}`);\n                                // exchange sender public key\n                                // cache wallet public key\n                                this.connectStorage.saveContent(this.connectedWalletPK, storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                                // cache crypto keypair\n                                this.saveCryptoKeyPair(this.crypto.stringifyKeypair());\n                            }\n                        }\n                        // ignore receive echo\n                        this.parsePackage(event, event.method === commands_1.CONNECT_METHOD_RECEIVE);\n                    });\n                }));\n                this.connector.connect().catch((err) => {\n                    (0, log_1.logDebug)('ConnectionManager connect error', err);\n                    reject(err);\n                });\n            });\n        });\n    }\n    disconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            yield this.connector.disconnect();\n            log.reportLog('connect disconnect');\n            //clean cached topic\n            //如果是恢复连接，就不清理解密public key\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            if (!fromRestore) {\n                this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                this.connectedWalletPK = '';\n                (0, log_1.logDebug)(`connectionManager disconnect() this.connectedWalletPK : ${this.connectedWalletPK}`);\n            }\n        });\n    }\n    updateProtocolVersion(topic, protocolVersion) {\n        this.splitManager.updateTopicSenderVersion(topic, protocolVersion);\n    }\n    addListener(event, success, fail) {\n        this.connector.addListener((0, safejson_1.safeJsonStringify)(event), (rawMsg) => {\n            rawMsg = rawMsg.replace(/'/g, '\"');\n            log.logDebug(`addListener ===> ${rawMsg}`);\n            if (typeof rawMsg !== 'undefined') {\n                var msgObj = (0, safejson_1.safeJsonParse)(rawMsg);\n                var msg = msgObj.message;\n                let result;\n                if (msg.trimStart().startsWith('{')) {\n                    result = msg;\n                }\n                else {\n                    if (msgObj.clientId && msgObj.clientId.length > 0) {\n                        this.connectedWalletPK = msgObj.clientId;\n                        this.connectStorage.saveContent(this.connectedWalletPK, storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                        log.logDebug(`this.connectedWalletPK  addListener   ${this.connectedWalletPK}`);\n                        log.logDebug(`this.cryptoKey  addListener   ${(0, utils_1.toHexString)(this.crypto.keyPair.publicKey)}`);\n                        // cache crypto keypair\n                        this.saveCryptoKeyPair(this.crypto.stringifyKeypair());\n                    }\n                    result = this.crypto.decrypt(msg, this.connectedWalletPK);\n                }\n                log.logDebug(`addListener ===> ${result}`);\n                return result;\n            }\n            return undefined;\n        }, success, fail, (inputDataObj) => {\n            // 判断获取是否是分包，如果是则返回合包结果，如果不是则继续\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(inputDataObj.message);\n                if (msgPlayloadObject) {\n                    let msgObject = {\n                        topicId: inputDataObj.topic,\n                        messageId: inputDataObj === null || inputDataObj === void 0 ? void 0 : inputDataObj.messageId,\n                        messageObject: msgPlayloadObject,\n                        publishedAt: inputDataObj === null || inputDataObj === void 0 ? void 0 : inputDataObj.publishedAt,\n                    };\n                    let msgResult = yield this.splitManager.onReceivedPackageCheck(msgObject);\n                    resolve(msgResult);\n                }\n                else {\n                    resolve({\n                        isSplitPackage: false,\n                    });\n                }\n            }));\n        });\n    }\n    sendRaw(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`message send =====> ${msg}`);\n            log.reportLog('connect send raw msg');\n            let message = msg;\n            log.logDebug(`message send =====encrypt message.length>>>> ${message.length}`);\n            // only one topic\n            let topic = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`message send =====topic>>>> ${topic === null || topic === void 0 ? void 0 : topic.content}`);\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                method: commands_1.CONNECT_METHOD_PUBLISH,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                params: {\n                    message: {\n                        topic: topic === null || topic === void 0 ? void 0 : topic.content,\n                        message: message,\n                        ttl: constants_1.OKXCONNECTOR_MESSAGE_TTL\n                    }\n                } // crypted\n            };\n            this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                // ack\n                if (rsp && rsp.error) {\n                    log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                }\n                else if (rsp && !rsp.error) {\n                    log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                }\n            }));\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n            return this.packageId;\n        });\n    }\n    sendEncryptedMsg(topic_1, encryptedMsg_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, encryptedMsg, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL) {\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                method: commands_1.CONNECT_METHOD_PUBLISH,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                params: {\n                    message: {\n                        topic: topic,\n                        message: encryptedMsg,\n                        ttl: ttl\n                    }\n                } // crypted\n            };\n            this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                // ack\n                if (rsp && rsp.error) {\n                    log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                }\n                else if (rsp && !rsp.error) {\n                    log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                }\n            }));\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    send(msg_1) {\n        return __awaiter(this, arguments, void 0, function* (msg, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL) {\n            // make send msg payload\n            log.logDebug(`message send =====> ${msg}`);\n            log.reportLog('connect send msg');\n            if (!this.isWalletPKReady()) {\n                // channel not ready\n                throw new Error('connection not finish');\n            }\n            let message = this.crypto.encrypt(msg, this.connectedWalletPK);\n            log.logDebug(`message send =====encrypt message.length>>>> ${message.length}`);\n            log.reportEvent(report_1.OKXReportType.LOG, 'msg_size', message.length.toString());\n            // only one topic\n            let topic = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`message send =====topic>>>> ${topic === null || topic === void 0 ? void 0 : topic.content}`);\n            // before send message check split\n            yield this.splitManager.sendSplitPackages(topic === null || topic === void 0 ? void 0 : topic.content, message, this.sendEncryptedMsg.bind(this), this.sendRaw.bind(this));\n            // await this.sendEncryptedMsg(topic?.content, message, ttl)\n            // this.refreshPackageId()\n            // const payload : ConnectPayloadReq = {\n            //    id : this.packageId.toString(),\n            //    method: CONNECT_METHOD_PUBLISH,\n            //    jsonrpc: CONNECT_JSONRPC_VER,\n            //    params: {\n            //       message: {\n            //          topic: topic?.content,\n            //          message: message,\n            //          ttl: ttl\n            //       }\n            //    } // crypted\n            // }\n            // this.events.once(this.packageId.toString(), async (rsp:ConnectPayloadRsp)=>{\n            //    // ack\n            //    if (rsp && rsp.error) {\n            //       log.logError(`@${new Date().toUTCString()} >>> failed when send msg`)\n            //    } else if ( rsp && !rsp.error) {\n            //       log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`)\n            //    }\n            // })\n            // await this.connector.send(async ()=>{\n            //    log.logDebug('CONNECT: reconnect before send')\n            //    return await this.connector.connect();\n            // }, payload)\n            return this.packageId;\n        });\n    }\n    sendACK(msgId_1, success_1) {\n        return __awaiter(this, arguments, void 0, function* (msgId, success, reason = undefined) {\n            if (success === true) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    result: true\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n            else if (reason) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    error: {\n                        code: reason.code, //int\n                        message: reason.message\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    // send receive\n    sendReceive(msgId, messageId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECEIVE,\n                params: {\n                    data: {\n                        messageId: messageId,\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    // send receive\n    // 1. fetch all \n    // 2. send back receive\n    // 3. check has more, if so, repeat from 1st step\n    sendFetchAndConsumeMessages(msgId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(msgId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic == topic) {\n                                let messageId = msg.messageId;\n                                log.reportLog('5. get fetch result');\n                                // fetch result receive control\n                                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(msg.message);\n                                if (msgPlayloadObject) {\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                    log.logDebug('skip receive');\n                                }\n                                else {\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                    // send receive command to relay server\n                                    this.refreshPackageId();\n                                    yield this.sendReceive(this.packageId.toString(), messageId, topic);\n                                }\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            log.reportLog('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_FETCHMSG,\n                params: {\n                    data: {\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    cleanCache() {\n        log.reportLog('connection cache clean called');\n        this.connectStorage.clearCache();\n    }\n    saveSessionContent(key, data) {\n        if (!data) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(data);\n        this.connectStorage.encryptStoreMsg(jsonData, storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n    }\n    getSessionContent(key) {\n        try {\n            let jsonStr = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n            if (jsonStr) {\n                let object = (0, safejson_1.safeJsonParse)(jsonStr);\n                return object;\n            }\n        }\n        catch (error) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        return undefined;\n    }\n    getCurrentConnectionReady() {\n        let cryptoKeyReady = false;\n        try {\n            const cryptoKeyPair = this.getCachedCryptoKeyPair();\n            if (cryptoKeyPair) {\n                cryptoKeyReady = true;\n            }\n        }\n        catch (error) {\n            log.logError('check connection ready failed');\n        }\n        return this.isWalletPKReady() && cryptoKeyReady;\n    }\n    getCryptoKeyEnable() {\n        let cryptoKeyReady = false;\n        try {\n            const cryptoKeyPair = this.getCachedCryptoKeyPair();\n            if (cryptoKeyPair) {\n                cryptoKeyReady = true;\n            }\n        }\n        catch (error) {\n            log.logError('check connection ready failed');\n        }\n        return cryptoKeyReady;\n    }\n}\nexports.ConnectionManager = ConnectionManager;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionSplitPackages = void 0;\nconst storageconstants_1 = require(\"./storageconstants\");\nconst localforage_1 = __importDefault(require(\"localforage\"));\nconst utils_1 = require(\"../utils/utils\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst ConnectionSplitSupportedVersionLimit = 2;\nconst ConnectionSplitSupportedSizeLimit = 63000;\n// test\n//  const ConnectionSplitSupportedSizeLimit = 500\nconst ConnectionReceiveKey = 'ConnectionReceiveKey';\nconst ConnectionSendKey = 'ConnectionSendKey';\nconst ConnectionTopicVersionKey = 'ConnectionSenderVersionKey';\nclass ConnectionSplitPackages {\n    constructor(side) {\n        // 发送队列, 保存分片数据，需要断点续传发送，\n        this.splitMessageSendArray = new Map();\n        // 接收队列, 保存回包数据，需要冗余去重复\n        this.splitMessageReceivedArray = new Map();\n        // sender 版本校验缓存\n        this.splitMessageSenderVersionMap = new Map();\n        this.splitPackageCache = localforage_1.default.createInstance({\n            name: storageconstants_1.OKXCONNECTOR_STORAGE_PROTOCOL_CACHE + side\n        });\n    }\n    init(sendRawMsg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // 1. 恢复缓存\n            yield this.recoverFromCache();\n            //2. 缓存中发送队列重发\n            if (this.splitMessageSendArray.size > 0) {\n                for (const [topic, payloadList] of this.splitMessageSendArray.entries()) {\n                    for (let i = 0; i < payloadList.length;) {\n                        const payload = payloadList[i];\n                        try {\n                            // 尝试发送消息\n                            yield sendRawMsg((0, safejson_1.safeJsonStringify)(payload), topic);\n                            log.logDebug(`Successfully sent payload: ${(0, safejson_1.safeJsonStringify)(payload)} to topic: ${topic}`);\n                            // 成功后移除元素\n                            payloadList.splice(i, 1);\n                        }\n                        catch (error) {\n                            log.logError(`Failed to send payload: ${(0, safejson_1.safeJsonStringify)(payload)} to topic: ${topic}`, error);\n                            // 重试逻辑（最多重试 3 次）\n                            payload.retryCount = (payload.retryCount || 0) + 1;\n                            if (payload.retryCount > 3) {\n                                log.logError(`Payload failed after 3 retries: ${(0, safejson_1.safeJsonStringify)(payload)}`);\n                                payloadList.splice(i, 1); // 放弃重试，移除元素\n                            }\n                            else {\n                                i++; // 跳过当前元素，继续处理下一个\n                            }\n                        }\n                    }\n                }\n                yield this.syncCache();\n            }\n        });\n    }\n    tryParseMessageSplitPayload(message) {\n        var _a;\n        let result = undefined;\n        try {\n            if (message.trimStart().startsWith('{')) {\n                let messageObj = (0, safejson_1.safeJsonParse)(message);\n                if (messageObj\n                    && messageObj.protocol_version\n                    && messageObj.protocol_version >= 2) {\n                    let protocolMessageObject = messageObj;\n                    if (protocolMessageObject.package_group_id && ((_a = protocolMessageObject.package_group_id) === null || _a === void 0 ? void 0 : _a.length) > 0) {\n                        result = messageObj;\n                    }\n                }\n            }\n            else {\n                (0, log_1.logDebug)('not split packages');\n            }\n        }\n        catch (error) {\n            (0, log_1.logDebug)('not split packages');\n        }\n        return result;\n    }\n    updateTopicSenderVersion(topic, protocolVersion) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.splitMessageSenderVersionMap.set(topic, protocolVersion);\n            yield this.syncCache();\n            (0, log_1.logDebug)('get update topic sender version: ', topic, protocolVersion);\n        });\n    }\n    /**\n     * topic\n     * message 待发送的消息体\n     * sendMsg 正常发送消息的方法\n     * sendRawMsg 发送明文格式，即拆包消息的方法\n    */\n    sendSplitPackages(topic, message, sendMsg, sendRawMsg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // 1. 长度校验拆分子包\n            // 2. 确认连接协议最大支持版本\n            // 3. 分包缓存\n            // 4. 缓存包发送\n            // 5. ACK确认并清理缓存\n            if (!topic) {\n                log.logError('sendSplitPackages invalid topic');\n                return;\n            }\n            let senderVersion = this.splitMessageSenderVersionMap.get(topic);\n            let msgLength = message.length;\n            try {\n                if (msgLength < ConnectionSplitSupportedSizeLimit) {\n                    throw new Error(`no need to split (size:${msgLength})`);\n                }\n                if (!senderVersion || (senderVersion && senderVersion < ConnectionSplitSupportedVersionLimit)) {\n                    throw new Error(`version not support split (version: ${senderVersion})`);\n                }\n                const msg_parts = [];\n                let msg_part_length = ConnectionSplitSupportedSizeLimit;\n                for (let i = 0; i < message.length; i += msg_part_length) {\n                    if (i + msg_part_length < message.length) {\n                        msg_parts.push(message.slice(i, i + msg_part_length));\n                    }\n                    else {\n                        msg_parts.push(message.slice(i));\n                    }\n                }\n                let groupId = (0, utils_1.generateGroupId)();\n                let splitMessagePackages = msg_parts.map((msg, index) => {\n                    // make msg split parts\n                    let msgObj = {\n                        topicId: topic,\n                        protocol_version: ConnectionSplitSupportedVersionLimit,\n                        total_count: msg_parts.length,\n                        package_index: index,\n                        package_group_id: groupId,\n                        content: msg\n                    };\n                    return msgObj;\n                });\n                // save cache\n                this.mergePackageArray(true, splitMessagePackages);\n                // try send out\n                for (let i = 0; i < splitMessagePackages.length;) {\n                    const msgObj = splitMessagePackages[i];\n                    const payload = (0, safejson_1.safeJsonStringify)(msgObj);\n                    try {\n                        // 尝试发送消息\n                        yield sendRawMsg(payload, topic);\n                        log.logDebug(`Successfully sent payload: ${payload} to topic: ${topic}`);\n                        // 成功后移除元素\n                        splitMessagePackages.splice(i, 1);\n                    }\n                    catch (error) {\n                        log.logError(`Failed to send payload: ${payload} to topic: ${topic}`, error);\n                        // 重试逻辑（最多重试 3 次）\n                        msgObj.retryCount = (msgObj.retryCount || 0) + 1;\n                        if (msgObj.retryCount > 3) {\n                            log.logError(`Payload failed after 3 retries: ${payload}`);\n                            splitMessagePackages.splice(i, 1); // 放弃重试，移除元素\n                        }\n                        else {\n                            i++; // 跳过当前元素，继续处理下一个\n                        }\n                    }\n                }\n                // clean cache\n                this.splitMessageSendArray.set(topic, []);\n                yield this.syncCache();\n            }\n            catch (e) {\n                (0, log_1.logDebug)('send split packages no split');\n                (0, log_1.logDebug)(e);\n                yield sendMsg(topic, message);\n            }\n        });\n    }\n    onReceivedPackageCheck(payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // 1. merge 进入缓存\n            this.mergePackageArray(false, [payload]);\n            let completeMap = new Map();\n            let inputTopic = payload.topicId;\n            // 2. 返回检查结果,输出完整message结果\n            this.splitMessageReceivedArray.forEach((itemList, topic) => {\n                if (topic == payload.topicId) {\n                    itemList.forEach((item) => {\n                        if (item.messageObject.package_group_id) {\n                            let messageCache = completeMap.get(item.messageObject.package_group_id);\n                            if (!messageCache) {\n                                messageCache = new Array();\n                            }\n                            messageCache.push(item);\n                            completeMap.set(item.messageObject.package_group_id, messageCache);\n                        }\n                    });\n                }\n            });\n            (0, log_1.logDebug)('on received message, check message cache');\n            let checkResult = {\n                isSplitPackage: false,\n                // finalMessage: undefined,\n                // completeMessageIdList: undefined \n            };\n            if (payload.messageObject.package_group_id) {\n                checkResult.isSplitPackage = true;\n                let messageCache = completeMap.get(payload.messageObject.package_group_id);\n                // 判断是否收齐\n                if (messageCache === null || messageCache === void 0 ? void 0 : messageCache.length) {\n                    let index_check = new Set();\n                    messageCache.forEach((item) => {\n                        if (item.messageObject.package_index !== undefined) {\n                            index_check.add(item.messageObject.package_index);\n                        }\n                    });\n                    if (index_check.size == payload.messageObject.total_count) {\n                        // 满足条件，更新checkResult\n                        messageCache.sort((a, b) => {\n                            if ((a.messageObject.package_index || a.messageObject.package_index === 0)\n                                && (b.messageObject.package_index || b.messageObject.package_index === 0)) {\n                                return a.messageObject.package_index - b.messageObject.package_index;\n                            }\n                            else {\n                                return 0;\n                            }\n                        });\n                        let messageList = messageCache.reduce((msgList, item) => {\n                            msgList.push(item.messageObject.content);\n                            return msgList;\n                        }, []);\n                        let messageIdList = messageCache.reduce((msgIdList, item) => {\n                            msgIdList.push(item.messageId);\n                            return msgIdList;\n                        }, []);\n                        checkResult.isSplitPackage = true;\n                        checkResult.finalMessage = messageList.join('');\n                        checkResult.completeMessageIdList = messageIdList;\n                        // 清理缓存\n                        let receivedList = this.splitMessageReceivedArray.get(inputTopic);\n                        if (receivedList) {\n                            receivedList = receivedList.filter((item) => {\n                                return !messageIdList.includes(item.messageId);\n                            });\n                            this.splitMessageReceivedArray.set(inputTopic, receivedList);\n                        }\n                        yield this.syncCache();\n                    }\n                }\n            }\n            // 抛出，交给manager来发送receive\n            return checkResult;\n        });\n    }\n    /* -------------------------- */\n    /** private methods */\n    /* -------------------------- */\n    mergePackageArray(isSending, inputPayloadArray) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('append sending array');\n            if (isSending) {\n                let inputSendArray = inputPayloadArray;\n                let filtedArray = inputSendArray.filter((payload) => {\n                    let inputTopic = payload.topicId;\n                    let accept = true;\n                    let sendCacheArray = this.splitMessageSendArray.get(inputTopic);\n                    sendCacheArray === null || sendCacheArray === void 0 ? void 0 : sendCacheArray.forEach((cachedPayload) => {\n                        if (cachedPayload.package_group_id == payload.package_group_id\n                            && cachedPayload.total_count == payload.total_count\n                            && cachedPayload.package_index == payload.package_index) {\n                            accept = false;\n                        }\n                    });\n                    return accept;\n                });\n                if (filtedArray.length > 0) {\n                    let inputTopic = filtedArray[0].topicId;\n                    let sendArray = this.splitMessageSendArray.get(inputTopic);\n                    if (!sendArray) {\n                        sendArray = new Array();\n                    }\n                    sendArray = sendArray.concat(filtedArray);\n                    this.splitMessageSendArray.set(inputTopic, sendArray);\n                    (0, log_1.logDebug)('append sending array (after filted): ', sendArray);\n                }\n            }\n            else {\n                let inputReceiveArray = inputPayloadArray;\n                let filtedArray = inputReceiveArray.filter((payload) => {\n                    let inputTopic = payload.topicId;\n                    let accept = true;\n                    let receiveCacheArray = this.splitMessageReceivedArray.get(inputTopic);\n                    receiveCacheArray === null || receiveCacheArray === void 0 ? void 0 : receiveCacheArray.forEach((cachedPayload) => {\n                        if (cachedPayload.messageId == payload.messageId) {\n                            accept = false;\n                        }\n                    });\n                    return accept;\n                });\n                if (filtedArray.length > 0) {\n                    let inputTopic = filtedArray[0].topicId;\n                    let receiveArray = this.splitMessageReceivedArray.get(inputTopic);\n                    if (!receiveArray) {\n                        receiveArray = new Array();\n                    }\n                    receiveArray = receiveArray.concat(filtedArray);\n                    this.splitMessageReceivedArray.set(inputTopic, receiveArray);\n                    (0, log_1.logDebug)('append received array (after filted): ', receiveArray);\n                }\n            }\n        });\n    }\n    syncCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('sync split message cache');\n            yield this.splitPackageCache.setItem(ConnectionReceiveKey, this.splitMessageReceivedArray);\n            yield this.splitPackageCache.setItem(ConnectionSendKey, this.splitMessageSendArray);\n            yield this.splitPackageCache.setItem(ConnectionTopicVersionKey, this.splitMessageSenderVersionMap);\n        });\n    }\n    recoverFromCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // rec\n            let rec_array = yield this.splitPackageCache.getItem(ConnectionReceiveKey);\n            if (rec_array) {\n                this.splitMessageReceivedArray = rec_array;\n            }\n            else {\n                this.splitMessageReceivedArray = new Map();\n            }\n            //send\n            let send_array = yield this.splitPackageCache.getItem(ConnectionSendKey);\n            if (send_array) {\n                this.splitMessageSendArray = send_array;\n            }\n            else {\n                this.splitMessageSendArray = new Map();\n            }\n            // topic/version cach\n            let topic = yield this.splitPackageCache.getItem(ConnectionTopicVersionKey);\n            if (topic) {\n                this.splitMessageSenderVersionMap = topic;\n            }\n            else {\n                this.splitMessageSenderVersionMap = new Map();\n            }\n        });\n    }\n}\nexports.ConnectionSplitPackages = ConnectionSplitPackages;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectorState = exports.CONNECT_PROTOCOL_VER = exports.CONNECT_JSONRPC_VER = exports.OKXCONNECTOR_MESSAGE_TTL = exports.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE = exports.OKXCONNECTOR_WS_URL_LIST = exports.OKXCONNECTOR_WS_URL_IDX_KEY = exports.OKXCONNECTOR_WS_URL_3 = exports.OKXCONNECTOR_WS_URL_2 = exports.OKXCONNECTOR_WS_URL_1 = exports.EVENT_EMITTER_MAX_LISTENERS = exports.OKXCONNECTOR_PROTOCOL_VERSION = void 0;\nexports.OKXCONNECTOR_PROTOCOL_VERSION = 2;\nexports.EVENT_EMITTER_MAX_LISTENERS = 10;\nexports.OKXCONNECTOR_WS_URL_1 = \"wss://wsdexpri.okx.com/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_2 = \"wss://wsdexpri.okx.ac/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_3 = \"wss://wsdexpri.coinall.ltd/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_IDX_KEY = \"wuik\";\nexports.OKXCONNECTOR_WS_URL_LIST = [\n    exports.OKXCONNECTOR_WS_URL_1,\n    exports.OKXCONNECTOR_WS_URL_2,\n    exports.OKXCONNECTOR_WS_URL_3,\n];\nexports.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE = {\n    TIME_OUT: 3990,\n    CANCELED: 3991,\n    FINISHED: 3992,\n};\nexports.OKXCONNECTOR_MESSAGE_TTL = 300000;\n// --------------- JSON RPC ---------------\nexports.CONNECT_JSONRPC_VER = \"2.0\";\n// --------------- Protocol Version -------\nexports.CONNECT_PROTOCOL_VER = 2;\nexports.ConnectorState = {\n    InitState: 0,\n    Connecting: 1,\n    Connected: 2,\n    Disconnected: 3,\n    OnError: 4,\n};\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Engine = void 0;\nconst protocol_1 = require(\"../protocol\");\nconst constants_1 = require(\"./constants\");\nconst utils_1 = require(\"../utils\");\nconst iconnector_1 = require(\"../connector/iconnector\");\nconst connectionManager_1 = require(\"./connectionManager\");\nconst sessionUtils_1 = require(\"./sessionUtils\");\nconst wallet_info_1 = require(\"../protocol/connect/wallet-info\");\nclass Engine {\n    constructor(appName) {\n        this.connectors = [];\n        this.useConnector = undefined;\n        this.connectionManager = new connectionManager_1.ConnectionManager(appName);\n        this.addConnectionListener();\n    }\n    getConnector() {\n        if (this.useConnector) {\n            return this.useConnector;\n        }\n    }\n    setAccountChangeListener(accountChangeListener) {\n        this.accountChangeListener = accountChangeListener;\n        (0, utils_1.logDebug)(\"setAccountChangeListener: engine\", accountChangeListener);\n        for (const connector of this.connectors) {\n            connector.setAccountChangeListener(accountChangeListener);\n        }\n    }\n    registerConnector(connectors) {\n        this.connectors = connectors;\n        for (const connector of connectors) {\n            connector.setConnectionManager(this.connectionManager);\n        }\n    }\n    hasWsConnector() {\n        for (const connector of this.connectors) {\n            if (this.isWsConnector(connector)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    isWsConnector(connector) {\n        if (!connector)\n            return false;\n        return (connector.getTag() === iconnector_1.OKX_TG_WALLET\n            || connector.getTag() === iconnector_1.OKX_APP_WALLET);\n    }\n    isInjectedConnector(connector) {\n        if (!connector)\n            return false;\n        return connector.getTag() === iconnector_1.OKX_INJECT_WALLET;\n    }\n    universalConnect(request, sessionConfig, connectInfoAndUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.addConnectionListener();\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b, _c, _d;\n                try {\n                    (0, utils_1.logDebug)(\"engine universalConnect request :\", JSON.stringify(request));\n                    (0, utils_1.logDebug)(\"engine universalConnect sessionConfig :\", JSON.stringify(sessionConfig));\n                    let universalRequest = [];\n                    request.forEach((item) => {\n                        let name = item.name;\n                        if (name.startsWith(\"requestAccounts\") || name.startsWith(\"ton\")) {\n                            universalRequest.push(item);\n                        }\n                    });\n                    (0, utils_1.logDebug)(\"engine universalConnect universalRequest :\", JSON.stringify(universalRequest));\n                    const connectInfo = this.connectionManager.getConnectInfo();\n                    const requestId = Date.now().toString();\n                    let openUniversalLink = (_a = sessionConfig.openUniversalUrl) !== null && _a !== void 0 ? _a : false;\n                    const universalConnectRequest = {\n                        protocolVer: Number(protocol_1.tonConnectSdkVersion),\n                        topic: connectInfo.channelId,\n                        clientId: connectInfo.clientId,\n                        requestId: requestId,\n                        dAppInfo: sessionConfig.dappInfo,\n                        requests: universalRequest,\n                        redirect: (_b = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _b !== void 0 ? _b : \"none\"\n                    };\n                    const base64Encoded = (0, utils_1.encodeConnectParams)(universalConnectRequest);\n                    universalConnectRequest.redirect = (_c = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _c !== void 0 ? _c : \"none\";\n                    (0, utils_1.logDebug)('engine universalConnect ==>>universalConnectRequest:', JSON.stringify(universalConnectRequest));\n                    var openOKXLink = \"\";\n                    // open app wallet\n                    if (openUniversalLink) {\n                        openOKXLink = (0, utils_1.getOKXLink)(universalConnectRequest, sessionConfig.useMini, sessionConfig.tmaReturnUrl);\n                        (0, utils_1.logDebug)('engine universalConnect ==>>openOKXLink:', openOKXLink);\n                    }\n                    const openMethod = () => {\n                        if (this.connectors.length == 1 && this.connectors[0].getTag() === iconnector_1.OKX_INJECT_WALLET) {\n                            return this.connectors[0].openWallet({\n                                connectRequest: universalConnectRequest\n                            });\n                        }\n                        else {\n                            if (sessionConfig.useMini) {\n                                return (0, utils_1.openOKXTMAWalletlinkWithFallback)(openOKXLink);\n                            }\n                            if ((0, utils_1.useShortLink)()) {\n                                return (0, utils_1.openOKXUniversalLink)(openOKXLink);\n                            }\n                            return (0, utils_1.openOKXDeeplinkWithFallback)(openOKXLink);\n                        }\n                    };\n                    (0, utils_1.logDebug)('engine universalConnect ==>>openOKXLink:', openOKXLink);\n                    const isIOS = (0, utils_1.isIos)();\n                    if (isIOS && openUniversalLink) {\n                        (0, utils_1.logDebug)(`engine universalConnect ==>>isIOS: ${isIOS}   openUniversalLink: ${openUniversalLink}`);\n                        openMethod();\n                    }\n                    this.addOnConnectResultListener((response) => {\n                        var _a, _b, _c, _d;\n                        try {\n                            this.addOnConnectResultListener(undefined);\n                            let connectResponse = response;\n                            if (connectResponse.method == \"connect\") {\n                                (0, utils_1.logDebug)(\"engin  universalConnect success connectResponse:>>>\", JSON.stringify(connectResponse));\n                                let namespaces = (0, sessionUtils_1.buildNameSpacesByConnectResponse)(connectResponse);\n                                if (namespaces) {\n                                    let walletName = undefined;\n                                    if (((_b = (_a = connectResponse.payload) === null || _a === void 0 ? void 0 : _a.responses) === null || _b === void 0 ? void 0 : _b[0]) && \"walletName\" in connectResponse.payload.responses[0]) {\n                                        walletName = connectResponse.payload.responses[0]['walletName'];\n                                    }\n                                    let appName = (_c = connectResponse.payload) === null || _c === void 0 ? void 0 : _c.wallet.appName;\n                                    var tag;\n                                    switch (appName) {\n                                        case wallet_info_1.OKXWalletName:\n                                            tag = iconnector_1.OKX_APP_WALLET;\n                                            break;\n                                        case wallet_info_1.OKXMiniWalletName:\n                                            tag = iconnector_1.OKX_TG_WALLET;\n                                            break;\n                                        case wallet_info_1.OKXInjectWalletName:\n                                            tag = iconnector_1.OKX_INJECT_WALLET;\n                                            break;\n                                    }\n                                    var connector = this.connectors.find((connector) => connector.getTag() === tag);\n                                    if (!connector) {\n                                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n                                    }\n                                    let session = Object.assign({ topic: connectInfo.channelId, sessionConfig: sessionConfig, namespaces: namespaces }, (connectResponse.payload && {\n                                        wallet: Object.assign(Object.assign({}, connectResponse.payload.wallet), { walletName: walletName })\n                                    }));\n                                    let methodsResponse = connectResponse.payload.responses.find(item => item.name === 'requestAccounts');\n                                    if (methodsResponse && methodsResponse.connectRequestMethods) {\n                                        session.signResponse = methodsResponse.connectRequestMethods;\n                                    }\n                                    (0, utils_1.logDebug)(\"engin  universalConnect success session:>>>\", JSON.stringify(session));\n                                    if (this.isWsConnector(connector)) {\n                                        (0, utils_1.logDebug)(\"engine update protocol version\");\n                                        this.connectionManager.updateProtocolVersion(connectInfo.channelId, connectResponse.payload.wallet.maxProtocolVersion);\n                                    }\n                                    resolve(session);\n                                    this.setUseConnector(connector);\n                                }\n                                else {\n                                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n                                }\n                            }\n                            else if (connectResponse.method == \"connect_error\" && ((_d = connectResponse.payload) === null || _d === void 0 ? void 0 : _d.code) != undefined) {\n                                throw new protocol_1.OKXConnectError(connectResponse.payload.code);\n                            }\n                        }\n                        catch (e) {\n                            reject(e);\n                        }\n                    });\n                    if (this.hasWsConnector()) {\n                        yield ((_d = this.connectionManager) === null || _d === void 0 ? void 0 : _d.disconnect(false));\n                        try {\n                            yield this.connectionManager.connect();\n                        }\n                        catch (e) {\n                            (0, utils_1.logDebug)('Engine universalConnect error', e);\n                            throw e;\n                        }\n                        (0, utils_1.logDebug)('engin  universalConnect ==>> connectInfoAndUrl:', connectInfoAndUrl);\n                        this.sendSession(base64Encoded);\n                    }\n                    if (!isIOS && openUniversalLink) {\n                        openMethod();\n                    }\n                    (0, utils_1.logDebug)('engin  universalConnect ==>> connectInfoAndUrl:', connectInfoAndUrl);\n                    if (connectInfoAndUrl) {\n                        const info = {\n                            connectRequest: universalConnectRequest,\n                            redirect: sessionConfig.redirect,\n                            tmaReturnUrl: sessionConfig.tmaReturnUrl,\n                        };\n                        (0, utils_1.logDebug)(\"universalConnect connectInfoAndUrl info :\", JSON.stringify(info));\n                        connectInfoAndUrl(info);\n                    }\n                }\n                catch (error) {\n                    (0, utils_1.logDebug)(\"Engine universalConnect catch error\", error);\n                    reject(error);\n                }\n            }));\n        });\n    }\n    addOnConnectResultListener(connectResultListener) {\n        for (const connector of this.connectors) {\n            if (this.isInjectedConnector(connector)) {\n                connector.setOnConnectResultListener(connectResultListener);\n            }\n        }\n        this.connectResultListener = connectResultListener;\n    }\n    openWallet(engineConnectInfo, connector) {\n        var _a;\n        if (connector) {\n            connector.openWallet(engineConnectInfo);\n        }\n        else {\n            (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.openWallet(engineConnectInfo);\n        }\n    }\n    send(request, requestAnswer, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            return (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.send(request, requestAnswer, ttl);\n        });\n    }\n    clearData() {\n        var _a;\n        (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.clearData();\n    }\n    addDisconnectListener(disconnecter) {\n        var _a;\n        (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.addDisconnectListener(disconnecter);\n    }\n    saveSessionContent(key, data) {\n        this.connectionManager.saveSessionContent(key, data);\n    }\n    getSessionContent(key) {\n        var _a;\n        var session = this.connectionManager.getSessionContent(key);\n        if (session) {\n            var tag = \"\";\n            if (typeof session === \"object\") {\n                tag = this.getTagByappName((_a = session.wallet) === null || _a === void 0 ? void 0 : _a.appName);\n            }\n            if (this.connectors.find((connector) => {\n                return connector.getTag() === tag;\n            })) {\n                return session;\n            }\n        }\n        return undefined;\n    }\n    getTagByappName(appName) {\n        var tag = '';\n        if (appName) {\n            switch (appName) {\n                case wallet_info_1.OKXWalletName:\n                    tag = iconnector_1.OKX_APP_WALLET;\n                    break;\n                case wallet_info_1.OKXMiniWalletName:\n                    tag = iconnector_1.OKX_TG_WALLET;\n                    break;\n                case wallet_info_1.OKXInjectWalletName:\n                    tag = iconnector_1.OKX_INJECT_WALLET;\n            }\n        }\n        return tag;\n    }\n    setConnectConnector(wallet) {\n        var tag = this.getTagByappName(wallet === null || wallet === void 0 ? void 0 : wallet.appName);\n        if (!tag)\n            return;\n        this.setUseConnector(this.connectors.find((connector) => {\n            return connector.getTag() === tag;\n        }));\n    }\n    setUseConnector(connector) {\n        this.useConnector = connector;\n        if (this.isWsConnector(connector)) {\n            connector.addConnectionListener();\n        }\n    }\n    // for es connect\n    setSessionConnectingListener(sessionConnectingListener) {\n        this.sessionConnectingListener = sessionConnectingListener;\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.restoreconnect(sessionInfo, onConnectResult));\n        });\n    }\n    restoreconnectFromTopic(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.isWsConnector(this.getConnector())) {\n                yield this.getConnector().restoreconnectFromTopic(topic);\n            }\n        });\n    }\n    getCurrentConnectionReady(namespaceKeys) {\n        var _a;\n        return !!((_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.getCurrentConnectionReady(namespaceKeys));\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            var _a;\n            yield ((_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.connectManagerDisconnect(fromRestore));\n        });\n    }\n    sendSession(sessionInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, utils_1.logDebug)('[Connect] sendSession called:', sessionInfo);\n            const requestId = Date.now().toString();\n            let request = {\n                method: 'session_info',\n                params: { protocolVersion: constants_1.CONNECT_PROTOCOL_VER, sessionInfo: sessionInfo }\n            };\n            yield this.connectionManager.sendRaw(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId })));\n        });\n    }\n    addConnectionListener() {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.addListener(\"sdk_response\", (event, msg) => {\n            var jsonResponse = (0, utils_1.safeJsonParse)(msg);\n            (0, utils_1.logDebug)(`Engine ==>> addListener ==> success ==> ${jsonResponse}`);\n            if (jsonResponse.method === 'connect' || jsonResponse.method === 'connect_error') {\n                if (this.connectResultListener) {\n                    this.connectResultListener(jsonResponse);\n                }\n            }\n            else if (jsonResponse.method === \"session_connecting\") {\n                (0, utils_1.logDebug)(\"Engine ==>> handleResponse_4  ===> sessionConnectingListener\");\n                if (this.sessionConnectingListener) {\n                    (0, utils_1.logDebug)(\"Engine ==>> handleResponse_4  ===> sessionConnectingListener not null\");\n                    this.sessionConnectingListener();\n                    this.sessionConnectingListener = undefined;\n                }\n            }\n        }, function () {\n        });\n    }\n}\nexports.Engine = Engine;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = exports.Engine = exports.WalletConnectionManager = exports.ConnectionManager = exports.OKXWalletConnector = void 0;\nvar connect_1 = require(\"./connect\");\nObject.defineProperty(exports, \"OKXWalletConnector\", { enumerable: true, get: function () { return connect_1.OKXWalletConnector; } });\nvar connectionManager_1 = require(\"./connectionManager\");\nObject.defineProperty(exports, \"ConnectionManager\", { enumerable: true, get: function () { return connectionManager_1.ConnectionManager; } });\nvar walletConnectionManager_1 = require(\"./walletConnectionManager\");\nObject.defineProperty(exports, \"WalletConnectionManager\", { enumerable: true, get: function () { return walletConnectionManager_1.WalletConnectionManager; } });\nvar engine_1 = require(\"./engine\");\nObject.defineProperty(exports, \"Engine\", { enumerable: true, get: function () { return engine_1.Engine; } });\nvar storage_1 = require(\"./storage\");\nObject.defineProperty(exports, \"Storage\", { enumerable: true, get: function () { return storage_1.Storage; } });\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MULTICODEC_ED25519_LENGTH = exports.MULTICODEC_ED25519_HEADER = exports.MULTICODEC_ED25519_BASE = exports.MULTICODEC_ED25519_ENCODING = exports.DID_METHOD = exports.DID_PREFIX = exports.DID_DELIMITER = exports.KEY_PAIR_SEED_LENGTH = exports.DATA_ENCODING = exports.JSON_ENCODING = exports.JWT_ENCODING = exports.JWT_DELIMITER = exports.JWT_IRIDIUM_TYP = exports.JWT_IRIDIUM_ALG = exports.JWTHeaderType = void 0;\nexports.generateKeyPair = generateKeyPair;\nexports.decodeJSON = decodeJSON;\nexports.encodeJSON = encodeJSON;\nexports.encodeIss = encodeIss;\nexports.decodeIss = decodeIss;\nexports.encodeSig = encodeSig;\nexports.decodeSig = decodeSig;\nexports.encodeData = encodeData;\nexports.decodeData = decodeData;\nexports.encodeJWT = encodeJWT;\nexports.decodeJWT = decodeJWT;\nexports.signJWT = signJWT;\nexports.verifyJWT = verifyJWT;\nconst ed25519 = __importStar(require(\"@stablelib/ed25519\"));\nconst safejson_1 = require(\"../utils/safejson\");\nconst utils_1 = require(\"../utils/utils\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst log = __importStar(require(\"../utils/log\"));\nconst stringUtils_1 = require(\"../utils/stringUtils\");\nexports.JWTHeaderType = \"dapp\";\nexports.JWT_IRIDIUM_ALG = \"EdDSA\";\nexports.JWT_IRIDIUM_TYP = \"JWT\";\nexports.JWT_DELIMITER = \".\";\nexports.JWT_ENCODING = \"base64url\";\nexports.JSON_ENCODING = \"utf8\";\nexports.DATA_ENCODING = \"utf8\";\nexports.KEY_PAIR_SEED_LENGTH = 32;\nexports.DID_DELIMITER = \":\";\nexports.DID_PREFIX = \"did\";\nexports.DID_METHOD = \"key\";\nexports.MULTICODEC_ED25519_ENCODING = \"base58btc\";\nexports.MULTICODEC_ED25519_BASE = \"z\";\nexports.MULTICODEC_ED25519_HEADER = \"K36\";\nexports.MULTICODEC_ED25519_LENGTH = 32;\nfunction generateKeyPair() {\n    // let local_seed = randomBytes(KEY_PAIR_SEED_LENGTH)\n    // return ed25519.generateKeyPairFromSeed(local_seed);\n    return tweetnacl_1.default.sign.keyPair();\n}\nfunction decodeJSON(str) {\n    return (0, safejson_1.safeJsonParse)((0, stringUtils_1.okxtoString)((0, stringUtils_1.okxfromString)(str, exports.JWT_ENCODING), exports.JSON_ENCODING));\n}\nfunction encodeJSON(val) {\n    return (0, stringUtils_1.okxtoString)((0, stringUtils_1.okxfromString)((0, safejson_1.safeJsonStringify)(val), exports.JSON_ENCODING), exports.JWT_ENCODING);\n}\nfunction encodeIss(publicKey) {\n    log.logDebug(`publicKey: ${(0, utils_1.toHexString)(publicKey)}`);\n    var publicKeyStr = (0, stringUtils_1.okxtoString)(publicKey, exports.MULTICODEC_ED25519_ENCODING);\n    return [exports.DID_PREFIX, exports.DID_METHOD, publicKeyStr].join(exports.DID_DELIMITER);\n}\nfunction decodeIss(issuer) {\n    const [prefix, method, multicodec] = issuer.split(exports.DID_DELIMITER);\n    if (prefix !== exports.DID_PREFIX || method !== exports.DID_METHOD) {\n        throw new Error(`Issuer must be a DID with method \"key\"`);\n    }\n    if (multicodec === undefined) {\n        throw new Error('multicodec is undefined');\n    }\n    const publicKey = (0, stringUtils_1.okxfromString)(multicodec, exports.MULTICODEC_ED25519_ENCODING);\n    if (publicKey === undefined || publicKey.length !== exports.MULTICODEC_ED25519_LENGTH) {\n        throw new Error(`Issuer must be a public key with length 32 bytes`);\n    }\n    return publicKey;\n}\n// ---------- Signature ----------------------------------------------- //\nfunction encodeSig(bytes) {\n    return (0, stringUtils_1.okxtoString)(bytes, exports.JWT_ENCODING);\n}\nfunction decodeSig(encoded) {\n    return (0, stringUtils_1.okxfromString)(encoded, exports.JWT_ENCODING);\n}\n// ---------- Data ----------------------------------------------- //\nfunction encodeData(params) {\n    return (0, stringUtils_1.okxfromString)([encodeJSON(params.header), encodeJSON(params.payload)].join(exports.JWT_DELIMITER), exports.DATA_ENCODING);\n}\nfunction decodeData(data) {\n    var _a, _b;\n    const params = (0, stringUtils_1.okxtoString)(data, exports.DATA_ENCODING).split(exports.JWT_DELIMITER);\n    const header = decodeJSON((_a = params[0]) !== null && _a !== void 0 ? _a : '{}');\n    const payload = decodeJSON((_b = params[1]) !== null && _b !== void 0 ? _b : '{}');\n    return { header, payload };\n}\n// ---------- JWT ----------------------------------------------- //\nfunction encodeJWT(params) {\n    return [encodeJSON(params.header), encodeJSON(params.payload), encodeSig(params.signature)].join(exports.JWT_DELIMITER);\n}\nfunction decodeJWT(jwt) {\n    var _a, _b, _c;\n    const params = jwt.split(exports.JWT_DELIMITER);\n    const header = decodeJSON((_a = params[0]) !== null && _a !== void 0 ? _a : '{}');\n    const payload = decodeJSON((_b = params[1]) !== null && _b !== void 0 ? _b : '{}');\n    const signature = decodeSig((_c = params[2]) !== null && _c !== void 0 ? _c : '{}');\n    const data = (0, stringUtils_1.okxfromString)(params.slice(0, 2).join(exports.JWT_DELIMITER), exports.DATA_ENCODING);\n    return { header, payload, signature, data };\n}\nfunction signJWT(sub_1, aud_1, ttl_1, keyPair_1) {\n    return __awaiter(this, arguments, void 0, function* (sub, aud, ttl, keyPair, iat = Math.floor(Date.now())) {\n        const header = { alg: exports.JWT_IRIDIUM_ALG, typ: exports.JWT_IRIDIUM_TYP };\n        const iss = encodeIss(keyPair.publicKey);\n        const exp = iat + ttl;\n        const act = \"authenticate user\";\n        const payload = { iss, sub, aud, act, iat, exp };\n        const data = encodeData({ header, payload });\n        // const signature = ed25519.sign(keyPair.secretKey, data);\n        log.logDebug(`get sec kp: ${keyPair.secretKey} {${keyPair.secretKey.length}}`);\n        const signature = tweetnacl_1.default.sign.detached(data, keyPair.secretKey);\n        return encodeJWT({ header, payload, signature });\n    });\n}\nfunction verifyJWT(jwt) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { header, payload, data, signature } = decodeJWT(jwt);\n        if (header.alg !== exports.JWT_IRIDIUM_ALG || header.typ !== exports.JWT_IRIDIUM_TYP) {\n            throw new Error(\"JWT must use EdDSA algorithm\");\n        }\n        const publicKey = decodeIss(payload.iss);\n        return ed25519.verify(publicKey, data, signature);\n    });\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCONNECTOR_JWT_TTL = exports.OKXCONNECTOR_JWT_WALLET_SIDE = exports.OKXCONNECTOR_JWT_SIDE = void 0;\nexports.OKXCONNECTOR_JWT_SIDE = \"wallet\";\nexports.OKXCONNECTOR_JWT_WALLET_SIDE = \"dapp\";\nexports.OKXCONNECTOR_JWT_TTL = 86400000;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildNameSpacesByConnectResponse = buildNameSpacesByConnectResponse;\nexports.buildRequestAccountNameSpacesByConnectResponse = buildRequestAccountNameSpacesByConnectResponse;\nexports.buildAccountNameSpaces = buildAccountNameSpaces;\nconst log_1 = require(\"../utils/log\");\nfunction buildNameSpacesByConnectResponse(connectResponse) {\n    let requestAccountNameSpaces = buildRequestAccountNameSpacesByConnectResponse(connectResponse);\n    return requestAccountNameSpaces;\n}\nfunction buildRequestAccountNameSpacesByConnectResponse(connectResponse) {\n    let result = {};\n    (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start connectResponse111>>', JSON.stringify(connectResponse));\n    let universalResponse = connectResponse.payload.responses.find(item => item.name === 'requestAccounts');\n    if (universalResponse && universalResponse.accounts) {\n        let filterAccount = [];\n        for (const item of universalResponse.accounts) {\n            if (item.namespace === \"ton\") {\n                if (item.data && item.data.ton_addr) {\n                    if (item.data.ton_addr.address && item.data.ton_addr.address.length > 0) {\n                        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start TON>>', JSON.stringify(item));\n                        filterAccount.push(item);\n                    }\n                }\n            }\n            else {\n                (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start other>>', JSON.stringify(item));\n                filterAccount.push(item);\n            }\n        }\n        universalResponse.accounts = filterAccount;\n    }\n    const tonAddress = connectResponse.payload.responses.find(item => item.name === 'ton_addr');\n    const tonProof = connectResponse.payload.responses.find(item => item.name === 'ton_proof');\n    if (tonAddress && !universalResponse) { //adapt tonsdk\n        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse adapt ton data >>');\n        let address = tonAddress.address;\n        address = 'ton:' + tonAddress.network + \":\" + address;\n        let data = {\n            ton_addr: tonAddress\n        };\n        if (tonProof) {\n            data.ton_proof = tonProof;\n        }\n        universalResponse = {\n            name: \"requestAccounts\",\n            accounts: [{\n                    namespace: 'ton',\n                    addresses: [address],\n                    methods: ['ton_sendTransaction'],\n                    extra: {},\n                    data: data,\n                }]\n        };\n    }\n    (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse end universalResponse>>>', JSON.stringify(universalResponse));\n    buildAccountNameSpaces(universalResponse.accounts, result);\n    return result;\n}\nfunction buildAccountNameSpaces(accounts, result) {\n    accounts.forEach(item => {\n        var chains = [];\n        var accounts = [];\n        item.addresses.forEach(addressItem => {\n            var addressArr = addressItem.split(\":\");\n            (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse addressArr>>', addressArr.length);\n            if (addressArr.length >= 3) {\n                let chain = addressArr.slice(0, 2).join(\":\");\n                chains.push(chain);\n                accounts.push(addressItem);\n                (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse chain:>>', chain, \"addressItem:\", addressItem);\n            }\n        });\n        if (item.data && item.data.ton_addr) {\n            item.data.ton_addr.name = 'ton_addr';\n        }\n        if (item.data && item.data.ton_proof) {\n            item.data.ton_proof.name = 'ton_proof';\n        }\n        result[item.namespace] = {\n            chains: chains,\n            accounts: accounts,\n            methods: item.methods,\n            extra: item.extra,\n            payload: item.data\n        };\n        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse result>>', JSON.stringify(result));\n    });\n}\n/*export function buildTonNameSpaceByConnectResponse(connectResponse: ConnectResponseSuccess): Namespaces | undefined {\n    const tonAddrItem: TonAddressItemReply = connectResponse.payload.responses.find(\n        item => item.name === 'ton_addr'\n    ) as TonAddressItemReply;\n\n    const tonProfItem: TonProofItemReply = connectResponse.payload.responses.find(\n        item => item.name === 'ton_proof'\n    ) as TonProofItemReply;\n\n    if (!tonAddrItem) {\n        return undefined\n    }\n\n    return {\n        NameSpaceKeyTON: {\n            chains: [tonAddrItem.network],\n            accounts: [],\n            methods: connectResponse.payload.wallet.features?.ton,\n            payload: {\n                tonAccount: {\n                    address: tonAddrItem.address,\n                    chain: tonAddrItem.network,\n                    walletStateInit: tonAddrItem.walletStateInit,\n                    publicKey: tonAddrItem.publicKey\n                },\n                tonProof: tonProfItem\n            }\n        }\n    }\n}*/\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = void 0;\nconst storageconstants_1 = require(\"./storageconstants\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst utils_1 = require(\"../utils/utils\");\nconst utils_2 = require(\"../utils\");\nconst log = __importStar(require(\"../utils/log\"));\nconst utils_3 = require(\"../utils\");\nconst crypto_js_1 = require(\"crypto-js\");\nclass Storage {\n    constructor(subKey, beforeKey = undefined) {\n        const localStorage = (0, utils_1.resolveLocalStorage)();\n        // 0. check and upgrade beforeKey\n        // log.logDebug('------ update before cache ------')\n        // if (beforeKey) {\n        // this.checkAndUpgradeCache(beforeKey, subKey)\n        // }\n        // 1. load data from local storage\n        this.storeKey = '';\n        this.cipherIV = '';\n        this.subKey = subKey;\n        log.logDebug('--------get current local storage --------');\n        log.logDebug(localStorage);\n        const cacheStr = localStorage.getItem(Storage.cacheKey + subKey);\n        if (typeof cacheStr === \"undefined\" || cacheStr === null) {\n            log.logDebug(\"with no cache\");\n            this.cache = {};\n            return;\n        }\n        log.logDebug(cacheStr);\n        if ((cacheStr === null || cacheStr === void 0 ? void 0 : cacheStr.length) > 0) {\n            var cacheObj = (0, utils_2.safeJsonParse)(cacheStr);\n            this.cache = cacheObj;\n        }\n        log.logDebug(`get cache obj: ${this.cache}`);\n        if (typeof this.cache === 'undefined' || this.cache == null) {\n            this.cache = {};\n        }\n    }\n    checkAndUpgradeCache(fromCacheKey, toCacheKey) {\n        if (fromCacheKey && fromCacheKey.length > 0 && toCacheKey && toCacheKey.length > 0) {\n            // 1. get all infos from from-cache-key\n            log.logDebug('--------get current local storage --------');\n            log.logDebug(localStorage);\n            const cacheStr = localStorage.getItem(Storage.cacheKey + fromCacheKey);\n            if (typeof cacheStr === \"undefined\" || cacheStr === null) {\n                log.logDebug(\"no pre cache content\");\n                return;\n            }\n            log.logDebug(cacheStr);\n            if ((cacheStr === null || cacheStr === void 0 ? void 0 : cacheStr.length) > 0) {\n                // 2. save to to-cache-key\n                log.logDebug(\"write in cache content: \", fromCacheKey, '->', toCacheKey);\n                localStorage.setItem(Storage.cacheKey + toCacheKey, cacheStr);\n                // 3. clean from item\n                log.logDebug(\"clean in cache content: \", fromCacheKey);\n                localStorage.removeItem(Storage.cacheKey + fromCacheKey);\n            }\n        }\n        else {\n            log.logDebug('no pre cache key:', fromCacheKey);\n        }\n    }\n    saveContent(content, key, id = '-') {\n        let item = {\n            id: id,\n            timestamp: Date.now().toString(),\n            content: content\n        };\n        this.saveItem(item, key);\n    }\n    saveItem(item, key) {\n        let localKey = Storage.cacheKey + this.subKey;\n        const localStorage = (0, utils_1.resolveLocalStorage)();\n        log.logDebug(this.cache);\n        log.logDebug(`get cache obj: ${this.cache}, ${key}, ${item}`);\n        this.cache[key] = item;\n        let totalCacheStr = (0, utils_2.safeJsonStringify)(this.cache);\n        log.logDebug(`STORAGE: ${key} @ ${this.cache}`);\n        localStorage.setItem(localKey, totalCacheStr);\n    }\n    getItem(key) {\n        log.logDebug(`STORAGE >> getItem: ${key} @ ${this.cache}`);\n        return this.cache[key];\n    }\n    getCachedPBKDF2InfoKey() {\n        var _a, _b, _c, _d;\n        const pwLen = 32;\n        const saltLen = 24;\n        if (this.storeKey.length > 0 && ((_a = this.cipherIV) === null || _a === void 0 ? void 0 : _a.length) > 0) {\n            return {\n                pw: this.storeKey,\n                iv: this.cipherIV\n            };\n        }\n        let salt = (_b = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGER_CRYPTO_SALT)) === null || _b === void 0 ? void 0 : _b.content;\n        if (!salt) {\n            salt = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(saltLen));\n            this.saveContent(salt, storageconstants_1.OKXCONNECTOR_STORAGER_CRYPTO_SALT);\n        }\n        let pw = (_c = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD)) === null || _c === void 0 ? void 0 : _c.content;\n        if (!pw) {\n            pw = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(pwLen));\n            this.saveContent(pw, storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD);\n        }\n        let cipherIV = (_d = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV)) === null || _d === void 0 ? void 0 : _d.content;\n        if (!cipherIV) {\n            // let ivBuffer = Buffer.from(nacl.randomBytes(16))\n            let ivBuffer = tweetnacl_1.default.randomBytes(16);\n            cipherIV = (0, utils_1.toHexString)(ivBuffer);\n            this.saveContent(cipherIV, storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV);\n        }\n        this.cipherIV = cipherIV;\n        this.storeKey = (0, crypto_js_1.PBKDF2)(pw, salt, { iterations: 10 }).toString();\n        return {\n            pw: this.storeKey,\n            iv: this.cipherIV\n        };\n    }\n    encryptStoreMsg(msg, key) {\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg start ${Date.now()}`);\n        let storeInfo = this.getCachedPBKDF2InfoKey();\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg mid ${Date.now()}`);\n        var result = crypto_js_1.AES.encrypt(msg, storeInfo.pw).toString();\n        this.saveContent(result, key);\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg end ${Date.now()}`);\n    }\n    getAndDecrypt(key) {\n        (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt start ${Date.now()}`);\n        let item = this.getItem(key);\n        if (item && item.content) {\n            let storeInfo = this.getCachedPBKDF2InfoKey();\n            (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt mid ${Date.now()}`);\n            let result = crypto_js_1.AES.decrypt(item.content, storeInfo.pw).toString(crypto_js_1.enc.Utf8);\n            (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt end ${Date.now()}`);\n            return result;\n        }\n        return null;\n    }\n    clearCache(key = undefined) {\n        if (key === undefined) {\n            // clean all\n            const localStorage = (0, utils_1.resolveLocalStorage)();\n            this.cache = {};\n            let localKey = Storage.cacheKey + this.subKey;\n            localStorage.setItem(localKey, '');\n        }\n        else {\n            let localKey = Storage.cacheKey + this.subKey;\n            const localStorage = (0, utils_1.resolveLocalStorage)();\n            log.logDebug(this.cache);\n            this.cache[key] = null;\n            let totalCacheStr = (0, utils_2.safeJsonStringify)(this.cache);\n            log.logDebug(`STORAGE: clean key ${key} @ ${this.cache}`);\n            localStorage.setItem(localKey, totalCacheStr);\n        }\n    }\n}\nexports.Storage = Storage;\nStorage.cacheKey = 'OKXStorageKey';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCONNECTOR_STORAGE_PROTOCOL_CACHE = exports.OKXCONNECTOR_STORAGE_CIPHER_METHOD = exports.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV = exports.OKXCONNECTOR_STORAGER_CRYPTO_SALT = exports.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD = exports.OKXCONNECTOR_TON_KEY = exports.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE = exports.OKXCONNECTOR_TOKEN_CACHE = exports.OKXCONNECTOR_JWT_KEY = exports.OKXCONNECTOR_SESSION_PREFIX_KEY = exports.OKXCONNECTOR_CRYPTO_KEY = exports.OKXCONNECTOR_CACHE_KEY_DAPP = exports.OKXCONNECTOR_CACHE_KEY = void 0;\nexports.OKXCONNECTOR_CACHE_KEY = \"ck\";\nexports.OKXCONNECTOR_CACHE_KEY_DAPP = \"ck_dapp\";\nexports.OKXCONNECTOR_CRYPTO_KEY = \"cck_k\";\nexports.OKXCONNECTOR_SESSION_PREFIX_KEY = \"cspk_\";\nexports.OKXCONNECTOR_JWT_KEY = \"cjk_k\";\nexports.OKXCONNECTOR_TOKEN_CACHE = \"ct\";\nexports.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE = \"csp\";\nexports.OKXCONNECTOR_TON_KEY = \"OKXStorage_ctc\";\nexports.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD = \"scp\";\nexports.OKXCONNECTOR_STORAGER_CRYPTO_SALT = \"scs\";\nexports.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV = \"scpc\";\nexports.OKXCONNECTOR_STORAGE_CIPHER_METHOD = \"aes-256-cbc\";\nexports.OKXCONNECTOR_STORAGE_PROTOCOL_CACHE = 'okx_connect_split_cache_key';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnectionManagerEvent = exports.WalletConnectionManagerTopicInfoCacheKey = void 0;\nexports.WalletConnectionManagerTopicInfoCacheKey = \"wcmtic\";\nexports.WalletConnectionManagerEvent = {\n    RECEIVE_REQUEST: \"payload\"\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnectionManager = void 0;\nconst connect_1 = require(\"./connect\");\nconst commands_1 = require(\"./commands\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst jwtconstants_1 = require(\"./jwtconstants\");\nconst constants_1 = require(\"./constants\");\nconst walletConnectionConstants_1 = require(\"./walletConnectionConstants\");\nconst connectionSplitPackages_1 = require(\"./connectionSplitPackages\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils/utils\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst jwt_1 = require(\"./jwt\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst utils_2 = require(\"../utils\");\nclass WalletConnectionManager {\n    constructor() {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.communicateEvents = new eventemitter3_1.EventEmitter();\n        this.splitManager = new connectionSplitPackages_1.ConnectionSplitPackages('wallet');\n        log.logDebug('connect manager construct');\n        // local storage\n        this.connectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n        this.jwtKeyPair = this.getCachedJWTKeyPair();\n        this.saveJWTKeyPair(this.jwtKeyPair);\n        // wss connection\n        this.connector = new connect_1.OKXWalletConnector(constants_1.OKXCONNECTOR_WS_URL_1);\n        this.packageId = Date.now();\n        // connection state\n        this.sessionCryptoInfoMap = new Map();\n        // log.logDebug(`this.connectedWalletPK  constructor   ${this.connectedWalletPK}`)\n        this.inLogin = false;\n        this.isLogined = false;\n    }\n    refreshPackageId(offset = 0) {\n        let nowDate = Date.now() + offset;\n        if (nowDate == this.packageId) {\n            this.packageId = nowDate + 1;\n        }\n        this.packageId = nowDate;\n    }\n    saveCryptoKeyPair(topicId, keyPair) {\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(keyPair);\n        // encrypt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_CRYPTO_KEY + topicId);\n    }\n    getCachedCryptoKeyPair(topicId) {\n        // decrypt kp\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_CRYPTO_KEY + topicId);\n        const content = kp;\n        if (typeof content == 'string') {\n            log.logDebug('get cached crypto key:');\n            log.logDebug(content);\n            let keyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            return keyPairInfo;\n        }\n        else {\n            this.connectStorage.clearCache();\n        }\n        return null;\n    }\n    saveJWTKeyPair(keyPair) {\n        var strkeyPair = {\n            publicKey: (0, utils_1.toHexString)(keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(keyPair.secretKey)\n        };\n        log.logDebug('save jwt kp');\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(strkeyPair);\n        log.logDebug(cacheInfo);\n        // encrypt jwt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        log.logDebug('after save jwt kp');\n    }\n    getCachedJWTKeyPair() {\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            // TODO: decrypt jwt kp\n            log.logDebug('get cached jwt kp:');\n            log.logDebug(content);\n            let strKeyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            log.logDebug('save jwt kp');\n            log.logDebug(strKeyPairInfo);\n            var keyPair = {\n                publicKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.publicKey),\n                secretKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.secretKey)\n            };\n            return keyPair;\n        }\n        else {\n            return (0, jwt_1.generateKeyPair)();\n        }\n    }\n    isTopicPublicKeyExist(topicId) {\n        log.logDebug(`isTopicPublicKeyExist  ===> ${topicId}`);\n        return this.sessionCryptoInfoMap.get(topicId);\n    }\n    makeJWT(timestampStr) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, jwt_1.signJWT)(timestampStr, jwtconstants_1.OKXCONNECTOR_JWT_WALLET_SIDE, jwtconstants_1.OKXCONNECTOR_JWT_TTL, // 24h\n            this.jwtKeyPair);\n        });\n    }\n    parseInternalMsg(internalMsg) {\n        try {\n            let internalObj = (0, safejson_1.safeJsonParse)(internalMsg);\n            let origin = internalObj['ivur-igbfft-ptjip'];\n            if (origin && origin.length > 0) {\n                let originContent = (0, utils_2.base64decode)(origin, true);\n                return originContent.toString();\n            }\n        }\n        catch (error) {\n            log.logError('parse internal msg', error);\n        }\n    }\n    updateClientId(topic, clientId) {\n        let sessionInfo = this.sessionCryptoInfoMap.get(topic);\n        (0, log_1.logDebug)('updateClientId', sessionInfo, topic, clientId);\n        if (sessionInfo && clientId && clientId.length > 0) {\n            if (sessionInfo.cid) {\n                // check\n                let lastCheck = (0, utils_1.getLastSixMd5Hash)(clientId);\n                if (sessionInfo.cid == lastCheck) {\n                    sessionInfo.dappPublicKey = clientId;\n                }\n                else {\n                    log.logError('cid check failed', sessionInfo, topic, clientId);\n                }\n            }\n            else {\n                sessionInfo.dappPublicKey = clientId;\n            }\n            // \n            this.syncCacheSessionInfo();\n        }\n        return false;\n    }\n    parsePackage(topic_1, input_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, input, ignoreACK = false) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s;\n            this.events.emit(input.id, input);\n            // emit event\n            let sessionInfo = this.sessionCryptoInfoMap.get(topic);\n            log.logDebug('get sessionInfo for decrypt topic:', topic);\n            log.logDebug('get sessionInfo for decrypt:', input.id, topic, sessionInfo, this.sessionCryptoInfoMap);\n            let ignoreReceive = false;\n            if (sessionInfo && input.params.data) {\n                if ((_a = input.params.data) === null || _a === void 0 ? void 0 : _a.message) {\n                    // try parse internal message\n                    if ((_b = input.params.data) === null || _b === void 0 ? void 0 : _b.isInternalData) {\n                        let inner_message = (_c = input.params.data) === null || _c === void 0 ? void 0 : _c.message;\n                        let inner_topic = (_d = input.params.data) === null || _d === void 0 ? void 0 : _d.topic;\n                        let originContent = this.parseInternalMsg(inner_message);\n                        (0, log_1.logDebug)('parse internal origin: ', originContent);\n                        if (originContent && originContent.length > 0) {\n                            this.communicateEvents.emit(\"origin\", originContent, inner_topic);\n                        }\n                    }\n                    else {\n                        // try parse message base64\n                        try {\n                            let message = (_e = input.params.data) === null || _e === void 0 ? void 0 : _e.message;\n                            if (message.trimStart().startsWith('{')) {\n                                // 判断是否是分包数据\n                                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(message);\n                                if (msgPlayloadObject) {\n                                    (0, log_1.logDebug)('parse split msg object: ', msgPlayloadObject);\n                                    // 屏蔽后续的receive逻辑\n                                    ignoreReceive = true;\n                                    let msgObject = {\n                                        topicId: (_g = (_f = input.params) === null || _f === void 0 ? void 0 : _f.data) === null || _g === void 0 ? void 0 : _g.topic,\n                                        messageId: (_j = (_h = input.params) === null || _h === void 0 ? void 0 : _h.data) === null || _j === void 0 ? void 0 : _j.messageId,\n                                        messageObject: msgPlayloadObject,\n                                        publishedAt: (_l = (_k = input.params) === null || _k === void 0 ? void 0 : _k.data) === null || _l === void 0 ? void 0 : _l.publishedAt,\n                                    };\n                                    let checkResult = yield this.splitManager.onReceivedPackageCheck(msgObject);\n                                    if (checkResult.completeMessageIdList) {\n                                        checkResult.completeMessageIdList.forEach((msgId) => __awaiter(this, void 0, void 0, function* () {\n                                            // 发送批量receive\n                                            this.refreshPackageId();\n                                            yield this.sendReceive(this.packageId.toString(), msgId, topic);\n                                        }));\n                                    }\n                                    // 抛出finalmessage\n                                    if (checkResult.finalMessage) {\n                                        let message = sessionInfo.crypto.decryptWallet(checkResult.finalMessage, sessionInfo.dappPublicKey);\n                                        (0, log_1.logDebug)('<<< receive msg from split:', topic, message);\n                                        this.communicateEvents.emit(topic, message);\n                                    }\n                                }\n                                else {\n                                    let messageObj = (0, safejson_1.safeJsonParse)(message);\n                                    if (messageObj.method) {\n                                        if (messageObj.method == 'session_info') {\n                                            let sessionInfoString = messageObj.params.sessionInfo;\n                                            let base64Content = (0, utils_2.base64decode)(sessionInfoString, false);\n                                            (0, log_1.logDebug)(\"wallet connection manager requset base64Content:\", base64Content);\n                                            (0, log_1.logDebug)(\"base64Content:\" + base64Content);\n                                            let inner_connection = base64Content.toObject();\n                                            this.updateClientId(topic, inner_connection.clientId);\n                                        }\n                                        (0, log_1.logDebug)('<<< parse raw msg:', topic, messageObj);\n                                        this.communicateEvents.emit(topic, message);\n                                    }\n                                }\n                            }\n                            else {\n                                let message = sessionInfo.crypto.decryptWallet((_m = input.params.data) === null || _m === void 0 ? void 0 : _m.message, sessionInfo.dappPublicKey);\n                                (0, log_1.logDebug)('<<< receive msg:', topic, message);\n                                this.communicateEvents.emit(topic, message);\n                            }\n                        }\n                        catch (error) {\n                            let message = sessionInfo.crypto.decryptWallet((_o = input.params.data) === null || _o === void 0 ? void 0 : _o.message, sessionInfo.dappPublicKey);\n                            (0, log_1.logDebug)('<<< receive msg:', topic, message);\n                            this.communicateEvents.emit(topic, message);\n                        }\n                    }\n                }\n                else {\n                }\n            }\n            // send back ACK\n            if (!ignoreACK) {\n                yield this.sendACK(input.id, true);\n                if (topic && !ignoreReceive) {\n                    let inputObj = input;\n                    if ((_q = (_p = inputObj.params) === null || _p === void 0 ? void 0 : _p.data) === null || _q === void 0 ? void 0 : _q.messageId) {\n                        this.refreshPackageId();\n                        yield this.sendReceive(this.packageId.toString(), (_s = (_r = inputObj.params) === null || _r === void 0 ? void 0 : _r.data) === null || _s === void 0 ? void 0 : _s.messageId, topic);\n                    }\n                }\n            }\n        });\n    }\n    recovrySessionInfoFromCache() {\n        // get topic ids and keys from session\n        // WalletConnectionCryptoCacheMap\n        // {[topicId]: {cryptoKeypair: {publicKey:string, secretKey:string}, dappPublicKey:clientId}}\n        let jsonStr = this.connectStorage.getAndDecrypt(walletConnectionConstants_1.WalletConnectionManagerTopicInfoCacheKey);\n        log.logDebug('get cached sessionInfos:', jsonStr);\n        if (jsonStr) {\n            let cacheMap = (0, safejson_1.safeJsonParse)(jsonStr);\n            for (let topicId in cacheMap) {\n                let topicItem = cacheMap[topicId];\n                log.logDebug('make topicItem:', topicItem);\n                let cryptoItem = {\n                    topic: topicId,\n                    crypto: new crypto_1.SessionCrypto({\n                        publicKey: topicItem.cryptoKeyPair.publicKey,\n                        secretKey: topicItem.cryptoKeyPair.secretKey\n                    }),\n                    dappPublicKey: topicItem.dappPublicKey,\n                    cid: topicItem.cid\n                };\n                this.sessionCryptoInfoMap.set(topicId, cryptoItem);\n            }\n        }\n        log.logDebug('get cached sessionInfos map:', this.sessionCryptoInfoMap);\n    }\n    syncCacheSessionInfo() {\n        let cacheMap = {};\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            log.logDebug('for each Keys', topicId);\n            if (cryptoItem) {\n                cacheMap[topicId] = {\n                    cryptoKeyPair: cryptoItem.crypto.stringifyKeypair(),\n                    dappPublicKey: cryptoItem.dappPublicKey,\n                    cid: cryptoItem.cid\n                };\n            }\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(cacheMap);\n        log.logDebug('sync cache sessionInfos:', jsonData);\n        this.connectStorage.encryptStoreMsg(jsonData, walletConnectionConstants_1.WalletConnectionManagerTopicInfoCacheKey);\n    }\n    cacheSessionInfo(topic, sessionInfo, sync = true) {\n        let dappPublicKey = sessionInfo.dappPublicKey;\n        // 1. search dapp public related topic ids\n        let duplicatedTopics = [];\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            log.logDebug('for each Keys', topicId);\n            if (cryptoItem.dappPublicKey == dappPublicKey) {\n                log.logDebug('duplicated dapp public key:', topicId, dappPublicKey);\n                duplicatedTopics.push(topicId);\n            }\n        }\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            if (duplicatedTopics.includes(topicId)) {\n                this.sessionCryptoInfoMap.delete(topicId);\n            }\n        }\n        // discard useless topics\n        log.logDebug('cleaned connect session cache:', this.sessionCryptoInfoMap);\n        // 2. remove previous connected topic ids\n        // 3. write in current topic\n        this.sessionCryptoInfoMap.set(topic, sessionInfo);\n        // TODO: search domain info and then delete \n        log.logDebug('cache sessionInfo:', topic, sessionInfo, this.sessionCryptoInfoMap);\n        if (sync) {\n            this.syncCacheSessionInfo();\n        }\n        return duplicatedTopics;\n    }\n    updateProtocolVersion(topic, protocolVersion) {\n        this.splitManager.updateTopicSenderVersion(topic, protocolVersion);\n    }\n    // add and subscribe topic\n    appendTopic(topic, sessionPublicKey, cid) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('4.1. get append Topic:', topic);\n            // 1. check if connected\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.isLogined) {\n                    var error = new Error();\n                    error.message = \"connection is not logined\";\n                    error.name = \"append error\";\n                    // throw error\n                    reject(error);\n                    return;\n                }\n                // 2. subscribe topic and session public key\n                let cryptoItem = {\n                    topic: topic,\n                    crypto: new crypto_1.SessionCrypto(),\n                    dappPublicKey: sessionPublicKey ? sessionPublicKey : \"\",\n                    cid: cid\n                };\n                let duplicatedTopics = this.cacheSessionInfo(topic, cryptoItem, false);\n                // make sure cache session info before subscribe\n                yield this.subscribeTopics(Array.from([topic]));\n                this.refreshPackageId();\n                log.logDebug(`5. subscribe callback then fetch append message: ${this.packageId}, ${topic}`);\n                log.reportLog(`5. subscribe callback then fetch append message`);\n                const timeF = new Date().getTime();\n                (0, log_1.logDebug)(\"Append --subscribe callback->\", timeF - this.timeLog);\n                resolve(duplicatedTopics);\n            }));\n        });\n    }\n    confirmAppendingTopics() {\n        this.syncCacheSessionInfo();\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.timeLog = new Date().getTime();\n            (0, log_1.logDebug)(\"[Wallet] ConnectTime---enter->\", this.timeLog);\n            log.reportLog('wallet connect connect called');\n            // 0. get cached topics and infos\n            let timestampStr = Date.now().toString();\n            var jwtToken = yield this.makeJWT(timestampStr);\n            log.logDebug(`generate jwt token: ${jwtToken}`);\n            this.connectStorage.saveContent(jwtToken, 'jwt');\n            this.recovrySessionInfoFromCache();\n            // 1.\n            return new Promise((resolve, reject) => {\n                // 1. when websocket opened\n                this.inLogin = true;\n                this.connector.onOpen(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug(`1. connector on open`);\n                    log.reportLog('1. wallet connect connect on open');\n                    const timeOne = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---open->\", timeOne - this.timeLog);\n                    //2. send jwt to login\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when login');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // throw error\n                            reject(error);\n                        }\n                        else {\n                            this.isLogined = true;\n                            resolve();\n                            // 3. subscribe cached topics\n                            log.logDebug('3. subscribe cached topics', this.sessionCryptoInfoMap);\n                            log.reportLog('3. wallet connect connect subscribe cached topics');\n                            if (this.sessionCryptoInfoMap.size > 0) {\n                                yield this.subscribeTopics(Array.from(this.sessionCryptoInfoMap.keys()));\n                            }\n                        }\n                    }));\n                    log.logDebug(`2. login called`);\n                    log.reportLog('2. wallet connect login called');\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        return yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_LOGIN,\n                        params: {\n                            token: jwtToken\n                        }\n                    });\n                }));\n                this.connector.connect().catch((err) => {\n                    (0, log_1.logDebug)('WalletConnectionManager connect error', err);\n                    reject(err);\n                });\n                // add callback\n                this.connector.addPackageParse((event) => {\n                    var _a, _b;\n                    log.logDebug(`connect: parse package`);\n                    log.logDebug(event);\n                    if (!(\"params\" in event) || !(\"data\" in event[\"params\"])) {\n                        this.parsePackage(\"\", event, true);\n                        return;\n                    }\n                    // ignore receive echo\n                    if ((_a = event.params.data) === null || _a === void 0 ? void 0 : _a.topic) {\n                        this.parsePackage((_b = event.params.data) === null || _b === void 0 ? void 0 : _b.topic, event, event.method === commands_1.CONNECT_METHOD_RECEIVE);\n                    }\n                });\n                // this.connector.addListener(safeJsonStringify(event), (rawMsg: string)=> {\n                //    rawMsg = rawMsg.replace(/'/g, '\"')\n                //    log.logDebug(`addListener ===> ${rawMsg}`)\n                //    if (typeof rawMsg !== 'undefined') {\n                //       var msgObj = safeJsonParse(rawMsg)\n                //       var msg = msgObj.message\n                //       let crypto = \n                //       var result = this.crypto.decrypt(msg, this.connectedWalletPK)\n                //       log.logDebug(`addListener ===> ${result}`)\n                //       return result\n                //    }\n                //    return undefined\n                // }, ()=>{\n                //    // emit success\n                // }, ()=>{\n                //    // emit fail\n                // })\n            });\n        });\n    }\n    // 获取对应topic session下的钱包公钥\n    // 在返回approve时需要填充到clientId字段中\n    getSessionPublicKey(topicId) {\n        if (this.isTopicPublicKeyExist(topicId)) {\n            let item = this.sessionCryptoInfoMap.get(topicId);\n            if (item) {\n                return (0, utils_1.toHexString)(item.crypto.keyPair.publicKey);\n            }\n        }\n        return undefined;\n    }\n    getCurrentCachedTopicIdList() {\n        return Array.from(this.sessionCryptoInfoMap.keys());\n    }\n    disconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            yield this.connector.disconnect();\n            //clean cached topic\n            //如果是恢复连接，就不清理解密public key\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            if (!fromRestore) {\n                this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n            }\n        });\n    }\n    sendRaw(msg, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (topic) {\n                yield this.sendMsg(topic, msg, constants_1.OKXCONNECTOR_MESSAGE_TTL);\n            }\n        });\n    }\n    sendMsg(topic, message, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (message) {\n                this.refreshPackageId();\n                const payload = {\n                    id: this.packageId.toString(),\n                    method: commands_1.CONNECT_METHOD_PUBLISH,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    params: {\n                        message: {\n                            topic: topic,\n                            message: message,\n                            ttl: ttl\n                        }\n                    } // crypted\n                };\n                this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                    // ack\n                    if (rsp && rsp.error) {\n                        log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                    }\n                    else if (rsp && !rsp.error) {\n                        log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                    }\n                }));\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    send(topic_1, msg_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, msg, needPublicKey = false, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL, useRaw = false) {\n            var _a, _b;\n            // make send msg payload\n            log.logDebug(`message send =====> ${msg}`);\n            if (!this.isTopicPublicKeyExist(topic)) {\n                // channel not ready\n                throw new Error('connection not finish');\n            }\n            let connectedDappPK = (_a = this.sessionCryptoInfoMap.get(topic)) === null || _a === void 0 ? void 0 : _a.dappPublicKey;\n            let cryptoObject = (_b = this.sessionCryptoInfoMap.get(topic)) === null || _b === void 0 ? void 0 : _b.crypto;\n            let messageObj = undefined;\n            if (useRaw) {\n                messageObj = {\n                    message: msg,\n                };\n            }\n            let useCrypto = false;\n            if (cryptoObject && connectedDappPK && !useRaw) {\n                let message = cryptoObject.encryptWallet(msg, connectedDappPK);\n                useCrypto = true;\n                messageObj = {\n                    message: message,\n                };\n            }\n            if (messageObj) {\n                if (needPublicKey && cryptoObject) {\n                    messageObj.clientId = (0, utils_1.toHexString)(cryptoObject.keyPair.publicKey);\n                    // let privateKey = toHexString(cryptoObject.keyPair.secretKey)\n                    // log.logDebug(`message send use dapp publicKey =====> ${connectedDappPK}`)\n                    // log.logDebug(`message send use publicKey =====> ${messageObj.clientId}`)\n                    // log.logDebug(`message send use secretKey =====> ${privateKey}`)\n                }\n                let messageStr = (0, safejson_1.safeJsonStringify)(messageObj);\n                if (!useRaw && useCrypto) {\n                    yield this.splitManager.sendSplitPackages(topic, messageStr, this.sendMsg.bind(this), this.sendRaw.bind(this));\n                }\n                else {\n                    yield this.sendMsg(topic, messageStr, ttl);\n                }\n            }\n        });\n    }\n    sendACK(msgId_1, success_1) {\n        return __awaiter(this, arguments, void 0, function* (msgId, success, reason = undefined) {\n            if (success === true) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    result: true\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n            else if (reason) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    error: {\n                        code: reason.code, //int\n                        message: reason.message\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    // send receive\n    sendReceive(msgId, messageId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECEIVE,\n                params: {\n                    data: {\n                        messageId: messageId,\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendUnsubscribe(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: make disconnect payload\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), {\n                id: this.packageId.toString(),\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_UNSUB,\n                params: {\n                    topic: topic\n                }\n            });\n            // remove topicId\n            this.sessionCryptoInfoMap.delete(topic);\n            this.syncCacheSessionInfo();\n        });\n    }\n    // send receive\n    // 1. fetch all \n    // 2. send back receive\n    // 3. check has more, if so, repeat from 1st step\n    sendFetchAndConsumeMessages(msgId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(msgId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic == topic) {\n                                let messageId = msg.messageId;\n                                yield this.connector.getMsgPayloadFromHistory(msg);\n                                // send receive command to relay server\n                                this.refreshPackageId();\n                                yield this.sendReceive(this.packageId.toString(), messageId, topic);\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_FETCHMSG,\n                params: {\n                    data: {\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendBatchFetchAndConsumeMessages(packageId, topicIdList) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(packageId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic) {\n                                // send receive command to relay server\n                                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(msg.message);\n                                if (msgPlayloadObject) {\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                }\n                                else {\n                                    let messageId = msg.messageId;\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                    this.refreshPackageId(i);\n                                    yield this.sendReceive(this.packageId.toString(), messageId, msg.topic);\n                                }\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendBatchFetchAndConsumeMessages(this.packageId.toString(), topicIdList);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            log.reportLog('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: packageId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_BATCH_FETCHMSG,\n                params: {\n                    topics: topicIdList,\n                    withInternalData: true\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                yield this.connector.connect();\n            }), payload);\n        });\n    }\n    cleanCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.connectStorage.clearCache();\n        });\n    }\n    saveSessionContent(key, data) {\n        if (!data) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(data);\n        this.connectStorage.encryptStoreMsg(jsonData, storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n    }\n    getSessionContent(key) {\n        let jsonStr = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        if (jsonStr) {\n            let object = (0, safejson_1.safeJsonParse)(jsonStr);\n            return object;\n        }\n        return undefined;\n    }\n    // subscribe then fetch messages for each topics\n    subscribeTopics(topicIdList) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)(\"4. topicid list\", topicIdList);\n            log.reportLog(\"4. topicid list\");\n            this.refreshPackageId();\n            const timeF = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let finishCount = 0;\n                //3. send subscribe\n                for (let idx = 0; idx < topicIdList.length; ++idx) {\n                    let topicId = topicIdList[idx];\n                    this.refreshPackageId(idx);\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when subscribe');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // reject(error)\n                            finishCount += 1;\n                            if (finishCount == topicIdList.length) {\n                                resolve();\n                            }\n                        }\n                        this.refreshPackageId(idx);\n                        const timeF = new Date().getTime();\n                        (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n                        finishCount += 1;\n                        if (finishCount == topicIdList.length) {\n                            // 4. fetch messages\n                            log.logDebug(`5. send fetch msg: ${this.packageId}, ${topicId}`);\n                            yield this.sendBatchFetchAndConsumeMessages(this.packageId.toString(), topicIdList);\n                            // 5. split manager resend\n                            yield this.splitManager.init(this.sendRaw.bind(this));\n                            resolve();\n                        }\n                    }));\n                    log.logDebug(`3. login callback then send subscribe: ${this.packageId}, ${topicId}`);\n                    log.reportLog('3. login callback then send subscribe');\n                    const timeTh = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---login callback->\", timeTh - this.timeLog);\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        return yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_SUB,\n                        params: {\n                            topic: topicId\n                        }\n                    });\n                }\n            }));\n        });\n    }\n}\nexports.WalletConnectionManager = WalletConnectionManager;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AppwalletConnector = void 0;\nconst ws_connector_1 = require(\"./ws-connector\");\nconst iconnector_1 = require(\"./iconnector\");\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../protocol/constants\");\nclass AppwalletConnector extends ws_connector_1.WsConnector {\n    static getConnector() {\n        return new AppwalletConnector();\n    }\n    constructor() {\n        super();\n        this.walletName = 'OKX App';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectApp';\n    }\n    getTag() {\n        return iconnector_1.OKX_APP_WALLET;\n    }\n    openWallet(engineConnectInfo) {\n        var _a;\n        if (engineConnectInfo && engineConnectInfo.connectRequest) {\n            let connectRequest = engineConnectInfo.connectRequest;\n            (0, utils_1.logDebug)(`appwallet-connector openwallet before useSHortLink engineConnectInfo.connectRequest JSON ${JSON.stringify(engineConnectInfo)}`);\n            if ((0, utils_1.useShortLink)()) {\n                let shortUniversalLink = (0, utils_1.getOKXLink)(connectRequest);\n                (0, utils_1.openOKXUniversalLink)(shortUniversalLink);\n            }\n            else {\n                (0, utils_1.logDebug)(`appwallet-connector openwallet else connectRequest ${connectRequest}`);\n                let appConnectEncodeParams = (0, utils_1.encodeConnectParams)(Object.assign(Object.assign({}, connectRequest), { redirect: (_a = engineConnectInfo.redirect) !== null && _a !== void 0 ? _a : \"none\" }));\n                let appDeepLink = (0, utils_1.getAppWalletDeepLink)(appConnectEncodeParams);\n                (0, utils_1.openOKXDeeplinkWithFallback)(appDeepLink);\n            }\n        }\n        else {\n            if ((0, utils_1.isOS)('android')) {\n                (0, utils_1.openDeeplinkWithFallback)(constants_1.stackDeepLink, () => { });\n            }\n            else {\n                (0, utils_1.openLinkBlank)(constants_1.standardUniversalLink);\n            }\n        }\n    }\n}\nexports.AppwalletConnector = AppwalletConnector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_TG_WALLET = exports.OKX_APP_WALLET = exports.OKX_INJECT_WALLET = void 0;\nexports.OKX_INJECT_WALLET = \"okx_inject_wallet\";\nexports.OKX_APP_WALLET = \"okx_app_wallet\";\nexports.OKX_TG_WALLET = \"okx_tg_wallet\";\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OkxwalletInjectConnector = exports.WsConnector = exports.TgwalletConnector = exports.InjectConnector = exports.OKX_INJECT_WALLET = exports.OKX_APP_WALLET = exports.OKX_TG_WALLET = exports.AppwalletConnector = void 0;\nvar appwallet_connector_1 = require(\"./appwallet-connector\");\nObject.defineProperty(exports, \"AppwalletConnector\", { enumerable: true, get: function () { return appwallet_connector_1.AppwalletConnector; } });\nvar iconnector_1 = require(\"./iconnector\");\nObject.defineProperty(exports, \"OKX_TG_WALLET\", { enumerable: true, get: function () { return iconnector_1.OKX_TG_WALLET; } });\nObject.defineProperty(exports, \"OKX_APP_WALLET\", { enumerable: true, get: function () { return iconnector_1.OKX_APP_WALLET; } });\nObject.defineProperty(exports, \"OKX_INJECT_WALLET\", { enumerable: true, get: function () { return iconnector_1.OKX_INJECT_WALLET; } });\nvar inject_connector_1 = require(\"./inject-connector\");\nObject.defineProperty(exports, \"InjectConnector\", { enumerable: true, get: function () { return inject_connector_1.InjectConnector; } });\nvar tgwallet_connector_1 = require(\"./tgwallet-connector\");\nObject.defineProperty(exports, \"TgwalletConnector\", { enumerable: true, get: function () { return tgwallet_connector_1.TgwalletConnector; } });\nvar ws_connector_1 = require(\"./ws-connector\");\nObject.defineProperty(exports, \"WsConnector\", { enumerable: true, get: function () { return ws_connector_1.WsConnector; } });\nvar okxwallet_inject_connector_1 = require(\"./okxwallet-inject-connector\");\nObject.defineProperty(exports, \"OkxwalletInjectConnector\", { enumerable: true, get: function () { return okxwallet_inject_connector_1.OkxwalletInjectConnector; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InjectConnector = void 0;\nconst protocol_1 = require(\"../protocol\");\nconst utils_1 = require(\"../utils\");\nconst iconnector_1 = require(\"./iconnector\");\nconst SolProvider_1 = require(\"../inject/provider/SolProvider\");\nconst wallet_info_1 = require(\"../protocol/connect/wallet-info\");\nconst AptosProvider_1 = require(\"../inject/provider/AptosProvider\");\nconst media_1 = require(\"../utils/media\");\nconst TONProvider_1 = require(\"../inject/provider/TONProvider\");\nconst inject_1 = require(\"../inject\");\nconst sui_provider_1 = require(\"../inject/provider/sui-provider\");\nconst utils_2 = require(\"../utils/utils\");\nconst sessionUtils_1 = require(\"../connect/sessionUtils\");\nconst btc_provider_1 = require(\"../inject/provider/btc-provider\");\nclass InjectConnector {\n    constructor() {\n        this.disconnectListener = [];\n        this.providerMap = new Map();\n        this.accountChangedEVMHandler = null;\n        this.accountChangedSolanaPublicKeyHandler = null;\n        this.accountChangedTONHandler = null;\n        this.disconnectHandler = null;\n        this.walletName = \"\";\n        this.walletNameKey = '';\n        this.enable = true;\n        this.providerMap.set(protocol_1.NameSpaceKeyEip155, new inject_1.Eip155Provider());\n        this.providerMap.set(protocol_1.NameSpaceKeySOL, new SolProvider_1.SolProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeyAptos, new AptosProvider_1.AptosProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeyTON, new TONProvider_1.TONProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeySui, new sui_provider_1.SuiProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeyBtc, new btc_provider_1.BtcProvider());\n    }\n    setAccountChangeListener(accountChangeListener) {\n        (0, utils_1.logDebug)(\"setAccountChangeListener: inject\", accountChangeListener);\n        this.accountChangeListener = accountChangeListener;\n    }\n    setConnectionManager(connectionManager) {\n        this.connectionManager = connectionManager;\n    }\n    getInjectProvider(nameSpace) {\n        if (!nameSpace)\n            return;\n        for (const [mapKey, value] of this.providerMap.entries()) {\n            if (nameSpace.includes(mapKey)) {\n                return value;\n            }\n        }\n        return undefined;\n    }\n    openWallet(engineConnectInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c;\n            (0, utils_1.logDebug)(\"InjectEngine connect begin:\", JSON.stringify(engineConnectInfo));\n            if (!engineConnectInfo) {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR);\n            }\n            this.dappInfo = engineConnectInfo.connectRequest.dAppInfo;\n            var universalConnectRequest = engineConnectInfo.connectRequest;\n            try {\n                if (window && window.okxwallet) {\n                    if (universalConnectRequest.requests) {\n                        let requestAccounts = universalConnectRequest.requests\n                            .find(item => item.name === \"requestAccounts\");\n                        let version = yield window.okxwallet.getVersion();\n                        let result = {\n                            method: \"connect\",\n                            requestId: universalConnectRequest.requestId,\n                            payload: {\n                                wallet: {\n                                    platform: (_a = navigator.platform) !== null && _a !== void 0 ? _a : \"/\",\n                                    appName: wallet_info_1.OKXInjectWalletName,\n                                    appVersion: version !== null && version !== void 0 ? version : \"1.0.0\",\n                                    maxProtocolVersion: 1,\n                                },\n                                responses: []\n                            },\n                        };\n                        let responseItem = {\n                            name: \"requestAccounts\",\n                            accounts: [],\n                        };\n                        result.payload.responses.push(responseItem);\n                        yield this.disconnect();\n                        const required = (_b = requestAccounts.requiredNamespaces) !== null && _b !== void 0 ? _b : [];\n                        const optional = (_c = requestAccounts.optionalNamespaces) !== null && _c !== void 0 ? _c : [];\n                        let needPop = true;\n                        let signalChain = false;\n                        if (required.length + optional.length === 1 && !(0, media_1.isDevice)(\"mobile\")) {\n                            const singleItem = required.length === 1 ? required[0] : optional[0];\n                            const singleProvider = this.getInjectProvider(singleItem.namespace);\n                            // await singleProvider?.connect(singleItem,this.dappInfo)\n                            let singleConnectResult = yield (singleProvider === null || singleProvider === void 0 ? void 0 : singleProvider.singleConnect(singleItem, this.dappInfo));\n                            if (!!singleConnectResult) {\n                                signalChain = true;\n                                needPop = false;\n                            }\n                        }\n                        var accounts = yield this.getAccountByRequestWallets(needPop, false, signalChain, required, optional);\n                        if (accounts) {\n                            responseItem.accounts.push(...accounts);\n                            if (responseItem.accounts.length === 0) {\n                                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect connectAccounts is null\");\n                            }\n                        }\n                        else {\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect requestWallets is null\");\n                        }\n                        if (this.connectResultListener) {\n                            if (this.disconnectHandler) {\n                                window.okxwallet.removeListener('disconnect', this.disconnectHandler);\n                            }\n                            this.disconnectHandler = () => {\n                                console.log(\"window.okxwallet disconnect:\");\n                                this.disconnectListener.forEach(listener => listener());\n                                this.disconnectListener = [];\n                            };\n                            window.okxwallet.on('disconnect', this.disconnectHandler);\n                            this.connectResultListener(result);\n                        }\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR);\n                }\n            }\n            catch (error) {\n                var code = protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR;\n                var message = '';\n                if (error instanceof protocol_1.OKXConnectError) {\n                    code = error.code;\n                    message = error.message;\n                }\n                if (this.connectResultListener) {\n                    this.connectResultListener({\n                        requestId: \"-1\",\n                        method: 'connect_error',\n                        payload: {\n                            code: code\n                        }\n                    });\n                }\n            }\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, utils_1.logDebug)('InjectEngine ==>> disconnect  okxwallet.disconnect()');\n            if (window.okxwallet) {\n                yield window.okxwallet.disconnect();\n                (0, utils_1.logDebug)('InjectEngine ==>> disconnect end okxwallet.disconnect()');\n            }\n        });\n    }\n    getRequestId() {\n        const requestId = Date.now().toString();\n        (0, utils_1.logDebug)('InjectEngine ==>> getRequestId ==>', requestId);\n        return requestId;\n    }\n    send(request, requestAnswer) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                (0, utils_1.logDebug)(\"InjectEngine send  > request:\", (0, utils_1.safeJsonStringify)(request));\n                let newRequest = request;\n                if (newRequest.method === 'disconnect') {\n                    yield this.disconnect();\n                    this.disconnectListener.forEach(listener => listener());\n                    this.disconnectListener = [];\n                    (_a = requestAnswer.onAck) === null || _a === void 0 ? void 0 : _a.call(requestAnswer);\n                    return;\n                }\n                yield this.checkWalletMatch();\n                const injectProvider = this.getInjectProvider((0, utils_1.getNamespaceKeyByChain)(newRequest.chainId));\n                if (injectProvider) {\n                    injectProvider.send(newRequest).then(result => {\n                        var _a;\n                        (0, utils_1.logDebug)(\"InjectEngine ==>> send > result:\", result);\n                        (_a = requestAnswer.resolve) === null || _a === void 0 ? void 0 : _a.call(requestAnswer, result);\n                    }).catch(error => {\n                        var _a;\n                        let code = error.code;\n                        if (code === 4001) {\n                            code = protocol_1.OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR;\n                        }\n                        let errorResponse = {\n                            requestId: this.getRequestId(),\n                            method: request.method,\n                            error: {\n                                code: code,\n                                message: error.message\n                            }\n                        };\n                        (0, utils_1.logDebug)(\"InjectEngine ==>> send > errorResponse:\", JSON.stringify(errorResponse));\n                        (_a = requestAnswer.resolve) === null || _a === void 0 ? void 0 : _a.call(requestAnswer, errorResponse);\n                    });\n                    return;\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"InjectEngine ==>> send  ===> error:\", error);\n                return Promise.reject(error);\n            }\n        });\n    }\n    checkWalletMatch() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                var _a;\n                let sessionLocal = (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getSessionContent('connectSession');\n                if (!sessionLocal) {\n                    reject(new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED));\n                }\n                this.restoreconnect(sessionLocal, (session) => {\n                    if (session) {\n                        resolve();\n                    }\n                    else {\n                        reject(new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED));\n                    }\n                });\n            });\n        });\n    }\n    checkAccountChanged() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                let sessionLocal = (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getSessionContent('connectSession');\n                if (!sessionLocal) {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED);\n                }\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --sessionInfo:\", JSON.stringify(sessionLocal));\n                let requiredNamespaces = this.getRequireNameSpaceFromSession(sessionLocal);\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --requiredNamespaces:\", JSON.stringify(requiredNamespaces));\n                // 使用 await 等待异步操作完成\n                let accounts = yield this.getAccountByRequestWallets(false, true, false, requiredNamespaces, []);\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --accounts:\", JSON.stringify(accounts));\n                if (accounts) {\n                    let resultNameSpace = {};\n                    (0, sessionUtils_1.buildAccountNameSpaces)(accounts, resultNameSpace);\n                    if (!this.compareAndModifyNamespaces(sessionLocal.namespaces, resultNameSpace)) {\n                        (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --result sessionLocal:\", JSON.stringify(sessionLocal));\n                        if (this.accountChangeListener) {\n                            (0, utils_1.logDebug)(\"inject-connector checkAccountChanged -accountChangeListener:\", this.accountChangeListener);\n                            this.accountChangeListener(sessionLocal);\n                        }\n                        else {\n                            (0, utils_1.logDebug)(\"inject-connector checkAccountChanged disconnect:\");\n                            yield this.disconnect();\n                        }\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect requestWallets is null\");\n                }\n            }\n            catch (e) {\n                (0, utils_1.logDebug)(\"inject-connector restoreconnect catch error\", JSON.stringify(e));\n                throw e;\n            }\n        });\n    }\n    compareAndModifyNamespaces(nameSpaces1, nameSpaces2) {\n        let isAccountsSame = true;\n        for (const key in nameSpaces1) {\n            if (nameSpaces2[key]) {\n                const ns1 = nameSpaces1[key];\n                const ns2 = nameSpaces2[key];\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged ns1:\", JSON.stringify(ns1));\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged ns2:\", JSON.stringify(ns2));\n                const areAccountsSame = JSON.stringify([...ns1.accounts].sort()) === JSON.stringify([...ns2.accounts].sort());\n                if (!areAccountsSame) {\n                    isAccountsSame = false;\n                    ns1.accounts = [...ns2.accounts];\n                    ns1.extra = Object.assign({}, ns2.extra);\n                    ns1.payload = Object.assign({}, ns2.payload);\n                }\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged new ns1:\", JSON.stringify(ns1));\n            }\n        }\n        (0, utils_1.logDebug)(`inject-connector checkAccountChanged compareAndModifyNamespaces ===> ${isAccountsSame}`);\n        return isAccountsSame;\n    }\n    clearData() {\n        this.connectResultListener = undefined;\n    }\n    addDisconnectListener(disconnecter) {\n        this.disconnectListener.push(disconnecter);\n    }\n    setOnConnectResultListener(connectResultListener) {\n        this.connectResultListener = connectResultListener;\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (_ = false) {\n        });\n    }\n    getCurrentConnectionReady(namespaceKeys) {\n        if (!namespaceKeys) {\n            return false;\n        }\n        const allReady = namespaceKeys.every(namespaceKey => { var _a; return (_a = this.getInjectProvider(namespaceKey)) === null || _a === void 0 ? void 0 : _a.connectReady(); });\n        return allReady;\n    }\n    getTag() {\n        return iconnector_1.OKX_INJECT_WALLET;\n    }\n    toJSON() {\n        return \"inject-connector\";\n    }\n    getRequireNameSpaceFromSession(sessionInfo) {\n        var _a, _b;\n        var requiredNamespaces = [];\n        for (let namespacesKey in sessionInfo.namespaces) {\n            let nameSpace = sessionInfo.namespaces[namespacesKey];\n            let connectWalletNameSpace = {\n                namespace: namespacesKey,\n                chains: nameSpace.chains\n            };\n            if (namespacesKey === protocol_1.NameSpaceKeyAptos) {\n                let aptosChains = [];\n                nameSpace.chains.forEach((chainStr) => {\n                    let aptosChain = (0, utils_2.replaceChainNameToChainId)(chainStr);\n                    aptosChains.push(aptosChain);\n                });\n                connectWalletNameSpace = {\n                    namespace: namespacesKey,\n                    chains: aptosChains\n                };\n            }\n            else if (namespacesKey === protocol_1.NameSpaceKeyTON) {\n                let ton_proof_result_Item = undefined;\n                let proofItem = undefined;\n                if ((_a = nameSpace.payload) === null || _a === void 0 ? void 0 : _a.ton_proof) {\n                    ton_proof_result_Item = (_b = nameSpace.payload) === null || _b === void 0 ? void 0 : _b.ton_proof;\n                    if (ton_proof_result_Item.proof.payload) {\n                        proofItem = {\n                            name: \"ton_proof\",\n                            payload: ton_proof_result_Item.proof.payload\n                        };\n                    }\n                }\n                connectWalletNameSpace = {\n                    namespace: namespacesKey,\n                    chains: nameSpace.chains,\n                    params: {\n                        ton_addr: { name: 'ton_addr' },\n                        ton_proof: proofItem\n                    },\n                };\n            }\n            requiredNamespaces.push(connectWalletNameSpace);\n        }\n        return requiredNamespaces;\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        var _a;\n        if (!window.okxwallet) {\n            onConnectResult(null);\n            return;\n        }\n        this.dappInfo = (_a = sessionInfo.sessionConfig) === null || _a === void 0 ? void 0 : _a.dappInfo;\n        (0, utils_1.logDebug)(\"inject-connector restoreconnect --sessionInfo:\", JSON.stringify(sessionInfo));\n        var requiredNamespaces = this.getRequireNameSpaceFromSession(sessionInfo);\n        (0, utils_1.logDebug)(\"inject-connector restoreconnect --requiredNamespaces:\", JSON.stringify(requiredNamespaces));\n        this.getAccountByRequestWallets(false, false, false, requiredNamespaces, [])\n            .then((accounts) => {\n            (0, utils_1.logDebug)(\"inject-connector restoreconnect --accounts:\", JSON.stringify(accounts));\n            //compare account with sessionInfo\n            let allEqual = true;\n            for (let namespacesKey in sessionInfo.namespaces) {\n                var accountsItem = accounts.find((item) => item.namespace === namespacesKey);\n                var sessionAccounts = sessionInfo.namespaces[namespacesKey].accounts;\n                if (!accountsItem) {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"resotreconnect error: accountItem error\");\n                }\n                const areEqual = accountsItem.addresses.length === sessionAccounts.length &&\n                    accountsItem.addresses.slice().sort().every((value, index) => {\n                        if (namespacesKey === protocol_1.NameSpaceKeyAptos) {\n                            let aptosAdd = sessionAccounts.slice().sort()[index];\n                            (0, utils_1.logDebug)(\"check aptos address -value and aptosAdd--\", value, aptosAdd);\n                            aptosAdd = (0, utils_2.replaceChainNameToChainId)(aptosAdd);\n                            return aptosAdd === value;\n                        }\n                        else {\n                            return value === sessionAccounts.slice().sort()[index];\n                        }\n                    });\n                if (!areEqual) {\n                    allEqual = false;\n                }\n            }\n            if (allEqual) {\n                onConnectResult(sessionInfo);\n            }\n            else {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"resotreconnect error: address not as same as session\");\n            }\n        }).catch((e) => {\n            (0, utils_1.logDebug)(\"inject-connector restoreconnect catch error\", JSON.stringify(e));\n            onConnectResult(null);\n        });\n    }\n    getAccountByRequestWallets(needPop, isAccountChange, signalChain, requiredNamespaces, optionalNamespaces) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                var walletInfo = [];\n                var accountResult = [];\n                if ((0, media_1.isDevice)(\"mobile\")) {\n                    var walletInfoItem = yield window.okxwallet.connectWallet(needPop, {\n                        requiredNamespaces: requiredNamespaces,\n                        optionalNamespaces: optionalNamespaces\n                    });\n                    walletInfo.push(walletInfoItem);\n                }\n                else {\n                    walletInfo = (yield window.okxwallet.requestWallets(needPop));\n                }\n                var allNameSpace = [...(requiredNamespaces !== null && requiredNamespaces !== void 0 ? requiredNamespaces : []), ...(optionalNamespaces !== null && optionalNamespaces !== void 0 ? optionalNamespaces : [])];\n                let walletInfoFirst = walletInfo[0];\n                (0, utils_1.logDebug)(\" InjectEngine connect connectAccounts:\", JSON.stringify(walletInfoFirst));\n                let eventkey;\n                let hasTON = false;\n                if (allNameSpace && walletInfoFirst && walletInfoFirst.address) {\n                    for (const [mapKey, provider] of this.providerMap.entries()) {\n                        let itemResult = yield provider.parseConnectResponse(needPop, isAccountChange, signalChain, allNameSpace, walletInfoFirst, this.dappInfo);\n                        if (itemResult) {\n                            eventkey = mapKey;\n                            accountResult.push(itemResult);\n                            if (mapKey === protocol_1.NameSpaceKeyTON) {\n                                hasTON = true;\n                            }\n                        }\n                    }\n                }\n                // check require\n                let cheeckRequire = requiredNamespaces.every(requireItem => {\n                    // requireItem.namespace\n                    let resultSel = accountResult.find(resultItem => {\n                        return resultItem.namespace === requireItem.namespace;\n                    });\n                    if (resultSel) {\n                        let hasChainAdd = requireItem.chains.every(chain => {\n                            let addItem = resultSel.addresses.find(address => {\n                                return address.startsWith(chain + \":\");\n                            });\n                            return !!addItem;\n                        });\n                        return hasChainAdd;\n                    }\n                    return false;\n                });\n                (0, utils_1.logDebug)(\"InjectEngine connect requiredNamespaces:\", JSON.stringify(requiredNamespaces));\n                (0, utils_1.logDebug)(\"InjectEngine connect accountResult:\", JSON.stringify(accountResult));\n                if (!cheeckRequire) {\n                    yield this.disconnect();\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED);\n                }\n                if (!(0, media_1.isDevice)(\"mobile\")) {\n                    this.configEventWithKey(eventkey, hasTON);\n                    yield window.okxwallet.requestWallets(needPop);\n                }\n                return accountResult;\n            }\n            catch (e) {\n                if (e && typeof e === \"object\" && \"code\" in e) {\n                    if (e.code === 4001) {\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR);\n                    }\n                }\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n            }\n        });\n    }\n    configEventWithKey(key, hasTON) {\n        if (window.okxwallet && key) {\n            if (this.accountChangedEVMHandler) {\n                window.okxwallet.removeListener('accountsChanged', this.accountChangedEVMHandler);\n            }\n            if (this.accountChangedSolanaPublicKeyHandler) {\n                window.okxwallet.solana.removeListener('accountChanged', this.accountChangedSolanaPublicKeyHandler);\n                window.okxwallet.sui.removeListener('accountChanged', this.accountChangedSolanaPublicKeyHandler);\n            }\n            if (this.accountChangedTONHandler) {\n                window.okxTonWallet.tonconnect.off('accountChanged', this.accountChangedTONHandler);\n            }\n            if (hasTON) {\n                console.log(\"window.okxwallet configEventWithKey:\", key);\n                this.accountChangedTONHandler = () => {\n                    console.log(\"window.okxwallet configEventWithKey_TON:\", Date.now(), key);\n                    this.checkAccountChanged().catch(e => {\n                        console.log(\"window.okxwallet configEventWithKey error: \", e);\n                    });\n                };\n                window.okxTonWallet.tonconnect.on('accountChanged', this.accountChangedTONHandler);\n            }\n            else {\n                switch (key) {\n                    case protocol_1.NameSpaceKeyEip155:\n                        {\n                            console.log(\"window.okxwallet configEventWithKey:\", key);\n                            this.accountChangedEVMHandler = (accounts) => {\n                                console.log(\"window.okxwallet configEventWithKey_evm:\", Date.now(), key, accounts);\n                                if (accounts && accounts.length > 0) { //\n                                    this.checkAccountChanged().catch(e => {\n                                        console.log(\"window.okxwallet configEventWithKey error: \", e);\n                                    });\n                                }\n                            };\n                            window.okxwallet.on('accountsChanged', this.accountChangedEVMHandler);\n                        }\n                        break;\n                    case protocol_1.NameSpaceKeySOL:\n                        {\n                            console.log(\"window.okxwallet configEventWithKey:\", key);\n                            this.accountChangedSolanaPublicKeyHandler = (publicKey) => {\n                                console.log(\"window.okxwallet configEventWithKey_solana:\", Date.now(), key, publicKey);\n                                if (publicKey) {\n                                    this.checkAccountChanged().catch(e => {\n                                        console.log(\"window.okxwallet configEventWithKey error: \", e);\n                                    });\n                                }\n                            };\n                            window.okxwallet.solana.on('accountChanged', this.accountChangedSolanaPublicKeyHandler);\n                        }\n                        break;\n                    case protocol_1.NameSpaceKeySui:\n                        {\n                            console.log(\"window.okxwallet configEventWithKey:\", key);\n                            this.accountChangedSolanaPublicKeyHandler = (publicKey) => {\n                                console.log(\"window.okxwallet configEventWithKey_sui:\", Date.now(), key, publicKey);\n                                if (publicKey) {\n                                    this.checkAccountChanged().catch(e => {\n                                        console.log(\"window.okxwallet configEventWithKey error: \", e);\n                                    });\n                                }\n                            };\n                            window.okxwallet.sui.on('accountChanged', this.accountChangedSolanaPublicKeyHandler);\n                        }\n                        break;\n                    case protocol_1.NameSpaceKeyTON:\n                        {\n                            console.log(\"window.okxwallet configEventWithKey:\", key);\n                        }\n                        break;\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n}\nexports.InjectConnector = InjectConnector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OkxwalletInjectConnector = void 0;\nconst inject_connector_1 = require(\"./inject-connector\");\nclass OkxwalletInjectConnector extends inject_connector_1.InjectConnector {\n    static getConnector() {\n        return new OkxwalletInjectConnector();\n    }\n    constructor() {\n        super();\n        this.walletName = 'OKX Wallet extension';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectInjected';\n    }\n}\nexports.OkxwalletInjectConnector = OkxwalletInjectConnector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TgwalletConnector = void 0;\nconst ws_connector_1 = require(\"./ws-connector\");\nconst iconnector_1 = require(\"./iconnector\");\nconst utils_1 = require(\"../utils\");\nclass TgwalletConnector extends ws_connector_1.WsConnector {\n    static getConnector() {\n        return new TgwalletConnector();\n    }\n    constructor() {\n        super();\n        this.walletName = 'OKX Mini Wallet';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectMini';\n    }\n    getTag() {\n        return iconnector_1.OKX_TG_WALLET;\n    }\n    openWallet(engineConnectInfo) {\n        var _a;\n        var encodeTGParams;\n        if (engineConnectInfo && engineConnectInfo.connectRequest) {\n            encodeTGParams = (0, utils_1.encodeTWAConnectURLParams)(Object.assign(Object.assign({}, engineConnectInfo.connectRequest), { redirect: \"none\" }));\n        }\n        var tgUrl = (0, utils_1.getTelegramWalletTWAUrl)(encodeTGParams, (_a = engineConnectInfo === null || engineConnectInfo === void 0 ? void 0 : engineConnectInfo.tmaReturnUrl) !== null && _a !== void 0 ? _a : \"back\");\n        (0, utils_1.openOKXTMAWalletlinkWithFallback)(tgUrl);\n    }\n}\nexports.TgwalletConnector = TgwalletConnector;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WsConnector = void 0;\nconst safejson_1 = require(\"../utils/safejson\");\nconst log_1 = require(\"../utils/log\");\nclass WsConnector {\n    constructor() {\n        this.disconnectListener = [];\n        this.walletName = '';\n        this.walletNameKey = '';\n        this.enable = true;\n        this.pendingRequests = new Map();\n        // report api begin\n        (0, log_1.getDefaultReporter)().beginReport();\n    }\n    setAccountChangeListener(accountChangeListener) {\n        this.accountChangeListener = accountChangeListener;\n    }\n    setConnectionManager(connectionManager) {\n        this.connectionManager = connectionManager;\n    }\n    addConnectionListener() {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.addListener(\"sdk_response\", (event, msg) => {\n            var jsonResponse = (0, safejson_1.safeJsonParse)(msg);\n            (0, log_1.logDebug)(`Engine ==>> addListener ==> success ==> ${jsonResponse}`);\n            this.handleResponse(event, jsonResponse);\n        }, function () {\n        });\n    }\n    addDisconnectListener(disconnecter) {\n        this.disconnectListener.push(disconnecter);\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.disconnect(fromRestore));\n        });\n    }\n    openWallet(engineConnectInfo) {\n    }\n    bindRequestForPromise(requestId, resolve) {\n        this.pendingRequests.set(requestId, resolve);\n    }\n    send(request, requestAnswer, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            (0, log_1.logDebug)('Engine ==>> send  request==>', JSON.stringify(request));\n            const requestId = this.getRequestId();\n            try {\n                let packageId = yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.send(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId })), ttl));\n                if (packageId) {\n                    (_b = this.connectionManager) === null || _b === void 0 ? void 0 : _b.events.once(packageId.toString(), (event) => {\n                        var _a;\n                        (0, log_1.logDebug)(`Engine ==> send => onAck => ${(0, safejson_1.safeJsonStringify)(event)}`);\n                        if (event && event.result) {\n                            (_a = requestAnswer.onAck) === null || _a === void 0 ? void 0 : _a.call(requestAnswer);\n                        }\n                    });\n                }\n                if (requestAnswer.resolve) {\n                    this.bindRequestForPromise(requestId, requestAnswer.resolve);\n                }\n            }\n            catch (e) {\n                return Promise.reject(e);\n            }\n        });\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.restoreConnect(sessionInfo.topic));\n            onConnectResult(sessionInfo);\n        });\n    }\n    restoreconnectFromTopic(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.restoreConnect(topic));\n        });\n    }\n    getRequestId() {\n        const requestId = Date.now().toString();\n        (0, log_1.logDebug)('Engine ==>> getRequestId ==>', requestId);\n        return requestId;\n    }\n    handleResponse(event, response) {\n        (0, log_1.logDebug)(`Engine ==>> handleResponse_1  ======>response: ${(0, safejson_1.safeJsonStringify)(response)}`, event);\n        if (\"requestId\" in response) {\n            (0, log_1.logDebug)(\"Engine ==>> handleResponse_2  ===> in response\");\n            let requestId = response.requestId;\n            const resolve = this.pendingRequests.get(requestId);\n            if (resolve) {\n                (0, log_1.logDebug)(\"Engine ==>> handleResponse_3  ===> find resolve:\", resolve);\n                resolve(response);\n                // 从pendingRequests中删除这个Promise\n                this.pendingRequests.delete(requestId);\n            }\n            else {\n                (0, log_1.logDebug)(\"Engine ==>> handleResponse_3  ===> not find resolve:\");\n                if (response.method === \"disconnect\") {\n                    this.disconnectListener.forEach(listener => listener());\n                    this.disconnectListener = [];\n                    this.clearData();\n                }\n            }\n        }\n    }\n    getCurrentConnectionReady() {\n        var _a;\n        return !!((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getCurrentConnectionReady());\n    }\n    saveSessionContent(key, data) {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.saveSessionContent(key, data);\n    }\n    getSessionContent(key) {\n        var _a;\n        return (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getSessionContent(key);\n    }\n    setOnConnectResultListener(connectResultListener) {\n        this.connectResultListener = connectResultListener;\n    }\n    getTag() {\n        return \"\";\n    }\n    toJSON() {\n        return \"ws-connector\";\n    }\n    clearData() {\n        this.pendingRequests.clear();\n    }\n}\nexports.WsConnector = WsConnector;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SessionCrypto = void 0;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst utils_1 = require(\"../utils/utils\");\nclass SessionCrypto {\n    constructor(keyPair = undefined) {\n        this.nonceLength = 24;\n        this.sessionKeyPair = keyPair ? this.createKeypairFromString(keyPair) : this.createKeypair();\n    }\n    createKeypair() {\n        return tweetnacl_1.default.box.keyPair();\n    }\n    createKeypairFromString(keyPair) {\n        return {\n            publicKey: (0, utils_1.hexToByteArray)(keyPair.publicKey),\n            secretKey: (0, utils_1.hexToByteArray)(keyPair.secretKey),\n        };\n    }\n    createNonce() {\n        return tweetnacl_1.default.randomBytes(this.nonceLength);\n    }\n    get keyPair() {\n        return this.sessionKeyPair;\n    }\n    // dapp 加密:\n    // base64(hex（nonce+加密内容）)\n    encrypt(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl_1.default.box(encodedMessage, nonce, (0, utils_1.hexToByteArray)(receiverPublicKey), this.keyPair.secretKey);\n        let concatInfo = (0, utils_1.concatUint8Arrays)(nonce, encrypted);\n        var hexResult = (0, utils_1.toHexString)(concatInfo);\n        var encodedResult = new TextEncoder().encode(hexResult);\n        return (0, utils_1.base64encode)(encodedResult, false);\n    }\n    // 钱包加密内容\n    // 注意：没有中间hex的环节\n    // base64（nonce+加密内容)\n    encryptWallet(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl_1.default.box(encodedMessage, nonce, (0, utils_1.hexToByteArray)(receiverPublicKey), this.keyPair.secretKey);\n        let concatInfo = (0, utils_1.concatUint8Arrays)(nonce, encrypted);\n        return (0, utils_1.base64encode)(concatInfo, false);\n    }\n    // dapp 解密\n    // base64(split(nonce+加密内容))\n    decrypt(message, senderPublicKey) {\n        let base64Content = (0, utils_1.base64decode)(message, true);\n        let messageByteArray = base64Content.toUint8Array();\n        const [nonce, internalMessage] = (0, utils_1.splitToUint8Arrays)(messageByteArray, this.nonceLength);\n        const decrypted = tweetnacl_1.default.box.open(internalMessage, nonce, (0, utils_1.hexToByteArray)(senderPublicKey), this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${(0, utils_1.toHexString)(this.keyPair.publicKey)} \\n keypair secretkey: ${(0, utils_1.toHexString)(this.keyPair.secretKey)}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    // dapp 解密\n    // base64(hextoByte(split(nonce+加密内容)))\n    decryptWallet(message, senderPublicKey) {\n        let base64Content = (0, utils_1.base64decode)(message, true);\n        let messageByteArray = (0, utils_1.hexToByteArray)(base64Content.toString());\n        const [nonce, internalMessage] = (0, utils_1.splitToUint8Arrays)(messageByteArray, this.nonceLength);\n        const decrypted = tweetnacl_1.default.box.open(internalMessage, nonce, (0, utils_1.hexToByteArray)(senderPublicKey), this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${(0, utils_1.toHexString)(this.keyPair.publicKey)} \\n keypair secretkey: ${(0, utils_1.toHexString)(this.keyPair.secretKey)}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    stringifyKeypair() {\n        return {\n            publicKey: (0, utils_1.toHexString)(this.keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(this.keyPair.secretKey)\n        };\n    }\n}\nexports.SessionCrypto = SessionCrypto;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./connect\"), exports);\n__exportStar(require(\"./protocol\"), exports);\n__exportStar(require(\"./utils\"), exports);\n__exportStar(require(\"./inject\"), exports);\n__exportStar(require(\"./connector\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BtcMethods = exports.SuiMethods = exports.TONMethods = exports.AptosMethods = exports.SOLANAMethods = exports.Eip55Methods = void 0;\nexports.hasOKXInjectedProvider = hasOKXInjectedProvider;\nfunction hasOKXInjectedProvider() {\n    if (typeof getWindowProviderNamespace(\"okxwallet\") !== 'undefined') {\n        return true;\n    }\n    return false;\n}\nfunction getWindowProviderNamespace(namespace) {\n    const providerSearch = (provider, namespace) => {\n        const [property, ...path] = namespace.split('.');\n        const _provider = provider[property];\n        if (_provider) {\n            if (path.length === 0)\n                return _provider;\n            return providerSearch(_provider, path.join('.'));\n        }\n    };\n    if (typeof window !== 'undefined')\n        return providerSearch(window, namespace);\n}\nexports.Eip55Methods = [\n    \"personal_sign\",\n    \"eth_signTypedData_v4\",\n    \"eth_sendTransaction\",\n    \"wallet_addEthereumChain\",\n    \"wallet_watchAsset\",\n    \"wallet_switchEthereumChain\",\n    \"eth_requestAccounts\",\n    \"eth_accounts\",\n    \"eth_chainId\"\n];\nexports.SOLANAMethods = [\n    \"solana_signTransaction\",\n    \"solana_signMessage\",\n    \"solana_signAllTransactions\",\n    \"solana_signAndSendTransaction\"\n];\nexports.AptosMethods = [\n    \"aptos_signMessage\",\n    \"aptos_signTransaction\",\n    \"aptos_signAndSubmitTransaction\"\n];\nexports.TONMethods = [\n    \"ton_sendTransaction\",\n];\nexports.SuiMethods = [\n    \"sui_signMessage\",\n    \"sui_signPersonalMessage\",\n    \"sui_signTransactionBlock\",\n    \"sui_signAndExecuteTransactionBlock\"\n];\nexports.BtcMethods = [\n    \"btc_signMessage\",\n    \"btc_signPsbts\",\n    \"btc_send\",\n    \"btc_sendInscription\",\n    \"btc_signAndPushPsbt\",\n    \"btc_inscribeTransfer\",\n    \"btc_sendRunes\"\n];\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./InjectUtils\"), exports);\n__exportStar(require(\"./provider\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AptosProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nconst media_1 = require(\"../../utils/media\");\nclass AptosProvider {\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                (0, utils_1.logDebug)(\"AptosProvider send request:\", (0, utils_1.safeJsonStringify)(request));\n                yield this.restoreConnect();\n                const method = request.method;\n                let result;\n                switch (method) {\n                    case \"aptos_signMessage\":\n                        {\n                            if (request.injectParams) {\n                                let message = yield window.okxwallet.aptos.signMessage(request.injectParams);\n                                result = {\n                                    method: request.method,\n                                    result: message.signature,\n                                };\n                                (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                                return result;\n                            }\n                            else {\n                                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                            }\n                        }\n                        break;\n                    case \"aptos_signTransaction\":\n                        {\n                            (0, utils_1.logDebug)(\"AptosProvider Method>>>> :\", method);\n                            let message = yield window.okxwallet.aptos.signTransaction(request.params);\n                            result = {\n                                method: request.method,\n                                result: message,\n                            };\n                            (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                            return result;\n                        }\n                        break;\n                    case \"aptos_signAndSubmitTransaction\":\n                        {\n                            (0, utils_1.logDebug)(\"AptosProvider Method>>>> :\", method);\n                            let message = yield window.okxwallet.aptos.signAndSubmitTransaction(request.params);\n                            result = {\n                                method: request.method,\n                                result: message.hash,\n                            };\n                            (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                            return result;\n                        }\n                        break;\n                    default:\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, ` method: '${method}'`);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"AptosProvider send error:\", error);\n                throw error;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    disconnect() {\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return window.okxwallet.aptos.connect();\n        }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let connectChain = [];\n            connectWalletNameSpace.forEach(item => {\n                if (item.namespace === protocol_1.NameSpaceKeyAptos) {\n                    connectChain.push(...item.chains);\n                }\n            });\n            let addresses = [];\n            let extra = {};\n            (0, utils_1.logDebug)(\"AptosProvider parseConnectResponse connectChain\", JSON.stringify(connectChain));\n            connectChain.forEach((chainStr) => {\n                let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                    return (addressItem.chainId === \"637\" && addressItem.coinType === 637) || (addressItem.namespaceChainId === chainStr);\n                });\n                if (selectedAddress) {\n                    addresses.push(chainStr + \":\" + selectedAddress.address);\n                    extra[chainStr] = {\n                        publicKey: selectedAddress.publicKey\n                    };\n                }\n            });\n            (0, utils_1.logDebug)(\"AptosProvider parseConnectResponse addresses\", JSON.stringify(addresses));\n            if (addresses && addresses.length > 0) {\n                let nameSpaceResponse = {\n                    namespace: protocol_1.NameSpaceKeyAptos,\n                    addresses: addresses,\n                    methods: [...InjectUtils_1.AptosMethods],\n                    extra: extra\n                };\n                return nameSpaceResponse;\n            }\n            return undefined;\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return window.okxwallet.aptos.connect();\n        });\n    }\n    singleConnect() {\n        return this.connect();\n    }\n}\nexports.AptosProvider = AptosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass SolProvider {\n    // TOOD\n    // 问题: 是否需要切链  不切链, 主网 测试网络  sonic 如何区别\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                yield this.restoreConnect();\n                (0, utils_1.logDebug)(\"SolProvider send request:\", JSON.stringify(request));\n                const method = request.method;\n                let result;\n                if (request.injectParams) {\n                    switch (method) {\n                        case \"solana_signMessage\":\n                            {\n                                if (request.injectParams && typeof request.injectParams === 'object' && 'message' in request.injectParams) {\n                                    var message = (_a = request.injectParams) === null || _a === void 0 ? void 0 : _a.message;\n                                    const encodedMessage = new TextEncoder().encode(message);\n                                    const signedMessage = yield window.okxwallet.solana.signMessage(encodedMessage, \"utf8\");\n                                    result = {\n                                        method: request.method,\n                                        result: bs58_1.default.encode(signedMessage.signature),\n                                    };\n                                    (0, utils_1.logDebug)(\"SolProvider send result:\", JSON.stringify(signedMessage));\n                                    return result;\n                                }\n                                else {\n                                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                                }\n                            }\n                            break;\n                        case \"solana_signTransaction\":\n                            {\n                                let bufferResult = yield window.okxwallet.solana.signTransaction(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send bufferResult:\", JSON.stringify(bufferResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: bufferResult,\n                                };\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                                return result;\n                            }\n                            break;\n                        case \"solana_signAllTransactions\":\n                            {\n                                let allResult = yield window.okxwallet.solana.signAllTransactions(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(allResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: allResult,\n                                };\n                                return result;\n                            }\n                            break;\n                        case \"solana_signAndSendTransaction\":\n                            {\n                                var signAndSendResult = yield window.okxwallet.solana.signAndSendTransaction(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(signAndSendResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: signAndSendResult,\n                                };\n                                return result;\n                            }\n                            break;\n                        default:\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, `method: '${method}'`);\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"SolProvider send error:\", error);\n                throw error;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    disconnect() {\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return this.connect();\n        }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let connectChain = [];\n            connectWalletNameSpace.forEach(item => {\n                if (item.namespace === protocol_1.NameSpaceKeySOL) {\n                    connectChain.push(...item.chains);\n                }\n            });\n            let addresses = [];\n            let extra = {};\n            let accounts = {};\n            // if (!isDevice(\"mobile\")){\n            //      accounts = await window.okxwallet.solana.connect()\n            //     logDebug(\"parseConnectResponse solana.connect() :\",JSON.stringify(accounts))\n            // }\n            connectChain.forEach((chainStr) => {\n                let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                    return (addressItem.chainId === \"501\" && addressItem.coinType === 501)\n                        || (addressItem.namespaceChainId === chainStr);\n                });\n                if (selectedAddress) {\n                    addresses.push(chainStr + \":\" + selectedAddress.address);\n                    if (accounts && \"publicKey\" in accounts) {\n                        extra[chainStr] = accounts;\n                    }\n                    else {\n                        extra[chainStr] = {\n                            publicKey: selectedAddress.publicKey\n                        };\n                    }\n                }\n            });\n            if (addresses && addresses.length > 0) {\n                let nameSpaceResponse = {\n                    namespace: protocol_1.NameSpaceKeySOL,\n                    addresses: addresses,\n                    methods: [...InjectUtils_1.SOLANAMethods],\n                    extra: extra\n                };\n                (0, utils_1.logDebug)(\"parseConnectResponse nameSpaceResponse :\", JSON.stringify(nameSpaceResponse));\n                return nameSpaceResponse;\n            }\n            return undefined;\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return window.okxwallet.solana.connect();\n        });\n    }\n    singleConnect() {\n        return this.connect();\n    }\n}\nexports.SolProvider = SolProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TONProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass TONProvider {\n    constructor() {\n        this.signalChainConnectResult = undefined;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                (0, utils_1.logDebug)(\"TONProvider send request:\", (0, utils_1.safeJsonStringify)(request));\n                // await this.restoreConnect()//To initialize data in Discover\n                let tonParams = null;\n                switch (request.method) {\n                    case \"ton_sendTransaction\":\n                        if (request.params) {\n                            tonParams = {\n                                method: \"sendTransaction\",\n                                params: [JSON.stringify(request.params)],\n                                id: Date.now().toString()\n                            };\n                            (0, utils_1.logDebug)(\"TONProvider tonParams first:\", JSON.stringify(tonParams));\n                        }\n                        break;\n                    default:\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n                if (tonParams) {\n                    const resultMe = yield window.okxTonWallet.tonconnect.send(tonParams);\n                    (0, utils_1.logDebug)(\"TONProvider send request result:\", (0, utils_1.safeJsonStringify)(resultMe));\n                    if (resultMe.error) {\n                        throw new protocol_1.OKXConnectError(resultMe.error.code, resultMe.error.message);\n                    }\n                    return {\n                        result: resultMe.result,\n                        method: request.method,\n                    };\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"TONProvider encountered an error:\", error);\n                throw error;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    restoreConnect() {\n        // if (isDevice(\"mobile\") && window.okxTonWallet){\n        //     return  window.okxTonWallet.tonconnect.restoreConnection()\n        // }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeyTON) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                connectChain.forEach((chainStr) => {\n                    let currentChain = (0, utils_1.getChainId)(chainStr);\n                    let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                        return (addressItem.chainId === \"607\" && addressItem.coinType === 607)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                    if (selectedAddress) {\n                        addresses.push(chainStr + \":\" + selectedAddress.address);\n                        extra[chainStr] = {\n                            publicKey: selectedAddress.publicKey\n                        };\n                    }\n                });\n                (0, utils_1.logDebug)(\"tonprovider parseConnectResponse needPop and addresses: \", needPop, JSON.stringify(addresses));\n                if (addresses && addresses.length > 0) {\n                    let tonItem = connectWalletNameSpace.find(tonItem => {\n                        return tonItem.namespace === protocol_1.NameSpaceKeyTON;\n                    });\n                    (0, utils_1.logDebug)(\"tonprovider parseConnectResponse ton: \", JSON.stringify(tonItem));\n                    let tonResult = undefined;\n                    if (tonItem && tonItem.params && dappInfo && dappInfo.manifestUrl) {\n                        this.dappInfo = dappInfo;\n                        let itmes = [tonItem.params.ton_addr];\n                        let params = {\n                            manifestUrl: dappInfo.manifestUrl,\n                            items: itmes\n                        };\n                        let needProof = needPop || accountChange;\n                        if (needProof && tonItem.params.ton_proof) {\n                            itmes.push(tonItem.params.ton_proof);\n                        }\n                        (0, utils_1.logDebug)(\"parseConnectResponse ton connect params: \", JSON.stringify(params));\n                        if ((0, media_1.isDevice)(\"mobile\")) {\n                            tonResult = (yield window.okxTonWallet.tonconnect.connect(2, params));\n                        }\n                        else {\n                            if (needPop || accountChange) {\n                                tonResult = (yield window.okxTonWallet.tonconnect.connect(2, params));\n                            }\n                            else {\n                                //No proof is needed here, the result is only used for address verification\n                                tonResult = (yield window.okxTonWallet.tonconnect.restoreConnection());\n                            }\n                        }\n                    }\n                    else {\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"manifestUrl is nil\");\n                    }\n                    if (signalChain && this.signalChainConnectResult) {\n                        tonResult = this.signalChainConnectResult;\n                        this.signalChainConnectResult = undefined;\n                    }\n                    (0, utils_1.logDebug)(\"parseConnectResponse ton connect result: \", JSON.stringify(tonResult));\n                    if (tonResult && tonItem) {\n                        if (tonResult.event === \"connect_error\") {\n                            throw new protocol_1.OKXConnectError(tonResult.payload.code, tonResult.payload.message);\n                        }\n                        else {\n                            let ton_addr = tonResult.payload.items.find(item => item.name === \"ton_addr\");\n                            let ton_proof = tonResult.payload.items.find(item => item.name === \"ton_proof\");\n                            (0, utils_1.logDebug)(\"tonprovider connect isSignalChain: \", signalChain);\n                            let nameSpaceResponse = {\n                                namespace: protocol_1.NameSpaceKeyTON,\n                                addresses: addresses,\n                                methods: [...InjectUtils_1.TONMethods],\n                                extra: extra,\n                                data: {\n                                    ton_addr: ton_addr,\n                                    ton_proof: ton_proof,\n                                    manifestUrl: dappInfo.manifestUrl\n                                }\n                            };\n                            return nameSpaceResponse;\n                        }\n                    }\n                }\n                return undefined;\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"tonprovider parseConnectResponse error: \", JSON.stringify(error));\n                throw error;\n            }\n        });\n    }\n    connect(nameSpace, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (nameSpace && dappInfo && dappInfo.manifestUrl && nameSpace.params) {\n                this.dappInfo = dappInfo;\n                let itmes = [nameSpace.params.ton_addr];\n                let params = {\n                    manifestUrl: dappInfo.manifestUrl,\n                    items: itmes\n                };\n                if (nameSpace.params.ton_proof) {\n                    itmes.push(nameSpace.params.ton_proof);\n                }\n                (0, utils_1.logDebug)(\"tonprovider connect params: \", JSON.stringify(params));\n                try {\n                    let tonResult = yield window.okxTonWallet.tonconnect.connect(2, params);\n                    (0, utils_1.logDebug)(\"tonprovider connect tonResult: \", JSON.stringify(tonResult));\n                    this.signalChainConnectResult = tonResult;\n                    return tonResult;\n                }\n                catch (error) {\n                    (0, utils_1.logDebug)(\"tonprovider connect error: \", JSON.stringify(error));\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"tonconnect error\");\n                }\n            }\n            else {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"manifestUrl or params is nil\");\n            }\n        });\n    }\n    singleConnect(nameSpace, dappInfo) {\n        return this.connect(nameSpace, dappInfo);\n    }\n}\nexports.TONProvider = TONProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BtcProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nconst media_1 = require(\"../../utils/media\");\nclass BtcProvider {\n    connect(chain) {\n        return this.getOKXWallet(chain).connect();\n    }\n    getOKXWallet(chain) {\n        switch (chain) {\n            case protocol_1.BTC_CHAINS.MAINNET:\n                return window.okxwallet.bitcoin;\n            case protocol_1.BTC_CHAINS.FRACTAL:\n                return window.okxwallet.fractalBitcoin;\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, \"Incorrect chain ID when getOKXWallet\");\n    }\n    connectReady() {\n        return true;\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeyBtc) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                if (connectChain.length == 0) {\n                    return undefined;\n                }\n                const findAddress = (addresses, chainStr) => {\n                    return addresses.find((addressItem) => {\n                        const matchCoin = (addressItem.name === 'bitcoin' && chainStr === protocol_1.BTC_CHAINS.MAINNET)\n                            || (addressItem.name === 'fractalbitcoin' && chainStr === protocol_1.BTC_CHAINS.FRACTAL);\n                        return (addressItem.coinType === 0 && matchCoin)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                };\n                const processChain = (chainStr) => __awaiter(this, void 0, void 0, function* () {\n                    let selectedAddress = findAddress(connectRequestWalletResponse.address, chainStr);\n                    if (!selectedAddress)\n                        return;\n                    let accounts = yield this.connect(chainStr);\n                    addresses.push(chainStr + \":\" + selectedAddress.address);\n                    extra[chainStr] = {\n                        publicKey: accounts.publicKey,\n                        compressedPublicKey: accounts.compressedPublicKey\n                    };\n                });\n                const promises = connectChain.map(processChain);\n                yield Promise.all(promises);\n                if (addresses && addresses.length > 0) {\n                    let nameSpaceResponse = {\n                        namespace: protocol_1.NameSpaceKeyBtc,\n                        addresses: addresses,\n                        methods: [...InjectUtils_1.BtcMethods],\n                        extra: extra\n                    };\n                    return nameSpaceResponse;\n                }\n                return undefined;\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    restoreConnect(chain) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if ((0, media_1.isDevice)(\"mobile\")) {\n                return this.connect(chain);\n            }\n            return Promise.resolve();\n        });\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                (0, utils_1.logDebug)(\"btcProvider send request:\", JSON.stringify(request));\n                const method = request.method;\n                const chain = request.chainId;\n                yield this.restoreConnect(chain);\n                let result;\n                if (request.params) {\n                    switch (method) {\n                        case \"btc_signMessage\": {\n                            const { signStr, type } = (request.params || {});\n                            const signature = yield window.okxwallet.bitcoin.signMessage(signStr, type);\n                            return {\n                                method: request.method,\n                                result: signature,\n                            };\n                        }\n                        case \"btc_send\": {\n                            const { from, to, value, satBytes } = (request.params || {});\n                            const hash = yield window.okxwallet.bitcoin.send({ from, to, value, satBytes });\n                            return {\n                                method: request.method,\n                                result: hash,\n                            };\n                        }\n                        case \"btc_signPsbts\": {\n                            const { psbtHexs, options } = (request.params || {});\n                            const signatures = yield window.okxwallet.bitcoin.signPsbts(psbtHexs, options);\n                            return {\n                                method: request.method,\n                                result: (0, utils_1.safeJsonStringify)(signatures),\n                            };\n                        }\n                        case \"btc_signAndPushPsbt\": {\n                            const { psbtHex, options } = (request.params || {});\n                            const signedPsbt = yield window.okxwallet.bitcoin.signPsbt(psbtHex, options);\n                            const hash = yield window.okxwallet.bitcoin.pushPsbt(signedPsbt);\n                            return {\n                                method: request.method,\n                                result: (0, utils_1.safeJsonStringify)({\n                                    signedPsbt: signedPsbt,\n                                    txHash: hash\n                                }),\n                            };\n                        }\n                        case \"btc_sendInscription\": {\n                            const { address, inscriptionId, options } = (request.injectParams || {});\n                            const result = yield window.okxwallet.bitcoin.sendInscription(address, inscriptionId, options);\n                            return {\n                                method: request.method,\n                                result: result,\n                            };\n                        }\n                        // case \"btc_sendRunes\": {\n                        //     const {address,inscriptionId, options} = (request.injectParams || {}) as Record<string, unknown>;\n                        //     // const result = await window.okxwallet.bitcoin.signPsbt(address,inscriptionId,options)\n                        //     // return {\n                        //     //     method: request.method,\n                        //     //     result: result,\n                        //     // };\n                        // }\n                        case \"btc_inscribeTransfer\": {\n                            if ((0, media_1.isDevice)('mobile')) {\n                                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, `method: '${method}'`);\n                            }\n                            const { ticker, amount } = (request.params || {});\n                            const result = yield window.okxwallet.bitcoin.inscribeTransfer(ticker, amount);\n                            return {\n                                method: request.method,\n                                result: result,\n                            };\n                        }\n                        default:\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, `method: '${method}'`);\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, `param is error method: '${method}'`);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"BtcProvider send error:\", error);\n                throw error;\n            }\n        });\n    }\n    singleConnect(itemNameSpace) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (itemNameSpace.chains.length == 1) {\n                return this.connect(itemNameSpace.chains[0]);\n            }\n            return false;\n        });\n    }\n}\nexports.BtcProvider = BtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Eip155Provider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass Eip155Provider {\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                (0, utils_1.logDebug)(\"Eip155Provider send request:\", (0, utils_1.safeJsonStringify)(request));\n                yield this.restoreConnect(); //To initialize data in Discover\n                let ethParams = null;\n                switch (request.method) {\n                    case \"personal_sign\":\n                        if (request.params && \"message\" in request.params) {\n                            ethParams = {\n                                method: request.method,\n                                params: [\n                                    request.params.message,\n                                    request.address,\n                                ],\n                            };\n                        }\n                        break;\n                    case \"eth_sendTransaction\":\n                    case \"wallet_addEthereumChain\":\n                    case \"wallet_switchEthereumChain\":\n                        {\n                            if (request.params) {\n                                ethParams = {\n                                    method: request.method,\n                                    params: [request.params],\n                                };\n                            }\n                        }\n                        break;\n                    case \"eth_signTypedData_v4\":\n                        {\n                            if (request.params && \"typedDataJson\" in request.params && ((_a = request.params) === null || _a === void 0 ? void 0 : _a.typedDataJson) && typeof request.params.typedDataJson === \"string\") {\n                                ethParams = {\n                                    method: request.method,\n                                    params: [\n                                        request.address,\n                                        request.params.typedDataJson,\n                                    ],\n                                };\n                            }\n                        }\n                        break;\n                    case \"wallet_watchAsset\":\n                        {\n                            if (request.params) {\n                                ethParams = {\n                                    method: request.method,\n                                    params: request.params,\n                                };\n                            }\n                        }\n                        break;\n                    default:\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n                if (ethParams) {\n                    // 特殊处理 \"wallet_switchEthereumChain\"\n                    if ((request.method === \"wallet_switchEthereumChain\" || request.method === \"wallet_addEthereumChain\")\n                        && request.params\n                        && \"chainId\" in request.params) {\n                        (0, utils_1.logDebug)(\"Eip155Provider send request switch requestParams:\", (0, utils_1.safeJsonStringify)(ethParams));\n                        const switchChainId = parseInt(request.params.chainId, 16).toString();\n                        yield window.okxwallet.request(ethParams);\n                        const resultSwitch = `eip155:${switchChainId}:${request.address}`;\n                        (0, utils_1.logDebug)(\"Eip155Provider send request switch result:\", resultSwitch);\n                        return {\n                            result: resultSwitch,\n                            method: request.method,\n                        };\n                    }\n                    else {\n                        const chain = (0, utils_1.getChainId)(request.chainId);\n                        const chainHex = `0x${Number(chain).toString(16)}`;\n                        (0, utils_1.logDebug)(\"Eip155Provider current chainId:\", chain, chainHex);\n                        if (chainHex) {\n                            yield window.okxwallet.request({\n                                method: \"wallet_switchEthereumChain\",\n                                params: [{ chainId: chainHex }],\n                            });\n                            (0, utils_1.logDebug)(\"Eip155Provider send request requestParams:\", chainHex, (0, utils_1.safeJsonStringify)(ethParams));\n                            const resultMe = yield window.okxwallet.request(ethParams);\n                            (0, utils_1.logDebug)(\"Eip155Provider send request result:\", (0, utils_1.safeJsonStringify)(resultMe));\n                            return {\n                                result: resultMe,\n                                method: request.method,\n                            };\n                        }\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"Eip155Provider encountered an error:\", error);\n                throw error;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return window.okxwallet.request({ method: 'eth_requestAccounts' });\n        }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeyEip155) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                connectChain.forEach((chainStr) => {\n                    let currentChain = (0, utils_1.getChainId)(chainStr);\n                    let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                        return (addressItem.chainId === currentChain && addressItem.coinType === 60)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                    if (selectedAddress) {\n                        addresses.push(chainStr + \":\" + selectedAddress.address);\n                        extra[chainStr] = {\n                            publicKey: selectedAddress.publicKey\n                        };\n                    }\n                });\n                if (addresses && addresses.length > 0) {\n                    let nameSpaceResponse = {\n                        namespace: protocol_1.NameSpaceKeyEip155,\n                        addresses: addresses,\n                        methods: [...InjectUtils_1.Eip55Methods],\n                        extra: extra\n                    };\n                    return nameSpaceResponse;\n                }\n                return undefined;\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return window.okxwallet.request({ method: 'eth_requestAccounts' });\n        });\n    }\n    singleConnect() {\n        return this.connect();\n    }\n}\nexports.Eip155Provider = Eip155Provider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./eip155Provider\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuiProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass SuiProvider {\n    constructor() {\n        // const GlobalWallet: {\n        //     [key: string]: any;\n        //     register: (wallet: any) => void;\n        // } = {\n        //     register: (wallet) => {\n        //         GlobalWallet[wallet.chainName] = wallet; // 动态添加属性\n        //     },\n        // }\n        // const event = new CustomEvent('wallet-standard:app-ready', { detail: GlobalWallet });\n        // window.dispatchEvent(event);\n        // this.suiWallet = GlobalWallet[\"suiMainnet\"]\n    }\n    connectReady() {\n        return true;\n    }\n    getSuiPublicKey() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const suiAccount = yield this.connect();\n            let publicKey = suiAccount.accounts[0].publicKey;\n            return publicKey;\n        });\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeySui) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                if (connectChain.length == 0) {\n                    return undefined;\n                }\n                const suiPublicKey = yield this.getSuiPublicKey();\n                connectChain.forEach((chainStr) => {\n                    var _a;\n                    let currentChain = (0, utils_1.getChainId)(chainStr);\n                    let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                        return (addressItem.coinType === 784)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                    if (selectedAddress) {\n                        addresses.push(chainStr + \":\" + selectedAddress.address);\n                        extra[chainStr] = {\n                            publicKey: (_a = selectedAddress.publicKey) !== null && _a !== void 0 ? _a : suiPublicKey\n                        };\n                    }\n                });\n                if (addresses && addresses.length > 0) {\n                    let nameSpaceResponse = {\n                        namespace: protocol_1.NameSpaceKeySui,\n                        addresses: addresses,\n                        methods: [...InjectUtils_1.SuiMethods],\n                        extra: extra\n                    };\n                    return nameSpaceResponse;\n                }\n                return undefined;\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return this.connect();\n        }\n        return Promise.resolve();\n    }\n    getSuiWallet() {\n        return window.okxwallet.sui;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.restoreConnect();\n                (0, utils_1.logDebug)(\"suiProvider send request:\", JSON.stringify(request));\n                const method = request.method;\n                let result;\n                if (request.injectParams && this.getSuiWallet()) {\n                    let originalRarams = request.injectParams;\n                    switch (method) {\n                        case \"sui_signTransactionBlock\":\n                            const injectSignResult = yield this.getSuiWallet().features['sui:signTransactionBlock'].signTransactionBlock(originalRarams);\n                            //{transactionBlockBytes: 'AAACAAhmAAAAAAAAAAAgcveY+LcJkCRT1LtVxlZh6eBBVKUGdl…7bLNXSJ4Qz1jZurage0aGdH6Zb+4CAAAAAAAAIAo1AAAAAAAA', hash: '2pxcesyfKVCs3EegDYUDeQ28m3V3tn5VR32aUZSdg3dc', signature: 'ADDzSloxm5wEQX4BaTMJEON9t/xGgZ66ybiy5uT4TUimdl6Q9/…NeA3YOy/QsAD4XwjQ0rSuNkeKyfNy+VZPtJsmnKWswbGHSw=='}\n                            result = {\n                                method: \"sui_signTransactionBlock\",\n                                result: injectSignResult.signature\n                            };\n                            break;\n                        case \"sui_signAndExecuteTransactionBlock\":\n                            const injectSendResult = yield this.getSuiWallet().features['sui:signAndExecuteTransactionBlock'].signAndExecuteTransactionBlock(originalRarams);\n                            result = {\n                                method: \"sui_signAndExecuteTransactionBlock\",\n                                result: injectSendResult.digest\n                            };\n                            break;\n                        case \"sui_signMessage\":\n                            const injectResult = yield this.getSuiWallet().features['sui:signMessage'].signMessage(originalRarams);\n                            result = {\n                                method: \"sui_signMessage\",\n                                result: injectResult.signature\n                            };\n                            break;\n                        case \"sui_signPersonalMessage\":\n                            const injectPersonalResult = yield this.getSuiWallet().features['sui:signPersonalMessage'].signPersonalMessage(originalRarams);\n                            result = {\n                                method: \"sui_signPersonalMessage\",\n                                result: injectPersonalResult.signature\n                            };\n                            break;\n                    }\n                }\n                return result;\n            }\n            catch (e) {\n                (0, utils_1.logDebug)(\"suiProvider send error:\", e);\n                throw e;\n            }\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            return (_a = this.getSuiWallet()) === null || _a === void 0 ? void 0 : _a.features['standard:connect'].connect();\n        });\n    }\n    singleConnect() {\n        return this.connect();\n    }\n}\nexports.SuiProvider = SuiProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NAMES_CHAINS = exports.TON_CHAINS = exports.COSMOS_CHAINS = exports.APTOS_CHAINS = exports.SUI_CHAINS = exports.SOLANA_CHAINS = exports.BTC_CHAINS = void 0;\nconst misc_1 = require(\"./misc\");\nexports.BTC_CHAINS = {\n    MAINNET: 'btc:mainnet',\n    FRACTAL: 'fractal:mainnet',\n};\nexports.SOLANA_CHAINS = {\n    MAINNET: 'solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp',\n    TESTNET: 'solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z',\n    SONIC_TESTNET: 'sonic:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z'\n};\nexports.SUI_CHAINS = {\n    MAINNET: 'sui:mainnet'\n};\nexports.APTOS_CHAINS = {\n    MAINNET: 'aptos:mainnet' // aptos mainnet\n};\nexports.COSMOS_CHAINS = {\n    COSMOS_MAINNET: 'cosmos:cosmoshub-4'\n};\nexports.TON_CHAINS = {\n    MAINNET: 'ton:-239', // mainnet\n};\nexports.NAMES_CHAINS = {\n    [misc_1.NameSpaceKeyBtc]: exports.BTC_CHAINS,\n    [misc_1.NameSpaceKeySOL]: exports.SOLANA_CHAINS,\n    [misc_1.NameSpaceKeyTON]: exports.TON_CHAINS,\n    [misc_1.NameSpaceKeySui]: exports.SUI_CHAINS,\n    [misc_1.NameSpaceKeyAptos]: exports.APTOS_CHAINS,\n    [misc_1.NameSpaceKeyCosmos]: exports.COSMOS_CHAINS\n};\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IEngine = exports.ISignClient = exports.ISignClientEvents = exports.IEngineEvents = void 0;\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nclass IEngineEvents extends eventemitter3_1.default {\n    constructor() {\n        super();\n    }\n}\nexports.IEngineEvents = IEngineEvents;\nclass ISignClientEvents extends eventemitter3_1.default {\n    constructor() {\n        super();\n    }\n}\nexports.ISignClientEvents = ISignClientEvents;\nclass ISignClient {\n    constructor(data) {\n        this.data = data;\n    }\n}\nexports.ISignClient = ISignClient;\nclass IEngine {\n    constructor(client) {\n        this.client = client;\n    }\n}\nexports.IEngine = IEngine;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXWalletName = exports.creatOKXInjectWalletInfo = exports.creatOKXMiniAppWalletInfo = exports.creatOKXWalletInfo = exports.ISignClientEvents = exports.IEngine = exports.IEngineEvents = exports.ISignClient = exports.getBigIntRpcId = exports.formatJsonRpcRequest = exports.isJsonRpcError = exports.isJsonRpcResponse = exports.parseConnectionError = exports.isHttpUrl = exports.formatJsonRpcError = void 0;\nvar json_rpc_1 = require(\"./json-rpc\");\nObject.defineProperty(exports, \"formatJsonRpcError\", { enumerable: true, get: function () { return json_rpc_1.formatJsonRpcError; } });\nObject.defineProperty(exports, \"isHttpUrl\", { enumerable: true, get: function () { return json_rpc_1.isHttpUrl; } });\nObject.defineProperty(exports, \"parseConnectionError\", { enumerable: true, get: function () { return json_rpc_1.parseConnectionError; } });\nObject.defineProperty(exports, \"isJsonRpcResponse\", { enumerable: true, get: function () { return json_rpc_1.isJsonRpcResponse; } });\nObject.defineProperty(exports, \"isJsonRpcError\", { enumerable: true, get: function () { return json_rpc_1.isJsonRpcError; } });\nObject.defineProperty(exports, \"formatJsonRpcRequest\", { enumerable: true, get: function () { return json_rpc_1.formatJsonRpcRequest; } });\nObject.defineProperty(exports, \"getBigIntRpcId\", { enumerable: true, get: function () { return json_rpc_1.getBigIntRpcId; } });\nvar engine_1 = require(\"./engine\");\nObject.defineProperty(exports, \"ISignClient\", { enumerable: true, get: function () { return engine_1.ISignClient; } });\nObject.defineProperty(exports, \"IEngineEvents\", { enumerable: true, get: function () { return engine_1.IEngineEvents; } });\nObject.defineProperty(exports, \"IEngine\", { enumerable: true, get: function () { return engine_1.IEngine; } });\nObject.defineProperty(exports, \"ISignClientEvents\", { enumerable: true, get: function () { return engine_1.ISignClientEvents; } });\n__exportStar(require(\"./ton\"), exports);\nvar wallet_info_1 = require(\"./wallet-info\");\nObject.defineProperty(exports, \"creatOKXWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXWalletInfo; } });\nObject.defineProperty(exports, \"creatOKXMiniAppWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXMiniAppWalletInfo; } });\nObject.defineProperty(exports, \"creatOKXInjectWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXInjectWalletInfo; } });\nObject.defineProperty(exports, \"OKXWalletName\", { enumerable: true, get: function () { return wallet_info_1.OKXWalletName; } });\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isJsonRpcPayload = isJsonRpcPayload;\nexports.isJsonRpcRequest = isJsonRpcRequest;\nexports.isJsonRpcResponse = isJsonRpcResponse;\nexports.isJsonRpcResult = isJsonRpcResult;\nexports.isJsonRpcError = isJsonRpcError;\nexports.payloadId = payloadId;\nexports.getBigIntRpcId = getBigIntRpcId;\nexports.formatJsonRpcRequest = formatJsonRpcRequest;\nexports.formatJsonRpcResult = formatJsonRpcResult;\nexports.formatJsonRpcError = formatJsonRpcError;\nexports.isReservedErrorCode = isReservedErrorCode;\nexports.getError = getError;\nexports.getErrorByCode = getErrorByCode;\nexports.formatErrorMessage = formatErrorMessage;\nexports.isHttpUrl = isHttpUrl;\nexports.isWsUrl = isWsUrl;\nexports.parseConnectionError = parseConnectionError;\nfunction isJsonRpcPayload(payload) {\n    return (typeof payload === \"object\" &&\n        \"id\" in payload &&\n        \"jsonrpc\" in payload &&\n        payload.jsonrpc === \"2.0\");\n}\nfunction isJsonRpcRequest(payload) {\n    return isJsonRpcPayload(payload) && \"method\" in payload;\n}\nfunction isJsonRpcResponse(payload) {\n    return isJsonRpcPayload(payload) && (isJsonRpcResult(payload) || isJsonRpcError(payload));\n}\nfunction isJsonRpcResult(payload) {\n    return \"result\" in payload;\n}\nfunction isJsonRpcError(payload) {\n    return \"error\" in payload;\n}\nconst okx_connect_error_1 = require(\"../error/okx-connect.error\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nclass IncrementalRandomGenerator {\n    constructor(bits) {\n        this.i = 1;\n        const typedArray = bits === 8 ? new Uint8Array(1) : bits === 16 ? new Uint16Array(1) : new Uint32Array(1);\n        if (bits) {\n            this.initialValue = tweetnacl_1.default.randomBytes(bits / 8)[0];\n        }\n        else {\n            this.initialValue = 0;\n        }\n    }\n    getNextValue() {\n        return this.initialValue + this.i++;\n    }\n}\nconst uint8Generator = new IncrementalRandomGenerator(8);\nconst uint16Generator = new IncrementalRandomGenerator(16);\nfunction payloadId() {\n    const date = Date.now() * 1000;\n    const extra = uint8Generator.getNextValue();\n    return date + extra;\n}\nfunction getBigIntRpcId() {\n    const date = BigInt(Date.now()) * BigInt(1000000);\n    const extra = BigInt(uint16Generator.getNextValue());\n    return date + extra;\n}\nfunction formatJsonRpcRequest(method, params, id) {\n    return {\n        id: id || payloadId(),\n        jsonrpc: \"2.0\",\n        method,\n        params,\n    };\n}\nfunction formatJsonRpcResult(id, result) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        result,\n    };\n}\nfunction formatJsonRpcError(id, error, data) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        error: formatErrorMessage(error, data),\n    };\n}\nfunction isReservedErrorCode(code) {\n    return okx_connect_error_1.RESERVED_ERROR_CODES.includes(code);\n}\nfunction getError(type) {\n    if (!Object.keys(okx_connect_error_1.STANDARD_ERROR_MAP).includes(type)) {\n        return okx_connect_error_1.STANDARD_ERROR_MAP[okx_connect_error_1.DEFAULT_ERROR];\n    }\n    return okx_connect_error_1.STANDARD_ERROR_MAP[type];\n}\nfunction getErrorByCode(code) {\n    const match = Object.values(okx_connect_error_1.STANDARD_ERROR_MAP).find((e) => e.code === code);\n    if (!match) {\n        return okx_connect_error_1.STANDARD_ERROR_MAP[okx_connect_error_1.DEFAULT_ERROR];\n    }\n    return match;\n}\nfunction formatErrorMessage(error, data) {\n    if (typeof error === \"undefined\") {\n        return getError(okx_connect_error_1.INTERNAL_ERROR);\n    }\n    if (typeof error === \"string\") {\n        error = Object.assign(Object.assign({}, getError(okx_connect_error_1.SERVER_ERROR)), { message: error });\n    }\n    if (typeof data !== \"undefined\") {\n        error.data = data;\n    }\n    if (isReservedErrorCode(error.code)) {\n        error = getErrorByCode(error.code);\n    }\n    return error;\n}\nfunction getUrlProtocol(url) {\n    const matches = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!matches || !matches.length)\n        return;\n    return matches[0];\n}\nfunction matchRegexProtocol(url, regex) {\n    const protocol = getUrlProtocol(url);\n    if (typeof protocol === \"undefined\")\n        return false;\n    return new RegExp(regex).test(protocol);\n}\nfunction isHttpUrl(url) {\n    return matchRegexProtocol(url, \"^https?:\");\n}\nfunction isWsUrl(url) {\n    return matchRegexProtocol(url, \"^wss?:\");\n}\nfunction parseConnectionError(e, url, type) {\n    return e.message.includes(\"getaddrinfo ENOTFOUND\") || e.message.includes(\"connect ECONNREFUSED\")\n        ? new Error(`Unavailable ${type} RPC url at ${url}`)\n        : e;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_ITEM_ERROR_CODES = void 0;\nvar CONNECT_ITEM_ERROR_CODES;\n(function (CONNECT_ITEM_ERROR_CODES) {\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(CONNECT_ITEM_ERROR_CODES || (exports.CONNECT_ITEM_ERROR_CODES = CONNECT_ITEM_ERROR_CODES = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TONCHAIN = void 0;\nvar TONCHAIN;\n(function (TONCHAIN) {\n    TONCHAIN[\"MAINNET\"] = \"-239\";\n})(TONCHAIN || (exports.TONCHAIN = TONCHAIN = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_ITEM_ERROR_CODES = exports.TONCHAIN = void 0;\nvar connect_wallet_1 = require(\"./connect-wallet\");\nObject.defineProperty(exports, \"TONCHAIN\", { enumerable: true, get: function () { return connect_wallet_1.TONCHAIN; } });\nvar connect_event_1 = require(\"./connect-event\");\nObject.defineProperty(exports, \"CONNECT_ITEM_ERROR_CODES\", { enumerable: true, get: function () { return connect_event_1.CONNECT_ITEM_ERROR_CODES; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXInjectWalletName = exports.OKXMiniWalletName = exports.OKXWalletName = void 0;\nexports.creatOKXWalletInfo = creatOKXWalletInfo;\nexports.creatOKXMiniAppWalletInfo = creatOKXMiniAppWalletInfo;\nexports.creatOKXInjectWalletInfo = creatOKXInjectWalletInfo;\nexports.OKXWalletName = \"OKX Wallet\";\nexports.OKXMiniWalletName = \"OKX Mini Wallet\";\nexports.OKXInjectWalletName = \"OKX Inject Wallet\";\nfunction creatOKXWalletInfo() {\n    return {\n        \"appName\": \"okxAppWallet\",\n        \"name\": exports.OKXWalletName,\n        \"imageUrl\": \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\"\n    };\n}\nfunction creatOKXMiniAppWalletInfo() {\n    return {\n        \"appName\": \"okxMiniApp\",\n        \"name\": exports.OKXMiniWalletName,\n        \"imageUrl\": \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\"\n    };\n}\nfunction creatOKXInjectWalletInfo() {\n    return {\n        \"appName\": \"okxInjectWallet\",\n        \"name\": exports.OKXInjectWalletName,\n        \"imageUrl\": \"\"\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_MINI_WALLET_NAME = exports.OKX_APP_WALLET_NAME = exports.stackDeepLink = exports.tgwalletAppName = exports.tgwalletName = exports.tonConnectSdkVersion = exports.shortUniversalLink = exports.standardDeeplink = exports.downloadUrl = exports.standardUniversalLink = exports.okxDeeplink = void 0;\nexports.getTestTwaUrl = getTestTwaUrl;\nexports.getTestTgTwaUrl = getTestTgTwaUrl;\nexports.getBotNameAndAppName = getBotNameAndAppName;\nexports.okxDeeplink = 'okx://web3';\nexports.standardUniversalLink = typeof window !== \"undefined\" && window.location.hostname.includes(\"okx.com\")\n    ? \"https://link.okx.com/download\"\n    : \"https://www.okx.com/download\";\nexports.downloadUrl = \"https://www.okx.com/download\";\n// export const standardUniversalLink = 'http://localhost:5173';\nexports.standardDeeplink = `${exports.okxDeeplink}/wallet/connect`;\nexports.shortUniversalLink = `https://www.okx.com/ul/connect`;\n// export const standardDeeplink = 'http://localhost:5173';\nexports.tonConnectSdkVersion = '1';\n// export const tgwalletName: string = \"TCTestqdqwdqwdqBot\"\nexports.tgwalletName = \"OKX_WALLET_BOT\";\nexports.tgwalletAppName = \"start\";\n// https://t.me/OKX_WALLET_BOT/start\nexports.stackDeepLink = 'okx://web3?stack=true';\nfunction getTestTwaUrl() {\n    return window.okxTesttwaUrl;\n}\nfunction getTestTgTwaUrl() {\n    return window.okxTestTgtwaUrl;\n}\nfunction getBotNameAndAppName(url) {\n    const urlObj = new URL(url);\n    const pathnameParts = urlObj.pathname.split('/').filter(Boolean);\n    if (pathnameParts.length >= 2) {\n        const botName = pathnameParts[0]; // 获取 'test_12312313123_bot'\n        const appName = pathnameParts[1]; // 获取 'testtest'\n        return { botName, appName };\n    }\n}\nexports.OKX_APP_WALLET_NAME = 'OKX Wallet';\nexports.OKX_MINI_WALLET_NAME = 'OKX Mini Wallet';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_CONNECT_ERROR_CODES = exports.OKXConnectError = void 0;\nvar okx_connect_error_1 = require(\"./okx-connect.error\");\nObject.defineProperty(exports, \"OKXConnectError\", { enumerable: true, get: function () { return okx_connect_error_1.OKXConnectError; } });\nObject.defineProperty(exports, \"OKX_CONNECT_ERROR_CODES\", { enumerable: true, get: function () { return okx_connect_error_1.OKX_CONNECT_ERROR_CODES; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_ERROR = exports.STANDARD_ERROR_MAP = exports.SERVER_ERROR_CODE_RANGE = exports.RESERVED_ERROR_CODES = exports.SERVER_ERROR = exports.INTERNAL_ERROR = exports.INVALID_PARAMS = exports.METHOD_NOT_FOUND = exports.INVALID_REQUEST = exports.PARSE_ERROR = exports.OKX_CONNECT_ERROR_CODES = exports.OKXConnectError = void 0;\nclass OKXConnectError extends Error {\n    constructor(code, message) {\n        if (message == undefined) {\n            message = getDefaultMessageByCode(code);\n        }\n        super(message);\n        this.code = code;\n        this.message = `${OKXConnectError.prefix} ${message ? '\\n' + message : ''}`;\n        Object.setPrototypeOf(this, OKXConnectError.prototype);\n    }\n    toJSON() {\n        return {\n            message: this.message,\n            code: this.code\n        };\n    }\n}\nexports.OKXConnectError = OKXConnectError;\nOKXConnectError.prefix = '[OKX_CONNECT_SDK_ERROR]';\nfunction getDefaultMessageByCode(code) {\n    if (code == OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR) {\n        return \"unknown error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR) {\n        return \"bad request error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.ALREADY_CONNECTED_ERROR) {\n        return \"already connected error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR) {\n        return \"not connected error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.UNKNOWN_APP_ERROR) {\n        return \"unknown app error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n        return \"user rejects error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR_CAUSE_REGISTER) {\n        return \"wallet address are registering\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED) {\n        return \"method not supported\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.CONNECTION_ERROR) {\n        return \"connect error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED) {\n        return \"chain not supported\";\n    }\n    return \"unknown error\";\n}\nvar OKX_CONNECT_ERROR_CODES;\n(function (OKX_CONNECT_ERROR_CODES) {\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"BAD_REQUEST_ERROR\"] = 1] = \"BAD_REQUEST_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"ALREADY_CONNECTED_ERROR\"] = 11] = \"ALREADY_CONNECTED_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"NOT_CONNECTED_ERROR\"] = 12] = \"NOT_CONNECTED_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"UNKNOWN_APP_ERROR\"] = 100] = \"UNKNOWN_APP_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"USER_REJECTS_ERROR\"] = 300] = \"USER_REJECTS_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"USER_REJECTS_ERROR_CAUSE_REGISTER\"] = 301] = \"USER_REJECTS_ERROR_CAUSE_REGISTER\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"CHAIN_NOT_SUPPORTED\"] = 500] = \"CHAIN_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"WALLET_NOT_SUPPORTED\"] = 600] = \"WALLET_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"CONNECTION_ERROR\"] = 700] = \"CONNECTION_ERROR\";\n})(OKX_CONNECT_ERROR_CODES || (exports.OKX_CONNECT_ERROR_CODES = OKX_CONNECT_ERROR_CODES = {}));\nexports.PARSE_ERROR = \"PARSE_ERROR\";\nexports.INVALID_REQUEST = \"INVALID_REQUEST\";\nexports.METHOD_NOT_FOUND = \"METHOD_NOT_FOUND\";\nexports.INVALID_PARAMS = \"INVALID_PARAMS\";\nexports.INTERNAL_ERROR = \"INTERNAL_ERROR\";\nexports.SERVER_ERROR = \"SERVER_ERROR\";\nexports.RESERVED_ERROR_CODES = [-32700, -32600, -32601, -32602, -32603];\nexports.SERVER_ERROR_CODE_RANGE = [-32000, -32099];\nexports.STANDARD_ERROR_MAP = {\n    [exports.PARSE_ERROR]: { code: -32700, message: \"Parse error\" },\n    [exports.INVALID_REQUEST]: { code: -32600, message: \"Invalid Request\" },\n    [exports.METHOD_NOT_FOUND]: { code: -32601, message: \"Method not found\" },\n    [exports.INVALID_PARAMS]: { code: -32602, message: \"Invalid params\" },\n    [exports.INTERNAL_ERROR]: { code: -32603, message: \"Internal error\" },\n    [exports.SERVER_ERROR]: { code: -32000, message: \"Server error\" },\n};\nexports.DEFAULT_ERROR = exports.SERVER_ERROR;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NAMES_CHAINS = exports.TON_CHAINS = exports.COSMOS_CHAINS = exports.APTOS_CHAINS = exports.SUI_CHAINS = exports.SOLANA_CHAINS = exports.BTC_CHAINS = exports.downloadUrl = exports.okxDeeplink = exports.tonConnectSdkVersion = exports.standardDeeplink = exports.standardUniversalLink = exports.NameSpaceKeyStarknet = exports.NameSpaceKeyTron = exports.NameSpaceKeyCosmos = exports.NameSpaceKeyAptos = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.NameSpaceKeyTON = exports.NameSpaceKeySOL = exports.NameSpaceKeyEip155 = void 0;\n__exportStar(require(\"./error\"), exports);\nvar misc_1 = require(\"./misc\");\nObject.defineProperty(exports, \"NameSpaceKeyEip155\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyEip155; } });\nObject.defineProperty(exports, \"NameSpaceKeySOL\", { enumerable: true, get: function () { return misc_1.NameSpaceKeySOL; } });\nObject.defineProperty(exports, \"NameSpaceKeyTON\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyTON; } });\nObject.defineProperty(exports, \"NameSpaceKeySui\", { enumerable: true, get: function () { return misc_1.NameSpaceKeySui; } });\nObject.defineProperty(exports, \"NameSpaceKeyBtc\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyBtc; } });\nObject.defineProperty(exports, \"NameSpaceKeyAptos\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyAptos; } });\nObject.defineProperty(exports, \"NameSpaceKeyCosmos\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyCosmos; } });\nObject.defineProperty(exports, \"NameSpaceKeyTron\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyTron; } });\nObject.defineProperty(exports, \"NameSpaceKeyStarknet\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyStarknet; } });\nvar constants_1 = require(\"./constants\");\nObject.defineProperty(exports, \"standardUniversalLink\", { enumerable: true, get: function () { return constants_1.standardUniversalLink; } });\nObject.defineProperty(exports, \"standardDeeplink\", { enumerable: true, get: function () { return constants_1.standardDeeplink; } });\nObject.defineProperty(exports, \"tonConnectSdkVersion\", { enumerable: true, get: function () { return constants_1.tonConnectSdkVersion; } });\nObject.defineProperty(exports, \"okxDeeplink\", { enumerable: true, get: function () { return constants_1.okxDeeplink; } });\nObject.defineProperty(exports, \"downloadUrl\", { enumerable: true, get: function () { return constants_1.downloadUrl; } });\n__exportStar(require(\"./connect\"), exports);\nvar chains_1 = require(\"./chains\");\nObject.defineProperty(exports, \"BTC_CHAINS\", { enumerable: true, get: function () { return chains_1.BTC_CHAINS; } });\nObject.defineProperty(exports, \"SOLANA_CHAINS\", { enumerable: true, get: function () { return chains_1.SOLANA_CHAINS; } });\nObject.defineProperty(exports, \"SUI_CHAINS\", { enumerable: true, get: function () { return chains_1.SUI_CHAINS; } });\nObject.defineProperty(exports, \"APTOS_CHAINS\", { enumerable: true, get: function () { return chains_1.APTOS_CHAINS; } });\nObject.defineProperty(exports, \"COSMOS_CHAINS\", { enumerable: true, get: function () { return chains_1.COSMOS_CHAINS; } });\nObject.defineProperty(exports, \"TON_CHAINS\", { enumerable: true, get: function () { return chains_1.TON_CHAINS; } });\nObject.defineProperty(exports, \"NAMES_CHAINS\", { enumerable: true, get: function () { return chains_1.NAMES_CHAINS; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NameSpaceKeyStarknet = exports.NameSpaceKeyTron = exports.NameSpaceKeyCosmos = exports.NameSpaceKeyAptos = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.NameSpaceKeyTON = exports.NameSpaceKeySOL = exports.NameSpaceKeyEip155 = void 0;\nexports.NameSpaceKeyEip155 = \"eip155\";\nexports.NameSpaceKeySOL = \"solana\";\nexports.NameSpaceKeyTON = \"ton\";\nexports.NameSpaceKeySui = \"sui\";\nexports.NameSpaceKeyBtc = \"btc\";\nexports.NameSpaceKeyAptos = \"aptos\";\nexports.NameSpaceKeyCosmos = \"cosmos\";\nexports.NameSpaceKeyTron = \"tron\";\nexports.NameSpaceKeyStarknet = \"starknet\";\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.callForSuccess = callForSuccess;\nexports.delay = delay;\n/**\n * Function to call ton api until we get response.\n * Because ton network is pretty unstable we need to make sure response is final.\n * @param {T} fn - function to call\n * @param {CallForSuccessOptions} [options] - optional configuration options\n */\nfunction callForSuccess(fn, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b;\n        const attempts = (_a = options === null || options === void 0 ? void 0 : options.attempts) !== null && _a !== void 0 ? _a : 3;\n        const delayMs = (_b = options === null || options === void 0 ? void 0 : options.delayMs) !== null && _b !== void 0 ? _b : 800;\n        if (typeof fn !== 'function') {\n            throw new Error(`Expected a function, got ${typeof fn}`);\n        }\n        let i = 0;\n        let lastError;\n        while (i < attempts) {\n            try {\n                return yield fn();\n            }\n            catch (err) {\n                lastError = err;\n                i++;\n                if (i < attempts) {\n                    yield delay(delayMs);\n                }\n            }\n        }\n        throw lastError;\n    });\n}\n/**\n * Delays the execution of code for a specified number of milliseconds.\n * @param {number} timeout - The number of milliseconds to delay the execution.\n * @param {DelayOptions} [options] - Optional configuration options for the delay.\n * @return {Promise<void>} - A promise that resolves after the specified delay, or rejects if the delay is aborted.\n */\nfunction delay(timeout, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            var _a, _b;\n            if ((_a = options === null || options === void 0 ? void 0 : options.signal) === null || _a === void 0 ? void 0 : _a.aborted) {\n                reject(new Error('Delay aborted'));\n                return;\n            }\n            const timeoutId = setTimeout(() => resolve(), timeout);\n            (_b = options === null || options === void 0 ? void 0 : options.signal) === null || _b === void 0 ? void 0 : _b.addEventListener('abort', () => {\n                clearTimeout(timeoutId);\n                reject(new Error('Delay aborted'));\n            });\n        });\n    });\n}\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getNamespaceKeyByChain = exports.chainName2IdMap = exports.replaceChainIdToChainName = exports.replaceChainNameToChainId = exports.checkMetaData = exports.versionCompare = exports.isBrowser = exports.isOS = exports.isMobileUserAgent = exports.openDeeplinkWithFallback = exports.openLinkBlank = exports.openLink = exports.getChainId = exports.useShortLink = exports.toSafeBase64FromBase64 = exports.isValidObject = exports.isIos = exports.base64decode = exports.base64encode = exports.splitToUint8Arrays = exports.concatUint8Arrays = exports.toHexString = exports.hexToByteArray = exports.getOKXLink = exports.openOKXUniversalLink = exports.getAppWalletShortDeepLink = exports.encodeTWAConnectURLParams = exports.encodeConnectParams = exports.openOKXTMAWalletlinkWithFallback = exports.getTelegramWalletTWAUrl = exports.getAppWalletDeepLink = exports.encodeTelegramUrlParameters = exports.isTelegramUrl = exports.openOKXDeeplinkWithFallback = exports.openOKXDeeplink = exports.getUniversalLink = exports.safeJsonStringify = exports.safeJsonParse = exports.getDefaultReporter = exports.reportEvent = exports.reportLog = exports.logWarning = exports.logError = exports.logDebug = exports.callForSuccess = void 0;\nvar call_for_success_1 = require(\"./call-for-success\");\nObject.defineProperty(exports, \"callForSuccess\", { enumerable: true, get: function () { return call_for_success_1.callForSuccess; } });\nvar log_1 = require(\"./log\");\nObject.defineProperty(exports, \"logDebug\", { enumerable: true, get: function () { return log_1.logDebug; } });\nObject.defineProperty(exports, \"logError\", { enumerable: true, get: function () { return log_1.logError; } });\nObject.defineProperty(exports, \"logWarning\", { enumerable: true, get: function () { return log_1.logWarning; } });\nObject.defineProperty(exports, \"reportLog\", { enumerable: true, get: function () { return log_1.reportLog; } });\nObject.defineProperty(exports, \"reportEvent\", { enumerable: true, get: function () { return log_1.reportEvent; } });\nObject.defineProperty(exports, \"getDefaultReporter\", { enumerable: true, get: function () { return log_1.getDefaultReporter; } });\n__exportStar(require(\"./reportconstants\"), exports);\n__exportStar(require(\"./report\"), exports);\nvar safejson_1 = require(\"./safejson\");\nObject.defineProperty(exports, \"safeJsonParse\", { enumerable: true, get: function () { return safejson_1.safeJsonParse; } });\nObject.defineProperty(exports, \"safeJsonStringify\", { enumerable: true, get: function () { return safejson_1.safeJsonStringify; } });\nvar url_1 = require(\"./url\");\nObject.defineProperty(exports, \"getUniversalLink\", { enumerable: true, get: function () { return url_1.getUniversalLink; } });\nObject.defineProperty(exports, \"openOKXDeeplink\", { enumerable: true, get: function () { return url_1.openOKXDeeplink; } });\nObject.defineProperty(exports, \"openOKXDeeplinkWithFallback\", { enumerable: true, get: function () { return url_1.openOKXDeeplinkWithFallback; } });\nObject.defineProperty(exports, \"isTelegramUrl\", { enumerable: true, get: function () { return url_1.isTelegramUrl; } });\nObject.defineProperty(exports, \"encodeTelegramUrlParameters\", { enumerable: true, get: function () { return url_1.encodeTelegramUrlParameters; } });\nObject.defineProperty(exports, \"getAppWalletDeepLink\", { enumerable: true, get: function () { return url_1.getAppWalletDeepLink; } });\nObject.defineProperty(exports, \"getTelegramWalletTWAUrl\", { enumerable: true, get: function () { return url_1.getTelegramWalletTWAUrl; } });\nObject.defineProperty(exports, \"openOKXTMAWalletlinkWithFallback\", { enumerable: true, get: function () { return url_1.openOKXTMAWalletlinkWithFallback; } });\nObject.defineProperty(exports, \"encodeConnectParams\", { enumerable: true, get: function () { return url_1.encodeConnectParams; } });\nObject.defineProperty(exports, \"encodeTWAConnectURLParams\", { enumerable: true, get: function () { return url_1.encodeTWAConnectURLParams; } });\nObject.defineProperty(exports, \"getAppWalletShortDeepLink\", { enumerable: true, get: function () { return url_1.getAppWalletShortDeepLink; } });\nObject.defineProperty(exports, \"openOKXUniversalLink\", { enumerable: true, get: function () { return url_1.openOKXUniversalLink; } });\nObject.defineProperty(exports, \"getOKXLink\", { enumerable: true, get: function () { return url_1.getOKXLink; } });\nvar utils_1 = require(\"./utils\");\nObject.defineProperty(exports, \"hexToByteArray\", { enumerable: true, get: function () { return utils_1.hexToByteArray; } });\nObject.defineProperty(exports, \"toHexString\", { enumerable: true, get: function () { return utils_1.toHexString; } });\nObject.defineProperty(exports, \"concatUint8Arrays\", { enumerable: true, get: function () { return utils_1.concatUint8Arrays; } });\nObject.defineProperty(exports, \"splitToUint8Arrays\", { enumerable: true, get: function () { return utils_1.splitToUint8Arrays; } });\nObject.defineProperty(exports, \"base64encode\", { enumerable: true, get: function () { return utils_1.base64encode; } });\nObject.defineProperty(exports, \"base64decode\", { enumerable: true, get: function () { return utils_1.base64decode; } });\nObject.defineProperty(exports, \"isIos\", { enumerable: true, get: function () { return utils_1.isIos; } });\nObject.defineProperty(exports, \"isValidObject\", { enumerable: true, get: function () { return utils_1.isValidObject; } });\nObject.defineProperty(exports, \"toSafeBase64FromBase64\", { enumerable: true, get: function () { return utils_1.toSafeBase64FromBase64; } });\nObject.defineProperty(exports, \"useShortLink\", { enumerable: true, get: function () { return utils_1.useShortLink; } });\nObject.defineProperty(exports, \"getChainId\", { enumerable: true, get: function () { return utils_1.getChainId; } });\nvar web_api_1 = require(\"./web-api\");\nObject.defineProperty(exports, \"openLink\", { enumerable: true, get: function () { return web_api_1.openLink; } });\nObject.defineProperty(exports, \"openLinkBlank\", { enumerable: true, get: function () { return web_api_1.openLinkBlank; } });\nObject.defineProperty(exports, \"openDeeplinkWithFallback\", { enumerable: true, get: function () { return web_api_1.openDeeplinkWithFallback; } });\nObject.defineProperty(exports, \"isMobileUserAgent\", { enumerable: true, get: function () { return web_api_1.isMobileUserAgent; } });\nObject.defineProperty(exports, \"isOS\", { enumerable: true, get: function () { return web_api_1.isOS; } });\nObject.defineProperty(exports, \"isBrowser\", { enumerable: true, get: function () { return web_api_1.isBrowser; } });\nvar tma_api_1 = require(\"./tma-api\");\nObject.defineProperty(exports, \"versionCompare\", { enumerable: true, get: function () { return tma_api_1.versionCompare; } });\nvar request_1 = require(\"./request\");\nObject.defineProperty(exports, \"checkMetaData\", { enumerable: true, get: function () { return request_1.checkMetaData; } });\nvar utils_2 = require(\"./utils\");\nObject.defineProperty(exports, \"replaceChainNameToChainId\", { enumerable: true, get: function () { return utils_2.replaceChainNameToChainId; } });\nObject.defineProperty(exports, \"replaceChainIdToChainName\", { enumerable: true, get: function () { return utils_2.replaceChainIdToChainName; } });\nObject.defineProperty(exports, \"chainName2IdMap\", { enumerable: true, get: function () { return utils_2.chainName2IdMap; } });\nObject.defineProperty(exports, \"getNamespaceKeyByChain\", { enumerable: true, get: function () { return utils_2.getNamespaceKeyByChain; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getDefaultReporter = getDefaultReporter;\nexports.logDebug = logDebug;\nexports.logError = logError;\nexports.logWarning = logWarning;\nexports.reportEvent = reportEvent;\nexports.reportLog = reportLog;\nconst debug = false;\nconst forceReport = false;\nconst report_1 = require(\"./report\");\nconst defaultReporter = new report_1.OKXReporter();\nfunction getDefaultReporter() {\n    return defaultReporter;\n}\nconst packageJson = require('../../package.json');\nconst version = packageJson.version;\nfunction logDebug(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.log(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction logError(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.error(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n            if (forceReport || !debug) {\n                let content = '';\n                content += [...args].reduce((result, item) => {\n                    if (typeof item == 'string') {\n                        result += ',' + item;\n                    }\n                    else if (typeof item == 'object') {\n                        result += JSON.stringify(item);\n                    }\n                });\n                defaultReporter.sendRecordContent(content, report_1.OKXReportType.LOG, '');\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction logWarning(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.warn(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction reportEvent(type, action, content) {\n    return __awaiter(this, void 0, void 0, function* () {\n        yield defaultReporter.sendRecordContent(content, type, action);\n    });\n}\nfunction reportLog(content_1) {\n    return __awaiter(this, arguments, void 0, function* (content, action = 'default') {\n        // await defaultReporter.sendRecordContent(content, OKXReportType.LOG, action)\n    });\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mediaNotTouch = exports.mediaTouch = exports.maxWidth = void 0;\nexports.isDevice = isDevice;\nexports.media = media;\nexports.mediaMin = mediaMin;\nexports.mediaMax = mediaMax;\nexports.mediaMinMax = mediaMinMax;\nconst web_api_1 = require(\"../utils/web-api\");\nconst tma_api_1 = require(\"../utils/tma-api\");\nconst url_1 = require(\"./url\");\nconst log_1 = require(\"./log\");\nexports.maxWidth = {\n    mobile: 440,\n    tablet: 1020\n};\nfunction isDevice(device) {\n    var _a;\n    const window = (0, url_1.getWindow)();\n    if (!window) {\n        return device === 'desktop';\n    }\n    // TODO: remove this check when weba will fix viewport width\n    if ((0, tma_api_1.isTmaPlatform)('weba')) {\n        return true;\n    }\n    const width = window.innerWidth;\n    switch (device) {\n        case 'desktop':\n            return width > exports.maxWidth.tablet;\n        case 'tablet':\n            return width > exports.maxWidth.mobile;\n        default:\n        case 'mobile':\n            let isMobile = width <= exports.maxWidth.mobile || (0, web_api_1.isOS)('ios', 'android', 'ipad');\n            if (isMobile) {\n                const isTelegram = !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n                const maxTouchPoints = navigator.maxTouchPoints || 0;\n                if (isTelegram && maxTouchPoints === 0) {\n                    isMobile = false;\n                }\n                (0, log_1.logDebug)(\"isDevice mobile isTelegram and maxTouchPoints:\", isMobile, isTelegram, maxTouchPoints);\n            }\n            return isMobile;\n    }\n}\nfunction media(device) {\n    switch (device) {\n        case 'mobile':\n            return `@media (max-width: ${exports.maxWidth.mobile}px)`;\n        case 'tablet':\n            return `@media (max-width: ${exports.maxWidth.tablet}px) (min-width: ${exports.maxWidth.mobile}px)`;\n        default:\n        case 'desktop':\n            return `@media (min-width: ${exports.maxWidth.tablet}px)`;\n    }\n}\nfunction mediaMin(px) {\n    return `@media (min-width: ${px}px)`;\n}\nfunction mediaMax(px) {\n    return `@media (max-width: ${px}px)`;\n}\nfunction mediaMinMax(pxMin, pxMax) {\n    return `@media (min-width: ${pxMin}px) and (max-width: ${pxMax}px)`;\n}\nexports.mediaTouch = '@media (hover: none)';\nexports.mediaNotTouch = '@media not all and (hover: none)';\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXReporter = exports.OKXReportSide = exports.OKXReportType = exports.versionStr = void 0;\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst log_1 = require(\"./log\");\nconst url_1 = require(\"./url\");\nconst utils_1 = require(\"../utils\");\nconst localforage_1 = __importDefault(require(\"localforage\"));\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nexports.versionStr = '1.7.0';\nconst reportApiList = [\n    'https://www.okx.com/dappstat/wallet-connect',\n    'https://www.okx.ac/dappstat/wallet-connect'\n];\nconst reportCacheKey = 'OKX_RP_CK';\nconst reportUUIDKey = 'OKX_RP_UUID_CK';\nconst MAX_LIMIT_REPORTCOUNT = 100;\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"*/*\",\n    \"Content-Type\": \"text/plain\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\nexports.OKXReportType = {\n    PAGE_IN: 'page_in',\n    PAGE_OUT: 'page_out',\n    CLICK: 'click',\n    LOG: 'log',\n};\nexports.OKXReportSide = {\n    DAPP: 'dapp',\n    WALLET: 'wallet',\n};\nclass IReporter {\n}\nconst fetchWithTimeout = (url, options, timeout = 5000) => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n    const fetchPromise = (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, options), { signal }));\n    const timeoutPromise = new Promise((_, reject) => setTimeout(() => {\n        controller.abort();\n        reject(new Error('Request timed out'));\n    }, timeout));\n    return Promise.race([fetchPromise, timeoutPromise]);\n};\nconst fetchListWithTimeout = (urls_1, ...args_1) => __awaiter(void 0, [urls_1, ...args_1], void 0, function* (urls, options = {}, timeout = 5000) {\n    for (const url of urls) {\n        try {\n            const controller = new AbortController();\n            const signal = controller.signal;\n            const fetchPromise = (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, options), { signal }));\n            const timeoutPromise = new Promise((_, reject) => setTimeout(() => {\n                controller.abort();\n                reject(new Error('Request timed out'));\n            }, timeout));\n            const response = yield Promise.race([fetchPromise, timeoutPromise]);\n            if (response.ok) {\n                return response;\n            }\n            if (response.status == 502) {\n                console.error(`Fetch error status 502`, url);\n                return response;\n            }\n        }\n        catch (error) {\n            console.error(`Fetch error for ${url}:`, error);\n        }\n    }\n    console.error(`'All fetch attempts failed.'`);\n    throw new Error('All fetch attempts failed.');\n});\nclass OKXReporter {\n    constructor() {\n        this.currentSide = exports.OKXReportSide.DAPP;\n        this.currentVersion = exports.versionStr;\n        this.storage = localforage_1.default.createInstance({\n            name: \"OKXReporter\"\n        });\n        this.recordList = new Array();\n        this.currentUUID = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(16));\n    }\n    configVersionAndSide(version, side, appname) {\n        this.currentVersion = version;\n        this.currentSide = side;\n        this.appName = appname;\n    }\n    get recordCacheKey() {\n        return reportCacheKey + \"@\" + this.appName;\n    }\n    get reportPlatform() {\n        if ((0, utils_1.isMobileUserAgent)()) {\n            if ((0, utils_1.isIos)()) {\n                return 'iOS';\n            }\n            else {\n                return 'android';\n            }\n        }\n        else {\n            return 'pc';\n        }\n    }\n    beginReport() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.startErrorCatching();\n            let records = yield this.storage.getItem(this.recordCacheKey);\n            let uuid = yield this.storage.getItem(reportUUIDKey);\n            if (uuid) {\n                this.currentUUID = uuid;\n            }\n            else {\n                this.storage.setItem(reportUUIDKey, this.currentUUID);\n            }\n            if (records) {\n                this.recordList = records;\n                (0, log_1.logDebug)('resume records from cache length: ', this.recordList.length);\n                yield this.sendCachedRecords();\n            }\n        });\n    }\n    startErrorCatching() {\n        let window = (0, url_1.getWindow)();\n        if (window) {\n            (0, log_1.logDebug)('begin capture console error');\n            // window.onerror = (event: Event | string, source?: string, lineno?: number, colno?: number, error?: Error) => {\n            //     logDebug('capture error info:', error, source)\n            //     this.markRecord(error?.message+'/'+error?.name+'/'+error?.stack, OKXReportType.LOG, '', this.currentSide)\n            // }\n        }\n    }\n    cachedErrors() {\n        return this.recordList;\n    }\n    sendRecord(record) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    const body = JSON.stringify(record);\n                    (0, log_1.logDebug)('[REPORT] record: ', body);\n                    const res = yield fetchListWithTimeout(reportApiList, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body: body }));\n                    (0, log_1.logDebug)('[REPORT] get rsp:', res);\n                    if (res && res.status && res.status == 200) {\n                        this.recordList = this.recordList.filter((item) => {\n                            return item.timestamp != record.timestamp || item.content != record.content;\n                        });\n                        yield this.storage.setItem(this.recordCacheKey, this.recordList);\n                        resolve(true);\n                    }\n                    else {\n                        reject(false);\n                    }\n                }\n                catch (e) {\n                    (0, log_1.logDebug)('send record error:', e);\n                    resolve(true);\n                    // reject(e)\n                }\n            }));\n        });\n    }\n    sendRecordContent(content, type, action) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            let path = (_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.location.pathname;\n            let location = (_b = (0, url_1.getWindow)()) === null || _b === void 0 ? void 0 : _b.location.origin;\n            if (path && location) {\n                location = location + path;\n            }\n            let language = (_c = (0, url_1.getWindow)()) === null || _c === void 0 ? void 0 : _c.navigator.language;\n            let ua = (_d = (0, url_1.getWindow)()) === null || _d === void 0 ? void 0 : _d.navigator.userAgent;\n            let platform = this.reportPlatform;\n            let reportItem = {\n                uuid: this.currentUUID,\n                version: this.currentVersion,\n                content: content,\n                action: action,\n                side: this.currentSide,\n                timestamp: new Date().getTime(),\n                url: location,\n                lang: language,\n                type: type,\n                platform: platform,\n                \"user-agent\": ua\n            };\n            yield this.markRecordItem(reportItem);\n            yield this.sendRecord(reportItem);\n        });\n    }\n    sendCachedRecords() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let sendList = this.recordList.map(record => this.sendRecord(record));\n                (0, log_1.logDebug)('[REPORT] submit & clean recorded caches begin @', new Date().toUTCString());\n                Promise.allSettled(sendList).then((results) => {\n                    (0, log_1.logDebug)('[REPORT] submit & clean recorded caches ends @', new Date().toUTCString());\n                    let keepIndex = [];\n                    results.forEach((result, index) => {\n                        if (result.status == \"rejected\") {\n                            keepIndex.push(index);\n                        }\n                    });\n                    this.recordList = this.recordList.filter((_, index) => !keepIndex.includes(index));\n                    this.storage.setItem(this.recordCacheKey, this.recordList).then(function (value) {\n                        resolve();\n                    }).catch(function (err) {\n                        reject(err);\n                    });\n                });\n            }));\n        });\n    }\n    markRecordItem(item) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.recordList.push(item);\n            if (this.recordList.length > MAX_LIMIT_REPORTCOUNT) {\n                let offset = this.recordList.length - MAX_LIMIT_REPORTCOUNT;\n                this.recordList.splice(0, offset);\n            }\n            return new Promise((resolve, reject) => {\n                this.storage.setItem(this.recordCacheKey, this.recordList).then(function (value) {\n                    resolve(item);\n                }).catch(function (err) {\n                    reject(err);\n                });\n            });\n        });\n    }\n    markRecord(content, type, action, side) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            let path = (_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.location.pathname;\n            let location = (_b = (0, url_1.getWindow)()) === null || _b === void 0 ? void 0 : _b.location.origin;\n            if (path && location) {\n                location = location + path;\n            }\n            let language = (_c = (0, url_1.getWindow)()) === null || _c === void 0 ? void 0 : _c.navigator.language;\n            let platform = this.reportPlatform;\n            let ua = (_d = (0, url_1.getWindow)()) === null || _d === void 0 ? void 0 : _d.navigator.userAgent;\n            let reportItem = {\n                uuid: this.currentUUID,\n                version: this.currentVersion,\n                content: content,\n                action: action,\n                side: side,\n                timestamp: new Date().getTime(),\n                url: location,\n                lang: language,\n                type: type,\n                platform: platform,\n                \"user-agent\": ua\n            };\n            return yield this.markRecordItem(reportItem);\n        });\n    }\n}\nexports.OKXReporter = OKXReporter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Report_WalletType_Key = exports.Report_Proceed_QRCode_Click = exports.Report_ChooseType_Download_Click = exports.Report_ChooseType_ConnectWallet_Click = exports.Report_Proceed_Retry_Click = exports.Report_ChooseType_ConnectWallet_View = exports.Report_Loading_ConnectWallet_View = exports.Report_Proceed_QRCode_View = exports.Report_Proceed_Proceed_View = void 0;\nexports.Report_Proceed_Proceed_View = \"OKXConnectSDK_Proceed_Proceed_View\";\nexports.Report_Proceed_QRCode_View = \"OKXConnectSDK_Proceed_QRCode_View\";\nexports.Report_Loading_ConnectWallet_View = \"OKXConnectSDK_Loading_ConnectWallet_View\";\nexports.Report_ChooseType_ConnectWallet_View = \"OKXConnectSDK_ChooseType_ConnectWallet_View\";\nexports.Report_Proceed_Retry_Click = \"OKXConnectSDK_Proceed_Retry_Click\";\nexports.Report_ChooseType_ConnectWallet_Click = \"OKXConnectSDK_ChooseType_ConnectWallet_Click\";\nexports.Report_ChooseType_Download_Click = \"OKXConnectSDK_ChooseType_Download_Click\";\nexports.Report_Proceed_QRCode_Click = \"OKXConnectSDK_Proceed_QRCode_Click\";\nexports.Report_WalletType_Key = 'wallet_type';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkMetaData = checkMetaData;\nconst protocol_1 = require(\"../protocol\");\nfunction checkMetaData(dappMetaData) {\n    if (!dappMetaData) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"You have to specify a `dappMetaData`in the options.\");\n    }\n    if (!dappMetaData.name) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"dappName is required\");\n    }\n    if (!dappMetaData.icon) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"icon is required\");\n    }\n    return true;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.safeJsonParse = safeJsonParse;\nexports.safeJsonStringify = safeJsonStringify;\nconst log_1 = require(\"./log\");\nconst JSONStringify = (data) => JSON.stringify(data, (_, value) => (typeof value === \"bigint\" ? value.toString() + \"n\" : value));\n/*\n  Function to parse JSON.\n  If JSON has values in our custom format BigInt (strings with \"n\" character at the end), we just parse them to BigInt values.\n  If JSON has big number values, but not in our custom format, we copy it, and in a copy we convert those values to our custom format,\n  then parse them to BigInt values.\n  Other values (not big numbers and not our custom format BigInt values) are not affected and parsed as native JSON.parse() would parse them.\n*/\nconst JSONParse = (json) => {\n    /*\n      Big numbers are found and marked using Regex with this condition:\n      Number's length is bigger than 16 || Number's length is 16 and any numerical digit of the number is greater than that of the Number.MAX_SAFE_INTEGER\n      Additionally, it skips values that are strings (between double quotes).\n      */\n    // prettier-ignore\n    // eslint-disable-next-line no-useless-escape\n    const numbersBiggerThanMaxInt = /:(\\b\\d{17,}|\\b(?:[9](?:[1-9]07199254740991|0[1-9]7199254740991|00[8-9]199254740991|007[2-9]99254740991|007199[3-9]54740991|0071992[6-9]4740991|00719925[5-9]740991|007199254[8-9]40991|0071992547[5-9]0991|00719925474[1-9]991|00719925474099[2-9])))(?=[,\\}\\]]|$)/g;\n    const serializedData = json.replace(numbersBiggerThanMaxInt, (match, group) => `:\"${group}n\"`);\n    try {\n        return JSON.parse(serializedData, (_, value) => {\n            const isCustomFormatBigInt = typeof value === \"string\" && value.match(/^\\d+n$/);\n            if (isCustomFormatBigInt)\n                return BigInt(value.substring(0, value.length - 1));\n            return value;\n        });\n    }\n    catch (e) {\n        return JSON.parse(json);\n    }\n};\nfunction safeJsonParse(value) {\n    if (typeof value !== \"string\") {\n        (0, log_1.logDebug)(value);\n        throw new Error(`Cannot safe json parse value of type ${typeof value}`);\n    }\n    try {\n        return JSONParse(value);\n    }\n    catch (e) {\n        // eslint-disable-next-line no-console\n        console.error(\"safeJsonParse error:\", e);\n        return value;\n    }\n}\nfunction safeJsonStringify(value) {\n    return typeof value === \"string\" ? value : JSONStringify(value) || \"\";\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.okxfromString = okxfromString;\nexports.okxtoString = okxtoString;\nexports.alloc = alloc;\nexports.allocUnsafe = allocUnsafe;\nconst basics_1 = require(\"multiformats/basics\");\nconst log_1 = require(\"../utils/log\");\nfunction okxfromString(string, encoding = 'utf8') {\n    const base = BASES[encoding];\n    (0, log_1.logDebug)(\"okxfromstring ====> \");\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    return base.decoder.decode(`${base.prefix}${string}`);\n}\nfunction okxtoString(array, encoding = 'utf8') {\n    const base = BASES[encoding];\n    (0, log_1.logDebug)(\"okxtoString ====> \");\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    return base.encoder.encode(array).substring(1);\n}\nfunction alloc(size = 0) {\n    return new Uint8Array(size);\n}\nfunction allocUnsafe(size = 0) {\n    return new Uint8Array(size);\n}\nfunction createCodec(name, prefix, encode, decode) {\n    return {\n        name,\n        prefix,\n        encoder: {\n            name,\n            prefix,\n            encode\n        },\n        decoder: { decode }\n    };\n}\nconst string = createCodec('utf8', 'u', buf => {\n    const decoder = new TextDecoder('utf8');\n    return 'u' + decoder.decode(buf);\n}, str => {\n    const encoder = new TextEncoder();\n    return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n    let result = 'a';\n    for (let i = 0; i < buf.length; i++) {\n        let bufNum = buf[i];\n        if (bufNum && String.fromCharCode(bufNum)) {\n            result += String.fromCharCode(bufNum);\n        }\n    }\n    return result;\n}, str => {\n    str = str.substring(1);\n    const buf = allocUnsafe(str.length);\n    for (let i = 0; i < str.length; i++) {\n        buf[i] = str.charCodeAt(i);\n    }\n    return buf;\n});\nconst BASES = Object.assign({ utf8: string, 'utf-8': string, hex: basics_1.bases.base16, latin1: ascii, ascii: ascii, binary: ascii }, basics_1.bases);\n","\"use strict\";\nvar _a, _b, _c, _d, _e, _f, _g;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isTmaPlatform = isTmaPlatform;\nexports.isInTMA = isInTMA;\nexports.inTg = inTg;\nexports.isInTelegramBrowser = isInTelegramBrowser;\nexports.sendExpand = sendExpand;\nexports.sendOpenTelegramLink = sendOpenTelegramLink;\nexports.versionCompare = versionCompare;\nconst url_1 = require(\"./url\");\nconst log_1 = require(\"./log\");\nconst protocol_1 = require(\"../protocol\");\nconst web_api_1 = require(\"./web-api\");\nlet initParams = {};\ntry {\n    let locationHash = location.hash.toString();\n    initParams = urlParseHashParams(locationHash);\n}\ncatch (e) { }\nlet tmaPlatform = 'unknown';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppPlatform) {\n    tmaPlatform = (_a = initParams.tgWebAppPlatform) !== null && _a !== void 0 ? _a : 'unknown';\n}\nif (tmaPlatform === 'unknown') {\n    const window = (0, url_1.getWindow)();\n    tmaPlatform = (_d = (_c = (_b = window === null || window === void 0 ? void 0 : window.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : 'unknown';\n}\nlet webAppVersion = '6.0';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppVersion) {\n    webAppVersion = initParams.tgWebAppVersion;\n}\nif (!webAppVersion) {\n    const window = (0, url_1.getWindow)();\n    webAppVersion = (_g = (_f = (_e = window === null || window === void 0 ? void 0 : window.Telegram) === null || _e === void 0 ? void 0 : _e.WebApp) === null || _f === void 0 ? void 0 : _f.version) !== null && _g !== void 0 ? _g : '6.0';\n}\n/**\n * Returns true if the app is running in TMA on the specified platform.\n * @param platforms\n */\nfunction isTmaPlatform(...platforms) {\n    return platforms.includes(tmaPlatform);\n}\n/**\n * Returns true if the app is running in TMA.\n */\nfunction isInTMA() {\n    var _a;\n    return tmaPlatform !== 'unknown' || !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n}\nfunction inTg() {\n    // return true\n    return isInTelegramBrowser() || isInTMA();\n}\n/**\n * Returns true if the app is running in the Telegram browser.\n */\nfunction isInTelegramBrowser() {\n    var _a;\n    const isTelegramWebview = !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebview);\n    return (isInTMA() || isTelegramWebview) && tmaPlatform === 'unknown';\n}\n/**\n * Expand the app window.\n */\nfunction sendExpand() {\n    postEvent('web_app_expand', {});\n}\n/**\n * Opens link in TMA or in new tab and returns a function that closes the tab.\n * @param link The link to open.\n * @param fallback The function to call if the link can't be opened in TMA.\n */\nfunction sendOpenTelegramLink(link, fallback) {\n    const url = new URL(link);\n    if (url.protocol !== 'http:' && url.protocol !== 'https:') {\n        if (fallback) {\n            return fallback();\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Url protocol is not supported: ${url}`);\n    }\n    if (url.hostname !== 't.me') {\n        if (fallback) {\n            return fallback();\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Url host is not supported: ${url}`);\n    }\n    const pathFull = url.pathname + url.search;\n    if (isIframe() || versionAtLeast('6.1')) {\n        postEvent('web_app_open_tg_link', { path_full: pathFull });\n    }\n    else {\n        (0, web_api_1.openLinkBlank)('https://t.me' + pathFull);\n    }\n}\nfunction isIframe() {\n    try {\n        const window = (0, url_1.getWindow)();\n        if (!window) {\n            return false;\n        }\n        return window.parent != null && window !== window.parent;\n    }\n    catch (e) {\n        return false;\n    }\n}\nfunction postEvent(eventType, eventData) {\n    try {\n        const window = (0, url_1.getWindow)();\n        if (!window) {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Can't post event to parent window: window is not defined`);\n        }\n        if (window.TelegramWebviewProxy !== undefined) {\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.TelegramWebviewProxy.postEvent(eventType, JSON.stringify(eventData));\n        }\n        else if (window.external && 'notify' in window.external) {\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.external.notify(JSON.stringify({ eventType: eventType, eventData: eventData }));\n        }\n        else if (isIframe()) {\n            const trustedTarget = '*';\n            const message = JSON.stringify({ eventType: eventType, eventData: eventData });\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.parent.postMessage(message, trustedTarget);\n        }\n        else {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Can't post event to TMA`);\n        }\n    }\n    catch (e) {\n        (0, log_1.logError)(`Can't post event to parent window: ${e}`);\n    }\n}\nfunction urlParseHashParams(locationHash) {\n    locationHash = locationHash.replace(/^#/, '');\n    let params = {};\n    if (!locationHash.length) {\n        return params;\n    }\n    if (locationHash.indexOf('=') < 0 && locationHash.indexOf('?') < 0) {\n        params._path = urlSafeDecode(locationHash);\n        return params;\n    }\n    let qIndex = locationHash.indexOf('?');\n    if (qIndex >= 0) {\n        let pathParam = locationHash.substr(0, qIndex);\n        params._path = urlSafeDecode(pathParam);\n        locationHash = locationHash.substr(qIndex + 1);\n    }\n    let query_params = urlParseQueryString(locationHash);\n    for (let k in query_params) {\n        params[k] = query_params[k];\n    }\n    return params;\n}\nfunction urlSafeDecode(urlencoded) {\n    try {\n        urlencoded = urlencoded.replace(/\\+/g, '%20');\n        return decodeURIComponent(urlencoded);\n    }\n    catch (e) {\n        return urlencoded;\n    }\n}\nfunction urlParseQueryString(queryString) {\n    let params = {};\n    if (!queryString.length) {\n        return params;\n    }\n    let queryStringParams = queryString.split('&');\n    let i, param, paramName, paramValue;\n    for (i = 0; i < queryStringParams.length; i++) {\n        param = queryStringParams[i].split('=');\n        paramName = urlSafeDecode(param[0]);\n        paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n        params[paramName] = paramValue;\n    }\n    return params;\n}\nfunction versionCompare(v1, v2) {\n    if (typeof v1 !== 'string')\n        v1 = '';\n    if (typeof v2 !== 'string')\n        v2 = '';\n    let v1List = v1.replace(/^\\s+|\\s+$/g, '').split('.');\n    let v2List = v2.replace(/^\\s+|\\s+$/g, '').split('.');\n    let a, i, p1, p2;\n    a = Math.max(v1List.length, v2List.length);\n    for (i = 0; i < a; i++) {\n        p1 = parseInt(v1List[i]) || 0;\n        p2 = parseInt(v2List[i]) || 0;\n        if (p1 === p2)\n            continue;\n        if (p1 > p2)\n            return 1;\n        return -1;\n    }\n    return 0;\n}\nfunction versionAtLeast(ver) {\n    return versionCompare(webAppVersion, ver) >= 0;\n}\n","\"use strict\";\nvar _a, _b, _c, _d;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.removeUrlLastSlash = removeUrlLastSlash;\nexports.addPathToUrl = addPathToUrl;\nexports.getUniversalLink = getUniversalLink;\nexports.openOKXDeeplink = openOKXDeeplink;\nexports.openOKXUniversalLink = openOKXUniversalLink;\nexports.openOKXDeeplinkWithFallback = openOKXDeeplinkWithFallback;\nexports.getWindow = getWindow;\nexports.isTelegramUrl = isTelegramUrl;\nexports.encodeTelegramUrlParameters = encodeTelegramUrlParameters;\nexports.encodeConnectParams = encodeConnectParams;\nexports.encodeTWAConnectURLParams = encodeTWAConnectURLParams;\nexports.getAppWalletDeepLink = getAppWalletDeepLink;\nexports.getAppWalletShortDeepLink = getAppWalletShortDeepLink;\nexports.getTelegramWalletTWAUrl = getTelegramWalletTWAUrl;\nexports.openOKXTMAWalletlinkWithFallback = openOKXTMAWalletlinkWithFallback;\nexports.isInTMA = isInTMA;\nexports.isInTelegramBrowser = isInTelegramBrowser;\nexports.getOKXLink = getOKXLink;\nconst protocol_1 = require(\"../protocol\");\nconst log_1 = require(\"./log\");\nconst constants_1 = require(\"../protocol/constants\");\nconst utils_1 = require(\"./utils\");\nconst tma_api_1 = require(\"./tma-api\");\nconst constants_2 = require(\"../connect/constants\");\nfunction removeUrlLastSlash(url) {\n    if (url.slice(-1) === '/') {\n        return url.slice(0, -1);\n    }\n    return url;\n}\nfunction addPathToUrl(url, path) {\n    return removeUrlLastSlash(url) + '/' + path;\n}\nfunction getUniversalLink(deeplinkUrl, useStandardUniversalLink = false) {\n    console.log(\"getUniversalLink deeplinkUrl:\", deeplinkUrl, \", useStandardUniversalLink:\", useStandardUniversalLink);\n    /*const replaceStrWithParam = `${standardDeeplink}?param=`\n    if(!useStandardUniversalLink && deeplinkUrl.startsWith(replaceStrWithParam)){\n        const cleanUrl = deeplinkUrl.replace(replaceStrWithParam, '');\n        logDebug(\"getUniversalLink cleanUrl:\",cleanUrl)\n        const deeplinkEncodeUrl= encodeURIComponent(cleanUrl);\n        logDebug(\"getUniversalLink standardUniversalLink:\",standardUniversalLink)\n        logDebug(\"getUniversalLink `${shortUniversalLink}?param=${deeplinkEncodeUrl}`:\",`${shortUniversalLink}?param=${deeplinkEncodeUrl}`)\n        return `${shortUniversalLink}?param=${deeplinkEncodeUrl}`;\n    }else if(!useStandardUniversalLink && deeplinkUrl == standardDeeplink){\n        logDebug(\"getUniversalLink shortUniversalLink:\",shortUniversalLink)\n        return shortUniversalLink;\n    }else {\n        const deeplinkEncodeUrl= encodeURIComponent(deeplinkUrl);\n        console.log(\"getUniversalLink standardUniversalLink:\",standardUniversalLink)\n\n        return `${standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`;\n    }*/\n    const deeplinkEncodeUrl = encodeURIComponent(deeplinkUrl);\n    console.log(\"getUniversalLink standardUniversalLink:\", protocol_1.standardUniversalLink);\n    console.log(\"getUniversalLink standardUniversalLink:\", `${protocol_1.standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`);\n    return `${protocol_1.standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`;\n}\nfunction openOKXDeeplink(deeplinkUrl) {\n    var _a;\n    const fullUrl = getUniversalLink(deeplinkUrl);\n    const isTelegram = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n    console.log(\"openOKXDeeplink fullUrl:\", fullUrl);\n    if (!(0, utils_1.isIos)() || (0, utils_1.isInIOSLine)()) {\n        if (isTelegram) {\n            window.open(deeplinkUrl, '_blank');\n        }\n        else {\n            window.location.href = deeplinkUrl;\n        }\n    }\n    else {\n        openOKXUniversalLink(fullUrl);\n    }\n}\nfunction openOKXUniversalLink(fullUrl) {\n    if (!(0, utils_1.isIos)()) {\n        // if (isTelegram) {\n        window.open(fullUrl, '_blank');\n        // } else {\n        //     window.location.href = fullUrl;\n        // }\n    }\n    else {\n        if (isInTMA()) {\n            window.open(fullUrl, '_blank');\n        }\n        else {\n            console.log(\"windowOpen[before]: \", Date.now());\n            if (window === null || window === void 0 ? void 0 : window.okxLogDebug) {\n                window.open(fullUrl, '_blank');\n            }\n            else {\n                window.open(fullUrl, '_self');\n            }\n            console.log(\"windowOpen[after]: \", Date.now());\n        }\n    }\n}\nfunction openOKXDeeplinkWithFallback(deeplinkUrl) {\n    var _a;\n    const fullUrl = getUniversalLink(deeplinkUrl);\n    const isTelegram = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n    console.log(\"openOKXDeeplinkWithFallback fullUrl:\", fullUrl);\n    let deepLinkOpened = false;\n    const timeoutDuration = 3000; // 1.5秒的等待时间\n    const downloadUrl = protocol_1.standardUniversalLink;\n    console.log(\"openOKXDeeplinkWithFallback standardUniversalLink:\", protocol_1.standardUniversalLink);\n    let newWindow = null;\n    let fallbackToDownloadPage = () => {\n        console.log(\"fallbackToDownloadPage :empty\");\n    };\n    if (!(0, utils_1.isIos)()) {\n        fallbackToDownloadPage = () => {\n            if (!deepLinkOpened) {\n                if (newWindow) {\n                    newWindow.open(fullUrl, '_self');\n                }\n                else {\n                    window.open(fullUrl, '_blank');\n                }\n            }\n        };\n    }\n    else if ((0, utils_1.isInIOSLine)()) {\n        fallbackToDownloadPage = () => {\n            if (!deepLinkOpened) {\n                window.open(fullUrl, '_self');\n            }\n        };\n    }\n    if (!(0, utils_1.isIos)() || (0, utils_1.isInIOSLine)() || (0, utils_1.isInIOSLark)() || (0, utils_1.isInIOSWeChat)()) {\n        if (isTelegram) {\n            newWindow = window.open(deeplinkUrl, '_blank');\n        }\n        else {\n            window.location.href = deeplinkUrl;\n        }\n        setTimeout(fallbackToDownloadPage, timeoutDuration);\n        let count = 0;\n        let interval = setInterval(() => {\n            count++;\n            console.log(\"windowOpen --> interval:\", count, document.hidden, document.visibilityState);\n            if (count >= 10 || document.hidden) {\n                deepLinkOpened = true;\n                clearInterval(interval);\n                console.log(\"windowOpen :cleat: ${count}\");\n            }\n        }, 200);\n        window.addEventListener('blur', () => {\n            deepLinkOpened = true;\n        }, { once: true });\n        document.addEventListener('visibilitychange', () => {\n            if (document.visibilityState === 'hidden') {\n                deepLinkOpened = true;\n            }\n        });\n    }\n    else {\n        if (isTelegram) {\n            window.open(fullUrl, '_blank');\n        }\n        else {\n            console.log(\"windowOpen[before]: \", Date.now());\n            if (window === null || window === void 0 ? void 0 : window.okxLogDebug) {\n                window.open(fullUrl, '_blank');\n            }\n            else {\n                window.open(fullUrl, '_self');\n            }\n            console.log(\"windowOpen[after]: \", Date.now());\n        }\n    }\n}\nfunction getWindow() {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    return undefined;\n}\nfunction isTelegramUrl(link) {\n    if (!link) {\n        return false;\n    }\n    const url = new URL(link);\n    return url.protocol === 'tg:' || url.hostname === 't.me';\n}\nfunction encodeTelegramUrlParameters(parameters) {\n    let encodedParameters = parameters;\n    encodedParameters = encodedParameters.replace(/\\./g, '%2E');\n    encodedParameters = encodedParameters.replace(/-/g, '%2D');\n    encodedParameters = encodedParameters.replace(/_/g, '%5F');\n    encodedParameters = encodedParameters.replace(/&/g, '-');\n    encodedParameters = encodedParameters.replace(/=/g, '__');\n    encodedParameters = encodedParameters.replace(/%/g, '--');\n    return encodedParameters;\n}\nfunction encodeConnectParams(connectRequest) {\n    let connectRequestWithVersion = Object.assign(Object.assign({}, connectRequest), { protocolVersion: constants_2.CONNECT_PROTOCOL_VER });\n    const connectRequestStr = JSON.stringify(connectRequestWithVersion);\n    (0, log_1.logDebug)(\"url encodeConnectParams connectRequestStr \", connectRequestStr);\n    const utf8Array = new TextEncoder().encode(connectRequestStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    // .replace(/\\+/g, '-')\n    // .replace(/\\//g, '_')\n    // .replace(/=+$/, ''); //Compatible with older versions of iOS. Cannot be added directly  (Base64 URL Safe)\n    (0, log_1.logDebug)(\"url encodeConnectParams base64Encoded \", base64Encoded);\n    return base64Encoded;\n}\nfunction encodeTWAConnectURLParams(connectRequest) {\n    const connectRequestStr = JSON.stringify({ topic: connectRequest.topic, clientId: connectRequest.clientId });\n    (0, log_1.logDebug)(\"url encodeConnectParams connectRequestStr\", connectRequestStr);\n    const utf8Array = new TextEncoder().encode(connectRequestStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    return base64Encoded;\n}\nfunction getAppWalletDeepLink(connectParam) {\n    return `${protocol_1.standardDeeplink}?param=${connectParam}`;\n}\nfunction getAppWalletShortDeepLink(topic, clientId) {\n    return `${constants_1.shortUniversalLink}?topic=${topic}${(0, utils_1.getLastSixMd5Hash)(clientId)}`;\n}\n//  make telegram okx wallet TWA url\nfunction getTelegramWalletTWAUrl(connectParam, redirectStr) {\n    let base64Content = { okxconnect: \"\", redirect: \"\", extraparams: \"\", fromtg: false };\n    if (connectParam) {\n        base64Content.okxconnect = connectParam;\n    }\n    if (redirectStr) {\n        base64Content.redirect = redirectStr;\n    }\n    if (!isInTMA()) {\n        base64Content.fromtg = false;\n    }\n    else {\n        base64Content.fromtg = true;\n    }\n    (0, log_1.logDebug)('getTelegramWalletTWAUrl redirect:', base64Content.redirect);\n    let base64ContentStr = JSON.stringify(base64Content);\n    const utf8Array = new TextEncoder().encode(base64ContentStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    const urlSafeBase64 = (0, utils_1.toSafeBase64FromBase64)(base64Encoded);\n    (0, log_1.logDebug)('[TWA] open link:', base64Content, base64Encoded);\n    if (connectParam || redirectStr) {\n        if (!isInTMA()) {\n            // return `http://localhost:5173?tgWebAppStartParam=${urlSafeBase64}`\n            if ((0, constants_1.getTestTwaUrl)()) {\n                return `${(0, constants_1.getTestTwaUrl)()}?tgWebAppStartParam=${urlSafeBase64}`;\n            }\n            else if ((0, constants_1.getTestTgTwaUrl)()) {\n                let result = (0, constants_1.getBotNameAndAppName)((0, constants_1.getTestTgTwaUrl)());\n                if (result) {\n                    let { botName, appName } = result;\n                    return `tg://resolve?domain=${botName}&appname=${appName}&startapp=${urlSafeBase64}`;\n                }\n                return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}&startapp=${urlSafeBase64}`;\n            }\n            else {\n                return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}&startapp=${urlSafeBase64}`;\n            }\n        }\n        else {\n            if ((0, constants_1.getTestTgTwaUrl)()) {\n                return `${(0, constants_1.getTestTgTwaUrl)()}?startapp=${urlSafeBase64}`;\n            }\n            else {\n                return `https://t.me/${constants_1.tgwalletName}/start?startapp=${urlSafeBase64}`;\n            }\n        }\n    }\n    if (!isInTMA()) {\n        // return \"http://localhost:5173\"\n        if ((0, constants_1.getTestTwaUrl)()) {\n            return `${(0, constants_1.getTestTwaUrl)()}`;\n        }\n        else if ((0, constants_1.getTestTgTwaUrl)()) {\n            let result = (0, constants_1.getBotNameAndAppName)((0, constants_1.getTestTgTwaUrl)());\n            if (result) {\n                let { botName, appName } = result;\n                return `tg://resolve?domain=${botName}&appname=${appName}`;\n            }\n            return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}`;\n        }\n        else {\n            return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}`;\n        }\n    }\n    else {\n        if ((0, constants_1.getTestTgTwaUrl)()) {\n            return `${(0, constants_1.getTestTgTwaUrl)()}`;\n        }\n        else {\n            return `https://t.me/${constants_1.tgwalletName}/start`;\n        }\n    }\n}\n//  open TWA url in telegram\nfunction openOKXTMAWalletlinkWithFallback(twaDeepLink) {\n    var _a, _b, _c, _d, _e;\n    (0, log_1.logDebug)('[TWA] open link:', twaDeepLink, \"isInTMA ==> \", isInTMA());\n    if (!isInTMA()) {\n        if ((0, constants_1.getTestTwaUrl)()) {\n            window.open(twaDeepLink, '_blank');\n        }\n        else {\n            window.open(twaDeepLink, '_self');\n        }\n    }\n    else {\n        if ((_b = (_a = getWindow()) === null || _a === void 0 ? void 0 : _a.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) {\n            (_e = (_d = (_c = getWindow()) === null || _c === void 0 ? void 0 : _c.Telegram) === null || _d === void 0 ? void 0 : _d.WebApp) === null || _e === void 0 ? void 0 : _e.openTelegramLink(twaDeepLink);\n        }\n        else {\n            (0, tma_api_1.sendOpenTelegramLink)(twaDeepLink);\n        }\n    }\n}\n/**\n * Returns true if the app is running in TMA.\n */\nfunction urlSafeDecode(urlencoded) {\n    try {\n        urlencoded = urlencoded.replace(/\\+/g, '%20');\n        return decodeURIComponent(urlencoded);\n    }\n    catch (e) {\n        return urlencoded;\n    }\n}\nfunction urlParseQueryString(queryString) {\n    let params = {};\n    if (!queryString.length) {\n        return params;\n    }\n    let queryStringParams = queryString.split('&');\n    let i, param, paramName, paramValue;\n    for (i = 0; i < queryStringParams.length; i++) {\n        param = queryStringParams[i].split('=');\n        paramName = urlSafeDecode(param[0]);\n        paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n        params[paramName] = paramValue;\n    }\n    return params;\n}\nfunction urlParseHashParams(locationHash) {\n    locationHash = locationHash.replace(/^#/, '');\n    let params = {};\n    if (!locationHash.length) {\n        return params;\n    }\n    if (locationHash.indexOf('=') < 0 && locationHash.indexOf('?') < 0) {\n        params._path = urlSafeDecode(locationHash);\n        return params;\n    }\n    let qIndex = locationHash.indexOf('?');\n    if (qIndex >= 0) {\n        let pathParam = locationHash.substr(0, qIndex);\n        params._path = urlSafeDecode(pathParam);\n        locationHash = locationHash.substr(qIndex + 1);\n    }\n    let query_params = urlParseQueryString(locationHash);\n    for (let k in query_params) {\n        params[k] = query_params[k];\n    }\n    return params;\n}\nlet initParams = {};\ntry {\n    let locationHash = location.hash.toString();\n    initParams = urlParseHashParams(locationHash);\n}\ncatch (e) { }\nlet tmaPlatform = 'unknown';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppPlatform) {\n    tmaPlatform = (_a = initParams.tgWebAppPlatform) !== null && _a !== void 0 ? _a : 'unknown';\n}\nif (tmaPlatform === 'unknown') {\n    const window = getWindow();\n    tmaPlatform = (_d = (_c = (_b = window === null || window === void 0 ? void 0 : window.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : 'unknown';\n}\nfunction isInTMA() {\n    var _a;\n    return tmaPlatform !== 'unknown' || !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n}\n/**\n * Returns true if the app is running in the Telegram browser.\n */\nfunction isInTelegramBrowser() {\n    var _a;\n    const isTelegramWebview = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebview);\n    return (isInTMA() || isTelegramWebview) && tmaPlatform === 'unknown';\n}\nfunction getOKXLink(connectRequest, useMini = false, tmaReturnUrl) {\n    (0, log_1.logDebug)(`url  getOKXLink() called connectRequest==> ${JSON.stringify(connectRequest)}  useMini=> ${useMini}  tmaReturnUrl==> ${tmaReturnUrl}`);\n    if (useMini) {\n        if (connectRequest) {\n            var encodeTGParams = encodeTWAConnectURLParams(connectRequest);\n            return getTelegramWalletTWAUrl(encodeTGParams, tmaReturnUrl !== null && tmaReturnUrl !== void 0 ? tmaReturnUrl : \"back\");\n        }\n        else {\n            return getTelegramWalletTWAUrl(undefined, tmaReturnUrl !== null && tmaReturnUrl !== void 0 ? tmaReturnUrl : \"back\");\n        }\n    }\n    else {\n        if ((0, utils_1.useShortLink)()) {\n            if (connectRequest) {\n                return getAppWalletShortDeepLink(connectRequest.topic, connectRequest.clientId);\n            }\n            else {\n                return constants_1.shortUniversalLink;\n            }\n        }\n        else {\n            if (connectRequest) {\n                const base64Encoded = encodeConnectParams(connectRequest);\n                return `${protocol_1.standardDeeplink}?param=${base64Encoded}`;\n            }\n            else {\n                return protocol_1.standardDeeplink;\n            }\n        }\n    }\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.chainName2IdMap = exports.isValidObject = exports.RANDOM_LENGTH = exports.isBrowser = exports.resolveLocalStorage = exports.hasLocalStorage = exports.hasBuiltInWebSocket = exports.resolveWebSocketImplementation = void 0;\nexports.hexToByteArray = hexToByteArray;\nexports.getChainId = getChainId;\nexports.toHexString = toHexString;\nexports.concatUint8Arrays = concatUint8Arrays;\nexports.splitToUint8Arrays = splitToUint8Arrays;\nexports.base64encode = base64encode;\nexports.base64decode = base64decode;\nexports.checkWSUrl = checkWSUrl;\nexports.hashKey = hashKey;\nexports.generateRandomBytes32 = generateRandomBytes32;\nexports.generateTopic = generateTopic;\nexports.generateGroupId = generateGroupId;\nexports.isInIOSLine = isInIOSLine;\nexports.isInIOSLark = isInIOSLark;\nexports.isInIOSWeChat = isInIOSWeChat;\nexports.isIos = isIos;\nexports.getLastSixMd5Hash = getLastSixMd5Hash;\nexports.toSafeBase64FromBase64 = toSafeBase64FromBase64;\nexports.useShortLink = useShortLink;\nexports.replaceChainNameToChainId = replaceChainNameToChainId;\nexports.replaceChainIdToChainName = replaceChainIdToChainName;\nexports.getNamespaceKeyByChain = getNamespaceKeyByChain;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst tweetnacl_util_1 = __importDefault(require(\"tweetnacl-util\"));\nconst to_string_1 = require(\"uint8arrays/to-string\");\nconst sha256_1 = require(\"@stablelib/sha256\");\nconst safejson_1 = require(\"./safejson\");\nconst log_1 = require(\"./log\");\nconst stringUtils_1 = require(\"../utils/stringUtils\");\nconst crypto_js_1 = __importDefault(require(\"crypto-js\"));\nconst protocol_1 = require(\"../protocol\");\nconst BASE16 = \"base16\";\nfunction hexToByteArray(hexString) {\n    if (hexString.length % 2 !== 0) {\n        throw new Error(`Cannot convert ${hexString} to bytesArray`);\n    }\n    const result = new Uint8Array(hexString.length / 2);\n    for (let i = 0; i < hexString.length; i += 2) {\n        result[i / 2] = parseInt(hexString.slice(i, i + 2), 16);\n    }\n    return result;\n}\nfunction getChainId(chain) {\n    return chain.includes(\":\") ? chain.split(\":\")[1] : chain;\n}\nfunction toHexString(byteArray) {\n    let hexString = '';\n    byteArray.forEach(byte => {\n        hexString += ('0' + (byte & 0xff).toString(16)).slice(-2);\n    });\n    return hexString;\n}\nfunction concatUint8Arrays(buffer1, buffer2) {\n    const mergedArray = new Uint8Array(buffer1.length + buffer2.length);\n    mergedArray.set(buffer1);\n    mergedArray.set(buffer2, buffer1.length);\n    return mergedArray;\n}\nfunction splitToUint8Arrays(array, index) {\n    if (index >= array.length) {\n        throw new Error('Index is out of buffer');\n    }\n    const subArray1 = array.slice(0, index);\n    const subArray2 = array.slice(index);\n    return [subArray1, subArray2];\n}\nfunction encodeUint8Array(value, urlSafe) {\n    const encoded = tweetnacl_util_1.default.encodeBase64(value);\n    if (!urlSafe) {\n        return encoded;\n    }\n    return encodeURIComponent(encoded);\n}\nfunction decodeToUint8Array(value, urlSafe) {\n    if (urlSafe) {\n        value = decodeURIComponent(value);\n    }\n    return tweetnacl_util_1.default.decodeBase64(value);\n}\nfunction base64encode(value, urlSafe) {\n    let uint8Array;\n    if (value instanceof Uint8Array) {\n        uint8Array = value;\n    }\n    else {\n        if (typeof value !== 'string') {\n            value = (0, safejson_1.safeJsonStringify)(value);\n        }\n        uint8Array = tweetnacl_util_1.default.decodeUTF8(value);\n    }\n    return encodeUint8Array(uint8Array, urlSafe);\n}\nfunction base64decode(value, urlSafe) {\n    const decodedUint8Array = decodeToUint8Array(value, urlSafe);\n    return {\n        toString() {\n            return tweetnacl_util_1.default.encodeUTF8(decodedUint8Array);\n        },\n        toObject() {\n            try {\n                return (0, safejson_1.safeJsonParse)(tweetnacl_util_1.default.encodeUTF8(decodedUint8Array));\n            }\n            catch (e) {\n                return null;\n            }\n        },\n        toUint8Array() {\n            return decodedUint8Array;\n        }\n    };\n}\nfunction checkWSUrl(url) {\n    const match = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!match || !match.length) {\n        return false;\n    }\n    let scheme = match[0];\n    if (scheme === undefined) {\n        return false;\n    }\n    return new RegExp(\"^wss?:\").test(scheme);\n}\nconst resolveWebSocketImplementation = () => {\n    if (typeof WebSocket !== \"undefined\") {\n        return WebSocket;\n    }\n    else if (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") {\n        return global.WebSocket;\n    }\n    else if (typeof window !== \"undefined\" && typeof window.WebSocket !== \"undefined\") {\n        return window.WebSocket;\n    }\n    else if (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\") {\n        return self.WebSocket;\n    }\n    return WebSocket;\n    //\n    // return require(\"ws\");\n};\nexports.resolveWebSocketImplementation = resolveWebSocketImplementation;\nconst hasBuiltInWebSocket = () => typeof WebSocket !== \"undefined\" ||\n    (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") ||\n    (typeof window !== \"undefined\" && typeof window.WebSocket !== \"undefined\") ||\n    (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\");\nexports.hasBuiltInWebSocket = hasBuiltInWebSocket;\nconst hasLocalStorage = () => (typeof global !== \"undefined\" && (typeof global.localStorage !== \"undefined\")) ||\n    (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\");\nexports.hasLocalStorage = hasLocalStorage;\nconst resolveLocalStorage = () => {\n    if (typeof global !== \"undefined\" && typeof global.localStorage !== \"undefined\") {\n        return global.localStorage;\n    }\n    else if (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\") {\n        return window.localStorage;\n    }\n    return localStorage;\n};\nexports.resolveLocalStorage = resolveLocalStorage;\nconst isBrowser = () => typeof window !== \"undefined\";\nexports.isBrowser = isBrowser;\nexports.RANDOM_LENGTH = 32;\nfunction hashKey(key, encode = BASE16) {\n    (0, log_1.logDebug)(`hash key called ${key}`);\n    const result = (0, sha256_1.hash)((0, stringUtils_1.okxfromString)(key, encode));\n    return (0, to_string_1.toString)(result, encode);\n}\nfunction generateRandomBytes32() {\n    return tweetnacl_1.default.randomBytes(exports.RANDOM_LENGTH);\n}\nfunction generateTopic() {\n    let randomBytes32 = generateRandomBytes32();\n    (0, log_1.logDebug)(`generate topic called ${randomBytes32}`);\n    return hashKey((0, to_string_1.toString)(randomBytes32, BASE16));\n}\nfunction generateGroupId() {\n    let randomBytes32 = tweetnacl_1.default.randomBytes(16);\n    (0, log_1.logDebug)(`generate groupid called ${randomBytes32}`);\n    return hashKey((0, to_string_1.toString)(randomBytes32, BASE16));\n}\nconst isValidObject = (obj) => Object.getPrototypeOf(obj) === Object.prototype && Object.keys(obj).length;\nexports.isValidObject = isValidObject;\nfunction isInIOSLine() {\n    const userAgent = navigator.userAgent;\n    const inLine = userAgent.includes('Safari Line/');\n    return inLine && isIos();\n}\nfunction isInIOSLark() {\n    const userAgent = navigator.userAgent;\n    const inLine = userAgent.includes('Lark/');\n    return inLine && isIos();\n}\nfunction isInIOSWeChat() {\n    const userAgent = navigator.userAgent;\n    const inLine = userAgent.includes('MicroMessenger/');\n    return inLine && isIos();\n}\nfunction isIos() {\n    const userAgent = navigator.userAgent;\n    const maxTouchPoints = navigator.maxTouchPoints || 0;\n    // 检测 iPhone、iPod 和传统的 iPad\n    const isIOSDevice = /iPad|iPhone|iPod/.test(userAgent) && !window.MSStream;\n    // 针对 iPadOS 13 及以上的设备进行额外判断\n    const isIPadOS = (userAgent.includes('Mac') && maxTouchPoints > 1);\n    (0, log_1.logDebug)(`utils isIos >>>isIOSDevice: ${isIOSDevice}    >> isIPadOS: ${isIPadOS}`);\n    // 如果是 iOS 设备或者是 iPadOS 设备，返回 true\n    return isIOSDevice || isIPadOS;\n}\nfunction getLastSixMd5Hash(input) {\n    // 生成 MD5 哈希\n    const hash = crypto_js_1.default.MD5(input).toString();\n    // 获取最后六位\n    return hash.slice(-6);\n}\nfunction toSafeBase64FromBase64(base64) {\n    return base64\n        .replace(/=/g, \"\")\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\");\n}\nfunction useShortLink() {\n    // return !!(window as any).useShortLink;\n    return false;\n}\nexports.chainName2IdMap = new Map();\nexports.chainName2IdMap.set(\"aptos:mainnet\", \"aptos:637\");\nexports.chainName2IdMap.set(\"movement:testnet\", \"aptos:70000060\");\nexports.chainName2IdMap.set(\"movement:mainnet\", \"aptos:70000066\");\nexports.chainName2IdMap.set(\"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\", \"svm:70000069\");\nexports.chainName2IdMap.set(\"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\", \"svm:70000067\");\nexports.chainName2IdMap.set(\"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\", \"svm:70000068\");\nfunction replaceChainNameToChainId(chainId) {\n    exports.chainName2IdMap.forEach((value, key) => {\n        if (chainId.includes(key)) {\n            chainId = chainId.replace(key, value);\n        }\n    });\n    return chainId;\n}\nfunction replaceChainIdToChainName(chainId) {\n    exports.chainName2IdMap.forEach((value, key) => {\n        if (chainId.includes(value)) {\n            chainId = chainId.replace(value, key);\n        }\n    });\n    return chainId;\n}\nfunction getNamespaceKeyByChain(chain) {\n    for (const [namespaceKey, chains] of Object.entries(protocol_1.NAMES_CHAINS)) {\n        if (Object.values(chains).includes(chain)) {\n            return namespaceKey;\n        }\n    }\n    return undefined;\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.openLink = openLink;\nexports.openLinkBlank = openLinkBlank;\nexports.openDeeplinkWithFallback = openDeeplinkWithFallback;\nexports.isMobileUserAgent = isMobileUserAgent;\nexports.getUserAgent = getUserAgent;\nexports.isOS = isOS;\nexports.isBrowser = isBrowser;\nconst ua_parser_js_1 = __importDefault(require(\"ua-parser-js\"));\nconst log_1 = require(\"./log\");\nconst tma_api_1 = require(\"./tma-api\");\nfunction openLink(href, target = '_self') {\n    (0, log_1.logDebug)('openLink', href, target);\n    window.open(href, target, 'noopener noreferrer');\n}\nfunction openLinkBlank(href) {\n    openLink(href, '_blank');\n}\nfunction openDeeplinkWithFallback(href, fallback) {\n    const doFallback = () => {\n        if (isBrowser('safari') || (isOS('android') && isBrowser('firefox'))) {\n            // Safari does not support fallback to direct link.\n            return;\n        }\n        fallback();\n    };\n    const fallbackTimeout = setTimeout(() => doFallback(), 500);\n    window.addEventListener('blur', () => clearTimeout(fallbackTimeout), { once: true });\n    if (isOS('android') && (0, tma_api_1.inTg)()) {\n        openLink(href, '_blank');\n    }\n    else {\n        openLink(href, '_self');\n    }\n}\nfunction isMobileUserAgent() {\n    let check = false;\n    (function (a) {\n        if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) ||\n            /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.slice(0, 4)))\n            check = true;\n    })(navigator.userAgent ||\n        navigator.vendor ||\n        window.opera);\n    return check;\n}\nfunction getUserAgent() {\n    var _a, _b, _c;\n    const results = new ua_parser_js_1.default().getResult();\n    const osName = (_a = results.os.name) === null || _a === void 0 ? void 0 : _a.toLowerCase();\n    const deviceModel = (_b = results.device.model) === null || _b === void 0 ? void 0 : _b.toLowerCase();\n    let os;\n    switch (true) {\n        case deviceModel === 'ipad':\n            os = 'ipad';\n            break;\n        case osName === 'ios':\n            os = 'ios';\n            break;\n        case osName === 'android':\n            os = 'android';\n            break;\n        case osName === 'mac os':\n            os = 'macos';\n            break;\n        case osName === 'linux':\n            os = 'linux';\n            break;\n        case osName === null || osName === void 0 ? void 0 : osName.includes('windows'):\n            os = 'windows';\n            break;\n    }\n    const browserName = (_c = results.browser.name) === null || _c === void 0 ? void 0 : _c.toLowerCase();\n    let browser;\n    switch (true) {\n        case browserName === 'chrome':\n            browser = 'chrome';\n            break;\n        case browserName === 'firefox':\n            browser = 'firefox';\n            break;\n        case browserName === null || browserName === void 0 ? void 0 : browserName.includes('safari'):\n            browser = 'safari';\n            break;\n        case browserName === null || browserName === void 0 ? void 0 : browserName.includes('opera'):\n            browser = 'opera';\n            break;\n    }\n    return {\n        os,\n        browser\n    };\n}\nfunction isOS(...os) {\n    return os.includes(getUserAgent().os);\n}\nfunction isBrowser(...browser) {\n    return browser.includes(getUserAgent().browser);\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXSolanaProvider = void 0;\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXSolanaProvider {\n    getRealChainId(chainId) {\n        if (chainId == null) {\n            if (this.chainsSet.size == 1) {\n                let realChain = \"\";\n                let map = this.defaultChainMap;\n                this.chainsSet.forEach(function (chain) {\n                    if (map.has(chain)) {\n                        realChain = map.get(chain);\n                    }\n                });\n                if (realChain == \"\") {\n                    throw new Error(\"unsupported chainId\");\n                }\n                else {\n                    return realChain;\n                }\n            }\n            else {\n                throw new Error(\"connected to multiple solana chains,chainId can not be null\");\n            }\n        }\n        else {\n            if (chainId.startsWith(\"svm\")) {\n                return chainId;\n            }\n            else {\n                if (this.caip.includes(chainId)) {\n                    return chainId;\n                }\n                else {\n                    throw new Error(\"wrong chainId\");\n                }\n            }\n        }\n    }\n    getConnectedNamespace() {\n        var _a, _b, _c;\n        (_c = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces) === null || _b === void 0 ? void 0 : _b['solana']) === null || _c === void 0 ? void 0 : _c.chains.forEach(chain => {\n            this.chainsSet.add(chain.split(\":\")[0]);\n        });\n    }\n    constructor(provider) {\n        this.chainsSet = new Set();\n        this.caip = [\n            \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n            \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n            \"sonic:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n            \"sonic:EtWTRABZaYq6iMfeYKouRu166VU2xqa1\"\n        ];\n        this.defaultChainMap = new Map();\n        this.provider = provider;\n        this.defaultChainMap.set(\"solana\", \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\");\n        this.defaultChainMap.set(\"sonic\", \"sonic:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\");\n        this.getConnectedNamespace();\n    }\n    signMessage(message, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            let realMessage = message;\n            let tx = null;\n            try {\n                const transaction = bs58_1.default.decode(message);\n                try {\n                    tx = web3_js_1.Transaction.from(transaction);\n                }\n                catch (error) {\n                    tx = web3_js_1.VersionedTransaction.deserialize(transaction);\n                }\n            }\n            catch (e) {\n            }\n            if (tx != null) {\n                return new Promise((resolve, reject) => {\n                    reject(\"Please sign with normal message\");\n                });\n            }\n            if (((_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.wallet) === null || _b === void 0 ? void 0 : _b.appName) == \"OKX Wallet\") {\n                realMessage = bs58_1.default.encode(new TextEncoder().encode(message));\n            }\n            else {\n                realMessage = message;\n            }\n            chainId = this.getRealChainId(chainId);\n            try {\n                let data = {\n                    \"chainId\": chainId,\n                    \"method\": \"solana_signMessage\",\n                    \"params\": {\n                        \"message\": realMessage,\n                        \"pubkey\": (_c = this.getAccount(chainId)) === null || _c === void 0 ? void 0 : _c.address\n                    },\n                    injectParams: {\n                        message: message,\n                        pubkey: (_d = this.getAccount(chainId)) === null || _d === void 0 ? void 0 : _d.address\n                    }\n                };\n                let signedMessage = yield this.provider.request(data, chainId);\n                (0, core_1.logDebug)(\"signMessage111\", signedMessage);\n                if ('result' in signedMessage) {\n                    let successData = signedMessage.result;\n                    return new Promise((resolve, reject) => {\n                        var _a;\n                        resolve({\n                            \"signature\": bs58_1.default.decode(successData),\n                            \"publicKey\": (_a = this.getAccount(chainId)) === null || _a === void 0 ? void 0 : _a.address\n                        });\n                    });\n                }\n                else {\n                    (0, core_1.logDebug)(\"signMessage111\", signedMessage);\n                    return new Promise((resolve, reject) => {\n                        resolve(signedMessage.error);\n                    });\n                }\n            }\n            catch (error) {\n                console.error('方法数据回调失败 --Error--', error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d;\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['solana']) === null || _b === void 0 ? void 0 : _b.accounts[0];\n        if (chainId != null) {\n            account = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces['solana']) === null || _d === void 0 ? void 0 : _d.accounts.filter(function (account) {\n                return account.startsWith(chainId);\n            })[0];\n        }\n        (0, core_1.logDebug)(\"getAccount\", account);\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const address = account.split(':')[2];\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address,\n            publicKey: new web3_js_1.PublicKey(address)\n        };\n    }\n    signTransaction(transaction, chainId) {\n        var _a, _b;\n        (0, core_1.logDebug)(\"OKXSolanaProvider\", typeof transaction);\n        chainId = this.getRealChainId(chainId);\n        try {\n            let serializedMessage = transaction.serialize({\n                requireAllSignatures: false,\n                verifySignatures: false,\n            });\n            let data = { \"data\": bs58_1.default.encode(serializedMessage), \"from\": (_a = this.getAccount(chainId)) === null || _a === void 0 ? void 0 : _a.address };\n            return this.getSignedTransaction(\"solana_signTransaction\", data, chainId, transaction);\n        }\n        catch (e) {\n            let serializedMessage = transaction.serialize();\n            let data = { \"data\": bs58_1.default.encode(serializedMessage), \"from\": (_b = this.getAccount(chainId)) === null || _b === void 0 ? void 0 : _b.address };\n            return this.getSignedTransaction(\"solana_signTransaction\", data, chainId, transaction);\n        }\n    }\n    signAllTransactions(transactions, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getRealChainId(chainId);\n            try {\n                var array = transactions.map((tx) => {\n                    var _a;\n                    var serializedMessage;\n                    if (tx instanceof web3_js_1.VersionedTransaction) {\n                        serializedMessage = tx.serialize();\n                    }\n                    else {\n                        serializedMessage = tx.serialize({\n                            requireAllSignatures: false,\n                            verifySignatures: false,\n                        });\n                    }\n                    return { \"data\": bs58_1.default.encode(serializedMessage), \"from\": (_a = this.getAccount(chainId)) === null || _a === void 0 ? void 0 : _a.address };\n                });\n                const response = yield this.provider.request({\n                    \"method\": \"solana_signAllTransactions\",\n                    \"params\": {\n                        \"transactions\": array\n                    },\n                    injectParams: transactions\n                }, chainId);\n                if (\"result\" in response) {\n                    let result = response.result;\n                    let newTransactions = JSON.parse(result).map((s) => {\n                        let c = bs58_1.default.decode(s);\n                        try {\n                            let transaction = web3_js_1.Transaction.from(c);\n                            (0, core_1.logDebug)(\"verifySignatures\", transaction.verifySignatures());\n                            return transaction;\n                        }\n                        catch (error) {\n                            return web3_js_1.VersionedTransaction.deserialize(c);\n                        }\n                    });\n                    return new Promise((resolve, reject) => {\n                        resolve(newTransactions);\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        resolve(response);\n                    });\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"getSignedTransaction\", error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    signAndSendTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            chainId = this.getRealChainId(chainId);\n            try {\n                let data = {};\n                try {\n                    let serializedMessage = transaction.serialize({\n                        requireAllSignatures: false,\n                        verifySignatures: false,\n                    });\n                    data = { \"data\": bs58_1.default.encode(serializedMessage), \"from\": (_a = this.getAccount(chainId)) === null || _a === void 0 ? void 0 : _a.address };\n                }\n                catch (e) {\n                    let serializedMessage = transaction.serialize();\n                    data = { \"data\": bs58_1.default.encode(serializedMessage), \"from\": (_b = this.getAccount(chainId)) === null || _b === void 0 ? void 0 : _b.address };\n                }\n                let signature = yield this.provider.request({\n                    \"method\": \"solana_signAndSendTransaction\",\n                    \"params\": data,\n                    injectParams: transaction\n                }, chainId);\n                if ('result' in signature) {\n                    let successData = signature.result;\n                    return new Promise((resolve, reject) => {\n                        resolve(successData);\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        resolve(signature);\n                    });\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"getSignedTransaction\", error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    getSignedTransaction(method, transactionStr, chainId, transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let signature = yield this.provider.request({\n                    \"method\": method,\n                    \"params\": transactionStr,\n                    injectParams: transaction\n                }, chainId);\n                if ('result' in signature) {\n                    let successData = signature.result;\n                    let c = bs58_1.default.decode(successData);\n                    let resultTx;\n                    try {\n                        resultTx = web3_js_1.Transaction.from(c);\n                    }\n                    catch (error) {\n                        resultTx = web3_js_1.VersionedTransaction.deserialize(c);\n                    }\n                    if (!(resultTx instanceof web3_js_1.VersionedTransaction)) {\n                        (0, core_1.logDebug)(\"verifySignatures\", resultTx.verifySignatures());\n                    }\n                    return new Promise((resolve, reject) => {\n                        resolve(resultTx);\n                    });\n                }\n                else if (\"injectResult\" in signature) {\n                    (0, core_1.logDebug)(\"getSignedTransaction injectResult\");\n                    let resultTx = signature.injectResult;\n                    return new Promise((resolve, reject) => {\n                        resolve(resultTx);\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        reject(signature);\n                    });\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"getSignedTransaction\", error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n}\nexports.OKXSolanaProvider = OKXSolanaProvider;\nexports.default = OKXSolanaProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXSolanaProvider = void 0;\nvar OKXSolanaProvider_1 = require(\"./OKXSolanaProvider\");\nObject.defineProperty(exports, \"OKXSolanaProvider\", { enumerable: true, get: function () { return OKXSolanaProvider_1.OKXSolanaProvider; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXBtcProvider = void 0;\nconst _1 = require(\"./\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXBtcProvider {\n    constructor(provider) {\n        this.caip = [\n            \"btc:mainnet\",\n            \"fractal:mainnet\"\n        ];\n        this.provider = provider;\n    }\n    getAddressForChainId(chainId) {\n        var _a, _b;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let accounts = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        });\n        if (accounts == undefined || accounts.length < 0) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `no connected account`);\n        }\n        let account = accounts[0];\n        const address = account.split(':')[2];\n        return address;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let extra = (_c = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.extra) === null || _c === void 0 ? void 0 : _c[chainId];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"compressedPublicKey\"];\n        }\n        return {\n            address: this.getAddressForChainId(chainId),\n            publicKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param signStr\n     * @param chainId\n     * @param type\n     * @returns\n     */\n    signMessage(chainId, signStr, type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (signStr === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signMessage parmas error`);\n            }\n            let params = {\n                signStr: signStr,\n                from: this.getAddressForChainId(chainId)\n            };\n            if (type) {\n                params.type = type;\n            }\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signMessage\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param toAddress\n     * @param satoshis\n     * @param options { feeRate: 0 }\n     * @returns\n     */\n    sendBitcoin(chainId, toAddress, satoshis, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            let params = {\n                from: this.getAddressForChainId(chainId),\n                to: toAddress,\n                value: (satoshis / 100000000).toString(),\n            };\n            if (options === null || options === void 0 ? void 0 : options.feeRate) {\n                params[\"satBytes\"] = options.feeRate.toString();\n            }\n            let result = yield this.send(chainId, params);\n            if (result !== undefined && ('txhash' in result)) {\n                // return txhash directly\n                return result.txhash;\n            }\n            // or return unexpected result\n            return result;\n        });\n    }\n    //  from - string：当前连接的钱包的 BTC 地址\n    //  to - string：接受 BTC 的地址\n    //  value - string：发送 BTC 的数量\n    //  satBytes - string： (可选) 自定义费率\n    //  memo - string： (可选) 指定 outputs OP_RETURN 内容 示例\n    //  memoPos - number： (可选) 指定 outputs OP_RETURN 输出位置，如果传了 memo 则必须传入 memoPos 指定位置，否则 memo 不生效\n    send(chainId, input) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (!this.checkParameters(input, 'to', 'value')) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send parmas  error`);\n            }\n            input[\"from\"] = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: 'btc_send',\n                    params: input\n                }, chainId);\n                if ('result' in ret) {\n                    return {\n                        txhash: ret.result\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param psbtHex string 要签名的 psbt 的十六进制字符串\n     * @param options object { autoFinalized: 0 }\n     */\n    signPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.signPsbts(chainId, [psbtHex], [options]).then(psbtResults => {\n                    let results = JSON.parse(psbtResults);\n                    resolve(results[0]);\n                }).catch(error => {\n                    reject(error);\n                });\n            });\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHexs Array\n     * @param options Array [{ autoFinalized: 0 }]\n     * @returns\n     */\n    signPsbts(chainId, psbtHexs, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHexs === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHexs: psbtHexs,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signPsbts\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHex string\n     * @param options object\n     * @returns\n     */\n    signAndPushPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHex === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHex: psbtHex,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signAndPushPsbt\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return JSON.parse(ret.result);\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param address string, receiver address\n     * @param inscriptionId string, 铭文 ID + 协议，没有传协议则默认是 Ordinals NFT ，目前仅支持 Ordinals 及 Atomicals 协议\n     * @param options object, { feeRate: number } custom rates\n     */\n    sendInscription(chainId, address, inscriptionId, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let extension = {\n                address: address,\n                inscriptionId: inscriptionId,\n                options: options\n            };\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (address === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method sendInscription params error`);\n            }\n            var feeRate = 0;\n            if (options && ('feeRate' in options)) {\n                feeRate = options.feeRate;\n            }\n            let coinId = '';\n            let from = this.getAddressForChainId(chainId);\n            var protocolId = 7; //ProtocolIdBRCNFT\n            if (inscriptionId !== 'undefined') {\n                let atomicSuffix = \"-Atomicals\";\n                let ordinalsSuffix = \"-Ordinals\";\n                if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(atomicSuffix.toLowerCase())) {\n                    protocolId = 8; //WXRCProtocolIdARCNFT\n                    inscriptionId = this.removeSuffix(inscriptionId, atomicSuffix);\n                }\n                else if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(ordinalsSuffix.toLowerCase())) {\n                    inscriptionId = this.removeSuffix(inscriptionId, ordinalsSuffix);\n                }\n            }\n            let params = {\n                scenario: 5,\n                feeRate: feeRate,\n                txType: \"20\",\n                to: address,\n                batchBean: [\n                    {\n                        coinAmount: \"1\",\n                        nftId: inscriptionId,\n                        protocolId: protocolId,\n                        coinId: coinId,\n                        inscriptionId: \"\",\n                        from: from\n                    }\n                ],\n                extension: extension,\n            };\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_sendInscription\",\n                    params: params,\n                    injectParams: {\n                        address: address,\n                        inscriptionId: inscriptionId,\n                        options: options\n                    }\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    sendRunes(chainId, address, runeid, amount, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!chainId || !address || !runeid || !amount) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `The parameter is empty. Please check`);\n                }\n                let ns = this.checkChainId(chainId);\n                let protocolId = undefined;\n                if (ns != undefined) {\n                    if (ns.startsWith(\"btc\")) {\n                        protocolId = 13;\n                    }\n                    else if (ns.startsWith(\"fractal\")) {\n                        protocolId = 16;\n                    }\n                }\n                if (ns == undefined || protocolId == undefined) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n                }\n                let fromAddress = this.getAddressForChainId(chainId); // string\n                let params = {\n                    fromAddress: fromAddress,\n                    protocolId: protocolId,\n                    address: address, //String\n                    runeid: runeid, //String\n                    amount: amount, // String\n                    options: options\n                };\n                (0, core_1.logDebug)(\"OKXBtcProvider sendRunes -->\", JSON.stringify(params));\n                const ret = yield this.provider.request({\n                    method: \"btc_sendRunes\",\n                    params: params\n                }, chainId);\n                return ret.result;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    inscribeTransfer(chainId, ticker, amount) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!chainId || !ticker || !amount) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `The parameter is empty. Please check`);\n                }\n                let ns = this.checkChainId(chainId);\n                let protocolId = undefined;\n                if (ns != undefined) {\n                    if (ns.startsWith(\"btc\")) {\n                        protocolId = 1;\n                    }\n                    else if (ns.startsWith(\"fractal\")) {\n                        protocolId = 14;\n                    }\n                }\n                if (ns == undefined || protocolId == undefined) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n                }\n                let fromAddress = this.getAddressForChainId(chainId); // string\n                let params = {\n                    fromAddress: fromAddress,\n                    protocolId: protocolId,\n                    ticker: ticker, //String\n                    amount: amount, // String\n                };\n                (0, core_1.logDebug)(\"OKXBtcProvider inscribeTransfer -->\", JSON.stringify(params));\n                const ret = yield this.provider.request({\n                    method: \"btc_inscribeTransfer\",\n                    params: params\n                }, chainId);\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    removeSuffix(str, suffix) {\n        if (str.endsWith(suffix)) {\n            return str.slice(0, str.length - suffix.length);\n        }\n        return str;\n    }\n    checkParameters(params, ...keys) {\n        var unexistKeys = [];\n        keys.forEach(key => {\n            if (!(`${key}` in params)) {\n                unexistKeys.push(key);\n            }\n        });\n        if (unexistKeys.length > 0) {\n            console.log('not find key: ', unexistKeys.join(\",\"));\n            return false;\n        }\n        return true;\n    }\n    /**\n     *\n     * @param chainId eg. btc:mainnet\n     * @returns eg. btc\n     */\n    checkChainId(chainId) {\n        if (this.caip.includes(chainId)) {\n            let [namespaceKey, _] = chainId.split(\":\");\n            return namespaceKey;\n        }\n        return undefined;\n    }\n}\nexports.OKXBtcProvider = OKXBtcProvider;\nexports.default = OKXBtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCosmosProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXCosmosProvider {\n    constructor(provider) {\n        this.provider = provider;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e, _f;\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount chainId:\", chainId);\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount namespaces:\", JSON.stringify((_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces));\n        let account = (_c = (_b = this.provider.session) === null || _b === void 0 ? void 0 : _b.namespaces[core_1.NameSpaceKeyCosmos]) === null || _c === void 0 ? void 0 : _c.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount account:\", JSON.stringify(account));\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount address:\", address);\n        let extra = (_f = (_e = (_d = this.provider.session) === null || _d === void 0 ? void 0 : _d.namespaces[core_1.NameSpaceKeyCosmos]) === null || _e === void 0 ? void 0 : _e.extra) === null || _f === void 0 ? void 0 : _f[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n            console.log(\"aptos_publicKey\", publicKey);\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            algo: \"secp256k1\",\n            address: address,\n            bech32Address: address,\n            pubKey: this.hexToUint8Array(publicKey),\n        };\n    }\n    signArbitrary(chainId, signerAddress, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const base64Encoded = window.btoa(data);\n            const signDoc = {\n                chain_id: \"\",\n                account_number: \"0\",\n                sequence: \"0\",\n                fee: {\n                    gas: \"0\",\n                    amount: []\n                },\n                msgs: [{\n                        \"type\": \"sign/MsgSignData\",\n                        \"value\": {\n                            \"signer\": signerAddress,\n                            \"data\": base64Encoded\n                        }\n                    }],\n                memo: \"\"\n            };\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signArbitrary\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chain_id\": chainId.split(\":\")[1],\n                    \"data\": signDoc\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    if (typeof ret.result == \"string\") {\n                        return JSON.parse(ret.result);\n                    }\n                    else {\n                        return ret.result;\n                    }\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAmino(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (signDoc.msgs[0].type == \"sign/MsgSignData\") {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signArbitrary\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chain_id\": chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        return ret.result;\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    return error;\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                }\n            }\n            else {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signAmino\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chainId\": chainId.split(\":\")[1],\n                        \"sign_doc\": signDoc,\n                        \"signOptions\": signOptions\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        const resData = JSON.parse(ret.result);\n                        console.log(\"signdoc\", signDoc, resData.signDoc);\n                        signDoc.fee = resData.signDoc.fee;\n                        return { signed: signDoc, signature: resData.signature };\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                    return error;\n                }\n            }\n        });\n    }\n    signDirect(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const object = {\n                bodyBytes: this.bufferToHex(signDoc.bodyBytes),\n                authInfoBytes: this.bufferToHex(signDoc.authInfoBytes),\n                chainId: signDoc.chainId,\n                accountNumber: signDoc.accountNumber ? signDoc.accountNumber.toString() : null,\n                signOptions: signOptions ? signOptions : null\n            };\n            let data = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signDirect\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chainId\": chainId.split(\":\")[1],\n                    \"sign_doc\": object,\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    const res = JSON.parse(ret.result);\n                    console.log(\"signdirect result\", res);\n                    signDoc.authInfoBytes = this.messageToBuffer(res.signDoc.authInfoBytes);\n                    return { signed: signDoc, signature: res.signature };\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    messageToBuffer(message) {\n        var buffer = Uint8Array.from([]);\n        try {\n            if (typeof message === \"string\") {\n                buffer = this.hexToUint8Array(message.replace(\"0x\", \"\"));\n            }\n            else {\n                buffer = Uint8Array.from(message);\n            }\n        }\n        catch (err) {\n            console.log(`messageToBuffer error: ${err}`);\n        }\n        return buffer;\n    }\n    bufferToHex(arr) {\n        let output = [...new Uint8Array(arr)]\n            .map(x => x.toString(16).padStart(2, '0'))\n            .join('');\n        return '0x' + output;\n    }\n    hexToUint8Array(hexString) {\n        if (hexString.length % 2 !== 0) {\n            throw \"Invalid hexString\";\n        }\n        var arrayBuffer = new Uint8Array(hexString.length / 2);\n        for (var i = 0; i < hexString.length; i += 2) {\n            var byteValue = parseInt(hexString.substr(i, 2), 16);\n            if (isNaN(byteValue)) {\n                throw \"Invalid hexString\";\n            }\n            arrayBuffer[i / 2] = byteValue;\n        }\n        return arrayBuffer;\n    }\n}\nexports.OKXCosmosProvider = OKXCosmosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXStarknetProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXStarknetProvider {\n    constructor(provider) {\n        this.STARKNET_CHAIN_ID = \"starknet:mainnet\";\n        this.provider = provider;\n    }\n    getChain(chainId) {\n        if (chainId == null) {\n            chainId = this.STARKNET_CHAIN_ID;\n        }\n        if (chainId != this.STARKNET_CHAIN_ID) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, \"The chainId:\" + chainId + \"is wrong for OKXStarknetProvider\");\n        }\n        return chainId;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyStarknet]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyStarknet]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address,\n            pubKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param chainId\n     * @param signerAddress\n     * @param data: { types, primaryType, domain, message } as TypedData\n     * @returns [signedDataR, signedDataS]\n     */\n    signMessage(signerAddress, typedData, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            if (signerAddress.length == 0) {\n                signerAddress = this.getAccount(chainId)[\"address\"];\n            }\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"starknet_signMessage\",\n                \"params\": {\n                    \"accountAddress\": signerAddress,\n                    \"typedData\": typedData\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    let results = ret.result;\n                    if (typeof results == 'string') {\n                        results = JSON.parse(results);\n                    }\n                    return [results[\"signedDataR\"], results[\"signedDataS\"]];\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     * sendTransaction\n     * @param chainId\n     * @param signerAddress\n     * @param transaction\n     * @returns { transaction_hash }\n     */\n    sendTransaction(signerAddress, transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let transactionData = {\n                \"accountAddress\": signerAddress,\n                \"executionRequest\": transaction\n            };\n            let data = {\n                \"method\": \"starknet_sendTransaction\",\n                \"params\": {\n                    \"data\": JSON.stringify(transactionData),\n                    \"from\": signerAddress\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return { transaction_hash: ret.result };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * signMessage old API（rarely used, no need provide to external）\n     * @param chainId\n     * @param payload\n     * @returns {transaction_hash, class_hash}\n     */\n    signMessageDeclareContractPayload(payload, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            try {\n                let data = {\n                    \"method\": \"starknet_signMessage\",\n                    \"params\": payload\n                };\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return {\n                        \"transaction_hash\": ret.result[\"txHash\"],\n                        \"class_hash\": ret.result[\"classHash\"]\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     * sendTransaction old API（rarely used, no need provide to external）\n     * @param chainId\n     * @param signerAddress\n     * @param calls\n     * @param abis\n     * @param transactionsDetail\n     * @returns { transaction_hash }\n     */\n    /// todo： \n    /// 修改方法名\n    /// chainId 放后面\n    sendMessageExecuteTransactionDetail(signerAddress, calls, abis, transactionsDetail, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            const transactions = Array.isArray(calls) ? calls : [calls];\n            const executionRequest = {\n                \"calls\": transactions,\n                \"abis\": abis,\n                \"transactionsDetail\": {\n                    \"nonce\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.nonce,\n                    \"maxFee\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.nonce,\n                    \"version\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.version,\n                }\n            };\n            return this.sendTransaction(signerAddress, executionRequest, chainId);\n        });\n    }\n}\nexports.OKXStarknetProvider = OKXStarknetProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTonProvider = void 0;\nconst _1 = require(\"./\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTonProvider {\n    constructor(generator) {\n        this.statusChangeSubscriptions = [];\n        this.statusChangeErrorSubscriptions = [];\n        this.provider = generator;\n        this.provider.on(\"connect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event connect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"reconnect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event reconnect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"disconnect\", () => {\n            (0, core_1.logDebug)(\"OKXTONProvider event disconnect:\");\n            this.statusChangeSubscriptions.forEach(callback => callback(null));\n        });\n        this.provider.on(\"connect_error\", (error) => {\n            (0, core_1.logDebug)(\"OKXTONProvider event connect_error:\", JSON.stringify(error));\n            this.statusChangeErrorSubscriptions.forEach(errorsHandler => errorsHandler(error));\n        });\n    }\n    connected() {\n        if (this.provider.connected()) {\n            return !!this.provider.session.namespaces[\"ton\"];\n        }\n        return false;\n    }\n    account() {\n        try {\n            if (!this.provider.session) {\n                return null;\n            }\n            let tonNameSpace = this.provider.session.namespaces['ton'];\n            if (!tonNameSpace || !tonNameSpace.payload || !tonNameSpace.payload.ton_addr) {\n                return null;\n            }\n            let ton_addr = tonNameSpace.payload.ton_addr;\n            return {\n                address: ton_addr.address,\n                chain: ton_addr.network,\n                walletStateInit: ton_addr.walletStateInit,\n                publicKey: ton_addr.publicKey,\n            };\n        }\n        catch (e) {\n            (0, core_1.logDebug)(\"OKXTONProvider account  error:\", JSON.stringify(e));\n            return null;\n        }\n    }\n    wallet() {\n        if (this.connected()) {\n            try {\n                let sessionWallet = this.provider.session.wallet;\n                let tonDeviceInfo = {\n                    platform: sessionWallet.platform,\n                    appName: sessionWallet.appName,\n                    appVersion: sessionWallet.appVersion,\n                    maxProtocolVersion: sessionWallet.maxProtocolVersion,\n                    features: ['ton_sendTransaction'],\n                };\n                const wallet = {\n                    device: tonDeviceInfo,\n                    provider: \"http\",\n                    account: this.account()\n                };\n                let tonNameSpace = this.provider.session.namespaces['ton'];\n                if (tonNameSpace && tonNameSpace.payload && tonNameSpace.payload.ton_proof) {\n                    wallet.connectItems = {\n                        tonProof: tonNameSpace.payload.ton_proof\n                    };\n                }\n                (0, core_1.logDebug)(\"OKXTONProvider wallet :\", JSON.stringify(wallet));\n                return wallet;\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"OKXTONProvider wallet  error:\", JSON.stringify(e));\n                return null;\n            }\n        }\n        return null;\n    }\n    onStatusChange(callback, errorsHandler) {\n        this.statusChangeSubscriptions.push(callback);\n        if (errorsHandler) {\n            this.statusChangeErrorSubscriptions.push(errorsHandler);\n        }\n        return () => {\n            this.statusChangeSubscriptions = this.statusChangeSubscriptions.filter(item => item !== callback);\n            if (errorsHandler) {\n                this.statusChangeErrorSubscriptions = this.statusChangeErrorSubscriptions.filter(item => item !== errorsHandler);\n            }\n        };\n    }\n    sendTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (transaction.network && transaction.network !== core_1.TONCHAIN.MAINNET) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, 'OKXTONProvider sendTransaction network error');\n            }\n            if (!transaction.network) {\n                transaction.network = core_1.TONCHAIN.MAINNET;\n            }\n            if (this.provider.session) {\n                if (!transaction.from) {\n                    const accounts = this.provider.requestAccountsWithNamespace('ton');\n                    transaction.from = accounts[0];\n                }\n            }\n            const requestParams = {\n                method: \"ton_sendTransaction\",\n                params: transaction,\n            };\n            let chain = 'ton:' + core_1.TONCHAIN.MAINNET;\n            (0, core_1.logDebug)(\"OKXTONProvider sendTransaction transaction----:\", chain, JSON.stringify(requestParams));\n            return this.provider.request(requestParams, chain);\n        });\n    }\n}\nexports.OKXTonProvider = OKXTonProvider;\nexports.default = OKXTonProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTronProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTronProvider {\n    constructor(provider) {\n        this.TRON_CHAIN_ID = \"tron:mainnet\";\n        this.provider = provider;\n    }\n    getChain(chainId) {\n        if (chainId == null) {\n            chainId = this.TRON_CHAIN_ID;\n        }\n        if (chainId != this.TRON_CHAIN_ID) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, \"The chainId:\" + chainId + \"is wrong for OKXTronProvider\");\n        }\n        return chainId;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        chainId = this.getChain(chainId);\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyTron]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyTron]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address\n        };\n    }\n    stringToHex(str) {\n        let hex = '';\n        for (let i = 0; i < str.length; i++) {\n            hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n        }\n        return hex;\n    }\n    signMessage(data, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessage\",\n                \"params\": {\n                    \"message\": this.stringToHex(data)\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signMessageV2(data, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessageV2\",\n                \"params\": {\n                    \"message\": data\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let data = {\n                \"method\": \"tron_signTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    let signedTx;\n                    if (typeof ret.result == \"string\") {\n                        signedTx = JSON.parse(ret.result);\n                    }\n                    else {\n                        signedTx = ret.result;\n                    }\n                    let realSignTx = {};\n                    realSignTx.visible = signedTx.visible;\n                    realSignTx.txID = signedTx.txID;\n                    let rawData = {};\n                    rawData.contract = signedTx.raw_data.contract;\n                    rawData.expiration = signedTx.raw_data.expiration;\n                    rawData.ref_block_bytes = signedTx.raw_data.ref_block_bytes;\n                    rawData.fee_limit = signedTx.raw_data.fee_limit;\n                    rawData.ref_block_hash = signedTx.raw_data.ref_block_hash;\n                    rawData.timestamp = signedTx.raw_data.timestamp;\n                    realSignTx.raw_data = rawData;\n                    realSignTx.raw_data_hex = signedTx.raw_data_hex;\n                    realSignTx.signature = signedTx.signature;\n                    return realSignTx;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAndSendTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let data = {\n                \"method\": \"tron_signAndSendTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n}\nexports.OKXTronProvider = OKXTronProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXUniversalProvider = void 0;\nconst eip155_1 = require(\"./provider/providers/eip155\");\nconst sui_1 = require(\"./provider/providers/sui\");\nconst constants_1 = require(\"./provider/constants\");\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nconst client_1 = require(\"./packages/sign-client/client\");\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"./packages/utils/namespaces\");\nconst solana_1 = __importDefault(require(\"./provider/providers/solana\"));\nconst btc_1 = __importDefault(require(\"./provider/providers/btc\"));\nconst aptos_1 = __importDefault(require(\"./provider/providers/aptos\"));\nconst ton_1 = __importDefault(require(\"./provider/providers/ton\"));\nconst cosmos_1 = __importDefault(require(\"./provider/providers/cosmos\"));\nconst tron_1 = __importDefault(require(\"./provider/providers/tron\"));\nconst utils_1 = require(\"./provider/utils\");\nconst packages_1 = require(\"./packages\");\nconst provider_1 = require(\"./provider\");\nconst starknet_1 = __importDefault(require(\"./provider/providers/starknet\"));\nclass OKXUniversalProvider {\n    static init(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_2.logDebug)('OKXUniversalProvider init() called');\n            (0, core_2.checkMetaData)(opts.dappMetaData);\n            // ignore rpc provider check by default\n            (0, utils_1.setGlobal)('disableProviderPing', true);\n            let provider;\n            if (window && window.okxConnectUniversalinwindow && window.okxConnectUniversalinwindow instanceof OKXUniversalProvider) {\n                (0, core_2.logDebug)('OKXUniversalConnect init() old called');\n                provider = window.okxConnectUniversalinwindow;\n            }\n            else {\n                (0, core_2.logDebug)('OKXUniversalConnect init() new called');\n                provider = new OKXUniversalProvider(opts);\n                if (window) {\n                    window.okxConnectUniversalinwindow = provider;\n                }\n                yield provider.initialize();\n            }\n            (0, core_2.getDefaultReporter)().configVersionAndSide('universalprovider-1.5.2', 'dapp', provider.providerOpts.dappMetaData.name);\n            return provider;\n        });\n    }\n    constructor(opts) {\n        this.rpcProviders = {};\n        this.events = new eventemitter3_1.default();\n        if (!opts.connector || opts.connector.length == 0) {\n            opts.connector = [core_2.AppwalletConnector.getConnector(), core_2.TgwalletConnector.getConnector()];\n        }\n        this.providerOpts = opts;\n    }\n    request(args, chain) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_2.logDebug)('OKXUniversalProvider request() called');\n            (0, core_2.reportLog)('OKXUniversalProvider request() called');\n            if (!this.connected()) {\n                throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            (0, core_2.logDebug)('OKXUniversalProvider request()  connected ');\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return yield this.getProvider(namespace).request(requestParam);\n        });\n    }\n    buildRequestParamFromRequest(args, chain) {\n        var _a;\n        (0, core_2.logDebug)(\"UniversalProvider request args >>>>>>>: \", chain, (0, core_2.safeJsonStringify)(args));\n        let [namespace, chainId] = this.validateChain(chain);\n        if (!this.session) {\n            throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Please call connect() before request()\");\n        }\n        let keyArr = Object.keys(this.session.namespaces);\n        if (!chain && keyArr && keyArr.length > 1) {\n            throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Multiple chains have been linked, the request method requires chain`);\n        }\n        let realChain = (0, core_1.replaceChainNameToChainId)(`${namespace}:${chainId}`);\n        if (realChain != null) {\n            namespace = realChain.split(\":\")[0];\n            chainId = realChain.split(\":\")[1];\n        }\n        // if (namespace == \"aptos\" && chainId == \"mainnet\") {\n        //     namespace = \"aptos\"\n        //     chainId = \"637\"\n        // }\n        // if (namespace == \"movement\" && chainId == \"testnet\") {\n        //     namespace = \"aptos\"\n        //     chainId = \"70000060\"\n        // }\n        const requestParam = Object.assign(Object.assign({}, args), { chainId: `${namespace}:${chainId}`, redirect: (_a = args.redirect) !== null && _a !== void 0 ? _a : this.sessionConfig.redirect });\n        return { namespace, requestParam };\n    }\n    enable() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.client) {\n                throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (!this.session) {\n                if (this.connectOpts) {\n                    yield this.connect(this.connectOpts);\n                }\n                else {\n                    throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n                }\n            }\n            const accounts = yield this.requestAccounts();\n            return accounts;\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_2.logDebug)('OKXUniversalProvider disconnect() called');\n            (0, core_2.reportLog)('provider disconnect called');\n            if (!this.session) {\n                throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                let called = false;\n                const onRequestSent = () => __awaiter(this, void 0, void 0, function* () {\n                    if (!called) {\n                        called = true;\n                        yield this.disconnectAndEmit();\n                        yield this.cleanup();\n                        resolve();\n                        (0, core_2.logDebug)(\"UniversalProvider disconnect Disconnected\");\n                        (0, core_2.reportLog)('provider disconnect disconnected');\n                    }\n                });\n                try {\n                    yield this.client.disconnect();\n                    yield onRequestSent();\n                }\n                catch (e) {\n                    yield onRequestSent();\n                }\n            }));\n        });\n    }\n    disconnectAndEmit() {\n        var _a, _b;\n        this.client.engine.connectManagerDisconnect();\n        this.events.emit(\"disconnect\", { topic: (_a = this.session) === null || _a === void 0 ? void 0 : _a.topic });\n        this.events.emit(\"session_delete\", { topic: (_b = this.session) === null || _b === void 0 ? void 0 : _b.topic });\n    }\n    replaceNamespace(opts, nameSpace) {\n        var _a, _b;\n        let aptosNameSpace = (_a = opts.namespaces) === null || _a === void 0 ? void 0 : _a[nameSpace];\n        if (aptosNameSpace != undefined) {\n            let realNS = this.replaceNamespaceInner(aptosNameSpace);\n            if (opts.namespaces != undefined && nameSpace in opts.namespaces && realNS != undefined) {\n                opts.namespaces[nameSpace] = realNS;\n            }\n        }\n        let optionAptosNameSpace = (_b = opts.optionalNamespaces) === null || _b === void 0 ? void 0 : _b[nameSpace];\n        if (optionAptosNameSpace != undefined) {\n            let realOptionNS = this.replaceNamespaceInner(optionAptosNameSpace);\n            if (opts.optionalNamespaces != undefined && nameSpace in opts.optionalNamespaces && realOptionNS != undefined) {\n                opts.optionalNamespaces[nameSpace] = realOptionNS;\n            }\n        }\n        return opts;\n    }\n    replaceNamespaceInner(aptosNameSpace) {\n        var _a;\n        if (aptosNameSpace != undefined) {\n            aptosNameSpace.chains = (_a = aptosNameSpace.chains) === null || _a === void 0 ? void 0 : _a.map(chainId => {\n                return (0, core_1.replaceChainNameToChainId)(chainId);\n            });\n            if (aptosNameSpace.defaultChain != undefined) {\n                aptosNameSpace.defaultChain = (0, core_1.replaceChainNameToChainId)(aptosNameSpace.defaultChain);\n            }\n        }\n        return aptosNameSpace;\n    }\n    replaceSessionAptos(session, namespace) {\n        var _a;\n        let namespaces = (_a = session === null || session === void 0 ? void 0 : session.namespaces) === null || _a === void 0 ? void 0 : _a[namespace];\n        if (namespaces != undefined && namespaces.chains != undefined) {\n            namespaces.chains = namespaces.chains.map(chain => {\n                return (0, core_1.replaceChainIdToChainName)(chain);\n            });\n            namespaces.accounts = namespaces.accounts.map((account) => {\n                return (0, core_1.replaceChainIdToChainName)(account);\n            });\n            let extra = {};\n            Object.keys(namespaces.extra || {}).forEach((key, index) => {\n                let newKey = (0, core_1.replaceChainIdToChainName)(key);\n                extra[(0, core_1.replaceChainIdToChainName)(key)] = Object.values((session === null || session === void 0 ? void 0 : session.namespaces[namespace].extra) || {})[index];\n            });\n            namespaces.extra = extra;\n        }\n        (0, core_2.logDebug)(\"replaceSessionAptos\", session);\n    }\n    connected() {\n        (0, core_2.logDebug)('OKXUniversalProvider connected() called');\n        (0, core_2.reportLog)('provider connected called');\n        let disconnectInner = () => {\n            try {\n                this.cleanup();\n                this.client.engine.connectManagerDisconnect();\n            }\n            catch (e) {\n                (0, core_2.logDebug)(\"Error during disconnect:\", e);\n            }\n        };\n        try {\n            if (!this.session)\n                return false;\n            if (!this.client.engine.getCurrentConnectionReady(Object.keys(this.session.namespaces))) {\n                disconnectInner();\n                return false;\n            }\n            return true;\n        }\n        catch (e) {\n            disconnectInner();\n            return false;\n        }\n    }\n    connectAndSign(opts, signRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_2.logDebug)('OKXUniversalProvider connectAndSign() called');\n            const updatedOpts = Object.assign(Object.assign({}, opts), { signRequest });\n            (0, core_2.logDebug)('OKXUniversalProvider connectAndSign() opts:', JSON.stringify(opts));\n            (0, core_2.logDebug)('OKXUniversalProvider connectAndSign() signRequest:', JSON.stringify(signRequest));\n            return yield this.connect(updatedOpts);\n        });\n    }\n    connect(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_2.logDebug)('OKXUniversalProvider connect() called');\n            (0, core_2.reportLog)('provider connect called');\n            if (!this.client) {\n                throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (this.connected()) {\n                return this.session;\n            }\n            opts = this.replaceNamespace(opts, \"aptos\");\n            opts = this.replaceNamespace(opts, \"solana\");\n            (0, core_2.logDebug)(`OKXUniversalProvider connect >>>>`, JSON.stringify(opts));\n            if (opts.sessionConfig === undefined) {\n                opts.sessionConfig = {};\n            }\n            if (opts.sessionConfig.openUniversalUrl === undefined) {\n                opts.sessionConfig.openUniversalUrl = (0, core_2.isMobileUserAgent)();\n            }\n            this.setNamespaces(opts);\n            try {\n                (0, core_2.logDebug)(`UniversalProvider connect opts.stringify ====> ${JSON.stringify(opts)}`);\n                //Connect\n                let session = yield this.client.connect(opts);\n                (0, core_2.logDebug)(`UniversalProvider connect success ====> ${JSON.stringify(session)}`);\n                if (session) {\n                    this.replaceSessionAptos(session, \"aptos\");\n                    this.replaceSessionAptos(session, \"solana\");\n                    this.session = session;\n                    this.client.session = session;\n                    this.setConnectConnector();\n                    (0, core_2.logDebug)(`OKXUniversalProvider connect success opts>>>>`, JSON.stringify(opts));\n                    this.onConnect();\n                    if (opts.signRequest && opts.signRequest.length > 0) {\n                        let requestItem = opts.signRequest[0];\n                        let signResponseList = [];\n                        if (typeof window !== \"undefined\" && window && window.okxConnectUniversalUIinwindow) { //from UI\n                            (0, core_2.logDebug)(`OKXUniversalProvider connect success, us UI SDK>>>>`);\n                            if (this.session.signResponse && this.session.signResponse.length > 0) { // >=6.96\n                                signResponseList = this.session.signResponse;\n                            }\n                        }\n                        else {\n                            (0, core_2.logDebug)(`OKXUniversalProvider connect success, us Universal SDK>>>>`);\n                            if (this.session.signResponse && this.session.signResponse.length > 0) { // >=6.96\n                                signResponseList = this.session.signResponse;\n                            }\n                            else {\n                                signResponseList.push((0, packages_1.creatNotSupportMethodItemReplay)(requestItem));\n                            }\n                        }\n                        (0, core_2.logDebug)(`UniversalProvider connect success connectRequestReply ====> ${JSON.stringify(signResponseList)}`);\n                        setTimeout(() => {\n                            this.events.emit(\"connect_signResponse\", signResponseList);\n                        }, 100);\n                    }\n                    return session;\n                }\n                return undefined;\n            }\n            catch (error) {\n                (0, core_2.logDebug)(`UniversalProvider connect error ====> `, JSON.stringify(error));\n                throw error;\n            }\n        });\n    }\n    syncAllAddresses() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if ((0, provider_1.syncAddressAvailable)(this.session.wallet)) {\n                return this.client.syncAllAddress();\n            }\n            else {\n                throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n            }\n        });\n    }\n    setConnectConnector() {\n        var _a;\n        this.client.setConnectConnector((_a = this.session) === null || _a === void 0 ? void 0 : _a.wallet);\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    setDefaultChain(chain, rpcUrl) {\n        (0, core_2.logDebug)('OKXUniversalProvider setDefaultChain() called');\n        // chain = this.chainNameToGeneralId(chain)\n        try {\n            // ignore without active session\n            if (!this.connected())\n                return;\n            const [namespace, chainId] = this.validateChain(chain);\n            const provider = this.getProvider(namespace);\n            provider.setDefaultChain(chainId, rpcUrl);\n        }\n        catch (error) {\n            // ignore the error if the fx is used prematurely before namespaces are set\n            if (!/Please call connect/.test(error.message))\n                throw error;\n        }\n    }\n    checkStorage() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let sessionInfoStr = yield this.getFromStore(\"connectSession\");\n            (0, core_2.logDebug)(sessionInfoStr);\n            if (sessionInfoStr) {\n                (0, core_2.logDebug)(`checkStorage error start`);\n                try {\n                    let sessionInfo = sessionInfoStr;\n                    this.session = sessionInfo;\n                    this.client.session = this.session;\n                    this.setConnectConnector();\n                    yield this.client.restoreconnect(sessionInfo);\n                    this.sessionConfig = sessionInfo.sessionConfig;\n                    this.client.sessionConfig = this.sessionConfig;\n                    (0, core_2.logDebug)('[evm u-provider] do reconnection', this.session);\n                    this.createProviders();\n                    this.registerEventListeners();\n                    setTimeout(() => {\n                        this.events.emit(\"reconnect\", { session: this.session });\n                    }, 100);\n                }\n                catch (e) {\n                    yield this.cleanup();\n                    (0, core_2.logDebug)(`checkStorage error ${JSON.stringify(e)}`);\n                }\n            }\n        });\n    }\n    initialize() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_2.logDebug)('OKXUniversalProvider initialize() called');\n            (0, core_2.reportLog)('provider initialize called');\n            const data = Object.assign({ url: window.location.hostname, origin: window.location.origin }, this.providerOpts.dappMetaData);\n            this.client = new client_1.SignClient(data, this.events);\n            this.registerConnector(this.providerOpts.connector);\n            yield this.checkStorage();\n        });\n    }\n    createProviders() {\n        if (!this.client) {\n            throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n        }\n        if (!this.connected()) {\n            throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Session not initialized. Please call connect() before enable()\");\n        }\n        const providersToCreate = [\n            ...new Set(Object.keys(this.session.namespaces)\n                .filter((namespace) => { var _a, _b; return ((_b = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.accounts) === null || _b === void 0 ? void 0 : _b.length) > 0; })\n                .map((namespace) => (0, namespaces_1.parseNamespaceKey)(namespace))),\n        ];\n        this.rpcProviders = {};\n        providersToCreate.forEach((namespace) => {\n            if (!this.session)\n                return;\n            const namespacesValue = this.session.namespaces;\n            const currentNameSpace = namespacesValue[namespace];\n            (0, core_2.logDebug)(\"init eip155 >> \", currentNameSpace);\n            switch (namespace) {\n                case \"eip155\":\n                    const opts = {\n                        namespace: currentNameSpace\n                    };\n                    this.rpcProviders[namespace] = new eip155_1.Eip155Provider(opts, this.client, this.events);\n                    break;\n                case \"solana\":\n                    const opts1 = {\n                        namespace: currentNameSpace\n                    };\n                    let solanaProvider = new solana_1.default(opts1, \"solana\", this.client, this.events);\n                    this.rpcProviders[namespace] = solanaProvider;\n                    let sonicProvider = new solana_1.default(opts1, \"sonic\", this.client, this.events);\n                    this.rpcProviders['sonic'] = sonicProvider;\n                    let svmProvider = new solana_1.default(opts1, \"svm\", this.client, this.events);\n                    this.rpcProviders['svm'] = svmProvider;\n                    let soonProvider = new solana_1.default(opts1, \"soon\", this.client, this.events);\n                    this.rpcProviders['soon'] = soonProvider;\n                    let eclipseProvider = new solana_1.default(opts1, \"eclipse\", this.client, this.events);\n                    this.rpcProviders['eclipse'] = eclipseProvider;\n                    // this.rpcProviders[namespace] = new SolanaProvider(opts1, () => { return this.session; });\n                    break;\n                case \"ton\":\n                    const optsTon = {\n                        namespace: currentNameSpace\n                    };\n                    let tonProvider = new ton_1.default(optsTon, this.client, this.events);\n                    this.rpcProviders[namespace] = tonProvider;\n                    break;\n                case \"sui\":\n                    const optsSui = {\n                        namespace: currentNameSpace\n                    };\n                    let suiProvider = new sui_1.SuiProvider(optsSui, this.client, this.events);\n                    suiProvider.name = \"sui\";\n                    this.rpcProviders[namespace] = suiProvider;\n                    break;\n                case \"btc\":\n                    const optsBtc = {\n                        namespace: currentNameSpace\n                    };\n                    let btcProvider = new btc_1.default(optsBtc, \"btc\", this.client, this.events);\n                    this.rpcProviders[\"btc\"] = btcProvider;\n                    let fbProvider = new btc_1.default(optsBtc, \"fractal\", this.client, this.events);\n                    this.rpcProviders[\"fractal\"] = fbProvider;\n                    break;\n                case \"aptos\":\n                    let aptosProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"aptos\", this.client, this.events);\n                    this.rpcProviders[namespace] = aptosProvider;\n                    let moveProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"movement\", this.client, this.events);\n                    this.rpcProviders[\"movement\"] = moveProvider;\n                    break;\n                case \"cosmos\":\n                    let cosmosProvider = new cosmos_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = cosmosProvider;\n                    break;\n                case \"tron\":\n                    let tronProvider = new tron_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = tronProvider;\n                    break;\n                case \"starknet\":\n                    let starknetProvider = new starknet_1.default({\n                        namespace: currentNameSpace\n                    }, \"starknet\", this.client, this.events);\n                    this.rpcProviders[namespace] = starknetProvider;\n                    break;\n            }\n        });\n    }\n    registerEventListeners() {\n        if (typeof this.client === \"undefined\") {\n            throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client is not initialized\");\n        }\n        this.client.engine.addDisconnectListener(() => {\n            this.disconnectAndEmit();\n            this.cleanup();\n        });\n        this.on(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, (caip2ChainId) => {\n            this.onChainChanged(caip2ChainId);\n        });\n        this.on(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, (nameSpaces) => {\n            if (nameSpaces) {\n                const nameSpacekey = Object.keys(nameSpaces)[0];\n                if (this.session) {\n                    this.session.namespaces[nameSpacekey] = nameSpaces[nameSpacekey];\n                    if (this.session) {\n                        this.persist(\"connectSession\", this.session);\n                        this.events.emit(\"session_update\", this.session);\n                    }\n                    (0, core_2.logDebug)(\"PROVIDER_EVENTS.UPDATE_NAMESPACES this.session... ->>>\", JSON.stringify(this.session));\n                }\n            }\n        });\n    }\n    getProvider(namespace) {\n        (0, core_2.logDebug)('current get providers', this.rpcProviders);\n        (0, core_2.logDebug)('query namespace: ', namespace);\n        return this.rpcProviders[namespace];\n    }\n    setNamespaces(params) {\n        this.connectOpts = params;\n        const { namespaces, sessionConfig } = params;\n        const data = {\n            origin: window.location.origin,\n            url: window.location.hostname,\n            name: this.providerOpts.dappMetaData.name,\n            icon: this.providerOpts.dappMetaData.icon,\n            manifestUrl: this.providerOpts.dappMetaData.manifestUrl,\n        };\n        this.sessionConfig = Object.assign({ dappInfo: data }, sessionConfig);\n        (0, core_2.logDebug)(\"setNamespaces sessionConfig>>>\", this.sessionConfig);\n        this.client.sessionConfig = this.sessionConfig;\n        this.persist(\"sessionConfig\", sessionConfig);\n    }\n    validateChain(chain) {\n        var _a;\n        let [namespace, chainId] = (chain === null || chain === void 0 ? void 0 : chain.split(\":\")) || [\"\", \"\"];\n        if (!this.session || !this.session.namespaces || !Object.keys(this.session.namespaces).length) {\n            (0, core_2.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        if (namespace) {\n            if (!this.isChainNamespaceInSession(namespace)) {\n                throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace '${namespace}' is not configured. Please call connect() first with namespace config.`);\n            }\n            if (chainId && chain) {\n                (0, core_2.logDebug)('this.session.namespaces -->> ', namespace, JSON.stringify(this.session.namespaces));\n                const chainsArr = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.chains;\n                (0, core_2.logDebug)('get chainsArr & chain', JSON.stringify(chainsArr), chain);\n                if (chainsArr && !chainsArr.includes(chain)) {\n                    throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace not include the chain '${chain}'`);\n                }\n            }\n        }\n        if (namespace && chainId) {\n            (0, core_2.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        let defaultNamespace = (0, namespaces_1.parseNamespaceKey)(Object.keys(this.session.namespaces)[0]);\n        const defaultChain = this.rpcProviders[defaultNamespace].getDefaultChain();\n        (0, core_2.logDebug)('get default chain:', defaultChain);\n        return [defaultNamespace, defaultChain];\n    }\n    isChainNamespaceInSession(namespaceStr) {\n        var _a, _b;\n        if (Object.keys(((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces) || {})\n            .map((key) => (0, namespaces_1.parseNamespaceKey)(key))\n            .includes(namespaceStr)) {\n            return true;\n        }\n        let isChainNamespaceInSession = false;\n        Object.values(((_b = this.session) === null || _b === void 0 ? void 0 : _b.namespaces) || {})\n            .forEach(namespace => {\n            namespace.chains.forEach(chain => {\n                if (chain.split(\":\")[0] == namespaceStr) {\n                    isChainNamespaceInSession = true;\n                }\n            });\n        });\n        return isChainNamespaceInSession;\n    }\n    requestAccountsWithNamespace(namespace) {\n        return this.getProvider(namespace).requestAccounts();\n    }\n    requestDefaultChainWithNamespace(namespace) {\n        return this.getProvider(namespace).getDefaultChain();\n    }\n    requestAccounts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const [namespace] = this.validateChain();\n            return yield this.getProvider(namespace).requestAccounts();\n        });\n    }\n    onChainChanged(caip2Chain) {\n        var _a;\n        if (!((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces))\n            return;\n        const [namespace, chainId] = this.validateChain(caip2Chain);\n        if (!chainId)\n            return;\n        if (this.session.namespaces[namespace]) {\n            this.session.namespaces[namespace].defaultChain = chainId;\n            this.persist(\"connectSession\", this.session);\n        }\n        this.events.emit(\"chainChanged\", chainId);\n    }\n    onConnect() {\n        this.createProviders();\n        if (this.session) {\n            this.persist(\"connectSession\", this.session);\n            console.log(\"window.okxwallet save session:\", Date.now());\n        }\n        this.events.emit(\"connect\", { session: this.session });\n        this.registerEventListeners();\n    }\n    cleanup() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.session = undefined;\n            this.client.session = undefined;\n            this.setConnectConnector();\n            this.sessionProperties = undefined;\n            this.persist(\"optionalNamespaces\", undefined);\n            this.persist(\"sessionProperties\", undefined);\n            this.persist(\"connectSession\", undefined);\n        });\n    }\n    persist(key, data) {\n        (0, core_2.logDebug)('[evm u-provider] persisit data', key, data);\n        return this.client.engine.saveSessionContent(key, data);\n    }\n    getFromStore(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.client.engine.getSessionContent(key);\n        });\n    }\n    showRequestModal(args, chain) {\n        try {\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return this.getProvider(namespace).showRequestModal(requestParam);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    openWallet(engineConnectInfo, connector) {\n        this.client.openWallet(engineConnectInfo, connector);\n    }\n    registerConnector(connectors) {\n        this.client.registerConnector(connectors);\n        this.client.setAccountChangeListener(session => {\n            (0, core_2.logDebug)(\"accountChangeListener session：\", this.events.listenerCount('accountChanged'), JSON.stringify(session));\n            try {\n                if (session && this.events.listenerCount('accountChanged')) {\n                    this.replaceSessionAptos(session, \"aptos\");\n                    this.replaceSessionAptos(session, \"solana\");\n                    this.session = session;\n                    this.client.session = session;\n                    if (this.session) {\n                        this.persist(\"connectSession\", this.session);\n                        console.log(\"window.okxwallet save session:\", Date.now());\n                    }\n                    this.setConnectConnector();\n                    this.createProviders();\n                    this.events.emit(\"accountChanged\", this.session);\n                }\n            }\n            catch (error) {\n                (0, core_2.logDebug)(\"setAccountChangeListener error:\", JSON.stringify(error));\n            }\n        });\n    }\n}\nexports.OKXUniversalProvider = OKXUniversalProvider;\nexports.default = OKXUniversalProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXStarknetProvider = exports.OKXTronProvider = exports.OKXTonProvider = exports.OKXCosmosProvider = exports.OKXBtcProvider = exports.OKXUniversalProvider = void 0;\n__exportStar(require(\"./provider/types\"), exports);\n__exportStar(require(\"./packages\"), exports);\nvar OKXUniversalProvider_1 = require(\"./OKXUniversalProvider\");\nObject.defineProperty(exports, \"OKXUniversalProvider\", { enumerable: true, get: function () { return OKXUniversalProvider_1.OKXUniversalProvider; } });\nvar OKXBtcProvider_1 = require(\"./OKXBtcProvider\");\nObject.defineProperty(exports, \"OKXBtcProvider\", { enumerable: true, get: function () { return OKXBtcProvider_1.OKXBtcProvider; } });\nvar OKXCosmosProvider_1 = require(\"./OKXCosmosProvider\");\nObject.defineProperty(exports, \"OKXCosmosProvider\", { enumerable: true, get: function () { return OKXCosmosProvider_1.OKXCosmosProvider; } });\nvar OKXTonProvider_1 = require(\"./OKXTonProvider\");\nObject.defineProperty(exports, \"OKXTonProvider\", { enumerable: true, get: function () { return OKXTonProvider_1.OKXTonProvider; } });\nvar OKXTronProvider_1 = require(\"./OKXTronProvider\");\nObject.defineProperty(exports, \"OKXTronProvider\", { enumerable: true, get: function () { return OKXTronProvider_1.OKXTronProvider; } });\nvar OKXStarknetProvider_1 = require(\"./OKXStarknetProvider\");\nObject.defineProperty(exports, \"OKXStarknetProvider\", { enumerable: true, get: function () { return OKXStarknetProvider_1.OKXStarknetProvider; } });\n__exportStar(require(\"@okxconnect/core\"), exports);\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignClient = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"../utils/namespaces\");\nconst ConnectMethodUtils_1 = require(\"../utils/ConnectMethodUtils\");\nconst constants_1 = require(\"../../provider/constants\");\nclass SignClient extends core_1.ISignClient {\n    constructor(metaData, events) {\n        super(metaData);\n        // ---------- Engine ----------------------------------------------- //\n        this.connect = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    var connectRequest = [];\n                    (0, core_1.logDebug)(`client connect params >>>`, JSON.stringify(params));\n                    var requestAccountItem = {\n                        name: \"requestAccounts\",\n                        requiredNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.namespaces),\n                        optionalNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.optionalNamespaces),\n                    };\n                    this.engine.setSessionConnectingListener(() => {\n                        (0, core_1.logDebug)(`sessionConnectingListener >>>`);\n                        this.events.emit(constants_1.PROVIDER_EVENTS.SESSION_CONNECTING);\n                    });\n                    if (params.signRequest) {\n                        requestAccountItem.connectRequestMethods = yield (0, ConnectMethodUtils_1.connectMethodsToConnectWalletMethods)(params.signRequest, requestAccountItem.requiredNamespaces);\n                    }\n                    connectRequest.push(requestAccountItem);\n                    (0, core_1.logDebug)(`client connect connectRequest >>>`, JSON.stringify(connectRequest));\n                    this.engine.universalConnect(connectRequest, Object.assign({ dappInfo: this.metadata }, params.sessionConfig), (info) => {\n                        if (info && info.connectRequest) {\n                            (0, core_1.logDebug)(`universalConect info.connectRequest :`, info.connectRequest);\n                            (0, core_1.logDebug)(`universalConect url:`, (0, core_1.getOKXLink)(info.connectRequest, this.sessionConfig.useMini));\n                            this.events.emit(\"display_uri\", (0, core_1.getOKXLink)(info.connectRequest, this.sessionConfig.useMini));\n                            this.events.emit(\"short_display_uri\", (0, core_1.getAppWalletShortDeepLink)(info.connectRequest.topic, info.connectRequest.clientId));\n                            (0, core_1.logDebug)(`universalConect EngineConnectInfo  ${JSON.stringify(info)}`);\n                            this.events.emit(\"okx_engine_connect_params\", info);\n                        }\n                    }).then((session) => __awaiter(this, void 0, void 0, function* () {\n                        (0, namespaces_1.fillParamsToSession)(session, params.namespaces, params.optionalNamespaces, this.sessionConfig);\n                        (0, core_1.logDebug)(`signClient: connect: session ${JSON.stringify(session)}`);\n                        if (params.signRequest) {\n                            yield (0, ConnectMethodUtils_1.connectMethodsResponseUpdate)(session, params.signRequest);\n                        }\n                        resolve(session);\n                    })).catch((e) => {\n                        (0, core_1.logDebug)(`signClient: connect: catch ${JSON.stringify(e)}`);\n                        this.events.emit(\"connect_error\", e);\n                        reject(e);\n                    });\n                }\n                catch (error) {\n                    (0, core_1.logDebug)(`signClient: connect:  ${JSON.stringify(error)}`);\n                    reject(error);\n                }\n            }));\n        });\n        this.restoreconnect = (sessionConfig) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.restoreconnect(sessionConfig, (session) => {\n                    if (session) {\n                        resolve(session);\n                    }\n                    else {\n                        reject();\n                    }\n                });\n            });\n        });\n        this.reject = (params) => __awaiter(this, void 0, void 0, function* () {\n        });\n        this.request = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                (0, core_1.logDebug)(\"clint request --params>>>> >\", (_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl, (0, core_1.safeJsonStringify)(params));\n                try {\n                    // this.sessionConfig\n                    if (((_b = this.sessionConfig) === null || _b === void 0 ? void 0 : _b.openUniversalUrl) && (0, core_1.isIos)()) {\n                        this.openOKXWallet();\n                    }\n                    yield this.engine.send(params, {\n                        resolve: (response) => {\n                            delete response.requestId;\n                            (0, core_1.logDebug)(\"clint request --response >\", (0, core_1.safeJsonStringify)(response));\n                            if (('error' in response) && response.error) {\n                                let error = response.error;\n                                reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                            }\n                            else {\n                                resolve(response);\n                            }\n                        },\n                        onAck: () => {\n                            var _a;\n                            if (!(0, core_1.isIos)() && ((_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl)) {\n                                this.openOKXWallet();\n                            }\n                        }\n                    });\n                }\n                catch (e) {\n                    (0, core_1.logDebug)(\"clint request --error:\", e);\n                    reject(e);\n                }\n            }));\n        });\n        this.disconnect = () => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"disconnect\"\n                }, {\n                    onAck: () => {\n                        resolve();\n                    }\n                }, 86400000).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n        this.engine = new core_1.Engine(metaData.name);\n        this.events = events;\n        this.metadata = metaData;\n    }\n    setAccountChangeListener(accountChangeListener) {\n        this.engine.setAccountChangeListener(accountChangeListener);\n    }\n    openOKXWallet() {\n        // if (this.openUniversalUrl){\n        (0, core_1.logDebug)('bridge-provider ==>> connect_5');\n        this.engine.openWallet({ tmaReturnUrl: this.sessionConfig.tmaReturnUrl });\n        // if (this.sessionConfig?.useMini){\n        //     let url = getTelegramWalletTWAUrl(undefined,this.sessionConfig.tmaReturnUrl)\n        //     openOKXTMAWalletlinkWithFallback(url)\n        // }else{\n        //     openOKXDeeplink(standardDeeplink);\n        // }\n        // }\n    }\n    syncAllAddress() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"sync_all_addresses\"\n                }, {\n                    resolve: (response) => {\n                        delete response.requestId;\n                        (0, core_1.logDebug)(\"clint syncAllAddress --response >\", JSON.stringify(response));\n                        if (('error' in response) && response.error) {\n                            let error = response.error;\n                            reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                        }\n                        else {\n                            let allAddressStr = response.result;\n                            resolve((0, ConnectMethodUtils_1.syncResoonseToRequire)(allAddressStr));\n                        }\n                    }\n                }).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n    }\n    registerConnector(connectors) {\n        this.engine.registerConnector(connectors);\n    }\n    openWallet(engineConnectInfo, connector) {\n        this.engine.openWallet(engineConnectInfo, connector);\n    }\n    setConnectConnector(wallet) {\n        this.engine.setConnectConnector(wallet);\n    }\n}\nexports.SignClient = SignClient;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.connectSupportMethods = void 0;\nexports.creatNotSupportMethodItemReplay = creatNotSupportMethodItemReplay;\nexports.connectMethodsAdaptOldVersion = connectMethodsAdaptOldVersion;\nexports.connectMethodsResponseUpdate = connectMethodsResponseUpdate;\nexports.connectMethodsToConnectWalletMethods = connectMethodsToConnectWalletMethods;\nexports.syncResoonseToRequire = syncResoonseToRequire;\nconst core_1 = require(\"@okxconnect/core\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst provider_1 = require(\"../../provider\");\nfunction isArray(value) {\n    return typeof value === \"object\" && value !== null && Array.isArray(value);\n}\nfunction isRecord(value) {\n    return typeof value === \"object\" && value !== null && !Array.isArray(value);\n}\n// \"wallet_addEthereumChain\",\n// \"solana_signMessage\",  There are risks\nexports.connectSupportMethods = Object.freeze([\n    \"personal_sign\",\n    \"sui_signMessage\",\n    \"sui_signPersonalMessage\",\n    \"btc_signMessage\",\n    \"aptos_signMessage\",\n    \"cosmos_signArbitrary\",\n    \"tron_signMessage\",\n    \"tron_signMessageV2\",\n    \"starknet_signMessage\",\n    \"sync_all_addresses\"\n]);\nfunction creatNotSupportMethodItemReplay(requestParams) {\n    let notSupportError = new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n    var errorItem = {\n        method: requestParams.method,\n        chainId: requestParams.chainId,\n        error: {\n            code: notSupportError.code,\n            message: notSupportError.message\n        },\n    };\n    return errorItem;\n}\nfunction connectMethodsAdaptOldVersion(requestParams, session) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b, _c, _d, _e;\n        try {\n            (0, core_1.logDebug)(\"connectMethodsAdaptOldVersion start params :\", JSON.stringify(requestParams));\n            let callBackParams = {};\n            if (requestParams.method === \"solana_signMessage\") {\n                let solAccount = (_a = session.namespaces[core_1.NameSpaceKeySOL]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account1) {\n                    return account1.startsWith(requestParams.chainId);\n                })[0];\n                const solAddress = (0, provider_1.fromAccountToAddress)(solAccount);\n                if (requestParams.params && solAddress && \"message\" in requestParams.params) {\n                    let realMessage = requestParams.params.message;\n                    if (((_b = session.wallet) === null || _b === void 0 ? void 0 : _b.appName) == \"OKX Wallet\") {\n                        let encodeMessage = new TextEncoder().encode(realMessage);\n                        realMessage = bs58_1.default.encode(encodeMessage);\n                    }\n                    requestParams.params = {\n                        message: realMessage,\n                        \"pubkey\": solAddress\n                    };\n                    requestParams.injectParams = requestParams.params;\n                    callBackParams = {\n                        publicKey: solAddress\n                    };\n                    (0, core_1.logDebug)(\"solana_signMessage account and address:\", JSON.stringify(solAccount), solAddress);\n                    (0, core_1.logDebug)(\"solana_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"sui_signMessage\" || requestParams.method === \"sui_signPersonalMessage\") {\n                if (\"message\" in requestParams.params && requestParams.params.message) {\n                    let suiMessage = JSON.parse(JSON.stringify(requestParams.params.message));\n                    let convertedArray = Object.values(suiMessage);\n                    let uint8Array = new Uint8Array(convertedArray);\n                    let decoder = new TextDecoder(\"utf8\");\n                    let b64encoded = btoa(decoder.decode(uint8Array));\n                    requestParams.params = {\n                        message: atob(b64encoded),\n                    };\n                    requestParams.injectParams = {\n                        message: uint8Array\n                    };\n                    console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", JSON.stringify(requestParams.params), b64encoded);\n                    if (requestParams.method === \"sui_signMessage\") {\n                        callBackParams = {\n                            \"messageBytes\": b64encoded,\n                            \"signature\": \"\"\n                        };\n                    }\n                    else if (requestParams.method === \"sui_signPersonalMessage\") {\n                        callBackParams = {\n                            \"bytes\": b64encoded,\n                            \"signature\": \"\"\n                        };\n                    }\n                    (0, core_1.logDebug)(\"sui_signMessage/sui_signPersonalMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"btc_signMessage\") {\n                let btcAccounts = (_c = session.namespaces[core_1.NameSpaceKeyBtc]) === null || _c === void 0 ? void 0 : _c.accounts.filter(function (account2) {\n                    return account2.startsWith(requestParams.chainId);\n                });\n                let btcAccount = btcAccounts[0];\n                const btcAddress = (0, provider_1.fromAccountToAddress)(btcAccount);\n                (0, core_1.logDebug)(\"btc_signMessage account and address:\", JSON.stringify(btcAccount), btcAddress);\n                if (btcAddress) {\n                    if (\"message\" in requestParams.params && requestParams.params.message && typeof requestParams.params.message === 'string') {\n                        requestParams.params = {\n                            from: btcAddress,\n                            signStr: requestParams.params.message\n                        };\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                    }\n                    requestParams.params[\"from\"] = btcAddress;\n                    (0, core_1.logDebug)(\"btc_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"aptos_signMessage\") {\n                let paramData = requestParams.params;\n                let aptosAccount = (_d = session.namespaces[core_1.NameSpaceKeyAptos]) === null || _d === void 0 ? void 0 : _d.accounts.filter(function (account3) {\n                    return account3.startsWith(requestParams.chainId);\n                })[0];\n                let aptosAddress = (0, provider_1.fromAccountToAddress)(aptosAccount);\n                if (paramData && aptosAddress) {\n                    let prefix = \"APTOS\";\n                    let message = \"\", nonce = \"\";\n                    var fullMessage = prefix;\n                    let application = window.location.protocol + \"//\" + window.location.hostname;\n                    if (\"address\" in paramData && paramData.address) {\n                        fullMessage += \"\\naddress: \" + aptosAddress;\n                    }\n                    if (\"application\" in paramData && paramData.application) {\n                        fullMessage += \"\\napplication: \" + application;\n                    }\n                    let aptosChainId = 1;\n                    if (\"chainId\" in paramData && paramData.chainId) {\n                        if (paramData.chainId == \"aptos:mainnet\") {\n                            aptosChainId = 1;\n                        }\n                        else if (paramData.chainId == \"movement:testnet\") {\n                            aptosChainId = 2;\n                        }\n                        fullMessage += \"\\nchainId: \" + aptosChainId;\n                    }\n                    if (\"message\" in paramData) {\n                        fullMessage += \"\\nmessage: \" + paramData.message;\n                        message = paramData.message;\n                    }\n                    if (\"nonce\" in paramData) {\n                        fullMessage += \"\\nnonce: \" + paramData.nonce;\n                        nonce = paramData.nonce;\n                    }\n                    const utf8Array = new TextEncoder().encode(fullMessage);\n                    const hex = Array.from(utf8Array)\n                        .map(byte => byte.toString(16).padStart(2, \"0\"))\n                        .join(\"\");\n                    requestParams.params = {\n                        \"message\": hex,\n                    };\n                    (0, core_1.logDebug)(\"aptos_signMessage requestParams:\", JSON.stringify(requestParams));\n                    callBackParams = {\n                        address: aptosAddress,\n                        application: application,\n                        chainId: aptosChainId,\n                        fullMessage: fullMessage,\n                        message: message,\n                        nonce: nonce,\n                        prefix: prefix,\n                        signature: \"\",\n                    };\n                    (0, core_1.logDebug)(\"aptos_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"cosmos_signArbitrary\") {\n                let cosmosAccount = (_e = session === null || session === void 0 ? void 0 : session.namespaces[core_1.NameSpaceKeyCosmos]) === null || _e === void 0 ? void 0 : _e.accounts.filter(function (account_cosmos) {\n                    return account_cosmos.startsWith(requestParams.chainId);\n                })[0];\n                const cosmosAddress = (0, provider_1.fromAccountToAddress)(cosmosAccount);\n                let cosmosData = requestParams.params[\"message\"];\n                const cosmosBase64Encoded = btoa(cosmosData);\n                (0, core_1.logDebug)(\"cosmos_signArbitrary account and address:\", JSON.stringify(cosmosAccount), cosmosAddress);\n                (0, core_1.logDebug)(\"cosmos_signArbitrary cosmosBase64Encoded:\", cosmosBase64Encoded);\n                if (cosmosData && cosmosAddress) {\n                    const signDoc = {\n                        chain_id: \"\",\n                        account_number: \"0\",\n                        sequence: \"0\",\n                        fee: {\n                            gas: \"0\",\n                            amount: []\n                        },\n                        msgs: [{\n                                \"type\": \"sign/MsgSignData\",\n                                \"value\": {\n                                    \"signer\": cosmosAddress,\n                                    \"data\": cosmosBase64Encoded\n                                }\n                            }],\n                        memo: \"\"\n                    };\n                    requestParams.params = {\n                        \"signer\": cosmosAddress,\n                        \"chain_id\": requestParams.chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    };\n                    (0, core_1.logDebug)(\"cosmos_signArbitrary callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            (0, core_1.logDebug)(\"sol_handleSignatureData end params:\", JSON.stringify(requestParams));\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\nfunction connectMethodsResponseUpdate(session, requestParams) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a;\n        try {\n            if (session.signResponse) {\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate signResponse:\", JSON.stringify(session.signResponse));\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate session.namespaces:\", JSON.stringify(session.namespaces));\n                for (const methodItem of session.signResponse) {\n                    (0, core_1.logDebug)(\"connectMethodsResponseUpdate methodItem:\", JSON.stringify(methodItem));\n                    if (\"result\" in methodItem) {\n                        if (methodItem.method === \"solana_signMessage\") {\n                            let solanaSuccessData = methodItem.result;\n                            (0, core_1.logDebug)(\"solana_signMessage methodItem.chainId:\", methodItem.chainId);\n                            let account = (_a = session.namespaces[core_1.NameSpaceKeySOL]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account) {\n                                (0, core_1.logDebug)(\"solana_signMessage account:\", account);\n                                return account.startsWith(methodItem.chainId);\n                            })[0];\n                            (0, core_1.logDebug)(\"solana_signMessage result account:\", solanaSuccessData, account);\n                            if (solanaSuccessData && account) {\n                                methodItem.result = {\n                                    \"signature\": bs58_1.default.decode(solanaSuccessData),\n                                    \"publicKey\": (0, provider_1.fromAccountToAddress)(account)\n                                };\n                            }\n                        }\n                        else if (methodItem.method === \"sui_signMessage\" || methodItem.method === \"sui_signPersonalMessage\") {\n                            let suiMethod = requestParams.filter(function (requestMethod) {\n                                return requestMethod.method === methodItem.method;\n                            })[0];\n                            if (suiMethod && suiMethod.params && \"message\" in suiMethod.params) {\n                                let suiMessage = suiMethod.params.message;\n                                let suiMessageb64 = btoa(suiMessage);\n                                console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", suiMessage, suiMessageb64);\n                                if (methodItem.method === \"sui_signMessage\") {\n                                    methodItem.result = {\n                                        \"messageBytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                                else if (methodItem.method === \"sui_signPersonalMessage\") {\n                                    methodItem.result = {\n                                        \"bytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                            }\n                        }\n                        else if (methodItem.method === \"aptos_signMessage\") {\n                            methodItem.chainId = (0, core_1.replaceChainIdToChainName)(methodItem.chainId);\n                            methodItem.result = JSON.parse(methodItem.result);\n                            console.log(\"aptos_signMessage result methodItem.result before:>>>>\", JSON.stringify(methodItem.result));\n                            if (methodItem.result && \"signature\" in methodItem.result) {\n                                let aptosSignature = methodItem.result.signature;\n                                if (aptosSignature && aptosSignature.startsWith(\"0x\")) {\n                                    aptosSignature = aptosSignature.slice(2, aptosSignature.length);\n                                    methodItem.result.signature = aptosSignature;\n                                }\n                            }\n                            console.log(\"aptos_signMessage result methodItem.result after:>>>>\", JSON.stringify(methodItem.result));\n                        }\n                        else if (methodItem.method === \"cosmos_signArbitrary\") {\n                            methodItem.result = JSON.parse(methodItem.result);\n                        }\n                        else if (methodItem.method == 'starknet_signMessage') {\n                            let results = methodItem.result;\n                            if (typeof results == 'string') {\n                                results = JSON.parse(results);\n                            }\n                            methodItem.result = [results[\"signedDataR\"], results[\"signedDataS\"]];\n                        }\n                        else if (methodItem.method == 'sync_all_addresses') {\n                            methodItem.result = syncResoonseToRequire(methodItem.result);\n                        }\n                    }\n                }\n            }\n        }\n        catch (error) {\n            (0, core_1.logDebug)(\"connectMethodsResponseUpdate signResponse Error:\", JSON.stringify(error));\n            throw error;\n        }\n    });\n}\nfunction connectMethodsToConnectWalletMethods(params, requireNameSpace) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods requestMethods:\", JSON.stringify(params));\n            const result = [];\n            //TODO  后面需要打开限制\n            if (params && params.length > 1) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connectAndSign/openModalAndSign signRequest only support one data`);\n            }\n            if (!requireNameSpace && params && params.length > 0) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error , RequestMethods cannot be added when the NameSpace is empty`);\n            }\n            // check chianId\n            for (const methodItem of params) {\n                if (methodItem.method === \"aptos_signMessage\") { //update chainId\n                    methodItem.chainId = (0, core_1.replaceChainNameToChainId)(methodItem.chainId);\n                }\n                // check chianId\n                if (methodItem.method === \"wallet_addEthereumChain\") {\n                    var includeEip155 = requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.namespace.includes(\"eip155\"));\n                    if (!includeEip155) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', the EVM chain needs to be included in the NameSpace`);\n                    }\n                }\n                else if (methodItem.method === \"sync_all_addresses\") {\n                    if ((0, provider_1.syncAddressHostAvailable)()) {\n                        methodItem.chainId = \"\";\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                    }\n                }\n                else {\n                    const includeChain = !!(requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.chains.some(chain => chain.includes(`${methodItem.chainId}`))));\n                    if (!includeChain) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', NameSpace must contain '${methodItem.chainId}'`);\n                    }\n                }\n            }\n            for (const item of params) {\n                if (!exports.connectSupportMethods.includes(item.method)) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect requestMethods not support method, method: '${item.method}'`);\n                }\n                if (item.method === \"wallet_addEthereumChain\") {\n                    if (Array.isArray(item.params)) {\n                        const paramsArr = item.params;\n                        if (paramsArr && paramsArr.length === 1) {\n                            const firstParam = paramsArr[0];\n                            if (isRecord(firstParam)) {\n                                item.params = firstParam;\n                            }\n                        }\n                        else if (paramsArr && paramsArr.length > 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params only support one data, method: '${item.method}'`);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is nil, method: '${item.method}'`);\n                        }\n                    }\n                }\n                else if (item.method === \"personal_sign\") {\n                    if (isArray(item.params)) {\n                        if (item.params && item.params.length !== 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params error,  method: '${item.method}' `);\n                        }\n                        let firstObj = item.params[0];\n                        if (firstObj && typeof firstObj === 'string') {\n                            item.params = {\n                                message: firstObj\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                }\n                else if (item.method === \"sui_signMessage\" || item.method === \"sui_signPersonalMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message) {\n                            (0, core_1.logDebug)(\"sui_signMessage item.params.message :\", item.params.message);\n                            let message = JSON.parse(JSON.stringify(item.params.message));\n                            let convertedArray = Object.values(message);\n                            let uint8Array = new Uint8Array(convertedArray);\n                            let decoder = new TextDecoder(\"utf8\");\n                            let b64encoded = btoa(decoder.decode(uint8Array));\n                            item.params.message = atob(b64encoded);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"solana_signMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            let encodeMessage = new TextEncoder().encode(item.params.message);\n                            item.params[\"bs58Message\"] = bs58_1.default.encode(encodeMessage);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"aptos_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (item.chainId) {\n                            var aptosParams = item.params;\n                            var currentURL = window.location.protocol + \"//\" + window.location.hostname;\n                            let signChainId = 1;\n                            if (item.chainId === \"aptos:637\") {\n                            }\n                            else if (item.chainId === \"aptos:70000060\") {\n                                signChainId = 2;\n                            }\n                            item.params = {\n                                data: aptosParams,\n                                applicationUrl: currentURL,\n                                prefix: \"APTOS\",\n                                aptosChainId: signChainId\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"cosmos_signArbitrary\") {\n                    if (isRecord(item.params)) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            const base64Encoded = btoa(item.params.message);\n                            let cosmosChain = item.chainId.split(\":\")[1];\n                            if (cosmosChain) {\n                                item.params = {\n                                    chain_id: cosmosChain,\n                                    data: {\n                                        chain_id: \"\",\n                                        account_number: \"0\",\n                                        sequence: \"0\",\n                                        fee: {\n                                            gas: \"0\",\n                                            amount: []\n                                        },\n                                        msgs: [{\n                                                \"type\": \"sign/MsgSignData\",\n                                                \"value\": {\n                                                    \"signer\": \"\", //address\n                                                    \"data\": base64Encoded\n                                                }\n                                            }],\n                                        memo: \"\"\n                                    }\n                                };\n                            }\n                            else {\n                                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                            }\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params message is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method == \"tron_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (\"message\" in item.params && item.params.message && typeof item.params.message === 'string') {\n                            item.params.message = stringToHex(item.params.message);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method == \"btc_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (\"message\" in item.params && item.params.message && typeof item.params.message === 'string') {\n                            item.params = {\n                                signStr: item.params.message\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods item:\", JSON.stringify(item));\n                result.push(item);\n            }\n            return result;\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\nfunction stringToHex(str) {\n    let hex = '';\n    for (let i = 0; i < str.length; i++) {\n        hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n    }\n    return hex;\n}\nfunction syncResoonseToRequire(responseAddressStr) {\n    const allAddress = JSON.parse(responseAddressStr);\n    const result = {\n        type: allAddress.type,\n        isEvm: allAddress.isEvm,\n        walletName: allAddress.walletName,\n        deriveName: allAddress.deriveName,\n        addresses: allAddress.addresses.map((addr) => ({\n            coinId: addr.ci,\n            address: addr.a && addr.a !== 'null' ? addr.a : allAddress.evmAddress,\n        })),\n    };\n    return result;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.creatNotSupportMethodItemReplay = exports.connectMethodsAdaptOldVersion = void 0;\nvar ConnectMethodUtils_1 = require(\"./ConnectMethodUtils\");\nObject.defineProperty(exports, \"connectMethodsAdaptOldVersion\", { enumerable: true, get: function () { return ConnectMethodUtils_1.connectMethodsAdaptOldVersion; } });\nObject.defineProperty(exports, \"creatNotSupportMethodItemReplay\", { enumerable: true, get: function () { return ConnectMethodUtils_1.creatNotSupportMethodItemReplay; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAccountsChains = getAccountsChains;\nexports.nameSpaceToConnectWalletNameSpace = nameSpaceToConnectWalletNameSpace;\nexports.fillParamsToSession = fillParamsToSession;\nexports.isCaipNamespace = isCaipNamespace;\nexports.parseNamespaceKey = parseNamespaceKey;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getAccountsChains(accounts) {\n    const chains = [];\n    accounts.forEach((account) => {\n        const [chain, chainId] = account.split(\":\");\n        chains.push(`${chain}:${chainId}`);\n    });\n    return chains;\n}\nfunction nameSpaceToConnectWalletNameSpace(namespaces) {\n    var result = [];\n    if (!namespaces) {\n        return result;\n    }\n    Object.keys(namespaces).forEach((key) => {\n        if (key === core_1.NameSpaceKeyEip155 || key === core_1.NameSpaceKeySOL || key === core_1.NameSpaceKeySui || key === core_1.NameSpaceKeyAptos\n            || key == core_1.NameSpaceKeyBtc || key === core_1.NameSpaceKeyTON || key === core_1.NameSpaceKeyCosmos || key === core_1.NameSpaceKeyTron || key === core_1.NameSpaceKeyStarknet) {\n            if (namespaces[key].chains) {\n                result.push({\n                    namespace: key,\n                    chains: namespaces[key].chains,\n                    params: namespaces[key].params,\n                });\n            }\n        }\n    });\n    return result;\n}\nfunction fillParamsToSession(session, namespaces, optionalNamespaces, sessionConfig) {\n    // Helper function to merge rpcMaps\n    const mergeRpcMap = (targetRpcMap, sourceRpcMap) => {\n        Object.assign(targetRpcMap, sourceRpcMap);\n    };\n    // Merge function for namespaces\n    const mergeNamespaces = (target, source) => {\n        for (const key in source) {\n            if (source.hasOwnProperty(key) && source[key].rpcMap) {\n                if (source[key].rpcMap) {\n                    if (!target[key].rpcMap) {\n                        target[key].rpcMap = {};\n                    }\n                    // 合并 rpcMap\n                    mergeRpcMap(target[key].rpcMap, source[key].rpcMap);\n                }\n                if (source[key].defaultChain && target[key].defaultChain === undefined) {\n                    //defaultChain need in session nameSpace\n                    if (target[key].chains.some(chain => chain.split(\":\")[1] === source[key].defaultChain)) {\n                        target[key].defaultChain = source[key].defaultChain;\n                    }\n                }\n            }\n        }\n    };\n    // 合并 namespaces\n    if (namespaces) {\n        mergeNamespaces(session.namespaces, namespaces);\n    }\n    // 合并 optionalNamespaces\n    if (optionalNamespaces) {\n        mergeNamespaces(session.namespaces, optionalNamespaces);\n    }\n    for (const key in session.namespaces) {\n        const namespace = session.namespaces[key];\n        if (!(namespace === null || namespace === void 0 ? void 0 : namespace.accounts) || namespace.accounts.length === 0) {\n            delete session.namespaces[key];\n        }\n    }\n    if (session.namespaces[core_1.NameSpaceKeyBtc] && session.wallet.appName === core_1.OKXWalletName) {\n        fixMobileBtcSession(session.namespaces[core_1.NameSpaceKeyBtc]);\n    }\n    session.sessionConfig = sessionConfig;\n}\nfunction fixMobileBtcSession(btcNameSpace) {\n    try {\n        if (btcNameSpace && btcNameSpace.extra) {\n            var data = btcNameSpace.extra;\n            Object.keys(data).forEach(key => {\n                const item = data[key];\n                if (Number(item.addressType) === 6) {\n                    item.publicKey = item.compressedPublicKey.slice(2);\n                }\n                else {\n                    item.publicKey = item.compressedPublicKey;\n                }\n            });\n        }\n    }\n    catch (e) {\n        (0, core_1.logDebug)(\"namespaces fixMobileBtcSession error\");\n    }\n}\n/**\n * util designed for Wallets that builds namespaces structure by provided supported chains, methods, events & accounts.\n * It takes required & optional namespaces provided in the session proposal\n * along with the supported chains/methods/events/accounts by the wallet and returns a structured namespaces object\n * @param {BuildApprovedNamespacesParams} params\n * @returns {SessionTypes.Namespaces}\n */\n// export function buildApprovedNamespaces(\n//   params: BuildApprovedNamespacesParams,\n// ): SessionTypes.Namespaces {\n//   const {\n//     proposal: { requiredNamespaces, optionalNamespaces = {} },\n//     supportedNamespaces,\n//   } = params;\n//   const normalizedRequired = normalizeNamespaces(requiredNamespaces);\n//   const normalizedOptional = normalizeNamespaces(optionalNamespaces);\n//\n//   // build approved namespaces\n//   const namespaces = {};\n//   Object.keys(supportedNamespaces).forEach((namespace) => {\n//     const supportedChains = supportedNamespaces[namespace].chains;\n//     const supportedMethods = supportedNamespaces[namespace].methods;\n//     const supportedEvents = supportedNamespaces[namespace].events;\n//     const supportedAccounts = supportedNamespaces[namespace].accounts;\n//\n//     supportedChains.forEach((chain) => {\n//       if (!supportedAccounts.some((account) => account.includes(chain))) {\n//         throw new Error(`No accounts provided for chain ${chain} in namespace ${namespace}`);\n//       }\n//     });\n//\n//     namespaces[namespace] = {\n//       chains: supportedChains,\n//       methods: supportedMethods,\n//       events: supportedEvents,\n//       accounts: supportedAccounts,\n//     };\n//   });\n//\n//   // verify all required namespaces are supported\n//   const err = isConformingNamespaces(requiredNamespaces, namespaces, \"approve()\");\n//   if (err) throw new Error(err.message);\n//\n//   const approvedNamespaces = {};\n//\n//   // if both required & optional namespaces are empty, return all supported namespaces by the wallet\n//   if (!Object.keys(requiredNamespaces).length && !Object.keys(optionalNamespaces).length)\n//     return namespaces;\n//\n//   // assign accounts for the required namespaces\n//   Object.keys(normalizedRequired).forEach((requiredNamespace) => {\n//     const chains = supportedNamespaces[requiredNamespace].chains.filter((chain) =>\n//       normalizedRequired[requiredNamespace]?.chains?.includes(chain),\n//     );\n//     const methods = supportedNamespaces[requiredNamespace].methods.filter((method) =>\n//       normalizedRequired[requiredNamespace]?.methods?.includes(method),\n//     );\n//     const events = supportedNamespaces[requiredNamespace].events.filter((event) =>\n//       normalizedRequired[requiredNamespace]?.events?.includes(event),\n//     );\n//\n//     const accounts = chains\n//       .map((chain: string) =>\n//         supportedNamespaces[requiredNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[requiredNamespace] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   });\n//\n//   // add optional namespaces\n//   Object.keys(normalizedOptional).forEach((optionalNamespace) => {\n//     if (!supportedNamespaces[optionalNamespace]) return;\n//\n//     const chainsToAdd = normalizedOptional[optionalNamespace]?.chains?.filter((chain) =>\n//       supportedNamespaces[optionalNamespace].chains.includes(chain),\n//     );\n//     const methodsToAdd = supportedNamespaces[optionalNamespace].methods.filter((method) =>\n//       normalizedOptional[optionalNamespace]?.methods?.includes(method),\n//     );\n//     const eventsToAdd = supportedNamespaces[optionalNamespace].events.filter((event) =>\n//       normalizedOptional[optionalNamespace]?.events?.includes(event),\n//     );\n//\n//     const accountsToAdd = chainsToAdd\n//       ?.map((chain: string) =>\n//         supportedNamespaces[optionalNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[optionalNamespace] = {\n//       chains: mergeArrays(approvedNamespaces[optionalNamespace]?.chains, chainsToAdd),\n//       methods: mergeArrays(approvedNamespaces[optionalNamespace]?.methods, methodsToAdd),\n//       events: mergeArrays(approvedNamespaces[optionalNamespace]?.events, eventsToAdd),\n//       accounts: mergeArrays(approvedNamespaces[optionalNamespace]?.accounts, accountsToAdd),\n//     };\n//   });\n//\n//   return approvedNamespaces;\n// }\nfunction isCaipNamespace(namespace) {\n    return namespace.includes(\":\");\n}\nfunction parseNamespaceKey(namespace) {\n    return isCaipNamespace(namespace) ? namespace.split(\":\")[0] : namespace;\n}\n/**\n * Converts\n * ```\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * ```\n * into\n * ```\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *```\n */\n// export function normalizeNamespaces(\n//   namespaces: ProposalTypes.RequiredNamespaces,\n// ): ProposalTypes.RequiredNamespaces {\n//   const normalizedNamespaces = {} as ProposalTypes.RequiredNamespaces;\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       methods: mergeArrays(methods, normalizedNamespaces[normalizedKey]?.methods),\n//       events: mergeArrays(events, normalizedNamespaces[normalizedKey]?.events),\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n// export function getNamespacesFromAccounts(accounts: string[]) {\n//   const namespaces = {};\n//   accounts?.forEach((account) => {\n//     const [namespace, chainId] = account.split(\":\");\n//     if (!namespaces[namespace]) {\n//       namespaces[namespace] = {\n//         accounts: [],\n//         chains: [],\n//         events: [],\n//       };\n//     }\n//     namespaces[namespace].accounts.push(account);\n//     namespaces[namespace].chains.push(`${namespace}:${chainId}`);\n//   });\n//\n//   return namespaces;\n// }\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PROVIDER_EVENTS = void 0;\nexports.PROVIDER_EVENTS = {\n    DEFAULT_CHAIN_CHANGED: \"default_chain_changed\",\n    UPDATE_NAMESPACES: \"update_name_spaces\",\n    SESSION_CONNECTING: \"session_connecting\"\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./values\"), exports);\n__exportStar(require(\"./events\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GENERIC_SUBPROVIDER_NAME = exports.RPC_URL = exports.STORAGE = exports.CONTEXT = exports.WC_VERSION = exports.PROTOCOL = exports.RELAY_URL = exports.LOGGER = void 0;\nexports.LOGGER = \"error\";\nexports.RELAY_URL = \"wss://relay.walletconnect.com\";\nexports.PROTOCOL = \"wc\";\nexports.WC_VERSION = 2;\nexports.CONTEXT = \"universal_provider\";\nexports.STORAGE = `${exports.PROTOCOL}@${exports.WC_VERSION}:${exports.CONTEXT}:`;\nexports.RPC_URL = \"https://rpc.walletconnect.com/v1/\";\nexports.GENERIC_SUBPROVIDER_NAME = \"generic\";\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./types\"), exports);\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass AptosProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"aptos\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"aptos request --args--string>\", (0, core_1.safeJsonStringify)(args));\n            (0, core_1.logDebug)(\"aptos provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = AptosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass BtcProvider {\n    constructor(opts, name, client, events) {\n        this.name = core_1.NameSpaceKeyBtc;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"btc request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"btc provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = BtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass CosmosProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyCosmos;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"cosmos request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"cosmos provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = CosmosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Eip155Provider = void 0;\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nclass Eip155Provider {\n    constructor(opts, client, events) {\n        this.name = \"eip155\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = parseInt(this.getDefaultChain());\n        // rpc\n        this.httpProviders = this.createHttpProviders();\n        (0, core_1.logDebug)(\"eip155 constructor --opts.namespace-->\", opts.namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    isArray(value) {\n        return typeof value === \"object\" && value !== null && Array.isArray(value);\n    }\n    updateRequestParams(args) {\n        let isDic = args.params && typeof args.params === 'object' && !Array.isArray(args.params);\n        if (args.method === 'wallet_switchEthereumChain') {\n            const switchChainId = args.chainId.split(\":\")[1];\n            // const hexChainId = parseInt(switchChainId, 16);\n            const decimalNumber = parseInt(switchChainId, 10);\n            if (isNaN(decimalNumber)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid decimal number,  chainId: '${switchChainId}' `);\n            }\n            if (!args.params) {\n                args.params = { chainId: '0x' + decimalNumber.toString(16) };\n            }\n            else if (isDic) { //为 Record<string, unknown>\n                let params = args.params;\n                if (!('chainId' in params)) {\n                    params['chainId'] = '0x' + decimalNumber.toString(16);\n                    args.params = params;\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params error ,  method: '${args.method}' `);\n            }\n        }\n        else if (args.method === 'personal_sign'\n            || args.method === 'eth_signTypedData_v4'\n            || args.method === 'eth_sendTransaction'\n            || args.method === 'wallet_watchAsset') {\n            if (!args.params) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params is nil, method: '${args.method}'`);\n            }\n            if (this.isRecord(args.params)) {\n                let params = args.params;\n                (0, core_1.logDebug)(\"eip155 updateRequestParams params>\", JSON.stringify(params));\n                if ('chainId' in params) {\n                    const selectedChainId = args.chainId.split(\":\")[1];\n                    const chainNum = parseInt(selectedChainId, 10);\n                    let paramsChainString = String(params.chainId);\n                    let paramsChainId;\n                    if (paramsChainString.startsWith(this.name) && args.chainId === paramsChainString) { //为\n                        paramsChainId = chainNum;\n                    }\n                    else if (paramsChainString.startsWith(\"0x\")) {\n                        paramsChainId = parseInt(paramsChainString, 16);\n                    }\n                    else if (!isNaN(Number(paramsChainString))) { //数字\n                        paramsChainId = parseInt(paramsChainString, 10);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid params.chainId format, method: '${args.method}'`);\n                    }\n                    if (chainNum !== paramsChainId) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params.chainId not equal chain,  method: '${args.method}' `);\n                    }\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid request params type, method: '${args.method}'`);\n            }\n        }\n    }\n    //adapt array\n    adaptArray(args) {\n        if (args.method === 'wallet_switchEthereumChain'\n            || args.method === 'wallet_addEthereumChain'\n            || args.method === 'wallet_watchAsset'\n            || args.method === 'eth_sendTransaction') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr) {\n                    if (paramsArr.length === 1) {\n                        let firstParam = args.params[0];\n                        if (this.isRecord(firstParam)) {\n                            args.params = firstParam;\n                        }\n                    }\n                    else if (paramsArr.length > 1) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                    }\n                }\n            }\n        }\n        else if (args.method === 'eth_signTypedData_v4') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr && paramsArr.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                }\n                else if (paramsArr && paramsArr.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let messageObj = {};\n                if (paramsArr && paramsArr.length === 2) {\n                    let addressObj = args.params[0]; //address\n                    if (addressObj && typeof addressObj === 'string') { //check address\n                        let isEqual = false;\n                        this.namespace.accounts.forEach((account) => {\n                            let chainAddress = (0, utils_1.fromAccountToAddress)(account);\n                            if (chainAddress.toLowerCase() === addressObj.toLowerCase()) {\n                                isEqual = true;\n                            }\n                        });\n                        (0, core_1.logDebug)(\"eip155 adaptArray eth_signTypedData_v4 >>>isEqual: \", isEqual);\n                        if (!isEqual) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error, not equal,  method: '${args.method}' `);\n                        }\n                        if (this.isRecord(args.params[1])) {\n                            messageObj = args.params[1];\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error , not string,  method: '${args.method}' `);\n                    }\n                }\n                else if (paramsArr && paramsArr.length === 1) {\n                    if (this.isRecord(args.params[0])) {\n                        messageObj = args.params[0];\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                    }\n                }\n                try {\n                    let messages = JSON.stringify(messageObj);\n                    args.params = {\n                        typedDataJson: messages\n                    };\n                }\n                catch (err) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params call JSON.stringify() failed,  method: '${args.method}' `);\n                }\n            }\n        }\n        else if (args.method === 'personal_sign') {\n            if (this.isArray(args.params)) {\n                if (args.params && args.params.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params error,  method: '${args.method}' `);\n                }\n                else if (args.params && args.params.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let firstObj = args.params[0];\n                let secondObj = args.params[1];\n                if (secondObj && typeof secondObj === 'string') { //check address\n                    let isEqual = false;\n                    this.namespace.accounts.forEach((account) => {\n                        let chainAddress = (0, utils_1.fromAccountToAddress)(account);\n                        if (chainAddress.toLowerCase() === secondObj.toLowerCase()) {\n                            isEqual = true;\n                        }\n                    });\n                    (0, core_1.logDebug)(\"eip155 adaptArray personal_sign >>>isEqual: \", isEqual);\n                    if (!isEqual) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error,  method: '${args.method}' `);\n                    }\n                }\n                if (firstObj && typeof firstObj === 'string') {\n                    args.params = {\n                        message: firstObj\n                    };\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is error,  method: '${args.method}' `);\n                }\n            }\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"eth_requestAccounts\":\n            case \"eth_accounts\":\n            case \"eth_chainId\":\n                return false;\n            case \"eth_sendTransaction\":\n            case \"eth_signTransaction\":\n            case \"eth_sign\":\n            case \"personal_sign\":\n            case \"eth_signTypedData\":\n            case \"wallet_addEthereumChain\":\n            case \"wallet_watchAsset\":\n            case \"eth_signTypedData_v4\":\n                return true;\n            case \"wallet_switchEthereumChain\": {\n                this.adaptArray(args);\n                this.updateRequestParams(args);\n                const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n                return !this.isChainApproved(parsedChainId);\n            }\n            default:\n                return false;\n        }\n        return false;\n    }\n    configAddressAdaptInjectWallet(args) {\n        this.namespace.accounts.forEach((account) => {\n            if (account.includes(args.chainId)) {\n                args.address = (0, utils_1.fromAccountToAddress)(account);\n            }\n        });\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.adaptArray(args);\n            (0, core_1.logDebug)(\"eip155 request --args--string>\", JSON.stringify(args));\n            this.updateRequestParams(args);\n            (0, core_1.logDebug)(\"eip155 request --params--string>\", JSON.stringify(args));\n            this.configAddressAdaptInjectWallet(args);\n            switch (args.method) {\n                case \"eth_requestAccounts\":\n                    return this.getAccounts();\n                case \"eth_accounts\":\n                    return this.getAccounts();\n                case \"eth_chainId\":\n                    return parseInt(this.getDefaultChain());\n                case \"wallet_switchEthereumChain\": {\n                    return (yield this.handleSwitchChain(args));\n                }\n                case \"wallet_addEthereumChain\":\n                    return this.addEthereumChain(args);\n                default:\n                    break;\n            }\n            if (this.namespace.methods.includes(args.method)) {\n                // personal_sign\n                // eth_signTypedData_v4\n                // eth_sendTransaction\n                // wallet_watchAsset\n                try {\n                    const response = yield this.client.request(args);\n                    (0, core_1.logDebug)(\"eip155 request --response----string>\", JSON.stringify(response));\n                    if (this.isRecord(response)) {\n                        if ('result' in response) {\n                            let result = response.result;\n                            if (result && typeof result === 'string' && (result === \"true\" || result === \"false\")) {\n                                (0, core_1.logDebug)(\"eip155 request --wallet_watchAsset>>>>\", result === \"true\");\n                                return (result === \"true\");\n                            }\n                            return response.result;\n                        }\n                    }\n                    return response;\n                }\n                catch (e) {\n                    (0, core_1.logDebug)(`eip155 request --response --error--string> e instanceof OKXConnectError ${e instanceof core_1.OKXConnectError}`, JSON.stringify(e));\n                    throw e;\n                }\n            }\n            else {\n                (0, core_1.logDebug)('[RPC] request begin');\n                return yield this.getHttpProvider().request(args);\n            }\n        });\n    }\n    addEthereumChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let resultData = (yield this.client.request(args));\n            try {\n                if ('result' in resultData) {\n                    let successData = resultData;\n                    let account = resultData.result;\n                    if (account) {\n                        const nameSpace = account.split(\":\")[0];\n                        const chainId = account.split(\":\")[1];\n                        const chain = nameSpace + ':' + chainId;\n                        let newNameSpace = this.namespace;\n                        this.namespace.accounts.push(account);\n                        this.namespace.chains.push(chain);\n                        if (this.isRecord(args.params)) {\n                            if (\"rpcUrls\" in args.params) {\n                                let rpcUrls = args.params.rpcUrls;\n                                let rpcUrl = rpcUrls ? rpcUrls[0] : undefined;\n                                if (rpcUrl) {\n                                    if (this.namespace.rpcMap) {\n                                        this.namespace.rpcMap[chainId] = rpcUrl;\n                                    }\n                                    else {\n                                        this.namespace.rpcMap = {\n                                            [chainId]: rpcUrl\n                                        };\n                                    }\n                                    this.setHttpProvider(chainId, rpcUrl);\n                                }\n                            }\n                        }\n                        this.events.emit(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, {\n                            eip155: this.namespace\n                        });\n                    }\n                }\n                else {\n                    new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request error`);\n                }\n            }\n            catch (error) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request  error`);\n            }\n            return null;\n        });\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        this.chainId = parseInt(chainId);\n        // set rpc\n        if (!this.httpProviders[chainId]) {\n            const rpc = rpcUrl || (0, utils_1.getRpcUrl)(`${this.name}:${chainId}`, this.namespace);\n            if (!rpc) {\n                // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n                (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            }\n            else {\n                this.setHttpProvider(chainId, rpc);\n            }\n        }\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId.toString();\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // ---------- Private ----------------------------------------------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"eip155 getAccounts \", accounts, this.chainId);\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => {\n                return (0, utils_1.fromAccountToAddress)(account);\n            })),\n        ];\n    }\n    getHexChainIdFromRequest(args) {\n        let params = args.params;\n        let hexChainId = \"0x0\";\n        if (params && \"chainId\" in params) {\n            hexChainId = params.chainId;\n        }\n        hexChainId = hexChainId.startsWith(\"0x\") ? hexChainId : `0x${hexChainId}`;\n        (0, core_1.logDebug)(\"handleSwitchChain -->args \", args);\n        (0, core_1.logDebug)(\"handleSwitchChain -->hexChainId \", hexChainId);\n        const parsedChainId = parseInt(hexChainId, 16);\n        (0, core_1.logDebug)(\"handleSwitchChain -->parsedChainId \", parsedChainId);\n        return { parsedChainId, hexChainId };\n    }\n    handleSwitchChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n            if (this.isChainApproved(parsedChainId)) {\n                this.setDefaultChain(`${parsedChainId}`);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, `the method ${args.method} request  error`);\n            }\n        });\n    }\n    isChainApproved(chainId) {\n        return this.namespace.chains.includes(`${this.name}:${chainId}`);\n    }\n    // rpc\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            //   throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            (0, core_1.logDebug)('get parsed chain and rpc:', parsedChainId, parsedRpc);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        (0, core_1.logDebug)('get http providermap:', http);\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n}\nexports.Eip155Provider = Eip155Provider;\nexports.default = Eip155Provider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcConnection = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\n// Source: https://nodejs.org/api/events.html#emittersetmaxlistenersn\nconst EVENT_EMITTER_MAX_LISTENERS_DEFAULT = 10;\nclass JsonRpcConnection {\n    constructor(url, disableProviderPing = false) {\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n        this.events = new eventemitter3_1.EventEmitter();\n        this.isAvailable = false;\n        this.registering = false;\n        if (!(0, core_2.isHttpUrl)(url)) {\n            throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n        }\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n    }\n    get connected() {\n        return this.isAvailable;\n    }\n    get connecting() {\n        return this.registering;\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            yield this.register(url);\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                throw new Error(\"Connection already closed\");\n            }\n            this.onClose();\n        });\n    }\n    send(payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                yield this.register();\n            }\n            try {\n                const body = (0, core_1.safeJsonStringify)(payload);\n                const res = yield (0, cross_fetch_1.default)(this.url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                const data = yield res.json();\n                this.onPayload({ data });\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    register() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (!(0, core_2.isHttpUrl)(url)) {\n                throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n            }\n            if (this.registering) {\n                return new Promise((resolve, reject) => {\n                    this.events.once(\"register_error\", (error) => {\n                        reject(error);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.isAvailable === \"undefined\") {\n                            return reject(new Error(\"HTTP connection is missing or invalid\"));\n                        }\n                        resolve();\n                    });\n                });\n            }\n            this.url = url;\n            this.registering = true;\n            try {\n                if (!this.disableProviderPing) {\n                    const body = (0, core_1.safeJsonStringify)({ id: 1, jsonrpc: \"2.0\", method: \"test\", params: [] });\n                    yield (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                }\n                this.onOpen();\n            }\n            catch (e) {\n                const error = this.parseError(e);\n                this.events.emit(\"register_error\", error);\n                this.onClose();\n                throw error;\n            }\n        });\n    }\n    onOpen() {\n        this.isAvailable = true;\n        this.registering = false;\n        this.events.emit(\"open\");\n    }\n    onClose() {\n        this.isAvailable = false;\n        this.registering = false;\n        this.events.emit(\"close\");\n    }\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        const payload = typeof e.data === \"string\" ? (0, core_1.safeJsonParse)(e.data) : e.data;\n        this.events.emit(\"payload\", payload);\n    }\n    onError(id, e) {\n        const error = this.parseError(e);\n        const message = error.message || error.toString();\n        const payload = (0, core_2.formatJsonRpcError)(id, message);\n        this.events.emit(\"payload\", payload);\n    }\n    parseError(e, url = this.url) {\n        return (0, core_2.parseConnectionError)(e, url, \"HTTP\");\n    }\n}\nexports.JsonRpcConnection = JsonRpcConnection;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcProvider = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst types_1 = require(\"../../types\");\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nclass JsonRpcProvider extends types_1.IJSONRpcProvider {\n    constructor(connection) {\n        super(connection);\n        this.events = new eventemitter3_1.EventEmitter();\n        this.connected = false;\n        this.connecting = false;\n        this.hasRegisteredEventListeners = false;\n        this.connection = this.setConnection(connection);\n        if (this.connection.connected) {\n            this.registerEventListeners();\n        }\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            yield this.open(connection);\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.close();\n        });\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    request(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.requestStrict((0, core_1.formatJsonRpcRequest)(request.method, request.params || [], (0, core_1.getBigIntRpcId)().toString()), // casting to any is required in order to use BigInt as rpcId\n            context);\n        });\n    }\n    // ---------- Protected ----------------------------------------------- //\n    requestStrict(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.connection.connected) {\n                    try {\n                        yield this.open();\n                    }\n                    catch (e) {\n                        reject(e);\n                    }\n                }\n                this.events.on(`${request.id}`, (response) => {\n                    if ((0, core_1.isJsonRpcError)(response)) {\n                        reject(response.error);\n                    }\n                    else {\n                        resolve(response.result);\n                    }\n                });\n                try {\n                    (0, core_2.logDebug)('[RPC] >>> send request', request, context);\n                    yield this.connection.send(request, context);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }));\n        });\n    }\n    setConnection(connection = this.connection) {\n        return connection;\n    }\n    onPayload(payload) {\n        this.events.emit(\"payload\", payload);\n        if ((0, core_1.isJsonRpcResponse)(payload)) {\n            this.events.emit(`${payload.id}`, payload);\n        }\n        else {\n            this.events.emit(\"message\", {\n                type: payload.method,\n                data: payload.params,\n            });\n        }\n    }\n    onClose(event) {\n        // Code 3000 indicates an abnormal closure signalled by the relay -> emit an error in this case.\n        if (event && event.code === 3000) {\n            this.events.emit(\"error\", new Error(`WebSocket connection closed abnormally with code: ${event.code} ${event.reason ? `(${event.reason})` : \"\"}`));\n        }\n        this.events.emit(\"disconnect\");\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            if (this.connection === connection && this.connection.connected)\n                return;\n            if (this.connection.connected)\n                this.close();\n            if (typeof connection === \"string\") {\n                yield this.connection.open(connection);\n                connection = this.connection;\n            }\n            this.connection = this.setConnection(connection);\n            yield this.connection.open();\n            this.registerEventListeners();\n            this.events.emit(\"connect\");\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.connection.close();\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    registerEventListeners() {\n        if (this.hasRegisteredEventListeners)\n            return;\n        this.connection.on(\"payload\", (payload) => this.onPayload(payload));\n        this.connection.on(\"close\", (event) => this.onClose(event));\n        this.connection.on(\"error\", (error) => this.events.emit(\"error\", error));\n        this.connection.on(\"register_error\", (_error) => this.onClose());\n        this.hasRegisteredEventListeners = true;\n    }\n}\nexports.JsonRpcProvider = JsonRpcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolanaProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SolanaProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"solana\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"solana request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"solana provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    //   {\n    //     \"chains\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\" ],\n    //     \"accounts\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp:F7wnJc5wiBGy1k87jv6gyNwE3jMEWd18oTQiYsF1xVG7\"],\n    //     \"methods\": [\n    //         \"solana_signTransaction\",\n    //         \"solana_signMessage\"\n    //     ],\n    //     \"defaultChain\": \"5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\"\n    // }\n    // TODO:确认上面的defaultChain是否正确（没有solana前缀）\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"solana\"))) {\n                chainId = `solana:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.SolanaProvider = SolanaProvider;\nexports.default = SolanaProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass StarknetProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"starknet\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"starknet request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"starknet provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Wallet doesn't support\" + args.method);\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = StarknetProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuiProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SuiProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeySui;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"sui request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"sui provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"sui\"))) {\n                chainId = `sui:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"sui_signMessage\":\n            case \"sui_signPersonalMessage\":\n            case \"sui_signTransactionBlock\":\n            case \"sui_signAndExecuteTransactionBlock\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.SuiProvider = SuiProvider;\nexports.default = SuiProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TONProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTON;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            (0, core_1.logDebug)(\"TONProvider request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"TONProvider request provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                if (!args.params) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params is nil\");\n                }\n                if (this.isRecord(args.params)) {\n                    const _e = args.params, { validUntil } = _e, newParams = __rest(_e, [\"validUntil\"]);\n                    let fromAddress = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n                    if ('from' in newParams) {\n                        fromAddress = newParams.from || ((_d = (_c = this.namespace.payload) === null || _c === void 0 ? void 0 : _c.ton_addr) === null || _d === void 0 ? void 0 : _d.address);\n                    }\n                    args.params['from'] = fromAddress;\n                    args.params['network'] = this.getDefaultChain();\n                    args.params['valid_until'] = validUntil;\n                    let response = yield this.client.request(args);\n                    if (this.isRecord(response) && 'result' in response) {\n                        const result = {\n                            boc: response.result.toString()\n                        };\n                        (0, core_1.logDebug)(\"TONProvider request provider response: \", JSON.stringify(response));\n                        (0, core_1.logDebug)(\"TONProvider request provider result: \", JSON.stringify(result));\n                        return result;\n                    }\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton_send request response is nil\");\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params type add nil\");\n                }\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        var _a, _b;\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"ton getAccounts accounts :\", accounts);\n        (0, core_1.logDebug)(\"ton getAccounts .namespace :\", JSON.stringify(this.namespace));\n        if (!accounts) {\n            return [];\n        }\n        let address = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n        (0, core_1.logDebug)(\"ton getAccounts address :\", address);\n        if (address) {\n            return [\n                address\n            ];\n        }\n        return [];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"ton_sendTransaction\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.default = TONProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TronProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTron;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"tron request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"tron provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = TronProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./providers\"), exports);\n__exportStar(require(\"./misc\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IJSONRpcProvider = exports.IJSONRpcConnection = void 0;\nclass IJSONRpcConnection {\n}\nexports.IJSONRpcConnection = IJSONRpcConnection;\nclass IJSONRpcProvider {\n    constructor(opt) {\n    }\n}\nexports.IJSONRpcProvider = IJSONRpcProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setGlobal = exports.getGlobal = void 0;\nconst globals = {};\nconst getGlobal = (key) => {\n    return globals[key];\n};\nexports.getGlobal = getGlobal;\nconst setGlobal = (key, value) => {\n    globals[key] = value;\n};\nexports.setGlobal = setGlobal;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./misc\"), exports);\n__exportStar(require(\"./globals\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRpcUrl = getRpcUrl;\nexports.getChainId = getChainId;\nexports.fromAccountToAddress = fromAccountToAddress;\nexports.convertChainIdToNumber = convertChainIdToNumber;\nexports.parseChainId = parseChainId;\nexports.mergeArrays = mergeArrays;\nexports.syncAddressAvailable = syncAddressAvailable;\nexports.syncAddressHostAvailable = syncAddressHostAvailable;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getRpcUrl(chainId, rpc, projectId) {\n    var _a;\n    const chain = parseChainId(chainId);\n    // no default\n    return (((_a = rpc.rpcMap) === null || _a === void 0 ? void 0 : _a[chain.reference]) ||\n        ``);\n}\nfunction getChainId(chain) {\n    return chain.includes(\":\") ? chain.split(\":\")[1] : chain;\n}\nfunction fromAccountToAddress(account) {\n    if (!account) {\n        return \"\";\n    }\n    try {\n        let addressArr = account.split(\":\").slice(2);\n        let address = addressArr.length > 0 ? addressArr.join(\":\") : \"\";\n        (0, core_1.logDebug)(\"fromAccountToAddress address and account:\", address, account);\n        return address;\n    }\n    catch (e) {\n        (0, core_1.logError)(\"fromAccountToAddress error:\", account);\n        return \"\";\n    }\n}\n// export function validateChainApproval(chain: string, chains: string[]): void {\n//   if (!chains.includes(chain)) {\n//     throw new Error(\n//       `Chain '${chain}' not approved. Please use one of the following: ${chains.toString()}`,\n//     );\n//   }\n// }\n// export function getChainsFromApprovedSession(accounts: string[]): string[] {\n//   return accounts.map((address) => `${address.split(\":\")[0]}:${address.split(\":\")[1]}`);\n// }\n// export function getAccountsFromSession(namespace: string, session: SessionTypes.Struct): string[] {\n//   // match namespaces e.g. eip155 with eip155:1\n//   const matchedNamespaceKeys = Object.keys(session.namespaces).filter((key) =>\n//     key.includes(namespace),\n//   );\n//   if (!matchedNamespaceKeys.length) return [];\n//   const accounts: string[] = [];\n//   matchedNamespaceKeys.forEach((key) => {\n//     const accountsForNamespace = session.namespaces[key].accounts;\n//     accounts.push(...accountsForNamespace);\n//   });\n//   return accounts;\n// }\n// export function mergeRequiredOptionalNamespaces(\n//   required: NamespaceConfig = {},\n//   optional: NamespaceConfig = {},\n// ){\n//   const requiredNamespaces = normalizeNamespaces(required);\n//   const optionalNamespaces = normalizeNamespaces(optional);\n//    return merge.merge(requiredNamespaces,optionalNamespaces)\n// }\n/**\n * Converts\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * into\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *\n */\n// export function normalizeNamespaces(namespaces: NamespaceConfig): NamespaceConfig {\n//   const normalizedNamespaces: NamespaceConfig = {};\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const rpcMap = values.rpcMap || {};\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       ...values,\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       rpcMap: { ...rpcMap, ...normalizedNamespaces[normalizedKey]?.rpcMap },\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n//\n// export function parseCaip10Account(caip10Account: string): string {\n//   return caip10Account.includes(\":\") ? caip10Account.split(\":\")[2] : caip10Account;\n// }\n/**\n * Populates the chains array for each namespace with the chains extracted from the accounts if are otherwise missing\n */\n// export function populateNamespacesChains(\n//   namespaces: SessionTypes.Namespaces,\n// ): Record<string, SessionTypes.Namespace> {\n//   const parsedNamespaces: Record<string, SessionTypes.Namespace> = {};\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const accounts = values.accounts || [];\n//     // If the key includes a CAIP separator `:` we know it's a namespace + chainId (e.g. `eip155:1`)\n//     const chains = isCaipNamespace(key)\n//       ? [key]\n//       : values.chains\n//       ? values.chains\n//       : getChainsFromApprovedSession(values.accounts);\n//     parsedNamespaces[key] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   }\n//   return parsedNamespaces;\n// }\nfunction convertChainIdToNumber(chainId) {\n    if (typeof chainId === \"number\")\n        return chainId;\n    if (chainId.includes(\"0x\")) {\n        return parseInt(chainId, 16);\n    }\n    chainId = chainId.includes(\":\") ? chainId.split(\":\")[1] : chainId;\n    return isNaN(Number(chainId)) ? chainId : Number(chainId);\n}\nconst CAIP_DELIMITER = \":\";\nfunction parseChainId(chain) {\n    const [namespace, reference] = chain.split(CAIP_DELIMITER);\n    return { namespace, reference };\n}\nfunction mergeArrays(a = [], b = []) {\n    return [...new Set([...a, ...b])];\n}\nfunction syncAddressAvailable(wallet) {\n    if (!wallet) {\n        return false;\n    }\n    if (wallet.appName !== 'OKX Wallet') {\n        return false;\n    }\n    if ((0, core_1.versionCompare)('6.97.0', wallet.appVersion) > 0) {\n        return false;\n    }\n    return syncAddressHostAvailable();\n}\nfunction syncAddressHostAvailable() {\n    try {\n        return !!(window.okxGlobal);\n    }\n    catch (e) {\n        return false;\n    }\n}\n","<template>\n  <div id=\"app\">\n    <el-container>\n      <el-header>OKX Connect</el-header>\n      <el-main>\n        <el-card class=\"wallet-info\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Wallet Info</div>\n          </template>\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Wallet Address:</strong> {{ getWalletAddress }}\n            </el-col>\n          </el-row>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Status :</strong> {{ currentStatus }}\n            </el-col>\n          </el-row>\n\n        </el-card>\n\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Connect Params</div>\n          </template>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"withUI\" @change=\"handleWithUI\">\n                Show UI\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"universalToTG\" @change=\"handleUniversalToTG\">\n                Use mini wallet\n              </el-checkbox>\n            </el-col>\n          </el-row>\n\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Modals</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"modals\" placeholder=\"Modals\" @change=\"handleModalsSelect\" multiple>\n                <el-option label=\"Before\" value=\"before\"/>\n                <el-option label=\"Success\" value=\"success\"/>\n                <el-option label=\"Error\" value=\"error\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center; justify-content: space-between;\">\n            <el-col :span=\"6\" style=\"gap: 2px\">\n              <p style=\"font-size: 11pt; margin: 0px\">Return Strategy</p>\n              <p style=\"font-size: 9pt; margin: 0px\">(Mobile only)</p>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-select\n                  v-model=\"returnStrategy\"\n                  @change=\"handleReturnStrategySelect\"\n                  placeholder=\"Return Strategy\"\n              >\n                <el-option\n                    v-for=\"strategy in returnStrategies\"\n                    :key=\"`return-strategy-select-option-${strategy}`\"\n                    :label=\"strategy\"\n                    :value=\"strategy\"\n                />\n              </el-select>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-input\n                  v-if=\"returnStrategy === 'deeplink'\"\n                  v-model=\"deeplink\"\n                  @change=\"handleReturnStrategyDeeplink\"\n                  placeholder=\"Deeplink\"\n                  :disabled=\"returnStrategy !== 'deeplink'\"\n                  style=\"margin: 0px\"\n              />\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Lang</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"language\" @change=\"handleLanguageSelect\" placeholder=\"Language\">\n                <el-option v-for=\"locale in locales\" :key=\"`language-select-option-${locale}`\" :label=\"locale\"\n                           :value=\"locale\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Theme</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"theme\" @change=\"handleThemeSelect\" placeholder=\"Theme\">\n                <el-option label=\"LIGHT\" :value=\"THEME.LIGHT\"/>\n                <el-option label=\"DARK\" :value=\"THEME.DARK\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <!--          <el-row>-->\n          <!--          <el-row style=\"align-items: center\">-->\n          <!--            <el-col :span=\"4\">-->\n          <!--              <p style=\"font-size: 11pt\">Connect</p>-->\n          <!--              <p style=\"font-size: 11pt\">Methods</p>-->\n          <!--            </el-col>-->\n          <!--            <el-col :span=\"20\">-->\n          <!--              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" placeholder=\"Methods\">-->\n          <!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n          <!--                           :value=\"methods\" />-->\n\n          <!--              </el-select>-->\n          <!--            </el-col>-->\n          <!--          </el-row>-->\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Connect</p>\n              <p style=\"font-size: 11pt\">Methods</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" multiple placeholder=\"methods\">\n                <el-option\n                    v-for=\"item in connectMethods\"\n                    :key=\"item\"\n                    :label=\"item\"\n                    :value=\"item\">\n                </el-option>\n              </el-select>\n\n\n              <!--              <el-select v-model=\"selectedMethod\" placeholder=\"Methods\" @change=\"handleConnectMethodsSelect\" multiple>-->\n              <!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n              <!--                           :value=\"methods\" />-->\n              <!--              </el-select>-->\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">ton_proof</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-input v-model=\"tonProofValue\" placeholder=\"input ton_proof\"></el-input>\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" align=\"middle\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Required Chains</div>\n            </el-col>\n            <el-col\n                :span=\"6\"\n                v-for=\"item in Object.keys(availableChains)\"\n                :key=\"item\"\n            >\n              <el-checkbox\n                  v-model=\"availableChains[item].checked\"\n                  :disabled=\"!areChainsInit\"\n              >{{ availableChains[item].name }}\n              </el-checkbox\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" align=\"middle\" style=\"margin-top: 20px\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Optional Chains</div>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:43114')\" @change=\"() => handleOptionChange('eip155:43114')\">\n                AVAX\n              </el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:10')\" @change=\"() => handleOptionChange('eip155:10')\">OP</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:8453')\" @change=\"() => handleOptionChange('eip155:8453')\">\n                BASE\n              </el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:99781165')\"\n                           @change=\"() => handleOptionChange('eip155:99781165')\">Nonexist\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp')\"\n                           @change=\"() => handleOptionChange('solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp')\">Solana\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('ton:-239')\" @change=\"() => handleOptionChange('ton:-239')\">Ton\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('btc:mainnet')\"\n                           @change=\"() => handleOptionChange('btc:mainnet')\">btc\n              </el-checkbox>\n            </el-col>\n\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"initBtnClicked\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectInitStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"testTonConnect\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectTonStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"connectBtnClicked\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectStatusStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"syncAllAddressClick\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ syncAllAddressStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"danger\"\n                  @click=\"disconnectAction\"\n                  icon=\"el-icon-switch-button\"\n                  :disabled=\"!areChainsInit || walletAddress.length == 0\"\n              >{{ disconnectStatusStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <teleport to=\"body\">\n            <div v-if=\"showModal\" class=\"modal-overlay\" @click=\"closeModal\">\n              <div class=\"modal-content\" @click.stop>\n                <button class=\"close-button\" @click=\"closeModal\">\n                  &times;\n                </button>\n                <h2>Scan to connect</h2>\n                <qrcode-vue :value=\"qrValue\" :size=\"350\" level=\"L\"/>\n              </div>\n            </div>\n          </teleport>\n        </el-card>\n\n        <!-- 发送交易 -->\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Transactions</div>\n          </template>\n\n          <el-tabs v-model=\"activeTab\" type=\"border-card\" @tab-click=\"clickActiveTab\">\n            <!-- ETH -->\n            <el-tab-pane label=\"ETH\" name=\"eip155:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to Fuse)\n                  </el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send ETH)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve TONCoin)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(eth mint\n                    nft)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add SPX6900)\n                  </el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"oversized_personal_sign()\">oversized_personal_sign(about 70k, split limit 63k)\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TON\" name=\"ton:-239\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_getAccount\">ton_getAccount</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_sendTransaction\">ton_sendTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- solana -->\n            <el-tab-pane label=\"Sol\" name=\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- soon -->\n            <el-tab-pane label=\"soon:mainnet\" name=\"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"soon:testnet\" name=\"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"eclipse:mainnet\" name=\"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- Sui-->\n            <el-tab-pane label=\"Sui\" name=\"sui:mainnet\">\n              <SuiPanel @generateTransactionParams=\"sui_generateTransactionParams\"/>\n            </el-tab-pane>\n            <!-- BTC -->\n            <el-tab-pane label=\"BTC\" name=\"btc:mainnet\">\n              <BTCPanel @generateTransactionParams=\"btc_generateTransactionParams\"/>\n            </el-tab-pane>\n\n            <!-- Fractal BTC -->\n            <el-tab-pane label=\"Fractal\" name=\"fractal:mainnet\">\n              <FractalPanel @generateTransactionParams=\"fractal_generateTransactionParams\"/>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Tron\" name=\"tron:mainnet\">\n              <TronTransactionPanel\n                  @generateTransactionParams=\"tron_generateTransactionParams\"\n                  @generateTransactionResult=\"tron_getTransactionResult\"/>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Aptos\" name=\"aptos:mainnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signTransaction\">aptos_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"aptos_signAndSubmitTransaction\">aptos_signAndSubmitTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Cosmos\" name=\"cosmos:cosmoshub-4\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <!-- Polygon-->\n            <el-tab-pane label=\"Polygon\" name=\"eip155:137\">\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"Polygon_RPCRequest()\">Polygon_RPCRequest(Polygon)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send POL)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve sushi)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(polygon mint\n                    nft)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add LGNS)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\"\n                  >eth_sendTransaction(转账FUSE)\n                  </el-button\n                  >\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\"\n                  >eth_sendTransaction(授权USDC)\n                  </el-button\n                  >\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- BSC-->\n            <el-tab-pane label=\"BNB\" name=\"eip155:56\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to BNB)\n                  </el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send BNB)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve POSI)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add FET)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Fuse\" name=\"eip155:122\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_swap\">eth_sendTransaction(Swap)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Sonic testnet\" name=\"svm:70000062\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Movement\" name=\"movement:testnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"move_signTransaction\">move_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"move_signAndSubmitTransaction\">move_signAndSubmitTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Movement mainnet\" name=\"movement:mainnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"move_signTransaction\">move_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"move_signAndSubmitTransaction\">move_signAndSubmitTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n\n            <el-tab-pane label=\"osmos\" name=\"cosmos:osmosis-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"SEI\" name=\"cosmos:pacific-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Starknet\" name=\"starknet:mainnet\">\n              <StarknetPanel ref=\"starknetPanelRef\" @generateTransactionParams=\"starknet_generateTransactionParams\"\n                             @generateTransactionResult=\"starknet_getTransactionResult\"/>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TEST \" name=\"test:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"testBase64UrlSafe\">testBase64UrlSafe</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n          </el-tabs>\n\n          <el-col :xs=\"24\" :sm=\"24\" style=\"margin: 16px 0px;\">\n            <el-row style=\"align-items: center; justify-content: space-between; margin-bottom: 8px;\">\n              <el-col :span=\"4\">\n                <p style=\"font-size: 11pt; margin: 0px; text-align: start\">Redirect param (only for ETH, Polygon, BNB,\n                  Fuse)</p>\n              </el-col>\n              <el-col :span=\"9\">\n                <el-select\n                    v-model=\"redirect\"\n                    @change=\"handleRedirectSelect\"\n                    placeholder=\"Return Strategy\"\n                    :disabled=\"!canChainAddRedirectParam()\"\n                >\n                  <el-option\n                      v-for=\"strategy in returnStrategies\"\n                      :key=\"`return-strategy-select-option-${strategy}`\"\n                      :label=\"strategy\"\n                      :value=\"strategy\"\n                  />\n                </el-select>\n              </el-col>\n              <el-col :span=\"10\">\n                <el-input\n                    v-if=\"redirect === 'deeplink'\"\n                    v-model=\"redirectDeeplink\"\n                    @change=\"handleRedirectDeeplink\"\n                    placeholder=\"Deeplink\"\n                    :disabled=\"!canChainAddRedirectParam() || redirect !== 'deeplink'\"\n                    style=\"margin: 0px\"\n                />\n              </el-col>\n            </el-row>\n            <el-button\n                type=\"primary\" @click=\"addRedirectParam()\"\n                :disabled=\"!canChainAddRedirectParam() || !testTransaction\"\n            >\n              Add redirect param to data\n            </el-button>\n          </el-col>\n\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Data:</div>\n            <el-input v-model=\"testTransaction\" type=\"textarea\" :rows=\"5\" placeholder=\"sendTransactions\"></el-input>\n          </el-col>\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Result :</div>\n            <el-input v-model=\"testboc\" type=\"textarea\" :rows=\"5\" placeholder=\"boc\"></el-input>\n          </el-col>\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button type=\"primary\" :disabled=\"sendBtnDisabled\" @click=\"sendTransaction()\">{{\n                  testTransactionStr\n                }}\n              </el-button>\n            </el-col>\n          </el-row>\n        </el-card>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<style scoped>\n/* 重置全局边距和内边距 */\nbody,\nhtml {\n  margin: 0;\n  padding: 0;\n  height: 100%;\n}\n\n/* 确保 app 容器占满整个视口 */\n#app {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin: 0 auto;\n  /* 居中 */\n  max-width: 600px;\n  /* 设置最大宽度 */\n  padding: 0 20px;\n  /* 添加一些左右内边距 */\n}\n\n/* 调整 el-container 样式 */\n.el-container {\n  min-height: 100vh;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n}\n\n/* 调整 el-header 样式 */\n.el-header {\n  background-color: #333333;\n  color: white;\n  height: 50px;\n  line-height: 50px;\n  font-size: 18px;\n  font-weight: bold;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n}\n\n/* 调整 el-main 样式 */\n.el-main {\n  padding: 70px 0 20px;\n  /* 增加顶部内边距以避免被固定header遮挡 */\n  flex-grow: 1;\n}\n\n.el-card {\n  margin-bottom: 20px;\n}\n\n.info-row {\n  margin-bottom: 10px;\n}\n\n.input-label {\n  margin-bottom: 5px;\n  text-align: left;\n}\n\n.el-input {\n  margin-bottom: 10px;\n}\n\n/* 通用按钮样式 */\n.wallet-actions .el-button,\n.transaction .el-button,\n.clear-cache .el-button {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 40px;\n}\n\n.wallet-actions .el-button span,\n.transaction .el-button span,\n.clear-cache .el-button span {\n  margin: 0 auto;\n}\n\n/* 按钮行间距 */\n.wallet-actions .button-row,\n.transaction .button-row {\n  margin-bottom: 8px;\n}\n\n.wallet-actions .button-row:last-child,\n.transaction .button-row:last-child {\n  margin-bottom: 0;\n}\n\n/* 调整图标和文字的对齐 */\n.wallet-actions .el-button [class^=\"el-icon-\"],\n.transaction .el-button [class^=\"el-icon-\"],\n.clear-cache .el-button [class^=\"el-icon-\"] {\n  margin-right: 5px;\n  vertical-align: middle;\n}\n\n/* 新增：调整发送交易按钮与输入框的间距 */\n.transaction .el-row:not(:last-child) {\n  margin-bottom: 10px;\n}\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  text-align: center;\n  position: relative;\n  max-width: 90%;\n  width: 400px;\n}\n\n.close-button {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  font-size: 24px;\n  border: none;\n  background: none;\n  cursor: pointer;\n}\n\n/* 响应式调整 */\n@media (max-width: 600px) {\n  #app {\n    padding: 0 10px;\n  }\n\n  .el-main {\n    padding: 60px 0 10px;\n  }\n}\n</style>\n<script>\nimport {OKX_CONNECT_ERROR_CODES, safeJsonStringify, getAppWalletDeepLink, getUniversalLink} from \"@okxconnect/core\"\nimport {\n  OKXBtcProvider,\n  OKXUniversalProvider,\n  OKXCosmosProvider,\n  OKXTonProvider,\n  OKXTronProvider,\n  OKXStarknetProvider\n} from \"@okxconnect/universal-provider\"\nimport {OKXSolanaProvider} from \"@okxconnect/solana-provider\";\nimport {\n  Connection,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n  TransactionMessage,\n  VersionedTransaction\n} from '@solana/web3.js';\nimport {OKXSuiProvider as SuiAdapter} from \"@okxconnect/sui-provider\"\nimport QrcodeVue from 'qrcode.vue'\n\nimport {OKXAptosProvider} from \"@okxconnect/aptos-provider\";\nimport {Aptos, AptosConfig, Network} from \"@aptos-labs/ts-sdk\";\n\nimport BTCPanel from \"./components/BtcTransactionPanel.vue\";\nimport FractalPanel from \"./components/FractalTransactionPanel.vue\"\nimport SuiPanel from \"./components/SuiTransactionPanel.vue\";\nimport StarknetPanel from \"./components/StarknetTransactionPanel.vue\";\n\nimport {OKXTonConnectUI, OKXUniversalConnectUI, THEME} from \"@okxconnect/ui\";\nimport {ethers} from 'ethers';\nimport VConsole from 'vconsole';\nimport nacl from \"tweetnacl\";\n\nconst {verifyADR36Amino} = require('@keplr-wallet/cosmos')\nconst {fromBech32} = require('@cosmjs/encoding')\nimport {verifyPersonalMessageSignature} from '@mysten/sui/verify';\nimport {useShortLink} from \"@okxconnect/core\";\nimport TronTransactionPanel from \"@/components/TronTransactionPanel.vue\";\nimport {TronWeb} from \"tronweb\";\nimport {RpcProvider as StarknetRpcProvider, Account as StarknetAccount} from \"starknet\";\nimport {ref, toRaw} from \"vue\";\n\nnew VConsole();\n\nconst allChains = {\n  1: {name: \"Eth\", checked: false},\n  56: {name: \"BNB\", checked: false},\n  137: {name: \"Polygon\", checked: false},\n  122: {name: \"Fuse\", checked: false},\n  \"ton:-239\": {name: \"TON\", checked: false},\n  \"btc:mainnet\": {name: \"BTC\", checked: false},\n  \"sui:mainnet\": {name: \"Sui\", checked: false},\n  \"aptos:mainnet\": {name: \"Aptos\", checked: false},\n  \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\": {\n    name: \"Solana\",\n    checked: false,\n  },\n  \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\": {\n    name: \"Sol testnet\",\n    checked: false,\n  },\n  \"svm:70000062\": {\n    name: \"Sonic testnet\",\n    checked: false,\n  },\n  \"movement:mainnet\": {name: \"Movement mainnet\", checked: false},\n  \"movement:testnet\": {name: \"Movement\", checked: false},\n  \"fractal:mainnet\": {name: \"Fractal\", checked: false},\n  \"cosmos:osmosis-1\": {name: \"Osmos\", checked: false},\n  \"cosmos:cosmoshub-4\": {name: \"Cosmos\", checked: false},\n  \"cosmos:pacific-1\": {name: \"SEI\", checked: false},\n  \"cosmos:abvdefg\": {name: \"cosmos:abvdefg\", checked: false},\n  \"tron:mainnet\": {name: \"tron\", checked: false},\n  997865: {name: \"Non Exist chain\", checked: false},\n  2020: {name: \"Ronin\", checked: false},\n  1666600000: {name: \"Harmony\", checked: false},\n  \"starknet:mainnet\": {name: \"starknet\", checked: false},\n  \"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\":{name:\"soon:mainnet\", checked: false},\n  \"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\":{name:\"soon:testnet\", checked: false},\n  \"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\":{name:\"eclipse:mainnet\", checked: false},\n};\n\nconst chainsThatCanAddRedirectParam = [\n  \"eip\"\n]\n\nvar optionChains = new Set([]);\nvar selectedModals = [\"before\", \"success\", \"error\"];\nvar selectedReturnStrategy = \"none\";\nvar selectedDeepLink = \"tg://resolve\";\nvar selectedLanguage = \"en_US\";\nvar selectedTheme = THEME.LIGHT;\n\n// import QrcodeVue from 'qrcode.vue'\nexport default {\n  name: \"App\",\n  components: {\n    TronTransactionPanel,\n    QrcodeVue,\n    BTCPanel,\n    FractalPanel,\n    SuiPanel,\n    StarknetPanel\n  },\n\n  setup() {\n    const sendBtnDisabled = ref(false)\n\n    return {\n      sendBtnDisabled\n    }\n  },\n  data: () => {\n    return {\n      activeTab: \"eip155:1\",\n      testTopic: \"\",\n      testPublicKey: \"\",\n      testProofPayload: \"\",\n      tonProofValue: \"\",\n      pendingDeepLink: \"-\",\n      logList: [],\n      connectReady: false,\n      connectStatusStr: \"Connect\",\n      syncAllAddressStr: \"syncAllAddress\",\n      connectInitStr: \"init test\",\n      connectTonStr: \"tonuiconnect test\",\n      disconnectStatusStr: \"Disconnect\",\n      localPubKey: \"\",\n      localSecKey: \"\",\n      testTransaction: \"\",\n      selectedChain: \"eip155:1\",\n      testTransactionStr: \"Send\",\n      walletAddress: \"\",\n      testboc: \"\",\n      ProofPayloadVerify: \"\",\n      showModal: false,\n      showVerifyRow: false,\n      qrValue: \"https://www.okx.com/download\",\n      currentStatus: \"\",\n      areChainsInit: false,\n      availableChains: allChains,\n      isOptionalChecked: (chainId) => {\n        return optionChains.has(chainId);\n      },\n      withUI: localStorage.getItem(\"autoRefresh\") != \"false\",\n      universalToTG: localStorage.getItem(\"universalToTG\") != \"false\",\n      modals: selectedModals,\n      returnStrategies: [\"none\", \"back\", \"deeplink\"],\n      returnStrategy: selectedReturnStrategy,\n      deeplink: selectedDeepLink,\n      locales: [\n        \"en_US\",\n        \"ru_RU\",\n        \"zh_CN\",\n        \"zh\",\n        \"ar_AE\",\n        \"cs_CZ\",\n        \"de_DE\",\n        \"es_ES\",\n        \"es_LAT\",\n        \"fr_FR\",\n        \"id_ID\",\n        \"it_IT\",\n        \"nl_NL\",\n        \"pl_PL\",\n        \"pt_BR\",\n        \"pt_PT\",\n        \"ro_RO\",\n        \"tr_TR\",\n        \"uk_UA\",\n        \"vi_VN\",\n        \"zh_TW\"\n      ],\n      selectedMethod: [],\n      selectedMethodData: [],\n      connectMethods: [\n        \"wallet_addEthereumChain(ETH)\",\n        \"personal_sign(ETH)\",\n        \"solana_signMessage(Sol mainnet)\",\n        \"sui_signMessage(Sui mainnet)\",\n        \"sui_signPersonalMessage(Sui mainnet)\",\n        \"btc_signMessage(BTC)\",\n        \"aptos_signMessage(aptos mainnet)\",\n        \"cosmos_signArbitrary(cosmoshub)\",\n        \"test_noSupport_eth(ETH)\",\n        \"tron_signMessage\",\n        \"tron_signMessageV2\",\n        \"starknet_signMessage\",\n        \"sync_all_addresses\"\n      ],\n\n      language: selectedLanguage,\n      theme: selectedTheme,\n      THEME: THEME,\n      redirect: selectedReturnStrategy,\n      redirectDeeplink: selectedDeepLink,\n      handleWithUI: (isChecked) => {\n        localStorage.setItem(\"autoRefresh\", `${isChecked}`);\n        location.reload();\n      },\n      handleUniversalToTG: (isChecked) => {\n        localStorage.setItem(\"universalToTG\", `${isChecked}`);\n      },\n      handleOptionChange: (chainId) => {\n        console.log(\"handleOptionChange ->chainId:\",chainId)\n        if (optionChains.has(chainId)) {\n          optionChains.delete(chainId);\n        } else {\n          optionChains.add(chainId);\n        }\n      },\n      starknetPanelTypedData: ''\n    };\n  },\n  computed: {\n    getWalletAddress: function () {\n      return this.walletAddress;\n    },\n  },\n  methods: {\n    isChecked(chainId) {\n      return this.selectedChains.has(chainId);\n    },\n\n    initChains(newChains) {\n      if (newChains.length > 0) {\n        const updatedChains = Object.assign({}, this.availableChains);\n        for (const chainId of newChains) {\n          if (updatedChains[chainId]) {\n            updatedChains[chainId].checked = !updatedChains[chainId].checked;\n          }\n        }\n        this.availableChains = updatedChains;\n      }\n\n      this.areChainsInit = true;\n    },\n\n    async clickActiveTab(tab) {\n      const tabName = tab.props ? tab.props.name : tab.name;\n      this.selectedChain = tabName;\n      console.log(`已切换到链 :`, tabName);\n\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (tabName == \"starknet:mainnet\") {\n        this.sendBtnDisabled = true\n      } else {\n        this.sendBtnDisabled = false\n      }\n\n      window.provider.setDefaultChain(this.selectedChain);\n    },\n\n    async testTonConnect(){\n      await window.testTon.openModal().catch(\n          (error) => console.error(\"发生了错误：\", error));\n    },\n\n    async initBtnClicked() {\n      console.log(\"initBtnClickedddinitBtnClickedddinitBtnClickedddinitBtnClickedddinitBtnClickeddd\")\n      window.okxLogDebug = true\n      var initCall;\n      if (!this.withUI) {\n        initCall = OKXUniversalProvider.init({\n          dappMetaData: {\n            name: \"univer test dapp\",\n            icon: \"https://avatars.githubusercontent.com/u/37784886\",\n          },\n        });\n      } else {\n\n        window.testTon = new OKXTonConnectUI({\n          dappMetaData: {\n            name: \"OKX WalletConnect UI Demo\",\n            icon: \"https://avatars.githubusercontent.com/u/37784886\",\n          },\n          actionsConfiguration: {\n            returnStrategy: 'tg://resolve',\n            tmaReturnUrl:'back',\n            modals: \"all\",\n          },\n          uiPreferences: {\n            theme: THEME.LIGHT\n          },\n          language: 'en_US',\n        });\n\n        initCall = OKXUniversalConnectUI.init({\n          dappMetaData: {\n            icon: \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\",\n            name: \"OKX WalletConnect UI Demo\",\n            manifestUrl:\"https://app.ston.fi/tonconnect-manifest.json\"\n          },\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: 'all',\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme\n          },\n        });\n\n\n      }\n\n      initCall.then((provider) => {\n        window.provider = provider;\n        window.tonProvider = new OKXTonProvider(window.provider);\n        window.tonProvider.onStatusChange((walletInfo) => {\n              console.log('TONConnection onStatusChange:', JSON.stringify(walletInfo));\n            }, (err) => {\n              console.log('TONConnection onStatusChange error:', err);\n            }\n        )\n\n        if (window.provider instanceof OKXUniversalConnectUI) {\n          window.provider.onModalStateChange((state) => {\n            console.log(`onModalStateChange   ${JSON.stringify(state)}`)\n          })\n        }\n\n        console.log(\"init finished:\", provider);\n        console.log(\"init finished session:\", JSON.stringify(provider.session));\n\n        if (provider.session?.namespaces) {\n          const newChains = [];\n          console.log(\"namespaces\", provider.session.namespaces);\n          Object.entries(provider.session.namespaces).forEach(([key, value]) => {\n            if (key === \"eip155\") {\n              value.chains.forEach((chain) => {\n                newChains.push(parseInt(chain.substring(7)));\n              });\n            } else {\n              value.chains.forEach((chain) => {\n                newChains.push(chain);\n              });\n            }\n          });\n\n          console.log(\"existing chains:\", newChains);\n          this.initChains(newChains);\n        } else {\n          this.initChains([]);\n        }\n\n        provider.on(\"display_uri\", (uri) => {\n          if (!useShortLink()) {\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>display_uri  ==> \", uri);\n        });\n\n        provider.on(\"connect_signResponse\", (items) => {\n          console.log(\"通知>>>connect_signResponse  ==> \", JSON.stringify(items));\n          this.verifyMessage(items)\n        })\n\n        provider.on(\"short_display_uri\", (uri) => {\n          if (useShortLink()) {\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>short_display_uri  ==> \", uri);\n        });\n\n\n        provider.on(\"session_connecting\", () => {\n          console.log(\"通知>>>session_connecting  ==> \");\n        });\n\n        provider.on(\"connect\", (session) => {\n          console.log(\"通知>>>get connect session\", session);\n        });\n        provider.on(\"reconnect\", (session) => {\n          console.log(\"通知>>>get reconnect session\", session);\n          this.walletAddress = \"connected\";\n        });\n        provider.on(\"disconnect\", ({topic}) => {\n          console.log(`通知>>>get disconnect  ${topic}`);\n          this.walletAddress = \"disconnecteddddd\";\n        });\n        provider.on(\"session_delete\", ({topic}) => {\n          console.log(`通知>>>get session_delete  ${topic}`);\n        });\n        provider.on(\"session_update\", (session) => {\n          console.log(`通知>>>get session_update `, JSON.stringify(session));\n        });\n\n        provider.on(\"accountChanged\", (session) => {\n          if (session){\n            this.testboc = JSON.stringify(session);\n          }\n          console.log(`通知>>>get accountChanged `, JSON.stringify(session));\n        });\n\n      });\n    },\n\n    async connectBtnClicked() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        this.testTonSdk();\n      } else {\n        console.log(`connectBtnClicked provider not finish init`);\n      }\n    },\n\n    async syncAllAddressClick() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        if (window.provider instanceof OKXUniversalProvider) {\n          if (window.provider.connected()) {\n            try {\n              let message = await window.provider.syncAllAddresses()\n              if (typeof message == \"string\") {\n                this.testboc = message\n              } else {\n                this.testboc = JSON.stringify(message)\n              }\n            } catch (e) {\n              this.testboc = JSON.stringify(e)\n            }\n          } else {\n            this.testboc = \"not connected\"\n          }\n        }\n\n      } else {\n        console.log(`syncAllAddress provider not finish init`);\n      }\n    },\n\n    async disconnectAction() {\n      try {\n        console.log(\"get disconnect wallet btn clicked\");\n        // await TON.disconnect();\n        var provider = window.provider;\n        await provider.disconnect();\n        this.walletAddress = \"disconnected\";\n      } catch (error) {\n        console.log(\"Disconnect  error ==>> \", error.message);\n        this.currentStatus = error.message;\n      }\n    },\n\n    async eth_requestAccounts() {\n      var data = {method: \"eth_requestAccounts\"};\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_chainId() {\n      var data = {method: \"eth_chainId\"};\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_switchEthereumChain() {\n      var data = {\n        method: \"wallet_switchEthereumChain\",\n        params: [\n          {\n            chainId: \"0x7a\"\n          }\n        ]\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_addEthereumChain() {\n      var data = {\n        method: \"wallet_addEthereumChain\",\n        params: {\n          blockExplorerUrls: [\"https://explorer.fuse.io\"],\n          chainId: \"0x7a\",\n          chainName: \"Fuse\",\n          nativeCurrency: {name: \"Fuse\", symbol: \"FUSE\", decimals: 18},\n          rpcUrls: [\"https://rpc.fuse.io\"],\n        },\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    fromAccountToAddress(account) {\n      if (!account) {\n        return \"\"\n      }\n      try {\n        let addressArr = account.split(\":\").slice(2);\n        let address = addressArr.length > 0 ? addressArr.join(\":\") : \"\";\n        return address;\n      } catch (e) {\n        return \"\"\n      }\n\n    },\n\n    requestEVMAccountWithSession(chainId) {\n      console.log(\"requestAccountWithSession >>>\", chainId);\n      if (window.provider && window.provider.session && chainId) {\n        let key = chainId.includes(\":\") ? chainId.split(\":\")[0] : chainId;\n        let namespace = window.provider.session.namespaces\n        if (key === \"eip155\") {\n          let evmNameSpace = namespace[key];\n          if (evmNameSpace && evmNameSpace.accounts) {\n            let accounts = evmNameSpace.accounts;\n            return [\n              ...new Set(\n                  accounts\n                      // get the accounts from the active chain\n                      .filter((account) => account.includes(chainId+\":\"))\n                      // remove namespace & chainId from the string\n                      .map((account) => {\n                        return this.fromAccountToAddress(account);\n                      })\n              ),\n            ];\n\n          }\n\n        }\n      }\n      return undefined\n    },\n\n    async personal_sign() {\n      if (this.selectedChain === \"eip155:1\") {\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0x1ca023f10e157d148deed210f8bee193657a1eaa7f187909e20a9dc3b071dbc364c41fde37960c05093359f410a061ec8a7dca8c0c39fc7c1e24de8a3329775d1b\n\n        var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n        var address = accounts[0];\n        console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n        var dataETH = {\n          method: \"personal_sign\",\n          params: [\n            \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n            address,\n          ],\n        };\n\n        this.testTransaction = JSON.stringify(dataETH);\n      } else if (\n          this.selectedChain === \"eip155:137\" ||\n          this.selectedChain === \"eip155:122\"\n      ) {\n        // method\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0xebda9cfa2af43999058dffa0107031d1ef7fc0252dca85dcbd22ea097af922ca39b64d509ef61ce42b7641c5840b8a80337ffd1411b13e87e2260a3f1b6c151c1b\n\n        var dataPolygon = {\n          method: \"personal_sign\",\n          params: {\n            message:\n                \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n        this.testTransaction = JSON.stringify(dataPolygon);\n      } else if (this.selectedChain === \"eip155:56\") {\n        var data = {\n          method: \"personal_sign\",\n          params: {\n            message:\n                \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n\n        this.testTransaction = JSON.stringify(data);\n      }\n    },\n\n    async eth_sendTransaction_swap() {\n      var data = {\n        method: \"eth_sendTransaction\",\n        chainId: \"eip155:122\",\n        params: {\n          value: \"0x38d7ea4c68000\",\n          gas: \"0x2665f\",\n          to: \"0xf2614A233c7C3e7f08b1F887Ba133a13f1eb2c55\",\n          from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n          data: \"0x2646478b000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00000000000000000000000000000000000000000000000000038d7ea4c68000000000000000000000000000620fd5fa44be6af63715ef4e65ddfa0387ad13f5000000000000000000000000000000000000000000000000000000000000001b000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000700301ffff0201602352A9Eb5234466Eac23E59e7B99bCaE79C39c0BE9e53fd7EDaC9F859882AfdDa116645287C629040BE9e53fd7EDaC9F859882AfdDa116645287C62900602352A9Eb5234466Eac23E59e7B99bCaE79C39c01f2F3e73be57031114dd1f4E75c1DD87658be7F0E000bb800000000000000000000000000000000\",\n        },\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async oversized_personal_sign() {\n      const payload = ``\n      if (this.selectedChain === \"eip155:1\") {\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0x1ca023f10e157d148deed210f8bee193657a1eaa7f187909e20a9dc3b071dbc364c41fde37960c05093359f410a061ec8a7dca8c0c39fc7c1e24de8a3329775d1b\n\n        var accounts = await window.provider.request(\n          { method: \"eth_requestAccounts\" },\n          \"eip155:1\"\n        );\n        var address = accounts[0];\n        console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n        var dataETH = {\n          method: \"personal_sign\",\n          params: [\n            payload,\n            address,\n          ],\n        };\n\n        this.testTransaction = JSON.stringify(dataETH);\n      } else if (\n        this.selectedChain === \"eip155:137\" ||\n        this.selectedChain === \"eip155:122\"\n      ) {\n        // method\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0xebda9cfa2af43999058dffa0107031d1ef7fc0252dca85dcbd22ea097af922ca39b64d509ef61ce42b7641c5840b8a80337ffd1411b13e87e2260a3f1b6c151c1b\n\n        var dataPolygon = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              payload,\n          },\n        };\n        this.testTransaction = JSON.stringify(dataPolygon);\n      } else if (this.selectedChain === \"eip155:56\") {\n        var data = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              payload,\n          },\n        };\n\n        this.testTransaction = JSON.stringify(data);\n      }\n    },\n\n    async eth_signTypedData_v4() {\n      // method\n      // eth_signTypedData\n      // address\n      // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n      // valid\n      // true\n      // result\n      // 0xa8bb3c6b33a119d2d567c7632195c21988df778006082742125a591f5c633f716107883a37f7de6531a6312a5f69022135bf46fe5ab77905b62c82b3395f985e1b\n      //\n\n      // var data = {\n      //   \"method\": \"eth_signTypedData_v4\",\n      //   \"params\": {\n      //     \"typedDataJson\":\"{\\\"types\\\":{\\\"EIP712Domain\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"version\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"chainId\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"name\\\":\\\"verifyingContract\\\",\\\"type\\\":\\\"address\\\"}],\\\"Person\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"wallet\\\",\\\"type\\\":\\\"address\\\"}],\\\"Mail\\\":[{\\\"name\\\":\\\"from\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"to\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"contents\\\",\\\"type\\\":\\\"string\\\"}]},\\\"primaryType\\\":\\\"Mail\\\",\\\"domain\\\":{\\\"name\\\":\\\"Ether Mail\\\",\\\"version\\\":\\\"1\\\",\\\"chainId\\\":1,\\\"verifyingContract\\\":\\\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\\\"},\\\"message\\\":{\\\"from\\\":{\\\"name\\\":\\\"Cow\\\",\\\"wallet\\\":\\\"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\\\"},\\\"to\\\":{\\\"name\\\":\\\"Bob\\\",\\\"wallet\\\":\\\"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\\\"},\\\"contents\\\":\\\"Hello, Bob!\\\"}}\"\n      // }}\n\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n      var data = {\n        method: \"eth_signTypedData_v4\",\n        params: [\n          address,\n          {\n            types: {\n              EIP712Domain: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"version\",\n                  type: \"string\",\n                },\n                {\n                  name: \"chainId\",\n                  type: \"uint256\",\n                },\n                {\n                  name: \"verifyingContract\",\n                  type: \"address\",\n                },\n              ],\n              Person: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"wallet\",\n                  type: \"address\",\n                },\n              ],\n              Mail: [\n                {\n                  name: \"from\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"to\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"contents\",\n                  type: \"string\",\n                },\n              ],\n            },\n            primaryType: \"Mail\",\n            domain: {\n              name: \"Ether Mail\",\n              version: \"1\",\n              chainId: 1,\n              verifyingContract: \"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\",\n            },\n            message: {\n              from: {\n                name: \"Cow\",\n                wallet: \"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\",\n              },\n              to: {\n                name: \"Bob\",\n                wallet: \"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\",\n              },\n              contents: \"Hello, Bob!\",\n            },\n          },\n        ],\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_sendTransaction_transfer() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            chainId: \"0x1\",\n            to: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            value: \"0x5af3107a4000\",\n            maxPriorityFeePerGas: \"0x3b9aca00\",\n            gas: \"0x5e56\",\n            maxFeePerGas: \"0x2643b9db8\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gasPrice: \"0x17003f6530\",\n            nonce: \"0x0d30\",\n            data: \"0x\",\n            value: \"0x00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasLimit: \"0x5208\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x5e56\",\n            value: \"0x5af3107a4000\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasPrice: \"0x3b9aca00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            chainId: \"0x38\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:122\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            value: \"0x0\",\n            chainId: \"0x7a\",\n          }\n        }\n      }\n\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"to\"] = address;\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_approve() {\n      var data = {};\n\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000000000000022d473030f116ddee9f6b43ac78ba3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x582d872a1b094fc48f5de31d3b73f2d9be47def1\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000f6f8096ac575b0\",\n            to: \"0x0b3F868E0BE5597D5DB7fEB59E1CADBb0fdDa50a\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            value: \"0x0\",\n            gas: \"0xe117\",\n            gasPrice: \"0xb2d05e00\",\n            data: \"0x095ea7b300000000000000000000000031c2f6fcff4f8759b3bd5bf0e1084a055615c768ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x5CA42204cDaa70d5c773946e69dE942b85CA6706\",\n          },\n        };\n      } else if (this.selectedChain === 'eip155:122') {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000000000000013b3\",\n            to: \"0x620fd5fa44BE6af63715Ef4E65DDFA0387aD13F5\",\n          },\n        };\n      }\n\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_mint() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x4cacb\",\n            data: \"0xa64dfa75000000000000000000000000ed688002f3797599db8b4feacfe8b1dda0df1c8d000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cecb15396825a895ff8da8fc2d2c77a234dccee00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f6261667962656968643737366b6177706e71336f6f6a6635693274787a76617737737164656b34616a776472637472703261366f626b70723773792f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x30795\",\n            data: \"0xa64dfa75000000000000000000000000341b3687f0309778f08f29336b2c4b9c38b9f110000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003e00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000042000000000000000000000000000000000000000000000000000000000000005000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000052000000000000000000000000000000000000000000000000000000000000005400000000000000000000000000000000000000000000000000000000000000560000000000000000000000000000000000000000000000000000000000000058000000000000000000000000000000000000000000000000000000000000005a000000000000000000000000000000000000000000000000000000000000005c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f62616679626569686a6279676b68747a71376b68377434336266686e676e793236337668766f6578716a6d6e377161716166366e717a64743777712f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      }\n\n      let str = JSON.stringify(data);\n      console.log(\"-----长度--->\", str.length);\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async Polygon_RPCRequest() {\n      try {\n        var data = {\n          method: \"eth_getTransactionByHash\",\n          params: [\"0xd62fa4ea3cf7ee3bf6f5302b764490730186ed6a567c283517e8cb3c36142e1a\"],\n        };\n        this.testTransaction = JSON.stringify(data);\n\n        var result = await window.provider.request(data, this.selectedChain)\n        console.log(`请求数据回调 Polygon_RPCRequest ----->> ${JSON.stringify(result)}`)\n\n        if (typeof result == \"string\") {\n          this.testboc = result;\n        } else {\n          this.testboc = JSON.stringify(result);\n        }\n      }catch (e) {\n        this.testboc = JSON.stringify(e);\n      }\n\n    },\n    async wallet_watchAsset() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xe0f63a424a4439cbe457d80e4f4b51ad25b2c56c\",\n              symbol: \"SPX6900\",\n              image:\n                  \"https://assets.coingecko.com/coins/images/31401/standard/sticker_%281%29.jpg?1702371083\",\n              decimals: 8,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xeB51D9A39AD5EEF215dC0Bf39a8821ff804A0F01\",\n              symbol: \"LGNS\",\n              image: \"https://polygonscan.com/token/images/originlgns_32.png\",\n              decimals: 9,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0x031b41e504677879370e9dbcf937283a8691fa7f\",\n              symbol: \"FET\",\n              image: \"https://bscscan.com/token/images/fetch_32.png\",\n              decimals: 18,\n            },\n          },\n        };\n      }\n\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async ton_sendTransaction() {\n      var data = {\n        \"messages\": [{\n          \"address\": \"EQARULUYsmJq1RiZ-YiH-IJLcAZUVkVff-KBPwEmmaQGH6aC\",\n          \"amount\": \"186000000\",\n          \"payload\": \"te6cckEBAgEAhgABaw+KfqUAAACKXw/PUzD0JAgA7zuZAqJxsqAciTilI8/iTnGEeq62piAAHtRKd6wOcJwQLBuBAwEAlSWThWGAEPckSDVNSvvmJOKMGCE4qb+zE0NdQGXsIPpYy63RDznGJO33ACoTmz7CXpV552d6ANFof7NJCUxG8kSbhHYZT5CrVcQGUCH+joo=\"\n        }],\n        \"validUntil\": 1736161561913,\n        \"network\": '-239'\n      }\n      this.testTransaction = JSON.stringify(data)\n    },\n    ton_getAccount() {\n      this.testTransaction = \"这里是同步获取 不再需要点击 <<发送交易>>\"\n      let result = window.tonProvider.account()\n      if (result) {\n        this.testboc = JSON.stringify(result);\n      } else {\n        this.testboc = 'null'\n      }\n    },\n\n    async tonUniversalLog() {\n      console.log(\"ton 信息: tonProvider  connected:\", window.tonProvider.connected())\n      console.log(\"ton 信息: tonProvider  account:\", JSON.stringify(window.tonProvider.account()))\n      console.log(\"ton 信息: tonProvider  wallet:\", JSON.stringify(window.tonProvider.wallet()))\n    },\n\n    async sendTransactionAlert() {\n      //\n      const response = await fetch(`https://apitest.fireverse.ai/oauth/okx/getNonce?publicAddress=0x0cecb15396825a895ff8da8fc2d2c77a234dccee`);\n      const data = await response.json();\n      console.log(\"请求数据----\", JSON.stringify(data))\n      await this.personal_sign()\n      if (confirm(\"Are you want to sign message?\")) {\n        this.sendTransaction();\n      }\n\n      // window.open(\"https://www.okx.com/download?deeplink=okx%3A%2F%2Fweb3%2Fwallet%2Fconnect\",'_self')\n    },\n\n    async sendTransaction() {\n      if (this.selectedChain.startsWith(\"aptos\")\n          || this.selectedChain.startsWith(\"movement\")\n          || this.selectedChain.startsWith(\"solana\")\n          || this.selectedChain.startsWith(\"sonic\")\n          || this.selectedChain.startsWith(\"cosmos\")) {\n        return\n      }\n      console.log(\"sendTransaction\", window.provider);\n      console.log(\"sendTransaction内容11------\", this.testTransaction);\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (this.testTransaction && window.provider) {\n        // eslint-disable-next-line no-undef\n        const sendData = JSON.parse(this.testTransaction);\n        try {\n          console.log(\"sendTransaction-----22method>>\", sendData.method);\n\n          let chainId = \"eip155:1\";\n          if (this.selectedChain) {\n            chainId = this.selectedChain;\n            console.log(\n                \"sendTransaction-----this.selectedChain>>\",\n                this.selectedChain\n            );\n          }\n          console.log(\"windowOpen[click_1]: \", Date.now());\n          console.log(\"交易的ChainId: \",chainId);\n\n          if (chainId == \"sui:mainnet\") {\n            const adapter = new SuiAdapter(window.provider);\n            var suiResult = \"invalid result\";\n            if (this.currentSuiMethod == 'sui_getAccount') {\n              let result = adapter.getAccount()\n              if (typeof result == \"string\") {\n                this.testboc = result\n              } else {\n                this.testboc = JSON.stringify(result)\n              }\n            }\n            if (this.currentSuiMethod == \"sui_signTransaction\") {\n              suiResult = await adapter.signTransaction(\n                  this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signAndExecuteTransaction\") {\n              suiResult = await adapter.signAndExecuteTransaction(\n                  this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signMessage\") {\n              console.log(\"signMessage----\", this.currentSuiTransaction);\n              suiResult = await adapter.signMessage(this.currentSuiTransaction);\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_signPersonalMessage\") {\n              console.log(\n                  \"signPersonalMessage----\",\n                  this.currentSuiTransaction\n              );\n              suiResult = await adapter.signPersonalMessage(\n                  this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_testRpc\") {\n              console.log(\"test rpc----\", this.currentSuiTransaction);\n              console.log(\n                  `请求数据发送 rpc ----->> ${JSON.stringify(sendData)}`\n              );\n              const res = await window.provider.request(sendData, chainId);\n              console.log(`请求数据回调 rpc ----->> ${JSON.stringify(result)}`);\n              if (typeof res == \"string\") {\n                this.testboc = res;\n              } else {\n                this.testboc = JSON.stringify(res);\n              }\n            }\n            console.log(\"windowOpen[click_2]: \", Date.now());\n            return;\n          } else if (chainId === \"ton:-239\") {\n            console.log(\n                `请求数据发送 sendTransaction ---ton-->> ${JSON.stringify(sendData)}`\n            );\n            let result = await window.tonProvider.sendTransaction(sendData)\n            console.log(\n                `请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`\n            );\n            if (typeof result == \"string\") {\n              this.testboc = result;\n            } else {\n              this.testboc = JSON.stringify(result);\n            }\n            return\n          }\n\n          if (chainId == 'btc:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var btcResult = 'invalid result'\n\n            if (this.currentBtcMethod == 'btc_signMessage') {\n              btcResult = await btcAdapter.signMessage(chainId, this.currentBtcTransaction[\"signStr\"])\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_send') {\n              btcResult = await btcAdapter.send(chainId, this.currentBtcTransaction)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signPsbt') {\n              btcResult = await btcAdapter.signPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n\n              this.hexToBase64(btcResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentBtcMethod == 'btc_signPsbts') {\n              btcResult = await btcAdapter.signPsbts(chainId, this.currentBtcTransaction.psbtHexs, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_sendInscription') {\n              btcResult = await btcAdapter.sendInscription(chainId, this.currentBtcTransaction.address, this.currentBtcTransaction.inscriptionId, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signAndPushPsbt') {\n              btcResult = await btcAdapter.signAndPushPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_sendBitcoin') {\n              btcResult = await btcAdapter.sendBitcoin(chainId, this.currentBtcTransaction.toAddress, this.currentBtcTransaction.satoshis, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_getAccount') {\n              btcResult = btcAdapter.getAccount(chainId)\n              this.testboc = JSON.stringify(btcResult)\n            }else if(this.currentBtcMethod === \"btc_sendRunes\"){\n              console.log(\"BTC参数--->\",JSON.stringify(this.currentBtcTransaction))\n              btcResult = await btcAdapter.sendRunes(chainId,this.currentBtcTransaction.address,this.currentBtcTransaction.runeid,this.currentBtcTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }else if(this.currentBtcMethod === \"btc_inscribeTransfer\"){\n              console.log(\"BTC参数--->\",JSON.stringify(this.currentBtcTransaction))\n              btcResult = await btcAdapter.inscribeTransfer(chainId,this.currentBtcTransaction.ticker,this.currentBtcTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }\n\n            return\n          }\n\n          if (chainId == 'fractal:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var fractalResult = 'invalid result'\n\n            if (this.currentFractalMethod == 'fractal_signMessage') {\n              fractalResult = await btcAdapter.signMessage(chainId, this.currentFractalTransaction['signStr'])\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_send') {\n              fractalResult = await btcAdapter.send(chainId, this.currentFractalTransaction)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signPsbt') {\n              fractalResult = await btcAdapter.signPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.hexToBase64(fractalResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentFractalMethod == 'fractal_signPsbts') {\n              fractalResult = await btcAdapter.signPsbts(chainId, this.currentFractalTransaction.psbtHexs, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_sendInscription') {\n              fractalResult = await btcAdapter.sendInscription(chainId, this.currentFractalTransaction.address, this.currentFractalTransaction.inscriptionId, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signAndPushPsbt') {\n              fractalResult = await btcAdapter.signAndPushPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_sendBitcoin') {\n              fractalResult = await btcAdapter.sendBitcoin(chainId, this.currentFractalTransaction.toAddress, this.currentFractalTransaction.satoshis, this.currentFractalTransaction.options)\n\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_getAccount') {\n              fractalResult = btcAdapter.getAccount(chainId)\n              this.testboc = JSON.stringify(fractalResult)\n            }else if(this.currentFractalMethod === \"fractal_sendRunes\"){\n              console.log(\"fractal参数--->\",JSON.stringify(this.currentFractalTransaction))\n              btcResult = await btcAdapter.sendRunes(chainId,this.currentFractalTransaction.address,this.currentFractalTransaction.runeid,this.currentFractalTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }else if(this.currentFractalMethod === \"fractal_inscribeTransfer\"){\n              console.log(\"fractal参数--->\",JSON.stringify(this.currentFractalTransaction))\n              btcResult = await btcAdapter.inscribeTransfer(chainId,this.currentFractalTransaction.ticker,this.currentFractalTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }\n\n            return\n          }\n\n          console.log(`请求数据发送 sendTransaction ----->> ${JSON.stringify(sendData)}`)\n          var result = await window.provider.request(sendData, chainId)\n          console.log(`请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`)\n\n          console.log(\"windowOpen[click_3]: \", Date.now());\n          if (typeof result == \"string\") {\n            this.testboc = result;\n          } else {\n            this.testboc = JSON.stringify(result);\n          }\n          console.log(\"方法数据回调 --this.testboc--\", this.testboc);\n        } catch (error) {\n          console.error(\"方法数据回调失败 --Error--\", error.message);\n\n          if (error.code === OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n            this.testboc = error.message;\n          } else {\n            this.testboc = \"wrong signature！\" + error.message;\n          }\n        }\n      } else {\n        alert(\"Please input transaction data\");\n      }\n    },\n\n    hexToBase64(hexStr) {\n      var bytes = [];\n      for (var i = 0; i < hexStr.length; i += 2) {\n        bytes.push(parseInt(hexStr.substr(i, 2), 16));\n      }\n      const buffer = new Uint8Array(bytes)\n      const blob = new Blob([buffer]);\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = function (e) {\n          var base64Data = e.target.result.split(\",\")[1]\n          resolve(base64Data);\n        };\n        reader.onerror = function (e) {\n          reject(e);\n        };\n        reader.readAsDataURL(blob);\n      });\n    },\n    testBase64UrlSafe() {\n      let datatest = {\n        \"protocolVer\": 1,\n        \"topic\": \"8a7a4c3be73802d0ae2587123ade7bb79f27433b9aa3ca589a2208a2089eecfd\",\n        \"clientId\": \"5f1bbf9eac92160affa7ef04d0a710817ddb6d8c22ebbd6263e86f059930b404\",\n        \"requestId\": \"1731383250054\",\n        \"dAppInfo\": {\n          \"url\": \"connect.oker.vip\",\n          \"origin\": \"https://connect.oker.vip\",\n          \"name\": \"univer test dapp\",\n          \"icon\": \"https://avatars.githubusercontent.com/u/37784886\"\n        },\n        \"requests\": [{\n          \"name\": \"requestAccounts\",\n          \"requiredNamespaces\": [{\"namespace\": \"aptos\", \"chains\": [\"aptos:637\"]}],\n          \"optionalNamespaces\": [],\n          \"connectRequestMethods\": [{\n            \"chainId\": \"aptos:637\",\n            \"method\": \"aptos_signMessage\",\n            \"params\": {\n              \"data\": {\n                \"address\": true,\n                \"application\": true,\n                \"chainId\": true,\n                \"message\": \"123 中文测试!\",\n                \"nonce\": \"1234\"\n              }, \"applicationUrl\": \"https://connect.oker.vip\", \"prefix\": \"APTOS\", \"aptosChainId\": \"1\"\n            }\n          }]\n        }],\n        \"redirect\": \"none\"\n      }\n      let json = JSON.stringify(datatest)\n      const utf8Array = new TextEncoder().encode(json);\n      let binary = '';\n      utf8Array.forEach(byte => {\n        binary += String.fromCharCode(byte);\n      });\n\n      let firstStr = btoa(binary)\n      console.log(\"字符串编码1>>>>\", firstStr)\n      firstStr = firstStr.replace(/\\+/g, '-')  // 替换 '+'\n      console.log(\"字符串编码2>>>>\", firstStr)\n      firstStr = firstStr.replace(/\\//g, '_')  // 替换 '/'\n      console.log(\"字符串编码3>>>>\", firstStr)\n      firstStr = firstStr.replace(/=+$/, '');  // 移除 '=';\n      console.log(\"字符串编码4>>>>\", firstStr)\n\n      let showUrl = getUniversalLink(getAppWalletDeepLink(firstStr))\n      console.log(\"字符串编码5>>>>\", showUrl)\n      this.qrValue = showUrl;\n      this.showModal = true;\n    },\n\n\n    async testTonSdk() {\n      // 1. connect\n      //  create sub providers for each namespace/chain\n      let nameSpacesChains = [];\n      let optSpaceChains = [];\n\n      let solanaChains = [\n        \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n        \"svm:70000062\",\n        \"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n        \"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\"\n      ];\n      let hasEip155, hasSolana, hasSui, hasBtc, hasAptos, hasTon, hasCosmos, hasTron, hasStarknet,hasPolygon = false\n\n      let suiChains = [\n        \"sui:mainnet\",\n      ];\n\n      let btcChains = [\n        \"btc:mainnet\",\n        \"fractal:mainnet\"\n      ];\n\n      const chains = Object.entries(this.availableChains)\n          .filter((chain) => chain[1].checked)\n          .map((chain) => chain[0]);\n      console.log(`chains  ===> ${chains.values()}`)\n      chains.forEach(function (chainId) {\n        console.log(`chains.forEach chainId  ===> ${chainId}`)\n\n        if (solanaChains.includes(chainId)) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"ton\")) {\n          nameSpacesChains.push(chainId)\n          hasTon = true\n          return\n        }\n        if (typeof chainId == 'string' && (chainId.startsWith(\"aptos\") || chainId.startsWith(\"movement\"))) {\n          nameSpacesChains.push(chainId)\n          hasAptos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId)\n          hasSolana = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"cosmos\")) {\n          nameSpacesChains.push(chainId)\n          hasCosmos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"tron\")) {\n          nameSpacesChains.push(chainId)\n          hasTron = true\n          return\n        }\n\n        if (typeof chainId == 'string' && chainId.startsWith(\"starknet\")) {\n          nameSpacesChains.push(chainId)\n          hasStarknet = true\n          return\n        }\n\n        if (suiChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`);\n          nameSpacesChains.push(chainId);\n          hasSui = true;\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`)\n          nameSpacesChains.push(chainId)\n          hasBtc = true\n          return\n        }\n        if (chainId === \"137\"){\n          hasPolygon = true\n        }\n        hasEip155 = true\n        nameSpacesChains.push(`eip155:${chainId}`)\n      })\n\n\n      optionChains.forEach(function (chainId) {\n        console.log(\"optionChains.forEach 。chainId：》》\",chainId)\n        if (solanaChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n        if (typeof chainId == \"string\" && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (suiChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          optSpaceChains.push(chainId)\n          return\n        }\n        if (chainId.startsWith('ton')) {\n          optSpaceChains.push(chainId)\n          return\n        }\n\n        optSpaceChains.push(`eip155:${chainId}`)\n      })\n\n      console.log(`namespaceChains  ===> ${JSON.stringify(nameSpacesChains)}`);\n      var connectData = {};\n      if (nameSpacesChains && nameSpacesChains.length > 0) {\n        var requireData = {};\n\n        if (hasEip155) {\n\n          if (hasPolygon){\n            requireData.eip155 = {\n              chains: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              ),\n              defaultChain: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              )[0],\n              rpcMap: {\n                \"137\":\"https://polygon.drpc.org\"\n              }\n            };\n          }else {\n            requireData.eip155 = {\n              chains: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              ),\n              defaultChain: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              )[0],\n            };\n          }\n\n        }\n        if (hasSolana) {\n          requireData.solana = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"solana\") ||\n                    item.startsWith(\"sonic\") ||\n                    item.startsWith(\"svm\") ||\n                    item.startsWith(\"soon\") ||\n                    item.startsWith(\"eclipse\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"solana\") ||\n                    item.startsWith(\"sonic\") ||\n                    item.startsWith(\"svm\")||\n                    item.startsWith(\"soon\")||\n                    item.startsWith(\"eclipse\")\n\n            )[0],\n          };\n        }\n\n        if (hasCosmos) {\n          requireData.cosmos = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            )[0],\n          }\n        }\n        if (hasTron) {\n          requireData.tron = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            )[0],\n          }\n        }\n        if (hasStarknet) {\n          requireData.starknet = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"starknet\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"starknet\")\n            )[0],\n          }\n        }\n        if (hasTon) {\n\n          //\n          let tonParams = {\n            ton_addr: {\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue) {\n            tonParams = {\n              ton_addr: {\n                name: 'ton_addr',\n              },\n              ton_proof: {\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          requireData.ton = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"ton\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"ton\"))[0],\n            params: tonParams,\n          };\n        }\n\n        if (hasSui) {\n          requireData.sui = {\n            chains: nameSpacesChains.filter((item) => item.startsWith(\"sui\")),\n            defaultChain: nameSpacesChains.filter((item) =>\n                item.startsWith(\"sui\")\n            )[0],\n            rpcMap: {\n              \"sui:mainnet\": \"https://www.okx.com/fullnode/sui/discover/rpc\"\n            }\n          };\n        }\n        if (hasAptos) {\n          requireData.aptos = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\"))[0]\n          }\n        }\n\n        if (hasBtc) {\n          let btcChains = nameSpacesChains.filter(item => item.startsWith(\"btc\") || item.startsWith(\"fractal\"))\n          requireData.btc = {\n            chains: btcChains,\n            defaultChain: btcChains[0]\n          }\n        }\n        console.log(`requireData  ===> ${JSON.stringify(requireData)}`)\n        connectData['namespaces'] = requireData;\n        console.log(JSON.stringify(connectData))\n      }\n\n      if (optSpaceChains && optSpaceChains.length > 0) {\n        const optData = {};\n\n        const eip155Chains = optSpaceChains.filter((item) => item.startsWith(\"eip155\"));\n        if (eip155Chains.length > 0) {\n          optData[\"eip155\"] = {\n            chains: eip155Chains,\n            defaultChain: eip155Chains[0],\n          };\n        }\n\n        const solanaChains = optSpaceChains.filter((item) => item.startsWith(\"solana\"));\n        if (solanaChains.length > 0) {\n          optData[\"solana\"] = {\n            chains: solanaChains,\n            defaultChain: solanaChains[0],\n          };\n        }\n\n        const tonChains = optSpaceChains.filter((item) => item.startsWith(\"ton\"));\n        if (tonChains.length > 0) {\n\n          let tonParams = {\n            ton_addr: {\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue) {\n            tonParams = {\n              ton_addr: {\n                name: 'ton_addr',\n              },\n              ton_proof: {\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          optData[\"ton\"] = {\n            chains: tonChains,\n            defaultChain: tonChains[0],\n            params: tonParams,\n          };\n        }\n\n        const btcChains = optSpaceChains.filter((item) => item.startsWith(\"btc\"));\n        if (btcChains.length > 0) {\n          optData[\"btc\"] = {\n            chains: btcChains,\n            defaultChain: btcChains[0],\n          };\n        }\n\n        connectData[\"optionalNamespaces\"] = optData;\n      }\n\n      if (nameSpacesChains.length === 0 && optSpaceChains.length === 0) {\n        //未选择链\n        alert(\"Please select a chain from above to continue\");\n        return;\n      }\n      console.log(\"=====>connectData \");\n      console.log(connectData);\n\n      var connectMethod;\n      let signMethods = this.getCurrentSelectedMethodData();\n      if (window.provider instanceof OKXUniversalConnectUI) {\n\n        if (signMethods && signMethods.length > 0) {\n          connectMethod = window.provider.openModalAndSign(connectData, JSON.parse(JSON.stringify(signMethods)));\n        } else {\n          connectMethod = window.provider.openModal(connectData);\n        }\n      } else {\n        if (this.universalToTG) {\n          connectData.sessionConfig = {\n            useMini: true,\n            openUniversalUrl: true,\n            tmaReturnUrl: 'back'\n          }\n        } else {\n          connectData.sessionConfig = {\n            redirect: selectedReturnStrategy\n          }\n        }\n        if (signMethods && signMethods.length > 0) {\n          connectMethod = window.provider.connectAndSign(connectData, JSON.parse(JSON.stringify(signMethods)));\n        } else {\n          connectMethod = window.provider.connect(connectData);\n        }\n      }\n\n      await connectMethod\n          .then((result) => {\n            // 2. set defaul chain\n            this.walletAddress = \"connected\";\n            if (this.isPC()) {\n              this.showModal = false;\n            }\n            if (result) {\n              this.testboc = JSON.stringify(result)\n            }\n\n            if (window.provider.session && window.provider.session.namespaces) {\n              let ton = window.provider.session.namespaces[\"ton\"];\n              console.log(\"是否包含ton\", ton)\n              if (ton) {\n                this.tonUniversalLog()\n              }\n            }\n          })\n          .catch((error) => {\n            if (error.code == 301) {\n              setTimeout(() => {\n                alert(error.message)\n              }, 0.5);\n            } else if (error.message) {\n              alert(error.message)\n            }\n            console.error(\"发生了错误：\", error);\n          });\n    },\n\n    getCurrentSelectedMethodData() {// 连接签名\n      var methodList = [];\n      this.selectedMethod.forEach(method => {\n        switch (method) {\n          case \"wallet_addEthereumChain(ETH)\":\n            methodList.push({\n              method: \"wallet_addEthereumChain\",\n              chainId: \"eip155:1\",\n              params: {\n                blockExplorerUrls: [\"https://explorer.fuse.io\"],\n                chainId: \"0x7a\",\n                chainName: \"Fuse\",\n                nativeCurrency: {name: \"Fuse\", symbol: \"FUSE\", decimals: 18},\n                rpcUrls: [\"https://rpc.fuse.io\"],\n              },\n            })\n            break;\n          case \"personal_sign(ETH)\":\n            methodList.push(\n                {\n                  method: \"personal_sign\",\n                  chainId: \"eip155:1\",\n                  params: [\n                    \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n                  ],\n                });\n            break;\n          case \"solana_signMessage(Sol mainnet)\":\n            methodList.push(\n                {\n                  \"chainId\": \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n                  \"method\": \"solana_signMessage\",\n                  \"params\": {\n                    \"message\": \"Hello Solana\",\n                  }\n                }\n            );\n            break;\n          case \"sui_signMessage(Sui mainnet)\":\n          case \"sui_signPersonalMessage(Sui mainnet)\": {\n            let suiData = [\n              76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n              109, 111, 118, 101,\n            ];\n            let uint8Array = new Uint8Array(suiData);\n            let currentMethod = \"sui_signMessage\";\n            this.currentSuiTransaction = {\n              message: uint8Array\n            }\n\n            if (method.startsWith(\"sui_signPersonalMessage\")) {\n              currentMethod = \"sui_signPersonalMessage\";\n            }\n            methodList.push(\n                {\n                  method: currentMethod,\n                  chainId: \"sui:mainnet\",\n                  params: {\n                    message: uint8Array,\n                  }\n                }\n            );\n            break;\n          }\n          case \"btc_signMessage(BTC)\":\n            methodList.push(\n                {\n                  method: \"btc_signMessage\",\n                  chainId: \"btc:mainnet\",\n                  params: {\n                    message: \"Welcome to BTC\"\n                  }\n                }\n            )\n            break;\n          case \"aptos_signMessage(aptos mainnet)\":\n            methodList.push(\n                {\n                  \"chainId\": \"aptos:mainnet\",\n                  \"method\": \"aptos_signMessage\",\n                  \"params\": {\n                    address: true,\n                    application: true,\n                    chainId: true,\n                    message: \"Hello Aptos\",\n                    nonce: \"1234\"\n                  }\n                }\n            )\n            break;\n          case \"cosmos_signArbitrary(cosmoshub)\":\n            methodList.push(\n                {\n                  \"chainId\": \"cosmos:cosmoshub-4\",\n                  \"method\": \"cosmos_signArbitrary\",\n                  \"params\": {\n                    message: \"test cosmos\"\n                  }\n                }\n            )\n\n            break;\n          case \"test_noSupport_eth(ETH)\":\n            methodList.push(\n                {\n                  chainId: \"eip155:1\",\n                  method: \"test_noSupport_eth\",\n                  params: {\n                    message: \"test hello\",\n                  }\n                }\n            )\n            break;\n          case \"sync_all_addresses\":\n            methodList.push(\n                {\n                  method: \"sync_all_addresses\",\n                });\n            break;\n          case \"tron_signMessage\":\n            methodList.push(\n                {\n                  chainId: \"tron:mainnet\",\n                  method: \"tron_signMessage\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n          case \"tron_signMessageV2\":\n            methodList.push(\n                {\n                  chainId: \"tron:mainnet\",\n                  method: \"tron_signMessageV2\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n\n            //\n          case \"starknet_signMessage\": {\n            const signData = {\n              \"domain\": {\n                \"chainId\": \"0x534e5f4d41494e\",\n                \"name\": \"STRKFarm\",\n                \"version\": \"1\"\n              },\n              \"message\": {\n                \"document\": \"app.strkfarm.xyz/tnc/v1\",\n                \"message\": \"Read and Agree T&C\"\n              },\n              \"primaryType\": \"Tnc\",\n              \"types\": {\n                \"StarkNetDomain\": [\n                  {\n                    \"name\": \"name\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"version\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"chainId\",\n                    \"type\": \"felt\"\n                  }\n                ],\n                \"Tnc\": [\n                  {\n                    \"name\": \"message\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"document\",\n                    \"type\": \"felt\"\n                  }\n                ]\n              }\n            }\n            methodList.push({\n              chainId: \"starknet:mainnet\",\n              method: \"starknet_signMessage\",\n              params: {\n                accountAddress: \"\",\n                typedData: signData\n              }\n            })\n          }\n            break\n          default:\n\n            break;\n        }\n      })\n      this.selectedMethodData = methodList\n      return methodList\n\n    },\n\n    closeModal() {\n      this.showModal = false;\n    },\n\n    isPC() {\n      const userAgentInfo = navigator.userAgent;\n      console.log(\"current device ua is ===>\", userAgentInfo);\n\n      const Agents = [\n        \"Android\",\n        \"iPhone\",\n        \"SymbianOS\",\n        \"Windows Phone\",\n        \"iPad\",\n        \"iPod\",\n      ];\n      let flag = true;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = false;\n          break;\n        }\n      }\n      return flag;\n    },\n    isSafariOrChrome() {\n      const userAgentInfo = navigator.userAgent;\n      const Agents = [\"Safari\", \"Chrome\"];\n      let flag = false;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = true;\n          break;\n        }\n      }\n      return flag;\n    },\n\n    /// solana\n    async sol_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      try {\n        let data = {\n          method: \"solana_signMessage\",\n          params: {\n            message: \"Hello Solana\",\n            pubkey: \"\",\n          },\n        };\n        this.testTransaction = JSON.stringify(data);\n        let provider = new OKXSolanaProvider(window.provider);\n\n        const encoder = new TextEncoder();\n        const uint8Array1 = encoder.encode(\"Hello Solana\");\n\n        let message = await provider.signMessage(\n            uint8Array1,\n            this.selectedChain\n        );\n        console.log(\"solana_signMessage Result:\", JSON.stringify(message), typeof(uint8Array1))\n        const result1 = nacl.sign.detached.verify(\n            new TextEncoder().encode(\"Hello Solana\"),\n            message.signature,\n            new PublicKey(message.publicKey).toBytes()\n        );\n        console.log(result1)\n\n        if (typeof message == \"string\") {\n          this.testboc = result1;\n        } else {\n          this.testboc = result1;\n        }\n      } catch (e) {\n        console.log(\"solana_signMessage error:\", JSON.stringify(e))\n        this.testboc = e.message\n      }\n\n    },\n\n    async aptos_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      let data = {\n        address: true,\n        application: true,\n        chainId: true,\n        message: \"Hello Aptos\",\n        nonce: \"1234\"\n      }\n\n      let provider = new OKXAptosProvider(window.provider)\n      let message = await provider.signMessage(data, this.selectedChain)\n      this.testTransaction = JSON.stringify(data)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n      try {\n        const transaction = await aptos.transaction.build.simple({\n          sender: provider.getAccount(this.selectedChain).address,\n          data: {\n            // The Move entry-function\n            function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n            // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n            typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n            functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n          },\n        });\n        console.log(\"获取地址aptos 222222：\");\n\n        this.testTransaction = safeJsonStringify(transaction)\n\n        let message = await provider.signTransaction(transaction, this.selectedChain)\n        if (typeof message == \"string\") {\n          this.testboc = message\n        } else {\n          this.testboc = JSON.stringify(message)\n        }\n      }catch (e) {\n\n        this.testboc = JSON.stringify(e)\n      }\n\n    },\n\n    async move_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n          functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        },\n      });\n\n      // let data = {\n      //   \"arguments\": [\"100000\",[\"0\",\"0\",\"10533\"],[\"10\",\"5\",\"5\"],[\"false\",\"false\",\"true\"]],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x3\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\",\"0x73eb84966be67e4697fc5ae75173ca6c35089e802650f75422ab49a8729704ec::coin::DooDoo\",\"0x53a30a6e5936c0a4c5140daed34de39d17ca7fcae08f947c02e979cef98a3719::coin::LSD\",\"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::CurveV1\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x54cb0bb2c18564b86e34539b9f89cfe1186e39d89fce54e1cd007b8e61673a85::bin_steps::X80\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async sol_signVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(\n          provider.getAccount(\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\").address\n      );\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signTransaction(\n          transaction,\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAndSendVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n          transaction,\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllVersionedTransactions() {\n      let provider = new OKXSolanaProvider(window.provider);\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n          [transaction],\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signTransaction() {\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: 1000,\n          })\n      );\n\n      this.testTransaction = safeJsonStringify(transaction)\n      let result = await provider.signTransaction(\n          transaction,\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllTransactions() {\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n          [transaction],\n          this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    getSolConnect() {\n      let rpc = \"https://www.okx.com/fullnode/sol/discover/rpc\"\n      if (this.selectedChain === \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\") {\n        rpc = \"https://www.okx.com//fullnode/sol/discover/rpc\"\n      } else if (this.selectedChain === \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\") {\n        rpc = \"https://www.okx.com/fullnode/soltestnet/discover/rpc\"\n      } else if (this.selectedChain === \"svm:70000062\") {\n        rpc = \"https://www.okx.com/fullnode/sonic/testnet/discover/rpc\"\n      }\n      return rpc\n    },\n\n    async sol_signAndSendTransaction() {\n\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n          transaction,\n          this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async cosmos_signArbitrary() {\n      let provider = new OKXCosmosProvider(window.provider)\n      let message = await provider.signArbitrary(this.selectedChain, provider.getAccount(this.selectedChain).address, \"test cosmos\")\n      if (typeof message == \"string\") {\n        this.testboc = message;\n      } else {\n        let isValid = await this.cosmos_verifySignArbitrary(provider.getAccount(this.selectedChain).address, \"test cosmos\", message.signature, message.pub_key.value)\n        console.log(\"verify\", isValid)\n        this.testboc = \"verify:\" + isValid + JSON.stringify(message);\n      }\n    },\n\n    async cosmos_verifySignArbitrary(signer, data, signature, pubkey) {\n      try {\n        console.log(\"cosmos_verifySignArbitrary signer:\", signer)\n        console.log(\"cosmos_verifySignArbitrary data:\", JSON.stringify(data))\n        console.log(\"cosmos_verifySignArbitrary signature:\", signature)\n        console.log(\"cosmos_verifySignArbitrary pubkey:\", pubkey)\n\n        // 将bech32地址转换为公钥\n        const {prefix: prefixStr} = fromBech32(signer)\n\n        const signatureBuffer = Buffer.from(signature, 'base64');\n\n        const uint8Signature = new Uint8Array(signatureBuffer); // Convert the buffer to an Uint8Array\n\n        const pubKeyValueBuffer = Buffer.from(pubkey, 'base64'); // Decode the base64 encoded value\n\n        const pubKeyUint8Array = new Uint8Array(pubKeyValueBuffer); // Convert the buffer to an Uint8Array\n\n        // 验证签名\n        return await verifyADR36Amino(\n            prefixStr,\n            signer,\n            data,\n            pubKeyUint8Array,\n            uint8Signature\n        )\n      } catch (err) {\n        console.error('Verification failed:', err)\n        return false\n      }\n    },\n\n    async cosmos_signAmino() {\n      let provider = new OKXCosmosProvider(window.provider)\n      // const rpcUrl = 'https://osmosis-rpc.publicnode.com:443';\n      // const client = await StargateClient.connect(rpcUrl);\n      // const height = await client.getHeight();\n      // let address = provider.getAccount(this.selectedChain).address\n      // const sequence = await client.getSequence(address)\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      // let signDoc = makeSignDoc(\n      //     transaction.msgs,\n      //     transaction.fee,\n      //     this.selectedChain.split(\":\")[1],\n      //     transaction.memo,\n      //     transaction.accountNumber,\n      //     transaction.sequence,\n      // )\n      let signDoc = {\n        \"chain_id\": \"osmosis-1\",\n        \"account_number\": \"630104\",\n        \"sequence\": \"480\",\n        \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]},\n        \"msgs\": [{\n          \"type\": \"osmosis/poolmanager/swap-exact-amount-in\",\n          \"value\": {\n            \"sender\": \"osmo1u6lts9ng4etxj0zdaxsada6zgl8dudpgelmuyu\",\n            \"routes\": [{\n              \"pool_id\": \"1096\",\n              \"token_out_denom\": \"ibc/987C17B11ABC2B20019178ACE62929FE9840202CE79498E29FE8E5CB02B7C0A4\"\n            }, {\n              \"pool_id\": \"611\",\n              \"token_out_denom\": \"ibc/27394FB092D2ECCD56123C74F36E4C1F926001CEADA9CA97EA622B25F41E5EB2\"\n            }],\n            \"token_in\": {\"denom\": \"uosmo\", \"amount\": \"100\"},\n            \"token_out_min_amount\": \"8\"\n          }\n        }],\n        \"memo\": \"FE\",\n        \"timeout_height\": \"23603788\",\n        \"signOptions\": {\n          \"useOneClickTrading\": false,\n          \"preferNoSetFee\": true,\n          \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]}\n        }\n      }\n\n\n      // let signOption = {\n      //   memo: true, // optional\n      //   fee: true, // optional\n      //   gasRate: {\n      //     // optional\n      //     average: \"0.2\",\n      //     low: \"0.02\",\n      //     tiny: \"0.002\",\n      //   },\n      // }\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signAmino(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, signDoc)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    messageToBuffer(message) {\n      var buffer = Buffer.from([]);\n      try {\n        if (typeof message === \"string\") {\n          buffer = Buffer.from(message.replace(\"0x\", \"\"), \"hex\");\n        } else {\n          buffer = Buffer.from(message);\n        }\n      } catch (err) {\n        console.log(`messageToBuffer error: ${err}`);\n      }\n      return buffer;\n    },\n\n\n    async cosmos_signDirect() {\n      let provider = new OKXCosmosProvider(window.provider)\n\n      let signDoc = {\n        \"bodyBytes\": this.messageToBuffer(\"0x0ac1010a292f6962632e6170706c69636174696f6e732e7472616e736665722e76312e4d73675472616e736665721293010a087472616e7366657212096368616e6e656c2d301a0d0a05756f736d6f120431303030222b6f736d6f3175366c7473396e67346574786a307a64617873616461367a676c386475647067656c6d7579752a2d636f736d6f733175366c7473396e67346574786a307a64617873616461367a676c386475647067337967766a773207080410ebe3f90a3880b0bcafd18cec8218\"),\n        \"authInfoBytes\": this.messageToBuffer(\"0x0a510a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a2102446e19e94ac0e83ea896d2712507577eb39fbdd2d6ae9f0fc0b9759f1fbaba9012040a02080118e00312140a0e0a05756f736d6f1205323530303010859a11\"),\n        \"chainId\": \"osmosis-1\",\n        \"accountNumber\": \"630104\",\n      }\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signDirect(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, transaction)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    sui_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentSuiTransaction = params\n      this.currentSuiMethod = flag\n    },\n\n    btc_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentBtcTransaction = params\n      this.currentBtcMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n\n    fractal_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentFractalTransaction = params\n      this.currentFractalMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n    tron_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n    tron_generateTransactionParams(params) {\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n\n    starknet_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n\n    starknet_generateTransactionParams(params) {\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n\n    handleModalsSelect(modals) {\n      selectedModals = modals;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: modals.length === 3 ? \"all\" : modals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n\n    handleReturnStrategySelect(returnStrategy) {\n      selectedReturnStrategy = returnStrategy === \"deeplink\" ? this.deeplink : returnStrategy;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = selectedReturnStrategy;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: selectedReturnStrategy\n          };\n        }\n      }\n    },\n\n    handleReturnStrategyDeeplink(deeplink) {\n      console.log('handleReturnStrategyDeeplink', deeplink)\n      selectedReturnStrategy = deeplink;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: deeplink,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = deeplink;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: deeplink\n          };\n        }\n      }\n    },\n\n    handleLanguageSelect(language) {\n      selectedLanguage = language;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: language,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n    handleConnectMethodsSelect() {\n      console.log(\"当前的方法 this.selectedMethod>>>>\", this.selectedMethod);\n    },\n\n    eth_verifyMessage(message, signature, ethAddress) {\n      console.log(\"eth_verifyMessage   message>>>\", message)\n      console.log(\"eth_verifyMessage   signature>>>\", signature)\n      console.log(\"eth_verifyMessage   ethAddress>>>\", ethAddress)\n      if (!message || !signature) {\n        return \"\"\n      }\n      let originalMessage = message\n      if (message.startsWith(\"0x\")) {\n        originalMessage = originalMessage.replace(/^0x/, '');\n        let str = '';\n        for (let i = 0; i < originalMessage.length; i += 2) {\n          const byte = originalMessage.slice(i, i + 2);\n          str += String.fromCharCode(parseInt(byte, 16));\n        }\n        originalMessage = str\n      }\n      console.log(\"eth_verifyMessage   originalMessage>>>\", originalMessage)\n\n      // const messageHash = ethers.utils.hashMessage(originalMessage);\n      const recoveredAddress = ethers.utils.verifyMessage(originalMessage, signature);\n      console.log(\"eth_verifyMessage recoveredAddress:\", recoveredAddress);\n      return recoveredAddress.toLowerCase() === ethAddress.toLowerCase();\n    },\n\n    async verifyMessage(list) { //连接验签\n\n      if (window.provider && window.provider.session && list && list.length > 0) {\n        let verifyList = {}\n        for (let methodItem of list) {\n          if (\"result\" in methodItem && \"method\" in methodItem) {\n            let requestItme = this.selectedMethodData.filter(item => item.method === methodItem.method)[0];\n            console.log(\"验证签名 请求>>>:\", JSON.stringify(requestItme));\n            console.log(\"验证签名 结果>>>:\", JSON.stringify(methodItem));\n            if (methodItem.method === \"personal_sign\") {\n              let ethAddress = this.requestEVMAccountWithSession(methodItem.chainId)\n              ethAddress = ethAddress[0];\n              console.log(\"验证eth 钱包地址>>>:\", ethAddress);\n              let ethMessage = requestItme.params[0]\n              console.log(\"验证eth 签名消息体>>:\", JSON.stringify(ethMessage));\n              verifyList[methodItem.method] = this.eth_verifyMessage(ethMessage, methodItem.result, ethAddress)\n            } else if (methodItem.method === \"solana_signMessage\") {\n              let solanaMessage = methodItem.result\n              if (\"signature\" in solanaMessage && \"publicKey\" in solanaMessage) {\n                const verifySol = nacl.sign.detached.verify(\n                    new TextEncoder().encode(\"Hello Solana\"),\n                    solanaMessage.signature,\n                    new PublicKey(solanaMessage.publicKey).toBytes()\n                );\n                verifyList[methodItem.method] = verifySol\n              } else {\n                verifyList[methodItem.method] = false\n              }\n            } else if (methodItem.method === \"sui_signPersonalMessage\" || methodItem.method === \"sui_signMessage\") {\n              let suiResult = this.sui_verifySignature(methodItem.result);\n              verifyList[methodItem.method] = (await suiResult).result\n            } else if (methodItem.method === \"btc_signMessage\") {\n\n              verifyList[methodItem.method] = \"Not verified yet\"\n\n            } else if (methodItem.method === \"aptos_signMessage\") {\n              let aptosMessage = methodItem.result\n              let aptosProvider = new OKXAptosProvider(window.provider)\n              let aptosPublicKey = aptosProvider.getAccount(methodItem.chainId)?.publicKey\n\n              let signStr = aptosMessage.signature\n              if (signStr.startsWith(\"0x\")) {\n                signStr = signStr.slice(2, signStr.length)\n              }\n\n              console.log(\"aptos_signMessage aptosPublicKey And signStr\", aptosPublicKey, signStr)\n              verifyList[methodItem.method] = nacl.sign.detached.verify(\n                  Buffer.from(aptosMessage.fullMessage),\n                  Buffer.from(signStr, 'hex'),\n                  Buffer.from(aptosPublicKey, 'hex'),\n              );\n            } else if (methodItem.method === \"cosmos_signArbitrary\") {\n              let cosmosProvider = new OKXCosmosProvider(window.provider)\n              let cosmosAddress = cosmosProvider.getAccount(methodItem.chainId)?.address\n              let cosmosMessage = methodItem.result\n              let isValid = await this.cosmos_verifySignArbitrary(cosmosAddress, \"test cosmos\", cosmosMessage.signature, cosmosMessage.pub_key.value)\n              verifyList[methodItem.method] = isValid\n\n            } else if (methodItem.method === \"tron_signMessage\") {\n              let tronMessage = methodItem.result\n              let tronWeb = new TronWeb({\n                \"fullHost\": 'https://api.trongrid.io',\n                \"headers\": {},\n                \"privateKey\": ''\n              })\n              let provider = new OKXTronProvider(window.provider)\n              verifyList[methodItem.method] = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), tronMessage, provider.getAccount(\"tron:mainnet\").address)\n            } else if (methodItem.method === \"tron_signMessageV2\") {\n              let tronMessage = methodItem.result\n              let tronWeb = new TronWeb({\n                \"fullHost\": 'https://api.trongrid.io',\n                \"headers\": {},\n                \"privateKey\": ''\n              })\n              const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", tronMessage);\n              let provider = new OKXTronProvider(window.provider)\n\n              verifyList[methodItem.method] = base58Address === provider.getAccount(\"tron:mainnet\").address\n            } else if (methodItem.method === \"starknet_signMessage\") {\n              let res = methodItem.result\n              let signData = this.starknetPanelTypedData\n\n              const rpcProvider = new StarknetRpcProvider({nodeUrl: \"https://free-rpc.nethermind.io/mainnet-juno/v0_7\"});\n\n              let provider = new OKXStarknetProvider(window.provider)\n              let address = provider.getAccount(\"starknet:mainnet\").address\n              let pk = \"0x123\"; /// random pk\n              const account = new StarknetAccount(rpcProvider, address, pk)\n\n              let that = this\n              account.verifyMessage(signData, res).then(function (isValid) {\n                that.testTransaction = `Verifyed result: \\n${isValid}`\n              }).catch(function (error) {\n                that.testTransaction = `Verifyed failed: \\n${error}`\n              })\n              verifyList[methodItem.method] = \"starknet is verifying signature...\"\n            } else {\n              verifyList[methodItem.method] = \"Not verified yet\"\n\n            }\n          } else if (\"method\" in methodItem && \"error\" in methodItem) {\n            verifyList[methodItem.method] = methodItem.error\n          }\n\n        }\n\n        console.log(\"验证签名 最后的结果>>>:\", JSON.stringify(verifyList));\n        this.testTransaction = \"签名验证结果如下: \\n\" + JSON.stringify(verifyList)\n      } else {\n        console.log(\"验证签名 window.provider.session.connectMethodsReply 为空:\");\n\n      }\n\n    },\n\n    handleThemeSelect(theme) {\n      selectedTheme = theme;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: theme,\n          },\n        };\n      }\n    },\n\n    async sui_verifySignature(signatureResult) {\n      let resultObj = signatureResult\n      let result = false\n      let msg = ''\n      try {\n        /// 获取当前account\n        const adapter = new SuiAdapter(window.provider);\n        let account = adapter.getAccount()\n        console.log(`Account中获取的address：${account.address}`)\n\n        /// 验证签名\n        let pubKey = await verifyPersonalMessageSignature(this.currentSuiTransaction.message, resultObj.signature)\n        let address = pubKey.toSuiAddress()\n        console.log(`验签结果计算得到address：${address}`)\n\n        /// 对比pubKey\n        console.log(`account pubkey: ${account.publicKey}`,)\n        console.log(`result pubkey: ${pubKey.toBase64()}`)\n        result = (account.address === address) && (account.publicKey === pubKey.toBase64())\n\n        msg = `address verify: ${account.address === address}\\npublicKey verify: ${account.publicKey === pubKey.toBase64()}`\n        console.log(\"signature verify success: \", pubKey)\n      } catch (e) {\n        console.log(\"signature verify failed: \", e)\n      }\n      return {\n        result,\n        msg\n      }\n    },\n\n\n    handleRedirectSelect(input) {\n      this.redirect = input;\n    },\n\n    handleRedirectDeeplink(input) {\n      this.redirectDeeplink = input;\n    },\n\n    addRedirectParam() {\n      if (this.testTransaction) {\n        const newTransaction = JSON.parse(this.testTransaction);\n        newTransaction.redirect = this.redirect === 'deeplink' ? this.redirectDeeplink : this.redirect;\n        this.testTransaction = JSON.stringify(newTransaction);\n      }\n    },\n\n    canChainAddRedirectParam() {\n      return chainsThatCanAddRedirectParam.some((c) => this.selectedChain.startsWith(c));\n    }\n  },\n  created() {\n    // for (const eventName of Object.values(OKX_TON_CONNECTION_AND_TRANSACTION_EVENT)) {\n    //   console.log(eventName);\n    //   window.addEventListener(eventName, (event) => {\n    //     console.log(eventName,event.detail)\n    //     this.currentStatus = eventName\n    //   });\n    // }\n  },\n\n  mounted() {\n\n    var scriptTag = document.createElement(\"script\");\n    scriptTag.src = \"https://telegram.org/js/telegram-web-app.js\";\n    scriptTag.id = \"tgsdk\";\n    document.getElementsByTagName('head')[0].appendChild(scriptTag);\n\n    this.connectReady = true;\n    document.title = \"OKX Connect\";\n    this.initBtnClicked()\n    this.initBtnClicked()\n\n    console.log(\"挂载成功:\")\n    if (this.$refs.starknetPanelRef) {\n      this.starknetPanelTypedData = toRaw(this.$refs.starknetPanelRef.signData)\n      console.log(\"111: \", this.starknetPanelTypedData)\n    } else {\n      console.log(\"222\")\n    }\n  },\n};\n</script>\n","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_getAccount()\">getAccount(BTC)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signMessage()\">signMessage(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_send()\">send(BTC)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendBitcoin()\">sendBitcoin(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signPsbt_up()\">signPsbt(上架NFT)</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"btc_signAndPushPsbt_up()\">signAndPushPsbt(上架NFT)</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在 https://okxwallet.github.io/test-dapp/psbt/builder  网站链接钱包，选择bitcoin链\n        </li>\n        <li>\n          2. 选择UTXO 并且设置输出 UTXO，点击签名 PSBT,弹出签名面板，点开高级选项，\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendInscription()\">sendInscription(BTC)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Btc NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"runsAddress\" clearable placeholder=\"the receiver address\" />\n      <el-input class=\"grid-content\" v-model=\"runsId\" clearable placeholder=\"the runeid\" />\n      <el-input class=\"grid-content\" v-model=\"runsAmount\" clearable placeholder=\"the amount to send\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendRunes()\">btc_sendRunes(BTC)</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model= \"intTicker\" clearable placeholder=\"BRC-20 ticker \" />\n      <el-input class=\"grid-content\" v-model=\" intAmount\" clearable placeholder=\" the amount to inscribe\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_inscribeTransfer()\">btc_inscribeTransfer(BTC)</el-button>\n    </el-col>\n\n\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    const runsAddress = ref('')\n    const runsId = ref('')\n    const runsAmount = ref('')\n    const intTicker = ref('')\n    const intAmount = ref('')\n\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount,\n      runsAddress,\n      runsId,\n      runsAmount,\n      intTicker,\n      intAmount\n    }\n  },\n  methods: {\n\n    btc_getAccount() {\n      this.$emit('generateTransactionParams', {}, \"btc_getAccount\")\n    },\n\n    btc_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to BTC\"\n      };\n      this.$emit('generateTransactionParams', params, \"btc_signMessage\")\n    },\n\n    btc_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"btc_send\")\n    },\n\n    btc_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"btc_sendBitcoin\")\n    },\n\n    btc_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"btc_signPsbt\")\n    },\n\n    btc_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"btc_signAndPushPsbt\")\n    },\n\n    btc_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"btc_sendInscription\")\n    },\n    btc_sendRunes() {\n      if (!this.runsAddress) {\n        alert(\"Please enter the receiver address\")\n        return\n      }\n      if (!this.runsId) {\n        alert(\"Please enter the runsId\")\n        return\n      }\n      if (!this.runsAmount) {\n        alert(\"Please enter the amount to send \")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        address:this.runsAddress,\n        runeid:this.runsId,\n        amount:this.runsAmount\n      }, \"btc_sendRunes\")\n    },\n\n    btc_inscribeTransfer() {\n      if (!this.intTicker) {\n        alert(\"Please enter BRC-20 ticker\")\n        return\n      }\n      if (!this.intAmount) {\n        alert(\"Please enter the amount to inscribe\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        ticker:this.intTicker,\n        amount:this.intAmount\n      }, \"btc_inscribeTransfer\")\n    },\n\n\n\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./BtcTransactionPanel.vue?vue&type=template&id=7dba68b6&scoped=true\"\nimport script from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./BtcTransactionPanel.vue?vue&type=style&index=0&id=7dba68b6&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7dba68b6\"]])\n\nexport default __exports__","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_getAccount()\">getAccount(Fractal)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signMessage()\">signMessage(Fractal)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_send()\">send(Fractal)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_sendBitcoin()\">sendBitcoin(Fractal)</el-button>\n\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signPsbt_up()\">signPsbt(上架NFT)</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_signAndPushPsbt_up()\">signAndPushPsbt(上架NFT)</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在 https://okxwallet.github.io/test-dapp/psbt/builder  网站链接钱包，选择Fractal链\n        </li>\n        <li>\n          2. 选择UTXO 并且设置输出 UTXO，点击签名 PSBT,弹出签名面板，点开高级选项，\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_sendInscription()\">sendInscription(Fractal)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Fractal NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"runsAddress\" clearable placeholder=\"the receiver address\" />\n      <el-input class=\"grid-content\" v-model=\"runsId\" clearable placeholder=\"the runeid\" />\n      <el-input class=\"grid-content\" v-model=\"runsAmount\" clearable placeholder=\"the amount to send\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_sendRunes()\">fractal_sendRunes(fractal)</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model= \"intTicker\" clearable placeholder=\"BRC-20 ticker \" />\n      <el-input class=\"grid-content\" v-model=\" intAmount\" clearable placeholder=\" the amount to inscribe\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_inscribeTransfer()\">fractal_inscribeTransfer(fractal)</el-button>\n    </el-col>\n\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    const runsAddress = ref('')\n    const runsId = ref('')\n    const runsAmount = ref('')\n    const intTicker = ref('')\n    const intAmount = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount,\n      runsAddress,\n      runsId,\n      runsAmount,\n      intTicker,\n      intAmount\n    }\n  },\n  methods: {\n\n    fractal_getAccount() {\n      this.$emit('generateTransactionParams', {}, \"fractal_getAccount\")\n    },\n\n    fractal_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to UniSat!\\n\\nClick to sign in and accept the UniSat Terms of Service (https://unisat.io/terms-of-service.html) and Privacy Policy (https://unisat.io/privacy-policy.html).\\n    \\nThis request will not trigger a blockchain transaction.\\n    \\nYour authentication status will reset after 24 hours.\\n    \\nWallet address:\\nbc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\\n    \\nNonce:\\n162d70e3-8c21-4cfd-9a22-9bf0a4b7be51\\n\"\n      };\n      this.$emit('generateTransactionParams', params, \"fractal_signMessage\")\n    },\n\n    fractal_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_send\")\n    },\n\n    fractal_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_sendBitcoin\")\n    },\n\n    fractal_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"fractal_signPsbt\")\n    },\n\n    fractal_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"fractal_signAndPushPsbt\")\n    },\n\n    fractal_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"fractal_sendInscription\")\n    },\n\n    fractal_sendRunes() {\n      if (!this.runsAddress) {\n        alert(\"Please enter the receiver address\")\n        return\n      }\n      if (!this.runsId) {\n        alert(\"Please enter the runsId\")\n        return\n      }\n      if (!this.runsAmount) {\n        alert(\"Please enter the amount to send \")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        address:this.runsAddress,\n        runeid:this.runsId,\n        amount:this.runsAmount\n      }, \"fractal_sendRunes\")\n    },\n\n    fractal_inscribeTransfer() {\n      if (!this.intTicker) {\n        alert(\"Please enter BRC-20 ticker\")\n        return\n      }\n      if (!this.intAmount) {\n        alert(\"Please enter the amount to inscribe\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        ticker:this.intTicker,\n        amount:this.intAmount\n      }, \"fractal_inscribeTransfer\")\n    },\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./FractalTransactionPanel.vue?vue&type=template&id=2728d927&scoped=true\"\nimport script from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./FractalTransactionPanel.vue?vue&type=style&index=0&id=2728d927&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-2728d927\"]])\n\nexport default __exports__","<script>\n\nimport {getFullnodeUrl, SuiClient} from \"@mysten/sui/client\";\nimport {Transaction as SuiTransaction} from '@mysten/sui/transactions';\n\nexport default {\n  name: \"SuiTransactionPanel\",\n  methods: {\n    sui_getAccount() {\n      this.$emit('generateTransactionParams', '', \"sui_getAccount\")\n    },\n\n    //对单个交易签名（不发送)\n    async sui_signMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signMessage\")\n    },\n\n    async sui_signPersonalMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signPersonalMessage\")\n    },\n\n    sui_signTransaction2() {\n      // 定义要转移的金额和目标地址\n      const amount = 109; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    async sui_requestRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n          `sui:mainnet`,\n          `https://fullnode.mainnet.sui.io:443`\n      );\n      var data = {\n        method: \"suix_getBalance\",\n        params: [\n          \"0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae\",\n          \"0x168da5bf1f48dafc111b0a488fa454aca95e0b5e::usdc::USDC\",\n        ],\n      };\n\n      this.$emit(\"generateTransactionParams\", data, \"sui_testRpc\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 102; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signAndExecuteTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n      this.$emit(\"generateTransactionParams\", input, \"sui_signAndExecuteTransaction\")\n    },\n\n    /// generate txBytes and txSerialize\n    async generateTsBytesAndSerizlize(input) {\n      /// txBytes and txSerialize may be constructed in advance by the dapp side\n      let resultTuple = [\"\", \"\"];\n      if (\n          \"txBytes\" in input &&\n          input.txBytes.length > 0 &&\n          \"txSerialize\" in input &&\n          input.txSerialize.length > 0\n      ) {\n        resultTuple = [input.txBytes, input.txSerialize];\n      }\n\n      /// Otherwise, a transactionBlock parameter is required.\n      if (!(\"transactionBlock\" in input)) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      // if (this.walletAddress != \"connected\") {\n      //   alert(\"请先连接钱包\");\n      //   return new Promise((resolve) => {\n      //     resolve(resultTuple);\n      //   });\n      // }\n\n      let senderAccounts = window.provider.requestAccountsWithNamespace(\"sui\");\n      if (senderAccounts.length == 0) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      try {\n        let rpcUrl = getFullnodeUrl(\"mainnet\");\n        rpcUrl = \"https://www.okx.com/fullnode/sui/discover/rpc\"\n        const suiClient = new SuiClient({ url: rpcUrl });\n\n        /// sender is required\n        input.transactionBlock.setSender(senderAccounts[0]);\n        const result = await input.transactionBlock.build({\n          client: suiClient,\n        });\n        const txBytes = Buffer(result).toString(\"base64\");\n        const txSerialize = await SuiTransaction.from(txBytes).toJSON();\n        resultTuple = [txBytes, txSerialize];\n      } catch (error) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      return new Promise((resolve) => {\n        resolve(resultTuple)\n      })\n    },\n\n    //签名并发送交易\n    sui_signAndExecuteTransaction() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n        \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.testTransaction = JSON.stringify(input);\n      this.currentSuiTransaction = input;\n      this.currentSuiMethod = \"sui_signAndExecuteTransaction\";\n    },\n  },\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_getAccount()\">getAccount(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signMessage()\">signMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signPersonalMessage()\">signPersonalMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signTransaction2()\">signTransaction(Sui)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signAndExecuteTransaction()\">sendTransaction(Sui)</el-button>\n      <div style=\"font-size: 12px; color: gray;\">(send to Rally Tiger account)</div>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_requestRpc()\">RPC_getBalance</el-button>\n      <div style=\"font-size: 12px; color: gray;\">get USDC balance of address:</div>\n      <div style=\"font-size: 12px; color: gray\">0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae</div>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signTransaction_pre_execution()\">signTransaction(prepared data)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signAndExecuteTransaction_pre_execution()\">sendTransaction(prepared data)</el-button>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./SuiTransactionPanel.vue?vue&type=template&id=56a8eddf&scoped=true\"\nimport script from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./SuiTransactionPanel.vue?vue&type=style&index=0&id=56a8eddf&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-56a8eddf\"]])\n\nexport default __exports__","<script>\nimport { OKXStarknetProvider } from \"@okxconnect/universal-provider\";\nimport { CallData, uint256, RpcProvider, Account } from \"starknet\";\n\nexport default {\n  name: \"StarknetTransactionPanel\",\n  methods: {\n    async starknet_signMessage() {\n      this.address = this.getCurrentAddress()\n      if (this.address === \"\") {\n        alert(\"address can't be ''\");\n        return\n      }\n\n      let signData = this.signData\n      this.$emit(\"generateTransactionParams\", JSON.stringify(signData))\n      let provider = new OKXStarknetProvider(window.provider)\n      let res = await provider.signMessage(this.address, signData, \"starknet:mainnet\")\n      if (res.code) {\n        if (res.code == 301) {\n          let msg = \"Wallet address is registering, please try again later!\"\n          alert(msg)\n          this.$emit(\"generateTransactionResult\", msg, \"starknet_signMessage\")\n        }\n        this.$emit(\"generateTransactionResult\", res, \"starknet_signMessage\")\n        return\n      }\n      console.log(res)\n\n      const rpcProvider = new RpcProvider({ nodeUrl: \"https://free-rpc.nethermind.io/mainnet-juno/v0_7\" });\n      let pk = \"0x123\"; /// random pk\n      const account = new Account(rpcProvider, this.address, pk)\n      let that = this\n      account.verifyMessage(signData, res).then(function (isValid) {\n        that.$emit(\"generateTransactionResult\", \"verify:\" + isValid + \"\\n\" + res, \"starknet_signMessage\")\n      }).catch(function (error) {\n        that.$emit(\"generateTransactionResult\", \"failed:\" + error + \"\\n\" + res, \"starknet_signMessage\")\n      })\n    },\n\n    async starknet_sendTransaction() {\n      this.address = this.getCurrentAddress()\n      if (this.address === \"\") {\n        alert(\"address can't be ''\");\n        return\n      }\n\n      let val = uint256.bnToUint256(120000000000000000)\n      const transferCalldata = CallData.compile({\n        to: \"0x00b909cefa36ab6bc26f5887a867e46ef162238f0a171b1c2974b665afd4237f\",\n        value: val\n      })\n\n      // const ETHTokenAddress = \"0x049d36570d4e46f48e99674bd3fcc84644ddd6b96f7c741b1562b82f9e004dc7\"\n      // const STARKTokenAddress = \"0x04718f5a0fc34cc1af16a1cdee98ffb20c31f5cd61d6ab07201858f4287c938d\"\n      const DAITokenAddress = \"0x00da114221cb83fa859dbdb4c44beeaa0bb37c7537ad5ae66fe5e0efd20e6eb3\"\n\n      const invokeParams = {\n        calls: [\n          {\n            contract_address: DAITokenAddress,\n            entry_point: \"transfer\",\n            calldata: transferCalldata\n          }\n        ],\n      }\n\n      this.$emit(\"generateTransactionParams\", JSON.stringify(invokeParams))\n      let provider = new OKXStarknetProvider(window.provider)\n\n      let that = this\n      provider.sendTransaction(this.address, invokeParams, \"starknet:mainnet\").then(function(res){\n        console.log(\"starknet_sendTransaction result \", res)\n        that.$emit(\"generateTransactionResult\", res, \"starknet_sendTransaction\")\n      }).catch(function(error) {\n        if (error.code == 301) {\n          let msg = \"Wallet address is registering, please try again later!\"\n          alert(msg)\n          that.$emit(\"generateTransactionResult\", msg, \"starknet_sendTransaction\")\n        }else {\n          that.$emit(\"generateTransactionResult\", error, \"starknet_sendTransaction\")\n        }\n      });\n    },\n\n    getCurrentAddress() {\n      let provider = new OKXStarknetProvider(window.provider)\n      const address = provider.getAccount(\"starknet:mainnet\")?.address\n      return address\n    },\n\n    getPublicKey() {\n      let provider = new OKXStarknetProvider(window.provider)\n      const account = provider.getAccount(\"starknet:mainnet\")\n      console.log(\"获取到的account是：\")\n      console.log(account)\n      return \"05d8e5e9c1dd686246716c888159271d2f13986cb4acee46164e2c4e034629c0\"\n    }\n  },\n\n  data() {\n    const signData = {\n        \"domain\": {\n          \"chainId\": \"0x534e5f4d41494e\",\n          \"name\": \"STRKFarm\",\n          \"version\": \"1\"\n        },\n        \"message\": {\n          \"document\": \"app.strkfarm.xyz/tnc/v1\",\n          \"message\": \"Read and Agree T&C\"\n        },\n        \"primaryType\": \"Tnc\",\n        \"types\": {\n          \"StarkNetDomain\": [\n            {\n              \"name\": \"name\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"version\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"chainId\",\n              \"type\": \"felt\"\n            }\n          ],\n          \"Tnc\": [\n            {\n              \"name\": \"message\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"document\",\n              \"type\": \"felt\"\n            }\n          ]\n        }\n    }\n\n    return {\n      signData\n    }\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"starknet_signMessage()\">signMessage</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 验签不成功的话，请尝试连接VPN\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"starknet_sendTransaction(true)\">\n        sendTransaction\n      </el-button>\n\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 发送0.12个DAI到0x00b9...4237f的地址\n        </li>\n        <li>\n          2. 请保证你的钱包有足够的DAI\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./StarknetTransactionPanel.vue?vue&type=template&id=082fda2b&scoped=true\"\nimport script from \"./StarknetTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./StarknetTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./StarknetTransactionPanel.vue?vue&type=style&index=0&id=082fda2b&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-082fda2b\"]])\n\nexport default __exports__","<script>\n\n\nimport {OKXTronProvider} from \"@okxconnect/universal-provider\";\nimport {TronWeb} from \"tronweb\";\n\nexport default {\n  name: \"TronTransactionPanel\",\n  methods: {\n\n    async tron_signMessage() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessage(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n\n      const verify = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), res, provider.getAccount(\"tron:mainnet\").address)\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" + res, \"tron_signMessage\")\n    },\n\n    async tron_signMessageV2() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessageV2(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", res);\n      console.log(\"tron_signMessageV2_base58Address\", base58Address)\n      console.log(\"tron_signMessageV2_address\", provider.getAccount(\"tron:mainnet\").address)\n      const verify = base58Address === provider.getAccount(\"tron:mainnet\").address\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" +  res, \"tron_signMessage\")\n    },\n\n    async tron_signTransaction(isOnlySign) {\n      let provider = new OKXTronProvider(window.provider)\n        let tronWeb = new TronWeb({\n          \"fullHost\": 'https://api.trongrid.io',\n          \"headers\": {},\n          \"privateKey\": ''\n        })\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const transaction = await tronWeb.transactionBuilder.sendTrx(\"TGBcVLMnVtvJzjPWZpPiYBgwwb7th1w3BF\", 1000, address);\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let res = await provider.signTransaction( transaction, \"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", res, \"tron_signTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async getContract() {\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n      \n      try {\n        const contract = await tronWeb.trx.getContract(contractAddress)\n        const abi = contract.abi.entrys;\n        console.log(\"获取到的合约：\")\n        console.log(abi)\n      } catch (error) {\n        console.log(\"Error getting contract ABI:\", error);\n      }\n    },\n    \n    async tron_signAndSendTransactionContract(isOnlySign) {\n      // this.getContract()\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n      ]\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"quote(uint256,uint256,uint256)\", {}, parameter, address);\n      console.log(\"=====>transaction: \")\n      console.log(ret);\n      this.$emit(\"generateTransactionParams\", ret.transaction)\n      if (isOnlySign) {\n        let tx = await provider.signTransaction( ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async tron_signAndSendTransactionApprove(isOnlySign) {\n      let contractAddress = \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'address', value: contractAddress},\n        {type: 'uint256', value: 1000},\n      ]\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"approve(address,uint256)\", {}, parameter, address);\n\n      let transaction = ret.transaction\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let tx = await provider.signTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n\n    }\n\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessage()\">tron_signMessage</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessageV2()\">tron_signMessageV2</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(true)\">\n        tron_signTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(true)\">\n        tron_signTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(true)\">\n        tron_signTransaction(Approve)\n      </el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(false)\">\n        tron_signAndSendTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(false)\">\n        tron_signAndSendTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(false)\">\n        tron_signAndSendTransaction(approve)\n      </el-button>\n    </el-col>\n\n\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./TronTransactionPanel.vue?vue&type=template&id=55a13ab0&scoped=true\"\nimport script from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./TronTransactionPanel.vue?vue&type=style&index=0&id=55a13ab0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-55a13ab0\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=46dad1a2&scoped=true\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=46dad1a2&scoped=true&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-46dad1a2\"]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\nimport App from './App.vue'\n\nconst app = createApp(App)\n\napp.use(ElementPlus)\napp.mount('#app')","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkokxconnectdemo\"] = self[\"webpackChunkokxconnectdemo\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(56310); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["require","Object","defineProperty","exports","value","AptosUtils","getTransaction","o","transaction","rawTransaction","payload","entryFunction","typeArgs","type_args","typeArguments","Array","forEach","typeTag","push","toString","realArguments","this","getTypeArguments","args","i","arguments","function","module_name","address","data","name","identifier","function_name","type","type_arguments","getArguments","array","j","length","y","values","subArray","dealArrayElements","e","Uint8Array","t","isArray","r","n","assign","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","rejected","result","done","then","apply","OKXAptosProvider","buffer_1","AptosUtils_1","core_1","constructor","provider","chainsSet","Set","getConnectedNamespace","defaultNetwork","network","requestDefaultChainWithNamespace","NameSpaceKeyAptos","currentChainId","getRealChainId","chainId","size","Error","_a","_b","_c","session","namespaces","chains","chain","add","getAccount","_d","_e","_f","_g","_h","_j","account","accounts","filter","startsWith","logDebug","accountArray","split","console","log","extra","publicKey","undefined","substring","signMessage","realChain","prefix","message","nonce","fullMessage","application","window","location","protocol","hostname","buffer","Buffer","from","hex","bufferToHex","injectParams","signedMessage","request","successData","signStr","slice","signature","error","signTransaction","tx","signAndSubmitTransaction","buf","OKXAptosProvider_1","enumerable","get","CONNECT_METHOD_BATCH_FETCHMSG","CONNECT_METHOD_FETCHMSG","CONNECT_METHOD_RECEIVE","CONNECT_METHOD_UNSUB","CONNECT_METHOD_SUB","CONNECT_METHOD_PUBLISH","CONNECT_METHOD_LOGIN","CONNECT_METHOD_PUSH","__createBinding","create","m","k","k2","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","__setModuleDefault","v","__importStar","mod","prototype","hasOwnProperty","call","OKXWalletConnector","constants_1","storageconstants_1","storage_1","utils_1","utils_2","eventemitter3_1","protocol_1","report_1","WS","resolveWebSocketImplementation","url","events","EventEmitter","state","ConnectorState","InitState","selectedUrlIndex","retryCount","timeOutLimit","checkWSUrl","heartbeatTimer","connectionTimeoutTimer","connectURLStorage","Storage","OKXCONNECTOR_CACHE_KEY","connecting","Connecting","onPayload","rsp","Date","now","emit","onClose","event","socket","code","onError","id","msg","onopen","onmessage","onclose","Connected","emitError","errorEvent","heartbeat","clearTimeout","OnError","readyState","WebSocket","OPEN","send","setTimeout","bind","tryRegistOpen","logError","registOpen","inRetry","toUTCString","URLSearchParams","startTimeOutTimer","hasBuiltInWebSocket","onerror","close","on","resetTimeOutTimer","OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE","FINISHED","checkMaxRetry","OKXCONNECTOR_WS_URL_LIST","connectionTryNext","nextUrl","getNextSelectUrl","CANCELED","pendingSocket","TIME_OUT","reportEvent","OKXReportType","LOG","cacheSuccessUrlSelect","saveContent","onVisibleChanged","document","visibilityState","once","err","OKXConnectError","OKX_CONNECT_ERROR_CODES","CONNECTION_ERROR","connect","removeEventListener","addEventListener","disconnect","Disconnected","currentStatus","addListener","decrypt","success","failed","splitCheckComplete","listenPayloadHandler","removeListener","parsedEvent","safeJsonParse","params","rawMsg","skipMsg","checkResult","isSplitPackage","finalMessage","failHandler","addPackageParse","callback","payloadHandler","param","listener","off","doLogin","safeJsonStringify","getMsgPayloadFromHistory","tmpMsg","jsonstr","onOpen","openHandler","ConnectionManager","connect_1","commands_1","jwtconstants_1","crypto_1","jwt_1","safejson_1","log_1","url_1","connectionSplitPackages_1","appname","splitManager","ConnectionSplitPackages","connectStorage","OKXCONNECTOR_CACHE_KEY_DAPP","crypto","SessionCrypto","inTMA","isInTMA","reportLog","keyPairInfo","getCachedCryptoKeyPair","clearCache","jwtKeyPair","getCachedJWTKeyPair","saveJWTKeyPair","connector","OKXCONNECTOR_WS_URL_1","packageId","connectedWalletPK","currentTopic","refreshPackageId","nowDate","saveCryptoKeyPair","keyPair","cacheInfo","encryptStoreMsg","OKXCONNECTOR_CRYPTO_KEY","kp","getAndDecrypt","content","strkeyPair","toHexString","secretKey","OKXCONNECTOR_JWT_KEY","strKeyPairInfo","hexToByteArray","generateKeyPair","isWalletPKReady","makeJWT","topic","signJWT","OKXCONNECTOR_JWT_SIDE","OKXCONNECTOR_JWT_TTL","parsePackage","input_1","input","ignoreACK","_k","_l","_m","_o","sendACK","getItem","OKXCONNECTOR_TOKEN_CACHE","inputObj","messageId","msgPlayloadObject","tryParseMessageSplitPayload","msgObject","topicId","messageObject","publishedAt","onReceivedPackageCheck","completeMessageIdList","msgId","sendReceive","restoreConnect","getConnectInfo","generateTopic","info","channelId","clientId","stringifyKeypair","fromRestore","timeLog","getTime","lastConnectId","cachedSenderPublicKey","OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE","jwtToken","timeOne","timeF","sendFetchAndConsumeMessages","init","sendRaw","timeTh","catch","jsonrpc","CONNECT_JSONRPC_VER","method","token","replace","parsedMessage","updateProtocolVersion","protocolVersion","updateTopicSenderVersion","fail","msgObj","trimStart","inputDataObj","msgResult","ttl","OKXCONNECTOR_MESSAGE_TTL","sendEncryptedMsg","topic_1","encryptedMsg_1","encryptedMsg","msg_1","encrypt","sendSplitPackages","msgId_1","success_1","reason","fetchedMessages","hasMore","receivedMsgs","timeFive","cleanCache","saveSessionContent","key","OKXCONNECTOR_SESSION_PREFIX_KEY","jsonData","getSessionContent","jsonStr","object","getCurrentConnectionReady","cryptoKeyReady","cryptoKeyPair","getCryptoKeyEnable","__importDefault","localforage_1","ConnectionSplitSupportedVersionLimit","ConnectionSplitSupportedSizeLimit","ConnectionReceiveKey","ConnectionSendKey","ConnectionTopicVersionKey","side","splitMessageSendArray","Map","splitMessageReceivedArray","splitMessageSenderVersionMap","splitPackageCache","default","createInstance","OKXCONNECTOR_STORAGE_PROTOCOL_CACHE","sendRawMsg","recoverFromCache","payloadList","entries","splice","syncCache","messageObj","protocol_version","protocolMessageObject","package_group_id","set","sendMsg","senderVersion","msgLength","msg_parts","msg_part_length","groupId","generateGroupId","splitMessagePackages","map","index","total_count","package_index","mergePackageArray","completeMap","inputTopic","itemList","item","messageCache","index_check","sort","a","b","messageList","reduce","msgList","messageIdList","msgIdList","join","receivedList","includes","isSending","inputPayloadArray","inputSendArray","filtedArray","accept","sendCacheArray","cachedPayload","sendArray","concat","inputReceiveArray","receiveCacheArray","receiveArray","setItem","rec_array","send_array","CONNECT_PROTOCOL_VER","OKXCONNECTOR_WS_URL_IDX_KEY","OKXCONNECTOR_WS_URL_3","OKXCONNECTOR_WS_URL_2","EVENT_EMITTER_MAX_LISTENERS","OKXCONNECTOR_PROTOCOL_VERSION","Engine","iconnector_1","connectionManager_1","sessionUtils_1","wallet_info_1","appName","connectors","useConnector","connectionManager","addConnectionListener","getConnector","setAccountChangeListener","accountChangeListener","registerConnector","setConnectionManager","hasWsConnector","isWsConnector","getTag","OKX_TG_WALLET","OKX_APP_WALLET","isInjectedConnector","OKX_INJECT_WALLET","universalConnect","sessionConfig","connectInfoAndUrl","JSON","stringify","universalRequest","connectInfo","requestId","openUniversalLink","openUniversalUrl","universalConnectRequest","protocolVer","Number","tonConnectSdkVersion","dAppInfo","dappInfo","requests","redirect","base64Encoded","encodeConnectParams","openOKXLink","getOKXLink","useMini","tmaReturnUrl","openMethod","openWallet","connectRequest","openOKXTMAWalletlinkWithFallback","useShortLink","openOKXUniversalLink","openOKXDeeplinkWithFallback","isIOS","isIos","addOnConnectResultListener","response","connectResponse","buildNameSpacesByConnectResponse","UNKNOWN_ERROR","walletName","responses","wallet","tag","OKXWalletName","OKXMiniWalletName","OKXInjectWalletName","find","methodsResponse","connectRequestMethods","signResponse","maxProtocolVersion","setUseConnector","sendSession","connectResultListener","setOnConnectResultListener","engineConnectInfo","requestAnswer","clearData","addDisconnectListener","disconnecter","getTagByappName","setConnectConnector","setSessionConnectingListener","sessionConnectingListener","restoreconnect","sessionInfo","onConnectResult","restoreconnectFromTopic","namespaceKeys","connectManagerDisconnect","jsonResponse","WalletConnectionManager","walletConnectionManager_1","engine_1","MULTICODEC_ED25519_LENGTH","MULTICODEC_ED25519_HEADER","MULTICODEC_ED25519_BASE","MULTICODEC_ED25519_ENCODING","DID_METHOD","DID_PREFIX","DID_DELIMITER","KEY_PAIR_SEED_LENGTH","DATA_ENCODING","JSON_ENCODING","JWT_ENCODING","JWT_DELIMITER","JWT_IRIDIUM_TYP","JWT_IRIDIUM_ALG","JWTHeaderType","decodeJSON","encodeJSON","encodeIss","decodeIss","encodeSig","decodeSig","encodeData","decodeData","encodeJWT","decodeJWT","verifyJWT","ed25519","tweetnacl_1","stringUtils_1","sign","str","okxtoString","okxfromString","val","publicKeyStr","issuer","multicodec","bytes","encoded","header","jwt","sub_1","aud_1","ttl_1","keyPair_1","sub","aud","iat","Math","floor","alg","typ","iss","exp","act","detached","verify","OKXCONNECTOR_JWT_WALLET_SIDE","buildRequestAccountNameSpacesByConnectResponse","buildAccountNameSpaces","requestAccountNameSpaces","universalResponse","filterAccount","namespace","ton_addr","tonAddress","tonProof","ton_proof","addresses","methods","addressItem","addressArr","utils_3","crypto_js_1","subKey","beforeKey","localStorage","resolveLocalStorage","storeKey","cipherIV","cacheStr","cacheKey","cache","cacheObj","checkAndUpgradeCache","fromCacheKey","toCacheKey","removeItem","timestamp","saveItem","localKey","totalCacheStr","getCachedPBKDF2InfoKey","pwLen","saltLen","pw","iv","salt","OKXCONNECTOR_STORAGER_CRYPTO_SALT","randomBytes","OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD","OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV","ivBuffer","PBKDF2","iterations","storeInfo","AES","enc","Utf8","OKXCONNECTOR_STORAGE_CIPHER_METHOD","OKXCONNECTOR_TON_KEY","WalletConnectionManagerEvent","WalletConnectionManagerTopicInfoCacheKey","RECEIVE_REQUEST","walletConnectionConstants_1","communicateEvents","sessionCryptoInfoMap","inLogin","isLogined","offset","isTopicPublicKeyExist","timestampStr","parseInternalMsg","internalMsg","internalObj","origin","originContent","base64decode","updateClientId","cid","lastCheck","getLastSixMd5Hash","dappPublicKey","syncCacheSessionInfo","_p","_q","_r","_s","ignoreReceive","isInternalData","inner_message","inner_topic","decryptWallet","sessionInfoString","base64Content","inner_connection","toObject","recovrySessionInfoFromCache","cacheMap","topicItem","cryptoItem","cacheSessionInfo","sync","duplicatedTopics","delete","appendTopic","sessionPublicKey","subscribeTopics","confirmAppendingTopics","keys","getSessionPublicKey","getCurrentCachedTopicIdList","needPublicKey","useRaw","connectedDappPK","cryptoObject","useCrypto","encryptWallet","messageStr","sendUnsubscribe","sendBatchFetchAndConsumeMessages","topicIdList","topics","withInternalData","finishCount","idx","AppwalletConnector","ws_connector_1","WsConnector","super","walletNameKey","shortUniversalLink","appConnectEncodeParams","appDeepLink","getAppWalletDeepLink","isOS","openDeeplinkWithFallback","stackDeepLink","openLinkBlank","standardUniversalLink","OkxwalletInjectConnector","TgwalletConnector","InjectConnector","appwallet_connector_1","inject_connector_1","tgwallet_connector_1","okxwallet_inject_connector_1","SolProvider_1","AptosProvider_1","media_1","TONProvider_1","inject_1","sui_provider_1","btc_provider_1","disconnectListener","providerMap","accountChangedEVMHandler","accountChangedSolanaPublicKeyHandler","accountChangedTONHandler","disconnectHandler","enable","NameSpaceKeyEip155","Eip155Provider","NameSpaceKeySOL","SolProvider","AptosProvider","NameSpaceKeyTON","TONProvider","NameSpaceKeySui","SuiProvider","NameSpaceKeyBtc","BtcProvider","getInjectProvider","nameSpace","mapKey","BAD_REQUEST_ERROR","okxwallet","requestAccounts","version","getVersion","platform","navigator","appVersion","responseItem","required","requiredNamespaces","optional","optionalNamespaces","needPop","signalChain","isDevice","singleItem","singleProvider","singleConnectResult","singleConnect","getAccountByRequestWallets","getRequestId","newRequest","onAck","checkWalletMatch","injectProvider","getNamespaceKeyByChain","USER_REJECTS_ERROR","errorResponse","CHAIN_NOT_SUPPORTED","sessionLocal","WALLET_NOT_SUPPORTED","checkAccountChanged","getRequireNameSpaceFromSession","resultNameSpace","compareAndModifyNamespaces","nameSpaces1","nameSpaces2","isAccountsSame","ns1","ns2","areAccountsSame","_","allReady","every","namespaceKey","connectReady","toJSON","namespacesKey","connectWalletNameSpace","aptosChains","chainStr","aptosChain","replaceChainNameToChainId","ton_proof_result_Item","proofItem","proof","allEqual","accountsItem","sessionAccounts","areEqual","aptosAdd","isAccountChange","walletInfo","accountResult","walletInfoItem","connectWallet","requestWallets","allNameSpace","eventkey","walletInfoFirst","hasTON","itemResult","parseConnectResponse","cheeckRequire","requireItem","resultSel","resultItem","hasChainAdd","addItem","configEventWithKey","solana","sui","okxTonWallet","tonconnect","encodeTGParams","encodeTWAConnectURLParams","tgUrl","getTelegramWalletTWAUrl","pendingRequests","getDefaultReporter","beginReport","handleResponse","bindRequestForPromise","clear","nonceLength","sessionKeyPair","createKeypairFromString","createKeypair","box","createNonce","receiverPublicKey","encodedMessage","TextEncoder","encode","encrypted","concatInfo","concatUint8Arrays","hexResult","encodedResult","base64encode","senderPublicKey","messageByteArray","toUint8Array","internalMessage","splitToUint8Arrays","decrypted","open","TextDecoder","decode","__exportStar","p","hasOKXInjectedProvider","getWindowProviderNamespace","providerSearch","property","path","_provider","BtcMethods","SuiMethods","TONMethods","AptosMethods","SOLANAMethods","Eip55Methods","InjectUtils_1","aptos","hash","METHOD_NOT_SUPPORTED","accountChange","connectRequestWalletResponse","connectChain","selectedAddress","coinType","namespaceChainId","nameSpaceResponse","bs58_1","bufferResult","injectResult","allResult","signAllTransactions","signAndSendResult","signAndSendTransaction","signalChainConnectResult","tonParams","resultMe","getChainId","tonResult","tonItem","manifestUrl","itmes","items","needProof","restoreConnection","getOKXWallet","BTC_CHAINS","MAINNET","bitcoin","FRACTAL","fractalBitcoin","findAddress","matchCoin","processChain","compressedPublicKey","promises","all","to","satBytes","psbtHexs","options","signatures","signPsbts","psbtHex","signedPsbt","signPsbt","pushPsbt","txHash","inscriptionId","sendInscription","ticker","amount","inscribeTransfer","itemNameSpace","ethParams","typedDataJson","switchChainId","parseInt","resultSwitch","chainHex","currentChain","getSuiPublicKey","suiAccount","suiPublicKey","getSuiWallet","originalRarams","injectSignResult","features","signTransactionBlock","injectSendResult","signAndExecuteTransactionBlock","digest","injectPersonalResult","signPersonalMessage","NAMES_CHAINS","TON_CHAINS","COSMOS_CHAINS","APTOS_CHAINS","SUI_CHAINS","SOLANA_CHAINS","misc_1","TESTNET","SONIC_TESTNET","COSMOS_MAINNET","NameSpaceKeyCosmos","IEngine","ISignClient","ISignClientEvents","IEngineEvents","client","creatOKXInjectWalletInfo","creatOKXMiniAppWalletInfo","creatOKXWalletInfo","getBigIntRpcId","formatJsonRpcRequest","isJsonRpcError","isJsonRpcResponse","parseConnectionError","isHttpUrl","formatJsonRpcError","json_rpc_1","isJsonRpcPayload","isJsonRpcRequest","isJsonRpcResult","payloadId","formatJsonRpcResult","isReservedErrorCode","getError","getErrorByCode","formatErrorMessage","isWsUrl","okx_connect_error_1","IncrementalRandomGenerator","bits","Uint16Array","Uint32Array","initialValue","getNextValue","uint8Generator","uint16Generator","date","BigInt","RESERVED_ERROR_CODES","STANDARD_ERROR_MAP","DEFAULT_ERROR","match","INTERNAL_ERROR","SERVER_ERROR","getUrlProtocol","matches","RegExp","matchRegexProtocol","regex","test","CONNECT_ITEM_ERROR_CODES","TONCHAIN","connect_wallet_1","connect_event_1","getTestTwaUrl","okxTesttwaUrl","getTestTgTwaUrl","okxTestTgtwaUrl","getBotNameAndAppName","urlObj","URL","pathnameParts","pathname","Boolean","botName","OKX_MINI_WALLET_NAME","OKX_APP_WALLET_NAME","tgwalletAppName","tgwalletName","standardDeeplink","downloadUrl","okxDeeplink","SERVER_ERROR_CODE_RANGE","INVALID_PARAMS","METHOD_NOT_FOUND","INVALID_REQUEST","PARSE_ERROR","getDefaultMessageByCode","setPrototypeOf","ALREADY_CONNECTED_ERROR","NOT_CONNECTED_ERROR","UNKNOWN_APP_ERROR","USER_REJECTS_ERROR_CAUSE_REGISTER","NameSpaceKeyStarknet","NameSpaceKeyTron","chains_1","callForSuccess","fn","attempts","delayMs","lastError","delay","timeout","signal","aborted","timeoutId","chainName2IdMap","replaceChainIdToChainName","checkMetaData","versionCompare","isBrowser","isMobileUserAgent","openLink","toSafeBase64FromBase64","isValidObject","getAppWalletShortDeepLink","encodeTelegramUrlParameters","isTelegramUrl","openOKXDeeplink","getUniversalLink","logWarning","call_for_success_1","web_api_1","tma_api_1","request_1","debug","forceReport","defaultReporter","OKXReporter","packageJson","okxLogDebug","sendRecordContent","warn","action","content_1","mediaNotTouch","mediaTouch","maxWidth","media","mediaMin","mediaMax","mediaMinMax","device","getWindow","isTmaPlatform","width","innerWidth","tablet","mobile","isMobile","isTelegram","TelegramWebviewProxy","maxTouchPoints","px","pxMin","pxMax","OKXReportSide","versionStr","cross_fetch_1","reportApiList","reportCacheKey","reportUUIDKey","MAX_LIMIT_REPORTCOUNT","DEFAULT_HTTP_HEADERS","Accept","DEFAULT_HTTP_METHOD","DEFAULT_FETCH_OPTS","headers","PAGE_IN","PAGE_OUT","CLICK","DAPP","WALLET","fetchListWithTimeout","urls_1","args_1","urls","controller","AbortController","fetchPromise","timeoutPromise","abort","race","ok","status","currentSide","currentVersion","storage","recordList","currentUUID","configVersionAndSide","recordCacheKey","reportPlatform","startErrorCatching","records","uuid","sendCachedRecords","cachedErrors","sendRecord","record","body","res","language","ua","userAgent","reportItem","lang","markRecordItem","sendList","allSettled","results","keepIndex","markRecord","Report_WalletType_Key","Report_Proceed_QRCode_Click","Report_ChooseType_Download_Click","Report_ChooseType_ConnectWallet_Click","Report_Proceed_Retry_Click","Report_ChooseType_ConnectWallet_View","Report_Loading_ConnectWallet_View","Report_Proceed_QRCode_View","Report_Proceed_Proceed_View","dappMetaData","icon","JSONStringify","JSONParse","json","numbersBiggerThanMaxInt","serializedData","group","parse","isCustomFormatBigInt","alloc","allocUnsafe","basics_1","string","encoding","base","BASES","decoder","encoder","createCodec","ascii","bufNum","String","fromCharCode","charCodeAt","utf8","bases","base16","latin1","binary","inTg","isInTelegramBrowser","sendExpand","sendOpenTelegramLink","initParams","locationHash","urlParseHashParams","tmaPlatform","tgWebAppPlatform","Telegram","WebApp","webAppVersion","tgWebAppVersion","platforms","isTelegramWebview","TelegramWebview","postEvent","link","fallback","pathFull","search","isIframe","versionAtLeast","path_full","parent","eventType","eventData","external","notify","trustedTarget","postMessage","indexOf","_path","urlSafeDecode","qIndex","pathParam","substr","query_params","urlParseQueryString","urlencoded","decodeURIComponent","queryString","paramName","paramValue","queryStringParams","v1","v2","p1","p2","v1List","v2List","max","ver","removeUrlLastSlash","addPathToUrl","constants_2","deeplinkUrl","useStandardUniversalLink","deeplinkEncodeUrl","encodeURIComponent","fullUrl","isInIOSLine","href","deepLinkOpened","timeoutDuration","newWindow","fallbackToDownloadPage","isInIOSLark","isInIOSWeChat","count","interval","setInterval","hidden","clearInterval","parameters","encodedParameters","connectRequestWithVersion","connectRequestStr","utf8Array","btoa","connectParam","redirectStr","okxconnect","extraparams","fromtg","base64ContentStr","urlSafeBase64","twaDeepLink","openTelegramLink","RANDOM_LENGTH","hasLocalStorage","hashKey","generateRandomBytes32","tweetnacl_util_1","to_string_1","sha256_1","BASE16","hexString","byteArray","byte","buffer1","buffer2","mergedArray","subArray1","subArray2","encodeUint8Array","urlSafe","encodeBase64","decodeToUint8Array","decodeBase64","uint8Array","decodeUTF8","decodedUint8Array","encodeUTF8","scheme","global","self","randomBytes32","obj","getPrototypeOf","inLine","isIOSDevice","MSStream","isIPadOS","MD5","base64","getUserAgent","ua_parser_js_1","target","doFallback","fallbackTimeout","check","vendor","opera","getResult","osName","os","toLowerCase","deviceModel","model","browserName","browser","OKXSolanaProvider","web3_js_1","defaultChainMap","has","caip","realMessage","Transaction","VersionedTransaction","deserialize","pubkey","PublicKey","serializedMessage","serialize","requireAllSignatures","verifySignatures","getSignedTransaction","transactions","newTransactions","s","c","transactionStr","resultTx","OKXSolanaProvider_1","OKXBtcProvider","_1","getAddressForChainId","ns","checkChainId","ret","errorData","sendBitcoin","toAddress","satoshis","feeRate","txhash","checkParameters","psbtResults","signAndPushPsbt","extension","coinId","protocolId","atomicSuffix","ordinalsSuffix","endsWith","removeSuffix","scenario","txType","batchBean","coinAmount","nftId","sendRunes","runeid","fromAddress","suffix","unexistKeys","OKXCosmosProvider","algo","bech32Address","pubKey","hexToUint8Array","signArbitrary","signerAddress","signDoc","chain_id","account_number","sequence","fee","gas","msgs","memo","signData","signAmino","signOptions","resData","signed","signDirect","bodyBytes","authInfoBytes","accountNumber","messageToBuffer","arr","output","x","padStart","arrayBuffer","byteValue","isNaN","OKXStarknetProvider","STARKNET_CHAIN_ID","getChain","typedData","sendTransaction","transactionData","transaction_hash","signMessageDeclareContractPayload","sendMessageExecuteTransactionDetail","calls","abis","transactionsDetail","executionRequest","OKXTonProvider","statusChangeSubscriptions","statusChangeErrorSubscriptions","tonWallet","errorsHandler","connected","tonNameSpace","walletStateInit","sessionWallet","tonDeviceInfo","connectItems","onStatusChange","requestAccountsWithNamespace","requestParams","OKXTronProvider","TRON_CHAIN_ID","stringToHex","signMessageV2","signedTx","realSignTx","visible","txID","rawData","contract","raw_data","expiration","ref_block_bytes","fee_limit","ref_block_hash","raw_data_hex","OKXUniversalProvider","eip155_1","sui_1","client_1","core_2","namespaces_1","solana_1","btc_1","aptos_1","ton_1","cosmos_1","tron_1","packages_1","provider_1","starknet_1","opts","setGlobal","okxConnectUniversalinwindow","initialize","providerOpts","rpcProviders","requestParam","buildRequestParamFromRequest","getProvider","validateChain","keyArr","connectOpts","called","onRequestSent","disconnectAndEmit","cleanup","engine","replaceNamespace","aptosNameSpace","realNS","replaceNamespaceInner","optionAptosNameSpace","realOptionNS","defaultChain","replaceSessionAptos","disconnectInner","connectAndSign","signRequest","updatedOpts","setNamespaces","onConnect","requestItem","signResponseList","okxConnectUniversalUIinwindow","creatNotSupportMethodItemReplay","syncAllAddresses","syncAddressAvailable","syncAllAddress","setDefaultChain","rpcUrl","checkStorage","sessionInfoStr","getFromStore","createProviders","registerEventListeners","SignClient","providersToCreate","parseNamespaceKey","namespacesValue","currentNameSpace","opts1","solanaProvider","sonicProvider","svmProvider","soonProvider","eclipseProvider","optsTon","tonProvider","optsSui","suiProvider","optsBtc","btcProvider","fbProvider","aptosProvider","moveProvider","cosmosProvider","tronProvider","starknetProvider","PROVIDER_EVENTS","DEFAULT_CHAIN_CHANGED","caip2ChainId","onChainChanged","UPDATE_NAMESPACES","nameSpaces","nameSpacekey","persist","isChainNamespaceInSession","chainsArr","defaultNamespace","getDefaultChain","namespaceStr","caip2Chain","sessionProperties","showRequestModal","listenerCount","OKXUniversalProvider_1","OKXBtcProvider_1","OKXCosmosProvider_1","OKXTonProvider_1","OKXTronProvider_1","OKXStarknetProvider_1","ConnectMethodUtils_1","metaData","requestAccountItem","nameSpaceToConnectWalletNameSpace","SESSION_CONNECTING","connectMethodsToConnectWalletMethods","metadata","fillParamsToSession","connectMethodsResponseUpdate","openOKXWallet","allAddressStr","syncResoonseToRequire","connectSupportMethods","connectMethodsAdaptOldVersion","isRecord","notSupportError","errorItem","callBackParams","solAccount","account1","solAddress","fromAccountToAddress","encodeMessage","suiMessage","convertedArray","b64encoded","atob","btcAccounts","account2","btcAccount","btcAddress","paramData","aptosAccount","account3","aptosAddress","aptosChainId","cosmosAccount","account_cosmos","cosmosAddress","cosmosData","cosmosBase64Encoded","methodItem","solanaSuccessData","suiMethod","requestMethod","suiMessageb64","aptosSignature","requireNameSpace","includeEip155","some","space","syncAddressHostAvailable","includeChain","paramsArr","firstParam","firstObj","aptosParams","currentURL","signChainId","applicationUrl","cosmosChain","responseAddressStr","allAddress","isEvm","deriveName","addr","ci","evmAddress","freeze","getAccountsChains","isCaipNamespace","mergeRpcMap","targetRpcMap","sourceRpcMap","mergeNamespaces","source","rpcMap","fixMobileBtcSession","btcNameSpace","addressType","GENERIC_SUBPROVIDER_NAME","RPC_URL","STORAGE","CONTEXT","WC_VERSION","PROTOCOL","RELAY_URL","LOGGER","JsonRpcConnection_1","JsonRpcProvider_1","httpProviders","createHttpProviders","updateNamespace","getAccounts","setHttpProvider","http","parsedChainId","parsedRpc","getRpcUrl","httpProvider","createHttpProvider","getHttpProvider","rpc","JsonRpcProvider","JsonRpcConnection","getGlobal","CosmosProvider","updateRequestParams","isDic","decimalNumber","selectedChainId","chainNum","paramsChainId","paramsChainString","adaptArray","addressObj","isEqual","chainAddress","messages","secondObj","hexChainId","getHexChainIdFromRequest","isChainApproved","configAddressAdaptInjectWallet","handleSwitchChain","addEthereumChain","resultData","rpcUrls","eip155","disableProviderPing","isAvailable","registering","register","parseError","types_1","IJSONRpcProvider","connection","hasRegisteredEventListeners","setConnection","context","requestStrict","_error","SolanaProvider","getPubkey","getWalletAddress","components","StarknetProvider","__rest","getOwnPropertySymbols","propertyIsEnumerable","validUntil","newParams","boc","TronProvider","IJSONRpcConnection","opt","globals","convertChainIdToNumber","parseChainId","mergeArrays","projectId","reference","CAIP_DELIMITER","okxGlobal","_createElementBlock","_hoisted_1","_createVNode","_component_el_container","_withCtx","_component_el_header","_cache","_createTextVNode","_component_el_main","_component_el_card","class","_createElementVNode","style","_component_el_row","_component_el_col","span","_toDisplayString","$options","_ctx","_component_el_checkbox","modelValue","withUI","$event","onChange","handleWithUI","universalToTG","handleUniversalToTG","_component_el_select","modals","placeholder","handleModalsSelect","multiple","_component_el_option","label","returnStrategy","handleReturnStrategySelect","_Fragment","_renderList","returnStrategies","strategy","_createBlock","_component_el_input","deeplink","handleReturnStrategyDeeplink","disabled","_createCommentVNode","handleLanguageSelect","locales","locale","theme","handleThemeSelect","THEME","LIGHT","DARK","selectedMethod","handleConnectMethodsSelect","connectMethods","tonProofValue","gutter","align","availableChains","checked","areChainsInit","isOptionalChecked","handleOptionChange","_component_el_button","onClick","initBtnClicked","connectInitStr","testTonConnect","connectTonStr","connectBtnClicked","connectStatusStr","syncAllAddressClick","syncAllAddressStr","disconnectAction","walletAddress","disconnectStatusStr","_Teleport","showModal","closeModal","_withModifiers","_component_qrcode_vue","qrValue","level","_component_el_tabs","activeTab","onTabClick","clickActiveTab","_component_el_tab_pane","eth_requestAccounts","eth_chainId","wallet_switchEthereumChain","wallet_addEthereumChain","personal_sign","eth_signTypedData_v4","eth_sendTransaction_transfer","eth_sendTransaction_approve","eth_sendTransaction_mint","wallet_watchAsset","oversized_personal_sign","ton_getAccount","ton_sendTransaction","sol_signMessage","sol_signTransaction","sol_signVersionedTransaction","sol_signAllTransactions","sol_signAllVersionedTransactions","sol_signAndSendTransaction","sol_signAndSendVersionedTransaction","_component_SuiPanel","onGenerateTransactionParams","sui_generateTransactionParams","_component_BTCPanel","btc_generateTransactionParams","_component_FractalPanel","fractal_generateTransactionParams","_component_TronTransactionPanel","tron_generateTransactionParams","onGenerateTransactionResult","tron_getTransactionResult","aptos_signMessage","aptos_signTransaction","aptos_signAndSubmitTransaction","cosmos_signArbitrary","cosmos_signAmino","cosmos_signDirect","Polygon_RPCRequest","eth_sendTransaction_swap","move_signTransaction","move_signAndSubmitTransaction","_component_StarknetPanel","ref","starknet_generateTransactionParams","starknet_getTransactionResult","testBase64UrlSafe","xs","sm","handleRedirectSelect","canChainAddRedirectParam","redirectDeeplink","handleRedirectDeeplink","addRedirectParam","testTransaction","rows","testboc","$setup","sendBtnDisabled","testTransactionStr","btc_getAccount","btc_signMessage","sendAmount","clearable","btc_send","sendSatoshisAmount","btc_sendBitcoin","btc_signPsbt_up","btc_signAndPushPsbt_up","receiver","btc_sendInscription","runsAddress","runsId","runsAmount","btc_sendRunes","intTicker","intAmount","btc_inscribeTransfer","props","setup","$emit","alert","autoFinalized","__exports__","fractal_getAccount","fractal_signMessage","fractal_send","fractal_sendBitcoin","fractal_signPsbt_up","fractal_signAndPushPsbt_up","fractal_sendInscription","fractal_sendRunes","fractal_inscribeTransfer","sui_getAccount","sui_signMessage","sui_signPersonalMessage","sui_signTransaction2","sui_signAndExecuteTransaction","sui_requestRpc","sui_signTransaction_pre_execution","sui_signAndExecuteTransaction_pre_execution","recipientAddress","SuiTransaction","coin","splitCoins","transferObjects","transactionBlock","showEffects","txBytes","txSerialize","generateTsBytesAndSerizlize","resultTuple","senderAccounts","getFullnodeUrl","suiClient","SuiClient","setSender","build","currentSuiTransaction","currentSuiMethod","starknet_signMessage","starknet_sendTransaction","getCurrentAddress","rpcProvider","RpcProvider","nodeUrl","pk","Account","that","verifyMessage","isValid","uint256","bnToUint256","transferCalldata","CallData","compile","DAITokenAddress","invokeParams","contract_address","entry_point","calldata","getPublicKey","tron_signMessage","tron_signMessageV2","tron_signTransaction","tron_signAndSendTransactionContract","tron_signAndSendTransactionApprove","tronWeb","TronWeb","trx","base58Address","verifyMessageV2","isOnlySign","transactionBuilder","sendTrx","getContract","contractAddress","abi","entrys","parameter","triggerSmartContract","verifyADR36Amino","fromBech32","VConsole","allChains","chainsThatCanAddRedirectParam","optionChains","selectedModals","selectedReturnStrategy","selectedDeepLink","selectedLanguage","selectedTheme","TronTransactionPanel","QrcodeVue","BTCPanel","FractalPanel","SuiPanel","StarknetPanel","testTopic","testPublicKey","testProofPayload","pendingDeepLink","logList","localPubKey","localSecKey","selectedChain","ProofPayloadVerify","showVerifyRow","selectedMethodData","isChecked","reload","starknetPanelTypedData","computed","selectedChains","initChains","newChains","updatedChains","tab","tabName","testTon","openModal","initCall","OKXTonConnectUI","actionsConfiguration","uiPreferences","OKXUniversalConnectUI","onModalStateChange","uri","isPC","testTonSdk","blockExplorerUrls","chainName","nativeCurrency","symbol","decimals","requestEVMAccountWithSession","evmNameSpace","dataETH","dataPolygon","types","EIP712Domain","Person","Mail","primaryType","domain","verifyingContract","contents","maxPriorityFeePerGas","maxFeePerGas","gasPrice","gasLimit","image","tonUniversalLog","sendTransactionAlert","fetch","confirm","sendData","adapter","SuiAdapter","suiResult","signAndExecuteTransaction","sui_verifySignature","btcAdapter","btcResult","currentBtcMethod","currentBtcTransaction","hexToBase64","bs64Str","fractalResult","currentFractalMethod","currentFractalTransaction","hexStr","blob","Blob","reader","FileReader","onload","base64Data","readAsDataURL","datatest","firstStr","showUrl","hasEip155","hasSolana","hasSui","hasBtc","hasAptos","hasTon","hasCosmos","hasTron","hasStarknet","nameSpacesChains","optSpaceChains","solanaChains","hasPolygon","suiChains","btcChains","connectMethod","connectData","requireData","cosmos","tron","starknet","ton","btc","optData","eip155Chains","tonChains","signMethods","getCurrentSelectedMethodData","openModalAndSign","methodList","suiData","currentMethod","accountAddress","userAgentInfo","Agents","flag","isSafariOrChrome","uint8Array1","result1","nacl","toBytes","config","AptosConfig","Network","Aptos","simple","sender","functionArguments","Connection","getSolConnect","blockhash","getLatestBlockhash","versionedTransactionMessage","TransactionMessage","payerKey","recentBlockhash","instructions","SystemProgram","transfer","fromPubkey","toPubkey","lamports","compileToV0Message","feePayer","cosmos_verifySignArbitrary","pub_key","signer","prefixStr","signatureBuffer","uint8Signature","pubKeyValueBuffer","pubKeyUint8Array","uiOptions","eth_verifyMessage","ethAddress","originalMessage","recoveredAddress","ethers","list","verifyList","requestItme","ethMessage","solanaMessage","verifySol","aptosMessage","aptosPublicKey","cosmosMessage","tronMessage","StarknetRpcProvider","StarknetAccount","signatureResult","resultObj","verifyPersonalMessageSignature","toSuiAddress","toBase64","newTransaction","created","mounted","scriptTag","createElement","src","getElementsByTagName","appendChild","title","$refs","starknetPanelRef","toRaw","render","app","createApp","App","use","ElementPlus","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","loaded","__webpack_modules__","amdO","deferred","O","chunkIds","priority","notFulfilled","Infinity","getter","d","leafPrototypes","getProto","__proto__","mode","def","current","getOwnPropertyNames","definition","g","globalThis","Function","prop","Symbol","toStringTag","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}