{"version":3,"file":"js/app.f674c31b.js","mappings":"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","sources":["webpack://okxconnectdemo/../packages/core/src/connect/commands.js","webpack://okxconnectdemo/../packages/core/src/connect/connect.js","webpack://okxconnectdemo/../packages/core/src/connect/connectionManager.js","webpack://okxconnectdemo/../packages/core/src/connect/constants.js","webpack://okxconnectdemo/../packages/core/src/connect/engine.js","webpack://okxconnectdemo/../packages/core/src/connect/index.js","webpack://okxconnectdemo/../packages/core/src/connect/jwt.js","webpack://okxconnectdemo/../packages/core/src/connect/jwtconstants.js","webpack://okxconnectdemo/../packages/core/src/connect/sessionUtils.js","webpack://okxconnectdemo/../packages/core/src/connect/storage.js","webpack://okxconnectdemo/../packages/core/src/connect/storageconstants.js","webpack://okxconnectdemo/../packages/core/src/connect/walletConnectionConstants.js","webpack://okxconnectdemo/../packages/core/src/connect/walletConnectionManager.js","webpack://okxconnectdemo/../packages/core/src/connector/appwallet-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/iconnector.js","webpack://okxconnectdemo/../packages/core/src/connector/index.js","webpack://okxconnectdemo/../packages/core/src/connector/inject-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/okxwallet-inject-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/tgwallet-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/ws-connector.js","webpack://okxconnectdemo/../packages/core/src/crypto/crypto.js","webpack://okxconnectdemo/../packages/core/src/index.js","webpack://okxconnectdemo/../packages/core/src/inject/InjectUtils.js","webpack://okxconnectdemo/../packages/core/src/inject/index.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/AptosProvider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/SolProvider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/TONProvider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/eip155Provider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/index.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/sui-provider.js","webpack://okxconnectdemo/../packages/core/src/protocol/chains.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/engine.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/json-rpc.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/connect-event.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/connect-wallet.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/wallet-info.js","webpack://okxconnectdemo/../packages/core/src/protocol/constants.js","webpack://okxconnectdemo/../packages/core/src/protocol/error/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/error/okx-connect.error.js","webpack://okxconnectdemo/../packages/core/src/protocol/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/misc.js","webpack://okxconnectdemo/../packages/core/src/utils/call-for-success.js","webpack://okxconnectdemo/../packages/core/src/utils/index.js","webpack://okxconnectdemo/../packages/core/src/utils/log.js","webpack://okxconnectdemo/../packages/core/src/utils/media.js","webpack://okxconnectdemo/../packages/core/src/utils/report.js","webpack://okxconnectdemo/../packages/core/src/utils/reportconstants.js","webpack://okxconnectdemo/../packages/core/src/utils/request.js","webpack://okxconnectdemo/../packages/core/src/utils/safejson.js","webpack://okxconnectdemo/../packages/core/src/utils/stringUtils.js","webpack://okxconnectdemo/../packages/core/src/utils/tma-api.js","webpack://okxconnectdemo/../packages/core/src/utils/url.js","webpack://okxconnectdemo/../packages/core/src/utils/utils.js","webpack://okxconnectdemo/../packages/core/src/utils/web-api.js","webpack://okxconnectdemo/../packages/sui-provider/src/OKXSuiProvider.js","webpack://okxconnectdemo/../packages/sui-provider/src/index.js","webpack://okxconnectdemo/./src/App.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue?1b44","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue?e4fb","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue?aa83","webpack://okxconnectdemo/./src/components/StarknetTransactionPanel.vue","webpack://okxconnectdemo/./src/components/StarknetTransactionPanel.vue?1a06","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue?089a","webpack://okxconnectdemo/./src/App.vue?7ccd","webpack://okxconnectdemo/./src/main.js","webpack://okxconnectdemo/webpack/bootstrap","webpack://okxconnectdemo/webpack/runtime/amd options","webpack://okxconnectdemo/webpack/runtime/chunk loaded","webpack://okxconnectdemo/webpack/runtime/compat get default export","webpack://okxconnectdemo/webpack/runtime/create fake namespace object","webpack://okxconnectdemo/webpack/runtime/define property getters","webpack://okxconnectdemo/webpack/runtime/global","webpack://okxconnectdemo/webpack/runtime/hasOwnProperty shorthand","webpack://okxconnectdemo/webpack/runtime/make namespace object","webpack://okxconnectdemo/webpack/runtime/node module decorator","webpack://okxconnectdemo/webpack/runtime/jsonp chunk loading","webpack://okxconnectdemo/webpack/startup"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_METHOD_BATCH_FETCHMSG = exports.CONNECT_METHOD_FETCHMSG = exports.CONNECT_METHOD_RECEIVE = exports.CONNECT_METHOD_UNSUB = exports.CONNECT_METHOD_SUB = exports.CONNECT_METHOD_PUBLISH = exports.CONNECT_METHOD_LOGIN = exports.CONNECT_METHOD_PUSH = void 0;\n// --------------- ws methods -------------\nexports.CONNECT_METHOD_PUSH = \"push\";\nexports.CONNECT_METHOD_LOGIN = \"login\";\nexports.CONNECT_METHOD_PUBLISH = \"publish\";\nexports.CONNECT_METHOD_SUB = \"subscribe\";\nexports.CONNECT_METHOD_UNSUB = \"unsubscribe\";\nexports.CONNECT_METHOD_RECEIVE = \"receive\";\nexports.CONNECT_METHOD_FETCHMSG = \"fetchMessages\";\nexports.CONNECT_METHOD_BATCH_FETCHMSG = \"batchFetchMessages\";\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXWalletConnector = void 0;\nconst constants_1 = require(\"./constants\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils\");\nconst utils_2 = require(\"../utils/utils\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst log = __importStar(require(\"../utils/log\"));\nconst protocol_1 = require(\"../protocol\");\nconst report_1 = require(\"../utils/report\");\nconst WS = (0, utils_2.resolveWebSocketImplementation)();\nclass OKXWalletConnector {\n    constructor(url) {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.state = constants_1.ConnectorState.InitState;\n        this.selectedUrlIndex = 0;\n        // reconnect\n        this.retryCount = 0;\n        // default timeout limit: 8 sec\n        this.timeOutLimit = 8000;\n        if (!(0, utils_2.checkWSUrl)(url)) {\n            throw new Error(`CONNECTOR: invalid url ${url}`);\n        }\n        this.url = url;\n        this.heartbeatTimer = null;\n        this.connectionTimeoutTimer = null;\n        this.connectURLStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY + storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n    }\n    get connecting() {\n        return this.state == constants_1.ConnectorState.Connecting;\n    }\n    // ------------------------------------------------------\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        log.logDebug('get received data');\n        log.logDebug(e);\n        if (typeof e.data === \"string\") {\n            let rsp = e.data;\n            if (rsp === \"pong\") {\n                log.logDebug(`CONNECT: receive pong ${Date.now().toString()}`);\n                return;\n            }\n        }\n        this.events.emit(\"payload\", e.data);\n    }\n    onClose(event) {\n        var _a;\n        log.logDebug('socket get closed: ', (_a = this.socket) === null || _a === void 0 ? void 0 : _a.url, event.code);\n        this.socket = undefined;\n        this.events.emit(\"close\", event);\n    }\n    onError(id, e) {\n        const payload = { id: id, msg: e.toString() };\n        this.events.emit(\"payload\", payload);\n    }\n    onopen(socket) {\n        socket.onmessage = (event) => this.onPayload(event);\n        socket.onclose = (event) => this.onClose(event);\n        this.socket = socket;\n        this.state = constants_1.ConnectorState.Connected;\n        this.events.emit(\"open\");\n    }\n    // ------------------------------------------------------\n    emitError(errorEvent) {\n        this.events.emit(\"fail\", errorEvent);\n    }\n    // ------------------------------------------------------\n    heartbeat() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.heartbeatTimer) {\n                clearTimeout(this.heartbeatTimer);\n            }\n            if (this.state != constants_1.ConnectorState.Connected && this.state != constants_1.ConnectorState.OnError) {\n                log.logDebug('heart beat close');\n                return;\n            }\n            if (!this.socket) {\n                log.logDebug('socket not exist');\n                if (this.state == constants_1.ConnectorState.Connected || this.state == constants_1.ConnectorState.OnError) {\n                    log.logDebug('socket reconnect by heartbeat');\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                        this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n                    }\n                }\n                return;\n            }\n            if (this.socket.readyState !== WebSocket.OPEN) {\n                log.logDebug('socket not ready');\n                if (this.state == constants_1.ConnectorState.Connected || this.state == constants_1.ConnectorState.OnError) {\n                    log.logDebug('socket reconnect by heartbeat with state', this.state, this.socket.readyState);\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                        this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n                    }\n                }\n                return;\n            }\n            log.logDebug(`send ping heart beat: ${Date.now().toString()}, ${this.socket}`);\n            this.socket.send(\"ping\");\n            this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n        });\n    }\n    registOpen(url = this.url, inRetry = false) {\n        if (!(0, utils_2.checkWSUrl)(url)) {\n            throw new Error(`CONNECTOR: invalid url ${url}`);\n        }\n        this.url = url;\n        if (!inRetry) {\n            log.logDebug('Connection connect:', this.url, new Date().toUTCString());\n        }\n        this.state = constants_1.ConnectorState.Connecting;\n        const origin = new URLSearchParams(url).get(\"origin\");\n        return new Promise((resolve, reject) => {\n            const socket = new WS(url, []);\n            log.logDebug('Connection connect Begin:', this.url, new Date().toUTCString());\n            this.startTimeOutTimer(socket);\n            if ((0, utils_2.hasBuiltInWebSocket)()) {\n                log.logDebug('Add socket error handler');\n                socket.onerror = () => {\n                    reject(new Error('socket error'));\n                    socket.close();\n                };\n            }\n            else {\n                log.logDebug('Add socket error handler');\n                socket.on(\"error\", () => {\n                    reject(new Error('socket error'));\n                    socket.close();\n                });\n            }\n            socket.onopen = () => {\n                log.logDebug('socket opened');\n                this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.FINISHED);\n                this.onopen(socket);\n                this.heartbeat();\n                resolve(socket);\n            };\n        });\n    }\n    checkMaxRetry() {\n        log.logDebug('current retry count:', this.retryCount, 'of', constants_1.OKXCONNECTOR_WS_URL_LIST.length);\n        return this.retryCount > (constants_1.OKXCONNECTOR_WS_URL_LIST.length * 3);\n    }\n    connectionTryNext() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.checkMaxRetry()) {\n                //TODO: mark descent\n                this.retryCount += 1;\n                let nextUrl = this.getNextSelectUrl();\n                log.logDebug('Connection retry:', nextUrl, new Date().toUTCString());\n                return this.registOpen(nextUrl, true);\n            }\n            else {\n                log.logDebug('Max Connection retry ', this.retryCount, new Date().toUTCString());\n            }\n        });\n    }\n    startTimeOutTimer(socket) {\n        if (this.connectionTimeoutTimer) {\n            this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.CANCELED);\n        }\n        this.pendingSocket = socket;\n        this.connectionTimeoutTimer = setTimeout(() => {\n            if (this.pendingSocket) {\n                this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.TIME_OUT);\n            }\n        }, this.timeOutLimit);\n    }\n    resetTimeOutTimer(code) {\n        var _a;\n        // 1. cancel connecting pending sockets\n        if (code == constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.TIME_OUT) {\n            // 2. remove timer\n            clearTimeout(this.connectionTimeoutTimer);\n            (_a = this.pendingSocket) === null || _a === void 0 ? void 0 : _a.close();\n            this.pendingSocket = undefined;\n            log.reportEvent(report_1.OKXReportType.LOG, 'timeout', this.retryCount.toString());\n            throw new Error('socket timeout');\n        }\n        else {\n            this.pendingSocket = undefined;\n            // 2. remove timer\n            clearTimeout(this.connectionTimeoutTimer);\n        }\n    }\n    cacheSuccessUrlSelect() {\n        this.connectURLStorage.saveContent(this.selectedUrlIndex.toString(), storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n    }\n    // private getSuccessUrlSelect(): string {\n    //     let selectIndex = this.connectURLStorage.getItem(OKXCONNECTOR_CACHE_KEY)?.content\n    //     let index = 0\n    //     if (selectIndex) {\n    //         index = Number(selectIndex)\n    //     }\n    //     this.selectedUrlIndex = index\n    //     return OKXCONNECTOR_WS_URL_LIST[index]\n    // }\n    getNextSelectUrl() {\n        this.selectedUrlIndex += 1;\n        this.selectedUrlIndex = this.selectedUrlIndex % constants_1.OKXCONNECTOR_WS_URL_LIST.length;\n        return constants_1.OKXCONNECTOR_WS_URL_LIST[this.selectedUrlIndex];\n    }\n    // ------------------------------------------------------\n    onVisibleChanged() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (document.visibilityState === 'visible') {\n                // check and restore\n                log.logDebug(`get changed ${this.state}, ${this.socket}`);\n                if (this.state == constants_1.ConnectorState.Connected && typeof this.socket === \"undefined\") {\n                    log.logDebug('CONNECTION need reopen');\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                    }\n                    return;\n                }\n            }\n        });\n    }\n    tryRegistOpen() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (this.connecting) {\n                log.logDebug('tryRegistOpen => connecting state');\n                return new Promise((resolve, reject) => {\n                    this.events.once('fail', (e) => {\n                        log.logDebug('tryRegistOpen => connecting fail listener', e);\n                        return reject(e);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.socket == \"undefined\") {\n                            return reject(new Error(\"Connect lost\"));\n                        }\n                        return resolve(this.socket);\n                    });\n                });\n            }\n            log.logDebug('tryRegistOpen => try registOpen until retry limit is hit');\n            let inRetry = false;\n            while (!this.checkMaxRetry() && !this.socket) {\n                try {\n                    log.logDebug('tryRegistOpen => call registOpen, try count:', this.retryCount, inRetry);\n                    yield this.registOpen(url, inRetry);\n                }\n                catch (err) {\n                    log.logDebug('tryRegistOpen => registOpen failed', err);\n                    this.retryCount += 1;\n                    url = this.getNextSelectUrl();\n                    inRetry = true;\n                }\n            }\n            log.logDebug('tryRegistOpen => exit while loop', this.retryCount, this.socket);\n            if (!this.socket && this.checkMaxRetry()) {\n                log.logDebug('tryRegistOpen => failed to open a socket', this.retryCount, this.socket);\n                this.retryCount = 0;\n                this.state = constants_1.ConnectorState.OnError;\n                this.emitError(new Error('tryRegistOpen failed'));\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CONNECTION_ERROR, \"Failed to connect\");\n            }\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.tryRegistOpen();\n                // listener for reconnect\n                document.removeEventListener('visibilitychange', this.onVisibleChanged.bind(this));\n                document.addEventListener('visibilitychange', this.onVisibleChanged.bind(this));\n            }\n            catch (e) {\n                log.logDebug('connect => failed to connect', e);\n                throw e;\n            }\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.state = constants_1.ConnectorState.Disconnected;\n            return new Promise((resolve, reject) => {\n                if (typeof this.socket === \"undefined\") {\n                    // reject(new Error(\"CONNECTION closed\"))\n                    resolve();\n                    return;\n                }\n                this.socket.onclose = (event) => {\n                    this.onClose(event);\n                    resolve();\n                };\n                this.socket.close();\n                if (this.heartbeatTimer) {\n                    clearTimeout(this.heartbeatTimer);\n                }\n            });\n        });\n    }\n    currentStatus() {\n        return {\n            state: this.state,\n            url: this.url\n        };\n    }\n    // event will be jsonstr\n    /// @params Promise\n    /// @params success/failed callback\n    addListener(event, decrypt, success, failed) {\n        if (this.listenPayloadHandler) {\n            this.events.removeListener(\"payload\", this.listenPayloadHandler);\n        }\n        this.listenPayloadHandler = (e) => {\n            var _a;\n            log.logDebug(`<<< get payload ${e}`);\n            let parsedEvent = (0, utils_1.safeJsonParse)(e);\n            // parse the data to chose success or failed\n            if (parsedEvent.params && parsedEvent.params.data) {\n                let rawMsg = (_a = parsedEvent.params.data) === null || _a === void 0 ? void 0 : _a.message;\n                if (rawMsg) {\n                    try {\n                        let msg = decrypt(rawMsg);\n                        if (msg === undefined) {\n                            log.logDebug(`CONNECT: decrypt undefined`);\n                            failed(event, 'Decrypt undefined');\n                        }\n                        else {\n                            success(event, msg);\n                        }\n                    }\n                    catch (e) {\n                        log.logDebug(`CONNECT: decrypt failed: ${e}`);\n                        failed(event, e.message);\n                    }\n                }\n            }\n        };\n        this.events.on(\"payload\", this.listenPayloadHandler);\n        if (this.failHandler) {\n            this.events.removeListener(\"fail\", this.failHandler);\n        }\n        this.failHandler = (e) => {\n            if (e) {\n                log.logDebug(`CONNECT failed: ${e}`);\n                failed(event, e.message);\n            }\n            else {\n                failed(event, \"Unkonow error\");\n            }\n        };\n        this.events.on(\"fail\", this.failHandler);\n    }\n    addPackageParse(callback) {\n        if (this.payloadHandler) {\n            this.events.removeListener(\"payload\", this.payloadHandler);\n        }\n        this.payloadHandler = (e) => __awaiter(this, void 0, void 0, function* () {\n            // parse the data to chose success or failed\n            log.logDebug(`CONNECTION @[${new Date().toUTCString()}] <<<< received e:${e}`);\n            let param = (0, utils_1.safeJsonParse)(e);\n            yield callback(param);\n        });\n        this.events.on(\"payload\", this.payloadHandler);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    send(doLogin, payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (typeof this.socket === \"undefined\") {\n                    log.logDebug(`>>> send payload undefined ${payload}`);\n                    // this.socket = await this.registOpen();\n                    yield doLogin();\n                }\n                log.logDebug(`CONNECTION @[${new Date().toUTCString()}]>>> send payload ${(0, utils_1.safeJsonStringify)(payload)}`);\n                if (this.socket) {\n                    this.socket.send((0, utils_1.safeJsonStringify)(payload));\n                }\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    getMsgPayloadFromHistory(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof msg === \"undefined\")\n                return;\n            let tmpMsg = {\n                params: {\n                    data: msg\n                }\n            };\n            let jsonstr = (0, utils_1.safeJsonStringify)(msg);\n            log.logDebug('get received data from history');\n            log.logDebug(jsonstr);\n            jsonstr = (0, utils_1.safeJsonStringify)(tmpMsg);\n            this.events.emit(\"payload\", jsonstr);\n        });\n    }\n    onOpen(callback) {\n        if (this.openHandler) {\n            this.events.removeListener(\"open\", this.openHandler);\n        }\n        this.openHandler = () => __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> ws opened: `);\n            yield callback();\n        });\n        this.events.on(\"open\", this.openHandler);\n        this.cacheSuccessUrlSelect();\n    }\n}\nexports.OKXWalletConnector = OKXWalletConnector;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionManager = void 0;\nconst connect_1 = require(\"./connect\");\nconst commands_1 = require(\"./commands\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst jwtconstants_1 = require(\"./jwtconstants\");\nconst constants_1 = require(\"./constants\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils/utils\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst jwt_1 = require(\"./jwt\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst report_1 = require(\"../utils/report\");\nconst url_1 = require(\"../utils/url\");\nclass ConnectionManager {\n    constructor(appname = undefined) {\n        this.events = new eventemitter3_1.EventEmitter();\n        // local storage\n        this.connectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY_DAPP + appname, storageconstants_1.OKXCONNECTOR_CACHE_KEY_DAPP);\n        this.crypto = new crypto_1.SessionCrypto();\n        let inTMA = (0, url_1.isInTMA)();\n        (0, log_1.logDebug)('do init:', inTMA);\n        log.reportLog('connection manager do init');\n        if (inTMA) {\n            // recovery from cache\n            const keyPairInfo = this.getCachedCryptoKeyPair();\n            (0, log_1.logDebug)('use same pk:', keyPairInfo);\n            this.crypto = new crypto_1.SessionCrypto(keyPairInfo);\n        }\n        this.jwtKeyPair = this.getCachedJWTKeyPair();\n        this.saveJWTKeyPair(this.jwtKeyPair);\n        // wss connection\n        this.connector = new connect_1.OKXWalletConnector(constants_1.OKXCONNECTOR_WS_URL_1);\n        this.packageId = Date.now();\n        // connection state\n        this.connectedWalletPK = '';\n        this.currentTopic = '';\n        log.logDebug(`this.connectedWalletPK  constructor   ${this.connectedWalletPK}`);\n    }\n    refreshPackageId() {\n        this.packageId = Date.now();\n    }\n    saveCryptoKeyPair(keyPair) {\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(keyPair);\n        // encrypt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_CRYPTO_KEY);\n    }\n    getCachedCryptoKeyPair() {\n        // decrypt kp\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_CRYPTO_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            log.logDebug('get cached crypto key:');\n            log.logDebug(content);\n            let keyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            return keyPairInfo;\n        }\n        else {\n            this.connectStorage.clearCache();\n        }\n        return null;\n    }\n    saveJWTKeyPair(keyPair) {\n        var strkeyPair = {\n            publicKey: (0, utils_1.toHexString)(keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(keyPair.secretKey)\n        };\n        log.logDebug('save jwt kp');\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(strkeyPair);\n        log.logDebug(cacheInfo);\n        // encrypt jwt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_JWT_KEY);\n    }\n    getCachedJWTKeyPair() {\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            // TODO: decrypt jwt kp\n            log.logDebug('get cached jwt kp:');\n            log.logDebug(content);\n            let strKeyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            log.logDebug('save jwt kp');\n            log.logDebug(strKeyPairInfo);\n            var keyPair = {\n                publicKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.publicKey),\n                secretKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.secretKey)\n            };\n            return keyPair;\n        }\n        else {\n            return (0, jwt_1.generateKeyPair)();\n        }\n    }\n    isWalletPKReady() {\n        log.logDebug(`isWalletPKReady  ===> ${this.connectedWalletPK}`);\n        return this.connectedWalletPK.length > 0;\n    }\n    makeJWT(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, jwt_1.signJWT)(topic, jwtconstants_1.OKXCONNECTOR_JWT_SIDE, jwtconstants_1.OKXCONNECTOR_JWT_TTL, // 24h\n            this.jwtKeyPair);\n        });\n    }\n    parsePackage(input_1) {\n        return __awaiter(this, arguments, void 0, function* (input, ignoreACK = false) {\n            var _a, _b, _c, _d, _e;\n            this.events.emit(input.id, input);\n            // send back ACK\n            if (!ignoreACK) {\n                yield this.sendACK(input.id, true);\n                let topic = (_a = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE)) === null || _a === void 0 ? void 0 : _a.content;\n                if (topic) {\n                    let inputObj = input;\n                    if ((_c = (_b = inputObj.params) === null || _b === void 0 ? void 0 : _b.data) === null || _c === void 0 ? void 0 : _c.messageId) {\n                        this.refreshPackageId();\n                        yield this.sendReceive(this.packageId.toString(), (_e = (_d = inputObj.params) === null || _d === void 0 ? void 0 : _d.data) === null || _e === void 0 ? void 0 : _e.messageId, topic);\n                    }\n                }\n            }\n        });\n    }\n    restoreConnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.reportLog('connection manager restore connection');\n            log.logDebug(`connectionManager  restoreConenct   ${topic}`);\n            if ((typeof topic !== 'string') || topic.length === 0) {\n                throw new Error('CONNECTION: invalid topic');\n            }\n            log.logDebug(`connectionManager  restoreConenct   disconnect`);\n            yield this.disconnect(true);\n            this.connectStorage.saveContent(topic, storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`connectionManager  restoreConenct   conect`);\n            yield this.connect(true);\n        });\n    }\n    getConnectInfo() {\n        var topic = (0, utils_1.generateTopic)();\n        log.logDebug(`generate topic token: ${topic}`);\n        log.reportLog('connection manager generate connection info');\n        this.currentTopic = topic;\n        const info = {\n            channelId: topic,\n            clientId: this.crypto.stringifyKeypair().publicKey,\n        };\n        return info;\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            this.timeLog = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---enter->\", this.timeLog);\n            log.reportLog('connection manager begin connect');\n            let lastConnectId = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            //1. generate topic & jwt\n            var topic = this.currentTopic;\n            log.logDebug(`generate topic token: ${topic}`);\n            // crypto keypair\n            if (fromRestore) {\n                if (typeof lastConnectId !== 'undefined' && lastConnectId !== null) {\n                    log.logDebug(`read last connect id: ${lastConnectId}`);\n                    topic = lastConnectId.content;\n                }\n                var cachedSenderPublicKey = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                if (cachedSenderPublicKey) {\n                    this.connectedWalletPK = cachedSenderPublicKey.content;\n                    (0, log_1.logDebug)(`connectionManager connect() this.connectedWalletPK : ${this.connectedWalletPK}`);\n                }\n                log.reportLog('connection manager do restore connection');\n            }\n            if (fromRestore) {\n                // recovery from cache\n                const keyPairInfo = this.getCachedCryptoKeyPair();\n                if (keyPairInfo) {\n                    this.crypto = new crypto_1.SessionCrypto(keyPairInfo);\n                }\n            }\n            log.logDebug(`use crypto client id: ${this.crypto.stringifyKeypair().publicKey}`);\n            // cache topic\n            this.connectStorage.saveContent(topic, storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            var jwtToken = yield this.makeJWT(topic);\n            log.logDebug(`generate jwt token: ${jwtToken}`);\n            this.connectStorage.saveContent(jwtToken, 'jwt');\n            return new Promise((resolve, reject) => {\n                // 1. when websocket opened\n                this.connector.onOpen(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug(`1. connector on open`);\n                    log.reportLog('1. connect ws open');\n                    const timeOne = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---open->\", timeOne - this.timeLog);\n                    //2. send jwt to login\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when login');\n                            log.reportLog('2. connect login failed');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // throw error\n                            reject(error);\n                        }\n                        //3. send subscribe\n                        this.refreshPackageId();\n                        this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                            // ack\n                            if (rsp && rsp.error) {\n                                log.logError('failed when subscribe');\n                                log.reportLog('3. connect subscribe failed');\n                                yield this.connector.disconnect();\n                                var error = new Error();\n                                error.message = rsp.error.message;\n                                error.name = rsp.error.code.toString();\n                                // throw error\n                                reject(error);\n                            }\n                            this.refreshPackageId();\n                            log.logDebug(`4. subscribe callback then send fetch: ${this.packageId}`);\n                            log.reportLog('4. subscribe callback then send fetch');\n                            const timeF = new Date().getTime();\n                            (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n                            // 4. fetch messages\n                            yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                            resolve();\n                        }));\n                        log.logDebug(`3. login callback then send subscribe: ${this.packageId}`);\n                        log.reportLog('3. connect subscribe failed');\n                        const timeTh = new Date().getTime();\n                        (0, log_1.logDebug)(\"ConnectTime---login callback->\", timeTh - this.timeLog);\n                        yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                            log.logDebug('CONNECT: reconnect before send');\n                            yield this.connector.connect()\n                                .catch((err) => {\n                                (0, log_1.logDebug)('ConnectionManager connect error', err);\n                                reject(err);\n                            });\n                        }), {\n                            id: this.packageId.toString(),\n                            jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                            method: commands_1.CONNECT_METHOD_SUB,\n                            params: {\n                                topic: topic\n                            }\n                        });\n                    }));\n                    log.logDebug(`2. login called`);\n                    log.reportLog('2. connection manager connect call login');\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        yield this.connector.connect()\n                            .catch((err) => {\n                            (0, log_1.logDebug)('ConnectionManager connect error', err);\n                            reject(err);\n                        });\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_LOGIN,\n                        params: {\n                            token: jwtToken\n                        }\n                    });\n                    // 4. listen when dapp back to front, receive wallet public key\n                    this.connector.addPackageParse((event) => {\n                        var _a;\n                        log.logDebug(`connect: parse package`);\n                        log.logDebug(event);\n                        if (!(\"params\" in event) || !(\"data\" in event[\"params\"])) {\n                            this.parsePackage(event, true);\n                            return;\n                        }\n                        let rawMsg = (_a = event.params.data) === null || _a === void 0 ? void 0 : _a.message;\n                        if (typeof rawMsg !== 'undefined') {\n                            rawMsg = rawMsg.replace(/'/g, '\"');\n                            let parsedMessage = (0, safejson_1.safeJsonParse)(rawMsg);\n                            if (typeof parsedMessage !== 'string' && \"clientId\" in parsedMessage && parsedMessage.clientId && parsedMessage.clientId.length > 0) {\n                                this.connectedWalletPK = parsedMessage.clientId;\n                                log.logDebug(`this.connectedWalletPK  addPackageParse   ${this.connectedWalletPK}`);\n                                // exchange sender public key\n                                // cache wallet public key\n                                this.connectStorage.saveContent(this.connectedWalletPK, storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                                // cache crypto keypair\n                                this.saveCryptoKeyPair(this.crypto.stringifyKeypair());\n                            }\n                        }\n                        // ignore receive echo\n                        this.parsePackage(event, event.method === commands_1.CONNECT_METHOD_RECEIVE);\n                    });\n                }));\n                this.connector.connect().catch((err) => {\n                    (0, log_1.logDebug)('ConnectionManager connect error', err);\n                    reject(err);\n                });\n            });\n        });\n    }\n    disconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            yield this.connector.disconnect();\n            log.reportLog('connect disconnect');\n            //clean cached topic\n            //如果是恢复连接，就不清理解密public key\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            if (!fromRestore) {\n                this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                this.connectedWalletPK = '';\n                (0, log_1.logDebug)(`connectionManager disconnect() this.connectedWalletPK : ${this.connectedWalletPK}`);\n            }\n        });\n    }\n    addListener(event, success, fail) {\n        this.connector.addListener((0, safejson_1.safeJsonStringify)(event), (rawMsg) => {\n            rawMsg = rawMsg.replace(/'/g, '\"');\n            log.logDebug(`addListener ===> ${rawMsg}`);\n            if (typeof rawMsg !== 'undefined') {\n                var msgObj = (0, safejson_1.safeJsonParse)(rawMsg);\n                var msg = msgObj.message;\n                let result;\n                if (msg.trimStart().startsWith('{')) {\n                    result = msg;\n                }\n                else {\n                    if (msgObj.clientId && msgObj.clientId.length > 0) {\n                        this.connectedWalletPK = msgObj.clientId;\n                        this.connectStorage.saveContent(this.connectedWalletPK, storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                        log.logDebug(`this.connectedWalletPK  addListener   ${this.connectedWalletPK}`);\n                        log.logDebug(`this.cryptoKey  addListener   ${(0, utils_1.toHexString)(this.crypto.keyPair.publicKey)}`);\n                        // cache crypto keypair\n                        this.saveCryptoKeyPair(this.crypto.stringifyKeypair());\n                    }\n                    result = this.crypto.decrypt(msg, this.connectedWalletPK);\n                }\n                log.logDebug(`addListener ===> ${result}`);\n                return result;\n            }\n            return undefined;\n        }, success, fail);\n    }\n    sendRaw(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`message send =====> ${msg}`);\n            log.reportLog('connect send raw msg');\n            let message = msg;\n            log.logDebug(`message send =====encrypt message.length>>>> ${message.length}`);\n            // only one topic\n            let topic = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`message send =====topic>>>> ${topic === null || topic === void 0 ? void 0 : topic.content}`);\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                method: commands_1.CONNECT_METHOD_PUBLISH,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                params: {\n                    message: {\n                        topic: topic === null || topic === void 0 ? void 0 : topic.content,\n                        message: message,\n                        ttl: constants_1.OKXCONNECTOR_MESSAGE_TTL\n                    }\n                } // crypted\n            };\n            this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                // ack\n                if (rsp && rsp.error) {\n                    log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                }\n                else if (rsp && !rsp.error) {\n                    log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                }\n            }));\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n            return this.packageId;\n        });\n    }\n    send(msg_1) {\n        return __awaiter(this, arguments, void 0, function* (msg, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL) {\n            // make send msg payload\n            log.logDebug(`message send =====> ${msg}`);\n            log.reportLog('connect send msg');\n            if (!this.isWalletPKReady()) {\n                // channel not ready\n                throw new Error('connection not finish');\n            }\n            let message = this.crypto.encrypt(msg, this.connectedWalletPK);\n            log.logDebug(`message send =====encrypt message.length>>>> ${message.length}`);\n            log.reportEvent(report_1.OKXReportType.LOG, 'msg_size', message.length.toString());\n            // only one topic\n            let topic = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`message send =====topic>>>> ${topic === null || topic === void 0 ? void 0 : topic.content}`);\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                method: commands_1.CONNECT_METHOD_PUBLISH,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                params: {\n                    message: {\n                        topic: topic === null || topic === void 0 ? void 0 : topic.content,\n                        message: message,\n                        ttl: ttl\n                    }\n                } // crypted\n            };\n            this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                // ack\n                if (rsp && rsp.error) {\n                    log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                }\n                else if (rsp && !rsp.error) {\n                    log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                }\n            }));\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n            return this.packageId;\n        });\n    }\n    sendACK(msgId_1, success_1) {\n        return __awaiter(this, arguments, void 0, function* (msgId, success, reason = undefined) {\n            if (success === true) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    result: true\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n            else if (reason) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    error: {\n                        code: reason.code, //int\n                        message: reason.message\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    // send receive\n    sendReceive(msgId, messageId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECEIVE,\n                params: {\n                    data: {\n                        messageId: messageId,\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendConnectSessionInfo(msgId, messageId, topic, params) {\n        return __awaiter(this, void 0, void 0, function* () {\n        });\n    }\n    // send receive\n    // 1. fetch all \n    // 2. send back receive\n    // 3. check has more, if so, repeat from 1st step\n    sendFetchAndConsumeMessages(msgId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(msgId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic == topic) {\n                                let messageId = msg.messageId;\n                                log.reportLog('5. get fetch result');\n                                yield this.connector.getMsgPayloadFromHistory(msg);\n                                // send receive command to relay server\n                                this.refreshPackageId();\n                                yield this.sendReceive(this.packageId.toString(), messageId, topic);\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            log.reportLog('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_FETCHMSG,\n                params: {\n                    data: {\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    cleanCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.reportLog('connection cache clean called');\n            this.connectStorage.clearCache();\n        });\n    }\n    saveSessionContent(key, data) {\n        if (!data) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(data);\n        this.connectStorage.encryptStoreMsg(jsonData, storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n    }\n    getSessionContent(key) {\n        let jsonStr = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        if (jsonStr) {\n            let object = (0, safejson_1.safeJsonParse)(jsonStr);\n            return object;\n        }\n        return undefined;\n    }\n    getCurrentConnectionReady() {\n        return this.isWalletPKReady();\n    }\n}\nexports.ConnectionManager = ConnectionManager;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectorState = exports.CONNECT_JSONRPC_VER = exports.OKXCONNECTOR_MESSAGE_TTL = exports.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE = exports.OKXCONNECTOR_WS_URL_LIST = exports.OKXCONNECTOR_WS_URL_IDX_KEY = exports.OKXCONNECTOR_WS_URL_3 = exports.OKXCONNECTOR_WS_URL_2 = exports.OKXCONNECTOR_WS_URL_1 = exports.EVENT_EMITTER_MAX_LISTENERS = void 0;\nexports.EVENT_EMITTER_MAX_LISTENERS = 10;\nexports.OKXCONNECTOR_WS_URL_1 = \"wss://wsdexpri.okx.com/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_2 = \"wss://wsdexpri.okx.ac/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_3 = \"wss://wsdexpri.coinall.ltd/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_IDX_KEY = \"wuik\";\nexports.OKXCONNECTOR_WS_URL_LIST = [\n    exports.OKXCONNECTOR_WS_URL_1,\n    exports.OKXCONNECTOR_WS_URL_2,\n    exports.OKXCONNECTOR_WS_URL_3,\n];\nexports.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE = {\n    TIME_OUT: 3990,\n    CANCELED: 3991,\n    FINISHED: 3992,\n};\nexports.OKXCONNECTOR_MESSAGE_TTL = 300000;\n// --------------- JSON RPC ---------------\nexports.CONNECT_JSONRPC_VER = \"2.0\";\nexports.ConnectorState = {\n    InitState: 0,\n    Connecting: 1,\n    Connected: 2,\n    Disconnected: 3,\n    OnError: 4,\n};\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Engine = void 0;\nconst protocol_1 = require(\"../protocol\");\nconst utils_1 = require(\"../utils\");\nconst iconnector_1 = require(\"../connector/iconnector\");\nconst ws_connector_1 = require(\"../connector/ws-connector\");\nconst connectionManager_1 = require(\"./connectionManager\");\nconst sessionUtils_1 = require(\"./sessionUtils\");\nconst connector_1 = require(\"../connector\");\nconst wallet_info_1 = require(\"../protocol/connect/wallet-info\");\nclass Engine {\n    constructor(appName) {\n        this.connectors = [];\n        this.useConnector = undefined;\n        this.connectionManager = new connectionManager_1.ConnectionManager(appName);\n        this.addConnectionListener();\n    }\n    isInject() {\n        return this.getConnector() instanceof connector_1.InjectConnector;\n    }\n    getConnector() {\n        if (this.useConnector) {\n            return this.useConnector;\n        }\n    }\n    registerConnector(connectors) {\n        this.connectors = connectors;\n        for (const connector of connectors) {\n            if (connector instanceof ws_connector_1.WsConnector) {\n                connector.setConnectionManager(this.connectionManager);\n            }\n        }\n    }\n    hasWsConnector() {\n        for (const connector of this.connectors) {\n            if (connector instanceof ws_connector_1.WsConnector) {\n                return true;\n            }\n        }\n        return false;\n    }\n    universalConnect(request, sessionConfig, connectInfoAndUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.addConnectionListener();\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b, _c, _d;\n                try {\n                    (0, utils_1.logDebug)(\"engine universalConnect request :\", JSON.stringify(request));\n                    (0, utils_1.logDebug)(\"engine universalConnect sessionConfig :\", JSON.stringify(sessionConfig));\n                    let universalRequest = [];\n                    request.forEach((item) => {\n                        let name = item.name;\n                        if (name.startsWith(\"requestAccounts\") || name.startsWith(\"ton\")) {\n                            universalRequest.push(item);\n                        }\n                    });\n                    (0, utils_1.logDebug)(\"engine universalConnect universalRequest :\", JSON.stringify(universalRequest));\n                    const connectInfo = this.connectionManager.getConnectInfo();\n                    const requestId = Date.now().toString();\n                    let openUniversalLink = (_a = sessionConfig.openUniversalUrl) !== null && _a !== void 0 ? _a : false;\n                    const universalConnectRequest = {\n                        protocolVer: Number(protocol_1.tonConnectSdkVersion),\n                        topic: connectInfo.channelId,\n                        clientId: connectInfo.clientId,\n                        requestId: requestId,\n                        dAppInfo: sessionConfig.dappInfo,\n                        requests: universalRequest,\n                        redirect: (_b = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _b !== void 0 ? _b : \"none\"\n                    };\n                    const base64Encoded = (0, utils_1.encodeConnectParams)(universalConnectRequest);\n                    universalConnectRequest.redirect = (_c = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _c !== void 0 ? _c : \"none\";\n                    (0, utils_1.logDebug)('engine universalConnect ==>>universalConnectRequest:', JSON.stringify(universalConnectRequest));\n                    var openOKXLink = \"\";\n                    // open app wallet\n                    if (openUniversalLink) {\n                        openOKXLink = (0, utils_1.getOKXLink)(universalConnectRequest, sessionConfig.useMini, sessionConfig.tmaReturnUrl);\n                        (0, utils_1.logDebug)('engine universalConnect ==>>openOKXLink:', openOKXLink);\n                    }\n                    const openMethod = () => {\n                        if (this.connectors.length == 1 && this.connectors[0] instanceof connector_1.OkxwalletInjectConnector) {\n                            return this.connectors[0].openWallet({\n                                connectRequest: universalConnectRequest\n                            });\n                        }\n                        else {\n                            if (sessionConfig.useMini) {\n                                return (0, utils_1.openOKXTMAWalletlinkWithFallback)(openOKXLink);\n                            }\n                            if ((0, utils_1.useShortLink)()) {\n                                return (0, utils_1.openOKXUniversalLink)(openOKXLink);\n                            }\n                            return (0, utils_1.openOKXDeeplinkWithFallback)(openOKXLink);\n                        }\n                    };\n                    (0, utils_1.logDebug)('engine universalConnect ==>>openOKXLink:', openOKXLink);\n                    const isIOS = (0, utils_1.isIos)();\n                    if (isIOS && openUniversalLink) {\n                        (0, utils_1.logDebug)(`engine universalConnect ==>>isIOS: ${isIOS}   openUniversalLink: ${openUniversalLink}`);\n                        openMethod();\n                    }\n                    this.addOnConnectResultListener((response) => {\n                        var _a, _b, _c, _d;\n                        try {\n                            this.addOnConnectResultListener(undefined);\n                            let connectResponse = response;\n                            if (connectResponse.method == \"connect\") {\n                                (0, utils_1.logDebug)(\"engin  universalConnect success connectResponse:>>>\", JSON.stringify(connectResponse));\n                                let namespaces = (0, sessionUtils_1.buildNameSpacesByConnectResponse)(connectResponse);\n                                if (namespaces) {\n                                    let walletName = undefined;\n                                    if (((_b = (_a = connectResponse.payload) === null || _a === void 0 ? void 0 : _a.responses) === null || _b === void 0 ? void 0 : _b[0]) && \"walletName\" in connectResponse.payload.responses[0]) {\n                                        walletName = connectResponse.payload.responses[0]['walletName'];\n                                    }\n                                    let appName = (_c = connectResponse.payload) === null || _c === void 0 ? void 0 : _c.wallet.appName;\n                                    var tag;\n                                    switch (appName) {\n                                        case wallet_info_1.OKXWalletName:\n                                            tag = iconnector_1.OKX_APP_WALLET;\n                                            break;\n                                        case wallet_info_1.OKXMiniWalletName:\n                                            tag = iconnector_1.OKX_TG_WALLET;\n                                            break;\n                                        case wallet_info_1.OKXInjectWalletName:\n                                            tag = iconnector_1.OKX_INJECT_WALLET;\n                                            break;\n                                    }\n                                    var connector = this.connectors.find((connector) => connector.getTag() === tag);\n                                    if (!connector) {\n                                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n                                    }\n                                    let session = Object.assign({ topic: connectInfo.channelId, sessionConfig: sessionConfig, namespaces: namespaces }, (connectResponse.payload && {\n                                        wallet: Object.assign(Object.assign({}, connectResponse.payload.wallet), { walletName: walletName })\n                                    }));\n                                    let methodsResponse = connectResponse.payload.responses.find(item => item.name === 'requestAccounts');\n                                    if (methodsResponse && methodsResponse.connectRequestMethods) {\n                                        session.signResponse = methodsResponse.connectRequestMethods;\n                                    }\n                                    (0, utils_1.logDebug)(\"engin  universalConnect success session:>>>\", JSON.stringify(session));\n                                    resolve(session);\n                                    this.setUseConnector(connector);\n                                }\n                                else {\n                                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n                                }\n                            }\n                            else if (connectResponse.method == \"connect_error\" && ((_d = connectResponse.payload) === null || _d === void 0 ? void 0 : _d.code) != undefined) {\n                                throw new protocol_1.OKXConnectError(connectResponse.payload.code);\n                            }\n                        }\n                        catch (e) {\n                            reject(e);\n                        }\n                    });\n                    if (this.hasWsConnector()) {\n                        yield ((_d = this.connectionManager) === null || _d === void 0 ? void 0 : _d.disconnect(false));\n                        try {\n                            yield this.connectionManager.connect();\n                        }\n                        catch (e) {\n                            (0, utils_1.logDebug)('Engine universalConnect error', e);\n                            throw e;\n                        }\n                        (0, utils_1.logDebug)('engin  universalConnect ==>> connectInfoAndUrl:', connectInfoAndUrl);\n                        this.sendSession(base64Encoded);\n                    }\n                    if (!isIOS && openUniversalLink) {\n                        openMethod();\n                    }\n                    (0, utils_1.logDebug)('engin  universalConnect ==>> connectInfoAndUrl:', connectInfoAndUrl);\n                    if (connectInfoAndUrl) {\n                        const info = {\n                            connectRequest: universalConnectRequest,\n                            redirect: sessionConfig.redirect,\n                            tmaReturnUrl: sessionConfig.tmaReturnUrl,\n                        };\n                        (0, utils_1.logDebug)(\"universalConnect connectInfoAndUrl info :\", JSON.stringify(info));\n                        connectInfoAndUrl(info);\n                    }\n                }\n                catch (error) {\n                    (0, utils_1.logDebug)(\"Engine universalConnect catch error\", error);\n                    reject(error);\n                }\n            }));\n        });\n    }\n    addOnConnectResultListener(connectResultListener) {\n        for (const connector of this.connectors) {\n            if (connector instanceof connector_1.InjectConnector) {\n                connector.setOnConnectResultListener(connectResultListener);\n            }\n        }\n        this.connectResultListener = connectResultListener;\n    }\n    openWallet(engineConnectInfo, connector) {\n        var _a;\n        if (connector) {\n            connector.openWallet(engineConnectInfo);\n        }\n        else {\n            (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.openWallet(engineConnectInfo);\n        }\n    }\n    send(request, requestAnswer, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            return (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.send(request, requestAnswer, ttl);\n        });\n    }\n    clearData() {\n        var _a;\n        (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.clearData();\n    }\n    addDisconnectListener(disconnecter) {\n        var _a;\n        (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.addDisconnectListener(disconnecter);\n    }\n    saveSessionContent(key, data) {\n        this.connectionManager.saveSessionContent(key, data);\n    }\n    getSessionContent(key) {\n        var _a;\n        var session = this.connectionManager.getSessionContent(key);\n        if (session) {\n            var tag = \"\";\n            if (typeof session === \"object\") {\n                tag = this.getTagByappName((_a = session.wallet) === null || _a === void 0 ? void 0 : _a.appName);\n            }\n            if (this.connectors.find((connector) => {\n                return connector.getTag() === tag;\n            })) {\n                return session;\n            }\n        }\n        return undefined;\n    }\n    getTagByappName(appName) {\n        var tag = '';\n        if (appName) {\n            switch (appName) {\n                case wallet_info_1.OKXWalletName:\n                    tag = iconnector_1.OKX_APP_WALLET;\n                    break;\n                case wallet_info_1.OKXMiniWalletName:\n                    tag = iconnector_1.OKX_TG_WALLET;\n                    break;\n                case wallet_info_1.OKXInjectWalletName:\n                    tag = iconnector_1.OKX_INJECT_WALLET;\n            }\n        }\n        return tag;\n    }\n    setConnectConnector(wallet) {\n        var tag = this.getTagByappName(wallet === null || wallet === void 0 ? void 0 : wallet.appName);\n        if (!tag)\n            return;\n        this.setUseConnector(this.connectors.find((connector) => {\n            return connector.getTag() === tag;\n        }));\n    }\n    setUseConnector(connector) {\n        this.useConnector = connector;\n        if (connector instanceof ws_connector_1.WsConnector) {\n            connector.addConnectionListener();\n        }\n    }\n    // for es connect\n    setSessionConnectingListener(sessionConnectingListener) {\n        this.sessionConnectingListener = sessionConnectingListener;\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.restoreconnect(sessionInfo, onConnectResult));\n        });\n    }\n    restoreconnectFromTopic(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.getConnector() instanceof ws_connector_1.WsConnector) {\n                yield this.getConnector().restoreconnectFromTopic(topic);\n            }\n        });\n    }\n    getCurrentConnectionReady(namespaceKeys) {\n        var _a;\n        return !!((_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.getCurrentConnectionReady(namespaceKeys));\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            var _a;\n            yield ((_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.connectManagerDisconnect(fromRestore));\n        });\n    }\n    sendSession(sessionInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, utils_1.logDebug)('[Connect] sendSession called:', sessionInfo);\n            const requestId = Date.now().toString();\n            let request = {\n                method: 'session_info',\n                params: { sessionInfo: sessionInfo }\n            };\n            yield this.connectionManager.sendRaw(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId })));\n        });\n    }\n    addConnectionListener() {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.addListener(\"sdk_response\", (event, msg) => {\n            var jsonResponse = (0, utils_1.safeJsonParse)(msg);\n            (0, utils_1.logDebug)(`Engine ==>> addListener ==> success ==> ${jsonResponse}`);\n            if (jsonResponse.method === 'connect' || jsonResponse.method === 'connect_error') {\n                if (this.connectResultListener) {\n                    this.connectResultListener(jsonResponse);\n                }\n            }\n            else if (jsonResponse.method === \"session_connecting\") {\n                (0, utils_1.logDebug)(\"Engine ==>> handleResponse_4  ===> sessionConnectingListener\");\n                if (this.sessionConnectingListener) {\n                    (0, utils_1.logDebug)(\"Engine ==>> handleResponse_4  ===> sessionConnectingListener not null\");\n                    this.sessionConnectingListener();\n                    this.sessionConnectingListener = undefined;\n                }\n            }\n        }, function () {\n        });\n    }\n}\nexports.Engine = Engine;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = exports.Engine = exports.WalletConnectionManager = exports.ConnectionManager = exports.OKXWalletConnector = void 0;\nvar connect_1 = require(\"./connect\");\nObject.defineProperty(exports, \"OKXWalletConnector\", { enumerable: true, get: function () { return connect_1.OKXWalletConnector; } });\nvar connectionManager_1 = require(\"./connectionManager\");\nObject.defineProperty(exports, \"ConnectionManager\", { enumerable: true, get: function () { return connectionManager_1.ConnectionManager; } });\nvar walletConnectionManager_1 = require(\"./walletConnectionManager\");\nObject.defineProperty(exports, \"WalletConnectionManager\", { enumerable: true, get: function () { return walletConnectionManager_1.WalletConnectionManager; } });\nvar engine_1 = require(\"./engine\");\nObject.defineProperty(exports, \"Engine\", { enumerable: true, get: function () { return engine_1.Engine; } });\nvar storage_1 = require(\"./storage\");\nObject.defineProperty(exports, \"Storage\", { enumerable: true, get: function () { return storage_1.Storage; } });\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MULTICODEC_ED25519_LENGTH = exports.MULTICODEC_ED25519_HEADER = exports.MULTICODEC_ED25519_BASE = exports.MULTICODEC_ED25519_ENCODING = exports.DID_METHOD = exports.DID_PREFIX = exports.DID_DELIMITER = exports.KEY_PAIR_SEED_LENGTH = exports.DATA_ENCODING = exports.JSON_ENCODING = exports.JWT_ENCODING = exports.JWT_DELIMITER = exports.JWT_IRIDIUM_TYP = exports.JWT_IRIDIUM_ALG = exports.JWTHeaderType = void 0;\nexports.generateKeyPair = generateKeyPair;\nexports.decodeJSON = decodeJSON;\nexports.encodeJSON = encodeJSON;\nexports.encodeIss = encodeIss;\nexports.decodeIss = decodeIss;\nexports.encodeSig = encodeSig;\nexports.decodeSig = decodeSig;\nexports.encodeData = encodeData;\nexports.decodeData = decodeData;\nexports.encodeJWT = encodeJWT;\nexports.decodeJWT = decodeJWT;\nexports.signJWT = signJWT;\nexports.verifyJWT = verifyJWT;\nconst ed25519 = __importStar(require(\"@stablelib/ed25519\"));\nconst safejson_1 = require(\"../utils/safejson\");\nconst utils_1 = require(\"../utils/utils\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst log = __importStar(require(\"../utils/log\"));\nconst stringUtils_1 = require(\"../utils/stringUtils\");\nexports.JWTHeaderType = \"dapp\";\nexports.JWT_IRIDIUM_ALG = \"EdDSA\";\nexports.JWT_IRIDIUM_TYP = \"JWT\";\nexports.JWT_DELIMITER = \".\";\nexports.JWT_ENCODING = \"base64url\";\nexports.JSON_ENCODING = \"utf8\";\nexports.DATA_ENCODING = \"utf8\";\nexports.KEY_PAIR_SEED_LENGTH = 32;\nexports.DID_DELIMITER = \":\";\nexports.DID_PREFIX = \"did\";\nexports.DID_METHOD = \"key\";\nexports.MULTICODEC_ED25519_ENCODING = \"base58btc\";\nexports.MULTICODEC_ED25519_BASE = \"z\";\nexports.MULTICODEC_ED25519_HEADER = \"K36\";\nexports.MULTICODEC_ED25519_LENGTH = 32;\nfunction generateKeyPair() {\n    // let local_seed = randomBytes(KEY_PAIR_SEED_LENGTH)\n    // return ed25519.generateKeyPairFromSeed(local_seed);\n    return tweetnacl_1.default.sign.keyPair();\n}\nfunction decodeJSON(str) {\n    return (0, safejson_1.safeJsonParse)((0, stringUtils_1.okxtoString)((0, stringUtils_1.okxfromString)(str, exports.JWT_ENCODING), exports.JSON_ENCODING));\n}\nfunction encodeJSON(val) {\n    return (0, stringUtils_1.okxtoString)((0, stringUtils_1.okxfromString)((0, safejson_1.safeJsonStringify)(val), exports.JSON_ENCODING), exports.JWT_ENCODING);\n}\nfunction encodeIss(publicKey) {\n    log.logDebug(`publicKey: ${(0, utils_1.toHexString)(publicKey)}`);\n    var publicKeyStr = (0, stringUtils_1.okxtoString)(publicKey, exports.MULTICODEC_ED25519_ENCODING);\n    return [exports.DID_PREFIX, exports.DID_METHOD, publicKeyStr].join(exports.DID_DELIMITER);\n}\nfunction decodeIss(issuer) {\n    const [prefix, method, multicodec] = issuer.split(exports.DID_DELIMITER);\n    if (prefix !== exports.DID_PREFIX || method !== exports.DID_METHOD) {\n        throw new Error(`Issuer must be a DID with method \"key\"`);\n    }\n    if (multicodec === undefined) {\n        throw new Error('multicodec is undefined');\n    }\n    const publicKey = (0, stringUtils_1.okxfromString)(multicodec, exports.MULTICODEC_ED25519_ENCODING);\n    if (publicKey === undefined || publicKey.length !== exports.MULTICODEC_ED25519_LENGTH) {\n        throw new Error(`Issuer must be a public key with length 32 bytes`);\n    }\n    return publicKey;\n}\n// ---------- Signature ----------------------------------------------- //\nfunction encodeSig(bytes) {\n    return (0, stringUtils_1.okxtoString)(bytes, exports.JWT_ENCODING);\n}\nfunction decodeSig(encoded) {\n    return (0, stringUtils_1.okxfromString)(encoded, exports.JWT_ENCODING);\n}\n// ---------- Data ----------------------------------------------- //\nfunction encodeData(params) {\n    return (0, stringUtils_1.okxfromString)([encodeJSON(params.header), encodeJSON(params.payload)].join(exports.JWT_DELIMITER), exports.DATA_ENCODING);\n}\nfunction decodeData(data) {\n    var _a, _b;\n    const params = (0, stringUtils_1.okxtoString)(data, exports.DATA_ENCODING).split(exports.JWT_DELIMITER);\n    const header = decodeJSON((_a = params[0]) !== null && _a !== void 0 ? _a : '{}');\n    const payload = decodeJSON((_b = params[1]) !== null && _b !== void 0 ? _b : '{}');\n    return { header, payload };\n}\n// ---------- JWT ----------------------------------------------- //\nfunction encodeJWT(params) {\n    return [encodeJSON(params.header), encodeJSON(params.payload), encodeSig(params.signature)].join(exports.JWT_DELIMITER);\n}\nfunction decodeJWT(jwt) {\n    var _a, _b, _c;\n    const params = jwt.split(exports.JWT_DELIMITER);\n    const header = decodeJSON((_a = params[0]) !== null && _a !== void 0 ? _a : '{}');\n    const payload = decodeJSON((_b = params[1]) !== null && _b !== void 0 ? _b : '{}');\n    const signature = decodeSig((_c = params[2]) !== null && _c !== void 0 ? _c : '{}');\n    const data = (0, stringUtils_1.okxfromString)(params.slice(0, 2).join(exports.JWT_DELIMITER), exports.DATA_ENCODING);\n    return { header, payload, signature, data };\n}\nfunction signJWT(sub_1, aud_1, ttl_1, keyPair_1) {\n    return __awaiter(this, arguments, void 0, function* (sub, aud, ttl, keyPair, iat = Math.floor(Date.now())) {\n        const header = { alg: exports.JWT_IRIDIUM_ALG, typ: exports.JWT_IRIDIUM_TYP };\n        const iss = encodeIss(keyPair.publicKey);\n        const exp = iat + ttl;\n        const act = \"authenticate user\";\n        const payload = { iss, sub, aud, act, iat, exp };\n        const data = encodeData({ header, payload });\n        // const signature = ed25519.sign(keyPair.secretKey, data);\n        log.logDebug(`get sec kp: ${keyPair.secretKey} {${keyPair.secretKey.length}}`);\n        const signature = tweetnacl_1.default.sign.detached(data, keyPair.secretKey);\n        return encodeJWT({ header, payload, signature });\n    });\n}\nfunction verifyJWT(jwt) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { header, payload, data, signature } = decodeJWT(jwt);\n        if (header.alg !== exports.JWT_IRIDIUM_ALG || header.typ !== exports.JWT_IRIDIUM_TYP) {\n            throw new Error(\"JWT must use EdDSA algorithm\");\n        }\n        const publicKey = decodeIss(payload.iss);\n        return ed25519.verify(publicKey, data, signature);\n    });\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCONNECTOR_JWT_TTL = exports.OKXCONNECTOR_JWT_WALLET_SIDE = exports.OKXCONNECTOR_JWT_SIDE = void 0;\nexports.OKXCONNECTOR_JWT_SIDE = \"wallet\";\nexports.OKXCONNECTOR_JWT_WALLET_SIDE = \"dapp\";\nexports.OKXCONNECTOR_JWT_TTL = 86400000;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildNameSpacesByConnectResponse = buildNameSpacesByConnectResponse;\nexports.buildRequestAccountNameSpacesByConnectResponse = buildRequestAccountNameSpacesByConnectResponse;\nconst log_1 = require(\"../utils/log\");\nfunction buildNameSpacesByConnectResponse(connectResponse) {\n    let requestAccountNameSpaces = buildRequestAccountNameSpacesByConnectResponse(connectResponse);\n    return requestAccountNameSpaces;\n}\nfunction buildRequestAccountNameSpacesByConnectResponse(connectResponse) {\n    let result = {};\n    (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start connectResponse111>>', JSON.stringify(connectResponse));\n    let universalResponse = connectResponse.payload.responses.find(item => item.name === 'requestAccounts');\n    if (universalResponse && universalResponse.accounts) {\n        let filterAccount = [];\n        for (const item of universalResponse.accounts) {\n            if (item.namespace === \"ton\") {\n                if (item.data && item.data.ton_addr) {\n                    if (item.data.ton_addr.address && item.data.ton_addr.address.length > 0) {\n                        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start TON>>', JSON.stringify(item));\n                        filterAccount.push(item);\n                    }\n                }\n            }\n            else {\n                (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start other>>', JSON.stringify(item));\n                filterAccount.push(item);\n            }\n        }\n        universalResponse.accounts = filterAccount;\n    }\n    const tonAddress = connectResponse.payload.responses.find(item => item.name === 'ton_addr');\n    const tonProof = connectResponse.payload.responses.find(item => item.name === 'ton_proof');\n    if (tonAddress && !universalResponse) { //adapt tonsdk\n        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse adapt ton data >>');\n        let address = tonAddress.address;\n        address = 'ton:' + tonAddress.network + \":\" + address;\n        let data = {\n            ton_addr: tonAddress\n        };\n        if (tonProof) {\n            data.ton_proof = tonProof;\n        }\n        universalResponse = {\n            name: \"requestAccounts\",\n            accounts: [{\n                    namespace: 'ton',\n                    addresses: [address],\n                    methods: ['ton_sendTransaction'],\n                    extra: {},\n                    data: data,\n                }]\n        };\n    }\n    (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse end universalResponse>>>', JSON.stringify(universalResponse));\n    universalResponse.accounts.forEach(item => {\n        var chains = [];\n        var accounts = [];\n        item.addresses.forEach(addressItem => {\n            var addressArr = addressItem.split(\":\");\n            (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse addressArr>>', addressArr.length);\n            if (addressArr.length >= 3) {\n                let chain = addressArr.slice(0, 2).join(\":\");\n                chains.push(chain);\n                accounts.push(addressItem);\n                (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse chain:>>', chain, \"addressItem:\", addressItem);\n            }\n        });\n        if (item.data && item.data.ton_addr) {\n            item.data.ton_addr.name = 'ton_addr';\n        }\n        if (item.data && item.data.ton_proof) {\n            item.data.ton_proof.name = 'ton_proof';\n        }\n        result[item.namespace] = {\n            chains: chains,\n            accounts: accounts,\n            methods: item.methods,\n            extra: item.extra,\n            payload: item.data\n        };\n        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse result>>', JSON.stringify(result));\n    });\n    return result;\n}\n/*export function buildTonNameSpaceByConnectResponse(connectResponse: ConnectResponseSuccess): Namespaces | undefined {\n    const tonAddrItem: TonAddressItemReply = connectResponse.payload.responses.find(\n        item => item.name === 'ton_addr'\n    ) as TonAddressItemReply;\n\n    const tonProfItem: TonProofItemReply = connectResponse.payload.responses.find(\n        item => item.name === 'ton_proof'\n    ) as TonProofItemReply;\n\n    if (!tonAddrItem) {\n        return undefined\n    }\n\n    return {\n        NameSpaceKeyTON: {\n            chains: [tonAddrItem.network],\n            accounts: [],\n            methods: connectResponse.payload.wallet.features?.ton,\n            payload: {\n                tonAccount: {\n                    address: tonAddrItem.address,\n                    chain: tonAddrItem.network,\n                    walletStateInit: tonAddrItem.walletStateInit,\n                    publicKey: tonAddrItem.publicKey\n                },\n                tonProof: tonProfItem\n            }\n        }\n    }\n}*/\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = void 0;\nconst storageconstants_1 = require(\"./storageconstants\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst utils_1 = require(\"../utils/utils\");\nconst utils_2 = require(\"../utils\");\nconst log = __importStar(require(\"../utils/log\"));\nconst utils_3 = require(\"../utils\");\nconst crypto_js_1 = require(\"crypto-js\");\nclass Storage {\n    constructor(subKey, beforeKey = undefined) {\n        const localStorage = (0, utils_1.resolveLocalStorage)();\n        // 0. check and upgrade beforeKey\n        log.logDebug('------ update before cache ------');\n        if (beforeKey) {\n            this.checkAndUpgradeCache(beforeKey, subKey);\n        }\n        // 1. load data from local storage\n        this.storeKey = '';\n        this.cipherIV = '';\n        this.subKey = subKey;\n        log.logDebug('--------get current local storage --------');\n        log.logDebug(localStorage);\n        const cacheStr = localStorage.getItem(Storage.cacheKey + subKey);\n        if (typeof cacheStr === \"undefined\" || cacheStr === null) {\n            log.logDebug(\"with no cache\");\n            this.cache = {};\n            return;\n        }\n        log.logDebug(cacheStr);\n        if ((cacheStr === null || cacheStr === void 0 ? void 0 : cacheStr.length) > 0) {\n            var cacheObj = (0, utils_2.safeJsonParse)(cacheStr);\n            this.cache = cacheObj;\n        }\n        log.logDebug(`get cache obj: ${this.cache}`);\n        if (typeof this.cache === 'undefined' || this.cache == null) {\n            this.cache = {};\n        }\n    }\n    checkAndUpgradeCache(fromCacheKey, toCacheKey) {\n        if (fromCacheKey && fromCacheKey.length > 0 && toCacheKey && toCacheKey.length > 0) {\n            // 1. get all infos from from-cache-key\n            log.logDebug('--------get current local storage --------');\n            log.logDebug(localStorage);\n            const cacheStr = localStorage.getItem(Storage.cacheKey + fromCacheKey);\n            if (typeof cacheStr === \"undefined\" || cacheStr === null) {\n                log.logDebug(\"no pre cache content\");\n                return;\n            }\n            log.logDebug(cacheStr);\n            if ((cacheStr === null || cacheStr === void 0 ? void 0 : cacheStr.length) > 0) {\n                // 2. save to to-cache-key\n                log.logDebug(\"write in cache content: \", fromCacheKey, '->', toCacheKey);\n                localStorage.setItem(Storage.cacheKey + toCacheKey, cacheStr);\n                // 3. clean from item\n                log.logDebug(\"clean in cache content: \", fromCacheKey);\n                localStorage.removeItem(Storage.cacheKey + fromCacheKey);\n            }\n        }\n        else {\n            log.logDebug('no pre cache key:', fromCacheKey);\n        }\n    }\n    saveContent(content, key, id = '-') {\n        let item = {\n            id: id,\n            timestamp: Date.now().toString(),\n            content: content\n        };\n        this.saveItem(item, key);\n    }\n    saveItem(item, key) {\n        let localKey = Storage.cacheKey + this.subKey;\n        const localStorage = (0, utils_1.resolveLocalStorage)();\n        log.logDebug(this.cache);\n        log.logDebug(`get cache obj: ${this.cache}, ${key}, ${item}`);\n        this.cache[key] = item;\n        let totalCacheStr = (0, utils_2.safeJsonStringify)(this.cache);\n        log.logDebug(`STORAGE: ${key} @ ${this.cache}`);\n        localStorage.setItem(localKey, totalCacheStr);\n    }\n    getItem(key) {\n        log.logDebug(`STORAGE >> getItem: ${key} @ ${this.cache}`);\n        return this.cache[key];\n    }\n    getCachedPBKDF2InfoKey() {\n        var _a, _b, _c, _d;\n        const pwLen = 32;\n        const saltLen = 24;\n        if (this.storeKey.length > 0 && ((_a = this.cipherIV) === null || _a === void 0 ? void 0 : _a.length) > 0) {\n            return {\n                pw: this.storeKey,\n                iv: this.cipherIV\n            };\n        }\n        let salt = (_b = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGER_CRYPTO_SALT)) === null || _b === void 0 ? void 0 : _b.content;\n        if (!salt) {\n            salt = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(saltLen));\n            this.saveContent(salt, storageconstants_1.OKXCONNECTOR_STORAGER_CRYPTO_SALT);\n        }\n        let pw = (_c = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD)) === null || _c === void 0 ? void 0 : _c.content;\n        if (!pw) {\n            pw = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(pwLen));\n            this.saveContent(pw, storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD);\n        }\n        let cipherIV = (_d = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV)) === null || _d === void 0 ? void 0 : _d.content;\n        if (!cipherIV) {\n            // let ivBuffer = Buffer.from(nacl.randomBytes(16))\n            let ivBuffer = tweetnacl_1.default.randomBytes(16);\n            cipherIV = (0, utils_1.toHexString)(ivBuffer);\n            this.saveContent(cipherIV, storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV);\n        }\n        this.cipherIV = cipherIV;\n        this.storeKey = (0, crypto_js_1.PBKDF2)(pw, salt, { iterations: 10 }).toString();\n        return {\n            pw: this.storeKey,\n            iv: this.cipherIV\n        };\n    }\n    encryptStoreMsg(msg, key) {\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg start ${Date.now()}`);\n        let storeInfo = this.getCachedPBKDF2InfoKey();\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg mid ${Date.now()}`);\n        var result = crypto_js_1.AES.encrypt(msg, storeInfo.pw).toString();\n        this.saveContent(result, key);\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg end ${Date.now()}`);\n    }\n    getAndDecrypt(key) {\n        (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt start ${Date.now()}`);\n        let item = this.getItem(key);\n        if (item && item.content) {\n            let storeInfo = this.getCachedPBKDF2InfoKey();\n            (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt mid ${Date.now()}`);\n            let result = crypto_js_1.AES.decrypt(item.content, storeInfo.pw).toString(crypto_js_1.enc.Utf8);\n            (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt end ${Date.now()}`);\n            return result;\n        }\n        return null;\n    }\n    clearCache(key = undefined) {\n        if (key === undefined) {\n            // clean all\n            this.cache = {};\n            let localKey = Storage.cacheKey + this.subKey;\n            localStorage.setItem(localKey, '');\n        }\n        else {\n            let localKey = Storage.cacheKey + this.subKey;\n            const localStorage = (0, utils_1.resolveLocalStorage)();\n            log.logDebug(this.cache);\n            this.cache[key] = null;\n            let totalCacheStr = (0, utils_2.safeJsonStringify)(this.cache);\n            log.logDebug(`STORAGE: clean key ${key} @ ${this.cache}`);\n            localStorage.setItem(localKey, totalCacheStr);\n        }\n    }\n}\nexports.Storage = Storage;\nStorage.cacheKey = 'OKXStorageKey';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCONNECTOR_STORAGE_CIPHER_METHOD = exports.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV = exports.OKXCONNECTOR_STORAGER_CRYPTO_SALT = exports.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD = exports.OKXCONNECTOR_TON_KEY = exports.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE = exports.OKXCONNECTOR_TOKEN_CACHE = exports.OKXCONNECTOR_JWT_KEY = exports.OKXCONNECTOR_SESSION_PREFIX_KEY = exports.OKXCONNECTOR_CRYPTO_KEY = exports.OKXCONNECTOR_CACHE_KEY_DAPP = exports.OKXCONNECTOR_CACHE_KEY = void 0;\nexports.OKXCONNECTOR_CACHE_KEY = \"ck\";\nexports.OKXCONNECTOR_CACHE_KEY_DAPP = \"ck_dapp\";\nexports.OKXCONNECTOR_CRYPTO_KEY = \"cck_k\";\nexports.OKXCONNECTOR_SESSION_PREFIX_KEY = \"cspk_\";\nexports.OKXCONNECTOR_JWT_KEY = \"cjk_k\";\nexports.OKXCONNECTOR_TOKEN_CACHE = \"ct\";\nexports.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE = \"csp\";\nexports.OKXCONNECTOR_TON_KEY = \"OKXStorage_ctc\";\nexports.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD = \"scp\";\nexports.OKXCONNECTOR_STORAGER_CRYPTO_SALT = \"scs\";\nexports.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV = \"scpc\";\nexports.OKXCONNECTOR_STORAGE_CIPHER_METHOD = \"aes-256-cbc\";\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnectionManagerEvent = exports.WalletConnectionManagerTopicInfoCacheKey = void 0;\nexports.WalletConnectionManagerTopicInfoCacheKey = \"wcmtic\";\nexports.WalletConnectionManagerEvent = {\n    RECEIVE_REQUEST: \"payload\"\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnectionManager = void 0;\nconst connect_1 = require(\"./connect\");\nconst commands_1 = require(\"./commands\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst jwtconstants_1 = require(\"./jwtconstants\");\nconst constants_1 = require(\"./constants\");\nconst walletConnectionConstants_1 = require(\"./walletConnectionConstants\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils/utils\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst jwt_1 = require(\"./jwt\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst utils_2 = require(\"../utils\");\nclass WalletConnectionManager {\n    constructor() {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.communicateEvents = new eventemitter3_1.EventEmitter();\n        log.logDebug('connect manager construct');\n        // local storage\n        this.connectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n        // this.crypto = new SessionCrypto()\n        this.jwtKeyPair = this.getCachedJWTKeyPair();\n        this.saveJWTKeyPair(this.jwtKeyPair);\n        // wss connection\n        this.connector = new connect_1.OKXWalletConnector(constants_1.OKXCONNECTOR_WS_URL_1);\n        this.packageId = Date.now();\n        // connection state\n        this.sessionCryptoInfoMap = new Map();\n        // log.logDebug(`this.connectedWalletPK  constructor   ${this.connectedWalletPK}`)\n        this.inLogin = false;\n        this.isLogined = false;\n    }\n    refreshPackageId(offset = 0) {\n        this.packageId = Date.now() + offset;\n    }\n    saveCryptoKeyPair(topicId, keyPair) {\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(keyPair);\n        // encrypt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_CRYPTO_KEY + topicId);\n    }\n    getCachedCryptoKeyPair(topicId) {\n        // decrypt kp\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_CRYPTO_KEY + topicId);\n        const content = kp;\n        if (typeof content == 'string') {\n            log.logDebug('get cached crypto key:');\n            log.logDebug(content);\n            let keyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            return keyPairInfo;\n        }\n        else {\n            this.connectStorage.clearCache();\n        }\n        return null;\n    }\n    saveJWTKeyPair(keyPair) {\n        var strkeyPair = {\n            publicKey: (0, utils_1.toHexString)(keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(keyPair.secretKey)\n        };\n        log.logDebug('save jwt kp');\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(strkeyPair);\n        log.logDebug(cacheInfo);\n        // encrypt jwt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        log.logDebug('after save jwt kp');\n    }\n    getCachedJWTKeyPair() {\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            // TODO: decrypt jwt kp\n            log.logDebug('get cached jwt kp:');\n            log.logDebug(content);\n            let strKeyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            log.logDebug('save jwt kp');\n            log.logDebug(strKeyPairInfo);\n            var keyPair = {\n                publicKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.publicKey),\n                secretKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.secretKey)\n            };\n            return keyPair;\n        }\n        else {\n            return (0, jwt_1.generateKeyPair)();\n        }\n    }\n    isTopicPublicKeyExist(topicId) {\n        log.logDebug(`isTopicPublicKeyExist  ===> ${topicId}`);\n        return this.sessionCryptoInfoMap.get(topicId);\n    }\n    makeJWT(timestampStr) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, jwt_1.signJWT)(timestampStr, jwtconstants_1.OKXCONNECTOR_JWT_WALLET_SIDE, jwtconstants_1.OKXCONNECTOR_JWT_TTL, // 24h\n            this.jwtKeyPair);\n        });\n    }\n    parseInternalMsg(internalMsg) {\n        try {\n            let internalObj = (0, safejson_1.safeJsonParse)(internalMsg);\n            let origin = internalObj['ivur-igbfft-ptjip'];\n            if (origin && origin.length > 0) {\n                let originContent = (0, utils_2.base64decode)(origin, true);\n                return originContent.toString();\n            }\n        }\n        catch (error) {\n            log.logError('parse internal msg', error);\n        }\n    }\n    updateClientId(topic, clientId) {\n        let sessionInfo = this.sessionCryptoInfoMap.get(topic);\n        (0, log_1.logDebug)('updateClientId', sessionInfo, topic, clientId);\n        if (sessionInfo && clientId && clientId.length > 0) {\n            if (sessionInfo.cid) {\n                // check\n                let lastCheck = (0, utils_1.getLastSixMd5Hash)(clientId);\n                if (sessionInfo.cid == lastCheck) {\n                    sessionInfo.dappPublicKey = clientId;\n                }\n                else {\n                    log.logError('cid check failed', sessionInfo, topic, clientId);\n                }\n            }\n            else {\n                sessionInfo.dappPublicKey = clientId;\n            }\n            // \n            this.syncCacheSessionInfo();\n        }\n        return false;\n    }\n    parsePackage(topic_1, input_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, input, ignoreACK = false) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;\n            this.events.emit(input.id, input);\n            // emit event\n            let sessionInfo = this.sessionCryptoInfoMap.get(topic);\n            log.logDebug('get sessionInfo for decrypt topic:', topic);\n            log.logDebug('get sessionInfo for decrypt:', input.id, topic, sessionInfo, this.sessionCryptoInfoMap);\n            if (sessionInfo && input.params.data) {\n                if ((_a = input.params.data) === null || _a === void 0 ? void 0 : _a.message) {\n                    // try parse internal message\n                    if ((_b = input.params.data) === null || _b === void 0 ? void 0 : _b.isInternalData) {\n                        let inner_message = (_c = input.params.data) === null || _c === void 0 ? void 0 : _c.message;\n                        let inner_topic = (_d = input.params.data) === null || _d === void 0 ? void 0 : _d.topic;\n                        let originContent = this.parseInternalMsg(inner_message);\n                        (0, log_1.logDebug)('parse internal origin: ', originContent);\n                        if (originContent && originContent.length > 0) {\n                            this.communicateEvents.emit(\"origin\", originContent, inner_topic);\n                        }\n                    }\n                    else {\n                        // try parse message base64\n                        try {\n                            let message = (_e = input.params.data) === null || _e === void 0 ? void 0 : _e.message;\n                            if (message.trimStart().startsWith('{')) {\n                                let messageObj = (0, safejson_1.safeJsonParse)(message);\n                                if (messageObj.method) {\n                                    if (messageObj.method == 'session_info') {\n                                        let sessionInfoString = messageObj.params.sessionInfo;\n                                        let base64Content = (0, utils_2.base64decode)(sessionInfoString, false);\n                                        (0, log_1.logDebug)(\"wallet connection manager requset base64Content:\", base64Content);\n                                        (0, log_1.logDebug)(\"base64Content:\" + base64Content);\n                                        let inner_connection = base64Content.toObject();\n                                        this.updateClientId(topic, inner_connection.clientId);\n                                    }\n                                    (0, log_1.logDebug)('<<< parse raw msg:', topic, messageObj);\n                                    this.communicateEvents.emit(topic, message);\n                                }\n                            }\n                            else {\n                                let message = sessionInfo.crypto.decryptWallet((_f = input.params.data) === null || _f === void 0 ? void 0 : _f.message, sessionInfo.dappPublicKey);\n                                (0, log_1.logDebug)('<<< receive msg:', topic, message);\n                                this.communicateEvents.emit(topic, message);\n                            }\n                        }\n                        catch (error) {\n                            let message = sessionInfo.crypto.decryptWallet((_g = input.params.data) === null || _g === void 0 ? void 0 : _g.message, sessionInfo.dappPublicKey);\n                            (0, log_1.logDebug)('<<< receive msg:', topic, message);\n                            this.communicateEvents.emit(topic, message);\n                        }\n                    }\n                }\n                else {\n                }\n            }\n            // send back ACK\n            if (!ignoreACK) {\n                yield this.sendACK(input.id, true);\n                if (topic) {\n                    let inputObj = input;\n                    if ((_j = (_h = inputObj.params) === null || _h === void 0 ? void 0 : _h.data) === null || _j === void 0 ? void 0 : _j.messageId) {\n                        this.refreshPackageId();\n                        yield this.sendReceive(this.packageId.toString(), (_l = (_k = inputObj.params) === null || _k === void 0 ? void 0 : _k.data) === null || _l === void 0 ? void 0 : _l.messageId, topic);\n                    }\n                }\n            }\n        });\n    }\n    recovrySessionInfoFromCache() {\n        // get topic ids and keys from session\n        // WalletConnectionCryptoCacheMap\n        // {[topicId]: {cryptoKeypair: {publicKey:string, secretKey:string}, dappPublicKey:clientId}}\n        let jsonStr = this.connectStorage.getAndDecrypt(walletConnectionConstants_1.WalletConnectionManagerTopicInfoCacheKey);\n        log.logDebug('get cached sessionInfos:', jsonStr);\n        if (jsonStr) {\n            let cacheMap = (0, safejson_1.safeJsonParse)(jsonStr);\n            for (let topicId in cacheMap) {\n                let topicItem = cacheMap[topicId];\n                log.logDebug('make topicItem:', topicItem);\n                let cryptoItem = {\n                    topic: topicId,\n                    crypto: new crypto_1.SessionCrypto({\n                        publicKey: topicItem.cryptoKeyPair.publicKey,\n                        secretKey: topicItem.cryptoKeyPair.secretKey\n                    }),\n                    dappPublicKey: topicItem.dappPublicKey,\n                    cid: topicItem.cid\n                };\n                this.sessionCryptoInfoMap.set(topicId, cryptoItem);\n            }\n        }\n        log.logDebug('get cached sessionInfos map:', this.sessionCryptoInfoMap);\n    }\n    syncCacheSessionInfo() {\n        let cacheMap = {};\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            log.logDebug('for each Keys', topicId);\n            if (cryptoItem) {\n                cacheMap[topicId] = {\n                    cryptoKeyPair: cryptoItem.crypto.stringifyKeypair(),\n                    dappPublicKey: cryptoItem.dappPublicKey,\n                    cid: cryptoItem.cid\n                };\n            }\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(cacheMap);\n        log.logDebug('sync cache sessionInfos:', jsonData);\n        this.connectStorage.encryptStoreMsg(jsonData, walletConnectionConstants_1.WalletConnectionManagerTopicInfoCacheKey);\n    }\n    cacheSessionInfo(topic, sessionInfo, sync = true) {\n        let dappPublicKey = sessionInfo.dappPublicKey;\n        // 1. search dapp public related topic ids\n        let duplicatedTopics = [];\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            log.logDebug('for each Keys', topicId);\n            if (cryptoItem.dappPublicKey == dappPublicKey) {\n                log.logDebug('duplicated dapp public key:', topicId, dappPublicKey);\n                duplicatedTopics.push(topicId);\n            }\n        }\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            if (duplicatedTopics.includes(topicId)) {\n                this.sessionCryptoInfoMap.delete(topicId);\n            }\n        }\n        // discard useless topics\n        log.logDebug('cleaned connect session cache:', this.sessionCryptoInfoMap);\n        // 2. remove previous connected topic ids\n        // 3. write in current topic\n        this.sessionCryptoInfoMap.set(topic, sessionInfo);\n        // TODO: search domain info and then delete \n        log.logDebug('cache sessionInfo:', topic, sessionInfo, this.sessionCryptoInfoMap);\n        if (sync) {\n            this.syncCacheSessionInfo();\n        }\n        return duplicatedTopics;\n    }\n    // add and subscribe topic\n    appendTopic(topic, sessionPublicKey, cid) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('4.1. get append Topic:', topic);\n            // 1. check if connected\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.isLogined) {\n                    var error = new Error();\n                    error.message = \"connection is not logined\";\n                    error.name = \"append error\";\n                    // throw error\n                    reject(error);\n                    return;\n                }\n                // 2. subscribe topic and session public key\n                let cryptoItem = {\n                    topic: topic,\n                    crypto: new crypto_1.SessionCrypto(),\n                    dappPublicKey: sessionPublicKey ? sessionPublicKey : \"\",\n                    cid: cid\n                };\n                let duplicatedTopics = this.cacheSessionInfo(topic, cryptoItem, false);\n                // make sure cache session info before subscribe\n                yield this.subscribeTopics(Array.from([topic]));\n                this.refreshPackageId();\n                log.logDebug(`5. subscribe callback then fetch append message: ${this.packageId}, ${topic}`);\n                log.reportLog(`5. subscribe callback then fetch append message`);\n                const timeF = new Date().getTime();\n                (0, log_1.logDebug)(\"Append --subscribe callback->\", timeF - this.timeLog);\n                resolve(duplicatedTopics);\n            }));\n        });\n    }\n    confirmAppendingTopics() {\n        this.syncCacheSessionInfo();\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.timeLog = new Date().getTime();\n            (0, log_1.logDebug)(\"[Wallet] ConnectTime---enter->\", this.timeLog);\n            log.reportLog('wallet connect connect called');\n            // 0. get cached topics and infos\n            let timestampStr = Date.now().toString();\n            var jwtToken = yield this.makeJWT(timestampStr);\n            log.logDebug(`generate jwt token: ${jwtToken}`);\n            this.connectStorage.saveContent(jwtToken, 'jwt');\n            this.recovrySessionInfoFromCache();\n            // 1.\n            return new Promise((resolve, reject) => {\n                // 1. when websocket opened\n                this.inLogin = true;\n                this.connector.onOpen(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug(`1. connector on open`);\n                    log.reportLog('1. wallet connect connect on open');\n                    const timeOne = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---open->\", timeOne - this.timeLog);\n                    //2. send jwt to login\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when login');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // throw error\n                            reject(error);\n                        }\n                        else {\n                            this.isLogined = true;\n                            resolve();\n                            // 3. subscribe cached topics\n                            log.logDebug('3. subscribe cached topics', this.sessionCryptoInfoMap);\n                            log.reportLog('3. wallet connect connect subscribe cached topics');\n                            if (this.sessionCryptoInfoMap.size > 0) {\n                                yield this.subscribeTopics(Array.from(this.sessionCryptoInfoMap.keys()));\n                            }\n                        }\n                    }));\n                    log.logDebug(`2. login called`);\n                    log.reportLog('2. wallet connect login called');\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        return yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_LOGIN,\n                        params: {\n                            token: jwtToken\n                        }\n                    });\n                }));\n                this.connector.connect().catch((err) => {\n                    (0, log_1.logDebug)('WalletConnectionManager connect error', err);\n                    reject(err);\n                });\n                // add callback\n                this.connector.addPackageParse((event) => {\n                    var _a, _b;\n                    log.logDebug(`connect: parse package`);\n                    log.logDebug(event);\n                    if (!(\"params\" in event) || !(\"data\" in event[\"params\"])) {\n                        this.parsePackage(\"\", event, true);\n                        return;\n                    }\n                    // ignore receive echo\n                    if ((_a = event.params.data) === null || _a === void 0 ? void 0 : _a.topic) {\n                        this.parsePackage((_b = event.params.data) === null || _b === void 0 ? void 0 : _b.topic, event, event.method === commands_1.CONNECT_METHOD_RECEIVE);\n                    }\n                });\n                // this.connector.addListener(safeJsonStringify(event), (rawMsg: string)=> {\n                //    rawMsg = rawMsg.replace(/'/g, '\"')\n                //    log.logDebug(`addListener ===> ${rawMsg}`)\n                //    if (typeof rawMsg !== 'undefined') {\n                //       var msgObj = safeJsonParse(rawMsg)\n                //       var msg = msgObj.message\n                //       let crypto = \n                //       var result = this.crypto.decrypt(msg, this.connectedWalletPK)\n                //       log.logDebug(`addListener ===> ${result}`)\n                //       return result\n                //    }\n                //    return undefined\n                // }, ()=>{\n                //    // emit success\n                // }, ()=>{\n                //    // emit fail\n                // })\n            });\n        });\n    }\n    // 获取对应topic session下的钱包公钥\n    // 在返回approve时需要填充到clientId字段中\n    getSessionPublicKey(topicId) {\n        if (this.isTopicPublicKeyExist(topicId)) {\n            let item = this.sessionCryptoInfoMap.get(topicId);\n            if (item) {\n                return (0, utils_1.toHexString)(item.crypto.keyPair.publicKey);\n            }\n        }\n        return undefined;\n    }\n    getCurrentCachedTopicIdList() {\n        return Array.from(this.sessionCryptoInfoMap.keys());\n    }\n    disconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            yield this.connector.disconnect();\n            //clean cached topic\n            //如果是恢复连接，就不清理解密public key\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            if (!fromRestore) {\n                this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n            }\n        });\n    }\n    send(topic_1, msg_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, msg, needPublicKey = false, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL, useRaw = false) {\n            var _a, _b;\n            // make send msg payload\n            log.logDebug(`message send =====> ${msg}`);\n            if (!this.isTopicPublicKeyExist(topic)) {\n                // channel not ready\n                throw new Error('connection not finish');\n            }\n            let connectedDappPK = (_a = this.sessionCryptoInfoMap.get(topic)) === null || _a === void 0 ? void 0 : _a.dappPublicKey;\n            let cryptoObject = (_b = this.sessionCryptoInfoMap.get(topic)) === null || _b === void 0 ? void 0 : _b.crypto;\n            let messageObj = undefined;\n            if (useRaw) {\n                messageObj = {\n                    message: msg,\n                };\n            }\n            if (cryptoObject && connectedDappPK && !useRaw) {\n                let message = cryptoObject.encryptWallet(msg, connectedDappPK);\n                messageObj = {\n                    message: message,\n                };\n            }\n            if (messageObj) {\n                if (needPublicKey && cryptoObject) {\n                    messageObj.clientId = (0, utils_1.toHexString)(cryptoObject.keyPair.publicKey);\n                    // let privateKey = toHexString(cryptoObject.keyPair.secretKey)\n                    // log.logDebug(`message send use dapp publicKey =====> ${connectedDappPK}`)\n                    // log.logDebug(`message send use publicKey =====> ${messageObj.clientId}`)\n                    // log.logDebug(`message send use secretKey =====> ${privateKey}`)\n                }\n                this.refreshPackageId();\n                const payload = {\n                    id: this.packageId.toString(),\n                    method: commands_1.CONNECT_METHOD_PUBLISH,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    params: {\n                        message: {\n                            topic: topic,\n                            message: (0, safejson_1.safeJsonStringify)(messageObj),\n                            ttl: ttl\n                        }\n                    } // crypted\n                };\n                this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                    // ack\n                    if (rsp && rsp.error) {\n                        log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                    }\n                    else if (rsp && !rsp.error) {\n                        log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                    }\n                }));\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n                return this.packageId;\n            }\n        });\n    }\n    sendACK(msgId_1, success_1) {\n        return __awaiter(this, arguments, void 0, function* (msgId, success, reason = undefined) {\n            if (success === true) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    result: true\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n            else if (reason) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    error: {\n                        code: reason.code, //int\n                        message: reason.message\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    // send receive\n    sendReceive(msgId, messageId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECEIVE,\n                params: {\n                    data: {\n                        messageId: messageId,\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendUnsubscribe(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: make disconnect payload\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), {\n                id: this.packageId.toString(),\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_UNSUB,\n                params: {\n                    topic: topic\n                }\n            });\n            // remove topicId\n            this.sessionCryptoInfoMap.delete(topic);\n            this.syncCacheSessionInfo();\n        });\n    }\n    // send receive\n    // 1. fetch all \n    // 2. send back receive\n    // 3. check has more, if so, repeat from 1st step\n    sendFetchAndConsumeMessages(msgId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(msgId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic == topic) {\n                                let messageId = msg.messageId;\n                                yield this.connector.getMsgPayloadFromHistory(msg);\n                                // send receive command to relay server\n                                this.refreshPackageId();\n                                yield this.sendReceive(this.packageId.toString(), messageId, topic);\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_FETCHMSG,\n                params: {\n                    data: {\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendBatchFetchAndConsumeMessages(packageId, topicIdList) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(packageId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic) {\n                                let messageId = msg.messageId;\n                                yield this.connector.getMsgPayloadFromHistory(msg);\n                                // send receive command to relay server\n                                this.refreshPackageId(i);\n                                yield this.sendReceive(this.packageId.toString(), messageId, msg.topic);\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendBatchFetchAndConsumeMessages(this.packageId.toString(), topicIdList);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            log.reportLog('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: packageId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_BATCH_FETCHMSG,\n                params: {\n                    topics: topicIdList,\n                    withInternalData: true\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                yield this.connector.connect();\n            }), payload);\n        });\n    }\n    cleanCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.connectStorage.clearCache();\n        });\n    }\n    saveSessionContent(key, data) {\n        if (!data) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(data);\n        this.connectStorage.encryptStoreMsg(jsonData, storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n    }\n    getSessionContent(key) {\n        let jsonStr = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        if (jsonStr) {\n            let object = (0, safejson_1.safeJsonParse)(jsonStr);\n            return object;\n        }\n        return undefined;\n    }\n    // subscribe then fetch messages for each topics\n    subscribeTopics(topicIdList) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)(\"4. topicid list\", topicIdList);\n            log.reportLog(\"4. topicid list\");\n            this.refreshPackageId();\n            const timeF = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let finishCount = 0;\n                //3. send subscribe\n                for (let idx = 0; idx < topicIdList.length; ++idx) {\n                    let topicId = topicIdList[idx];\n                    this.refreshPackageId(idx);\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when subscribe');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // reject(error)\n                            finishCount += 1;\n                            if (finishCount == topicIdList.length) {\n                                resolve();\n                            }\n                        }\n                        this.refreshPackageId(idx);\n                        const timeF = new Date().getTime();\n                        (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n                        finishCount += 1;\n                        if (finishCount == topicIdList.length) {\n                            // 4. fetch messages\n                            log.logDebug(`5. send fetch msg: ${this.packageId}, ${topicId}`);\n                            yield this.sendBatchFetchAndConsumeMessages(this.packageId.toString(), topicIdList);\n                            resolve();\n                        }\n                    }));\n                    log.logDebug(`3. login callback then send subscribe: ${this.packageId}, ${topicId}`);\n                    log.reportLog('3. login callback then send subscribe');\n                    const timeTh = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---login callback->\", timeTh - this.timeLog);\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        return yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_SUB,\n                        params: {\n                            topic: topicId\n                        }\n                    });\n                }\n            }));\n        });\n    }\n}\nexports.WalletConnectionManager = WalletConnectionManager;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AppwalletConnector = void 0;\nconst ws_connector_1 = require(\"./ws-connector\");\nconst iconnector_1 = require(\"./iconnector\");\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../protocol/constants\");\nclass AppwalletConnector extends ws_connector_1.WsConnector {\n    static getConnector() {\n        if (!this.instance) {\n            this.instance = new AppwalletConnector();\n        }\n        return this.instance;\n    }\n    constructor() {\n        super();\n        this.walletName = 'OKX App';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectApp';\n    }\n    getTag() {\n        return iconnector_1.OKX_APP_WALLET;\n    }\n    openWallet(engineConnectInfo) {\n        var _a;\n        if (engineConnectInfo && engineConnectInfo.connectRequest) {\n            let connectRequest = engineConnectInfo.connectRequest;\n            (0, utils_1.logDebug)(`appwallet-connector openwallet before useSHortLink engineConnectInfo.connectRequest JSON ${JSON.stringify(engineConnectInfo)}`);\n            if ((0, utils_1.useShortLink)()) {\n                let shortUniversalLink = (0, utils_1.getOKXLink)(connectRequest);\n                (0, utils_1.openOKXUniversalLink)(shortUniversalLink);\n            }\n            else {\n                (0, utils_1.logDebug)(`appwallet-connector openwallet else connectRequest ${connectRequest}`);\n                let appConnectEncodeParams = (0, utils_1.encodeConnectParams)(Object.assign(Object.assign({}, connectRequest), { redirect: (_a = engineConnectInfo.redirect) !== null && _a !== void 0 ? _a : \"none\" }));\n                let appDeepLink = (0, utils_1.getAppWalletDeepLink)(appConnectEncodeParams);\n                (0, utils_1.openOKXDeeplinkWithFallback)(appDeepLink);\n            }\n        }\n        else {\n            if ((0, utils_1.isOS)('android')) {\n                (0, utils_1.openDeeplinkWithFallback)(constants_1.stackDeepLink, () => { });\n            }\n            else {\n                (0, utils_1.openLinkBlank)(constants_1.standardUniversalLink);\n            }\n        }\n    }\n}\nexports.AppwalletConnector = AppwalletConnector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_TG_WALLET = exports.OKX_APP_WALLET = exports.OKX_INJECT_WALLET = void 0;\nexports.OKX_INJECT_WALLET = \"okx_inject_wallet\";\nexports.OKX_APP_WALLET = \"okx_app_wallet\";\nexports.OKX_TG_WALLET = \"okx_tg_wallet\";\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OkxwalletInjectConnector = exports.WsConnector = exports.TgwalletConnector = exports.InjectConnector = exports.OKX_INJECT_WALLET = exports.OKX_APP_WALLET = exports.OKX_TG_WALLET = exports.AppwalletConnector = void 0;\nvar appwallet_connector_1 = require(\"./appwallet-connector\");\nObject.defineProperty(exports, \"AppwalletConnector\", { enumerable: true, get: function () { return appwallet_connector_1.AppwalletConnector; } });\nvar iconnector_1 = require(\"./iconnector\");\nObject.defineProperty(exports, \"OKX_TG_WALLET\", { enumerable: true, get: function () { return iconnector_1.OKX_TG_WALLET; } });\nObject.defineProperty(exports, \"OKX_APP_WALLET\", { enumerable: true, get: function () { return iconnector_1.OKX_APP_WALLET; } });\nObject.defineProperty(exports, \"OKX_INJECT_WALLET\", { enumerable: true, get: function () { return iconnector_1.OKX_INJECT_WALLET; } });\nvar inject_connector_1 = require(\"./inject-connector\");\nObject.defineProperty(exports, \"InjectConnector\", { enumerable: true, get: function () { return inject_connector_1.InjectConnector; } });\nvar tgwallet_connector_1 = require(\"./tgwallet-connector\");\nObject.defineProperty(exports, \"TgwalletConnector\", { enumerable: true, get: function () { return tgwallet_connector_1.TgwalletConnector; } });\nvar ws_connector_1 = require(\"./ws-connector\");\nObject.defineProperty(exports, \"WsConnector\", { enumerable: true, get: function () { return ws_connector_1.WsConnector; } });\nvar okxwallet_inject_connector_1 = require(\"./okxwallet-inject-connector\");\nObject.defineProperty(exports, \"OkxwalletInjectConnector\", { enumerable: true, get: function () { return okxwallet_inject_connector_1.OkxwalletInjectConnector; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InjectConnector = void 0;\nconst protocol_1 = require(\"../protocol\");\nconst utils_1 = require(\"../utils\");\nconst iconnector_1 = require(\"./iconnector\");\nconst SolProvider_1 = require(\"../inject/provider/SolProvider\");\nconst wallet_info_1 = require(\"../protocol/connect/wallet-info\");\nconst AptosProvider_1 = require(\"../inject/provider/AptosProvider\");\nconst media_1 = require(\"../utils/media\");\nconst TONProvider_1 = require(\"../inject/provider/TONProvider\");\nconst inject_1 = require(\"../inject\");\nconst sui_provider_1 = require(\"../inject/provider/sui-provider\");\nclass InjectConnector {\n    constructor() {\n        this.disconnectListener = [];\n        this.providerMap = new Map();\n        this.walletName = \"\";\n        this.walletNameKey = '';\n        this.enable = true;\n        this.providerMap.set(protocol_1.NameSpaceKeyEip155, new inject_1.Eip155Provider());\n        this.providerMap.set(protocol_1.NameSpaceKeySOL, new SolProvider_1.SolProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeyAptos, new AptosProvider_1.AptosProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeyTON, new TONProvider_1.TONProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeySui, new sui_provider_1.SuiProvider());\n    }\n    getInjectProvider(nameSpace) {\n        for (const [mapKey, value] of this.providerMap.entries()) {\n            if (nameSpace.includes(mapKey)) {\n                return value;\n            }\n        }\n        return undefined;\n    }\n    openWallet(engineConnectInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c;\n            (0, utils_1.logDebug)(\"InjectEngine connect begin:\", JSON.stringify(engineConnectInfo));\n            if (!engineConnectInfo) {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR);\n            }\n            var universalConnectRequest = engineConnectInfo.connectRequest;\n            try {\n                if (window && window.okxwallet) {\n                    if (universalConnectRequest.requests) {\n                        let requestAccounts = universalConnectRequest.requests\n                            .find(item => item.name === \"requestAccounts\");\n                        let version = yield window.okxwallet.getVersion();\n                        let result = {\n                            method: \"connect\",\n                            requestId: universalConnectRequest.requestId,\n                            payload: {\n                                wallet: {\n                                    platform: (_a = navigator.platform) !== null && _a !== void 0 ? _a : \"/\",\n                                    appName: wallet_info_1.OKXInjectWalletName,\n                                    appVersion: version !== null && version !== void 0 ? version : \"1.0.0\",\n                                    maxProtocolVersion: 1,\n                                },\n                                responses: []\n                            },\n                        };\n                        let responseItem = {\n                            name: \"requestAccounts\",\n                            accounts: [],\n                        };\n                        result.payload.responses.push(responseItem);\n                        yield this.disconnect();\n                        var accounts = yield this.getAccountByRequestWallets(true, (_b = requestAccounts.requiredNamespaces) !== null && _b !== void 0 ? _b : [], (_c = requestAccounts.optionalNamespaces) !== null && _c !== void 0 ? _c : []);\n                        if (accounts) {\n                            responseItem.accounts.push(...accounts);\n                            if (responseItem.accounts.length === 0) {\n                                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect connectAccounts is null\");\n                            }\n                        }\n                        else {\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect requestWallets is null\");\n                        }\n                        if (this.connectResultListener) {\n                            this.connectResultListener(result);\n                        }\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR);\n                }\n            }\n            catch (error) {\n                var code = protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR;\n                var message = '';\n                if (error instanceof protocol_1.OKXConnectError) {\n                    code = error.code;\n                    message = error.message;\n                }\n                if (this.connectResultListener) {\n                    this.connectResultListener({\n                        requestId: \"-1\",\n                        method: 'connect_error',\n                        payload: {\n                            code: code\n                        }\n                    });\n                }\n            }\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, utils_1.logDebug)('InjectEngine ==>> disconnect  okxwallet.disconnect()');\n            if (window.okxwallet) {\n                yield window.okxwallet.disconnect();\n                (0, utils_1.logDebug)('InjectEngine ==>> disconnect end okxwallet.disconnect()');\n            }\n        });\n    }\n    getRequestId() {\n        const requestId = Date.now().toString();\n        (0, utils_1.logDebug)('InjectEngine ==>> getRequestId ==>', requestId);\n        return requestId;\n    }\n    send(request, requestAnswer) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                (0, utils_1.logDebug)(\"InjectEngine send  > request:\", (0, utils_1.safeJsonStringify)(request));\n                let newRequest = request;\n                if (newRequest.method === 'disconnect') {\n                    yield this.disconnect();\n                    this.disconnectListener = [];\n                    (_a = requestAnswer.onAck) === null || _a === void 0 ? void 0 : _a.call(requestAnswer);\n                    return;\n                }\n                const injectProvider = this.getInjectProvider(newRequest.chainId);\n                if (injectProvider) {\n                    injectProvider.send(newRequest).then(result => {\n                        var _a;\n                        (0, utils_1.logDebug)(\"InjectEngine ==>> send > result:\", result);\n                        (_a = requestAnswer.resolve) === null || _a === void 0 ? void 0 : _a.call(requestAnswer, result);\n                    }).catch(error => {\n                        var _a;\n                        let code = error.code;\n                        if (code === 4001) {\n                            code = protocol_1.OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR;\n                        }\n                        let errorResponse = {\n                            requestId: this.getRequestId(),\n                            method: request.method,\n                            error: {\n                                code: code,\n                                message: error.message\n                            }\n                        };\n                        (0, utils_1.logDebug)(\"InjectEngine ==>> send > errorResponse:\", JSON.stringify(errorResponse));\n                        (_a = requestAnswer.resolve) === null || _a === void 0 ? void 0 : _a.call(requestAnswer, errorResponse);\n                    });\n                    return;\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"InjectEngine ==>> send  ===> error:\", error);\n                return Promise.reject(error);\n            }\n        });\n    }\n    clearData() {\n        this.connectResultListener = undefined;\n    }\n    addDisconnectListener(disconnecter) {\n        this.disconnectListener.push(disconnecter);\n    }\n    setOnConnectResultListener(connectResultListener) {\n        this.connectResultListener = connectResultListener;\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (_ = false) {\n        });\n    }\n    getCurrentConnectionReady(namespaceKeys) {\n        if (!namespaceKeys) {\n            return false;\n        }\n        const allReady = namespaceKeys.every(namespaceKey => { var _a; return (_a = this.getInjectProvider(namespaceKey)) === null || _a === void 0 ? void 0 : _a.connectReady(); });\n        return allReady;\n    }\n    getTag() {\n        return iconnector_1.OKX_INJECT_WALLET;\n    }\n    toJSON() {\n        return \"inject-connector\";\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        if (!window.okxwallet) {\n            onConnectResult(null);\n            return;\n        }\n        (0, utils_1.logDebug)(\"inject-connector restoreconnect --sessionInfo:\", JSON.stringify(sessionInfo));\n        var requiredNamespaces = [];\n        for (let namespacesKey in sessionInfo.namespaces) {\n            var connectWalletNameSpace = {\n                namespace: namespacesKey,\n                chains: sessionInfo.namespaces[namespacesKey].chains\n            };\n            requiredNamespaces.push(connectWalletNameSpace);\n        }\n        (0, utils_1.logDebug)(\"inject-connector restoreconnect --requiredNamespaces:\", JSON.stringify(requiredNamespaces));\n        var currentWallet = this.getAccountByRequestWallets(false, requiredNamespaces, [])\n            .then((accounts) => {\n            (0, utils_1.logDebug)(\"inject-connector restoreconnect --accounts:\", JSON.stringify(accounts));\n            //compare account with sessionInfo\n            for (let namespacesKey in sessionInfo.namespaces) {\n                var accountsItem = accounts.find((item) => item.namespace === namespacesKey);\n                var sessionAccounts = sessionInfo.namespaces[namespacesKey].accounts;\n                if (!accountsItem) {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"resotreconnect error: accountItem error\");\n                }\n                const areEqual = accountsItem.addresses.length === sessionAccounts.length &&\n                    accountsItem.addresses.slice().sort().every((value, index) => value === sessionAccounts.slice().sort()[index]);\n                if (areEqual) {\n                    onConnectResult(sessionInfo);\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"resotreconnect error: address not as same as session\");\n                }\n            }\n        }).catch((e) => {\n            onConnectResult(null);\n        });\n    }\n    getAccountByRequestWallets(needPop, requiredNamespaces, optionalNamespaces) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                var walletInfo = [];\n                var accountResult = [];\n                if ((0, media_1.isDevice)(\"mobile\")) {\n                    var walletInfoItem = yield window.okxwallet.connectWallet(needPop, {\n                        requiredNamespaces: requiredNamespaces,\n                        optionalNamespaces: optionalNamespaces\n                    });\n                    walletInfo.push(walletInfoItem);\n                }\n                else {\n                    walletInfo = (yield window.okxwallet.requestWallets(needPop));\n                }\n                var allNameSpace = [...(requiredNamespaces !== null && requiredNamespaces !== void 0 ? requiredNamespaces : []), ...(optionalNamespaces !== null && optionalNamespaces !== void 0 ? optionalNamespaces : [])];\n                let walletInfoFirst = walletInfo[0];\n                (0, utils_1.logDebug)(\"InjectEngine connect connectAccounts:\", JSON.stringify(walletInfoFirst));\n                if (allNameSpace && walletInfoFirst && walletInfoFirst.address) {\n                    for (const [mapKey, provider] of this.providerMap.entries()) {\n                        let itemResult = yield provider.parseConnectResponse(needPop, allNameSpace, walletInfoFirst);\n                        if (itemResult) {\n                            accountResult.push(itemResult);\n                        }\n                    }\n                }\n                // check require\n                let cheeckRequire = requiredNamespaces.every(requireItem => {\n                    // requireItem.namespace\n                    let resultSel = accountResult.find(resultItem => {\n                        return resultItem.namespace === requireItem.namespace;\n                    });\n                    if (resultSel) {\n                        let hasChainAdd = requireItem.chains.every(chain => {\n                            let addItem = resultSel.addresses.find(address => {\n                                return address.startsWith(chain + \":\");\n                            });\n                            return !!addItem;\n                        });\n                        return hasChainAdd;\n                    }\n                    return false;\n                });\n                (0, utils_1.logDebug)(\"InjectEngine connect requiredNamespaces:\", JSON.stringify(requiredNamespaces));\n                (0, utils_1.logDebug)(\"InjectEngine connect accountResult:\", JSON.stringify(accountResult));\n                if (!cheeckRequire) {\n                    yield window.okxwallet.disconnect();\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED);\n                }\n                if (!(0, media_1.isDevice)(\"mobile\")) {\n                    yield window.okxwallet.requestWallets(needPop);\n                }\n                if (window.okxwallet) {\n                    window.okxwallet.on('accountsChanged', (accounts) => {\n                        (0, utils_1.logDebug)(\"Accounts Changed----->\", JSON.stringify(accounts));\n                        if (accounts && accounts.length === 0) {\n                            this.disconnectListener.forEach(listener => listener());\n                            this.disconnectListener = [];\n                        }\n                    });\n                }\n                return accountResult;\n            }\n            catch (e) {\n                if (e && typeof e === \"object\" && \"code\" in e) {\n                    if (e.code === 4001) {\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR);\n                    }\n                }\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n            }\n        });\n    }\n}\nexports.InjectConnector = InjectConnector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OkxwalletInjectConnector = void 0;\nconst inject_connector_1 = require(\"./inject-connector\");\nclass OkxwalletInjectConnector extends inject_connector_1.InjectConnector {\n    static getConnector() {\n        if (!this.instance) {\n            this.instance = new OkxwalletInjectConnector();\n        }\n        return this.instance;\n    }\n    constructor() {\n        super();\n        this.walletName = 'OKX Wallet extension';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectInjected';\n    }\n}\nexports.OkxwalletInjectConnector = OkxwalletInjectConnector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TgwalletConnector = void 0;\nconst ws_connector_1 = require(\"./ws-connector\");\nconst iconnector_1 = require(\"./iconnector\");\nconst utils_1 = require(\"../utils\");\nclass TgwalletConnector extends ws_connector_1.WsConnector {\n    static getConnector() {\n        if (!this.instance) {\n            this.instance = new TgwalletConnector();\n        }\n        return this.instance;\n    }\n    constructor() {\n        super();\n        this.walletName = 'OKX Mini Wallet';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectMini';\n    }\n    getTag() {\n        return iconnector_1.OKX_TG_WALLET;\n    }\n    openWallet(engineConnectInfo) {\n        var _a;\n        var encodeTGParams;\n        if (engineConnectInfo && engineConnectInfo.connectRequest) {\n            encodeTGParams = (0, utils_1.encodeTWAConnectURLParams)(Object.assign(Object.assign({}, engineConnectInfo.connectRequest), { redirect: \"none\" }));\n        }\n        var tgUrl = (0, utils_1.getTelegramWalletTWAUrl)(encodeTGParams, (_a = engineConnectInfo === null || engineConnectInfo === void 0 ? void 0 : engineConnectInfo.tmaReturnUrl) !== null && _a !== void 0 ? _a : \"back\");\n        (0, utils_1.openOKXTMAWalletlinkWithFallback)(tgUrl);\n    }\n}\nexports.TgwalletConnector = TgwalletConnector;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WsConnector = void 0;\nconst safejson_1 = require(\"../utils/safejson\");\nconst log_1 = require(\"../utils/log\");\nclass WsConnector {\n    constructor() {\n        this.disconnectListener = [];\n        this.walletName = '';\n        this.walletNameKey = '';\n        this.enable = true;\n        this.pendingRequests = new Map();\n        // report api begin\n        (0, log_1.getDefaultReporter)().beginReport();\n    }\n    setConnectionManager(connectionManager) {\n        this.connectionManager = connectionManager;\n    }\n    addConnectionListener() {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.addListener(\"sdk_response\", (event, msg) => {\n            var jsonResponse = (0, safejson_1.safeJsonParse)(msg);\n            (0, log_1.logDebug)(`Engine ==>> addListener ==> success ==> ${jsonResponse}`);\n            this.handleResponse(event, jsonResponse);\n        }, function () {\n        });\n    }\n    addDisconnectListener(disconnecter) {\n        this.disconnectListener.push(disconnecter);\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.disconnect(fromRestore));\n        });\n    }\n    openWallet(engineConnectInfo) {\n    }\n    bindRequestForPromise(requestId, resolve) {\n        this.pendingRequests.set(requestId, resolve);\n    }\n    send(request, requestAnswer, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            (0, log_1.logDebug)('Engine ==>> send  request==>', JSON.stringify(request));\n            const requestId = this.getRequestId();\n            try {\n                let packageId = yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.send(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId })), ttl));\n                if (packageId) {\n                    (_b = this.connectionManager) === null || _b === void 0 ? void 0 : _b.events.once(packageId.toString(), (event) => {\n                        var _a;\n                        (0, log_1.logDebug)(`Engine ==> send => onAck => ${(0, safejson_1.safeJsonStringify)(event)}`);\n                        if (event && event.result) {\n                            (_a = requestAnswer.onAck) === null || _a === void 0 ? void 0 : _a.call(requestAnswer);\n                        }\n                    });\n                }\n                if (requestAnswer.resolve) {\n                    this.bindRequestForPromise(requestId, requestAnswer.resolve);\n                }\n            }\n            catch (e) {\n                return Promise.reject(e);\n            }\n        });\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.restoreConnect(sessionInfo.topic));\n            onConnectResult(sessionInfo);\n        });\n    }\n    restoreconnectFromTopic(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.restoreConnect(topic));\n        });\n    }\n    getRequestId() {\n        const requestId = Date.now().toString();\n        (0, log_1.logDebug)('Engine ==>> getRequestId ==>', requestId);\n        return requestId;\n    }\n    handleResponse(event, response) {\n        (0, log_1.logDebug)(`Engine ==>> handleResponse_1  ======>response: ${(0, safejson_1.safeJsonStringify)(response)}`, event);\n        if (\"requestId\" in response) {\n            (0, log_1.logDebug)(\"Engine ==>> handleResponse_2  ===> in response\");\n            let requestId = response.requestId;\n            const resolve = this.pendingRequests.get(requestId);\n            if (resolve) {\n                (0, log_1.logDebug)(\"Engine ==>> handleResponse_3  ===> find resolve:\", resolve);\n                resolve(response);\n                // 从pendingRequests中删除这个Promise\n                this.pendingRequests.delete(requestId);\n            }\n            else {\n                (0, log_1.logDebug)(\"Engine ==>> handleResponse_3  ===> not find resolve:\");\n                if (response.method === \"disconnect\") {\n                    this.disconnectListener.forEach(listener => listener());\n                    this.disconnectListener = [];\n                    this.clearData();\n                }\n            }\n        }\n    }\n    getCurrentConnectionReady() {\n        var _a;\n        return !!((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getCurrentConnectionReady());\n    }\n    saveSessionContent(key, data) {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.saveSessionContent(key, data);\n    }\n    getSessionContent(key) {\n        var _a;\n        return (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getSessionContent(key);\n    }\n    setOnConnectResultListener(connectResultListener) {\n        this.connectResultListener = connectResultListener;\n    }\n    getTag() {\n        return \"\";\n    }\n    toJSON() {\n        return \"ws-connector\";\n    }\n    clearData() {\n        this.pendingRequests.clear();\n    }\n}\nexports.WsConnector = WsConnector;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SessionCrypto = void 0;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst utils_1 = require(\"../utils/utils\");\nclass SessionCrypto {\n    constructor(keyPair = undefined) {\n        this.nonceLength = 24;\n        this.sessionKeyPair = keyPair ? this.createKeypairFromString(keyPair) : this.createKeypair();\n    }\n    createKeypair() {\n        return tweetnacl_1.default.box.keyPair();\n    }\n    createKeypairFromString(keyPair) {\n        return {\n            publicKey: (0, utils_1.hexToByteArray)(keyPair.publicKey),\n            secretKey: (0, utils_1.hexToByteArray)(keyPair.secretKey),\n        };\n    }\n    createNonce() {\n        return tweetnacl_1.default.randomBytes(this.nonceLength);\n    }\n    get keyPair() {\n        return this.sessionKeyPair;\n    }\n    // dapp 加密:\n    // base64(hex（nonce+加密内容）)\n    encrypt(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl_1.default.box(encodedMessage, nonce, (0, utils_1.hexToByteArray)(receiverPublicKey), this.keyPair.secretKey);\n        let concatInfo = (0, utils_1.concatUint8Arrays)(nonce, encrypted);\n        var hexResult = (0, utils_1.toHexString)(concatInfo);\n        var encodedResult = new TextEncoder().encode(hexResult);\n        return (0, utils_1.base64encode)(encodedResult, false);\n    }\n    // 钱包加密内容\n    // 注意：没有中间hex的环节\n    // base64（nonce+加密内容)\n    encryptWallet(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl_1.default.box(encodedMessage, nonce, (0, utils_1.hexToByteArray)(receiverPublicKey), this.keyPair.secretKey);\n        let concatInfo = (0, utils_1.concatUint8Arrays)(nonce, encrypted);\n        return (0, utils_1.base64encode)(concatInfo, false);\n    }\n    // dapp 解密\n    // base64(split(nonce+加密内容))\n    decrypt(message, senderPublicKey) {\n        let base64Content = (0, utils_1.base64decode)(message, true);\n        let messageByteArray = base64Content.toUint8Array();\n        const [nonce, internalMessage] = (0, utils_1.splitToUint8Arrays)(messageByteArray, this.nonceLength);\n        const decrypted = tweetnacl_1.default.box.open(internalMessage, nonce, (0, utils_1.hexToByteArray)(senderPublicKey), this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${(0, utils_1.toHexString)(this.keyPair.publicKey)} \\n keypair secretkey: ${(0, utils_1.toHexString)(this.keyPair.secretKey)}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    // dapp 解密\n    // base64(hextoByte(split(nonce+加密内容)))\n    decryptWallet(message, senderPublicKey) {\n        let base64Content = (0, utils_1.base64decode)(message, true);\n        let messageByteArray = (0, utils_1.hexToByteArray)(base64Content.toString());\n        const [nonce, internalMessage] = (0, utils_1.splitToUint8Arrays)(messageByteArray, this.nonceLength);\n        const decrypted = tweetnacl_1.default.box.open(internalMessage, nonce, (0, utils_1.hexToByteArray)(senderPublicKey), this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${(0, utils_1.toHexString)(this.keyPair.publicKey)} \\n keypair secretkey: ${(0, utils_1.toHexString)(this.keyPair.secretKey)}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    stringifyKeypair() {\n        return {\n            publicKey: (0, utils_1.toHexString)(this.keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(this.keyPair.secretKey)\n        };\n    }\n}\nexports.SessionCrypto = SessionCrypto;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./connect\"), exports);\n__exportStar(require(\"./protocol\"), exports);\n__exportStar(require(\"./utils\"), exports);\n__exportStar(require(\"./inject\"), exports);\n__exportStar(require(\"./connector\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuiMethods = exports.TONMethods = exports.AptosMethods = exports.SOLANAMethods = exports.Eip55Methods = void 0;\nexports.hasOKXInjectedProvider = hasOKXInjectedProvider;\nfunction hasOKXInjectedProvider() {\n    if (typeof getWindowProviderNamespace(\"okxwallet\") !== 'undefined') {\n        return true;\n    }\n    return false;\n}\nfunction getWindowProviderNamespace(namespace) {\n    const providerSearch = (provider, namespace) => {\n        const [property, ...path] = namespace.split('.');\n        const _provider = provider[property];\n        if (_provider) {\n            if (path.length === 0)\n                return _provider;\n            return providerSearch(_provider, path.join('.'));\n        }\n    };\n    if (typeof window !== 'undefined')\n        return providerSearch(window, namespace);\n}\nexports.Eip55Methods = [\n    \"personal_sign\",\n    \"eth_signTypedData_v4\",\n    \"eth_sendTransaction\",\n    \"wallet_addEthereumChain\",\n    \"wallet_watchAsset\",\n    \"wallet_switchEthereumChain\",\n    \"eth_requestAccounts\",\n    \"eth_accounts\",\n    \"eth_chainId\"\n];\nexports.SOLANAMethods = [\n    \"solana_signTransaction\",\n    \"solana_signMessage\",\n    \"solana_signAllTransactions\",\n    \"solana_signAndSendTransaction\"\n];\nexports.AptosMethods = [\n    \"aptos_signMessage\",\n    \"aptos_signTransaction\",\n    \"aptos_signAndSubmitTransaction\"\n];\nexports.TONMethods = [\n    \"ton_sendTransaction\",\n];\nexports.SuiMethods = [\n    \"sui_signMessage\",\n    \"sui_signPersonalMessage\",\n    \"sui_signTransactionBlock\",\n    \"sui_signAndExecuteTransactionBlock\"\n];\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./InjectUtils\"), exports);\n__exportStar(require(\"./provider\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AptosProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nconst media_1 = require(\"../../utils/media\");\nclass AptosProvider {\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                (0, utils_1.logDebug)(\"AptosProvider send request:\", (0, utils_1.safeJsonStringify)(request));\n                yield this.restoreConnect();\n                const method = request.method;\n                let result;\n                switch (method) {\n                    case \"aptos_signMessage\":\n                        {\n                            if (request.injectParams) {\n                                let message = yield window.okxwallet.aptos.signMessage(request.injectParams);\n                                result = {\n                                    method: request.method,\n                                    result: message.signature,\n                                };\n                                (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                                return result;\n                            }\n                            else {\n                                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                            }\n                        }\n                        break;\n                    case \"aptos_signTransaction\":\n                        {\n                            (0, utils_1.logDebug)(\"AptosProvider Method>>>> :\", method);\n                            let message = yield window.okxwallet.aptos.signTransaction(request.params);\n                            result = {\n                                method: request.method,\n                                result: message,\n                            };\n                            (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                            return result;\n                        }\n                        break;\n                    case \"aptos_signAndSubmitTransaction\":\n                        {\n                            (0, utils_1.logDebug)(\"AptosProvider Method>>>> :\", method);\n                            let message = yield window.okxwallet.aptos.signAndSubmitTransaction(request.params);\n                            result = {\n                                method: request.method,\n                                result: message.hash,\n                            };\n                            (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                            return result;\n                        }\n                        break;\n                    default:\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, ` method: '${method}'`);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"AptosProvider send error:\", error);\n                throw error;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    disconnect() {\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return window.okxwallet.aptos.connect();\n        }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, connectWalletNameSpace, connectRequestWalletResponse) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let connectChain = [];\n            connectWalletNameSpace.forEach(item => {\n                if (item.namespace === protocol_1.NameSpaceKeyAptos) {\n                    connectChain.push(...item.chains);\n                }\n            });\n            let addresses = [];\n            let extra = {};\n            (0, utils_1.logDebug)(\"AptosProvider parseConnectResponse connectChain\", JSON.stringify(connectChain));\n            connectChain.forEach((chainStr) => {\n                let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                    return (addressItem.chainId === \"637\" && addressItem.coinType === 637) || (addressItem.namespaceChainId === chainStr);\n                });\n                if (selectedAddress) {\n                    addresses.push(chainStr + \":\" + selectedAddress.address);\n                    extra[chainStr] = {\n                        publicKey: selectedAddress.publicKey\n                    };\n                }\n            });\n            (0, utils_1.logDebug)(\"AptosProvider parseConnectResponse addresses\", JSON.stringify(addresses));\n            if (addresses && addresses.length > 0) {\n                let nameSpaceResponse = {\n                    namespace: protocol_1.NameSpaceKeyAptos,\n                    addresses: addresses,\n                    methods: [...InjectUtils_1.AptosMethods],\n                    extra: extra\n                };\n                return nameSpaceResponse;\n            }\n            return undefined;\n        });\n    }\n}\nexports.AptosProvider = AptosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass SolProvider {\n    // TOOD\n    // 问题: 是否需要切链  不切链, 主网 测试网络  sonic 如何区别\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                yield this.restoreConnect();\n                (0, utils_1.logDebug)(\"SolProvider send request:\", JSON.stringify(request));\n                const method = request.method;\n                let result;\n                if (request.injectParams) {\n                    switch (method) {\n                        case \"solana_signMessage\":\n                            {\n                                if (request.injectParams && typeof request.injectParams === 'object' && 'message' in request.injectParams) {\n                                    var message = (_a = request.injectParams) === null || _a === void 0 ? void 0 : _a.message;\n                                    const encodedMessage = new TextEncoder().encode(message);\n                                    const signedMessage = yield window.okxwallet.solana.signMessage(encodedMessage, \"utf8\");\n                                    result = {\n                                        method: request.method,\n                                        result: bs58_1.default.encode(signedMessage.signature),\n                                    };\n                                    (0, utils_1.logDebug)(\"SolProvider send result:\", JSON.stringify(signedMessage));\n                                    return result;\n                                }\n                                else {\n                                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                                }\n                            }\n                            break;\n                        case \"solana_signTransaction\":\n                            {\n                                let bufferResult = yield window.okxwallet.solana.signTransaction(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send bufferResult:\", JSON.stringify(bufferResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: bufferResult,\n                                };\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                                return result;\n                            }\n                            break;\n                        case \"solana_signAllTransactions\":\n                            {\n                                let allResult = yield window.okxwallet.solana.signAllTransactions(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(allResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: allResult,\n                                };\n                                return result;\n                            }\n                            break;\n                        case \"solana_signAndSendTransaction\":\n                            {\n                                var signAndSendResult = yield window.okxwallet.solana.signAndSendTransaction(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(signAndSendResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: signAndSendResult,\n                                };\n                                return result;\n                            }\n                            break;\n                        default:\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, `method: '${method}'`);\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"SolProvider send error:\", error);\n                throw error;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    disconnect() {\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            const provider = window.okxwallet.solana;\n            return provider.connect();\n        }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, connectWalletNameSpace, connectRequestWalletResponse) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let connectChain = [];\n            connectWalletNameSpace.forEach(item => {\n                if (item.namespace === protocol_1.NameSpaceKeySOL) {\n                    connectChain.push(...item.chains);\n                }\n            });\n            let addresses = [];\n            let extra = {};\n            let accounts = {};\n            // if (!isDevice(\"mobile\")){\n            //      accounts = await window.okxwallet.solana.connect()\n            //     logDebug(\"parseConnectResponse solana.connect() :\",JSON.stringify(accounts))\n            // }\n            connectChain.forEach((chainStr) => {\n                let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                    return (addressItem.chainId === \"501\" && addressItem.coinType === 501)\n                        || (addressItem.namespaceChainId === chainStr);\n                });\n                if (selectedAddress) {\n                    addresses.push(chainStr + \":\" + selectedAddress.address);\n                    if (accounts && \"publicKey\" in accounts) {\n                        extra[chainStr] = accounts;\n                    }\n                    else {\n                        extra[chainStr] = {\n                            publicKey: selectedAddress.publicKey\n                        };\n                    }\n                }\n            });\n            if (addresses && addresses.length > 0) {\n                let nameSpaceResponse = {\n                    namespace: protocol_1.NameSpaceKeySOL,\n                    addresses: addresses,\n                    methods: [...InjectUtils_1.SOLANAMethods],\n                    extra: extra\n                };\n                (0, utils_1.logDebug)(\"parseConnectResponse nameSpaceResponse :\", JSON.stringify(nameSpaceResponse));\n                return nameSpaceResponse;\n            }\n            return undefined;\n        });\n    }\n}\nexports.SolProvider = SolProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TONProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass TONProvider {\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                (0, utils_1.logDebug)(\"TONProvider send request:\", (0, utils_1.safeJsonStringify)(request));\n                // await this.restoreConnect()//To initialize data in Discover\n                let tonParams = null;\n                switch (request.method) {\n                    case \"ton_sendTransaction\":\n                        if (request.params) {\n                            tonParams = {\n                                method: \"sendTransaction\",\n                                params: [JSON.stringify(request.params)],\n                                id: Date.now().toString()\n                            };\n                            (0, utils_1.logDebug)(\"TONProvider tonParams first:\", JSON.stringify(tonParams));\n                        }\n                        break;\n                    default:\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n                if (tonParams) {\n                    const resultMe = yield window.okxTonWallet.tonconnect.send(tonParams);\n                    (0, utils_1.logDebug)(\"TONProvider send request result:\", (0, utils_1.safeJsonStringify)(resultMe));\n                    if (resultMe.error) {\n                        throw new protocol_1.OKXConnectError(resultMe.error.code, resultMe.error.message);\n                    }\n                    return {\n                        result: resultMe.result,\n                        method: request.method,\n                    };\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"Eip155Provider encountered an error:\", error);\n                throw error;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    restoreConnect() {\n        // if (isDevice(\"mobile\") && window.okxTonWallet){\n        //     return  window.okxTonWallet.tonconnect.restoreConnection()\n        // }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, connectWalletNameSpace, connectRequestWalletResponse) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeyTON) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                connectChain.forEach((chainStr) => {\n                    let currentChain = (0, utils_1.getChainId)(chainStr);\n                    let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                        return (addressItem.chainId === \"607\" && addressItem.coinType === 607)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                    if (selectedAddress) {\n                        addresses.push(chainStr + \":\" + selectedAddress.address);\n                        extra[chainStr] = {\n                            publicKey: selectedAddress.publicKey\n                        };\n                    }\n                });\n                (0, utils_1.logDebug)(\"tonprovider parseConnectResponse needPop and addresses: \", needPop, JSON.stringify(addresses));\n                if (addresses && addresses.length > 0) {\n                    let ton = connectWalletNameSpace.find(tonItem => {\n                        return tonItem.namespace === protocol_1.NameSpaceKeyTON;\n                    });\n                    (0, utils_1.logDebug)(\"tonprovider parseConnectResponse ton: \", JSON.stringify(ton));\n                    let tonResult = undefined;\n                    if (needPop) { //connect\n                        (0, utils_1.logDebug)(\"parseConnectResponse ton: \", JSON.stringify(ton));\n                        if (ton && ton.params && ton.params.manifestUrl) {\n                            let itmes = [ton.params.ton_addr];\n                            let params = {\n                                manifestUrl: ton.params.manifestUrl,\n                                items: itmes\n                            };\n                            if (ton.params.ton_proof) {\n                                itmes.push(ton.params.ton_proof);\n                            }\n                            (0, utils_1.logDebug)(\"parseConnectResponse ton connect params: \", JSON.stringify(params));\n                            tonResult = (yield window.okxTonWallet.tonconnect.connect(2, params));\n                        }\n                        else {\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"manifestUrl is nil\");\n                        }\n                    }\n                    else { //restore connect\n                        (0, utils_1.logDebug)(\"parseConnectResponse restore ton: \", JSON.stringify(ton));\n                        if ((0, media_1.isDevice)(\"mobile\")) {\n                            let params = {\n                                manifestUrl: \"url\",\n                                items: [{ \"name\": \"ton_addr\" }]\n                            };\n                            (0, utils_1.logDebug)(\"parseConnectResponse ton mobile  connect params>>\", JSON.stringify(params));\n                            tonResult = (yield window.okxTonWallet.tonconnect.connect(2, params));\n                        }\n                        else {\n                            tonResult = (yield window.okxTonWallet.tonconnect.restoreConnection());\n                        }\n                    }\n                    (0, utils_1.logDebug)(\"parseConnectResponse ton connect result: \", JSON.stringify(tonResult));\n                    if (tonResult) {\n                        if (tonResult.event === \"connect_error\") {\n                            throw new protocol_1.OKXConnectError(tonResult.payload.code, tonResult.payload.message);\n                        }\n                        else {\n                            let ton_addr = tonResult.payload.items.find(item => item.name === \"ton_addr\");\n                            let ton_proof = tonResult.payload.items.find(item => item.name === \"ton_proof\");\n                            let nameSpaceResponse = {\n                                namespace: protocol_1.NameSpaceKeyTON,\n                                addresses: addresses,\n                                methods: [...InjectUtils_1.TONMethods],\n                                extra: extra,\n                                data: {\n                                    ton_addr: ton_addr,\n                                    ton_proof: ton_proof\n                                }\n                            };\n                            return nameSpaceResponse;\n                        }\n                    }\n                }\n                return undefined;\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"tonprovider parseConnectResponse error: \", JSON.stringify(error));\n                throw error;\n            }\n        });\n    }\n}\nexports.TONProvider = TONProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Eip155Provider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass Eip155Provider {\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                (0, utils_1.logDebug)(\"Eip155Provider send request:\", (0, utils_1.safeJsonStringify)(request));\n                yield this.restoreConnect(); //To initialize data in Discover\n                let ethParams = null;\n                switch (request.method) {\n                    case \"personal_sign\":\n                        if (request.params && \"message\" in request.params) {\n                            ethParams = {\n                                method: request.method,\n                                params: [\n                                    request.params.message,\n                                    request.address,\n                                ],\n                            };\n                        }\n                        break;\n                    case \"eth_sendTransaction\":\n                    case \"wallet_addEthereumChain\":\n                    case \"wallet_switchEthereumChain\":\n                        {\n                            if (request.params) {\n                                ethParams = {\n                                    method: request.method,\n                                    params: [request.params],\n                                };\n                            }\n                        }\n                        break;\n                    case \"eth_signTypedData_v4\":\n                        {\n                            if (request.params && \"typedDataJson\" in request.params && ((_a = request.params) === null || _a === void 0 ? void 0 : _a.typedDataJson) && typeof request.params.typedDataJson === \"string\") {\n                                ethParams = {\n                                    method: request.method,\n                                    params: [\n                                        request.address,\n                                        request.params.typedDataJson,\n                                    ],\n                                };\n                            }\n                        }\n                        break;\n                    case \"wallet_watchAsset\":\n                        {\n                            if (request.params) {\n                                ethParams = {\n                                    method: request.method,\n                                    params: request.params,\n                                };\n                            }\n                        }\n                        break;\n                    default:\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n                if (ethParams) {\n                    // 特殊处理 \"wallet_switchEthereumChain\"\n                    if ((request.method === \"wallet_switchEthereumChain\" || request.method === \"wallet_addEthereumChain\")\n                        && request.params\n                        && \"chainId\" in request.params) {\n                        (0, utils_1.logDebug)(\"Eip155Provider send request switch requestParams:\", (0, utils_1.safeJsonStringify)(ethParams));\n                        const switchChainId = parseInt(request.params.chainId, 16).toString();\n                        yield window.okxwallet.request(ethParams);\n                        const resultSwitch = `eip155:${switchChainId}:${request.address}`;\n                        (0, utils_1.logDebug)(\"Eip155Provider send request switch result:\", resultSwitch);\n                        return {\n                            result: resultSwitch,\n                            method: request.method,\n                        };\n                    }\n                    else {\n                        const chain = (0, utils_1.getChainId)(request.chainId);\n                        const chainHex = `0x${Number(chain).toString(16)}`;\n                        (0, utils_1.logDebug)(\"Eip155Provider current chainId:\", chain, chainHex);\n                        if (chainHex) {\n                            yield window.okxwallet.request({\n                                method: \"wallet_switchEthereumChain\",\n                                params: [{ chainId: chainHex }],\n                            });\n                            (0, utils_1.logDebug)(\"Eip155Provider send request requestParams:\", chainHex, (0, utils_1.safeJsonStringify)(ethParams));\n                            const resultMe = yield window.okxwallet.request(ethParams);\n                            (0, utils_1.logDebug)(\"Eip155Provider send request result:\", (0, utils_1.safeJsonStringify)(resultMe));\n                            return {\n                                result: resultMe,\n                                method: request.method,\n                            };\n                        }\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"Eip155Provider encountered an error:\", error);\n                throw error;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return window.okxwallet.request({ method: 'eth_requestAccounts' });\n        }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, connectWalletNameSpace, connectRequestWalletResponse) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeyEip155) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                connectChain.forEach((chainStr) => {\n                    let currentChain = (0, utils_1.getChainId)(chainStr);\n                    let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                        return (addressItem.chainId === currentChain && addressItem.coinType === 60)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                    if (selectedAddress) {\n                        addresses.push(chainStr + \":\" + selectedAddress.address);\n                        extra[chainStr] = {\n                            publicKey: selectedAddress.publicKey\n                        };\n                    }\n                });\n                if (addresses && addresses.length > 0) {\n                    let nameSpaceResponse = {\n                        namespace: protocol_1.NameSpaceKeyEip155,\n                        addresses: addresses,\n                        methods: [...InjectUtils_1.Eip55Methods],\n                        extra: extra\n                    };\n                    return nameSpaceResponse;\n                }\n                return undefined;\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n}\nexports.Eip155Provider = Eip155Provider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./eip155Provider\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuiProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass SuiProvider {\n    constructor() {\n        // const GlobalWallet: {\n        //     [key: string]: any;\n        //     register: (wallet: any) => void;\n        // } = {\n        //     register: (wallet) => {\n        //         GlobalWallet[wallet.chainName] = wallet; // 动态添加属性\n        //     },\n        // }\n        // const event = new CustomEvent('wallet-standard:app-ready', { detail: GlobalWallet });\n        // window.dispatchEvent(event);\n        // this.suiWallet = GlobalWallet[\"suiMainnet\"]\n        this.suiWallet = window.okxwallet.sui;\n    }\n    connectReady() {\n        return true;\n    }\n    getSuiPublicKey() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const suiAccount = yield this.suiWallet.features['standard:connect'].connect();\n            let publicKey = suiAccount.accounts[0].publicKey;\n            return publicKey;\n        });\n    }\n    parseConnectResponse(needPop, connectWalletNameSpace, connectRequestWalletResponse) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeySui) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                if (connectChain.length == 0) {\n                    return undefined;\n                }\n                const suiPublicKey = yield this.getSuiPublicKey();\n                connectChain.forEach((chainStr) => {\n                    var _a;\n                    let currentChain = (0, utils_1.getChainId)(chainStr);\n                    let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                        return (addressItem.coinType === 784)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                    if (selectedAddress) {\n                        addresses.push(chainStr + \":\" + selectedAddress.address);\n                        extra[chainStr] = {\n                            publicKey: (_a = selectedAddress.publicKey) !== null && _a !== void 0 ? _a : suiPublicKey\n                        };\n                    }\n                });\n                if (addresses && addresses.length > 0) {\n                    let nameSpaceResponse = {\n                        namespace: protocol_1.NameSpaceKeySui,\n                        addresses: addresses,\n                        methods: [...InjectUtils_1.SuiMethods],\n                        extra: extra\n                    };\n                    return nameSpaceResponse;\n                }\n                return undefined;\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return this.suiWallet.features['standard:connect'].connect();\n        }\n        return Promise.resolve();\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.restoreConnect();\n                (0, utils_1.logDebug)(\"suiProvider send request:\", JSON.stringify(request));\n                const method = request.method;\n                let result;\n                if (request.injectParams && this.suiWallet) {\n                    let originalRarams = request.injectParams;\n                    switch (method) {\n                        case \"sui_signTransactionBlock\":\n                            const injectSignResult = yield this.suiWallet.features['sui:signTransactionBlock'].signTransactionBlock(originalRarams);\n                            //{transactionBlockBytes: 'AAACAAhmAAAAAAAAAAAgcveY+LcJkCRT1LtVxlZh6eBBVKUGdl…7bLNXSJ4Qz1jZurage0aGdH6Zb+4CAAAAAAAAIAo1AAAAAAAA', hash: '2pxcesyfKVCs3EegDYUDeQ28m3V3tn5VR32aUZSdg3dc', signature: 'ADDzSloxm5wEQX4BaTMJEON9t/xGgZ66ybiy5uT4TUimdl6Q9/…NeA3YOy/QsAD4XwjQ0rSuNkeKyfNy+VZPtJsmnKWswbGHSw=='}\n                            result = {\n                                method: \"sui_signTransactionBlock\",\n                                result: injectSignResult.signature\n                            };\n                            break;\n                        case \"sui_signAndExecuteTransactionBlock\":\n                            const injectSendResult = yield this.suiWallet.features['sui:signAndExecuteTransactionBlock'].signAndExecuteTransactionBlock(originalRarams);\n                            result = {\n                                method: \"sui_signAndExecuteTransactionBlock\",\n                                result: injectSendResult.digest\n                            };\n                            break;\n                        case \"sui_signMessage\":\n                            const injectResult = yield this.suiWallet.features['sui:signMessage'].signMessage(originalRarams);\n                            result = {\n                                method: \"sui_signMessage\",\n                                result: injectResult.signature\n                            };\n                            break;\n                        case \"sui_signPersonalMessage\":\n                            const injectPersonalResult = yield this.suiWallet.features['sui:signPersonalMessage'].signPersonalMessage(originalRarams);\n                            result = {\n                                method: \"sui_signPersonalMessage\",\n                                result: injectPersonalResult.signature\n                            };\n                            break;\n                    }\n                }\n                return result;\n            }\n            catch (e) {\n                (0, utils_1.logDebug)(\"suiProvider send error:\", e);\n                throw e;\n            }\n        });\n    }\n}\nexports.SuiProvider = SuiProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TON_CHAINS = exports.COSMOS_CHAINS = exports.APTOS_CHAINS = exports.SUI_CHAINS = exports.SOLANA_CHAINS = exports.BTC_CHAINS = void 0;\nexports.BTC_CHAINS = {\n    MAINNET: 'btc:mainnet',\n    FRACTAL: 'fractal:mainnet',\n};\nexports.SOLANA_CHAINS = {\n    MAINNET: 'solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp',\n    TESTNET: 'solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z',\n    SONIC_TESTNET: 'sonic:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z'\n};\nexports.SUI_CHAINS = {\n    MAINNET: 'sui:mainnet'\n};\nexports.APTOS_CHAINS = {\n    MAINNET: 'aptos:mainnet' // aptos mainnet\n};\nexports.COSMOS_CHAINS = {\n    COSMOS_MAINNET: 'cosmos:cosmoshub-4'\n};\nexports.TON_CHAINS = {\n    MAINNET: 'ton:-239', // mainnet\n};\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IEngine = exports.ISignClient = exports.ISignClientEvents = exports.IEngineEvents = void 0;\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nclass IEngineEvents extends eventemitter3_1.default {\n    constructor() {\n        super();\n    }\n}\nexports.IEngineEvents = IEngineEvents;\nclass ISignClientEvents extends eventemitter3_1.default {\n    constructor() {\n        super();\n    }\n}\nexports.ISignClientEvents = ISignClientEvents;\nclass ISignClient {\n    constructor(data) {\n        this.data = data;\n    }\n}\nexports.ISignClient = ISignClient;\nclass IEngine {\n    constructor(client) {\n        this.client = client;\n    }\n}\nexports.IEngine = IEngine;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXWalletName = exports.creatOKXInjectWalletInfo = exports.creatOKXMiniAppWalletInfo = exports.creatOKXWalletInfo = exports.ISignClientEvents = exports.IEngine = exports.IEngineEvents = exports.ISignClient = exports.getBigIntRpcId = exports.formatJsonRpcRequest = exports.isJsonRpcError = exports.isJsonRpcResponse = exports.parseConnectionError = exports.isHttpUrl = exports.formatJsonRpcError = void 0;\nvar json_rpc_1 = require(\"./json-rpc\");\nObject.defineProperty(exports, \"formatJsonRpcError\", { enumerable: true, get: function () { return json_rpc_1.formatJsonRpcError; } });\nObject.defineProperty(exports, \"isHttpUrl\", { enumerable: true, get: function () { return json_rpc_1.isHttpUrl; } });\nObject.defineProperty(exports, \"parseConnectionError\", { enumerable: true, get: function () { return json_rpc_1.parseConnectionError; } });\nObject.defineProperty(exports, \"isJsonRpcResponse\", { enumerable: true, get: function () { return json_rpc_1.isJsonRpcResponse; } });\nObject.defineProperty(exports, \"isJsonRpcError\", { enumerable: true, get: function () { return json_rpc_1.isJsonRpcError; } });\nObject.defineProperty(exports, \"formatJsonRpcRequest\", { enumerable: true, get: function () { return json_rpc_1.formatJsonRpcRequest; } });\nObject.defineProperty(exports, \"getBigIntRpcId\", { enumerable: true, get: function () { return json_rpc_1.getBigIntRpcId; } });\nvar engine_1 = require(\"./engine\");\nObject.defineProperty(exports, \"ISignClient\", { enumerable: true, get: function () { return engine_1.ISignClient; } });\nObject.defineProperty(exports, \"IEngineEvents\", { enumerable: true, get: function () { return engine_1.IEngineEvents; } });\nObject.defineProperty(exports, \"IEngine\", { enumerable: true, get: function () { return engine_1.IEngine; } });\nObject.defineProperty(exports, \"ISignClientEvents\", { enumerable: true, get: function () { return engine_1.ISignClientEvents; } });\n__exportStar(require(\"./ton\"), exports);\nvar wallet_info_1 = require(\"./wallet-info\");\nObject.defineProperty(exports, \"creatOKXWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXWalletInfo; } });\nObject.defineProperty(exports, \"creatOKXMiniAppWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXMiniAppWalletInfo; } });\nObject.defineProperty(exports, \"creatOKXInjectWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXInjectWalletInfo; } });\nObject.defineProperty(exports, \"OKXWalletName\", { enumerable: true, get: function () { return wallet_info_1.OKXWalletName; } });\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isJsonRpcPayload = isJsonRpcPayload;\nexports.isJsonRpcRequest = isJsonRpcRequest;\nexports.isJsonRpcResponse = isJsonRpcResponse;\nexports.isJsonRpcResult = isJsonRpcResult;\nexports.isJsonRpcError = isJsonRpcError;\nexports.payloadId = payloadId;\nexports.getBigIntRpcId = getBigIntRpcId;\nexports.formatJsonRpcRequest = formatJsonRpcRequest;\nexports.formatJsonRpcResult = formatJsonRpcResult;\nexports.formatJsonRpcError = formatJsonRpcError;\nexports.isReservedErrorCode = isReservedErrorCode;\nexports.getError = getError;\nexports.getErrorByCode = getErrorByCode;\nexports.formatErrorMessage = formatErrorMessage;\nexports.isHttpUrl = isHttpUrl;\nexports.isWsUrl = isWsUrl;\nexports.parseConnectionError = parseConnectionError;\nfunction isJsonRpcPayload(payload) {\n    return (typeof payload === \"object\" &&\n        \"id\" in payload &&\n        \"jsonrpc\" in payload &&\n        payload.jsonrpc === \"2.0\");\n}\nfunction isJsonRpcRequest(payload) {\n    return isJsonRpcPayload(payload) && \"method\" in payload;\n}\nfunction isJsonRpcResponse(payload) {\n    return isJsonRpcPayload(payload) && (isJsonRpcResult(payload) || isJsonRpcError(payload));\n}\nfunction isJsonRpcResult(payload) {\n    return \"result\" in payload;\n}\nfunction isJsonRpcError(payload) {\n    return \"error\" in payload;\n}\nconst okx_connect_error_1 = require(\"../error/okx-connect.error\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nclass IncrementalRandomGenerator {\n    constructor(bits) {\n        this.i = 1;\n        const typedArray = bits === 8 ? new Uint8Array(1) : bits === 16 ? new Uint16Array(1) : new Uint32Array(1);\n        if (bits) {\n            this.initialValue = tweetnacl_1.default.randomBytes(bits / 8)[0];\n        }\n        else {\n            this.initialValue = 0;\n        }\n    }\n    getNextValue() {\n        return this.initialValue + this.i++;\n    }\n}\nconst uint8Generator = new IncrementalRandomGenerator(8);\nconst uint16Generator = new IncrementalRandomGenerator(16);\nfunction payloadId() {\n    const date = Date.now() * 1000;\n    const extra = uint8Generator.getNextValue();\n    return date + extra;\n}\nfunction getBigIntRpcId() {\n    const date = BigInt(Date.now()) * BigInt(1000000);\n    const extra = BigInt(uint16Generator.getNextValue());\n    return date + extra;\n}\nfunction formatJsonRpcRequest(method, params, id) {\n    return {\n        id: id || payloadId(),\n        jsonrpc: \"2.0\",\n        method,\n        params,\n    };\n}\nfunction formatJsonRpcResult(id, result) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        result,\n    };\n}\nfunction formatJsonRpcError(id, error, data) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        error: formatErrorMessage(error, data),\n    };\n}\nfunction isReservedErrorCode(code) {\n    return okx_connect_error_1.RESERVED_ERROR_CODES.includes(code);\n}\nfunction getError(type) {\n    if (!Object.keys(okx_connect_error_1.STANDARD_ERROR_MAP).includes(type)) {\n        return okx_connect_error_1.STANDARD_ERROR_MAP[okx_connect_error_1.DEFAULT_ERROR];\n    }\n    return okx_connect_error_1.STANDARD_ERROR_MAP[type];\n}\nfunction getErrorByCode(code) {\n    const match = Object.values(okx_connect_error_1.STANDARD_ERROR_MAP).find((e) => e.code === code);\n    if (!match) {\n        return okx_connect_error_1.STANDARD_ERROR_MAP[okx_connect_error_1.DEFAULT_ERROR];\n    }\n    return match;\n}\nfunction formatErrorMessage(error, data) {\n    if (typeof error === \"undefined\") {\n        return getError(okx_connect_error_1.INTERNAL_ERROR);\n    }\n    if (typeof error === \"string\") {\n        error = Object.assign(Object.assign({}, getError(okx_connect_error_1.SERVER_ERROR)), { message: error });\n    }\n    if (typeof data !== \"undefined\") {\n        error.data = data;\n    }\n    if (isReservedErrorCode(error.code)) {\n        error = getErrorByCode(error.code);\n    }\n    return error;\n}\nfunction getUrlProtocol(url) {\n    const matches = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!matches || !matches.length)\n        return;\n    return matches[0];\n}\nfunction matchRegexProtocol(url, regex) {\n    const protocol = getUrlProtocol(url);\n    if (typeof protocol === \"undefined\")\n        return false;\n    return new RegExp(regex).test(protocol);\n}\nfunction isHttpUrl(url) {\n    return matchRegexProtocol(url, \"^https?:\");\n}\nfunction isWsUrl(url) {\n    return matchRegexProtocol(url, \"^wss?:\");\n}\nfunction parseConnectionError(e, url, type) {\n    return e.message.includes(\"getaddrinfo ENOTFOUND\") || e.message.includes(\"connect ECONNREFUSED\")\n        ? new Error(`Unavailable ${type} RPC url at ${url}`)\n        : e;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_ITEM_ERROR_CODES = void 0;\nvar CONNECT_ITEM_ERROR_CODES;\n(function (CONNECT_ITEM_ERROR_CODES) {\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(CONNECT_ITEM_ERROR_CODES || (exports.CONNECT_ITEM_ERROR_CODES = CONNECT_ITEM_ERROR_CODES = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TONCHAIN = void 0;\nvar TONCHAIN;\n(function (TONCHAIN) {\n    TONCHAIN[\"MAINNET\"] = \"-239\";\n})(TONCHAIN || (exports.TONCHAIN = TONCHAIN = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_ITEM_ERROR_CODES = exports.TONCHAIN = void 0;\nvar connect_wallet_1 = require(\"./connect-wallet\");\nObject.defineProperty(exports, \"TONCHAIN\", { enumerable: true, get: function () { return connect_wallet_1.TONCHAIN; } });\nvar connect_event_1 = require(\"./connect-event\");\nObject.defineProperty(exports, \"CONNECT_ITEM_ERROR_CODES\", { enumerable: true, get: function () { return connect_event_1.CONNECT_ITEM_ERROR_CODES; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXInjectWalletName = exports.OKXMiniWalletName = exports.OKXWalletName = void 0;\nexports.creatOKXWalletInfo = creatOKXWalletInfo;\nexports.creatOKXMiniAppWalletInfo = creatOKXMiniAppWalletInfo;\nexports.creatOKXInjectWalletInfo = creatOKXInjectWalletInfo;\nexports.OKXWalletName = \"OKX Wallet\";\nexports.OKXMiniWalletName = \"OKX Mini Wallet\";\nexports.OKXInjectWalletName = \"OKX Inject Wallet\";\nfunction creatOKXWalletInfo() {\n    return {\n        \"appName\": \"okxAppWallet\",\n        \"name\": exports.OKXWalletName,\n        \"imageUrl\": \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\"\n    };\n}\nfunction creatOKXMiniAppWalletInfo() {\n    return {\n        \"appName\": \"okxMiniApp\",\n        \"name\": exports.OKXMiniWalletName,\n        \"imageUrl\": \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\"\n    };\n}\nfunction creatOKXInjectWalletInfo() {\n    return {\n        \"appName\": \"okxInjectWallet\",\n        \"name\": exports.OKXInjectWalletName,\n        \"imageUrl\": \"\"\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_MINI_WALLET_NAME = exports.OKX_APP_WALLET_NAME = exports.stackDeepLink = exports.tgwalletAppName = exports.tgwalletName = exports.tonConnectSdkVersion = exports.shortUniversalLink = exports.standardDeeplink = exports.downloadUrl = exports.standardUniversalLink = exports.okxDeeplink = void 0;\nexports.getTestTwaUrl = getTestTwaUrl;\nexports.getTestTgTwaUrl = getTestTgTwaUrl;\nexports.getBotNameAndAppName = getBotNameAndAppName;\nexports.okxDeeplink = 'okx://web3';\nexports.standardUniversalLink = typeof window !== \"undefined\" && window.location.hostname.includes(\"okx.com\")\n    ? \"https://link.okx.com/download\"\n    : \"https://www.okx.com/download\";\nexports.downloadUrl = \"https://www.okx.com/download\";\n// export const standardUniversalLink = 'http://localhost:5173';\nexports.standardDeeplink = `${exports.okxDeeplink}/wallet/connect`;\nexports.shortUniversalLink = `https://www.okx.com/ul/connect`;\n// export const standardDeeplink = 'http://localhost:5173';\nexports.tonConnectSdkVersion = '1';\n// export const tgwalletName: string = \"TCTestqdqwdqwdqBot\"\nexports.tgwalletName = \"OKX_WALLET_BOT\";\nexports.tgwalletAppName = \"start\";\n// https://t.me/OKX_WALLET_BOT/start\nexports.stackDeepLink = 'okx://web3?stack=true';\nfunction getTestTwaUrl() {\n    return window.okxTesttwaUrl;\n}\nfunction getTestTgTwaUrl() {\n    return window.okxTestTgtwaUrl;\n}\nfunction getBotNameAndAppName(url) {\n    const urlObj = new URL(url);\n    const pathnameParts = urlObj.pathname.split('/').filter(Boolean);\n    if (pathnameParts.length >= 2) {\n        const botName = pathnameParts[0]; // 获取 'test_12312313123_bot'\n        const appName = pathnameParts[1]; // 获取 'testtest'\n        return { botName, appName };\n    }\n}\nexports.OKX_APP_WALLET_NAME = 'OKX Wallet';\nexports.OKX_MINI_WALLET_NAME = 'OKX Mini Wallet';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_CONNECT_ERROR_CODES = exports.OKXConnectError = void 0;\nvar okx_connect_error_1 = require(\"./okx-connect.error\");\nObject.defineProperty(exports, \"OKXConnectError\", { enumerable: true, get: function () { return okx_connect_error_1.OKXConnectError; } });\nObject.defineProperty(exports, \"OKX_CONNECT_ERROR_CODES\", { enumerable: true, get: function () { return okx_connect_error_1.OKX_CONNECT_ERROR_CODES; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_ERROR = exports.STANDARD_ERROR_MAP = exports.SERVER_ERROR_CODE_RANGE = exports.RESERVED_ERROR_CODES = exports.SERVER_ERROR = exports.INTERNAL_ERROR = exports.INVALID_PARAMS = exports.METHOD_NOT_FOUND = exports.INVALID_REQUEST = exports.PARSE_ERROR = exports.OKX_CONNECT_ERROR_CODES = exports.OKXConnectError = void 0;\nclass OKXConnectError extends Error {\n    constructor(code, message) {\n        if (message == undefined) {\n            message = getDefaultMessageByCode(code);\n        }\n        super(message);\n        this.code = code;\n        this.message = `${OKXConnectError.prefix} ${message ? '\\n' + message : ''}`;\n        Object.setPrototypeOf(this, OKXConnectError.prototype);\n    }\n    toJSON() {\n        return {\n            message: this.message,\n            code: this.code\n        };\n    }\n}\nexports.OKXConnectError = OKXConnectError;\nOKXConnectError.prefix = '[OKX_CONNECT_SDK_ERROR]';\nfunction getDefaultMessageByCode(code) {\n    if (code == OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR) {\n        return \"unknown error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR) {\n        return \"bad request error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.ALREADY_CONNECTED_ERROR) {\n        return \"already connected error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR) {\n        return \"not connected error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.UNKNOWN_APP_ERROR) {\n        return \"unknown app error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n        return \"user rejects error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR_CAUSE_REGISTER) {\n        return \"wallet address are registering\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED) {\n        return \"method not supported\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.CONNECTION_ERROR) {\n        return \"connect error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED) {\n        return \"chain not supported\";\n    }\n    return \"unknown error\";\n}\nvar OKX_CONNECT_ERROR_CODES;\n(function (OKX_CONNECT_ERROR_CODES) {\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"BAD_REQUEST_ERROR\"] = 1] = \"BAD_REQUEST_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"ALREADY_CONNECTED_ERROR\"] = 11] = \"ALREADY_CONNECTED_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"NOT_CONNECTED_ERROR\"] = 12] = \"NOT_CONNECTED_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"UNKNOWN_APP_ERROR\"] = 100] = \"UNKNOWN_APP_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"USER_REJECTS_ERROR\"] = 300] = \"USER_REJECTS_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"USER_REJECTS_ERROR_CAUSE_REGISTER\"] = 301] = \"USER_REJECTS_ERROR_CAUSE_REGISTER\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"CHAIN_NOT_SUPPORTED\"] = 500] = \"CHAIN_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"WALLET_NOT_SUPPORTED\"] = 600] = \"WALLET_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"CONNECTION_ERROR\"] = 700] = \"CONNECTION_ERROR\";\n})(OKX_CONNECT_ERROR_CODES || (exports.OKX_CONNECT_ERROR_CODES = OKX_CONNECT_ERROR_CODES = {}));\nexports.PARSE_ERROR = \"PARSE_ERROR\";\nexports.INVALID_REQUEST = \"INVALID_REQUEST\";\nexports.METHOD_NOT_FOUND = \"METHOD_NOT_FOUND\";\nexports.INVALID_PARAMS = \"INVALID_PARAMS\";\nexports.INTERNAL_ERROR = \"INTERNAL_ERROR\";\nexports.SERVER_ERROR = \"SERVER_ERROR\";\nexports.RESERVED_ERROR_CODES = [-32700, -32600, -32601, -32602, -32603];\nexports.SERVER_ERROR_CODE_RANGE = [-32000, -32099];\nexports.STANDARD_ERROR_MAP = {\n    [exports.PARSE_ERROR]: { code: -32700, message: \"Parse error\" },\n    [exports.INVALID_REQUEST]: { code: -32600, message: \"Invalid Request\" },\n    [exports.METHOD_NOT_FOUND]: { code: -32601, message: \"Method not found\" },\n    [exports.INVALID_PARAMS]: { code: -32602, message: \"Invalid params\" },\n    [exports.INTERNAL_ERROR]: { code: -32603, message: \"Internal error\" },\n    [exports.SERVER_ERROR]: { code: -32000, message: \"Server error\" },\n};\nexports.DEFAULT_ERROR = exports.SERVER_ERROR;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TON_CHAINS = exports.COSMOS_CHAINS = exports.APTOS_CHAINS = exports.SUI_CHAINS = exports.SOLANA_CHAINS = exports.BTC_CHAINS = exports.downloadUrl = exports.okxDeeplink = exports.tonConnectSdkVersion = exports.standardDeeplink = exports.standardUniversalLink = exports.NameSpaceKeyStarknet = exports.NameSpaceKeyTron = exports.NameSpaceKeyCosmos = exports.NameSpaceKeyAptos = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.NameSpaceKeyTON = exports.NameSpaceKeySOL = exports.NameSpaceKeyEip155 = void 0;\n__exportStar(require(\"./error\"), exports);\nvar misc_1 = require(\"./misc\");\nObject.defineProperty(exports, \"NameSpaceKeyEip155\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyEip155; } });\nObject.defineProperty(exports, \"NameSpaceKeySOL\", { enumerable: true, get: function () { return misc_1.NameSpaceKeySOL; } });\nObject.defineProperty(exports, \"NameSpaceKeyTON\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyTON; } });\nObject.defineProperty(exports, \"NameSpaceKeySui\", { enumerable: true, get: function () { return misc_1.NameSpaceKeySui; } });\nObject.defineProperty(exports, \"NameSpaceKeyBtc\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyBtc; } });\nObject.defineProperty(exports, \"NameSpaceKeyAptos\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyAptos; } });\nObject.defineProperty(exports, \"NameSpaceKeyCosmos\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyCosmos; } });\nObject.defineProperty(exports, \"NameSpaceKeyTron\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyTron; } });\nObject.defineProperty(exports, \"NameSpaceKeyStarknet\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyStarknet; } });\nvar constants_1 = require(\"./constants\");\nObject.defineProperty(exports, \"standardUniversalLink\", { enumerable: true, get: function () { return constants_1.standardUniversalLink; } });\nObject.defineProperty(exports, \"standardDeeplink\", { enumerable: true, get: function () { return constants_1.standardDeeplink; } });\nObject.defineProperty(exports, \"tonConnectSdkVersion\", { enumerable: true, get: function () { return constants_1.tonConnectSdkVersion; } });\nObject.defineProperty(exports, \"okxDeeplink\", { enumerable: true, get: function () { return constants_1.okxDeeplink; } });\nObject.defineProperty(exports, \"downloadUrl\", { enumerable: true, get: function () { return constants_1.downloadUrl; } });\n__exportStar(require(\"./connect\"), exports);\nvar chains_1 = require(\"./chains\");\nObject.defineProperty(exports, \"BTC_CHAINS\", { enumerable: true, get: function () { return chains_1.BTC_CHAINS; } });\nObject.defineProperty(exports, \"SOLANA_CHAINS\", { enumerable: true, get: function () { return chains_1.SOLANA_CHAINS; } });\nObject.defineProperty(exports, \"SUI_CHAINS\", { enumerable: true, get: function () { return chains_1.SUI_CHAINS; } });\nObject.defineProperty(exports, \"APTOS_CHAINS\", { enumerable: true, get: function () { return chains_1.APTOS_CHAINS; } });\nObject.defineProperty(exports, \"COSMOS_CHAINS\", { enumerable: true, get: function () { return chains_1.COSMOS_CHAINS; } });\nObject.defineProperty(exports, \"TON_CHAINS\", { enumerable: true, get: function () { return chains_1.TON_CHAINS; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NameSpaceKeyStarknet = exports.NameSpaceKeyTron = exports.NameSpaceKeyCosmos = exports.NameSpaceKeyAptos = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.NameSpaceKeyTON = exports.NameSpaceKeySOL = exports.NameSpaceKeyEip155 = void 0;\nexports.NameSpaceKeyEip155 = \"eip155\";\nexports.NameSpaceKeySOL = \"solana\";\nexports.NameSpaceKeyTON = \"ton\";\nexports.NameSpaceKeySui = \"sui\";\nexports.NameSpaceKeyBtc = \"btc\";\nexports.NameSpaceKeyAptos = \"aptos\";\nexports.NameSpaceKeyCosmos = \"cosmos\";\nexports.NameSpaceKeyTron = \"tron\";\nexports.NameSpaceKeyStarknet = \"starknet\";\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.callForSuccess = callForSuccess;\nexports.delay = delay;\n/**\n * Function to call ton api until we get response.\n * Because ton network is pretty unstable we need to make sure response is final.\n * @param {T} fn - function to call\n * @param {CallForSuccessOptions} [options] - optional configuration options\n */\nfunction callForSuccess(fn, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b;\n        const attempts = (_a = options === null || options === void 0 ? void 0 : options.attempts) !== null && _a !== void 0 ? _a : 3;\n        const delayMs = (_b = options === null || options === void 0 ? void 0 : options.delayMs) !== null && _b !== void 0 ? _b : 800;\n        if (typeof fn !== 'function') {\n            throw new Error(`Expected a function, got ${typeof fn}`);\n        }\n        let i = 0;\n        let lastError;\n        while (i < attempts) {\n            try {\n                return yield fn();\n            }\n            catch (err) {\n                lastError = err;\n                i++;\n                if (i < attempts) {\n                    yield delay(delayMs);\n                }\n            }\n        }\n        throw lastError;\n    });\n}\n/**\n * Delays the execution of code for a specified number of milliseconds.\n * @param {number} timeout - The number of milliseconds to delay the execution.\n * @param {DelayOptions} [options] - Optional configuration options for the delay.\n * @return {Promise<void>} - A promise that resolves after the specified delay, or rejects if the delay is aborted.\n */\nfunction delay(timeout, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            var _a, _b;\n            if ((_a = options === null || options === void 0 ? void 0 : options.signal) === null || _a === void 0 ? void 0 : _a.aborted) {\n                reject(new Error('Delay aborted'));\n                return;\n            }\n            const timeoutId = setTimeout(() => resolve(), timeout);\n            (_b = options === null || options === void 0 ? void 0 : options.signal) === null || _b === void 0 ? void 0 : _b.addEventListener('abort', () => {\n                clearTimeout(timeoutId);\n                reject(new Error('Delay aborted'));\n            });\n        });\n    });\n}\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkMetaData = exports.versionCompare = exports.isBrowser = exports.isOS = exports.isMobileUserAgent = exports.openDeeplinkWithFallback = exports.openLinkBlank = exports.openLink = exports.getChainId = exports.useShortLink = exports.toSafeBase64FromBase64 = exports.isValidObject = exports.isIos = exports.base64decode = exports.base64encode = exports.splitToUint8Arrays = exports.concatUint8Arrays = exports.toHexString = exports.hexToByteArray = exports.getOKXLink = exports.openOKXUniversalLink = exports.getAppWalletShortDeepLink = exports.encodeTWAConnectURLParams = exports.encodeConnectParams = exports.openOKXTMAWalletlinkWithFallback = exports.getTelegramWalletTWAUrl = exports.getAppWalletDeepLink = exports.encodeTelegramUrlParameters = exports.isTelegramUrl = exports.openOKXDeeplinkWithFallback = exports.openOKXDeeplink = exports.getUniversalLink = exports.safeJsonStringify = exports.safeJsonParse = exports.getDefaultReporter = exports.reportEvent = exports.reportLog = exports.logWarning = exports.logError = exports.logDebug = exports.callForSuccess = void 0;\nvar call_for_success_1 = require(\"./call-for-success\");\nObject.defineProperty(exports, \"callForSuccess\", { enumerable: true, get: function () { return call_for_success_1.callForSuccess; } });\nvar log_1 = require(\"./log\");\nObject.defineProperty(exports, \"logDebug\", { enumerable: true, get: function () { return log_1.logDebug; } });\nObject.defineProperty(exports, \"logError\", { enumerable: true, get: function () { return log_1.logError; } });\nObject.defineProperty(exports, \"logWarning\", { enumerable: true, get: function () { return log_1.logWarning; } });\nObject.defineProperty(exports, \"reportLog\", { enumerable: true, get: function () { return log_1.reportLog; } });\nObject.defineProperty(exports, \"reportEvent\", { enumerable: true, get: function () { return log_1.reportEvent; } });\nObject.defineProperty(exports, \"getDefaultReporter\", { enumerable: true, get: function () { return log_1.getDefaultReporter; } });\n__exportStar(require(\"./reportconstants\"), exports);\n__exportStar(require(\"./report\"), exports);\nvar safejson_1 = require(\"./safejson\");\nObject.defineProperty(exports, \"safeJsonParse\", { enumerable: true, get: function () { return safejson_1.safeJsonParse; } });\nObject.defineProperty(exports, \"safeJsonStringify\", { enumerable: true, get: function () { return safejson_1.safeJsonStringify; } });\nvar url_1 = require(\"./url\");\nObject.defineProperty(exports, \"getUniversalLink\", { enumerable: true, get: function () { return url_1.getUniversalLink; } });\nObject.defineProperty(exports, \"openOKXDeeplink\", { enumerable: true, get: function () { return url_1.openOKXDeeplink; } });\nObject.defineProperty(exports, \"openOKXDeeplinkWithFallback\", { enumerable: true, get: function () { return url_1.openOKXDeeplinkWithFallback; } });\nObject.defineProperty(exports, \"isTelegramUrl\", { enumerable: true, get: function () { return url_1.isTelegramUrl; } });\nObject.defineProperty(exports, \"encodeTelegramUrlParameters\", { enumerable: true, get: function () { return url_1.encodeTelegramUrlParameters; } });\nObject.defineProperty(exports, \"getAppWalletDeepLink\", { enumerable: true, get: function () { return url_1.getAppWalletDeepLink; } });\nObject.defineProperty(exports, \"getTelegramWalletTWAUrl\", { enumerable: true, get: function () { return url_1.getTelegramWalletTWAUrl; } });\nObject.defineProperty(exports, \"openOKXTMAWalletlinkWithFallback\", { enumerable: true, get: function () { return url_1.openOKXTMAWalletlinkWithFallback; } });\nObject.defineProperty(exports, \"encodeConnectParams\", { enumerable: true, get: function () { return url_1.encodeConnectParams; } });\nObject.defineProperty(exports, \"encodeTWAConnectURLParams\", { enumerable: true, get: function () { return url_1.encodeTWAConnectURLParams; } });\nObject.defineProperty(exports, \"getAppWalletShortDeepLink\", { enumerable: true, get: function () { return url_1.getAppWalletShortDeepLink; } });\nObject.defineProperty(exports, \"openOKXUniversalLink\", { enumerable: true, get: function () { return url_1.openOKXUniversalLink; } });\nObject.defineProperty(exports, \"getOKXLink\", { enumerable: true, get: function () { return url_1.getOKXLink; } });\nvar utils_1 = require(\"./utils\");\nObject.defineProperty(exports, \"hexToByteArray\", { enumerable: true, get: function () { return utils_1.hexToByteArray; } });\nObject.defineProperty(exports, \"toHexString\", { enumerable: true, get: function () { return utils_1.toHexString; } });\nObject.defineProperty(exports, \"concatUint8Arrays\", { enumerable: true, get: function () { return utils_1.concatUint8Arrays; } });\nObject.defineProperty(exports, \"splitToUint8Arrays\", { enumerable: true, get: function () { return utils_1.splitToUint8Arrays; } });\nObject.defineProperty(exports, \"base64encode\", { enumerable: true, get: function () { return utils_1.base64encode; } });\nObject.defineProperty(exports, \"base64decode\", { enumerable: true, get: function () { return utils_1.base64decode; } });\nObject.defineProperty(exports, \"isIos\", { enumerable: true, get: function () { return utils_1.isIos; } });\nObject.defineProperty(exports, \"isValidObject\", { enumerable: true, get: function () { return utils_1.isValidObject; } });\nObject.defineProperty(exports, \"toSafeBase64FromBase64\", { enumerable: true, get: function () { return utils_1.toSafeBase64FromBase64; } });\nObject.defineProperty(exports, \"useShortLink\", { enumerable: true, get: function () { return utils_1.useShortLink; } });\nObject.defineProperty(exports, \"getChainId\", { enumerable: true, get: function () { return utils_1.getChainId; } });\nvar web_api_1 = require(\"./web-api\");\nObject.defineProperty(exports, \"openLink\", { enumerable: true, get: function () { return web_api_1.openLink; } });\nObject.defineProperty(exports, \"openLinkBlank\", { enumerable: true, get: function () { return web_api_1.openLinkBlank; } });\nObject.defineProperty(exports, \"openDeeplinkWithFallback\", { enumerable: true, get: function () { return web_api_1.openDeeplinkWithFallback; } });\nObject.defineProperty(exports, \"isMobileUserAgent\", { enumerable: true, get: function () { return web_api_1.isMobileUserAgent; } });\nObject.defineProperty(exports, \"isOS\", { enumerable: true, get: function () { return web_api_1.isOS; } });\nObject.defineProperty(exports, \"isBrowser\", { enumerable: true, get: function () { return web_api_1.isBrowser; } });\nvar tma_api_1 = require(\"./tma-api\");\nObject.defineProperty(exports, \"versionCompare\", { enumerable: true, get: function () { return tma_api_1.versionCompare; } });\nvar request_1 = require(\"./request\");\nObject.defineProperty(exports, \"checkMetaData\", { enumerable: true, get: function () { return request_1.checkMetaData; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getDefaultReporter = getDefaultReporter;\nexports.logDebug = logDebug;\nexports.logError = logError;\nexports.logWarning = logWarning;\nexports.reportEvent = reportEvent;\nexports.reportLog = reportLog;\nconst debug = false;\nconst forceReport = false;\nconst report_1 = require(\"./report\");\nconst defaultReporter = new report_1.OKXReporter();\nfunction getDefaultReporter() {\n    return defaultReporter;\n}\nconst packageJson = require('../../package.json');\nconst version = packageJson.version;\nfunction logDebug(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.log(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction logError(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.error(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n            if (forceReport || !debug) {\n                let content = '';\n                content += [...args].reduce((result, item) => {\n                    if (typeof item == 'string') {\n                        result += ',' + item;\n                    }\n                    else if (typeof item == 'object') {\n                        result += JSON.stringify(item);\n                    }\n                });\n                defaultReporter.sendRecordContent(content, report_1.OKXReportType.LOG, '');\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction logWarning(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.warn(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction reportEvent(type, action, content) {\n    return __awaiter(this, void 0, void 0, function* () {\n        yield defaultReporter.sendRecordContent(content, type, action);\n    });\n}\nfunction reportLog(content_1) {\n    return __awaiter(this, arguments, void 0, function* (content, action = 'default') {\n        // await defaultReporter.sendRecordContent(content, OKXReportType.LOG, action)\n    });\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mediaNotTouch = exports.mediaTouch = exports.maxWidth = void 0;\nexports.isDevice = isDevice;\nexports.media = media;\nexports.mediaMin = mediaMin;\nexports.mediaMax = mediaMax;\nexports.mediaMinMax = mediaMinMax;\nconst web_api_1 = require(\"../utils/web-api\");\nconst tma_api_1 = require(\"../utils/tma-api\");\nconst url_1 = require(\"./url\");\nconst log_1 = require(\"./log\");\nexports.maxWidth = {\n    mobile: 440,\n    tablet: 1020\n};\nfunction isDevice(device) {\n    var _a;\n    const window = (0, url_1.getWindow)();\n    if (!window) {\n        return device === 'desktop';\n    }\n    // TODO: remove this check when weba will fix viewport width\n    if ((0, tma_api_1.isTmaPlatform)('weba')) {\n        return true;\n    }\n    const width = window.innerWidth;\n    switch (device) {\n        case 'desktop':\n            return width > exports.maxWidth.tablet;\n        case 'tablet':\n            return width > exports.maxWidth.mobile;\n        default:\n        case 'mobile':\n            let isMobile = width <= exports.maxWidth.mobile || (0, web_api_1.isOS)('ios', 'android', 'ipad');\n            if (isMobile) {\n                const isTelegram = !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n                const maxTouchPoints = navigator.maxTouchPoints || 0;\n                if (isTelegram && maxTouchPoints === 0) {\n                    isMobile = false;\n                }\n                (0, log_1.logDebug)(\"isDevice mobile isTelegram and maxTouchPoints:\", isMobile, isTelegram, maxTouchPoints);\n            }\n            return isMobile;\n    }\n}\nfunction media(device) {\n    switch (device) {\n        case 'mobile':\n            return `@media (max-width: ${exports.maxWidth.mobile}px)`;\n        case 'tablet':\n            return `@media (max-width: ${exports.maxWidth.tablet}px) (min-width: ${exports.maxWidth.mobile}px)`;\n        default:\n        case 'desktop':\n            return `@media (min-width: ${exports.maxWidth.tablet}px)`;\n    }\n}\nfunction mediaMin(px) {\n    return `@media (min-width: ${px}px)`;\n}\nfunction mediaMax(px) {\n    return `@media (max-width: ${px}px)`;\n}\nfunction mediaMinMax(pxMin, pxMax) {\n    return `@media (min-width: ${pxMin}px) and (max-width: ${pxMax}px)`;\n}\nexports.mediaTouch = '@media (hover: none)';\nexports.mediaNotTouch = '@media not all and (hover: none)';\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXReporter = exports.OKXReportSide = exports.OKXReportType = exports.versionStr = void 0;\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst log_1 = require(\"./log\");\nconst url_1 = require(\"./url\");\nconst utils_1 = require(\"../utils\");\nconst localforage_1 = __importDefault(require(\"localforage\"));\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nexports.versionStr = '1.6.5';\nconst reportApiList = [\n    'https://www.okx.com/dappstat/wallet-connect',\n    'https://www.okx.ac/dappstat/wallet-connect'\n];\nconst reportCacheKey = 'OKX_RP_CK';\nconst reportUUIDKey = 'OKX_RP_UUID_CK';\nconst MAX_LIMIT_REPORTCOUNT = 100;\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"*/*\",\n    \"Content-Type\": \"text/plain\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\nexports.OKXReportType = {\n    PAGE_IN: 'page_in',\n    PAGE_OUT: 'page_out',\n    CLICK: 'click',\n    LOG: 'log',\n};\nexports.OKXReportSide = {\n    DAPP: 'dapp',\n    WALLET: 'wallet',\n};\nclass IReporter {\n}\nconst fetchWithTimeout = (url, options, timeout = 5000) => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n    const fetchPromise = (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, options), { signal }));\n    const timeoutPromise = new Promise((_, reject) => setTimeout(() => {\n        controller.abort();\n        reject(new Error('Request timed out'));\n    }, timeout));\n    return Promise.race([fetchPromise, timeoutPromise]);\n};\nconst fetchListWithTimeout = (urls_1, ...args_1) => __awaiter(void 0, [urls_1, ...args_1], void 0, function* (urls, options = {}, timeout = 5000) {\n    for (const url of urls) {\n        try {\n            const controller = new AbortController();\n            const signal = controller.signal;\n            const fetchPromise = (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, options), { signal }));\n            const timeoutPromise = new Promise((_, reject) => setTimeout(() => {\n                controller.abort();\n                reject(new Error('Request timed out'));\n            }, timeout));\n            const response = yield Promise.race([fetchPromise, timeoutPromise]);\n            if (response.ok) {\n                return response;\n            }\n            if (response.status == 502) {\n                console.error(`Fetch error status 502`, url);\n                return response;\n            }\n        }\n        catch (error) {\n            console.error(`Fetch error for ${url}:`, error);\n        }\n    }\n    console.error(`'All fetch attempts failed.'`);\n    throw new Error('All fetch attempts failed.');\n});\nclass OKXReporter {\n    constructor() {\n        this.currentSide = exports.OKXReportSide.DAPP;\n        this.currentVersion = exports.versionStr;\n        this.storage = localforage_1.default.createInstance({\n            name: \"OKXReporter\"\n        });\n        this.recordList = new Array();\n        this.currentUUID = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(16));\n    }\n    configVersionAndSide(version, side, appname) {\n        this.currentVersion = version;\n        this.currentSide = side;\n        this.appName = appname;\n    }\n    get recordCacheKey() {\n        return reportCacheKey + \"@\" + this.appName;\n    }\n    get reportPlatform() {\n        if ((0, utils_1.isMobileUserAgent)()) {\n            if ((0, utils_1.isIos)()) {\n                return 'iOS';\n            }\n            else {\n                return 'android';\n            }\n        }\n        else {\n            return 'pc';\n        }\n    }\n    beginReport() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.startErrorCatching();\n            let records = yield this.storage.getItem(this.recordCacheKey);\n            let uuid = yield this.storage.getItem(reportUUIDKey);\n            if (uuid) {\n                this.currentUUID = uuid;\n            }\n            else {\n                this.storage.setItem(reportUUIDKey, this.currentUUID);\n            }\n            if (records) {\n                this.recordList = records;\n                (0, log_1.logDebug)('resume records from cache length: ', this.recordList.length);\n                yield this.sendCachedRecords();\n            }\n        });\n    }\n    startErrorCatching() {\n        let window = (0, url_1.getWindow)();\n        if (window) {\n            (0, log_1.logDebug)('begin capture console error');\n            // window.onerror = (event: Event | string, source?: string, lineno?: number, colno?: number, error?: Error) => {\n            //     logDebug('capture error info:', error, source)\n            //     this.markRecord(error?.message+'/'+error?.name+'/'+error?.stack, OKXReportType.LOG, '', this.currentSide)\n            // }\n        }\n    }\n    cachedErrors() {\n        return this.recordList;\n    }\n    sendRecord(record) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    const body = JSON.stringify(record);\n                    (0, log_1.logDebug)('[REPORT] record: ', body);\n                    const res = yield fetchListWithTimeout(reportApiList, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body: body }));\n                    (0, log_1.logDebug)('[REPORT] get rsp:', res);\n                    if (res && res.status && res.status == 200) {\n                        this.recordList = this.recordList.filter((item) => {\n                            return item.timestamp != record.timestamp || item.content != record.content;\n                        });\n                        yield this.storage.setItem(this.recordCacheKey, this.recordList);\n                        resolve(true);\n                    }\n                    else {\n                        reject(false);\n                    }\n                }\n                catch (e) {\n                    (0, log_1.logDebug)('send record error:', e);\n                    resolve(true);\n                    // reject(e)\n                }\n            }));\n        });\n    }\n    sendRecordContent(content, type, action) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            let path = (_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.location.pathname;\n            let location = (_b = (0, url_1.getWindow)()) === null || _b === void 0 ? void 0 : _b.location.origin;\n            if (path && location) {\n                location = location + path;\n            }\n            let language = (_c = (0, url_1.getWindow)()) === null || _c === void 0 ? void 0 : _c.navigator.language;\n            let ua = (_d = (0, url_1.getWindow)()) === null || _d === void 0 ? void 0 : _d.navigator.userAgent;\n            let platform = this.reportPlatform;\n            let reportItem = {\n                uuid: this.currentUUID,\n                version: this.currentVersion,\n                content: content,\n                action: action,\n                side: this.currentSide,\n                timestamp: new Date().getTime(),\n                url: location,\n                lang: language,\n                type: type,\n                platform: platform,\n                \"user-agent\": ua\n            };\n            yield this.markRecordItem(reportItem);\n            yield this.sendRecord(reportItem);\n        });\n    }\n    sendCachedRecords() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let sendList = this.recordList.map(record => this.sendRecord(record));\n                (0, log_1.logDebug)('[REPORT] submit & clean recorded caches begin @', new Date().toUTCString());\n                Promise.allSettled(sendList).then((results) => {\n                    (0, log_1.logDebug)('[REPORT] submit & clean recorded caches ends @', new Date().toUTCString());\n                    let keepIndex = [];\n                    results.forEach((result, index) => {\n                        if (result.status == \"rejected\") {\n                            keepIndex.push(index);\n                        }\n                    });\n                    this.recordList = this.recordList.filter((_, index) => !keepIndex.includes(index));\n                    this.storage.setItem(this.recordCacheKey, this.recordList).then(function (value) {\n                        resolve();\n                    }).catch(function (err) {\n                        reject(err);\n                    });\n                });\n            }));\n        });\n    }\n    markRecordItem(item) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.recordList.push(item);\n            if (this.recordList.length > MAX_LIMIT_REPORTCOUNT) {\n                let offset = this.recordList.length - MAX_LIMIT_REPORTCOUNT;\n                this.recordList.splice(0, offset);\n            }\n            return new Promise((resolve, reject) => {\n                this.storage.setItem(this.recordCacheKey, this.recordList).then(function (value) {\n                    resolve(item);\n                }).catch(function (err) {\n                    reject(err);\n                });\n            });\n        });\n    }\n    markRecord(content, type, action, side) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            let path = (_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.location.pathname;\n            let location = (_b = (0, url_1.getWindow)()) === null || _b === void 0 ? void 0 : _b.location.origin;\n            if (path && location) {\n                location = location + path;\n            }\n            let language = (_c = (0, url_1.getWindow)()) === null || _c === void 0 ? void 0 : _c.navigator.language;\n            let platform = this.reportPlatform;\n            let ua = (_d = (0, url_1.getWindow)()) === null || _d === void 0 ? void 0 : _d.navigator.userAgent;\n            let reportItem = {\n                uuid: this.currentUUID,\n                version: this.currentVersion,\n                content: content,\n                action: action,\n                side: side,\n                timestamp: new Date().getTime(),\n                url: location,\n                lang: language,\n                type: type,\n                platform: platform,\n                \"user-agent\": ua\n            };\n            return yield this.markRecordItem(reportItem);\n        });\n    }\n}\nexports.OKXReporter = OKXReporter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Report_WalletType_Key = exports.Report_Proceed_QRCode_Click = exports.Report_ChooseType_Download_Click = exports.Report_ChooseType_ConnectWallet_Click = exports.Report_Proceed_Retry_Click = exports.Report_ChooseType_ConnectWallet_View = exports.Report_Loading_ConnectWallet_View = exports.Report_Proceed_QRCode_View = exports.Report_Proceed_Proceed_View = void 0;\nexports.Report_Proceed_Proceed_View = \"OKXConnectSDK_Proceed_Proceed_View\";\nexports.Report_Proceed_QRCode_View = \"OKXConnectSDK_Proceed_QRCode_View\";\nexports.Report_Loading_ConnectWallet_View = \"OKXConnectSDK_Loading_ConnectWallet_View\";\nexports.Report_ChooseType_ConnectWallet_View = \"OKXConnectSDK_ChooseType_ConnectWallet_View\";\nexports.Report_Proceed_Retry_Click = \"OKXConnectSDK_Proceed_Retry_Click\";\nexports.Report_ChooseType_ConnectWallet_Click = \"OKXConnectSDK_ChooseType_ConnectWallet_Click\";\nexports.Report_ChooseType_Download_Click = \"OKXConnectSDK_ChooseType_Download_Click\";\nexports.Report_Proceed_QRCode_Click = \"OKXConnectSDK_Proceed_QRCode_Click\";\nexports.Report_WalletType_Key = 'wallet_type';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkMetaData = checkMetaData;\nconst protocol_1 = require(\"../protocol\");\nfunction checkMetaData(dappMetaData) {\n    if (!dappMetaData) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"You have to specify a `dappMetaData`in the options.\");\n    }\n    if (!dappMetaData.name) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"dappName is required\");\n    }\n    if (!dappMetaData.icon) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"icon is required\");\n    }\n    return true;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.safeJsonParse = safeJsonParse;\nexports.safeJsonStringify = safeJsonStringify;\nconst log_1 = require(\"./log\");\nconst JSONStringify = (data) => JSON.stringify(data, (_, value) => (typeof value === \"bigint\" ? value.toString() + \"n\" : value));\n/*\n  Function to parse JSON.\n  If JSON has values in our custom format BigInt (strings with \"n\" character at the end), we just parse them to BigInt values.\n  If JSON has big number values, but not in our custom format, we copy it, and in a copy we convert those values to our custom format,\n  then parse them to BigInt values.\n  Other values (not big numbers and not our custom format BigInt values) are not affected and parsed as native JSON.parse() would parse them.\n*/\nconst JSONParse = (json) => {\n    /*\n      Big numbers are found and marked using Regex with this condition:\n      Number's length is bigger than 16 || Number's length is 16 and any numerical digit of the number is greater than that of the Number.MAX_SAFE_INTEGER\n      Additionally, it skips values that are strings (between double quotes).\n      */\n    // prettier-ignore\n    // eslint-disable-next-line no-useless-escape\n    const numbersBiggerThanMaxInt = /:(\\b\\d{17,}|\\b(?:[9](?:[1-9]07199254740991|0[1-9]7199254740991|00[8-9]199254740991|007[2-9]99254740991|007199[3-9]54740991|0071992[6-9]4740991|00719925[5-9]740991|007199254[8-9]40991|0071992547[5-9]0991|00719925474[1-9]991|00719925474099[2-9])))(?=[,\\}\\]]|$)/g;\n    const serializedData = json.replace(numbersBiggerThanMaxInt, (match, group) => `:\"${group}n\"`);\n    try {\n        return JSON.parse(serializedData, (_, value) => {\n            const isCustomFormatBigInt = typeof value === \"string\" && value.match(/^\\d+n$/);\n            if (isCustomFormatBigInt)\n                return BigInt(value.substring(0, value.length - 1));\n            return value;\n        });\n    }\n    catch (e) {\n        return JSON.parse(json);\n    }\n};\nfunction safeJsonParse(value) {\n    if (typeof value !== \"string\") {\n        (0, log_1.logDebug)(value);\n        throw new Error(`Cannot safe json parse value of type ${typeof value}`);\n    }\n    try {\n        return JSONParse(value);\n    }\n    catch (e) {\n        // eslint-disable-next-line no-console\n        console.error(\"safeJsonParse error:\", e);\n        return value;\n    }\n}\nfunction safeJsonStringify(value) {\n    return typeof value === \"string\" ? value : JSONStringify(value) || \"\";\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.okxfromString = okxfromString;\nexports.okxtoString = okxtoString;\nexports.alloc = alloc;\nexports.allocUnsafe = allocUnsafe;\nconst basics_1 = require(\"multiformats/basics\");\nconst log_1 = require(\"../utils/log\");\nfunction okxfromString(string, encoding = 'utf8') {\n    const base = BASES[encoding];\n    (0, log_1.logDebug)(\"okxfromstring ====> \");\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    return base.decoder.decode(`${base.prefix}${string}`);\n}\nfunction okxtoString(array, encoding = 'utf8') {\n    const base = BASES[encoding];\n    (0, log_1.logDebug)(\"okxtoString ====> \");\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    return base.encoder.encode(array).substring(1);\n}\nfunction alloc(size = 0) {\n    return new Uint8Array(size);\n}\nfunction allocUnsafe(size = 0) {\n    return new Uint8Array(size);\n}\nfunction createCodec(name, prefix, encode, decode) {\n    return {\n        name,\n        prefix,\n        encoder: {\n            name,\n            prefix,\n            encode\n        },\n        decoder: { decode }\n    };\n}\nconst string = createCodec('utf8', 'u', buf => {\n    const decoder = new TextDecoder('utf8');\n    return 'u' + decoder.decode(buf);\n}, str => {\n    const encoder = new TextEncoder();\n    return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n    let result = 'a';\n    for (let i = 0; i < buf.length; i++) {\n        let bufNum = buf[i];\n        if (bufNum && String.fromCharCode(bufNum)) {\n            result += String.fromCharCode(bufNum);\n        }\n    }\n    return result;\n}, str => {\n    str = str.substring(1);\n    const buf = allocUnsafe(str.length);\n    for (let i = 0; i < str.length; i++) {\n        buf[i] = str.charCodeAt(i);\n    }\n    return buf;\n});\nconst BASES = Object.assign({ utf8: string, 'utf-8': string, hex: basics_1.bases.base16, latin1: ascii, ascii: ascii, binary: ascii }, basics_1.bases);\n","\"use strict\";\nvar _a, _b, _c, _d, _e, _f, _g;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isTmaPlatform = isTmaPlatform;\nexports.isInTMA = isInTMA;\nexports.inTg = inTg;\nexports.isInTelegramBrowser = isInTelegramBrowser;\nexports.sendExpand = sendExpand;\nexports.sendOpenTelegramLink = sendOpenTelegramLink;\nexports.versionCompare = versionCompare;\nconst url_1 = require(\"./url\");\nconst log_1 = require(\"./log\");\nconst protocol_1 = require(\"../protocol\");\nconst web_api_1 = require(\"./web-api\");\nlet initParams = {};\ntry {\n    let locationHash = location.hash.toString();\n    initParams = urlParseHashParams(locationHash);\n}\ncatch (e) { }\nlet tmaPlatform = 'unknown';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppPlatform) {\n    tmaPlatform = (_a = initParams.tgWebAppPlatform) !== null && _a !== void 0 ? _a : 'unknown';\n}\nif (tmaPlatform === 'unknown') {\n    const window = (0, url_1.getWindow)();\n    tmaPlatform = (_d = (_c = (_b = window === null || window === void 0 ? void 0 : window.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : 'unknown';\n}\nlet webAppVersion = '6.0';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppVersion) {\n    webAppVersion = initParams.tgWebAppVersion;\n}\nif (!webAppVersion) {\n    const window = (0, url_1.getWindow)();\n    webAppVersion = (_g = (_f = (_e = window === null || window === void 0 ? void 0 : window.Telegram) === null || _e === void 0 ? void 0 : _e.WebApp) === null || _f === void 0 ? void 0 : _f.version) !== null && _g !== void 0 ? _g : '6.0';\n}\n/**\n * Returns true if the app is running in TMA on the specified platform.\n * @param platforms\n */\nfunction isTmaPlatform(...platforms) {\n    return platforms.includes(tmaPlatform);\n}\n/**\n * Returns true if the app is running in TMA.\n */\nfunction isInTMA() {\n    var _a;\n    return tmaPlatform !== 'unknown' || !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n}\nfunction inTg() {\n    // return true\n    return isInTelegramBrowser() || isInTMA();\n}\n/**\n * Returns true if the app is running in the Telegram browser.\n */\nfunction isInTelegramBrowser() {\n    var _a;\n    const isTelegramWebview = !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebview);\n    return (isInTMA() || isTelegramWebview) && tmaPlatform === 'unknown';\n}\n/**\n * Expand the app window.\n */\nfunction sendExpand() {\n    postEvent('web_app_expand', {});\n}\n/**\n * Opens link in TMA or in new tab and returns a function that closes the tab.\n * @param link The link to open.\n * @param fallback The function to call if the link can't be opened in TMA.\n */\nfunction sendOpenTelegramLink(link, fallback) {\n    const url = new URL(link);\n    if (url.protocol !== 'http:' && url.protocol !== 'https:') {\n        if (fallback) {\n            return fallback();\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Url protocol is not supported: ${url}`);\n    }\n    if (url.hostname !== 't.me') {\n        if (fallback) {\n            return fallback();\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Url host is not supported: ${url}`);\n    }\n    const pathFull = url.pathname + url.search;\n    if (isIframe() || versionAtLeast('6.1')) {\n        postEvent('web_app_open_tg_link', { path_full: pathFull });\n    }\n    else {\n        (0, web_api_1.openLinkBlank)('https://t.me' + pathFull);\n    }\n}\nfunction isIframe() {\n    try {\n        const window = (0, url_1.getWindow)();\n        if (!window) {\n            return false;\n        }\n        return window.parent != null && window !== window.parent;\n    }\n    catch (e) {\n        return false;\n    }\n}\nfunction postEvent(eventType, eventData) {\n    try {\n        const window = (0, url_1.getWindow)();\n        if (!window) {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Can't post event to parent window: window is not defined`);\n        }\n        if (window.TelegramWebviewProxy !== undefined) {\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.TelegramWebviewProxy.postEvent(eventType, JSON.stringify(eventData));\n        }\n        else if (window.external && 'notify' in window.external) {\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.external.notify(JSON.stringify({ eventType: eventType, eventData: eventData }));\n        }\n        else if (isIframe()) {\n            const trustedTarget = '*';\n            const message = JSON.stringify({ eventType: eventType, eventData: eventData });\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.parent.postMessage(message, trustedTarget);\n        }\n        else {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Can't post event to TMA`);\n        }\n    }\n    catch (e) {\n        (0, log_1.logError)(`Can't post event to parent window: ${e}`);\n    }\n}\nfunction urlParseHashParams(locationHash) {\n    locationHash = locationHash.replace(/^#/, '');\n    let params = {};\n    if (!locationHash.length) {\n        return params;\n    }\n    if (locationHash.indexOf('=') < 0 && locationHash.indexOf('?') < 0) {\n        params._path = urlSafeDecode(locationHash);\n        return params;\n    }\n    let qIndex = locationHash.indexOf('?');\n    if (qIndex >= 0) {\n        let pathParam = locationHash.substr(0, qIndex);\n        params._path = urlSafeDecode(pathParam);\n        locationHash = locationHash.substr(qIndex + 1);\n    }\n    let query_params = urlParseQueryString(locationHash);\n    for (let k in query_params) {\n        params[k] = query_params[k];\n    }\n    return params;\n}\nfunction urlSafeDecode(urlencoded) {\n    try {\n        urlencoded = urlencoded.replace(/\\+/g, '%20');\n        return decodeURIComponent(urlencoded);\n    }\n    catch (e) {\n        return urlencoded;\n    }\n}\nfunction urlParseQueryString(queryString) {\n    let params = {};\n    if (!queryString.length) {\n        return params;\n    }\n    let queryStringParams = queryString.split('&');\n    let i, param, paramName, paramValue;\n    for (i = 0; i < queryStringParams.length; i++) {\n        param = queryStringParams[i].split('=');\n        paramName = urlSafeDecode(param[0]);\n        paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n        params[paramName] = paramValue;\n    }\n    return params;\n}\nfunction versionCompare(v1, v2) {\n    if (typeof v1 !== 'string')\n        v1 = '';\n    if (typeof v2 !== 'string')\n        v2 = '';\n    let v1List = v1.replace(/^\\s+|\\s+$/g, '').split('.');\n    let v2List = v2.replace(/^\\s+|\\s+$/g, '').split('.');\n    let a, i, p1, p2;\n    a = Math.max(v1List.length, v2List.length);\n    for (i = 0; i < a; i++) {\n        p1 = parseInt(v1List[i]) || 0;\n        p2 = parseInt(v2List[i]) || 0;\n        if (p1 === p2)\n            continue;\n        if (p1 > p2)\n            return 1;\n        return -1;\n    }\n    return 0;\n}\nfunction versionAtLeast(ver) {\n    return versionCompare(webAppVersion, ver) >= 0;\n}\n","\"use strict\";\nvar _a, _b, _c, _d;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.removeUrlLastSlash = removeUrlLastSlash;\nexports.addPathToUrl = addPathToUrl;\nexports.getUniversalLink = getUniversalLink;\nexports.openOKXDeeplink = openOKXDeeplink;\nexports.openOKXUniversalLink = openOKXUniversalLink;\nexports.openOKXDeeplinkWithFallback = openOKXDeeplinkWithFallback;\nexports.getWindow = getWindow;\nexports.isTelegramUrl = isTelegramUrl;\nexports.encodeTelegramUrlParameters = encodeTelegramUrlParameters;\nexports.encodeConnectParams = encodeConnectParams;\nexports.encodeTWAConnectURLParams = encodeTWAConnectURLParams;\nexports.getAppWalletDeepLink = getAppWalletDeepLink;\nexports.getAppWalletShortDeepLink = getAppWalletShortDeepLink;\nexports.getTelegramWalletTWAUrl = getTelegramWalletTWAUrl;\nexports.openOKXTMAWalletlinkWithFallback = openOKXTMAWalletlinkWithFallback;\nexports.isInTMA = isInTMA;\nexports.isInTelegramBrowser = isInTelegramBrowser;\nexports.getOKXLink = getOKXLink;\nconst protocol_1 = require(\"../protocol\");\nconst log_1 = require(\"./log\");\nconst constants_1 = require(\"../protocol/constants\");\nconst utils_1 = require(\"./utils\");\nconst tma_api_1 = require(\"./tma-api\");\nfunction removeUrlLastSlash(url) {\n    if (url.slice(-1) === '/') {\n        return url.slice(0, -1);\n    }\n    return url;\n}\nfunction addPathToUrl(url, path) {\n    return removeUrlLastSlash(url) + '/' + path;\n}\nfunction getUniversalLink(deeplinkUrl, useStandardUniversalLink = false) {\n    console.log(\"getUniversalLink deeplinkUrl:\", deeplinkUrl, \", useStandardUniversalLink:\", useStandardUniversalLink);\n    /*const replaceStrWithParam = `${standardDeeplink}?param=`\n    if(!useStandardUniversalLink && deeplinkUrl.startsWith(replaceStrWithParam)){\n        const cleanUrl = deeplinkUrl.replace(replaceStrWithParam, '');\n        logDebug(\"getUniversalLink cleanUrl:\",cleanUrl)\n        const deeplinkEncodeUrl= encodeURIComponent(cleanUrl);\n        logDebug(\"getUniversalLink standardUniversalLink:\",standardUniversalLink)\n        logDebug(\"getUniversalLink `${shortUniversalLink}?param=${deeplinkEncodeUrl}`:\",`${shortUniversalLink}?param=${deeplinkEncodeUrl}`)\n        return `${shortUniversalLink}?param=${deeplinkEncodeUrl}`;\n    }else if(!useStandardUniversalLink && deeplinkUrl == standardDeeplink){\n        logDebug(\"getUniversalLink shortUniversalLink:\",shortUniversalLink)\n        return shortUniversalLink;\n    }else {\n        const deeplinkEncodeUrl= encodeURIComponent(deeplinkUrl);\n        console.log(\"getUniversalLink standardUniversalLink:\",standardUniversalLink)\n\n        return `${standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`;\n    }*/\n    const deeplinkEncodeUrl = encodeURIComponent(deeplinkUrl);\n    console.log(\"getUniversalLink standardUniversalLink:\", protocol_1.standardUniversalLink);\n    console.log(\"getUniversalLink standardUniversalLink:\", `${protocol_1.standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`);\n    return `${protocol_1.standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`;\n}\nfunction openOKXDeeplink(deeplinkUrl) {\n    var _a;\n    const fullUrl = getUniversalLink(deeplinkUrl);\n    const isTelegram = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n    console.log(\"openOKXDeeplink fullUrl:\", fullUrl);\n    if (!(0, utils_1.isIos)()) {\n        let newWindow = null;\n        if (isTelegram) {\n            newWindow = window.open(deeplinkUrl, '_blank');\n        }\n        else {\n            window.location.href = deeplinkUrl;\n        }\n    }\n    else {\n        openOKXUniversalLink(fullUrl);\n    }\n}\nfunction openOKXUniversalLink(fullUrl) {\n    if (!(0, utils_1.isIos)()) {\n        // if (isTelegram) {\n        window.open(fullUrl, '_blank');\n        // } else {\n        //     window.location.href = fullUrl;\n        // }\n    }\n    else {\n        if (isInTMA()) {\n            window.open(fullUrl, '_blank');\n        }\n        else {\n            console.log(\"windowOpen[before]: \", Date.now());\n            if (window === null || window === void 0 ? void 0 : window.okxLogDebug) {\n                window.open(fullUrl, '_blank');\n            }\n            else {\n                window.open(fullUrl, '_self');\n            }\n            console.log(\"windowOpen[after]: \", Date.now());\n        }\n    }\n}\nfunction openOKXDeeplinkWithFallback(deeplinkUrl) {\n    var _a;\n    const fullUrl = getUniversalLink(deeplinkUrl);\n    const isTelegram = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n    console.log(\"openOKXDeeplinkWithFallback fullUrl:\", fullUrl);\n    let deepLinkOpened = false;\n    const timeoutDuration = 3000; // 1.5秒的等待时间\n    const downloadUrl = protocol_1.standardUniversalLink;\n    console.log(\"openOKXDeeplinkWithFallback standardUniversalLink:\", protocol_1.standardUniversalLink);\n    if (!(0, utils_1.isIos)()) {\n        let newWindow = null;\n        var fallbackToDownloadPage = () => {\n            if (!deepLinkOpened) {\n                if (newWindow) {\n                    newWindow.open(fullUrl, '_self');\n                }\n                else {\n                    window.open(fullUrl, '_blank');\n                }\n            }\n        };\n        if (isTelegram) {\n            newWindow = window.open(deeplinkUrl, '_blank');\n        }\n        else {\n            window.location.href = deeplinkUrl;\n        }\n        setTimeout(fallbackToDownloadPage, timeoutDuration);\n        window.addEventListener('blur', () => {\n            deepLinkOpened = true;\n        }, { once: true });\n        document.addEventListener('visibilitychange', () => {\n            if (document.visibilityState === 'hidden') {\n                deepLinkOpened = true;\n            }\n        });\n    }\n    else {\n        if (isTelegram) {\n            window.open(fullUrl, '_blank');\n        }\n        else {\n            console.log(\"windowOpen[before]: \", Date.now());\n            if (window === null || window === void 0 ? void 0 : window.okxLogDebug) {\n                window.open(fullUrl, '_blank');\n            }\n            else {\n                window.open(fullUrl, '_self');\n            }\n            console.log(\"windowOpen[after]: \", Date.now());\n        }\n    }\n}\nfunction getWindow() {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    return undefined;\n}\nfunction isTelegramUrl(link) {\n    if (!link) {\n        return false;\n    }\n    const url = new URL(link);\n    return url.protocol === 'tg:' || url.hostname === 't.me';\n}\nfunction encodeTelegramUrlParameters(parameters) {\n    let encodedParameters = parameters;\n    encodedParameters = encodedParameters.replace(/\\./g, '%2E');\n    encodedParameters = encodedParameters.replace(/-/g, '%2D');\n    encodedParameters = encodedParameters.replace(/_/g, '%5F');\n    encodedParameters = encodedParameters.replace(/&/g, '-');\n    encodedParameters = encodedParameters.replace(/=/g, '__');\n    encodedParameters = encodedParameters.replace(/%/g, '--');\n    return encodedParameters;\n}\nfunction encodeConnectParams(connectRequest) {\n    const connectRequestStr = JSON.stringify(connectRequest);\n    (0, log_1.logDebug)(\"url encodeConnectParams connectRequestStr \", connectRequestStr);\n    const utf8Array = new TextEncoder().encode(connectRequestStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    // .replace(/\\+/g, '-')\n    // .replace(/\\//g, '_')\n    // .replace(/=+$/, ''); //Compatible with older versions of iOS. Cannot be added directly  (Base64 URL Safe)\n    (0, log_1.logDebug)(\"url encodeConnectParams base64Encoded \", base64Encoded);\n    return base64Encoded;\n}\nfunction encodeTWAConnectURLParams(connectRequest) {\n    const connectRequestStr = JSON.stringify({ topic: connectRequest.topic, clientId: connectRequest.clientId });\n    (0, log_1.logDebug)(\"url encodeConnectParams connectRequestStr\", connectRequestStr);\n    const utf8Array = new TextEncoder().encode(connectRequestStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    return base64Encoded;\n}\nfunction getAppWalletDeepLink(connectParam) {\n    return `${protocol_1.standardDeeplink}?param=${connectParam}`;\n}\nfunction getAppWalletShortDeepLink(topic, clientId) {\n    return `${constants_1.shortUniversalLink}?topic=${topic}${(0, utils_1.getLastSixMd5Hash)(clientId)}`;\n}\n//  make telegram okx wallet TWA url\nfunction getTelegramWalletTWAUrl(connectParam, redirectStr) {\n    let base64Content = { okxconnect: \"\", redirect: \"\", extraparams: \"\", fromtg: false };\n    if (connectParam) {\n        base64Content.okxconnect = connectParam;\n    }\n    if (redirectStr) {\n        base64Content.redirect = redirectStr;\n    }\n    if (!isInTMA()) {\n        base64Content.fromtg = false;\n    }\n    else {\n        base64Content.fromtg = true;\n    }\n    (0, log_1.logDebug)('getTelegramWalletTWAUrl redirect:', base64Content.redirect);\n    let base64ContentStr = JSON.stringify(base64Content);\n    const utf8Array = new TextEncoder().encode(base64ContentStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    const urlSafeBase64 = (0, utils_1.toSafeBase64FromBase64)(base64Encoded);\n    (0, log_1.logDebug)('[TWA] open link:', base64Content, base64Encoded);\n    if (connectParam || redirectStr) {\n        if (!isInTMA()) {\n            // return `http://localhost:5173?tgWebAppStartParam=${urlSafeBase64}`\n            if ((0, constants_1.getTestTwaUrl)()) {\n                return `${(0, constants_1.getTestTwaUrl)()}?tgWebAppStartParam=${urlSafeBase64}`;\n            }\n            else if ((0, constants_1.getTestTgTwaUrl)()) {\n                let result = (0, constants_1.getBotNameAndAppName)((0, constants_1.getTestTgTwaUrl)());\n                if (result) {\n                    let { botName, appName } = result;\n                    return `tg://resolve?domain=${botName}&appname=${appName}&startapp=${urlSafeBase64}`;\n                }\n                return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}&startapp=${urlSafeBase64}`;\n            }\n            else {\n                return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}&startapp=${urlSafeBase64}`;\n            }\n        }\n        else {\n            if ((0, constants_1.getTestTgTwaUrl)()) {\n                return `${(0, constants_1.getTestTgTwaUrl)()}?startapp=${urlSafeBase64}`;\n            }\n            else {\n                return `https://t.me/${constants_1.tgwalletName}/start?startapp=${urlSafeBase64}`;\n            }\n        }\n    }\n    if (!isInTMA()) {\n        // return \"http://localhost:5173\"\n        if ((0, constants_1.getTestTwaUrl)()) {\n            return `${(0, constants_1.getTestTwaUrl)()}`;\n        }\n        else if ((0, constants_1.getTestTgTwaUrl)()) {\n            let result = (0, constants_1.getBotNameAndAppName)((0, constants_1.getTestTgTwaUrl)());\n            if (result) {\n                let { botName, appName } = result;\n                return `tg://resolve?domain=${botName}&appname=${appName}`;\n            }\n            return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}`;\n        }\n        else {\n            return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}`;\n        }\n    }\n    else {\n        if ((0, constants_1.getTestTgTwaUrl)()) {\n            return `${(0, constants_1.getTestTgTwaUrl)()}`;\n        }\n        else {\n            return `https://t.me/${constants_1.tgwalletName}/start`;\n        }\n    }\n}\n//  open TWA url in telegram\nfunction openOKXTMAWalletlinkWithFallback(twaDeepLink) {\n    var _a, _b, _c, _d, _e;\n    (0, log_1.logDebug)('[TWA] open link:', twaDeepLink, \"isInTMA ==> \", isInTMA());\n    if (!isInTMA()) {\n        if ((0, constants_1.getTestTwaUrl)()) {\n            window.open(twaDeepLink, '_blank');\n        }\n        else {\n            window.open(twaDeepLink, '_self');\n        }\n    }\n    else {\n        if ((_b = (_a = getWindow()) === null || _a === void 0 ? void 0 : _a.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) {\n            (_e = (_d = (_c = getWindow()) === null || _c === void 0 ? void 0 : _c.Telegram) === null || _d === void 0 ? void 0 : _d.WebApp) === null || _e === void 0 ? void 0 : _e.openTelegramLink(twaDeepLink);\n        }\n        else {\n            (0, tma_api_1.sendOpenTelegramLink)(twaDeepLink);\n        }\n    }\n}\n/**\n * Returns true if the app is running in TMA.\n */\nfunction urlSafeDecode(urlencoded) {\n    try {\n        urlencoded = urlencoded.replace(/\\+/g, '%20');\n        return decodeURIComponent(urlencoded);\n    }\n    catch (e) {\n        return urlencoded;\n    }\n}\nfunction urlParseQueryString(queryString) {\n    let params = {};\n    if (!queryString.length) {\n        return params;\n    }\n    let queryStringParams = queryString.split('&');\n    let i, param, paramName, paramValue;\n    for (i = 0; i < queryStringParams.length; i++) {\n        param = queryStringParams[i].split('=');\n        paramName = urlSafeDecode(param[0]);\n        paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n        params[paramName] = paramValue;\n    }\n    return params;\n}\nfunction urlParseHashParams(locationHash) {\n    locationHash = locationHash.replace(/^#/, '');\n    let params = {};\n    if (!locationHash.length) {\n        return params;\n    }\n    if (locationHash.indexOf('=') < 0 && locationHash.indexOf('?') < 0) {\n        params._path = urlSafeDecode(locationHash);\n        return params;\n    }\n    let qIndex = locationHash.indexOf('?');\n    if (qIndex >= 0) {\n        let pathParam = locationHash.substr(0, qIndex);\n        params._path = urlSafeDecode(pathParam);\n        locationHash = locationHash.substr(qIndex + 1);\n    }\n    let query_params = urlParseQueryString(locationHash);\n    for (let k in query_params) {\n        params[k] = query_params[k];\n    }\n    return params;\n}\nlet initParams = {};\ntry {\n    let locationHash = location.hash.toString();\n    initParams = urlParseHashParams(locationHash);\n}\ncatch (e) { }\nlet tmaPlatform = 'unknown';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppPlatform) {\n    tmaPlatform = (_a = initParams.tgWebAppPlatform) !== null && _a !== void 0 ? _a : 'unknown';\n}\nif (tmaPlatform === 'unknown') {\n    const window = getWindow();\n    tmaPlatform = (_d = (_c = (_b = window === null || window === void 0 ? void 0 : window.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : 'unknown';\n}\nfunction isInTMA() {\n    var _a;\n    return tmaPlatform !== 'unknown' || !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n}\n/**\n * Returns true if the app is running in the Telegram browser.\n */\nfunction isInTelegramBrowser() {\n    var _a;\n    const isTelegramWebview = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebview);\n    return (isInTMA() || isTelegramWebview) && tmaPlatform === 'unknown';\n}\nfunction getOKXLink(connectRequest, useMini = false, tmaReturnUrl) {\n    (0, log_1.logDebug)(`url  getOKXLink() called connectRequest==> ${JSON.stringify(connectRequest)}  useMini=> ${useMini}  tmaReturnUrl==> ${tmaReturnUrl}`);\n    if (useMini) {\n        if (connectRequest) {\n            var encodeTGParams = encodeTWAConnectURLParams(connectRequest);\n            return getTelegramWalletTWAUrl(encodeTGParams, tmaReturnUrl !== null && tmaReturnUrl !== void 0 ? tmaReturnUrl : \"back\");\n        }\n        else {\n            return getTelegramWalletTWAUrl(undefined, tmaReturnUrl !== null && tmaReturnUrl !== void 0 ? tmaReturnUrl : \"back\");\n        }\n    }\n    else {\n        if ((0, utils_1.useShortLink)()) {\n            if (connectRequest) {\n                return getAppWalletShortDeepLink(connectRequest.topic, connectRequest.clientId);\n            }\n            else {\n                return constants_1.shortUniversalLink;\n            }\n        }\n        else {\n            if (connectRequest) {\n                const base64Encoded = encodeConnectParams(connectRequest);\n                return `${protocol_1.standardDeeplink}?param=${base64Encoded}`;\n            }\n            else {\n                return protocol_1.standardDeeplink;\n            }\n        }\n    }\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isValidObject = exports.RANDOM_LENGTH = exports.isBrowser = exports.resolveLocalStorage = exports.hasLocalStorage = exports.hasBuiltInWebSocket = exports.resolveWebSocketImplementation = void 0;\nexports.hexToByteArray = hexToByteArray;\nexports.getChainId = getChainId;\nexports.toHexString = toHexString;\nexports.concatUint8Arrays = concatUint8Arrays;\nexports.splitToUint8Arrays = splitToUint8Arrays;\nexports.base64encode = base64encode;\nexports.base64decode = base64decode;\nexports.checkWSUrl = checkWSUrl;\nexports.hashKey = hashKey;\nexports.generateRandomBytes32 = generateRandomBytes32;\nexports.generateTopic = generateTopic;\nexports.isIos = isIos;\nexports.getLastSixMd5Hash = getLastSixMd5Hash;\nexports.toSafeBase64FromBase64 = toSafeBase64FromBase64;\nexports.useShortLink = useShortLink;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst tweetnacl_util_1 = __importDefault(require(\"tweetnacl-util\"));\nconst to_string_1 = require(\"uint8arrays/to-string\");\nconst sha256_1 = require(\"@stablelib/sha256\");\nconst safejson_1 = require(\"./safejson\");\nconst log_1 = require(\"./log\");\nconst stringUtils_1 = require(\"../utils/stringUtils\");\nconst crypto_js_1 = __importDefault(require(\"crypto-js\"));\nconst BASE16 = \"base16\";\nfunction hexToByteArray(hexString) {\n    if (hexString.length % 2 !== 0) {\n        throw new Error(`Cannot convert ${hexString} to bytesArray`);\n    }\n    const result = new Uint8Array(hexString.length / 2);\n    for (let i = 0; i < hexString.length; i += 2) {\n        result[i / 2] = parseInt(hexString.slice(i, i + 2), 16);\n    }\n    return result;\n}\nfunction getChainId(chain) {\n    return chain.includes(\":\") ? chain.split(\":\")[1] : chain;\n}\nfunction toHexString(byteArray) {\n    let hexString = '';\n    byteArray.forEach(byte => {\n        hexString += ('0' + (byte & 0xff).toString(16)).slice(-2);\n    });\n    return hexString;\n}\nfunction concatUint8Arrays(buffer1, buffer2) {\n    const mergedArray = new Uint8Array(buffer1.length + buffer2.length);\n    mergedArray.set(buffer1);\n    mergedArray.set(buffer2, buffer1.length);\n    return mergedArray;\n}\nfunction splitToUint8Arrays(array, index) {\n    if (index >= array.length) {\n        throw new Error('Index is out of buffer');\n    }\n    const subArray1 = array.slice(0, index);\n    const subArray2 = array.slice(index);\n    return [subArray1, subArray2];\n}\nfunction encodeUint8Array(value, urlSafe) {\n    const encoded = tweetnacl_util_1.default.encodeBase64(value);\n    if (!urlSafe) {\n        return encoded;\n    }\n    return encodeURIComponent(encoded);\n}\nfunction decodeToUint8Array(value, urlSafe) {\n    if (urlSafe) {\n        value = decodeURIComponent(value);\n    }\n    return tweetnacl_util_1.default.decodeBase64(value);\n}\nfunction base64encode(value, urlSafe) {\n    let uint8Array;\n    if (value instanceof Uint8Array) {\n        uint8Array = value;\n    }\n    else {\n        if (typeof value !== 'string') {\n            value = (0, safejson_1.safeJsonStringify)(value);\n        }\n        uint8Array = tweetnacl_util_1.default.decodeUTF8(value);\n    }\n    return encodeUint8Array(uint8Array, urlSafe);\n}\nfunction base64decode(value, urlSafe) {\n    const decodedUint8Array = decodeToUint8Array(value, urlSafe);\n    return {\n        toString() {\n            return tweetnacl_util_1.default.encodeUTF8(decodedUint8Array);\n        },\n        toObject() {\n            try {\n                return (0, safejson_1.safeJsonParse)(tweetnacl_util_1.default.encodeUTF8(decodedUint8Array));\n            }\n            catch (e) {\n                return null;\n            }\n        },\n        toUint8Array() {\n            return decodedUint8Array;\n        }\n    };\n}\nfunction checkWSUrl(url) {\n    const match = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!match || !match.length) {\n        return false;\n    }\n    let scheme = match[0];\n    if (scheme === undefined) {\n        return false;\n    }\n    return new RegExp(\"^wss?:\").test(scheme);\n}\nconst resolveWebSocketImplementation = () => {\n    if (typeof WebSocket !== \"undefined\") {\n        return WebSocket;\n    }\n    else if (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") {\n        return global.WebSocket;\n    }\n    else if (typeof window !== \"undefined\" && typeof window.WebSocket !== \"undefined\") {\n        return window.WebSocket;\n    }\n    else if (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\") {\n        return self.WebSocket;\n    }\n    return WebSocket;\n    //\n    // return require(\"ws\");\n};\nexports.resolveWebSocketImplementation = resolveWebSocketImplementation;\nconst hasBuiltInWebSocket = () => typeof WebSocket !== \"undefined\" ||\n    (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") ||\n    (typeof window !== \"undefined\" && typeof window.WebSocket !== \"undefined\") ||\n    (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\");\nexports.hasBuiltInWebSocket = hasBuiltInWebSocket;\nconst hasLocalStorage = () => (typeof global !== \"undefined\" && (typeof global.localStorage !== \"undefined\")) ||\n    (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\");\nexports.hasLocalStorage = hasLocalStorage;\nconst resolveLocalStorage = () => {\n    if (typeof global !== \"undefined\" && typeof global.localStorage !== \"undefined\") {\n        return global.localStorage;\n    }\n    else if (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\") {\n        return window.localStorage;\n    }\n    return localStorage;\n};\nexports.resolveLocalStorage = resolveLocalStorage;\nconst isBrowser = () => typeof window !== \"undefined\";\nexports.isBrowser = isBrowser;\nexports.RANDOM_LENGTH = 32;\nfunction hashKey(key, encode = BASE16) {\n    (0, log_1.logDebug)(`hash key called ${key}`);\n    const result = (0, sha256_1.hash)((0, stringUtils_1.okxfromString)(key, encode));\n    return (0, to_string_1.toString)(result, encode);\n}\nfunction generateRandomBytes32() {\n    return tweetnacl_1.default.randomBytes(exports.RANDOM_LENGTH);\n}\nfunction generateTopic() {\n    let randomBytes32 = generateRandomBytes32();\n    (0, log_1.logDebug)(`generate topic called ${randomBytes32}`);\n    return hashKey((0, to_string_1.toString)(randomBytes32, BASE16));\n}\nconst isValidObject = (obj) => Object.getPrototypeOf(obj) === Object.prototype && Object.keys(obj).length;\nexports.isValidObject = isValidObject;\nfunction isIos() {\n    const userAgent = navigator.userAgent;\n    const maxTouchPoints = navigator.maxTouchPoints || 0;\n    // 检测 iPhone、iPod 和传统的 iPad\n    const isIOSDevice = /iPad|iPhone|iPod/.test(userAgent) && !window.MSStream;\n    // 针对 iPadOS 13 及以上的设备进行额外判断\n    const isIPadOS = (userAgent.includes('Mac') && maxTouchPoints > 1);\n    (0, log_1.logDebug)(`utils isIos >>>isIOSDevice: ${isIOSDevice}    >> isIPadOS: ${isIPadOS}`);\n    // 如果是 iOS 设备或者是 iPadOS 设备，返回 true\n    return isIOSDevice || isIPadOS;\n}\nfunction getLastSixMd5Hash(input) {\n    // 生成 MD5 哈希\n    const hash = crypto_js_1.default.MD5(input).toString();\n    // 获取最后六位\n    return hash.slice(-6);\n}\nfunction toSafeBase64FromBase64(base64) {\n    return base64\n        .replace(/=/g, \"\")\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\");\n}\nfunction useShortLink() {\n    // return !!(window as any).useShortLink;\n    return true;\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.openLink = openLink;\nexports.openLinkBlank = openLinkBlank;\nexports.openDeeplinkWithFallback = openDeeplinkWithFallback;\nexports.isMobileUserAgent = isMobileUserAgent;\nexports.getUserAgent = getUserAgent;\nexports.isOS = isOS;\nexports.isBrowser = isBrowser;\nconst ua_parser_js_1 = __importDefault(require(\"ua-parser-js\"));\nconst log_1 = require(\"./log\");\nconst tma_api_1 = require(\"./tma-api\");\nfunction openLink(href, target = '_self') {\n    (0, log_1.logDebug)('openLink', href, target);\n    window.open(href, target, 'noopener noreferrer');\n}\nfunction openLinkBlank(href) {\n    openLink(href, '_blank');\n}\nfunction openDeeplinkWithFallback(href, fallback) {\n    const doFallback = () => {\n        if (isBrowser('safari') || (isOS('android') && isBrowser('firefox'))) {\n            // Safari does not support fallback to direct link.\n            return;\n        }\n        fallback();\n    };\n    const fallbackTimeout = setTimeout(() => doFallback(), 500);\n    window.addEventListener('blur', () => clearTimeout(fallbackTimeout), { once: true });\n    if (isOS('android') && (0, tma_api_1.inTg)()) {\n        openLink(href, '_blank');\n    }\n    else {\n        openLink(href, '_self');\n    }\n}\nfunction isMobileUserAgent() {\n    let check = false;\n    (function (a) {\n        if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) ||\n            /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.slice(0, 4)))\n            check = true;\n    })(navigator.userAgent ||\n        navigator.vendor ||\n        window.opera);\n    return check;\n}\nfunction getUserAgent() {\n    var _a, _b, _c;\n    const results = new ua_parser_js_1.default().getResult();\n    const osName = (_a = results.os.name) === null || _a === void 0 ? void 0 : _a.toLowerCase();\n    const deviceModel = (_b = results.device.model) === null || _b === void 0 ? void 0 : _b.toLowerCase();\n    let os;\n    switch (true) {\n        case deviceModel === 'ipad':\n            os = 'ipad';\n            break;\n        case osName === 'ios':\n            os = 'ios';\n            break;\n        case osName === 'android':\n            os = 'android';\n            break;\n        case osName === 'mac os':\n            os = 'macos';\n            break;\n        case osName === 'linux':\n            os = 'linux';\n            break;\n        case osName === null || osName === void 0 ? void 0 : osName.includes('windows'):\n            os = 'windows';\n            break;\n    }\n    const browserName = (_c = results.browser.name) === null || _c === void 0 ? void 0 : _c.toLowerCase();\n    let browser;\n    switch (true) {\n        case browserName === 'chrome':\n            browser = 'chrome';\n            break;\n        case browserName === 'firefox':\n            browser = 'firefox';\n            break;\n        case browserName === null || browserName === void 0 ? void 0 : browserName.includes('safari'):\n            browser = 'safari';\n            break;\n        case browserName === null || browserName === void 0 ? void 0 : browserName.includes('opera'):\n            browser = 'opera';\n            break;\n    }\n    return {\n        os,\n        browser\n    };\n}\nfunction isOS(...os) {\n    return os.includes(getUserAgent().os);\n}\nfunction isBrowser(...browser) {\n    return browser.includes(getUserAgent().browser);\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXSuiProvider = void 0;\nconst universal_provider_1 = require(\"@okxconnect/universal-provider\");\nconst transactions_1 = require(\"@mysten/sui/transactions\");\nconst utils_1 = require(\"@mysten/sui/utils\");\nconst client_1 = require(\"@mysten/sui/client\");\nclass OKXSuiProvider {\n    get defaultNetwork() {\n        let network = this.provider.requestDefaultChainWithNamespace(universal_provider_1.NameSpaceKeySui);\n        return network;\n    }\n    get suiClient() {\n        var _a;\n        let rpcUrl = (0, client_1.getFullnodeUrl)(this.defaultNetwork);\n        let suiProvider = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[universal_provider_1.NameSpaceKeySui];\n        if (suiProvider && suiProvider.rpcMap) {\n            let url = suiProvider.rpcMap[this.currentChainId];\n            if (url !== undefined) {\n                // @ts-ignore\n                rpcUrl = url;\n                console.log(\"use custom rpc======> \", rpcUrl);\n            }\n            else {\n                console.log(\"use mainnet rpc======> \", rpcUrl);\n            }\n        }\n        else {\n            console.log(\"use mainnet rpc======> \", rpcUrl);\n        }\n        return new client_1.SuiClient({ url: rpcUrl });\n    }\n    get currentChainId() {\n        return `sui:${this.defaultNetwork}`;\n    }\n    constructor(provider) {\n        this.provider = provider;\n    }\n    getAccount() {\n        var _a, _b, _c, _d, _e, _f, _g;\n        let namespaces = universal_provider_1.NameSpaceKeySui;\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[namespaces]) === null || _b === void 0 ? void 0 : _b.accounts[0];\n        console.log('====> getAccount');\n        console.log(account);\n        if (!account) {\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        console.log(\"sui_publicKey\", (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[namespaces]) === null || _d === void 0 ? void 0 : _d.extra);\n        let extra = (_g = (_f = (_e = this.provider.session) === null || _e === void 0 ? void 0 : _e.namespaces[namespaces]) === null || _f === void 0 ? void 0 : _f.extra) === null || _g === void 0 ? void 0 : _g[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n            console.log(\"sui_publicKey\", publicKey);\n        }\n        if (!address) {\n            return undefined;\n        }\n        return {\n            address: address,\n            publicKey: publicKey\n        };\n    }\n    signTransaction(input) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const [txBytes, txSerialize] = yield this.generateTsBytesAndSerizlize(input);\n            const ret = yield this.provider.request({\n                method: \"sui_signTransactionBlock\",\n                params: {\n                    txBytes: txBytes,\n                    txSerialize: txSerialize\n                },\n                injectParams: Object.assign(Object.assign({}, input), { account: Object.assign({}, this.getAccount()) })\n            }, this.currentChainId);\n            if (\"result\" in ret) {\n                return {\n                    signature: ret.result,\n                    transactionBlockBytes: txBytes,\n                };\n            }\n            else {\n                let errorData = ret;\n                return errorData.error;\n            }\n        });\n    }\n    signAndExecuteTransaction(input) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const [txBytes, txSerialize] = yield this.generateTsBytesAndSerizlize(input);\n            let ret = (yield this.provider.request({\n                method: \"sui_signAndExecuteTransactionBlock\",\n                params: {\n                    txBytes: txBytes,\n                    txSerialize: txSerialize,\n                },\n                injectParams: Object.assign(Object.assign({}, input), { account: Object.assign({}, this.getAccount()) })\n            }, this.currentChainId));\n            if (\"result\" in ret) {\n                return {\n                    confirmedLocalExecution: false,\n                    digest: ret.result,\n                    txBytes: txBytes,\n                };\n            }\n            else {\n                let errorData = ret;\n                return errorData.error;\n            }\n        });\n    }\n    // input = {message: uint8Array }\n    signMessage(input) {\n        return __awaiter(this, void 0, void 0, function* () {\n            console.log(\"====> signMessage:\");\n            console.log(input);\n            const decoder = new TextDecoder(\"utf8\");\n            const b64encoded = btoa(decoder.decode(input.message));\n            const message = atob(b64encoded);\n            const ret = (yield this.provider.request({\n                method: \"sui_signMessage\",\n                params: {\n                    message: message\n                },\n                injectParams: Object.assign(Object.assign({}, input), { account: Object.assign(Object.assign({}, this.getAccount()), { chains: [universal_provider_1.SUI_CHAINS.MAINNET] }) })\n            }, this.currentChainId));\n            if (\"result\" in ret) {\n                let successData = ret;\n                console.log(\"====> signAction result\");\n                console.log(ret);\n                const sign = successData.result;\n                return {\n                    messageBytes: b64encoded,\n                    signature: sign,\n                };\n            }\n            else {\n                console.log(\"====> signAction result error\");\n                let errorData = ret;\n                return errorData.error;\n            }\n        });\n    }\n    // input = {message: uint8Array }\n    signPersonalMessage(input) {\n        return __awaiter(this, void 0, void 0, function* () {\n            console.log(\"====> signPersonalMessage：\");\n            console.log(input);\n            const decoder = new TextDecoder(\"utf8\");\n            const b64encoded = btoa(decoder.decode(input.message));\n            const message = atob(b64encoded);\n            const ret = (yield this.provider.request({\n                method: \"sui_signPersonalMessage\",\n                params: {\n                    message: message,\n                },\n                injectParams: Object.assign(Object.assign({}, input), { account: Object.assign({}, this.getAccount()) })\n            }, this.currentChainId));\n            if (\"result\" in ret) {\n                let successData = ret;\n                console.log(\"====> signAction result\");\n                console.log(ret);\n                const sign = successData.result;\n                return {\n                    bytes: b64encoded,\n                    signature: sign,\n                };\n            }\n            else {\n                console.log(\"====> signAction result error\");\n                let errorData = ret;\n                return errorData.error;\n            }\n        });\n    }\n    /// generate txBytes and txSerialize\n    generateTsBytesAndSerizlize(input) {\n        return __awaiter(this, void 0, void 0, function* () {\n            /// txBytes and txSerialize may be constructed in advance by the dapp side\n            let resultTuple = [\"\", \"\"];\n            if (\"txBytes\" in input &&\n                input.txBytes.length > 0 &&\n                \"txSerialize\" in input &&\n                input.txSerialize.length > 0) {\n                resultTuple = [input.txBytes, input.txSerialize];\n            }\n            /// Otherwise, a transactionBlock parameter is required.\n            if (!(\"transactionBlock\" in input)) {\n                throw new universal_provider_1.OKXConnectError(universal_provider_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `params doesn't contains transactionBlock`);\n            }\n            let senderAccounts = this.provider.requestAccountsWithNamespace(universal_provider_1.NameSpaceKeySui);\n            if (senderAccounts.length == 0) {\n                throw new universal_provider_1.OKXConnectError(universal_provider_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `there is no sui account`);\n            }\n            /// sender is required\n            input.transactionBlock.setSender(senderAccounts[0]);\n            const result = yield input.transactionBlock.build({\n                client: this.suiClient,\n            });\n            const txBytes = (0, utils_1.toBase64)(result);\n            const txSerialize = yield transactions_1.Transaction.from(txBytes).toJSON();\n            resultTuple = [txBytes, txSerialize];\n            return new Promise((resolve) => {\n                resolve(resultTuple);\n            });\n        });\n    }\n}\nexports.OKXSuiProvider = OKXSuiProvider;\nexports.default = OKXSuiProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXSuiProvider = void 0;\nvar OKXSuiProvider_1 = require(\"./OKXSuiProvider\");\nObject.defineProperty(exports, \"OKXSuiProvider\", { enumerable: true, get: function () { return OKXSuiProvider_1.OKXSuiProvider; } });\n","<template>\n  <div id=\"app\">\n    <el-container>\n      <el-header>OKX Connect</el-header>\n      <el-main>\n        <el-card class=\"wallet-info\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Wallet Info</div>\n          </template>\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Wallet Address:</strong> {{ getWalletAddress }}\n            </el-col>\n          </el-row>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Status :</strong> {{ currentStatus }}\n            </el-col>\n          </el-row>\n\n        </el-card>\n\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Connect Params</div>\n          </template>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"withUI\" @change=\"handleWithUI\">\n                Show UI\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"universalToTG\" @change=\"handleUniversalToTG\">\n                Use mini wallet\n              </el-checkbox>\n            </el-col>\n          </el-row>\n\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Modals</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"modals\" placeholder=\"Modals\" @change=\"handleModalsSelect\" multiple>\n                <el-option label=\"Before\" value=\"before\"/>\n                <el-option label=\"Success\" value=\"success\"/>\n                <el-option label=\"Error\" value=\"error\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center; justify-content: space-between;\">\n            <el-col :span=\"6\" style=\"gap: 2px\">\n              <p style=\"font-size: 11pt; margin: 0px\">Return Strategy</p>\n              <p style=\"font-size: 9pt; margin: 0px\">(Mobile only)</p>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-select\n                  v-model=\"returnStrategy\"\n                  @change=\"handleReturnStrategySelect\"\n                  placeholder=\"Return Strategy\"\n              >\n                <el-option\n                    v-for=\"strategy in returnStrategies\"\n                    :key=\"`return-strategy-select-option-${strategy}`\"\n                    :label=\"strategy\"\n                    :value=\"strategy\"\n                />\n              </el-select>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-input\n                  v-if=\"returnStrategy === 'deeplink'\"\n                  v-model=\"deeplink\"\n                  @change=\"handleReturnStrategyDeeplink\"\n                  placeholder=\"Deeplink\"\n                  :disabled=\"returnStrategy !== 'deeplink'\"\n                  style=\"margin: 0px\"\n              />\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Lang</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"language\" @change=\"handleLanguageSelect\" placeholder=\"Language\">\n                <el-option v-for=\"locale in locales\" :key=\"`language-select-option-${locale}`\" :label=\"locale\"\n                           :value=\"locale\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Theme</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"theme\" @change=\"handleThemeSelect\" placeholder=\"Theme\">\n                <el-option label=\"LIGHT\" :value=\"THEME.LIGHT\"/>\n                <el-option label=\"DARK\" :value=\"THEME.DARK\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <!--          <el-row>-->\n          <!--          <el-row style=\"align-items: center\">-->\n          <!--            <el-col :span=\"4\">-->\n          <!--              <p style=\"font-size: 11pt\">Connect</p>-->\n          <!--              <p style=\"font-size: 11pt\">Methods</p>-->\n          <!--            </el-col>-->\n          <!--            <el-col :span=\"20\">-->\n          <!--              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" placeholder=\"Methods\">-->\n          <!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n          <!--                           :value=\"methods\" />-->\n\n          <!--              </el-select>-->\n          <!--            </el-col>-->\n          <!--          </el-row>-->\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Connect</p>\n              <p style=\"font-size: 11pt\">Methods</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" multiple placeholder=\"methods\">\n                <el-option\n                    v-for=\"item in connectMethods\"\n                    :key=\"item\"\n                    :label=\"item\"\n                    :value=\"item\">\n                </el-option>\n              </el-select>\n\n\n              <!--              <el-select v-model=\"selectedMethod\" placeholder=\"Methods\" @change=\"handleConnectMethodsSelect\" multiple>-->\n              <!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n              <!--                           :value=\"methods\" />-->\n              <!--              </el-select>-->\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">ton_proof</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-input v-model=\"tonProofValue\" placeholder=\"input ton_proof\"></el-input>\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" align=\"middle\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Required Chains</div>\n            </el-col>\n            <el-col\n                :span=\"6\"\n                v-for=\"item in Object.keys(availableChains)\"\n                :key=\"item\"\n            >\n              <el-checkbox\n                  v-model=\"availableChains[item].checked\"\n                  :disabled=\"!areChainsInit\"\n              >{{ availableChains[item].name }}\n              </el-checkbox\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" align=\"middle\" style=\"margin-top: 20px\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Optional Chains</div>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:43114')\" @change=\"() => handleOptionChange('eip155:43114')\">\n                AVAX\n              </el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:10')\" @change=\"() => handleOptionChange('eip155:10')\">OP</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:8453')\" @change=\"() => handleOptionChange('eip155:8453')\">\n                BASE\n              </el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:99781165')\"\n                           @change=\"() => handleOptionChange('eip155:99781165')\">Nonexist\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp')\"\n                           @change=\"() => handleOptionChange('solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp')\">Solana\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('ton:-239')\" @change=\"() => handleOptionChange('ton:-239')\">Ton\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('btc:mainnet')\"\n                           @change=\"() => handleOptionChange('btc:mainnet')\">btc\n              </el-checkbox>\n            </el-col>\n\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"initBtnClicked\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectInitStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"connectBtnClicked\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectStatusStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"syncAllAddressClick\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ syncAllAddressStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"danger\"\n                  @click=\"disconnectAction\"\n                  icon=\"el-icon-switch-button\"\n                  :disabled=\"!areChainsInit || walletAddress.length == 0\"\n              >{{ disconnectStatusStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <teleport to=\"body\">\n            <div v-if=\"showModal\" class=\"modal-overlay\" @click=\"closeModal\">\n              <div class=\"modal-content\" @click.stop>\n                <button class=\"close-button\" @click=\"closeModal\">\n                  &times;\n                </button>\n                <h2>Scan to connect</h2>\n                <qrcode-vue :value=\"qrValue\" :size=\"350\" level=\"L\"/>\n              </div>\n            </div>\n          </teleport>\n        </el-card>\n\n        <!-- 发送交易 -->\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Transactions</div>\n          </template>\n\n          <el-tabs v-model=\"activeTab\" type=\"border-card\" @tab-click=\"clickActiveTab\">\n            <!-- ETH -->\n            <el-tab-pane label=\"ETH\" name=\"eip155:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to Fuse)\n                  </el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send ETH)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve TONCoin)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(eth mint\n                    nft)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add SPX6900)\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TON\" name=\"ton:-239\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_getAccount\">ton_getAccount</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_sendTransaction\">ton_sendTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- solana -->\n            <el-tab-pane label=\"Sol\" name=\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- Sui-->\n            <el-tab-pane label=\"Sui\" name=\"sui:mainnet\">\n              <SuiPanel @generateTransactionParams=\"sui_generateTransactionParams\"/>\n            </el-tab-pane>\n            <!-- BTC -->\n            <el-tab-pane label=\"BTC\" name=\"btc:mainnet\">\n              <BTCPanel @generateTransactionParams=\"btc_generateTransactionParams\"/>\n            </el-tab-pane>\n\n            <!-- Fractal BTC -->\n            <el-tab-pane label=\"Fractal\" name=\"fractal:mainnet\">\n              <FractalPanel @generateTransactionParams=\"fractal_generateTransactionParams\"/>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Tron\" name=\"tron:mainnet\">\n              <TronTransactionPanel\n                  @generateTransactionParams=\"tron_generateTransactionParams\"\n                  @generateTransactionResult=\"tron_getTransactionResult\"/>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Aptos\" name=\"aptos:mainnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signTransaction\">aptos_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"aptos_signAndSubmitTransaction\">aptos_signAndSubmitTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Cosmos\" name=\"cosmos:cosmoshub-4\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <!-- Polygon-->\n            <el-tab-pane label=\"Polygon\" name=\"eip155:137\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send POL)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve sushi)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(polygon mint\n                    nft)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add LGNS)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_testRpc()\">wallet_testRpc(Polygon)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\"\n                  >eth_sendTransaction(转账FUSE)\n                  </el-button\n                  >\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\"\n                  >eth_sendTransaction(授权USDC)\n                  </el-button\n                  >\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- BSC-->\n            <el-tab-pane label=\"BNB\" name=\"eip155:56\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to BNB)\n                  </el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send BNB)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve POSI)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add FET)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_testRpc()\">wallet_testRpc(check balance on eth)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Fuse\" name=\"eip155:122\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_swap\">eth_sendTransaction(Swap)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Sonic testnet\" name=\"svm:70000062\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Movement\" name=\"movement:testnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"move_signTransaction\">move_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"move_signAndSubmitTransaction\">move_signAndSubmitTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n\n            <el-tab-pane label=\"osmos\" name=\"cosmos:osmosis-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"SEI\" name=\"cosmos:pacific-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Starknet\" name=\"starknet:mainnet\">\n              <StarknetPanel ref=\"starknetPanelRef\" @generateTransactionParams=\"starknet_generateTransactionParams\"\n                             @generateTransactionResult=\"starknet_getTransactionResult\"/>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TEST \" name=\"test:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"testBase64UrlSafe\">testBase64UrlSafe</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n          </el-tabs>\n\n          <el-col :xs=\"24\" :sm=\"24\" style=\"margin: 16px 0px;\">\n            <el-row style=\"align-items: center; justify-content: space-between; margin-bottom: 8px;\">\n              <el-col :span=\"4\">\n                <p style=\"font-size: 11pt; margin: 0px; text-align: start\">Redirect param (only for ETH, Polygon, BNB,\n                  Fuse)</p>\n              </el-col>\n              <el-col :span=\"9\">\n                <el-select\n                    v-model=\"redirect\"\n                    @change=\"handleRedirectSelect\"\n                    placeholder=\"Return Strategy\"\n                    :disabled=\"!canChainAddRedirectParam()\"\n                >\n                  <el-option\n                      v-for=\"strategy in returnStrategies\"\n                      :key=\"`return-strategy-select-option-${strategy}`\"\n                      :label=\"strategy\"\n                      :value=\"strategy\"\n                  />\n                </el-select>\n              </el-col>\n              <el-col :span=\"10\">\n                <el-input\n                    v-if=\"redirect === 'deeplink'\"\n                    v-model=\"redirectDeeplink\"\n                    @change=\"handleRedirectDeeplink\"\n                    placeholder=\"Deeplink\"\n                    :disabled=\"!canChainAddRedirectParam() || redirect !== 'deeplink'\"\n                    style=\"margin: 0px\"\n                />\n              </el-col>\n            </el-row>\n            <el-button\n                type=\"primary\" @click=\"addRedirectParam()\"\n                :disabled=\"!canChainAddRedirectParam() || !testTransaction\"\n            >\n              Add redirect param to data\n            </el-button>\n          </el-col>\n\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Data:</div>\n            <el-input v-model=\"testTransaction\" type=\"textarea\" :rows=\"5\" placeholder=\"sendTransactions\"></el-input>\n          </el-col>\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Result :</div>\n            <el-input v-model=\"testboc\" type=\"textarea\" :rows=\"5\" placeholder=\"boc\"></el-input>\n          </el-col>\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button type=\"primary\" :disabled=\"sendBtnDisabled\" @click=\"sendTransaction()\">{{\n                  testTransactionStr\n                }}\n              </el-button>\n            </el-col>\n          </el-row>\n        </el-card>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<style scoped>\n/* 重置全局边距和内边距 */\nbody,\nhtml {\n  margin: 0;\n  padding: 0;\n  height: 100%;\n}\n\n/* 确保 app 容器占满整个视口 */\n#app {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin: 0 auto;\n  /* 居中 */\n  max-width: 600px;\n  /* 设置最大宽度 */\n  padding: 0 20px;\n  /* 添加一些左右内边距 */\n}\n\n/* 调整 el-container 样式 */\n.el-container {\n  min-height: 100vh;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n}\n\n/* 调整 el-header 样式 */\n.el-header {\n  background-color: #333333;\n  color: white;\n  height: 50px;\n  line-height: 50px;\n  font-size: 18px;\n  font-weight: bold;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n}\n\n/* 调整 el-main 样式 */\n.el-main {\n  padding: 70px 0 20px;\n  /* 增加顶部内边距以避免被固定header遮挡 */\n  flex-grow: 1;\n}\n\n.el-card {\n  margin-bottom: 20px;\n}\n\n.info-row {\n  margin-bottom: 10px;\n}\n\n.input-label {\n  margin-bottom: 5px;\n  text-align: left;\n}\n\n.el-input {\n  margin-bottom: 10px;\n}\n\n/* 通用按钮样式 */\n.wallet-actions .el-button,\n.transaction .el-button,\n.clear-cache .el-button {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 40px;\n}\n\n.wallet-actions .el-button span,\n.transaction .el-button span,\n.clear-cache .el-button span {\n  margin: 0 auto;\n}\n\n/* 按钮行间距 */\n.wallet-actions .button-row,\n.transaction .button-row {\n  margin-bottom: 8px;\n}\n\n.wallet-actions .button-row:last-child,\n.transaction .button-row:last-child {\n  margin-bottom: 0;\n}\n\n/* 调整图标和文字的对齐 */\n.wallet-actions .el-button [class^=\"el-icon-\"],\n.transaction .el-button [class^=\"el-icon-\"],\n.clear-cache .el-button [class^=\"el-icon-\"] {\n  margin-right: 5px;\n  vertical-align: middle;\n}\n\n/* 新增：调整发送交易按钮与输入框的间距 */\n.transaction .el-row:not(:last-child) {\n  margin-bottom: 10px;\n}\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  text-align: center;\n  position: relative;\n  max-width: 90%;\n  width: 400px;\n}\n\n.close-button {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  font-size: 24px;\n  border: none;\n  background: none;\n  cursor: pointer;\n}\n\n/* 响应式调整 */\n@media (max-width: 600px) {\n  #app {\n    padding: 0 10px;\n  }\n\n  .el-main {\n    padding: 60px 0 10px;\n  }\n}\n</style>\n<script>\nimport {OKX_CONNECT_ERROR_CODES, safeJsonStringify, getAppWalletDeepLink, getUniversalLink} from \"@okxconnect/core\"\nimport {\n  OKXBtcProvider,\n  OKXUniversalProvider,\n  OKXCosmosProvider,\n  OKXTonProvider,\n  OKXTronProvider,\n  OKXStarknetProvider\n} from \"@okxconnect/universal-provider\"\nimport {OKXSolanaProvider} from \"@okxconnect/solana-provider\";\nimport {\n  Connection,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n  TransactionMessage,\n  VersionedTransaction\n} from '@solana/web3.js';\nimport {OKXSuiProvider as SuiAdapter} from \"@okxconnect/sui-provider\"\nimport QrcodeVue from 'qrcode.vue'\n\nimport {OKXAptosProvider} from \"@okxconnect/aptos-provider\";\nimport {Aptos, AptosConfig, Network} from \"@aptos-labs/ts-sdk\";\n\nimport BTCPanel from \"./components/BtcTransactionPanel.vue\";\nimport FractalPanel from \"./components/FractalTransactionPanel.vue\"\nimport SuiPanel from \"./components/SuiTransactionPanel.vue\";\nimport StarknetPanel from \"./components/StarknetTransactionPanel.vue\";\n\nimport {OKXUniversalConnectUI, THEME} from \"@okxconnect/ui\";\nimport {ethers} from 'ethers';\nimport VConsole from 'vconsole';\nimport nacl from \"tweetnacl\";\n\nconst {verifyADR36Amino} = require('@keplr-wallet/cosmos')\nconst {fromBech32} = require('@cosmjs/encoding')\nimport {verifyPersonalMessageSignature} from '@mysten/sui/verify';\nimport {useShortLink} from \"@okxconnect/core\";\nimport TronTransactionPanel from \"@/components/TronTransactionPanel.vue\";\nimport {TronWeb} from \"tronweb\";\nimport {RpcProvider as StarknetRpcProvider, Account as StarknetAccount} from \"starknet\";\nimport {ref, toRaw} from \"vue\";\n\nnew VConsole();\n\nconst allChains = {\n  1: {name: \"Eth\", checked: false},\n  56: {name: \"BNB\", checked: false},\n  137: {name: \"Polygon\", checked: false},\n  122: {name: \"Fuse\", checked: false},\n  \"ton:-239\": {name: \"TON\", checked: false},\n  \"btc:mainnet\": {name: \"BTC\", checked: false},\n  \"sui:mainnet\": {name: \"Sui\", checked: false},\n  \"aptos:mainnet\": {name: \"Aptos\", checked: false},\n  \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\": {\n    name: \"Solana\",\n    checked: false,\n  },\n  \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\": {\n    name: \"Sol testnet\",\n    checked: false,\n  },\n  \"svm:70000062\": {\n    name: \"Sonic testnet\",\n    checked: false,\n  },\n  \"movement:testnet\": {name: \"Movement\", checked: false},\n  \"fractal:mainnet\": {name: \"Fractal\", checked: false},\n  \"cosmos:osmosis-1\": {name: \"Osmos\", checked: false},\n  \"cosmos:cosmoshub-4\": {name: \"Cosmos\", checked: false},\n  \"cosmos:pacific-1\": {name: \"SEI\", checked: false},\n  \"cosmos:abvdefg\": {name: \"cosmos:abvdefg\", checked: false},\n  \"tron:mainnet\": {name: \"tron\", checked: false},\n  997865: {name: \"Non Exist chain\", checked: false},\n  2020: {name: \"Ronin\", checked: false},\n  1666600000: {name: \"Harmony\", checked: false},\n  \"starknet:mainnet\": {name: \"starknet\", checked: false}\n};\n\nconst chainsThatCanAddRedirectParam = [\n  \"eip\"\n]\n\nvar optionChains = new Set([]);\nvar selectedModals = [\"before\", \"success\", \"error\"];\nvar selectedReturnStrategy = \"none\";\nvar selectedDeepLink = \"tg://resolve\";\nvar selectedLanguage = \"en_US\";\nvar selectedTheme = THEME.LIGHT;\n\n// import QrcodeVue from 'qrcode.vue'\nexport default {\n  name: \"App\",\n  components: {\n    TronTransactionPanel,\n    QrcodeVue,\n    BTCPanel,\n    FractalPanel,\n    SuiPanel,\n    StarknetPanel\n  },\n\n  setup() {\n    const sendBtnDisabled = ref(false)\n\n    return {\n      sendBtnDisabled\n    }\n  },\n  data: () => {\n    return {\n      activeTab: \"eip155:1\",\n      testTopic: \"\",\n      testPublicKey: \"\",\n      testProofPayload: \"\",\n      tonProofValue: \"\",\n      pendingDeepLink: \"-\",\n      logList: [],\n      connectReady: false,\n      connectStatusStr: \"Connect\",\n      syncAllAddressStr: \"syncAllAddress\",\n      connectInitStr: \"init test\",\n      disconnectStatusStr: \"Disconnect\",\n      localPubKey: \"\",\n      localSecKey: \"\",\n      testTransaction: \"\",\n      selectedChain: \"eip155:1\",\n      testTransactionStr: \"Send\",\n      walletAddress: \"\",\n      testboc: \"\",\n      ProofPayloadVerify: \"\",\n      showModal: false,\n      showVerifyRow: false,\n      qrValue: \"https://www.okx.com/download\",\n      currentStatus: \"\",\n      areChainsInit: false,\n      availableChains: allChains,\n      isOptionalChecked: (chainId) => {\n        return optionChains.has(chainId);\n      },\n      withUI: localStorage.getItem(\"autoRefresh\") != \"false\",\n      universalToTG: localStorage.getItem(\"universalToTG\") != \"false\",\n      modals: selectedModals,\n      returnStrategies: [\"none\", \"back\", \"deeplink\"],\n      returnStrategy: selectedReturnStrategy,\n      deeplink: selectedDeepLink,\n      locales: [\n        \"en_US\",\n        \"ru_RU\",\n        \"zh_CN\",\n        \"zh\",\n        \"ar_AE\",\n        \"cs_CZ\",\n        \"de_DE\",\n        \"es_ES\",\n        \"es_LAT\",\n        \"fr_FR\",\n        \"id_ID\",\n        \"it_IT\",\n        \"nl_NL\",\n        \"pl_PL\",\n        \"pt_BR\",\n        \"pt_PT\",\n        \"ro_RO\",\n        \"tr_TR\",\n        \"uk_UA\",\n        \"vi_VN\",\n        \"zh_TW\"\n      ],\n      selectedMethod: [],\n      selectedMethodData: [],\n      connectMethods: [\n        \"wallet_addEthereumChain(ETH)\",\n        \"personal_sign(ETH)\",\n        \"solana_signMessage(Sol mainnet)\",\n        \"sui_signMessage(Sui mainnet)\",\n        \"sui_signPersonalMessage(Sui mainnet)\",\n        \"btc_signMessage(BTC)\",\n        \"aptos_signMessage(aptos mainnet)\",\n        \"cosmos_signArbitrary(cosmoshub)\",\n        \"test_noSupport_eth(ETH)\",\n        \"tron_signMessage\",\n        \"tron_signMessageV2\",\n        \"starknet_signMessage\",\n        \"sync_all_addresses\"\n      ],\n\n      language: selectedLanguage,\n      theme: selectedTheme,\n      THEME: THEME,\n      redirect: selectedReturnStrategy,\n      redirectDeeplink: selectedDeepLink,\n      handleWithUI: (isChecked) => {\n        localStorage.setItem(\"autoRefresh\", `${isChecked}`);\n        location.reload();\n      },\n      handleUniversalToTG: (isChecked) => {\n        localStorage.setItem(\"universalToTG\", `${isChecked}`);\n      },\n      handleOptionChange: (chainId) => {\n        console.log(\"handleOptionChange ->chainId:\",chainId)\n        if (optionChains.has(chainId)) {\n          optionChains.delete(chainId);\n        } else {\n          optionChains.add(chainId);\n        }\n      },\n      starknetPanelTypedData: ''\n    };\n  },\n  computed: {\n    getWalletAddress: function () {\n      return this.walletAddress;\n    },\n  },\n  methods: {\n    isChecked(chainId) {\n      return this.selectedChains.has(chainId);\n    },\n\n    initChains(newChains) {\n      if (newChains.length > 0) {\n        const updatedChains = Object.assign({}, this.availableChains);\n        for (const chainId of newChains) {\n          if (updatedChains[chainId]) {\n            updatedChains[chainId].checked = !updatedChains[chainId].checked;\n          }\n        }\n        this.availableChains = updatedChains;\n      }\n\n      this.areChainsInit = true;\n    },\n\n    async clickActiveTab(tab) {\n      const tabName = tab.props ? tab.props.name : tab.name;\n      this.selectedChain = tabName;\n      console.log(`已切换到链 :`, tabName);\n\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (tabName == \"starknet:mainnet\") {\n        this.sendBtnDisabled = true\n      } else {\n        this.sendBtnDisabled = false\n      }\n\n      window.provider.setDefaultChain(this.selectedChain);\n    },\n\n    async initBtnClicked() {\n      window.okxLogDebug = true\n      var initCall;\n      if (!this.withUI) {\n        initCall = OKXUniversalProvider.init({\n          dappMetaData: {\n            name: \"univer test dapp\",\n            icon: \"https://avatars.githubusercontent.com/u/37784886\",\n          },\n        });\n      } else {\n        initCall = OKXUniversalConnectUI.init({\n          dappMetaData: {\n            icon: \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\",\n            name: \"OKX WalletConnect UI Demo\",\n          },\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: 'all',\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme\n          },\n        });\n      }\n\n      initCall.then((provider) => {\n        window.provider = provider;\n        window.tonProvider = new OKXTonProvider(window.provider);\n        window.tonProvider.onStatusChange((walletInfo) => {\n              console.log('TONConnection onStatusChange:', JSON.stringify(walletInfo));\n            }, (err) => {\n              console.log('TONConnection onStatusChange error:', err);\n            }\n        )\n\n        if (window.provider instanceof OKXUniversalConnectUI) {\n          window.provider.onModalStateChange((state) => {\n            console.log(`onModalStateChange   ${JSON.stringify(state)}`)\n          })\n        }\n\n        console.log(\"init finished:\", provider);\n        console.log(\"init finished session:\", JSON.stringify(provider.session));\n\n        if (provider.session?.namespaces) {\n          const newChains = [];\n          console.log(\"namespaces\", provider.session.namespaces);\n          Object.entries(provider.session.namespaces).forEach(([key, value]) => {\n            if (key === \"eip155\") {\n              value.chains.forEach((chain) => {\n                newChains.push(parseInt(chain.substring(7)));\n              });\n            } else {\n              value.chains.forEach((chain) => {\n                newChains.push(chain);\n              });\n            }\n          });\n\n          console.log(\"existing chains:\", newChains);\n          this.initChains(newChains);\n        } else {\n          this.initChains([]);\n        }\n\n        provider.on(\"display_uri\", (uri) => {\n          if (!useShortLink()) {\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>display_uri  ==> \", uri);\n        });\n\n        provider.on(\"connect_signResponse\", (items) => {\n          console.log(\"通知>>>connect_signResponse  ==> \", JSON.stringify(items));\n          this.verifyMessage(items)\n        })\n\n        provider.on(\"short_display_uri\", (uri) => {\n          if (useShortLink()) {\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>short_display_uri  ==> \", uri);\n        });\n\n\n        provider.on(\"session_connecting\", () => {\n          console.log(\"通知>>>session_connecting  ==> \");\n        });\n\n        provider.on(\"connect\", (session) => {\n          console.log(\"通知>>>get connect session\", session);\n        });\n        provider.on(\"reconnect\", (session) => {\n          console.log(\"通知>>>get reconnect session\", session);\n          this.walletAddress = \"connected\";\n        });\n        provider.on(\"disconnect\", ({topic}) => {\n          console.log(`通知>>>get disconnect  ${topic}`);\n          this.walletAddress = \"disconnecteddddd\";\n        });\n        provider.on(\"session_delete\", ({topic}) => {\n          console.log(`通知>>>get session_delete  ${topic}`);\n        });\n        provider.on(\"session_update\", (session) => {\n          console.log(`通知>>>get session_update `, JSON.stringify(session));\n        });\n      });\n    },\n\n    async connectBtnClicked() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        this.testTonSdk();\n      } else {\n        console.log(`connectBtnClicked provider not finish init`);\n      }\n    },\n\n    async syncAllAddressClick() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        if (window.provider instanceof OKXUniversalProvider) {\n          if (window.provider.connected()) {\n            try {\n              let message = await window.provider.syncAllAddresses()\n              if (typeof message == \"string\") {\n                this.testboc = message\n              } else {\n                this.testboc = JSON.stringify(message)\n              }\n            } catch (e) {\n              this.testboc = JSON.stringify(e)\n            }\n          } else {\n            this.testboc = \"not connected\"\n          }\n        }\n\n      } else {\n        console.log(`syncAllAddress provider not finish init`);\n      }\n    },\n\n    async disconnectAction() {\n      try {\n        console.log(\"get disconnect wallet btn clicked\");\n        // await TON.disconnect();\n        var provider = window.provider;\n        await provider.disconnect();\n        this.walletAddress = \"disconnected\";\n      } catch (error) {\n        console.log(\"Disconnect  error ==>> \", error.message);\n        this.currentStatus = error.message;\n      }\n    },\n\n    async eth_requestAccounts() {\n      var data = {method: \"eth_requestAccounts\"};\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_chainId() {\n      var data = {method: \"eth_chainId\"};\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_switchEthereumChain() {\n      var data = {\n        method: \"wallet_switchEthereumChain\",\n        params: [\n          {\n            chainId: \"0x7a\"\n          }\n        ]\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_addEthereumChain() {\n      var data = {\n        method: \"wallet_addEthereumChain\",\n        params: {\n          blockExplorerUrls: [\"https://explorer.fuse.io\"],\n          chainId: \"0x7a\",\n          chainName: \"Fuse\",\n          nativeCurrency: {name: \"Fuse\", symbol: \"FUSE\", decimals: 18},\n          rpcUrls: [\"https://rpc.fuse.io\"],\n        },\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    fromAccountToAddress(account) {\n      if (!account) {\n        return \"\"\n      }\n      try {\n        let addressArr = account.split(\":\").slice(2);\n        let address = addressArr.length > 0 ? addressArr.join(\":\") : \"\";\n        return address;\n      } catch (e) {\n        return \"\"\n      }\n\n    },\n\n    requestEVMAccountWithSession(chainId) {\n      console.log(\"requestAccountWithSession >>>\", chainId);\n      if (window.provider && window.provider.session && chainId) {\n        let key = chainId.includes(\":\") ? chainId.split(\":\")[0] : chainId;\n        let namespace = window.provider.session.namespaces\n        if (key === \"eip155\") {\n          let evmNameSpace = namespace[key];\n          if (evmNameSpace && evmNameSpace.accounts) {\n            let accounts = evmNameSpace.accounts;\n            return [\n              ...new Set(\n                  accounts\n                      // get the accounts from the active chain\n                      .filter((account) => account.includes(chainId+\":\"))\n                      // remove namespace & chainId from the string\n                      .map((account) => {\n                        return this.fromAccountToAddress(account);\n                      })\n              ),\n            ];\n\n          }\n\n        }\n      }\n      return undefined\n    },\n\n    async personal_sign() {\n      if (this.selectedChain === \"eip155:1\") {\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0x1ca023f10e157d148deed210f8bee193657a1eaa7f187909e20a9dc3b071dbc364c41fde37960c05093359f410a061ec8a7dca8c0c39fc7c1e24de8a3329775d1b\n\n        var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n        var address = accounts[0];\n        console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n        var dataETH = {\n          method: \"personal_sign\",\n          params: [\n            \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n            address,\n          ],\n        };\n\n        this.testTransaction = JSON.stringify(dataETH);\n      } else if (\n          this.selectedChain === \"eip155:137\" ||\n          this.selectedChain === \"eip155:122\"\n      ) {\n        // method\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0xebda9cfa2af43999058dffa0107031d1ef7fc0252dca85dcbd22ea097af922ca39b64d509ef61ce42b7641c5840b8a80337ffd1411b13e87e2260a3f1b6c151c1b\n\n        var dataPolygon = {\n          method: \"personal_sign\",\n          params: {\n            message:\n                \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n        this.testTransaction = JSON.stringify(dataPolygon);\n      } else if (this.selectedChain === \"eip155:56\") {\n        var data = {\n          method: \"personal_sign\",\n          params: {\n            message:\n                \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n\n        this.testTransaction = JSON.stringify(data);\n      }\n    },\n\n    async eth_sendTransaction_swap() {\n      var data = {\n        method: \"eth_sendTransaction\",\n        chainId: \"eip155:122\",\n        params: {\n          value: \"0x38d7ea4c68000\",\n          gas: \"0x2665f\",\n          to: \"0xf2614A233c7C3e7f08b1F887Ba133a13f1eb2c55\",\n          from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n          data: \"0x2646478b000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00000000000000000000000000000000000000000000000000038d7ea4c68000000000000000000000000000620fd5fa44be6af63715ef4e65ddfa0387ad13f5000000000000000000000000000000000000000000000000000000000000001b000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000700301ffff0201602352A9Eb5234466Eac23E59e7B99bCaE79C39c0BE9e53fd7EDaC9F859882AfdDa116645287C629040BE9e53fd7EDaC9F859882AfdDa116645287C62900602352A9Eb5234466Eac23E59e7B99bCaE79C39c01f2F3e73be57031114dd1f4E75c1DD87658be7F0E000bb800000000000000000000000000000000\",\n        },\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_signTypedData_v4() {\n      // method\n      // eth_signTypedData\n      // address\n      // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n      // valid\n      // true\n      // result\n      // 0xa8bb3c6b33a119d2d567c7632195c21988df778006082742125a591f5c633f716107883a37f7de6531a6312a5f69022135bf46fe5ab77905b62c82b3395f985e1b\n      //\n\n      // var data = {\n      //   \"method\": \"eth_signTypedData_v4\",\n      //   \"params\": {\n      //     \"typedDataJson\":\"{\\\"types\\\":{\\\"EIP712Domain\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"version\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"chainId\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"name\\\":\\\"verifyingContract\\\",\\\"type\\\":\\\"address\\\"}],\\\"Person\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"wallet\\\",\\\"type\\\":\\\"address\\\"}],\\\"Mail\\\":[{\\\"name\\\":\\\"from\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"to\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"contents\\\",\\\"type\\\":\\\"string\\\"}]},\\\"primaryType\\\":\\\"Mail\\\",\\\"domain\\\":{\\\"name\\\":\\\"Ether Mail\\\",\\\"version\\\":\\\"1\\\",\\\"chainId\\\":1,\\\"verifyingContract\\\":\\\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\\\"},\\\"message\\\":{\\\"from\\\":{\\\"name\\\":\\\"Cow\\\",\\\"wallet\\\":\\\"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\\\"},\\\"to\\\":{\\\"name\\\":\\\"Bob\\\",\\\"wallet\\\":\\\"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\\\"},\\\"contents\\\":\\\"Hello, Bob!\\\"}}\"\n      // }}\n\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n      var data = {\n        method: \"eth_signTypedData_v4\",\n        params: [\n          address,\n          {\n            types: {\n              EIP712Domain: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"version\",\n                  type: \"string\",\n                },\n                {\n                  name: \"chainId\",\n                  type: \"uint256\",\n                },\n                {\n                  name: \"verifyingContract\",\n                  type: \"address\",\n                },\n              ],\n              Person: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"wallet\",\n                  type: \"address\",\n                },\n              ],\n              Mail: [\n                {\n                  name: \"from\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"to\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"contents\",\n                  type: \"string\",\n                },\n              ],\n            },\n            primaryType: \"Mail\",\n            domain: {\n              name: \"Ether Mail\",\n              version: \"1\",\n              chainId: 1,\n              verifyingContract: \"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\",\n            },\n            message: {\n              from: {\n                name: \"Cow\",\n                wallet: \"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\",\n              },\n              to: {\n                name: \"Bob\",\n                wallet: \"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\",\n              },\n              contents: \"Hello, Bob!\",\n            },\n          },\n        ],\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_sendTransaction_transfer() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            chainId: \"0x1\",\n            to: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            value: \"0x5af3107a4000\",\n            maxPriorityFeePerGas: \"0x3b9aca00\",\n            gas: \"0x5e56\",\n            maxFeePerGas: \"0x2643b9db8\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gasPrice: \"0x17003f6530\",\n            nonce: \"0x0d30\",\n            data: \"0x\",\n            value: \"0x00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasLimit: \"0x5208\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x5e56\",\n            value: \"0x5af3107a4000\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasPrice: \"0x3b9aca00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            chainId: \"0x38\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:122\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            value: \"0x0\",\n            chainId: \"0x7a\",\n          }\n        }\n      }\n\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"to\"] = address;\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_approve() {\n      var data = {};\n\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000000000000022d473030f116ddee9f6b43ac78ba3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x582d872a1b094fc48f5de31d3b73f2d9be47def1\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000f6f8096ac575b0\",\n            to: \"0x0b3F868E0BE5597D5DB7fEB59E1CADBb0fdDa50a\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            value: \"0x0\",\n            gas: \"0xe117\",\n            gasPrice: \"0xb2d05e00\",\n            data: \"0x095ea7b300000000000000000000000031c2f6fcff4f8759b3bd5bf0e1084a055615c768ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x5CA42204cDaa70d5c773946e69dE942b85CA6706\",\n          },\n        };\n      } else if (this.selectedChain === 'eip155:122') {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000000000000013b3\",\n            to: \"0x620fd5fa44BE6af63715Ef4E65DDFA0387aD13F5\",\n          },\n        };\n      }\n\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_mint() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x4cacb\",\n            data: \"0xa64dfa75000000000000000000000000ed688002f3797599db8b4feacfe8b1dda0df1c8d000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cecb15396825a895ff8da8fc2d2c77a234dccee00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f6261667962656968643737366b6177706e71336f6f6a6635693274787a76617737737164656b34616a776472637472703261366f626b70723773792f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x30795\",\n            data: \"0xa64dfa75000000000000000000000000341b3687f0309778f08f29336b2c4b9c38b9f110000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003e00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000042000000000000000000000000000000000000000000000000000000000000005000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000052000000000000000000000000000000000000000000000000000000000000005400000000000000000000000000000000000000000000000000000000000000560000000000000000000000000000000000000000000000000000000000000058000000000000000000000000000000000000000000000000000000000000005a000000000000000000000000000000000000000000000000000000000000005c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f62616679626569686a6279676b68747a71376b68377434336266686e676e793236337668766f6578716a6d6e377161716166366e717a64743777712f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      }\n\n      let str = JSON.stringify(data);\n      console.log(\"-----长度--->\", str.length);\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_testRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n          `eip155:56`,\n          `https://eth-mainnet.g.alchemy.com/v2/NxUfYJUr-TQtEpLmSXhhD5pXn70GwsyV`\n      );\n      var data = {\n        method: \"eth_getBalance\",\n        params: [\"0x8D97689C9818892B700e27F316cc3E41e17fBeb9\", \"latest\"],\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_watchAsset() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xe0f63a424a4439cbe457d80e4f4b51ad25b2c56c\",\n              symbol: \"SPX6900\",\n              image:\n                  \"https://assets.coingecko.com/coins/images/31401/standard/sticker_%281%29.jpg?1702371083\",\n              decimals: 8,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xeB51D9A39AD5EEF215dC0Bf39a8821ff804A0F01\",\n              symbol: \"LGNS\",\n              image: \"https://polygonscan.com/token/images/originlgns_32.png\",\n              decimals: 9,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0x031b41e504677879370e9dbcf937283a8691fa7f\",\n              symbol: \"FET\",\n              image: \"https://bscscan.com/token/images/fetch_32.png\",\n              decimals: 18,\n            },\n          },\n        };\n      }\n\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async ton_sendTransaction() {\n      var data = {\n        \"messages\": [{\n          \"address\": \"EQARULUYsmJq1RiZ-YiH-IJLcAZUVkVff-KBPwEmmaQGH6aC\",\n          \"amount\": \"186000000\",\n          \"payload\": \"te6cckEBAgEAhgABaw+KfqUAAACKXw/PUzD0JAgA7zuZAqJxsqAciTilI8/iTnGEeq62piAAHtRKd6wOcJwQLBuBAwEAlSWThWGAEPckSDVNSvvmJOKMGCE4qb+zE0NdQGXsIPpYy63RDznGJO33ACoTmz7CXpV552d6ANFof7NJCUxG8kSbhHYZT5CrVcQGUCH+joo=\"\n        }],\n        \"validUntil\": 1736161561913,\n        \"network\": '-239'\n      }\n      this.testTransaction = JSON.stringify(data)\n    },\n    ton_getAccount() {\n      this.testTransaction = \"这里是同步获取 不再需要点击 <<发送交易>>\"\n      let result = window.tonProvider.account()\n      if (result) {\n        this.testboc = JSON.stringify(result);\n      } else {\n        this.testboc = 'null'\n      }\n    },\n\n    async tonUniversalLog() {\n      console.log(\"ton 信息: tonProvider  connected:\", window.tonProvider.connected())\n      console.log(\"ton 信息: tonProvider  account:\", JSON.stringify(window.tonProvider.account()))\n      console.log(\"ton 信息: tonProvider  wallet:\", JSON.stringify(window.tonProvider.wallet()))\n    },\n\n    async sendTransactionAlert() {\n      //\n      const response = await fetch(`https://apitest.fireverse.ai/oauth/okx/getNonce?publicAddress=0x0cecb15396825a895ff8da8fc2d2c77a234dccee`);\n      const data = await response.json();\n      console.log(\"请求数据----\", JSON.stringify(data))\n      await this.personal_sign()\n      if (confirm(\"Are you want to sign message?\")) {\n        this.sendTransaction();\n      }\n\n      // window.open(\"https://www.okx.com/download?deeplink=okx%3A%2F%2Fweb3%2Fwallet%2Fconnect\",'_self')\n    },\n\n    async sendTransaction() {\n      if (this.selectedChain.startsWith(\"aptos\")\n          || this.selectedChain.startsWith(\"movement\")\n          || this.selectedChain.startsWith(\"solana\")\n          || this.selectedChain.startsWith(\"sonic\")\n          || this.selectedChain.startsWith(\"cosmos\")) {\n        return\n      }\n      console.log(\"sendTransaction\", window.provider);\n      console.log(\"sendTransaction内容11------\", this.testTransaction);\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (this.testTransaction && window.provider) {\n        // eslint-disable-next-line no-undef\n        const sendData = JSON.parse(this.testTransaction);\n        try {\n          console.log(\"sendTransaction-----22method>>\", sendData.method);\n\n          let chainId = \"eip155:1\";\n          if (this.selectedChain) {\n            chainId = this.selectedChain;\n            console.log(\n                \"sendTransaction-----this.selectedChain>>\",\n                this.selectedChain\n            );\n          }\n          console.log(\"windowOpen[click_1]: \", Date.now());\n          if (chainId == \"sui:mainnet\") {\n            const adapter = new SuiAdapter(window.provider);\n            var suiResult = \"invalid result\";\n            if (this.currentSuiMethod == 'sui_getAccount') {\n              let result = adapter.getAccount()\n              if (typeof result == \"string\") {\n                this.testboc = result\n              } else {\n                this.testboc = JSON.stringify(result)\n              }\n            }\n            if (this.currentSuiMethod == \"sui_signTransaction\") {\n              suiResult = await adapter.signTransaction(\n                  this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signAndExecuteTransaction\") {\n              suiResult = await adapter.signAndExecuteTransaction(\n                  this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signMessage\") {\n              console.log(\"signMessage----\", this.currentSuiTransaction);\n              suiResult = await adapter.signMessage(this.currentSuiTransaction);\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_signPersonalMessage\") {\n              console.log(\n                  \"signPersonalMessage----\",\n                  this.currentSuiTransaction\n              );\n              suiResult = await adapter.signPersonalMessage(\n                  this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_testRpc\") {\n              console.log(\"test rpc----\", this.currentSuiTransaction);\n              console.log(\n                  `请求数据发送 rpc ----->> ${JSON.stringify(sendData)}`\n              );\n              const res = await window.provider.request(sendData, chainId);\n              console.log(`请求数据回调 rpc ----->> ${JSON.stringify(result)}`);\n              if (typeof res == \"string\") {\n                this.testboc = res;\n              } else {\n                this.testboc = JSON.stringify(res);\n              }\n            }\n            console.log(\"windowOpen[click_2]: \", Date.now());\n            return;\n          } else if (chainId === \"ton:-239\") {\n            console.log(\n                `请求数据发送 sendTransaction ---ton-->> ${JSON.stringify(sendData)}`\n            );\n            let result = await window.tonProvider.sendTransaction(sendData)\n            console.log(\n                `请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`\n            );\n            if (typeof result == \"string\") {\n              this.testboc = result;\n            } else {\n              this.testboc = JSON.stringify(result);\n            }\n            return\n          }\n\n          if (chainId == 'btc:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var btcResult = 'invalid result'\n\n            if (this.currentBtcMethod == 'btc_signMessage') {\n              btcResult = await btcAdapter.signMessage(chainId, this.currentBtcTransaction[\"signStr\"])\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_send') {\n              btcResult = await btcAdapter.send(chainId, this.currentBtcTransaction)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signPsbt') {\n              btcResult = await btcAdapter.signPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n\n              this.hexToBase64(btcResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentBtcMethod == 'btc_signPsbts') {\n              btcResult = await btcAdapter.signPsbts(chainId, this.currentBtcTransaction.psbtHexs, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_sendInscription') {\n              btcResult = await btcAdapter.sendInscription(chainId, this.currentBtcTransaction.address, this.currentBtcTransaction.inscriptionId, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signAndPushPsbt') {\n              btcResult = await btcAdapter.signAndPushPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_sendBitcoin') {\n              btcResult = await btcAdapter.sendBitcoin(chainId, this.currentBtcTransaction.toAddress, this.currentBtcTransaction.satoshis, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_getAccount') {\n              btcResult = btcAdapter.getAccount(chainId)\n              this.testboc = JSON.stringify(btcResult)\n            }\n\n            return\n          }\n\n          if (chainId == 'fractal:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var fractalResult = 'invalid result'\n\n            if (this.currentFractalMethod == 'fractal_signMessage') {\n              fractalResult = await btcAdapter.signMessage(chainId, this.currentFractalTransaction['signStr'])\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_send') {\n              fractalResult = await btcAdapter.send(chainId, this.currentFractalTransaction)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signPsbt') {\n              fractalResult = await btcAdapter.signPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.hexToBase64(fractalResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentFractalMethod == 'fractal_signPsbts') {\n              fractalResult = await btcAdapter.signPsbts(chainId, this.currentFractalTransaction.psbtHexs, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_sendInscription') {\n              fractalResult = await btcAdapter.sendInscription(chainId, this.currentFractalTransaction.address, this.currentFractalTransaction.inscriptionId, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signAndPushPsbt') {\n              fractalResult = await btcAdapter.signAndPushPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_sendBitcoin') {\n              fractalResult = await btcAdapter.sendBitcoin(chainId, this.currentFractalTransaction.toAddress, this.currentFractalTransaction.satoshis, this.currentFractalTransaction.options)\n\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_getAccount') {\n              fractalResult = btcAdapter.getAccount(chainId)\n              this.testboc = JSON.stringify(fractalResult)\n            }\n\n            return\n          }\n\n          console.log(`请求数据发送 sendTransaction ----->> ${JSON.stringify(sendData)}`)\n          var result = await window.provider.request(sendData, chainId)\n          console.log(`请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`)\n\n          console.log(\"windowOpen[click_3]: \", Date.now());\n          if (typeof result == \"string\") {\n            this.testboc = result;\n          } else {\n            this.testboc = JSON.stringify(result);\n          }\n          console.log(\"方法数据回调 --this.testboc--\", this.testboc);\n        } catch (error) {\n          console.error(\"方法数据回调失败 --Error--\", error.message);\n\n          if (error.code === OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n            this.testboc = error.message;\n          } else {\n            this.testboc = \"wrong signature！\" + error.message;\n          }\n        }\n      } else {\n        alert(\"Please input transaction data\");\n      }\n    },\n\n    hexToBase64(hexStr) {\n      var bytes = [];\n      for (var i = 0; i < hexStr.length; i += 2) {\n        bytes.push(parseInt(hexStr.substr(i, 2), 16));\n      }\n      const buffer = new Uint8Array(bytes)\n      const blob = new Blob([buffer]);\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = function (e) {\n          var base64Data = e.target.result.split(\",\")[1]\n          resolve(base64Data);\n        };\n        reader.onerror = function (e) {\n          reject(e);\n        };\n        reader.readAsDataURL(blob);\n      });\n    },\n    testBase64UrlSafe() {\n      let datatest = {\n        \"protocolVer\": 1,\n        \"topic\": \"8a7a4c3be73802d0ae2587123ade7bb79f27433b9aa3ca589a2208a2089eecfd\",\n        \"clientId\": \"5f1bbf9eac92160affa7ef04d0a710817ddb6d8c22ebbd6263e86f059930b404\",\n        \"requestId\": \"1731383250054\",\n        \"dAppInfo\": {\n          \"url\": \"connect.oker.vip\",\n          \"origin\": \"https://connect.oker.vip\",\n          \"name\": \"univer test dapp\",\n          \"icon\": \"https://avatars.githubusercontent.com/u/37784886\"\n        },\n        \"requests\": [{\n          \"name\": \"requestAccounts\",\n          \"requiredNamespaces\": [{\"namespace\": \"aptos\", \"chains\": [\"aptos:637\"]}],\n          \"optionalNamespaces\": [],\n          \"connectRequestMethods\": [{\n            \"chainId\": \"aptos:637\",\n            \"method\": \"aptos_signMessage\",\n            \"params\": {\n              \"data\": {\n                \"address\": true,\n                \"application\": true,\n                \"chainId\": true,\n                \"message\": \"123 中文测试!\",\n                \"nonce\": \"1234\"\n              }, \"applicationUrl\": \"https://connect.oker.vip\", \"prefix\": \"APTOS\", \"aptosChainId\": \"1\"\n            }\n          }]\n        }],\n        \"redirect\": \"none\"\n      }\n      let json = JSON.stringify(datatest)\n      const utf8Array = new TextEncoder().encode(json);\n      let binary = '';\n      utf8Array.forEach(byte => {\n        binary += String.fromCharCode(byte);\n      });\n\n      let firstStr = btoa(binary)\n      console.log(\"字符串编码1>>>>\", firstStr)\n      firstStr = firstStr.replace(/\\+/g, '-')  // 替换 '+'\n      console.log(\"字符串编码2>>>>\", firstStr)\n      firstStr = firstStr.replace(/\\//g, '_')  // 替换 '/'\n      console.log(\"字符串编码3>>>>\", firstStr)\n      firstStr = firstStr.replace(/=+$/, '');  // 移除 '=';\n      console.log(\"字符串编码4>>>>\", firstStr)\n\n      let showUrl = getUniversalLink(getAppWalletDeepLink(firstStr))\n      console.log(\"字符串编码5>>>>\", showUrl)\n      this.qrValue = showUrl;\n      this.showModal = true;\n    },\n\n\n    async testTonSdk() {\n      // 1. connect\n      //  create sub providers for each namespace/chain\n      let nameSpacesChains = [];\n      let optSpaceChains = [];\n\n      let solanaChains = [\n        \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n        \"svm:70000062\",\n      ];\n      let hasEip155, hasSolana, hasSui, hasBtc, hasAptos, hasTon, hasCosmos, hasTron, hasStarknet = false\n\n      let suiChains = [\n        \"sui:mainnet\",\n      ];\n\n      let btcChains = [\n        \"btc:mainnet\",\n        \"fractal:mainnet\"\n      ];\n\n      const chains = Object.entries(this.availableChains)\n          .filter((chain) => chain[1].checked)\n          .map((chain) => chain[0]);\n      console.log(`chains  ===> ${chains.values()}`)\n      chains.forEach(function (chainId) {\n        console.log(`chains.forEach chainId  ===> ${chainId}`)\n\n        if (solanaChains.includes(chainId)) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"ton\")) {\n          nameSpacesChains.push(chainId)\n          hasTon = true\n          return\n        }\n        if (typeof chainId == 'string' && (chainId.startsWith(\"aptos\") || chainId.startsWith(\"movement\"))) {\n          nameSpacesChains.push(chainId)\n          hasAptos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId)\n          hasSolana = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"cosmos\")) {\n          nameSpacesChains.push(chainId)\n          hasCosmos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"tron\")) {\n          nameSpacesChains.push(chainId)\n          hasTron = true\n          return\n        }\n\n        if (typeof chainId == 'string' && chainId.startsWith(\"starknet\")) {\n          nameSpacesChains.push(chainId)\n          hasStarknet = true\n          return\n        }\n\n        if (suiChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`);\n          nameSpacesChains.push(chainId);\n          hasSui = true;\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`)\n          nameSpacesChains.push(chainId)\n          hasBtc = true\n          return\n        }\n\n        hasEip155 = true\n        nameSpacesChains.push(`eip155:${chainId}`)\n      })\n\n\n      optionChains.forEach(function (chainId) {\n        console.log(\"optionChains.forEach 。chainId：》》\",chainId)\n        if (solanaChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n        if (typeof chainId == \"string\" && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (suiChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          optSpaceChains.push(chainId)\n          return\n        }\n        if (chainId.startsWith('ton')) {\n          optSpaceChains.push(chainId)\n          return\n        }\n\n        optSpaceChains.push(`eip155:${chainId}`)\n      })\n\n      console.log(`namespaceChains  ===> ${JSON.stringify(nameSpacesChains)}`);\n      var connectData = {};\n      if (nameSpacesChains && nameSpacesChains.length > 0) {\n        var requireData = {};\n\n        if (hasEip155) {\n          requireData.eip155 = {\n            chains: nameSpacesChains.filter((item) =>\n                item.startsWith(\"eip155\")\n            ),\n            defaultChain: nameSpacesChains.filter((item) =>\n                item.startsWith(\"eip155\")\n            )[0],\n          };\n        }\n        if (hasSolana) {\n          requireData.solana = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"solana\") ||\n                    item.startsWith(\"sonic\") ||\n                    item.startsWith(\"svm\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"solana\") ||\n                    item.startsWith(\"sonic\") ||\n                    item.startsWith(\"svm\")\n            )[0],\n          };\n        }\n\n        if (hasCosmos) {\n          requireData.cosmos = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            )[0],\n          }\n        }\n        if (hasTron) {\n          requireData.tron = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            )[0],\n          }\n        }\n        if (hasStarknet) {\n          requireData.starknet = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"starknet\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"starknet\")\n            )[0],\n          }\n        }\n        if (hasTon) {\n\n          //\n          let tonParams = {\n            manifestUrl:\"https://app.ston.fi/tonconnect-manifest.json\",\n            ton_addr: {\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue) {\n            tonParams = {\n              manifestUrl:\"https://app.ston.fi/tonconnect-manifest.json\",\n              ton_addr: {\n                name: 'ton_addr',\n              },\n              ton_proof: {\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          requireData.ton = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"ton\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"ton\"))[0],\n            params: tonParams\n          };\n        }\n\n        if (hasSui) {\n          requireData.sui = {\n            chains: nameSpacesChains.filter((item) => item.startsWith(\"sui\")),\n            defaultChain: nameSpacesChains.filter((item) =>\n                item.startsWith(\"sui\")\n            )[0],\n            rpcMap: {\n              \"sui:mainnet\": \"https://www.okx.com/fullnode/sui/discover/rpc\"\n            }\n          };\n        }\n        if (hasAptos) {\n          requireData.aptos = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\"))[0]\n          }\n        }\n\n        if (hasBtc) {\n          let btcChains = nameSpacesChains.filter(item => item.startsWith(\"btc\") || item.startsWith(\"fractal\"))\n          requireData.btc = {\n            chains: btcChains,\n            defaultChain: btcChains[0]\n          }\n        }\n        console.log(`requireData  ===> ${JSON.stringify(requireData)}`)\n        connectData['namespaces'] = requireData;\n        console.log(JSON.stringify(connectData))\n      }\n\n      if (optSpaceChains && optSpaceChains.length > 0) {\n        const optData = {};\n\n        const eip155Chains = optSpaceChains.filter((item) => item.startsWith(\"eip155\"));\n        if (eip155Chains.length > 0) {\n          optData[\"eip155\"] = {\n            chains: eip155Chains,\n            defaultChain: eip155Chains[0],\n          };\n        }\n\n        const solanaChains = optSpaceChains.filter((item) => item.startsWith(\"solana\"));\n        if (solanaChains.length > 0) {\n          optData[\"solana\"] = {\n            chains: solanaChains,\n            defaultChain: solanaChains[0],\n          };\n        }\n\n        const tonChains = optSpaceChains.filter((item) => item.startsWith(\"ton\"));\n        if (tonChains.length > 0) {\n\n          let tonParams = {\n            ton_addr: {\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue) {\n            tonParams = {\n              ton_addr: {\n                name: 'ton_addr',\n              },\n              ton_proof: {\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          optData[\"ton\"] = {\n            chains: tonChains,\n            defaultChain: tonChains[0],\n            params: tonParams\n          };\n        }\n\n        const btcChains = optSpaceChains.filter((item) => item.startsWith(\"btc\"));\n        if (btcChains.length > 0) {\n          optData[\"btc\"] = {\n            chains: btcChains,\n            defaultChain: btcChains[0],\n          };\n        }\n\n        connectData[\"optionalNamespaces\"] = optData;\n      }\n\n      if (nameSpacesChains.length === 0 && optSpaceChains.length === 0) {\n        //未选择链\n        alert(\"Please select a chain from above to continue\");\n        return;\n      }\n      console.log(\"=====>connectData \");\n      console.log(connectData);\n\n      var connectMethod;\n      let signMethods = this.getCurrentSelectedMethodData();\n      if (window.provider instanceof OKXUniversalConnectUI) {\n\n        if (signMethods && signMethods.length > 0) {\n          connectMethod = window.provider.openModalAndSign(connectData, JSON.parse(JSON.stringify(signMethods)));\n        } else {\n          connectMethod = window.provider.openModal(connectData);\n        }\n      } else {\n        if (this.universalToTG) {\n          connectData.sessionConfig = {\n            useMini: true,\n            openUniversalUrl: true,\n            tmaReturnUrl: 'back'\n          }\n        } else {\n          connectData.sessionConfig = {\n            redirect: selectedReturnStrategy\n          }\n        }\n        if (signMethods && signMethods.length > 0) {\n          connectMethod = window.provider.connectAndSign(connectData, JSON.parse(JSON.stringify(signMethods)));\n        } else {\n          connectMethod = window.provider.connect(connectData);\n        }\n      }\n\n      await connectMethod\n          .then((result) => {\n            // 2. set defaul chain\n            this.walletAddress = \"connected\";\n            if (this.isPC()) {\n              this.showModal = false;\n            }\n            if (result) {\n              this.testboc = JSON.stringify(result)\n            }\n\n            if (window.provider.session && window.provider.session.namespaces) {\n              let ton = window.provider.session.namespaces[\"ton\"];\n              console.log(\"是否包含ton\", ton)\n              if (ton) {\n                this.tonUniversalLog()\n              }\n            }\n          })\n          .catch((error) => {\n            if (error.code == 301) {\n              setTimeout(() => {\n                alert(error.message)\n              }, 0.5);\n            } else if (error.message) {\n              alert(error.message)\n            }\n            console.error(\"发生了错误：\", error);\n          });\n    },\n\n    getCurrentSelectedMethodData() {// 连接签名\n      var methodList = [];\n      this.selectedMethod.forEach(method => {\n        switch (method) {\n          case \"wallet_addEthereumChain(ETH)\":\n            methodList.push({\n              method: \"wallet_addEthereumChain\",\n              chainId: \"eip155:1\",\n              params: {\n                blockExplorerUrls: [\"https://explorer.fuse.io\"],\n                chainId: \"0x7a\",\n                chainName: \"Fuse\",\n                nativeCurrency: {name: \"Fuse\", symbol: \"FUSE\", decimals: 18},\n                rpcUrls: [\"https://rpc.fuse.io\"],\n              },\n            })\n            break;\n          case \"personal_sign(ETH)\":\n            methodList.push(\n                {\n                  method: \"personal_sign\",\n                  chainId: \"eip155:1\",\n                  params: [\n                    \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n                  ],\n                });\n            break;\n          case \"solana_signMessage(Sol mainnet)\":\n            methodList.push(\n                {\n                  \"chainId\": \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n                  \"method\": \"solana_signMessage\",\n                  \"params\": {\n                    \"message\": \"Hello Solana\",\n                  }\n                }\n            );\n            break;\n          case \"sui_signMessage(Sui mainnet)\":\n          case \"sui_signPersonalMessage(Sui mainnet)\": {\n            let suiData = [\n              76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n              109, 111, 118, 101,\n            ];\n            let uint8Array = new Uint8Array(suiData);\n            let currentMethod = \"sui_signMessage\";\n            this.currentSuiTransaction = {\n              message: uint8Array\n            }\n\n            if (method.startsWith(\"sui_signPersonalMessage\")) {\n              currentMethod = \"sui_signPersonalMessage\";\n            }\n            methodList.push(\n                {\n                  method: currentMethod,\n                  chainId: \"sui:mainnet\",\n                  params: {\n                    message: uint8Array,\n                  }\n                }\n            );\n            break;\n          }\n          case \"btc_signMessage(BTC)\":\n            methodList.push(\n                {\n                  method: \"btc_signMessage\",\n                  chainId: \"btc:mainnet\",\n                  params: {\n                    message: \"Welcome to BTC\"\n                  }\n                }\n            )\n            break;\n          case \"aptos_signMessage(aptos mainnet)\":\n            methodList.push(\n                {\n                  \"chainId\": \"aptos:mainnet\",\n                  \"method\": \"aptos_signMessage\",\n                  \"params\": {\n                    address: true,\n                    application: true,\n                    chainId: true,\n                    message: \"Hello Aptos\",\n                    nonce: \"1234\"\n                  }\n                }\n            )\n            break;\n          case \"cosmos_signArbitrary(cosmoshub)\":\n            methodList.push(\n                {\n                  \"chainId\": \"cosmos:cosmoshub-4\",\n                  \"method\": \"cosmos_signArbitrary\",\n                  \"params\": {\n                    message: \"test cosmos\"\n                  }\n                }\n            )\n\n            break;\n          case \"test_noSupport_eth(ETH)\":\n            methodList.push(\n                {\n                  chainId: \"eip155:1\",\n                  method: \"test_noSupport_eth\",\n                  params: {\n                    message: \"test hello\",\n                  }\n                }\n            )\n            break;\n          case \"sync_all_addresses\":\n            methodList.push(\n                {\n                  method: \"sync_all_addresses\",\n                });\n            break;\n          case \"tron_signMessage\":\n            methodList.push(\n                {\n                  chainId: \"tron:mainnet\",\n                  method: \"tron_signMessage\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n          case \"tron_signMessageV2\":\n            methodList.push(\n                {\n                  chainId: \"tron:mainnet\",\n                  method: \"tron_signMessageV2\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n\n            //\n          case \"starknet_signMessage\": {\n            const signData = {\n              \"domain\": {\n                \"chainId\": \"0x534e5f4d41494e\",\n                \"name\": \"STRKFarm\",\n                \"version\": \"1\"\n              },\n              \"message\": {\n                \"document\": \"app.strkfarm.xyz/tnc/v1\",\n                \"message\": \"Read and Agree T&C\"\n              },\n              \"primaryType\": \"Tnc\",\n              \"types\": {\n                \"StarkNetDomain\": [\n                  {\n                    \"name\": \"name\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"version\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"chainId\",\n                    \"type\": \"felt\"\n                  }\n                ],\n                \"Tnc\": [\n                  {\n                    \"name\": \"message\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"document\",\n                    \"type\": \"felt\"\n                  }\n                ]\n              }\n            }\n            methodList.push({\n              chainId: \"starknet:mainnet\",\n              method: \"starknet_signMessage\",\n              params: {\n                accountAddress: \"\",\n                typedData: signData\n              }\n            })\n          }\n            break\n          default:\n\n            break;\n        }\n      })\n      this.selectedMethodData = methodList\n      return methodList\n\n    },\n\n    closeModal() {\n      this.showModal = false;\n    },\n\n    isPC() {\n      const userAgentInfo = navigator.userAgent;\n      console.log(\"current device ua is ===>\", userAgentInfo);\n\n      const Agents = [\n        \"Android\",\n        \"iPhone\",\n        \"SymbianOS\",\n        \"Windows Phone\",\n        \"iPad\",\n        \"iPod\",\n      ];\n      let flag = true;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = false;\n          break;\n        }\n      }\n      return flag;\n    },\n    isSafariOrChrome() {\n      const userAgentInfo = navigator.userAgent;\n      const Agents = [\"Safari\", \"Chrome\"];\n      let flag = false;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = true;\n          break;\n        }\n      }\n      return flag;\n    },\n\n    /// solana\n    async sol_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      try {\n        let data = {\n          method: \"solana_signMessage\",\n          params: {\n            message: \"Hello Solana\",\n            pubkey: \"\",\n          },\n        };\n        this.testTransaction = JSON.stringify(data);\n        let provider = new OKXSolanaProvider(window.provider);\n\n        let message = await provider.signMessage(\n            \"Hello Solana\",\n            this.selectedChain\n        );\n        console.log(\"solana_signMessage Result:\", JSON.stringify(message))\n        const result1 = nacl.sign.detached.verify(\n            new TextEncoder().encode(\"Hello Solana\"),\n            message.signature,\n            new PublicKey(message.publicKey).toBytes()\n        );\n        console.log(result1)\n\n        if (typeof message == \"string\") {\n          this.testboc = result1;\n        } else {\n          this.testboc = result1;\n        }\n      } catch (e) {\n        console.log(\"solana_signMessage error:\", JSON.stringify(e))\n        this.testboc = e.message\n      }\n\n    },\n\n    async aptos_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      let data = {\n        address: true,\n        application: true,\n        chainId: true,\n        message: \"Hello Aptos\",\n        nonce: \"1234\"\n      }\n\n      let provider = new OKXAptosProvider(window.provider)\n      let message = await provider.signMessage(data, this.selectedChain)\n      this.testTransaction = JSON.stringify(data)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n      try {\n        const transaction = await aptos.transaction.build.simple({\n          sender: provider.getAccount(this.selectedChain).address,\n          data: {\n            // The Move entry-function\n            function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n            // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n            typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n            functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n          },\n        });\n        console.log(\"获取地址aptos 222222：\");\n\n        this.testTransaction = safeJsonStringify(transaction)\n\n        let message = await provider.signTransaction(transaction, this.selectedChain)\n        if (typeof message == \"string\") {\n          this.testboc = message\n        } else {\n          this.testboc = JSON.stringify(message)\n        }\n      }catch (e) {\n\n        this.testboc = JSON.stringify(e)\n      }\n\n    },\n\n    async move_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n          functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        },\n      });\n\n      // let data = {\n      //   \"arguments\": [\"100000\",[\"0\",\"0\",\"10533\"],[\"10\",\"5\",\"5\"],[\"false\",\"false\",\"true\"]],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x3\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\",\"0x73eb84966be67e4697fc5ae75173ca6c35089e802650f75422ab49a8729704ec::coin::DooDoo\",\"0x53a30a6e5936c0a4c5140daed34de39d17ca7fcae08f947c02e979cef98a3719::coin::LSD\",\"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::CurveV1\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x54cb0bb2c18564b86e34539b9f89cfe1186e39d89fce54e1cd007b8e61673a85::bin_steps::X80\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async sol_signVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(\n          provider.getAccount(\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\").address\n      );\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signTransaction(\n          transaction,\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAndSendVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n          transaction,\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllVersionedTransactions() {\n      let provider = new OKXSolanaProvider(window.provider);\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n          [transaction],\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signTransaction() {\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: 1000,\n          })\n      );\n\n      this.testTransaction = safeJsonStringify(transaction)\n      let result = await provider.signTransaction(\n          transaction,\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllTransactions() {\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n          [transaction],\n          this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    getSolConnect() {\n      let rpc = \"https://www.okx.com/fullnode/sol/discover/rpc\"\n      if (this.selectedChain === \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\") {\n        rpc = \"https://www.okx.com//fullnode/sol/discover/rpc\"\n      } else if (this.selectedChain === \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\") {\n        rpc = \"https://www.okx.com/fullnode/soltestnet/discover/rpc\"\n      } else if (this.selectedChain === \"svm:70000062\") {\n        rpc = \"https://www.okx.com/fullnode/sonic/testnet/discover/rpc\"\n      }\n      return rpc\n    },\n\n    async sol_signAndSendTransaction() {\n\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n          transaction,\n          this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async cosmos_signArbitrary() {\n      let provider = new OKXCosmosProvider(window.provider)\n      let message = await provider.signArbitrary(this.selectedChain, provider.getAccount(this.selectedChain).address, \"test cosmos\")\n      if (typeof message == \"string\") {\n        this.testboc = message;\n      } else {\n        let isValid = await this.cosmos_verifySignArbitrary(provider.getAccount(this.selectedChain).address, \"test cosmos\", message.signature, message.pub_key.value)\n        console.log(\"verify\", isValid)\n        this.testboc = \"verify:\" + isValid + JSON.stringify(message);\n      }\n    },\n\n    async cosmos_verifySignArbitrary(signer, data, signature, pubkey) {\n      try {\n        console.log(\"cosmos_verifySignArbitrary signer:\", signer)\n        console.log(\"cosmos_verifySignArbitrary data:\", JSON.stringify(data))\n        console.log(\"cosmos_verifySignArbitrary signature:\", signature)\n        console.log(\"cosmos_verifySignArbitrary pubkey:\", pubkey)\n\n        // 将bech32地址转换为公钥\n        const {prefix: prefixStr} = fromBech32(signer)\n\n        const signatureBuffer = Buffer.from(signature, 'base64');\n\n        const uint8Signature = new Uint8Array(signatureBuffer); // Convert the buffer to an Uint8Array\n\n        const pubKeyValueBuffer = Buffer.from(pubkey, 'base64'); // Decode the base64 encoded value\n\n        const pubKeyUint8Array = new Uint8Array(pubKeyValueBuffer); // Convert the buffer to an Uint8Array\n\n        // 验证签名\n        return await verifyADR36Amino(\n            prefixStr,\n            signer,\n            data,\n            pubKeyUint8Array,\n            uint8Signature\n        )\n      } catch (err) {\n        console.error('Verification failed:', err)\n        return false\n      }\n    },\n\n    async cosmos_signAmino() {\n      let provider = new OKXCosmosProvider(window.provider)\n      // const rpcUrl = 'https://osmosis-rpc.publicnode.com:443';\n      // const client = await StargateClient.connect(rpcUrl);\n      // const height = await client.getHeight();\n      // let address = provider.getAccount(this.selectedChain).address\n      // const sequence = await client.getSequence(address)\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      // let signDoc = makeSignDoc(\n      //     transaction.msgs,\n      //     transaction.fee,\n      //     this.selectedChain.split(\":\")[1],\n      //     transaction.memo,\n      //     transaction.accountNumber,\n      //     transaction.sequence,\n      // )\n      let signDoc = {\n        \"chain_id\": \"osmosis-1\",\n        \"account_number\": \"630104\",\n        \"sequence\": \"480\",\n        \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]},\n        \"msgs\": [{\n          \"type\": \"osmosis/poolmanager/swap-exact-amount-in\",\n          \"value\": {\n            \"sender\": \"osmo1u6lts9ng4etxj0zdaxsada6zgl8dudpgelmuyu\",\n            \"routes\": [{\n              \"pool_id\": \"1096\",\n              \"token_out_denom\": \"ibc/987C17B11ABC2B20019178ACE62929FE9840202CE79498E29FE8E5CB02B7C0A4\"\n            }, {\n              \"pool_id\": \"611\",\n              \"token_out_denom\": \"ibc/27394FB092D2ECCD56123C74F36E4C1F926001CEADA9CA97EA622B25F41E5EB2\"\n            }],\n            \"token_in\": {\"denom\": \"uosmo\", \"amount\": \"100\"},\n            \"token_out_min_amount\": \"8\"\n          }\n        }],\n        \"memo\": \"FE\",\n        \"timeout_height\": \"23603788\",\n        \"signOptions\": {\n          \"useOneClickTrading\": false,\n          \"preferNoSetFee\": true,\n          \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]}\n        }\n      }\n\n\n      // let signOption = {\n      //   memo: true, // optional\n      //   fee: true, // optional\n      //   gasRate: {\n      //     // optional\n      //     average: \"0.2\",\n      //     low: \"0.02\",\n      //     tiny: \"0.002\",\n      //   },\n      // }\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signAmino(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, signDoc)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    messageToBuffer(message) {\n      var buffer = Buffer.from([]);\n      try {\n        if (typeof message === \"string\") {\n          buffer = Buffer.from(message.replace(\"0x\", \"\"), \"hex\");\n        } else {\n          buffer = Buffer.from(message);\n        }\n      } catch (err) {\n        console.log(`messageToBuffer error: ${err}`);\n      }\n      return buffer;\n    },\n\n\n    async cosmos_signDirect() {\n      let provider = new OKXCosmosProvider(window.provider)\n\n      let signDoc = {\n        \"bodyBytes\": this.messageToBuffer(\"0x0ac1010a292f6962632e6170706c69636174696f6e732e7472616e736665722e76312e4d73675472616e736665721293010a087472616e7366657212096368616e6e656c2d301a0d0a05756f736d6f120431303030222b6f736d6f3175366c7473396e67346574786a307a64617873616461367a676c386475647067656c6d7579752a2d636f736d6f733175366c7473396e67346574786a307a64617873616461367a676c386475647067337967766a773207080410ebe3f90a3880b0bcafd18cec8218\"),\n        \"authInfoBytes\": this.messageToBuffer(\"0x0a510a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a2102446e19e94ac0e83ea896d2712507577eb39fbdd2d6ae9f0fc0b9759f1fbaba9012040a02080118e00312140a0e0a05756f736d6f1205323530303010859a11\"),\n        \"chainId\": \"osmosis-1\",\n        \"accountNumber\": \"630104\",\n      }\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signDirect(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, transaction)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    sui_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentSuiTransaction = params\n      this.currentSuiMethod = flag\n    },\n\n    btc_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentBtcTransaction = params\n      this.currentBtcMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n\n    fractal_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentFractalTransaction = params\n      this.currentFractalMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n    tron_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n    tron_generateTransactionParams(params) {\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n\n    starknet_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n\n    starknet_generateTransactionParams(params) {\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n\n    handleModalsSelect(modals) {\n      selectedModals = modals;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: modals.length === 3 ? \"all\" : modals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n\n    handleReturnStrategySelect(returnStrategy) {\n      selectedReturnStrategy = returnStrategy === \"deeplink\" ? this.deeplink : returnStrategy;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = selectedReturnStrategy;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: selectedReturnStrategy\n          };\n        }\n      }\n    },\n\n    handleReturnStrategyDeeplink(deeplink) {\n      console.log('handleReturnStrategyDeeplink', deeplink)\n      selectedReturnStrategy = deeplink;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: deeplink,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = deeplink;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: deeplink\n          };\n        }\n      }\n    },\n\n    handleLanguageSelect(language) {\n      selectedLanguage = language;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: language,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n    handleConnectMethodsSelect() {\n      console.log(\"当前的方法 this.selectedMethod>>>>\", this.selectedMethod);\n    },\n\n    eth_verifyMessage(message, signature, ethAddress) {\n      console.log(\"eth_verifyMessage   message>>>\", message)\n      console.log(\"eth_verifyMessage   signature>>>\", signature)\n      console.log(\"eth_verifyMessage   ethAddress>>>\", ethAddress)\n      if (!message || !signature) {\n        return \"\"\n      }\n      let originalMessage = message\n      if (message.startsWith(\"0x\")) {\n        originalMessage = originalMessage.replace(/^0x/, '');\n        let str = '';\n        for (let i = 0; i < originalMessage.length; i += 2) {\n          const byte = originalMessage.slice(i, i + 2);\n          str += String.fromCharCode(parseInt(byte, 16));\n        }\n        originalMessage = str\n      }\n      console.log(\"eth_verifyMessage   originalMessage>>>\", originalMessage)\n\n      // const messageHash = ethers.utils.hashMessage(originalMessage);\n      const recoveredAddress = ethers.utils.verifyMessage(originalMessage, signature);\n      console.log(\"eth_verifyMessage recoveredAddress:\", recoveredAddress);\n      return recoveredAddress.toLowerCase() === ethAddress.toLowerCase();\n    },\n\n    async verifyMessage(list) { //连接验签\n\n      if (window.provider && window.provider.session && list && list.length > 0) {\n        let verifyList = {}\n        for (let methodItem of list) {\n          if (\"result\" in methodItem && \"method\" in methodItem) {\n            let requestItme = this.selectedMethodData.filter(item => item.method === methodItem.method)[0];\n            console.log(\"验证签名 请求>>>:\", JSON.stringify(requestItme));\n            console.log(\"验证签名 结果>>>:\", JSON.stringify(methodItem));\n            if (methodItem.method === \"personal_sign\") {\n              let ethAddress = this.requestEVMAccountWithSession(methodItem.chainId)\n              ethAddress = ethAddress[0];\n              console.log(\"验证eth 钱包地址>>>:\", ethAddress);\n              let ethMessage = requestItme.params[0]\n              console.log(\"验证eth 签名消息体>>:\", JSON.stringify(ethMessage));\n              verifyList[methodItem.method] = this.eth_verifyMessage(ethMessage, methodItem.result, ethAddress)\n            } else if (methodItem.method === \"solana_signMessage\") {\n              let solanaMessage = methodItem.result\n              if (\"signature\" in solanaMessage && \"publicKey\" in solanaMessage) {\n                const verifySol = nacl.sign.detached.verify(\n                    new TextEncoder().encode(\"Hello Solana\"),\n                    solanaMessage.signature,\n                    new PublicKey(solanaMessage.publicKey).toBytes()\n                );\n                verifyList[methodItem.method] = verifySol\n              } else {\n                verifyList[methodItem.method] = false\n              }\n            } else if (methodItem.method === \"sui_signPersonalMessage\" || methodItem.method === \"sui_signMessage\") {\n              let suiResult = this.sui_verifySignature(methodItem.result);\n              verifyList[methodItem.method] = (await suiResult).result\n            } else if (methodItem.method === \"btc_signMessage\") {\n\n              verifyList[methodItem.method] = \"Not verified yet\"\n\n            } else if (methodItem.method === \"aptos_signMessage\") {\n              let aptosMessage = methodItem.result\n              let aptosProvider = new OKXAptosProvider(window.provider)\n              let aptosPublicKey = aptosProvider.getAccount(methodItem.chainId)?.publicKey\n\n              let signStr = aptosMessage.signature\n              if (signStr.startsWith(\"0x\")) {\n                signStr = signStr.slice(2, signStr.length)\n              }\n\n              console.log(\"aptos_signMessage aptosPublicKey And signStr\", aptosPublicKey, signStr)\n              verifyList[methodItem.method] = nacl.sign.detached.verify(\n                  Buffer.from(aptosMessage.fullMessage),\n                  Buffer.from(signStr, 'hex'),\n                  Buffer.from(aptosPublicKey, 'hex'),\n              );\n            } else if (methodItem.method === \"cosmos_signArbitrary\") {\n              let cosmosProvider = new OKXCosmosProvider(window.provider)\n              let cosmosAddress = cosmosProvider.getAccount(methodItem.chainId)?.address\n              let cosmosMessage = methodItem.result\n              let isValid = await this.cosmos_verifySignArbitrary(cosmosAddress, \"test cosmos\", cosmosMessage.signature, cosmosMessage.pub_key.value)\n              verifyList[methodItem.method] = isValid\n\n            } else if (methodItem.method === \"tron_signMessage\") {\n              let tronMessage = methodItem.result\n              let tronWeb = new TronWeb({\n                \"fullHost\": 'https://api.trongrid.io',\n                \"headers\": {},\n                \"privateKey\": ''\n              })\n              let provider = new OKXTronProvider(window.provider)\n              verifyList[methodItem.method] = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), tronMessage, provider.getAccount(\"tron:mainnet\").address)\n            } else if (methodItem.method === \"tron_signMessageV2\") {\n              let tronMessage = methodItem.result\n              let tronWeb = new TronWeb({\n                \"fullHost\": 'https://api.trongrid.io',\n                \"headers\": {},\n                \"privateKey\": ''\n              })\n              const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", tronMessage);\n              let provider = new OKXTronProvider(window.provider)\n\n              verifyList[methodItem.method] = base58Address === provider.getAccount(\"tron:mainnet\").address\n            } else if (methodItem.method === \"starknet_signMessage\") {\n              let res = methodItem.result\n              let signData = this.starknetPanelTypedData\n\n              const rpcProvider = new StarknetRpcProvider({nodeUrl: \"https://free-rpc.nethermind.io/mainnet-juno/v0_7\"});\n\n              let provider = new OKXStarknetProvider(window.provider)\n              let address = provider.getAccount(\"starknet:mainnet\").address\n              let pk = \"0x123\"; /// random pk\n              const account = new StarknetAccount(rpcProvider, address, pk)\n\n              let that = this\n              account.verifyMessage(signData, res).then(function (isValid) {\n                that.testTransaction = `Verifyed result: \\n${isValid}`\n              }).catch(function (error) {\n                that.testTransaction = `Verifyed failed: \\n${error}`\n              })\n              verifyList[methodItem.method] = \"starknet is verifying signature...\"\n            } else {\n              verifyList[methodItem.method] = \"Not verified yet\"\n\n            }\n          } else if (\"method\" in methodItem && \"error\" in methodItem) {\n            verifyList[methodItem.method] = methodItem.error\n          }\n\n        }\n\n        console.log(\"验证签名 最后的结果>>>:\", JSON.stringify(verifyList));\n        this.testTransaction = \"签名验证结果如下: \\n\" + JSON.stringify(verifyList)\n      } else {\n        console.log(\"验证签名 window.provider.session.connectMethodsReply 为空:\");\n\n      }\n\n    },\n\n    handleThemeSelect(theme) {\n      selectedTheme = theme;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: theme,\n          },\n        };\n      }\n    },\n\n    async sui_verifySignature(signatureResult) {\n      let resultObj = signatureResult\n      let result = false\n      let msg = ''\n      try {\n        /// 获取当前account\n        const adapter = new SuiAdapter(window.provider);\n        let account = adapter.getAccount()\n        console.log(`Account中获取的address：${account.address}`)\n\n        /// 验证签名\n        let pubKey = await verifyPersonalMessageSignature(this.currentSuiTransaction.message, resultObj.signature)\n        let address = pubKey.toSuiAddress()\n        console.log(`验签结果计算得到address：${address}`)\n\n        /// 对比pubKey\n        console.log(`account pubkey: ${account.publicKey}`,)\n        console.log(`result pubkey: ${pubKey.toBase64()}`)\n        result = (account.address === address) && (account.publicKey === pubKey.toBase64())\n\n        msg = `address verify: ${account.address === address}\\npublicKey verify: ${account.publicKey === pubKey.toBase64()}`\n        console.log(\"signature verify success: \", pubKey)\n      } catch (e) {\n        console.log(\"signature verify failed: \", e)\n      }\n      return {\n        result,\n        msg\n      }\n    },\n\n\n    handleRedirectSelect(input) {\n      this.redirect = input;\n    },\n\n    handleRedirectDeeplink(input) {\n      this.redirectDeeplink = input;\n    },\n\n    addRedirectParam() {\n      if (this.testTransaction) {\n        const newTransaction = JSON.parse(this.testTransaction);\n        newTransaction.redirect = this.redirect === 'deeplink' ? this.redirectDeeplink : this.redirect;\n        this.testTransaction = JSON.stringify(newTransaction);\n      }\n    },\n\n    canChainAddRedirectParam() {\n      return chainsThatCanAddRedirectParam.some((c) => this.selectedChain.startsWith(c));\n    }\n  },\n  created() {\n    // for (const eventName of Object.values(OKX_TON_CONNECTION_AND_TRANSACTION_EVENT)) {\n    //   console.log(eventName);\n    //   window.addEventListener(eventName, (event) => {\n    //     console.log(eventName,event.detail)\n    //     this.currentStatus = eventName\n    //   });\n    // }\n  },\n\n  mounted() {\n\n    var scriptTag = document.createElement(\"script\");\n    scriptTag.src = \"https://telegram.org/js/telegram-web-app.js\";\n    scriptTag.id = \"tgsdk\";\n    document.getElementsByTagName('head')[0].appendChild(scriptTag);\n\n    this.connectReady = true;\n    document.title = \"OKX Connect\";\n    this.initBtnClicked()\n\n    console.log(\"挂载成功:\")\n    if (this.$refs.starknetPanelRef) {\n      this.starknetPanelTypedData = toRaw(this.$refs.starknetPanelRef.signData)\n      console.log(\"111: \", this.starknetPanelTypedData)\n    } else {\n      console.log(\"222\")\n    }\n  },\n};\n</script>\n","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_getAccount()\">getAccount(BTC)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signMessage()\">signMessage(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_send()\">send(BTC)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendBitcoin()\">sendBitcoin(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signPsbt_up()\">signPsbt(上架NFT)</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"btc_signAndPushPsbt_up()\">signAndPushPsbt(上架NFT)</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在OKX App选择要上架的Btc NFT，点击【上架】\n        </li>\n        <li>\n          2. 弹出签名面板，点开高级选项，查看\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出上架流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendInscription()\">sendInscription(BTC)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Btc NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount\n    }\n  },\n  methods: {\n\n    btc_getAccount() {\n      this.$emit('generateTransactionParams', {}, \"btc_getAccount\")\n    },\n\n    btc_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to BTC\"\n      };\n      this.$emit('generateTransactionParams', params, \"btc_signMessage\")\n    },\n\n    btc_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"btc_send\")\n    },\n\n    btc_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"btc_sendBitcoin\")\n    },\n\n    btc_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"btc_signPsbt\")\n    },\n\n    btc_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"btc_signAndPushPsbt\")\n    },\n\n    btc_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"btc_sendInscription\")\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./BtcTransactionPanel.vue?vue&type=template&id=376d03bc&scoped=true\"\nimport script from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./BtcTransactionPanel.vue?vue&type=style&index=0&id=376d03bc&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-376d03bc\"]])\n\nexport default __exports__","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_getAccount()\">getAccount(Fractal)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signMessage()\">signMessage(Fractal)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_send()\">send(Fractal)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_sendBitcoin()\">sendBitcoin(Fractal)</el-button>\n\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signPsbt_up()\">signPsbt(上架NFT)</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_signAndPushPsbt_up()\">signAndPushPsbt(上架NFT)</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在OKX App选择要上架的Fractal NFT，点击【上架】\n        </li>\n        <li>\n          2. 弹出签名面板，点开高级选项，查看\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出上架流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_sendInscription()\">sendInscription(Fractal)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Fractal NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount\n    }\n  },\n  methods: {\n\n    fractal_getAccount() {\n      this.$emit('generateTransactionParams', {}, \"fractal_getAccount\")\n    },\n\n    fractal_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to UniSat!\\n\\nClick to sign in and accept the UniSat Terms of Service (https://unisat.io/terms-of-service.html) and Privacy Policy (https://unisat.io/privacy-policy.html).\\n    \\nThis request will not trigger a blockchain transaction.\\n    \\nYour authentication status will reset after 24 hours.\\n    \\nWallet address:\\nbc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\\n    \\nNonce:\\n162d70e3-8c21-4cfd-9a22-9bf0a4b7be51\\n\"\n      };\n      this.$emit('generateTransactionParams', params, \"fractal_signMessage\")\n    },\n\n    fractal_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_send\")\n    },\n\n    fractal_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_sendBitcoin\")\n    },\n\n    fractal_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"fractal_signPsbt\")\n    },\n\n    fractal_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"fractal_signAndPushPsbt\")\n    },\n\n    fractal_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"fractal_sendInscription\")\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./FractalTransactionPanel.vue?vue&type=template&id=fb2f7e38&scoped=true\"\nimport script from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./FractalTransactionPanel.vue?vue&type=style&index=0&id=fb2f7e38&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-fb2f7e38\"]])\n\nexport default __exports__","<script>\n\nimport {getFullnodeUrl, SuiClient} from \"@mysten/sui/client\";\nimport {Transaction as SuiTransaction} from '@mysten/sui/transactions';\n\nexport default {\n  name: \"SuiTransactionPanel\",\n  methods: {\n    sui_getAccount() {\n      this.$emit('generateTransactionParams', '', \"sui_getAccount\")\n    },\n\n    //对单个交易签名（不发送)\n    async sui_signMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signMessage\")\n    },\n\n    async sui_signPersonalMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signPersonalMessage\")\n    },\n\n    sui_signTransaction2() {\n      // 定义要转移的金额和目标地址\n      const amount = 109; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    async sui_requestRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n          `sui:mainnet`,\n          `https://fullnode.mainnet.sui.io:443`\n      );\n      var data = {\n        method: \"suix_getBalance\",\n        params: [\n          \"0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae\",\n          \"0x168da5bf1f48dafc111b0a488fa454aca95e0b5e::usdc::USDC\",\n        ],\n      };\n\n      this.$emit(\"generateTransactionParams\", data, \"sui_testRpc\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 102; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signAndExecuteTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n      this.$emit(\"generateTransactionParams\", input, \"sui_signAndExecuteTransaction\")\n    },\n\n    /// generate txBytes and txSerialize\n    async generateTsBytesAndSerizlize(input) {\n      /// txBytes and txSerialize may be constructed in advance by the dapp side\n      let resultTuple = [\"\", \"\"];\n      if (\n          \"txBytes\" in input &&\n          input.txBytes.length > 0 &&\n          \"txSerialize\" in input &&\n          input.txSerialize.length > 0\n      ) {\n        resultTuple = [input.txBytes, input.txSerialize];\n      }\n\n      /// Otherwise, a transactionBlock parameter is required.\n      if (!(\"transactionBlock\" in input)) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      // if (this.walletAddress != \"connected\") {\n      //   alert(\"请先连接钱包\");\n      //   return new Promise((resolve) => {\n      //     resolve(resultTuple);\n      //   });\n      // }\n\n      let senderAccounts = window.provider.requestAccountsWithNamespace(\"sui\");\n      if (senderAccounts.length == 0) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      try {\n        let rpcUrl = getFullnodeUrl(\"mainnet\");\n        rpcUrl = \"https://www.okx.com/fullnode/sui/discover/rpc\"\n        const suiClient = new SuiClient({ url: rpcUrl });\n\n        /// sender is required\n        input.transactionBlock.setSender(senderAccounts[0]);\n        const result = await input.transactionBlock.build({\n          client: suiClient,\n        });\n        const txBytes = Buffer(result).toString(\"base64\");\n        const txSerialize = await SuiTransaction.from(txBytes).toJSON();\n        resultTuple = [txBytes, txSerialize];\n      } catch (error) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      return new Promise((resolve) => {\n        resolve(resultTuple)\n      })\n    },\n\n    //签名并发送交易\n    sui_signAndExecuteTransaction() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n        \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.testTransaction = JSON.stringify(input);\n      this.currentSuiTransaction = input;\n      this.currentSuiMethod = \"sui_signAndExecuteTransaction\";\n    },\n  },\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_getAccount()\">getAccount(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signMessage()\">signMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signPersonalMessage()\">signPersonalMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signTransaction2()\">signTransaction(Sui)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signAndExecuteTransaction()\">sendTransaction(Sui)</el-button>\n      <div style=\"font-size: 12px; color: gray;\">(send to Rally Tiger account)</div>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_requestRpc()\">RPC_getBalance</el-button>\n      <div style=\"font-size: 12px; color: gray;\">get USDC balance of address:</div>\n      <div style=\"font-size: 12px; color: gray\">0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae</div>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signTransaction_pre_execution()\">signTransaction(prepared data)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signAndExecuteTransaction_pre_execution()\">sendTransaction(prepared data)</el-button>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./SuiTransactionPanel.vue?vue&type=template&id=56a8eddf&scoped=true\"\nimport script from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./SuiTransactionPanel.vue?vue&type=style&index=0&id=56a8eddf&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-56a8eddf\"]])\n\nexport default __exports__","<script>\nimport { OKXStarknetProvider } from \"@okxconnect/universal-provider\";\nimport { CallData, uint256, RpcProvider, Account } from \"starknet\";\n\nexport default {\n  name: \"StarknetTransactionPanel\",\n  methods: {\n    async starknet_signMessage() {\n      this.address = this.getCurrentAddress()\n      if (this.address === \"\") {\n        alert(\"address can't be ''\");\n        return\n      }\n\n      let signData = this.signData\n      this.$emit(\"generateTransactionParams\", JSON.stringify(signData))\n      let provider = new OKXStarknetProvider(window.provider)\n      let res = await provider.signMessage(this.address, signData, \"starknet:mainnet\")\n      if (res.code) {\n        if (res.code == 301) {\n          let msg = \"Wallet address is registering, please try again later!\"\n          alert(msg)\n          this.$emit(\"generateTransactionResult\", msg, \"starknet_signMessage\")\n        }\n        this.$emit(\"generateTransactionResult\", res, \"starknet_signMessage\")\n        return\n      }\n      console.log(res)\n\n      const rpcProvider = new RpcProvider({ nodeUrl: \"https://free-rpc.nethermind.io/mainnet-juno/v0_7\" });\n      let pk = \"0x123\"; /// random pk\n      const account = new Account(rpcProvider, this.address, pk)\n      let that = this\n      account.verifyMessage(signData, res).then(function (isValid) {\n        that.$emit(\"generateTransactionResult\", \"verify:\" + isValid + \"\\n\" + res, \"starknet_signMessage\")\n      }).catch(function (error) {\n        that.$emit(\"generateTransactionResult\", \"failed:\" + error + \"\\n\" + res, \"starknet_signMessage\")\n      })\n    },\n\n    async starknet_sendTransaction() {\n      this.address = this.getCurrentAddress()\n      if (this.address === \"\") {\n        alert(\"address can't be ''\");\n        return\n      }\n\n      let val = uint256.bnToUint256(120000000000000000)\n      const transferCalldata = CallData.compile({\n        to: \"0x00b909cefa36ab6bc26f5887a867e46ef162238f0a171b1c2974b665afd4237f\",\n        value: val\n      })\n\n      // const ETHTokenAddress = \"0x049d36570d4e46f48e99674bd3fcc84644ddd6b96f7c741b1562b82f9e004dc7\"\n      // const STARKTokenAddress = \"0x04718f5a0fc34cc1af16a1cdee98ffb20c31f5cd61d6ab07201858f4287c938d\"\n      const DAITokenAddress = \"0x00da114221cb83fa859dbdb4c44beeaa0bb37c7537ad5ae66fe5e0efd20e6eb3\"\n\n      const invokeParams = {\n        calls: [\n          {\n            contract_address: DAITokenAddress,\n            entry_point: \"transfer\",\n            calldata: transferCalldata\n          }\n        ],\n      }\n\n      this.$emit(\"generateTransactionParams\", JSON.stringify(invokeParams))\n      let provider = new OKXStarknetProvider(window.provider)\n\n      let that = this\n      provider.sendTransaction(this.address, invokeParams, \"starknet:mainnet\").then(function(res){\n        console.log(\"starknet_sendTransaction result \", res)\n        that.$emit(\"generateTransactionResult\", res, \"starknet_sendTransaction\")\n      }).catch(function(error) {\n        if (error.code == 301) {\n          let msg = \"Wallet address is registering, please try again later!\"\n          alert(msg)\n          that.$emit(\"generateTransactionResult\", msg, \"starknet_sendTransaction\")\n        }else {\n          that.$emit(\"generateTransactionResult\", error, \"starknet_sendTransaction\")\n        }\n      });\n    },\n\n    getCurrentAddress() {\n      let provider = new OKXStarknetProvider(window.provider)\n      const address = provider.getAccount(\"starknet:mainnet\")?.address\n      return address\n    },\n\n    getPublicKey() {\n      let provider = new OKXStarknetProvider(window.provider)\n      const account = provider.getAccount(\"starknet:mainnet\")\n      console.log(\"获取到的account是：\")\n      console.log(account)\n      return \"05d8e5e9c1dd686246716c888159271d2f13986cb4acee46164e2c4e034629c0\"\n    }\n  },\n\n  data() {\n    const signData = {\n        \"domain\": {\n          \"chainId\": \"0x534e5f4d41494e\",\n          \"name\": \"STRKFarm\",\n          \"version\": \"1\"\n        },\n        \"message\": {\n          \"document\": \"app.strkfarm.xyz/tnc/v1\",\n          \"message\": \"Read and Agree T&C\"\n        },\n        \"primaryType\": \"Tnc\",\n        \"types\": {\n          \"StarkNetDomain\": [\n            {\n              \"name\": \"name\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"version\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"chainId\",\n              \"type\": \"felt\"\n            }\n          ],\n          \"Tnc\": [\n            {\n              \"name\": \"message\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"document\",\n              \"type\": \"felt\"\n            }\n          ]\n        }\n    }\n\n    return {\n      signData\n    }\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"starknet_signMessage()\">signMessage</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 验签不成功的话，请尝试连接VPN\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"starknet_sendTransaction(true)\">\n        sendTransaction\n      </el-button>\n\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 发送0.12个DAI到0x00b9...4237f的地址\n        </li>\n        <li>\n          2. 请保证你的钱包有足够的DAI\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./StarknetTransactionPanel.vue?vue&type=template&id=082fda2b&scoped=true\"\nimport script from \"./StarknetTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./StarknetTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./StarknetTransactionPanel.vue?vue&type=style&index=0&id=082fda2b&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-082fda2b\"]])\n\nexport default __exports__","<script>\n\n\nimport {OKXTronProvider} from \"@okxconnect/universal-provider\";\nimport {TronWeb} from \"tronweb\";\n\nexport default {\n  name: \"TronTransactionPanel\",\n  methods: {\n\n    async tron_signMessage() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessage(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n\n      const verify = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), res, provider.getAccount(\"tron:mainnet\").address)\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" + res, \"tron_signMessage\")\n    },\n\n    async tron_signMessageV2() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessageV2(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", res);\n      console.log(\"tron_signMessageV2_base58Address\", base58Address)\n      console.log(\"tron_signMessageV2_address\", provider.getAccount(\"tron:mainnet\").address)\n      const verify = base58Address === provider.getAccount(\"tron:mainnet\").address\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" +  res, \"tron_signMessage\")\n    },\n\n    async tron_signTransaction(isOnlySign) {\n      let provider = new OKXTronProvider(window.provider)\n        let tronWeb = new TronWeb({\n          \"fullHost\": 'https://api.trongrid.io',\n          \"headers\": {},\n          \"privateKey\": ''\n        })\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const transaction = await tronWeb.transactionBuilder.sendTrx(\"TGBcVLMnVtvJzjPWZpPiYBgwwb7th1w3BF\", 1000, address);\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let res = await provider.signTransaction( transaction, \"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", res, \"tron_signTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async getContract() {\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n      \n      try {\n        const contract = await tronWeb.trx.getContract(contractAddress)\n        const abi = contract.abi.entrys;\n        console.log(\"获取到的合约：\")\n        console.log(abi)\n      } catch (error) {\n        console.log(\"Error getting contract ABI:\", error);\n      }\n    },\n    \n    async tron_signAndSendTransactionContract(isOnlySign) {\n      // this.getContract()\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n      ]\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"quote(uint256,uint256,uint256)\", {}, parameter, address);\n      console.log(\"=====>transaction: \")\n      console.log(ret);\n      this.$emit(\"generateTransactionParams\", ret.transaction)\n      if (isOnlySign) {\n        let tx = await provider.signTransaction( ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async tron_signAndSendTransactionApprove(isOnlySign) {\n      let contractAddress = \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'address', value: contractAddress},\n        {type: 'uint256', value: 1000},\n      ]\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"approve(address,uint256)\", {}, parameter, address);\n\n      let transaction = ret.transaction\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let tx = await provider.signTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n\n    }\n\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessage()\">tron_signMessage</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessageV2()\">tron_signMessageV2</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(true)\">\n        tron_signTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(true)\">\n        tron_signTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(true)\">\n        tron_signTransaction(Approve)\n      </el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(false)\">\n        tron_signAndSendTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(false)\">\n        tron_signAndSendTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(false)\">\n        tron_signAndSendTransaction(approve)\n      </el-button>\n    </el-col>\n\n\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./TronTransactionPanel.vue?vue&type=template&id=55a13ab0&scoped=true\"\nimport script from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./TronTransactionPanel.vue?vue&type=style&index=0&id=55a13ab0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-55a13ab0\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=204071b8&scoped=true\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=204071b8&scoped=true&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-204071b8\"]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\nimport App from './App.vue'\n\nconst app = createApp(App)\n\napp.use(ElementPlus)\napp.mount('#app')","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkokxconnectdemo\"] = self[\"webpackChunkokxconnectdemo\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(30649); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["Object","defineProperty","exports","value","CONNECT_METHOD_BATCH_FETCHMSG","CONNECT_METHOD_FETCHMSG","CONNECT_METHOD_RECEIVE","CONNECT_METHOD_UNSUB","CONNECT_METHOD_SUB","CONNECT_METHOD_PUBLISH","CONNECT_METHOD_LOGIN","CONNECT_METHOD_PUSH","require","__createBinding","this","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","__setModuleDefault","v","__importStar","mod","result","prototype","hasOwnProperty","call","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","e","rejected","done","then","apply","OKXWalletConnector","constants_1","storageconstants_1","storage_1","utils_1","utils_2","eventemitter3_1","log","protocol_1","report_1","WS","resolveWebSocketImplementation","constructor","url","events","EventEmitter","state","ConnectorState","InitState","selectedUrlIndex","retryCount","timeOutLimit","checkWSUrl","Error","heartbeatTimer","connectionTimeoutTimer","connectURLStorage","Storage","OKXCONNECTOR_CACHE_KEY","connecting","Connecting","onPayload","data","logDebug","rsp","Date","now","toString","emit","onClose","event","_a","socket","code","onError","id","payload","msg","onopen","onmessage","onclose","Connected","emitError","errorEvent","heartbeat","clearTimeout","OnError","readyState","WebSocket","OPEN","send","setTimeout","bind","tryRegistOpen","logError","registOpen","inRetry","toUTCString","URLSearchParams","startTimeOutTimer","hasBuiltInWebSocket","onerror","close","on","resetTimeOutTimer","OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE","FINISHED","checkMaxRetry","OKXCONNECTOR_WS_URL_LIST","length","connectionTryNext","nextUrl","getNextSelectUrl","CANCELED","pendingSocket","TIME_OUT","reportEvent","OKXReportType","LOG","cacheSuccessUrlSelect","saveContent","onVisibleChanged","document","visibilityState","arguments","once","err","OKXConnectError","OKX_CONNECT_ERROR_CODES","CONNECTION_ERROR","connect","removeEventListener","addEventListener","disconnect","Disconnected","currentStatus","addListener","decrypt","success","failed","listenPayloadHandler","removeListener","parsedEvent","safeJsonParse","params","rawMsg","message","failHandler","addPackageParse","callback","payloadHandler","param","listener","off","doLogin","safeJsonStringify","getMsgPayloadFromHistory","tmpMsg","jsonstr","onOpen","openHandler","ConnectionManager","connect_1","commands_1","jwtconstants_1","crypto_1","jwt_1","safejson_1","log_1","url_1","appname","connectStorage","OKXCONNECTOR_CACHE_KEY_DAPP","crypto","SessionCrypto","inTMA","isInTMA","reportLog","keyPairInfo","getCachedCryptoKeyPair","jwtKeyPair","getCachedJWTKeyPair","saveJWTKeyPair","connector","OKXCONNECTOR_WS_URL_1","packageId","connectedWalletPK","currentTopic","refreshPackageId","saveCryptoKeyPair","keyPair","cacheInfo","encryptStoreMsg","OKXCONNECTOR_CRYPTO_KEY","kp","getAndDecrypt","content","clearCache","strkeyPair","publicKey","toHexString","secretKey","OKXCONNECTOR_JWT_KEY","strKeyPairInfo","hexToByteArray","generateKeyPair","isWalletPKReady","makeJWT","topic","signJWT","OKXCONNECTOR_JWT_SIDE","OKXCONNECTOR_JWT_TTL","parsePackage","input_1","input","ignoreACK","_b","_c","_d","_e","sendACK","getItem","OKXCONNECTOR_TOKEN_CACHE","inputObj","messageId","sendReceive","restoreConnect","getConnectInfo","generateTopic","info","channelId","clientId","stringifyKeypair","fromRestore","timeLog","getTime","lastConnectId","cachedSenderPublicKey","OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE","jwtToken","timeOne","error","name","timeF","sendFetchAndConsumeMessages","timeTh","catch","jsonrpc","CONNECT_JSONRPC_VER","method","token","replace","parsedMessage","fail","msgObj","trimStart","startsWith","sendRaw","ttl","OKXCONNECTOR_MESSAGE_TTL","msg_1","encrypt","msgId_1","success_1","msgId","reason","sendConnectSessionInfo","fetchedMessages","hasMore","receivedMsgs","i","timeFive","cleanCache","saveSessionContent","key","OKXCONNECTOR_SESSION_PREFIX_KEY","jsonData","getSessionContent","jsonStr","object","getCurrentConnectionReady","OKXCONNECTOR_WS_URL_IDX_KEY","OKXCONNECTOR_WS_URL_3","OKXCONNECTOR_WS_URL_2","EVENT_EMITTER_MAX_LISTENERS","Engine","iconnector_1","ws_connector_1","connectionManager_1","sessionUtils_1","connector_1","wallet_info_1","appName","connectors","useConnector","connectionManager","addConnectionListener","isInject","getConnector","InjectConnector","registerConnector","WsConnector","setConnectionManager","hasWsConnector","universalConnect","request","sessionConfig","connectInfoAndUrl","JSON","stringify","universalRequest","forEach","item","push","connectInfo","requestId","openUniversalLink","openUniversalUrl","universalConnectRequest","protocolVer","Number","tonConnectSdkVersion","dAppInfo","dappInfo","requests","redirect","base64Encoded","encodeConnectParams","openOKXLink","getOKXLink","useMini","tmaReturnUrl","openMethod","OkxwalletInjectConnector","openWallet","connectRequest","openOKXTMAWalletlinkWithFallback","useShortLink","openOKXUniversalLink","openOKXDeeplinkWithFallback","isIOS","isIos","addOnConnectResultListener","response","connectResponse","namespaces","buildNameSpacesByConnectResponse","UNKNOWN_ERROR","walletName","responses","wallet","tag","OKXWalletName","OKX_APP_WALLET","OKXMiniWalletName","OKX_TG_WALLET","OKXInjectWalletName","OKX_INJECT_WALLET","find","getTag","session","assign","methodsResponse","connectRequestMethods","signResponse","setUseConnector","sendSession","connectResultListener","setOnConnectResultListener","engineConnectInfo","requestAnswer","clearData","addDisconnectListener","disconnecter","getTagByappName","setConnectConnector","setSessionConnectingListener","sessionConnectingListener","restoreconnect","sessionInfo","onConnectResult","restoreconnectFromTopic","namespaceKeys","connectManagerDisconnect","jsonResponse","WalletConnectionManager","walletConnectionManager_1","engine_1","__importDefault","MULTICODEC_ED25519_LENGTH","MULTICODEC_ED25519_HEADER","MULTICODEC_ED25519_BASE","MULTICODEC_ED25519_ENCODING","DID_METHOD","DID_PREFIX","DID_DELIMITER","KEY_PAIR_SEED_LENGTH","DATA_ENCODING","JSON_ENCODING","JWT_ENCODING","JWT_DELIMITER","JWT_IRIDIUM_TYP","JWT_IRIDIUM_ALG","JWTHeaderType","decodeJSON","encodeJSON","encodeIss","decodeIss","encodeSig","decodeSig","encodeData","decodeData","encodeJWT","decodeJWT","verifyJWT","ed25519","tweetnacl_1","stringUtils_1","default","sign","str","okxtoString","okxfromString","val","publicKeyStr","join","issuer","prefix","multicodec","split","bytes","encoded","header","signature","jwt","slice","sub_1","aud_1","ttl_1","keyPair_1","sub","aud","iat","Math","floor","alg","typ","iss","exp","act","detached","verify","OKXCONNECTOR_JWT_WALLET_SIDE","buildRequestAccountNameSpacesByConnectResponse","requestAccountNameSpaces","universalResponse","accounts","filterAccount","namespace","ton_addr","address","tonAddress","tonProof","network","ton_proof","addresses","methods","extra","chains","addressItem","addressArr","chain","utils_3","crypto_js_1","subKey","beforeKey","localStorage","resolveLocalStorage","checkAndUpgradeCache","storeKey","cipherIV","cacheStr","cacheKey","cache","cacheObj","fromCacheKey","toCacheKey","setItem","removeItem","timestamp","saveItem","localKey","totalCacheStr","getCachedPBKDF2InfoKey","pwLen","saltLen","pw","iv","salt","OKXCONNECTOR_STORAGER_CRYPTO_SALT","randomBytes","OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD","OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV","ivBuffer","PBKDF2","iterations","storeInfo","AES","enc","Utf8","OKXCONNECTOR_STORAGE_CIPHER_METHOD","OKXCONNECTOR_TON_KEY","WalletConnectionManagerEvent","WalletConnectionManagerTopicInfoCacheKey","RECEIVE_REQUEST","walletConnectionConstants_1","communicateEvents","sessionCryptoInfoMap","Map","inLogin","isLogined","offset","topicId","isTopicPublicKeyExist","timestampStr","parseInternalMsg","internalMsg","internalObj","origin","originContent","base64decode","updateClientId","cid","lastCheck","getLastSixMd5Hash","dappPublicKey","syncCacheSessionInfo","topic_1","_f","_g","_h","_j","_k","_l","isInternalData","inner_message","inner_topic","messageObj","sessionInfoString","base64Content","inner_connection","toObject","decryptWallet","recovrySessionInfoFromCache","cacheMap","topicItem","cryptoItem","cryptoKeyPair","set","cacheSessionInfo","sync","duplicatedTopics","includes","delete","appendTopic","sessionPublicKey","subscribeTopics","Array","from","confirmAppendingTopics","size","keys","getSessionPublicKey","getCurrentCachedTopicIdList","needPublicKey","useRaw","connectedDappPK","cryptoObject","encryptWallet","sendUnsubscribe","sendBatchFetchAndConsumeMessages","topicIdList","topics","withInternalData","finishCount","idx","AppwalletConnector","instance","super","walletNameKey","shortUniversalLink","appConnectEncodeParams","appDeepLink","getAppWalletDeepLink","isOS","openDeeplinkWithFallback","stackDeepLink","openLinkBlank","standardUniversalLink","TgwalletConnector","appwallet_connector_1","inject_connector_1","tgwallet_connector_1","okxwallet_inject_connector_1","SolProvider_1","AptosProvider_1","media_1","TONProvider_1","inject_1","sui_provider_1","disconnectListener","providerMap","enable","NameSpaceKeyEip155","Eip155Provider","NameSpaceKeySOL","SolProvider","NameSpaceKeyAptos","AptosProvider","NameSpaceKeyTON","TONProvider","NameSpaceKeySui","SuiProvider","getInjectProvider","nameSpace","mapKey","entries","BAD_REQUEST_ERROR","window","okxwallet","requestAccounts","version","getVersion","platform","navigator","appVersion","maxProtocolVersion","responseItem","getAccountByRequestWallets","requiredNamespaces","optionalNamespaces","getRequestId","newRequest","onAck","injectProvider","chainId","USER_REJECTS_ERROR","errorResponse","CHAIN_NOT_SUPPORTED","_","allReady","every","namespaceKey","connectReady","toJSON","namespacesKey","connectWalletNameSpace","accountsItem","sessionAccounts","areEqual","sort","index","needPop","walletInfo","accountResult","isDevice","walletInfoItem","connectWallet","requestWallets","allNameSpace","walletInfoFirst","provider","itemResult","parseConnectResponse","cheeckRequire","requireItem","resultSel","resultItem","hasChainAdd","addItem","encodeTGParams","encodeTWAConnectURLParams","tgUrl","getTelegramWalletTWAUrl","pendingRequests","getDefaultReporter","beginReport","handleResponse","bindRequestForPromise","clear","nonceLength","sessionKeyPair","createKeypairFromString","createKeypair","box","createNonce","receiverPublicKey","encodedMessage","TextEncoder","encode","nonce","encrypted","concatInfo","concatUint8Arrays","hexResult","encodedResult","base64encode","senderPublicKey","messageByteArray","toUint8Array","internalMessage","splitToUint8Arrays","decrypted","open","TextDecoder","decode","__exportStar","p","hasOKXInjectedProvider","getWindowProviderNamespace","providerSearch","property","path","_provider","SuiMethods","TONMethods","AptosMethods","SOLANAMethods","Eip55Methods","InjectUtils_1","injectParams","aptos","signMessage","signTransaction","signAndSubmitTransaction","hash","METHOD_NOT_SUPPORTED","connectRequestWalletResponse","connectChain","chainStr","selectedAddress","coinType","namespaceChainId","nameSpaceResponse","bs58_1","signedMessage","solana","bufferResult","injectResult","allResult","signAllTransactions","signAndSendResult","signAndSendTransaction","tonParams","resultMe","okxTonWallet","tonconnect","getChainId","tonResult","ton","tonItem","manifestUrl","itmes","items","restoreConnection","ethParams","typedDataJson","switchChainId","parseInt","resultSwitch","chainHex","currentChain","suiWallet","sui","getSuiPublicKey","suiAccount","features","suiPublicKey","originalRarams","injectSignResult","signTransactionBlock","injectSendResult","signAndExecuteTransactionBlock","digest","injectPersonalResult","signPersonalMessage","TON_CHAINS","COSMOS_CHAINS","APTOS_CHAINS","SUI_CHAINS","SOLANA_CHAINS","BTC_CHAINS","MAINNET","FRACTAL","TESTNET","SONIC_TESTNET","COSMOS_MAINNET","IEngine","ISignClient","ISignClientEvents","IEngineEvents","client","creatOKXInjectWalletInfo","creatOKXMiniAppWalletInfo","creatOKXWalletInfo","getBigIntRpcId","formatJsonRpcRequest","isJsonRpcError","isJsonRpcResponse","parseConnectionError","isHttpUrl","formatJsonRpcError","json_rpc_1","isJsonRpcPayload","isJsonRpcRequest","isJsonRpcResult","payloadId","formatJsonRpcResult","isReservedErrorCode","getError","getErrorByCode","formatErrorMessage","isWsUrl","okx_connect_error_1","IncrementalRandomGenerator","bits","Uint8Array","Uint16Array","Uint32Array","initialValue","getNextValue","uint8Generator","uint16Generator","date","BigInt","RESERVED_ERROR_CODES","type","STANDARD_ERROR_MAP","DEFAULT_ERROR","match","values","INTERNAL_ERROR","SERVER_ERROR","getUrlProtocol","matches","RegExp","matchRegexProtocol","regex","protocol","test","CONNECT_ITEM_ERROR_CODES","TONCHAIN","connect_wallet_1","connect_event_1","getTestTwaUrl","okxTesttwaUrl","getTestTgTwaUrl","okxTestTgtwaUrl","getBotNameAndAppName","urlObj","URL","pathnameParts","pathname","filter","Boolean","botName","OKX_MINI_WALLET_NAME","OKX_APP_WALLET_NAME","tgwalletAppName","tgwalletName","standardDeeplink","downloadUrl","okxDeeplink","location","hostname","SERVER_ERROR_CODE_RANGE","INVALID_PARAMS","METHOD_NOT_FOUND","INVALID_REQUEST","PARSE_ERROR","getDefaultMessageByCode","setPrototypeOf","ALREADY_CONNECTED_ERROR","NOT_CONNECTED_ERROR","UNKNOWN_APP_ERROR","USER_REJECTS_ERROR_CAUSE_REGISTER","NameSpaceKeyStarknet","NameSpaceKeyTron","NameSpaceKeyCosmos","NameSpaceKeyBtc","misc_1","chains_1","callForSuccess","fn","options","attempts","delayMs","lastError","delay","timeout","signal","aborted","timeoutId","checkMetaData","versionCompare","isBrowser","isMobileUserAgent","openLink","toSafeBase64FromBase64","isValidObject","getAppWalletShortDeepLink","encodeTelegramUrlParameters","isTelegramUrl","openOKXDeeplink","getUniversalLink","logWarning","call_for_success_1","web_api_1","tma_api_1","request_1","debug","forceReport","defaultReporter","OKXReporter","packageJson","args","console","okxLogDebug","reduce","sendRecordContent","warn","action","content_1","mediaNotTouch","mediaTouch","maxWidth","media","mediaMin","mediaMax","mediaMinMax","device","getWindow","isTmaPlatform","width","innerWidth","tablet","mobile","isMobile","isTelegram","TelegramWebviewProxy","maxTouchPoints","px","pxMin","pxMax","OKXReportSide","versionStr","cross_fetch_1","localforage_1","reportApiList","reportCacheKey","reportUUIDKey","MAX_LIMIT_REPORTCOUNT","DEFAULT_HTTP_HEADERS","Accept","DEFAULT_HTTP_METHOD","DEFAULT_FETCH_OPTS","headers","PAGE_IN","PAGE_OUT","CLICK","DAPP","WALLET","fetchListWithTimeout","urls_1","args_1","urls","controller","AbortController","fetchPromise","timeoutPromise","abort","race","ok","status","currentSide","currentVersion","storage","createInstance","recordList","currentUUID","configVersionAndSide","side","recordCacheKey","reportPlatform","startErrorCatching","records","uuid","sendCachedRecords","cachedErrors","sendRecord","record","body","res","language","ua","userAgent","reportItem","lang","markRecordItem","sendList","map","allSettled","results","keepIndex","splice","markRecord","Report_WalletType_Key","Report_Proceed_QRCode_Click","Report_ChooseType_Download_Click","Report_ChooseType_ConnectWallet_Click","Report_Proceed_Retry_Click","Report_ChooseType_ConnectWallet_View","Report_Loading_ConnectWallet_View","Report_Proceed_QRCode_View","Report_Proceed_Proceed_View","dappMetaData","icon","JSONStringify","JSONParse","json","numbersBiggerThanMaxInt","serializedData","group","parse","isCustomFormatBigInt","substring","alloc","allocUnsafe","basics_1","string","encoding","base","BASES","decoder","array","encoder","createCodec","buf","ascii","bufNum","String","fromCharCode","charCodeAt","utf8","hex","bases","base16","latin1","binary","inTg","isInTelegramBrowser","sendExpand","sendOpenTelegramLink","initParams","locationHash","urlParseHashParams","tmaPlatform","tgWebAppPlatform","Telegram","WebApp","webAppVersion","tgWebAppVersion","platforms","isTelegramWebview","TelegramWebview","postEvent","link","fallback","pathFull","search","isIframe","versionAtLeast","path_full","parent","eventType","eventData","external","notify","trustedTarget","postMessage","indexOf","_path","urlSafeDecode","qIndex","pathParam","substr","query_params","urlParseQueryString","urlencoded","decodeURIComponent","queryString","paramName","paramValue","queryStringParams","v1","v2","a","p1","p2","v1List","v2List","max","ver","removeUrlLastSlash","addPathToUrl","deeplinkUrl","useStandardUniversalLink","deeplinkEncodeUrl","encodeURIComponent","fullUrl","newWindow","href","deepLinkOpened","timeoutDuration","fallbackToDownloadPage","parameters","encodedParameters","connectRequestStr","utf8Array","btoa","connectParam","redirectStr","okxconnect","extraparams","fromtg","base64ContentStr","urlSafeBase64","twaDeepLink","openTelegramLink","RANDOM_LENGTH","hasLocalStorage","hashKey","generateRandomBytes32","tweetnacl_util_1","to_string_1","sha256_1","BASE16","hexString","byteArray","byte","buffer1","buffer2","mergedArray","subArray1","subArray2","encodeUint8Array","urlSafe","encodeBase64","decodeToUint8Array","decodeBase64","uint8Array","decodeUTF8","decodedUint8Array","encodeUTF8","scheme","global","self","randomBytes32","obj","getPrototypeOf","isIOSDevice","MSStream","isIPadOS","MD5","base64","getUserAgent","ua_parser_js_1","target","doFallback","fallbackTimeout","check","vendor","opera","getResult","osName","os","toLowerCase","deviceModel","model","browserName","browser","OKXSuiProvider","universal_provider_1","transactions_1","client_1","defaultNetwork","requestDefaultChainWithNamespace","suiClient","rpcUrl","getFullnodeUrl","suiProvider","rpcMap","currentChainId","SuiClient","getAccount","account","accountArray","txBytes","txSerialize","generateTsBytesAndSerizlize","ret","transactionBlockBytes","errorData","signAndExecuteTransaction","confirmedLocalExecution","b64encoded","atob","successData","messageBytes","resultTuple","senderAccounts","requestAccountsWithNamespace","transactionBlock","setSender","build","toBase64","Transaction","OKXSuiProvider_1","_createElementBlock","_hoisted_1","_createVNode","_component_el_container","_withCtx","_component_el_header","_cache","_createTextVNode","_component_el_main","_component_el_card","class","_createElementVNode","style","_component_el_row","_component_el_col","span","_toDisplayString","$options","getWalletAddress","_ctx","_component_el_checkbox","modelValue","withUI","$event","onChange","handleWithUI","universalToTG","handleUniversalToTG","_component_el_select","modals","placeholder","handleModalsSelect","multiple","_component_el_option","label","returnStrategy","handleReturnStrategySelect","_Fragment","_renderList","returnStrategies","strategy","_createBlock","_component_el_input","deeplink","handleReturnStrategyDeeplink","disabled","_createCommentVNode","handleLanguageSelect","locales","locale","theme","handleThemeSelect","THEME","LIGHT","DARK","selectedMethod","handleConnectMethodsSelect","connectMethods","tonProofValue","gutter","align","availableChains","checked","areChainsInit","isOptionalChecked","handleOptionChange","_component_el_button","onClick","initBtnClicked","connectInitStr","connectBtnClicked","connectStatusStr","syncAllAddressClick","syncAllAddressStr","disconnectAction","walletAddress","disconnectStatusStr","_Teleport","to","showModal","closeModal","_withModifiers","_component_qrcode_vue","qrValue","level","_component_el_tabs","activeTab","onTabClick","clickActiveTab","_component_el_tab_pane","eth_requestAccounts","eth_chainId","wallet_switchEthereumChain","wallet_addEthereumChain","personal_sign","eth_signTypedData_v4","eth_sendTransaction_transfer","eth_sendTransaction_approve","eth_sendTransaction_mint","wallet_watchAsset","ton_getAccount","ton_sendTransaction","sol_signMessage","sol_signTransaction","sol_signVersionedTransaction","sol_signAllTransactions","sol_signAllVersionedTransactions","sol_signAndSendTransaction","sol_signAndSendVersionedTransaction","_component_SuiPanel","onGenerateTransactionParams","sui_generateTransactionParams","_component_BTCPanel","btc_generateTransactionParams","_component_FractalPanel","fractal_generateTransactionParams","_component_TronTransactionPanel","tron_generateTransactionParams","onGenerateTransactionResult","tron_getTransactionResult","aptos_signMessage","aptos_signTransaction","aptos_signAndSubmitTransaction","cosmos_signArbitrary","cosmos_signAmino","cosmos_signDirect","wallet_testRpc","eth_sendTransaction_swap","move_signTransaction","move_signAndSubmitTransaction","_component_StarknetPanel","ref","starknet_generateTransactionParams","starknet_getTransactionResult","testBase64UrlSafe","xs","sm","handleRedirectSelect","canChainAddRedirectParam","redirectDeeplink","handleRedirectDeeplink","addRedirectParam","testTransaction","rows","testboc","$setup","sendBtnDisabled","sendTransaction","testTransactionStr","btc_getAccount","btc_signMessage","sendAmount","clearable","btc_send","sendSatoshisAmount","btc_sendBitcoin","psbtHex","btc_signPsbt_up","btc_signAndPushPsbt_up","nftId","receiver","btc_sendInscription","props","setup","$emit","signStr","alert","toAddress","satoshis","feeRate","autoFinalized","inscriptionId","__exports__","fractal_getAccount","fractal_signMessage","fractal_send","fractal_sendBitcoin","fractal_signPsbt_up","fractal_signAndPushPsbt_up","fractal_sendInscription","sui_getAccount","sui_signMessage","sui_signPersonalMessage","sui_signTransaction2","sui_signAndExecuteTransaction","sui_requestRpc","sui_signTransaction_pre_execution","sui_signAndExecuteTransaction_pre_execution","amount","recipientAddress","tx","SuiTransaction","coin","splitCoins","gas","transferObjects","showEffects","setDefaultChain","Buffer","currentSuiTransaction","currentSuiMethod","starknet_signMessage","starknet_sendTransaction","getCurrentAddress","signData","OKXStarknetProvider","rpcProvider","RpcProvider","nodeUrl","pk","Account","that","verifyMessage","isValid","uint256","bnToUint256","transferCalldata","CallData","compile","DAITokenAddress","invokeParams","calls","contract_address","entry_point","calldata","getPublicKey","tron_signMessage","tron_signMessageV2","tron_signTransaction","tron_signAndSendTransactionContract","tron_signAndSendTransactionApprove","OKXTronProvider","tronWeb","TronWeb","trx","signMessageV2","base58Address","verifyMessageV2","isOnlySign","transaction","transactionBuilder","sendTrx","getContract","contractAddress","contract","abi","entrys","parameter","triggerSmartContract","verifyADR36Amino","fromBech32","VConsole","allChains","chainsThatCanAddRedirectParam","optionChains","Set","selectedModals","selectedReturnStrategy","selectedDeepLink","selectedLanguage","selectedTheme","components","TronTransactionPanel","QrcodeVue","BTCPanel","FractalPanel","SuiPanel","StarknetPanel","testTopic","testPublicKey","testProofPayload","pendingDeepLink","logList","localPubKey","localSecKey","selectedChain","ProofPayloadVerify","showVerifyRow","has","selectedMethodData","isChecked","reload","add","starknetPanelTypedData","computed","selectedChains","initChains","newChains","updatedChains","tab","tabName","initCall","OKXUniversalConnectUI","init","actionsConfiguration","uiPreferences","OKXUniversalProvider","tonProvider","OKXTonProvider","onStatusChange","onModalStateChange","uri","isPC","testTonSdk","connected","syncAllAddresses","blockExplorerUrls","chainName","nativeCurrency","symbol","decimals","rpcUrls","fromAccountToAddress","requestEVMAccountWithSession","evmNameSpace","dataETH","dataPolygon","types","EIP712Domain","Person","Mail","primaryType","domain","verifyingContract","contents","maxPriorityFeePerGas","maxFeePerGas","gasPrice","gasLimit","image","tonUniversalLog","sendTransactionAlert","fetch","confirm","sendData","adapter","SuiAdapter","suiResult","sui_verifySignature","btcAdapter","OKXBtcProvider","btcResult","currentBtcMethod","currentBtcTransaction","signPsbt","hexToBase64","bs64Str","signPsbts","psbtHexs","sendInscription","signAndPushPsbt","sendBitcoin","fractalResult","currentFractalMethod","currentFractalTransaction","hexStr","buffer","blob","Blob","reader","FileReader","onload","base64Data","readAsDataURL","datatest","firstStr","showUrl","hasEip155","hasSolana","hasSui","hasBtc","hasAptos","hasTon","hasCosmos","hasTron","nameSpacesChains","optSpaceChains","solanaChains","hasStarknet","suiChains","btcChains","connectMethod","connectData","requireData","eip155","defaultChain","cosmos","tron","starknet","btc","optData","eip155Chains","tonChains","signMethods","getCurrentSelectedMethodData","openModalAndSign","openModal","connectAndSign","methodList","suiData","currentMethod","application","accountAddress","typedData","userAgentInfo","Agents","flag","isSafariOrChrome","pubkey","OKXSolanaProvider","result1","nacl","PublicKey","toBytes","OKXAptosProvider","config","AptosConfig","Network","Aptos","simple","sender","function","typeArguments","functionArguments","connection","Connection","getSolConnect","blockhash","getLatestBlockhash","versionedTransactionMessage","TransactionMessage","payerKey","recentBlockhash","instructions","SystemProgram","transfer","fromPubkey","toPubkey","lamports","compileToV0Message","VersionedTransaction","feePayer","rpc","OKXCosmosProvider","signArbitrary","cosmos_verifySignArbitrary","pub_key","signer","prefixStr","signatureBuffer","uint8Signature","pubKeyValueBuffer","pubKeyUint8Array","signDoc","signAmino","messageToBuffer","signDirect","uiOptions","eth_verifyMessage","ethAddress","originalMessage","recoveredAddress","ethers","list","verifyList","methodItem","requestItme","ethMessage","solanaMessage","verifySol","aptosMessage","aptosProvider","aptosPublicKey","fullMessage","cosmosProvider","cosmosAddress","cosmosMessage","tronMessage","StarknetRpcProvider","StarknetAccount","signatureResult","resultObj","pubKey","verifyPersonalMessageSignature","toSuiAddress","newTransaction","some","c","created","mounted","scriptTag","createElement","src","getElementsByTagName","appendChild","title","$refs","starknetPanelRef","toRaw","render","app","createApp","App","use","ElementPlus","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","loaded","__webpack_modules__","amdO","deferred","O","chunkIds","priority","notFulfilled","Infinity","j","r","n","getter","d","leafPrototypes","getProto","__proto__","t","mode","ns","def","current","getOwnPropertyNames","definition","g","globalThis","Function","prop","Symbol","toStringTag","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}