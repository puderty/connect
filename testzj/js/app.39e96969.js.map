{"version":3,"file":"js/app.39e96969.js","mappings":"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","sources":["webpack://okxconnectdemo/../packages/universal-provider/src/OKXBtcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXCosmosProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXUniversalProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/sign-client/client.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/ConnectMethodUtils.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/namespaces.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/events.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/values.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/aptos.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/btc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/cosmos.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/eip155.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcConnection.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/solana.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/sui.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/ton.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/misc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/providers.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/globals.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/misc.js","webpack://okxconnectdemo/./src/App.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue?1b44","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue?e4fb","webpack://okxconnectdemo/./src/App.vue?7ccd","webpack://okxconnectdemo/./src/main.js","webpack://okxconnectdemo/webpack/bootstrap","webpack://okxconnectdemo/webpack/runtime/amd options","webpack://okxconnectdemo/webpack/runtime/chunk loaded","webpack://okxconnectdemo/webpack/runtime/compat get default export","webpack://okxconnectdemo/webpack/runtime/define property getters","webpack://okxconnectdemo/webpack/runtime/global","webpack://okxconnectdemo/webpack/runtime/hasOwnProperty shorthand","webpack://okxconnectdemo/webpack/runtime/make namespace object","webpack://okxconnectdemo/webpack/runtime/node module decorator","webpack://okxconnectdemo/webpack/runtime/jsonp chunk loading","webpack://okxconnectdemo/webpack/startup"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXBtcProvider = void 0;\nconst _1 = require(\"./\");\nclass OKXBtcProvider {\n    constructor(generator) {\n        this.caip = [\n            \"btc:mainnet\",\n            \"fractal:mainnet\"\n        ];\n        this.provider = generator.getUniversalProvider();\n    }\n    getAddressForChainId(chainId) {\n        var _a, _b;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let accounts = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        });\n        if (accounts == undefined || accounts.length < 0) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `no connected account`);\n        }\n        let account = accounts[0];\n        const address = account.split(':')[2];\n        return address;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let extra = (_c = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[ns]) === null || _b === void 0 ? void 0 : _b.extra) === null || _c === void 0 ? void 0 : _c[chainId];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        return {\n            address: this.getAddressForChainId(chainId),\n            publicKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param signStr\n     * @param chainId\n     * @param type\n     * @returns\n     */\n    signMessage(chainId, signStr, type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (signStr === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signMessage parmas error`);\n            }\n            let params = {\n                signStr: signStr,\n                from: this.getAddressForChainId(chainId)\n            };\n            if (type) {\n                params.type = type;\n            }\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signMessage\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param toAddress\n     * @param satoshis\n     * @param options { feeRate: 0 }\n     * @returns\n     */\n    sendBitcoin(chainId, toAddress, satoshis, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            let params = {\n                from: this.getAddressForChainId(chainId),\n                to: toAddress,\n                value: (satoshis / 100000000).toString(),\n            };\n            if (options === null || options === void 0 ? void 0 : options.feeRate) {\n                params[\"satBytes\"] = options.feeRate.toString();\n            }\n            let result = yield this.send(chainId, params);\n            if (result !== undefined && ('txhash' in result)) {\n                // return txhash directly\n                return result.txhash;\n            }\n            // or return unexpected result\n            return result;\n        });\n    }\n    //  from - string：当前连接的钱包的 BTC 地址\n    //  to - string：接受 BTC 的地址\n    //  value - string：发送 BTC 的数量\n    //  satBytes - string： (可选) 自定义费率\n    //  memo - string： (可选) 指定 outputs OP_RETURN 内容 示例\n    //  memoPos - number： (可选) 指定 outputs OP_RETURN 输出位置，如果传了 memo 则必须传入 memoPos 指定位置，否则 memo 不生效\n    send(chainId, input) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (!this.checkParameters(input, 'to', 'value')) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send parmas  error`);\n            }\n            input[\"from\"] = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: 'btc_send',\n                    params: input\n                }, chainId);\n                if ('result' in ret) {\n                    return {\n                        txhash: ret.result\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param psbtHex string 要签名的 psbt 的十六进制字符串\n     * @param options object { autoFinalized: 0 }\n     */\n    signPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.signPsbts(chainId, [psbtHex], [options]).then(psbtResults => {\n                    let results = JSON.parse(psbtResults);\n                    resolve(results[0]);\n                }).catch(error => {\n                    reject(error);\n                });\n            });\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHexs Array\n     * @param options Array [{ autoFinalized: 0 }]\n     * @returns\n     */\n    signPsbts(chainId, psbtHexs, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHexs === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHexs: psbtHexs,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signPsbts\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHex string\n     * @param options object\n     * @returns\n     */\n    signAndPushPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHex === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHex: psbtHex,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signAndPushPsbt\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return JSON.parse(ret.result);\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param address string, receiver address\n     * @param inscriptionId string, 铭文 ID + 协议，没有传协议则默认是 Ordinals NFT ，目前仅支持 Ordinals 及 Atomicals 协议\n     * @param options object, { feeRate: number } custom rates\n     */\n    sendInscription(chainId, address, inscriptionId, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let extension = {\n                address: address,\n                inscriptionId: inscriptionId,\n                options: options\n            };\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (address === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method sendInscription params error`);\n            }\n            var feeRate = 0;\n            if (options && ('feeRate' in options)) {\n                feeRate = options.feeRate;\n            }\n            let coinId = '';\n            let from = this.getAddressForChainId(chainId);\n            var protocolId = 7; //ProtocolIdBRCNFT\n            if (inscriptionId !== 'undefined') {\n                let atomicSuffix = \"-Atomicals\";\n                let ordinalsSuffix = \"-Ordinals\";\n                if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(atomicSuffix.toLowerCase())) {\n                    protocolId = 8; //WXRCProtocolIdARCNFT\n                    inscriptionId = this.removeSuffix(inscriptionId, atomicSuffix);\n                }\n                else if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(ordinalsSuffix.toLowerCase())) {\n                    inscriptionId = this.removeSuffix(inscriptionId, ordinalsSuffix);\n                }\n            }\n            let params = {\n                scenario: 5,\n                feeRate: feeRate,\n                txType: \"20\",\n                to: address,\n                batchBean: [\n                    {\n                        coinAmount: \"1\",\n                        nftId: inscriptionId,\n                        protocolId: protocolId,\n                        coinId: coinId,\n                        inscriptionId: \"\",\n                        from: from\n                    }\n                ],\n                extension: extension\n            };\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_sendInscription\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    removeSuffix(str, suffix) {\n        if (str.endsWith(suffix)) {\n            return str.slice(0, str.length - suffix.length);\n        }\n        return str;\n    }\n    checkParameters(params, ...keys) {\n        var unexistKeys = [];\n        keys.forEach(key => {\n            if (!(`${key}` in params)) {\n                unexistKeys.push(key);\n            }\n        });\n        if (unexistKeys.length > 0) {\n            console.log('not find key: ', unexistKeys.join(\",\"));\n            return false;\n        }\n        return true;\n    }\n    /**\n     *\n     * @param chainId eg. btc:mainnet\n     * @returns eg. btc\n     */\n    checkChainId(chainId) {\n        if (this.caip.includes(chainId)) {\n            let [namespaceKey, _] = chainId.split(\":\");\n            return namespaceKey;\n        }\n        return undefined;\n    }\n}\nexports.OKXBtcProvider = OKXBtcProvider;\nexports.default = OKXBtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCosmosProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nconst uint8array_extras_1 = require(\"uint8array-extras\");\nclass OKXCosmosProvider {\n    constructor(provider) {\n        this.provider = provider.getUniversalProvider();\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyCosmos]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyCosmos]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n            console.log(\"aptos_publicKey\", publicKey);\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            algo: \"secp256k1\",\n            address: address,\n            bech32Address: address,\n            pubKey: (0, uint8array_extras_1.hexToUint8Array)(publicKey),\n        };\n    }\n    signArbitrary(chainId, signerAddress, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const base64Encoded = (0, uint8array_extras_1.stringToBase64)(data);\n            const signDoc = {\n                chain_id: \"\",\n                account_number: \"0\",\n                sequence: \"0\",\n                fee: {\n                    gas: \"0\",\n                    amount: []\n                },\n                msgs: [{\n                        \"type\": \"sign/MsgSignData\",\n                        \"value\": {\n                            \"signer\": signerAddress,\n                            \"data\": base64Encoded\n                        }\n                    }],\n                memo: \"\"\n            };\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signArbitrary\",\n                \"params\": {\n                    \"chain_id\": chainId.split(\":\")[1],\n                    \"data\": signDoc\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    if (typeof ret.result == \"string\") {\n                        return JSON.parse(ret.result);\n                    }\n                    else {\n                        return ret.result;\n                    }\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAmino(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (signDoc.msgs[0].type == \"sign/MsgSignData\") {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signArbitrary\",\n                    \"params\": {\n                        \"chain_id\": chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        return ret.result;\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    return error;\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                }\n            }\n            else {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signAmino\",\n                    \"params\": {\n                        \"chainId\": chainId.split(\":\")[1],\n                        \"sign_doc\": signDoc,\n                        \"signOptions\": signOptions\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        const resData = JSON.parse(ret.result);\n                        console.log(\"signdoc\", signDoc, resData.signDoc);\n                        signDoc.fee = resData.signDoc.fee;\n                        return { signed: signDoc, signature: resData.signature };\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                    return error;\n                }\n            }\n        });\n    }\n    signDirect(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const object = {\n                bodyBytes: this.bufferToHex(signDoc.bodyBytes),\n                authInfoBytes: this.bufferToHex(signDoc.authInfoBytes),\n                chainId: signDoc.chainId,\n                accountNumber: signDoc.accountNumber ? signDoc.accountNumber.toString() : null,\n                signOptions: signOptions ? signOptions : null\n            };\n            let data = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signDirect\",\n                \"params\": {\n                    \"chainId\": chainId.split(\":\")[1],\n                    \"sign_doc\": object,\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    const res = JSON.parse(ret.result);\n                    console.log(\"signdirect result\", res);\n                    signDoc.authInfoBytes = this.messageToBuffer(res.signDoc.authInfoBytes);\n                    return { signed: signDoc, signature: res.signature };\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    messageToBuffer(message) {\n        var buffer = Uint8Array.from([]);\n        try {\n            if (typeof message === \"string\") {\n                buffer = (0, uint8array_extras_1.hexToUint8Array)(message.replace(\"0x\", \"\"));\n            }\n            else {\n                buffer = (0, uint8array_extras_1.toUint8Array)(message);\n            }\n        }\n        catch (err) {\n            console.log(`messageToBuffer error: ${err}`);\n        }\n        return buffer;\n    }\n    bufferToHex(buf) {\n        return \"0x\" + (0, uint8array_extras_1.uint8ArrayToHex)(buf);\n    }\n}\nexports.OKXCosmosProvider = OKXCosmosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXUniversalProvider = void 0;\nconst utils_1 = require(\"./provider/utils\");\nconst eip155_1 = require(\"./provider/providers/eip155\");\nconst sui_1 = require(\"./provider/providers/sui\");\nconst constants_1 = require(\"./provider/constants\");\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nconst client_1 = require(\"./packages/sign-client/client\");\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"./packages/utils/namespaces\");\nconst solana_1 = __importDefault(require(\"./provider/providers/solana\"));\nconst btc_1 = __importDefault(require(\"./provider/providers/btc\"));\nconst aptos_1 = __importDefault(require(\"./provider/providers/aptos\"));\nconst ton_1 = __importDefault(require(\"./provider/providers/ton\"));\nconst cosmos_1 = __importDefault(require(\"./provider/providers/cosmos\"));\nclass OKXUniversalProvider {\n    static init(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const provider = new OKXUniversalProvider(opts);\n            yield provider.initialize();\n            return provider;\n        });\n    }\n    getUniversalProvider() {\n        return this;\n    }\n    constructor(opts) {\n        this.rpcProviders = {};\n        this.events = new eventemitter3_1.default();\n        this.providerOpts = opts;\n    }\n    request(args, chain) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.connected()) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return yield this.getProvider(namespace).request(requestParam);\n        });\n    }\n    buildRequestParamFromRequest(args, chain) {\n        (0, core_1.logDebug)(\"UniversalProvider request args >>>: \", chain, JSON.stringify(args));\n        let [namespace, chainId] = this.validateChain(chain);\n        if (!this.session) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Please call connect() before request()\");\n        }\n        let keyArr = Object.keys(this.session.namespaces);\n        if (!chain && keyArr && keyArr.length > 1) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Multiple chains have been linked, the request method requires chain`);\n        }\n        (0, core_1.logDebug)(\"UniversalProvider request >>args>>>: \", args);\n        if (namespace == \"aptos\" && chainId == \"mainnet\") {\n            namespace = \"aptos\";\n            chainId = \"637\";\n        }\n        if (namespace == \"movement\" && chainId == \"testnet\") {\n            namespace = \"aptos\";\n            chainId = \"70000060\";\n        }\n        const requestParam = Object.assign(Object.assign({}, args), { chainId: `${namespace}:${chainId}` });\n        return { namespace, requestParam };\n    }\n    enable() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.client) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (!this.session) {\n                if (this.connectOpts) {\n                    yield this.connect(this.connectOpts);\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n                }\n            }\n            const accounts = yield this.requestAccounts();\n            return accounts;\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.session) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                let called = false;\n                const onRequestSent = () => __awaiter(this, void 0, void 0, function* () {\n                    if (!called) {\n                        called = true;\n                        yield this.disconnectAndEmit();\n                        yield this.cleanup();\n                        resolve();\n                        (0, core_1.logDebug)(\"UniversalProvider disconnect Disconnected\");\n                    }\n                });\n                try {\n                    yield this.client.disconnect();\n                    yield onRequestSent();\n                }\n                catch (e) {\n                    yield onRequestSent();\n                }\n            }));\n        });\n    }\n    disconnectAndEmit() {\n        var _a, _b;\n        this.client.engine.connectionManager.disconnect();\n        this.events.emit(\"disconnect\", { topic: (_a = this.session) === null || _a === void 0 ? void 0 : _a.topic });\n        this.events.emit(\"session_delete\", { topic: (_b = this.session) === null || _b === void 0 ? void 0 : _b.topic });\n    }\n    aptosChainNameToGeneralId(chainId) {\n        if (chainId == \"aptos:mainnet\") {\n            return \"aptos:637\";\n        }\n        else if (chainId == \"movement:testnet\") {\n            return \"aptos:70000060\";\n        }\n        else {\n            return chainId;\n        }\n    }\n    replaceAptos(opts) {\n        var _a, _b;\n        let aptosNameSpace = (_a = opts.namespaces) === null || _a === void 0 ? void 0 : _a[\"aptos\"];\n        if (aptosNameSpace != undefined) {\n            let realNS = this.replaceAptosInner(aptosNameSpace);\n            if (opts.namespaces != undefined && \"aptos\" in opts.namespaces && realNS != undefined) {\n                opts.namespaces.aptos = realNS;\n            }\n        }\n        let optionAptosNameSpace = (_b = opts.optionalNamespaces) === null || _b === void 0 ? void 0 : _b[\"aptos\"];\n        if (optionAptosNameSpace != undefined) {\n            let realOptionNS = this.replaceAptosInner(optionAptosNameSpace);\n            if (opts.optionalNamespaces != undefined && \"aptos\" in opts.optionalNamespaces && realOptionNS != undefined) {\n                opts.optionalNamespaces.aptos = realOptionNS;\n            }\n        }\n        return opts;\n    }\n    replaceAptosInner(aptosNameSpace) {\n        var _a;\n        if (aptosNameSpace != undefined) {\n            aptosNameSpace.chains = (_a = aptosNameSpace.chains) === null || _a === void 0 ? void 0 : _a.map(chainId => {\n                return this.aptosChainNameToGeneralId(chainId);\n            });\n            if (aptosNameSpace.defaultChain != undefined) {\n                aptosNameSpace.defaultChain = this.aptosChainNameToGeneralId(aptosNameSpace.defaultChain);\n            }\n        }\n        return aptosNameSpace;\n    }\n    replaceAptosGeneralIdWithNetName(chainId) {\n        if (chainId.includes(\"aptos:637\")) {\n            chainId = chainId.replace(\"aptos:637\", \"aptos:mainnet\");\n        }\n        else if (chainId.includes(\"aptos:70000060\")) {\n            chainId = chainId.replace(\"aptos:70000060\", \"movement:testnet\");\n        }\n        return chainId;\n    }\n    replaceSessionAptos(session) {\n        var _a;\n        let namespaces = (_a = session === null || session === void 0 ? void 0 : session.namespaces) === null || _a === void 0 ? void 0 : _a[\"aptos\"];\n        if (namespaces != undefined && namespaces.chains != undefined) {\n            namespaces.chains = namespaces.chains.map(chain => {\n                return this.replaceAptosGeneralIdWithNetName(chain);\n            });\n            namespaces.accounts = namespaces.accounts.map((account) => {\n                return this.replaceAptosGeneralIdWithNetName(account);\n            });\n            let extra = {};\n            Object.keys(namespaces.extra || {}).forEach((key, index) => {\n                let newKey = this.replaceAptosGeneralIdWithNetName(key);\n                extra[this.replaceAptosGeneralIdWithNetName(key)] = Object.values((session === null || session === void 0 ? void 0 : session.namespaces[\"aptos\"].extra) || {})[index];\n            });\n            namespaces.extra = extra;\n        }\n        (0, core_1.logDebug)(\"replaceSessionAptos\", session);\n    }\n    connected() {\n        let disconnectInner = () => {\n            try {\n                this.cleanup();\n                this.client.engine.connectionManager.disconnect();\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"Error during disconnect:\", e);\n            }\n        };\n        try {\n            if (!this.session)\n                return false;\n            if (!this.client.engine.connectionManager.getCurrentConnectionReady()) {\n                disconnectInner();\n                return false;\n            }\n            return true;\n        }\n        catch (e) {\n            disconnectInner();\n            return false;\n        }\n    }\n    connect(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.client) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (this.connected()) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.ALREADY_CONNECTED_ERROR);\n            }\n            opts = this.replaceAptos(opts);\n            (0, core_1.logDebug)(`OKXUniversalProvider connect >>>>`, JSON.stringify(opts));\n            if (opts.sessionConfig === undefined) {\n                opts.sessionConfig = {};\n            }\n            if (opts.sessionConfig.openUniversalUrl === undefined) {\n                opts.sessionConfig.openUniversalUrl = (0, core_1.isMobileUserAgent)();\n            }\n            this.setNamespaces(opts);\n            try {\n                (0, core_1.logDebug)(`UniversalProvider connect opts.stringify ====> ${JSON.stringify(opts)}`);\n                let session = yield this.client.connect(opts);\n                this.replaceSessionAptos(session);\n                (0, core_1.logDebug)(`UniversalProvider connect success ====> ${JSON.stringify(session)}`);\n                if (session) {\n                    this.session = session;\n                    this.onConnect();\n                    return session;\n                }\n                return undefined;\n            }\n            catch (error) {\n                (0, core_1.logDebug)(`UniversalProvider connect error ====> `, JSON.stringify(error));\n                throw error;\n            }\n        });\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    setDefaultChain(chain, rpcUrl) {\n        // chain = this.aptosChainNameToGeneralId(chain)\n        try {\n            // ignore without active session\n            if (!this.connected())\n                return;\n            const [namespace, chainId] = this.validateChain(chain);\n            const provider = this.getProvider(namespace);\n            provider.setDefaultChain(chainId, rpcUrl);\n        }\n        catch (error) {\n            // ignore the error if the fx is used prematurely before namespaces are set\n            if (!/Please call connect/.test(error.message))\n                throw error;\n        }\n    }\n    checkStorage() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let sessionInfoStr = yield this.getFromStore(\"connectSession\");\n            (0, core_1.logDebug)(sessionInfoStr);\n            if (sessionInfoStr) {\n                let sessionInfo = sessionInfoStr;\n                this.session = sessionInfo;\n                this.client.session = this.session;\n                this.sessionConfig = sessionInfo.sessionConfig;\n                this.client.sessionConfig = this.sessionConfig;\n                (0, core_1.logDebug)('[evm u-provider] do reconnection', this.session);\n                yield this.client.restoreconnect(sessionInfo);\n                this.createProviders();\n                setTimeout(() => {\n                    this.events.emit(\"reconnect\", { session: this.session });\n                }, 100);\n                this.registerEventListeners();\n            }\n        });\n    }\n    initialize() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const data = Object.assign({ url: window.location.hostname, origin: window.location.origin }, this.providerOpts.dappMetaData);\n            (0, utils_1.setGlobal)(\"events\", this.events);\n            this.client = new client_1.SignClient(data);\n            (0, utils_1.setGlobal)(\"client\", this.client);\n            yield this.checkStorage();\n        });\n    }\n    createProviders() {\n        if (!this.client) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n        }\n        if (!this.connected()) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Session not initialized. Please call connect() before enable()\");\n        }\n        const providersToCreate = [\n            ...new Set(Object.keys(this.session.namespaces).map((namespace) => (0, namespaces_1.parseNamespaceKey)(namespace))),\n        ];\n        providersToCreate.forEach((namespace) => {\n            if (!this.session)\n                return;\n            const namespacesValue = this.session.namespaces;\n            const currentNameSpace = namespacesValue[namespace];\n            (0, core_1.logDebug)(\"init eip155 >> \", currentNameSpace);\n            switch (namespace) {\n                case \"eip155\":\n                    const opts = {\n                        namespace: currentNameSpace\n                    };\n                    this.rpcProviders[namespace] = new eip155_1.Eip155Provider(opts);\n                    break;\n                case \"solana\":\n                    const opts1 = {\n                        namespace: currentNameSpace\n                    };\n                    let solanaProvider = new solana_1.default(opts1, \"solana\");\n                    this.rpcProviders[namespace] = solanaProvider;\n                    let sonicProvider = new solana_1.default(opts1, \"sonic\");\n                    this.rpcProviders['sonic'] = sonicProvider;\n                    let svmProvider = new solana_1.default(opts1, \"svm\");\n                    this.rpcProviders['svm'] = svmProvider;\n                    // this.rpcProviders[namespace] = new SolanaProvider(opts1, () => { return this.session; });\n                    break;\n                case \"ton\":\n                    const optsTon = {\n                        namespace: currentNameSpace\n                    };\n                    let tonProvider = new ton_1.default(optsTon);\n                    this.rpcProviders[namespace] = tonProvider;\n                    break;\n                case \"sui\":\n                    const optsSui = {\n                        namespace: currentNameSpace\n                    };\n                    let suiProvider = new sui_1.SuiProvider(optsSui);\n                    suiProvider.name = \"sui\";\n                    this.rpcProviders[namespace] = suiProvider;\n                    break;\n                case \"btc\":\n                    const optsBtc = {\n                        namespace: currentNameSpace\n                    };\n                    let btcProvider = new btc_1.default(optsBtc, \"btc\");\n                    this.rpcProviders[\"btc\"] = btcProvider;\n                    let fbProvider = new btc_1.default(optsBtc, \"fractal\");\n                    this.rpcProviders[\"fractal\"] = fbProvider;\n                    break;\n                case \"aptos\":\n                    let aptosProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"aptos\");\n                    this.rpcProviders[namespace] = aptosProvider;\n                    let moveProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"movement\");\n                    this.rpcProviders[\"movement\"] = moveProvider;\n                    break;\n                case \"cosmos\":\n                    let cosmosProvider = new cosmos_1.default({\n                        namespace: currentNameSpace\n                    });\n                    this.rpcProviders[namespace] = cosmosProvider;\n                    break;\n            }\n        });\n    }\n    registerEventListeners() {\n        if (typeof this.client === \"undefined\") {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client is not initialized\");\n        }\n        this.client.engine.addDisconnectListener(() => {\n            this.disconnectAndEmit();\n            this.cleanup();\n        });\n        this.on(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, (caip2ChainId) => {\n            this.onChainChanged(caip2ChainId);\n        });\n        this.on(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, (nameSpaces) => {\n            if (nameSpaces) {\n                const nameSpacekey = Object.keys(nameSpaces)[0];\n                if (this.session) {\n                    this.session.namespaces[nameSpacekey] = nameSpaces[nameSpacekey];\n                    if (this.session) {\n                        this.persist(\"connectSession\", this.session);\n                        this.events.emit(\"session_update\", this.session);\n                    }\n                    (0, core_1.logDebug)(\"PROVIDER_EVENTS.UPDATE_NAMESPACES this.session... ->>>\", JSON.stringify(this.session));\n                }\n            }\n        });\n    }\n    getProvider(namespace) {\n        (0, core_1.logDebug)('current get providers', this.rpcProviders);\n        (0, core_1.logDebug)('query namespace: ', namespace);\n        return this.rpcProviders[namespace];\n    }\n    setNamespaces(params) {\n        this.connectOpts = params;\n        const { namespaces, sessionConfig } = params;\n        const data = {\n            origin: window.location.origin,\n            url: window.location.hostname,\n            name: this.providerOpts.dappMetaData.name,\n            icon: this.providerOpts.dappMetaData.icon,\n        };\n        this.sessionConfig = {\n            dappInfo: data,\n            openUniversalUrl: sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.openUniversalUrl,\n            redirect: sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect,\n        };\n        (0, core_1.logDebug)(\"setNamespaces sessionConfig>>>\", this.sessionConfig);\n        this.client.sessionConfig = this.sessionConfig;\n        this.persist(\"sessionConfig\", sessionConfig);\n    }\n    validateChain(chain) {\n        var _a;\n        let [namespace, chainId] = (chain === null || chain === void 0 ? void 0 : chain.split(\":\")) || [\"\", \"\"];\n        if (!this.session || !this.session.namespaces || !Object.keys(this.session.namespaces).length) {\n            (0, core_1.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        if (namespace) {\n            if (!this.isChainNamespaceInSession(namespace)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace '${namespace}' is not configured. Please call connect() first with namespace config.`);\n            }\n            if (chainId && chain) {\n                (0, core_1.logDebug)('this.session.namespaces -->> ', namespace, JSON.stringify(this.session.namespaces));\n                const chainsArr = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.chains;\n                (0, core_1.logDebug)('get chainsArr & chain', JSON.stringify(chainsArr), chain);\n                if (chainsArr && !chainsArr.includes(chain)) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace not include the chain '${chain}'`);\n                }\n            }\n        }\n        if (namespace && chainId) {\n            (0, core_1.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        let defaultNamespace = (0, namespaces_1.parseNamespaceKey)(Object.keys(this.session.namespaces)[0]);\n        const defaultChain = this.rpcProviders[defaultNamespace].getDefaultChain();\n        (0, core_1.logDebug)('get default chain:', defaultChain);\n        return [defaultNamespace, defaultChain];\n    }\n    isChainNamespaceInSession(namespaceStr) {\n        var _a, _b;\n        if (Object.keys(((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces) || {})\n            .map((key) => (0, namespaces_1.parseNamespaceKey)(key))\n            .includes(namespaceStr)) {\n            return true;\n        }\n        let isChainNamespaceInSession = false;\n        Object.values(((_b = this.session) === null || _b === void 0 ? void 0 : _b.namespaces) || {})\n            .forEach(namespace => {\n            namespace.chains.forEach(chain => {\n                if (chain.split(\":\")[0] == namespaceStr) {\n                    isChainNamespaceInSession = true;\n                }\n            });\n        });\n        return isChainNamespaceInSession;\n    }\n    requestAccountsWithNamespace(namespace) {\n        return this.getProvider(namespace).requestAccounts();\n    }\n    requestDefaultChainWithNamespace(namespace) {\n        return this.getProvider(namespace).getDefaultChain();\n    }\n    requestAccounts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const [namespace] = this.validateChain();\n            return yield this.getProvider(namespace).requestAccounts();\n        });\n    }\n    onChainChanged(caip2Chain) {\n        var _a;\n        if (!((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces))\n            return;\n        const [namespace, chainId] = this.validateChain(caip2Chain);\n        if (!chainId)\n            return;\n        if (this.session.namespaces[namespace]) {\n            this.session.namespaces[namespace].defaultChain = chainId;\n            this.persist(\"connectSession\", this.session);\n        }\n        this.events.emit(\"chainChanged\", chainId);\n    }\n    onConnect() {\n        this.createProviders();\n        if (this.session) {\n            this.persist(\"connectSession\", this.session);\n        }\n        this.events.emit(\"connect\", { session: this.session });\n        this.registerEventListeners();\n    }\n    cleanup() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.session = undefined;\n            this.sessionProperties = undefined;\n            this.persist(\"optionalNamespaces\", undefined);\n            this.persist(\"sessionProperties\", undefined);\n            this.persist(\"connectSession\", undefined);\n        });\n    }\n    persist(key, data) {\n        (0, core_1.logDebug)('[evm u-provider] persisit data', key, data);\n        return this.client.engine.connectionManager.saveSessionContent(key, data);\n    }\n    getFromStore(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.client.engine.connectionManager.getSessionContent(key);\n        });\n    }\n    showRequestModal(args, chain) {\n        try {\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return this.getProvider(namespace).showRequestModal(requestParam);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n}\nexports.OKXUniversalProvider = OKXUniversalProvider;\nexports.default = OKXUniversalProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXConnectError = exports.OKX_CONNECT_ERROR_CODES = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.OKXCosmosProvider = exports.OKXBtcProvider = exports.OKXUniversalProvider = void 0;\n__exportStar(require(\"./provider/types\"), exports);\nvar OKXUniversalProvider_1 = require(\"./OKXUniversalProvider\");\nObject.defineProperty(exports, \"OKXUniversalProvider\", { enumerable: true, get: function () { return OKXUniversalProvider_1.OKXUniversalProvider; } });\nvar OKXBtcProvider_1 = require(\"./OKXBtcProvider\");\nObject.defineProperty(exports, \"OKXBtcProvider\", { enumerable: true, get: function () { return OKXBtcProvider_1.OKXBtcProvider; } });\nvar OKXCosmosProvider_1 = require(\"./OKXCosmosProvider\");\nObject.defineProperty(exports, \"OKXCosmosProvider\", { enumerable: true, get: function () { return OKXCosmosProvider_1.OKXCosmosProvider; } });\nvar core_1 = require(\"@okxconnect/core\");\nObject.defineProperty(exports, \"NameSpaceKeySui\", { enumerable: true, get: function () { return core_1.NameSpaceKeySui; } });\nObject.defineProperty(exports, \"NameSpaceKeyBtc\", { enumerable: true, get: function () { return core_1.NameSpaceKeyBtc; } });\nObject.defineProperty(exports, \"OKX_CONNECT_ERROR_CODES\", { enumerable: true, get: function () { return core_1.OKX_CONNECT_ERROR_CODES; } });\nObject.defineProperty(exports, \"OKXConnectError\", { enumerable: true, get: function () { return core_1.OKXConnectError; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignClient = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"../utils/namespaces\");\nconst utils_1 = require(\"../../provider/utils\");\nconst ConnectMethodUtils_1 = require(\"../utils/ConnectMethodUtils\");\nclass SignClient extends core_1.ISignClient {\n    constructor(metaData) {\n        super(metaData);\n        this.engine = new core_1.Engine(new core_1.ConnectionManager());\n        // ---------- Engine ----------------------------------------------- //\n        this.connect = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    var connectRequest = [];\n                    (0, core_1.logDebug)(`client connect params >>>`, JSON.stringify(params));\n                    var requestAccountItem = {\n                        name: \"requestAccounts\",\n                        requiredNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.namespaces),\n                        optionalNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.optionalNamespaces),\n                    };\n                    if (params.requestMethods) {\n                        requestAccountItem.connectRequestMethods = yield (0, ConnectMethodUtils_1.connectMethodsToConnectWalletMethods)(params.requestMethods, requestAccountItem.requiredNamespaces);\n                    }\n                    connectRequest.push(requestAccountItem);\n                    (0, core_1.logDebug)(`client connect connectRequest >>>`, JSON.stringify(connectRequest));\n                    this.engine.universalConnect(connectRequest, Object.assign({ dappInfo: this.metadata }, params.sessionConfig), (info) => {\n                        if (info && info.connectRequest) {\n                            var encodeParams = (0, core_1.encodeConnectParams)(info.connectRequest);\n                            (0, core_1.logDebug)(`universalConect encodeParams:`, encodeParams);\n                            (0, core_1.logDebug)(`universalConect url:`, (0, core_1.getUniversalLink)((0, core_1.getAppWalletDeepLink)(encodeParams)));\n                            this.events.emit(\"display_uri\", (0, core_1.getUniversalLink)((0, core_1.getAppWalletDeepLink)(encodeParams)));\n                            (0, core_1.logDebug)(`universalConect EngineConnectInfo  ${JSON.stringify(info)}`);\n                            this.events.emit(\"okx_engine_connect_params\", info);\n                        }\n                    }).then((session) => {\n                        (0, namespaces_1.fillParamsToSession)(session, params.namespaces, params.optionalNamespaces, this.sessionConfig);\n                        (0, core_1.logDebug)(`signClient: connect: session ${JSON.stringify(session)}`);\n                        resolve(session);\n                    }).catch((e) => {\n                        (0, core_1.logDebug)(`signClient: connect: catch ${JSON.stringify(e)}`);\n                        this.events.emit(\"connect_error\", e);\n                        reject(e);\n                    });\n                }\n                catch (error) {\n                    (0, core_1.logDebug)(`signClient: connect:  ${JSON.stringify(error)}`);\n                    reject(error);\n                }\n            }));\n        });\n        this.restoreconnect = (sessionConfig) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.restoreconnect(sessionConfig, (session) => {\n                    resolve(session);\n                });\n            });\n        });\n        this.reject = (params) => __awaiter(this, void 0, void 0, function* () {\n            //   try {\n            //     return await this.engine.reject(params);\n            //   } catch (error: any) {\n            //     this.logger.error(error.message);\n            //     throw error;\n            //   }\n        });\n        //\n        // public update: ISignClient[\"update\"] = async (params) => {\n        //   return\n        // //   try {\n        // //     return await this.engine.update(params);\n        // //   } catch (error: any) {\n        // //     this.logger.error(error.message);\n        // //     throw error;\n        // //   }\n        // };\n        this.request = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                (0, core_1.logDebug)(\"clint request --params>>>> >\", (_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl, JSON.stringify(params));\n                try {\n                    // this.sessionConfig\n                    if (((_b = this.sessionConfig) === null || _b === void 0 ? void 0 : _b.openUniversalUrl) && (0, core_1.isIos)()) {\n                        this.openOKXWallet();\n                    }\n                    yield this.engine.send(params, {\n                        resolve: (response) => {\n                            delete response.requestId;\n                            (0, core_1.logDebug)(\"clint request --response >\", JSON.stringify(response));\n                            if (('error' in response) && response.error) {\n                                let error = response.error;\n                                reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                            }\n                            else {\n                                resolve(response);\n                            }\n                        },\n                        onAck: () => {\n                            var _a;\n                            if (!(0, core_1.isIos)() && ((_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl)) {\n                                this.openOKXWallet();\n                            }\n                        }\n                    });\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }));\n        });\n        // public emit: ISignClient[\"emit\"] = async (params) => {\n        //     try {\n        //         // return await this.engine.emit(params);\n        //     } catch (error: any) {\n        //         throw error;\n        //     }\n        // };\n        this.disconnect = () => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"disconnect\"\n                }, {\n                    onAck: () => {\n                        resolve();\n                    }\n                }).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n        this.events = (0, utils_1.getGlobal)(\"events\");\n        this.metadata = metaData;\n    }\n    openOKXWallet() {\n        // if (this.openUniversalUrl){\n        (0, core_1.logDebug)('bridge-provider ==>> connect_5');\n        (0, core_1.openOKXDeeplinkWithFallback)(core_1.standardDeeplink);\n        // }\n    }\n}\nexports.SignClient = SignClient;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.connectSupportMethods = void 0;\nexports.connectMethodsResponseUpdate = connectMethodsResponseUpdate;\nexports.connectMethodsToConnectWalletMethods = connectMethodsToConnectWalletMethods;\nconst core_1 = require(\"@okxconnect/core\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst uint8array_extras_1 = require(\"uint8array-extras\");\nfunction isArray(value) {\n    return typeof value === \"object\" && value !== null && Array.isArray(value);\n}\nfunction isRecord(value) {\n    return typeof value === \"object\" && value !== null && !Array.isArray(value);\n}\nexports.connectSupportMethods = Object.freeze([\n    \"wallet_addEthereumChain\",\n    \"personal_sign\",\n    \"solana_signMessage\",\n    \"sui_signMessage\",\n    \"sui_signPersonalMessage\",\n    \"btc_signMessage\",\n    \"aptos_signMessage\",\n    \"cosmos_signArbganitrary\",\n]);\nfunction connectMethodsResponseUpdate(session) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (session.connectMethodsReply) {\n            (0, core_1.logDebug)(\"connectMethodsResponseUpdate connectMethodsReply:\", JSON.stringify(session.connectMethodsReply));\n            for (const methodItem of session.connectMethodsReply) {\n                if (methodItem.method === \"aptos_signMessage\") {\n                    if (methodItem.chainId === \"aptos:637\") {\n                        methodItem.chainId = \"aptos:mainnet\";\n                    }\n                    else if (methodItem.chainId === \"aptos:70000060\") {\n                        methodItem.chainId = \"movement:testnet\";\n                    }\n                }\n            }\n        }\n    });\n}\nfunction connectMethodsToConnectWalletMethods(params, requireNameSpace) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods requestMethods:\", JSON.stringify(params));\n            const result = [];\n            //TODO  后面需要打开限制\n            // if (params && params.length>1){\n            //     throw new OKXConnectError(\n            //         OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR,\n            //         `connect requestMethods only support one data`\n            //     );\n            // }\n            if (!requireNameSpace && params && params.length > 0) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error , RequestMethods cannot be added when the NameSpace is empty`);\n            }\n            // check chianId\n            for (const methodItem of params) {\n                if (methodItem.method === \"aptos_signMessage\") { //update chainId\n                    if (methodItem.chainId === \"aptos:mainnet\") {\n                        methodItem.chainId = \"aptos:637\";\n                    }\n                    else if (methodItem.chainId === \"movement:testnet\") {\n                        methodItem.chainId = \"aptos:70000060\";\n                    }\n                }\n                // check chianId\n                if (methodItem.method === \"wallet_addEthereumChain\") {\n                    var includeEip155 = requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.namespace.includes(\"eip155\"));\n                    if (!includeEip155) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', the EVM chain needs to be included in the NameSpace`);\n                    }\n                }\n                else {\n                    const includeChain = !!(requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.chains.some(chain => chain.includes(`${methodItem.chainId}`))));\n                    if (!includeChain) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', NameSpace must contain '${methodItem.chainId}'`);\n                    }\n                }\n            }\n            for (const item of params) {\n                //TODO  后面需要打开限制\n                // if (!connectSupportMethods.includes(item.method)){\n                //     throw new OKXConnectError(\n                //         OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR,\n                //             `connect requestMethods not support method, method: '${item.method}'`\n                //     );\n                // }\n                if (item.method === \"wallet_addEthereumChain\") {\n                    if (Array.isArray(item.params)) {\n                        const paramsArr = item.params;\n                        if (paramsArr && paramsArr.length === 1) {\n                            const firstParam = paramsArr[0];\n                            if (isRecord(firstParam)) {\n                                item.params = firstParam;\n                            }\n                        }\n                        else if (paramsArr && paramsArr.length > 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params only support one data, method: '${item.method}'`);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is nil, method: '${item.method}'`);\n                        }\n                    }\n                }\n                else if (item.method === \"personal_sign\") {\n                    if (isArray(item.params)) {\n                        if (item.params && item.params.length !== 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params error,  method: '${item.method}' `);\n                        }\n                        let firstObj = item.params[0];\n                        if (firstObj && typeof firstObj === 'string') {\n                            item.params = {\n                                message: firstObj\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                }\n                else if (item.method === \"sui_signMessage\" || item.method === \"sui_signPersonalMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message) {\n                            (0, core_1.logDebug)(\"sui_signMessage item.params.message :\", item.params.message);\n                            let message = JSON.parse(JSON.stringify(item.params.message));\n                            let convertedArray = Object.values(message);\n                            let uint8Array = new Uint8Array(convertedArray);\n                            let decoder = new TextDecoder(\"utf8\");\n                            let b64encoded = btoa(decoder.decode(uint8Array));\n                            item.params.message = atob(b64encoded);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"solana_signMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            item.params[\"bs58Message\"] = bs58_1.default.encode((0, uint8array_extras_1.stringToUint8Array)(item.params.message));\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"aptos_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (item.chainId && (item.chainId === \"aptos:637\" || item.chainId === \"aptos:70000060\")) {\n                            var aptosParams = item.params;\n                            var currentURL = window.location.protocol + \"//\" + window.location.hostname;\n                            let signChainId = 1;\n                            if (item.chainId === \"aptos:637\") {\n                            }\n                            else if (item.chainId === \"aptos:70000060\") {\n                                signChainId = 2;\n                            }\n                            item.params = {\n                                data: aptosParams,\n                                applicationUrl: currentURL,\n                                prefix: \"APTOS\",\n                                aptosChainId: signChainId\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"cosmos_signArbitrary\") {\n                    if (isRecord(item.params)) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            const base64Encoded = (0, uint8array_extras_1.stringToBase64)(item.params.message);\n                            let cosmosChain = item.chainId.split(\":\")[1];\n                            if (cosmosChain) {\n                                item.params = {\n                                    chain_id: cosmosChain,\n                                    data: {\n                                        chain_id: \"\",\n                                        account_number: \"0\",\n                                        sequence: \"0\",\n                                        fee: {\n                                            gas: \"0\",\n                                            amount: []\n                                        },\n                                        msgs: [{\n                                                \"type\": \"sign/MsgSignData\",\n                                                \"value\": {\n                                                    \"signer\": \"\", //address\n                                                    \"data\": base64Encoded\n                                                }\n                                            }],\n                                        memo: \"\"\n                                    }\n                                };\n                            }\n                            else {\n                                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                            }\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params message is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods item:\", JSON.stringify(item));\n                result.push(item);\n            }\n            return result;\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAccountsChains = getAccountsChains;\nexports.nameSpaceToConnectWalletNameSpace = nameSpaceToConnectWalletNameSpace;\nexports.fillParamsToSession = fillParamsToSession;\nexports.isCaipNamespace = isCaipNamespace;\nexports.parseNamespaceKey = parseNamespaceKey;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getAccountsChains(accounts) {\n    const chains = [];\n    accounts.forEach((account) => {\n        const [chain, chainId] = account.split(\":\");\n        chains.push(`${chain}:${chainId}`);\n    });\n    return chains;\n}\nfunction nameSpaceToConnectWalletNameSpace(namespaces) {\n    var result = [];\n    if (!namespaces) {\n        return result;\n    }\n    Object.keys(namespaces).forEach((key) => {\n        if (key === core_1.NameSpaceKeyEip155 || key === core_1.NameSpaceKeySOL || key === core_1.NameSpaceKeySui || key === core_1.NameSpaceKeyAptos\n            || key == core_1.NameSpaceKeyBtc || key === core_1.NameSpaceKeyTON || key === core_1.NameSpaceKeyCosmos) {\n            if (namespaces[key].chains) {\n                result.push({\n                    namespace: key,\n                    chains: namespaces[key].chains,\n                    params: namespaces[key].params\n                });\n            }\n        }\n    });\n    return result;\n}\nfunction fillParamsToSession(session, namespaces, optionalNamespaces, sessionConfig) {\n    // Helper function to merge rpcMaps\n    const mergeRpcMap = (targetRpcMap, sourceRpcMap) => {\n        Object.assign(targetRpcMap, sourceRpcMap);\n    };\n    // Merge function for namespaces\n    const mergeNamespaces = (target, source) => {\n        for (const key in source) {\n            if (source.hasOwnProperty(key) && source[key].rpcMap) {\n                if (source[key].rpcMap) {\n                    if (!target[key].rpcMap) {\n                        target[key].rpcMap = {};\n                    }\n                    // 合并 rpcMap\n                    mergeRpcMap(target[key].rpcMap, source[key].rpcMap);\n                }\n                if (source[key].defaultChain && target[key].defaultChain === undefined) {\n                    //defaultChain need in session nameSpace\n                    if (target[key].chains.some(chain => chain.split(\":\")[1] === source[key].defaultChain)) {\n                        target[key].defaultChain = source[key].defaultChain;\n                    }\n                }\n            }\n        }\n    };\n    // 合并 namespaces\n    if (namespaces) {\n        mergeNamespaces(session.namespaces, namespaces);\n    }\n    // 合并 optionalNamespaces\n    if (optionalNamespaces) {\n        mergeNamespaces(session.namespaces, optionalNamespaces);\n    }\n    session.sessionConfig = sessionConfig;\n}\n/**\n * util designed for Wallets that builds namespaces structure by provided supported chains, methods, events & accounts.\n * It takes required & optional namespaces provided in the session proposal\n * along with the supported chains/methods/events/accounts by the wallet and returns a structured namespaces object\n * @param {BuildApprovedNamespacesParams} params\n * @returns {SessionTypes.Namespaces}\n */\n// export function buildApprovedNamespaces(\n//   params: BuildApprovedNamespacesParams,\n// ): SessionTypes.Namespaces {\n//   const {\n//     proposal: { requiredNamespaces, optionalNamespaces = {} },\n//     supportedNamespaces,\n//   } = params;\n//   const normalizedRequired = normalizeNamespaces(requiredNamespaces);\n//   const normalizedOptional = normalizeNamespaces(optionalNamespaces);\n//\n//   // build approved namespaces\n//   const namespaces = {};\n//   Object.keys(supportedNamespaces).forEach((namespace) => {\n//     const supportedChains = supportedNamespaces[namespace].chains;\n//     const supportedMethods = supportedNamespaces[namespace].methods;\n//     const supportedEvents = supportedNamespaces[namespace].events;\n//     const supportedAccounts = supportedNamespaces[namespace].accounts;\n//\n//     supportedChains.forEach((chain) => {\n//       if (!supportedAccounts.some((account) => account.includes(chain))) {\n//         throw new Error(`No accounts provided for chain ${chain} in namespace ${namespace}`);\n//       }\n//     });\n//\n//     namespaces[namespace] = {\n//       chains: supportedChains,\n//       methods: supportedMethods,\n//       events: supportedEvents,\n//       accounts: supportedAccounts,\n//     };\n//   });\n//\n//   // verify all required namespaces are supported\n//   const err = isConformingNamespaces(requiredNamespaces, namespaces, \"approve()\");\n//   if (err) throw new Error(err.message);\n//\n//   const approvedNamespaces = {};\n//\n//   // if both required & optional namespaces are empty, return all supported namespaces by the wallet\n//   if (!Object.keys(requiredNamespaces).length && !Object.keys(optionalNamespaces).length)\n//     return namespaces;\n//\n//   // assign accounts for the required namespaces\n//   Object.keys(normalizedRequired).forEach((requiredNamespace) => {\n//     const chains = supportedNamespaces[requiredNamespace].chains.filter((chain) =>\n//       normalizedRequired[requiredNamespace]?.chains?.includes(chain),\n//     );\n//     const methods = supportedNamespaces[requiredNamespace].methods.filter((method) =>\n//       normalizedRequired[requiredNamespace]?.methods?.includes(method),\n//     );\n//     const events = supportedNamespaces[requiredNamespace].events.filter((event) =>\n//       normalizedRequired[requiredNamespace]?.events?.includes(event),\n//     );\n//\n//     const accounts = chains\n//       .map((chain: string) =>\n//         supportedNamespaces[requiredNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[requiredNamespace] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   });\n//\n//   // add optional namespaces\n//   Object.keys(normalizedOptional).forEach((optionalNamespace) => {\n//     if (!supportedNamespaces[optionalNamespace]) return;\n//\n//     const chainsToAdd = normalizedOptional[optionalNamespace]?.chains?.filter((chain) =>\n//       supportedNamespaces[optionalNamespace].chains.includes(chain),\n//     );\n//     const methodsToAdd = supportedNamespaces[optionalNamespace].methods.filter((method) =>\n//       normalizedOptional[optionalNamespace]?.methods?.includes(method),\n//     );\n//     const eventsToAdd = supportedNamespaces[optionalNamespace].events.filter((event) =>\n//       normalizedOptional[optionalNamespace]?.events?.includes(event),\n//     );\n//\n//     const accountsToAdd = chainsToAdd\n//       ?.map((chain: string) =>\n//         supportedNamespaces[optionalNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[optionalNamespace] = {\n//       chains: mergeArrays(approvedNamespaces[optionalNamespace]?.chains, chainsToAdd),\n//       methods: mergeArrays(approvedNamespaces[optionalNamespace]?.methods, methodsToAdd),\n//       events: mergeArrays(approvedNamespaces[optionalNamespace]?.events, eventsToAdd),\n//       accounts: mergeArrays(approvedNamespaces[optionalNamespace]?.accounts, accountsToAdd),\n//     };\n//   });\n//\n//   return approvedNamespaces;\n// }\nfunction isCaipNamespace(namespace) {\n    return namespace.includes(\":\");\n}\nfunction parseNamespaceKey(namespace) {\n    return isCaipNamespace(namespace) ? namespace.split(\":\")[0] : namespace;\n}\n/**\n * Converts\n * ```\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * ```\n * into\n * ```\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *```\n */\n// export function normalizeNamespaces(\n//   namespaces: ProposalTypes.RequiredNamespaces,\n// ): ProposalTypes.RequiredNamespaces {\n//   const normalizedNamespaces = {} as ProposalTypes.RequiredNamespaces;\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       methods: mergeArrays(methods, normalizedNamespaces[normalizedKey]?.methods),\n//       events: mergeArrays(events, normalizedNamespaces[normalizedKey]?.events),\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n// export function getNamespacesFromAccounts(accounts: string[]) {\n//   const namespaces = {};\n//   accounts?.forEach((account) => {\n//     const [namespace, chainId] = account.split(\":\");\n//     if (!namespaces[namespace]) {\n//       namespaces[namespace] = {\n//         accounts: [],\n//         chains: [],\n//         events: [],\n//       };\n//     }\n//     namespaces[namespace].accounts.push(account);\n//     namespaces[namespace].chains.push(`${namespace}:${chainId}`);\n//   });\n//\n//   return namespaces;\n// }\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PROVIDER_EVENTS = void 0;\nexports.PROVIDER_EVENTS = {\n    DEFAULT_CHAIN_CHANGED: \"default_chain_changed\",\n    UPDATE_NAMESPACES: \"update_name_spaces\",\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./values\"), exports);\n__exportStar(require(\"./events\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GENERIC_SUBPROVIDER_NAME = exports.RPC_URL = exports.STORAGE = exports.CONTEXT = exports.WC_VERSION = exports.PROTOCOL = exports.RELAY_URL = exports.LOGGER = void 0;\nexports.LOGGER = \"error\";\nexports.RELAY_URL = \"wss://relay.walletconnect.com\";\nexports.PROTOCOL = \"wc\";\nexports.WC_VERSION = 2;\nexports.CONTEXT = \"universal_provider\";\nexports.STORAGE = `${exports.PROTOCOL}@${exports.WC_VERSION}:${exports.CONTEXT}:`;\nexports.RPC_URL = \"https://rpc.walletconnect.com/v1/\";\nexports.GENERIC_SUBPROVIDER_NAME = \"generic\";\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass AptosProvider {\n    constructor(opts, name) {\n        this.name = \"aptos\";\n        this.namespace = opts.namespace;\n        this.events = (0, utils_1.getGlobal)(\"events\");\n        this.client = (0, utils_1.getGlobal)(\"client\");\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"solana request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"solana provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = AptosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass BtcProvider {\n    constructor(opts, name) {\n        this.name = core_1.NameSpaceKeyBtc;\n        this.namespace = opts.namespace;\n        this.events = (0, utils_1.getGlobal)(\"events\");\n        this.client = (0, utils_1.getGlobal)(\"client\");\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"btc request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"btc provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = BtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass CosmosProvider {\n    constructor(opts) {\n        this.name = core_1.NameSpaceKeyCosmos;\n        this.namespace = opts.namespace;\n        this.events = (0, utils_1.getGlobal)(\"events\");\n        this.client = (0, utils_1.getGlobal)(\"client\");\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"btc request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"btc provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = CosmosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Eip155Provider = void 0;\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nclass Eip155Provider {\n    constructor(opts) {\n        this.name = \"eip155\";\n        this.namespace = opts.namespace;\n        this.events = (0, utils_1.getGlobal)(\"events\");\n        this.client = (0, utils_1.getGlobal)(\"client\");\n        this.chainId = parseInt(this.getDefaultChain());\n        // rpc\n        this.httpProviders = this.createHttpProviders();\n        (0, core_1.logDebug)(\"eip155 constructor --opts.namespace-->\", opts.namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    isArray(value) {\n        return typeof value === \"object\" && value !== null && Array.isArray(value);\n    }\n    updateRequestParams(args) {\n        let isDic = args.params && typeof args.params === 'object' && !Array.isArray(args.params);\n        if (args.method === 'wallet_switchEthereumChain') {\n            const switchChainId = args.chainId.split(\":\")[1];\n            // const hexChainId = parseInt(switchChainId, 16);\n            const decimalNumber = parseInt(switchChainId, 10);\n            if (isNaN(decimalNumber)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid decimal number,  chainId: '${switchChainId}' `);\n            }\n            if (!args.params) {\n                args.params = { chainId: '0x' + decimalNumber.toString(16) };\n            }\n            else if (isDic) { //为 Record<string, unknown>\n                let params = args.params;\n                if (!('chainId' in params)) {\n                    params['chainId'] = '0x' + decimalNumber.toString(16);\n                    args.params = params;\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params error ,  method: '${args.method}' `);\n            }\n        }\n        else if (args.method === 'personal_sign'\n            || args.method === 'eth_signTypedData_v4'\n            || args.method === 'eth_sendTransaction'\n            || args.method === 'wallet_watchAsset') {\n            if (!args.params) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params is nil, method: '${args.method}'`);\n            }\n            if (this.isRecord(args.params)) {\n                let params = args.params;\n                (0, core_1.logDebug)(\"eip155 updateRequestParams params>\", JSON.stringify(params));\n                if ('chainId' in params) {\n                    const selectedChainId = args.chainId.split(\":\")[1];\n                    const chainNum = parseInt(selectedChainId, 10);\n                    let paramsChainString = String(params.chainId);\n                    let paramsChainId;\n                    if (paramsChainString.startsWith(this.name) && args.chainId === paramsChainString) { //为\n                        paramsChainId = chainNum;\n                    }\n                    else if (paramsChainString.startsWith(\"0x\")) {\n                        paramsChainId = parseInt(paramsChainString, 16);\n                    }\n                    else if (!isNaN(Number(paramsChainString))) { //数字\n                        paramsChainId = parseInt(paramsChainString, 10);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid params.chainId format, method: '${args.method}'`);\n                    }\n                    if (chainNum !== paramsChainId) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params.chainId not equal chain,  method: '${args.method}' `);\n                    }\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid request params type, method: '${args.method}'`);\n            }\n        }\n    }\n    //adapt array\n    adaptArray(args) {\n        if (args.method === 'wallet_switchEthereumChain'\n            || args.method === 'wallet_addEthereumChain'\n            || args.method === 'wallet_watchAsset'\n            || args.method === 'eth_sendTransaction') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr) {\n                    if (paramsArr.length === 1) {\n                        let firstParam = args.params[0];\n                        if (this.isRecord(firstParam)) {\n                            args.params = firstParam;\n                        }\n                    }\n                    else if (paramsArr.length > 1) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                    }\n                }\n            }\n        }\n        else if (args.method === 'eth_signTypedData_v4') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr && paramsArr.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                }\n                else if (paramsArr && paramsArr.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let messageObj = {};\n                if (paramsArr && paramsArr.length === 2) {\n                    let addressObj = args.params[0]; //address\n                    if (addressObj && typeof addressObj === 'string') { //check address\n                        let isEqual = false;\n                        this.namespace.accounts.forEach((chain) => {\n                            let chainAddress = chain.split(':')[2];\n                            if (chainAddress === addressObj) {\n                                isEqual = true;\n                            }\n                        });\n                        (0, core_1.logDebug)(\"eip155 adaptArray eth_signTypedData_v4 >>>isEqual: \", isEqual);\n                        if (!isEqual) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error, not equal,  method: '${args.method}' `);\n                        }\n                        if (this.isRecord(args.params[1])) {\n                            messageObj = args.params[1];\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error , not string,  method: '${args.method}' `);\n                    }\n                }\n                else if (paramsArr && paramsArr.length === 1) {\n                    if (this.isRecord(args.params[0])) {\n                        messageObj = args.params[0];\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                    }\n                }\n                try {\n                    let messages = JSON.stringify(messageObj);\n                    args.params = {\n                        typedDataJson: messages\n                    };\n                }\n                catch (err) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params call JSON.stringify() failed,  method: '${args.method}' `);\n                }\n            }\n        }\n        else if (args.method === 'personal_sign') {\n            if (this.isArray(args.params)) {\n                if (args.params && args.params.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params error,  method: '${args.method}' `);\n                }\n                else if (args.params && args.params.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let firstObj = args.params[0];\n                let secondObj = args.params[1];\n                if (secondObj && typeof secondObj === 'string') { //check address\n                    let isEqual = false;\n                    this.namespace.accounts.forEach((chain) => {\n                        let chainAddress = chain.split(':')[2];\n                        if (chainAddress === secondObj) {\n                            isEqual = true;\n                        }\n                    });\n                    (0, core_1.logDebug)(\"eip155 adaptArray personal_sign >>>isEqual: \", isEqual);\n                    if (!isEqual) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error,  method: '${args.method}' `);\n                    }\n                }\n                if (firstObj && typeof firstObj === 'string') {\n                    args.params = {\n                        message: firstObj\n                    };\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is error,  method: '${args.method}' `);\n                }\n            }\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"eth_requestAccounts\":\n            case \"eth_accounts\":\n            case \"eth_chainId\":\n                return false;\n            case \"eth_sendTransaction\":\n            case \"eth_signTransaction\":\n            case \"eth_sign\":\n            case \"personal_sign\":\n            case \"eth_signTypedData\":\n            case \"wallet_addEthereumChain\":\n            case \"wallet_watchAsset\":\n            case \"eth_signTypedData_v4\":\n                return true;\n            case \"wallet_switchEthereumChain\": {\n                this.adaptArray(args);\n                this.updateRequestParams(args);\n                const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n                return !this.isChainApproved(parsedChainId);\n            }\n            default:\n                return false;\n        }\n        return false;\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.adaptArray(args);\n            (0, core_1.logDebug)(\"eip155 request --args--string>\", JSON.stringify(args));\n            this.updateRequestParams(args);\n            (0, core_1.logDebug)(\"eip155 request --params--string>\", JSON.stringify(args));\n            switch (args.method) {\n                case \"eth_requestAccounts\":\n                    return this.getAccounts();\n                case \"eth_accounts\":\n                    return this.getAccounts();\n                case \"eth_chainId\":\n                    return parseInt(this.getDefaultChain());\n                case \"wallet_switchEthereumChain\": {\n                    return (yield this.handleSwitchChain(args));\n                }\n                case \"wallet_addEthereumChain\":\n                    return this.addEthereumChain(args);\n                default:\n                    break;\n            }\n            if (this.namespace.methods.includes(args.method)) {\n                // personal_sign\n                // eth_signTypedData_v4\n                // eth_sendTransaction\n                // wallet_watchAsset\n                try {\n                    const response = yield this.client.request(args);\n                    (0, core_1.logDebug)(\"eip155 request --response----string>\", JSON.stringify(response));\n                    if (this.isRecord(response)) {\n                        if ('result' in response) {\n                            let result = response.result;\n                            if (result && typeof result === 'string' && (result === \"true\" || result === \"false\")) {\n                                (0, core_1.logDebug)(\"eip155 request --wallet_watchAsset>>>>\", result === \"true\");\n                                return (result === \"true\");\n                            }\n                            return response.result;\n                        }\n                    }\n                    return response;\n                }\n                catch (e) {\n                    (0, core_1.logDebug)(`eip155 request --response --error--string> e instanceof OKXConnectError ${e instanceof core_1.OKXConnectError}`, JSON.stringify(e));\n                    throw e;\n                }\n            }\n            else {\n                (0, core_1.logDebug)('[RPC] request begin');\n                return yield this.getHttpProvider().request(args);\n            }\n        });\n    }\n    addEthereumChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let resultData = (yield this.client.request(args));\n            try {\n                if ('result' in resultData) {\n                    let successData = resultData;\n                    let account = resultData.result;\n                    if (account) {\n                        const nameSpace = account.split(\":\")[0];\n                        const chainId = account.split(\":\")[1];\n                        const chain = nameSpace + ':' + chainId;\n                        let newNameSpace = this.namespace;\n                        this.namespace.accounts.push(account);\n                        this.namespace.chains.push(chain);\n                        if (this.isRecord(args.params)) {\n                            if (\"rpcUrls\" in args.params) {\n                                let rpcUrls = args.params.rpcUrls;\n                                let rpcUrl = rpcUrls ? rpcUrls[0] : undefined;\n                                if (rpcUrl) {\n                                    if (this.namespace.rpcMap) {\n                                        this.namespace.rpcMap[chainId] = rpcUrl;\n                                    }\n                                    else {\n                                        this.namespace.rpcMap = {\n                                            [chainId]: rpcUrl\n                                        };\n                                    }\n                                    this.setHttpProvider(chainId, rpcUrl);\n                                }\n                            }\n                        }\n                        this.events.emit(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, {\n                            eip155: this.namespace\n                        });\n                    }\n                }\n                else {\n                    new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request error`);\n                }\n            }\n            catch (error) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request  error`);\n            }\n            return null;\n        });\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        this.chainId = parseInt(chainId);\n        // set rpc\n        if (!this.httpProviders[chainId]) {\n            const rpc = rpcUrl || (0, utils_1.getRpcUrl)(`${this.name}:${chainId}`, this.namespace);\n            if (!rpc) {\n                // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n                (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            }\n            else {\n                this.setHttpProvider(chainId, rpc);\n            }\n        }\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId.toString();\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // ---------- Private ----------------------------------------------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"eip155 getAccounts \", accounts, this.chainId);\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    getHexChainIdFromRequest(args) {\n        let params = args.params;\n        let hexChainId = \"0x0\";\n        if (params && \"chainId\" in params) {\n            hexChainId = params.chainId;\n        }\n        hexChainId = hexChainId.startsWith(\"0x\") ? hexChainId : `0x${hexChainId}`;\n        (0, core_1.logDebug)(\"handleSwitchChain -->args \", args);\n        (0, core_1.logDebug)(\"handleSwitchChain -->hexChainId \", hexChainId);\n        const parsedChainId = parseInt(hexChainId, 16);\n        (0, core_1.logDebug)(\"handleSwitchChain -->parsedChainId \", parsedChainId);\n        return { parsedChainId, hexChainId };\n    }\n    handleSwitchChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n            if (this.isChainApproved(parsedChainId)) {\n                this.setDefaultChain(`${parsedChainId}`);\n            }\n            else {\n                const resultData = (yield this.client.request({\n                    method: \"wallet_switchEthereumChain\",\n                    chainId: args.chainId,\n                    params: {\n                        chainId: hexChainId,\n                    },\n                }));\n                try {\n                    if ('result' in resultData) {\n                        let successData = resultData;\n                        let account = resultData.result;\n                        if (account) {\n                            const nameSpace = account.split(\":\")[0];\n                            const chainId = account.split(\":\")[1];\n                            const chain = nameSpace + ':' + chainId;\n                            let newNameSpace = this.namespace;\n                            this.namespace.accounts.push(account);\n                            this.namespace.chains.push(chain);\n                            (0, core_1.logDebug)(\"handleSwitchChain -->wallet_switchEthereumChain \", resultData);\n                            this.setDefaultChain(`${parsedChainId}`);\n                            this.events.emit(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, {\n                                eip155: this.namespace\n                            });\n                        }\n                    }\n                    else {\n                        new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request error`);\n                    }\n                }\n                catch (error) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request  error`);\n                }\n            }\n            return null;\n        });\n    }\n    isChainApproved(chainId) {\n        return this.namespace.chains.includes(`${this.name}:${chainId}`);\n    }\n    // rpc\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            //   throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            (0, core_1.logDebug)('get parsed chain and rpc:', parsedChainId, parsedRpc);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        (0, core_1.logDebug)('get http providermap:', http);\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n}\nexports.Eip155Provider = Eip155Provider;\nexports.default = Eip155Provider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcConnection = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\n// Source: https://nodejs.org/api/events.html#emittersetmaxlistenersn\nconst EVENT_EMITTER_MAX_LISTENERS_DEFAULT = 10;\nclass JsonRpcConnection {\n    constructor(url, disableProviderPing = false) {\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n        this.events = new eventemitter3_1.EventEmitter();\n        this.isAvailable = false;\n        this.registering = false;\n        if (!(0, core_2.isHttpUrl)(url)) {\n            throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n        }\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n    }\n    get connected() {\n        return this.isAvailable;\n    }\n    get connecting() {\n        return this.registering;\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            yield this.register(url);\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                throw new Error(\"Connection already closed\");\n            }\n            this.onClose();\n        });\n    }\n    send(payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                yield this.register();\n            }\n            try {\n                const body = (0, core_1.safeJsonStringify)(payload);\n                const res = yield (0, cross_fetch_1.default)(this.url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                const data = yield res.json();\n                this.onPayload({ data });\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    register() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (!(0, core_2.isHttpUrl)(url)) {\n                throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n            }\n            if (this.registering) {\n                return new Promise((resolve, reject) => {\n                    this.events.once(\"register_error\", (error) => {\n                        reject(error);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.isAvailable === \"undefined\") {\n                            return reject(new Error(\"HTTP connection is missing or invalid\"));\n                        }\n                        resolve();\n                    });\n                });\n            }\n            this.url = url;\n            this.registering = true;\n            try {\n                if (!this.disableProviderPing) {\n                    const body = (0, core_1.safeJsonStringify)({ id: 1, jsonrpc: \"2.0\", method: \"test\", params: [] });\n                    yield (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                }\n                this.onOpen();\n            }\n            catch (e) {\n                const error = this.parseError(e);\n                this.events.emit(\"register_error\", error);\n                this.onClose();\n                throw error;\n            }\n        });\n    }\n    onOpen() {\n        this.isAvailable = true;\n        this.registering = false;\n        this.events.emit(\"open\");\n    }\n    onClose() {\n        this.isAvailable = false;\n        this.registering = false;\n        this.events.emit(\"close\");\n    }\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        const payload = typeof e.data === \"string\" ? (0, core_1.safeJsonParse)(e.data) : e.data;\n        this.events.emit(\"payload\", payload);\n    }\n    onError(id, e) {\n        const error = this.parseError(e);\n        const message = error.message || error.toString();\n        const payload = (0, core_2.formatJsonRpcError)(id, message);\n        this.events.emit(\"payload\", payload);\n    }\n    parseError(e, url = this.url) {\n        return (0, core_2.parseConnectionError)(e, url, \"HTTP\");\n    }\n}\nexports.JsonRpcConnection = JsonRpcConnection;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcProvider = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst types_1 = require(\"../../types\");\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nclass JsonRpcProvider extends types_1.IJSONRpcProvider {\n    constructor(connection) {\n        super(connection);\n        this.events = new eventemitter3_1.EventEmitter();\n        this.connected = false;\n        this.connecting = false;\n        this.hasRegisteredEventListeners = false;\n        this.connection = this.setConnection(connection);\n        if (this.connection.connected) {\n            this.registerEventListeners();\n        }\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            yield this.open(connection);\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.close();\n        });\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    request(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.requestStrict((0, core_1.formatJsonRpcRequest)(request.method, request.params || [], (0, core_1.getBigIntRpcId)().toString()), // casting to any is required in order to use BigInt as rpcId\n            context);\n        });\n    }\n    // ---------- Protected ----------------------------------------------- //\n    requestStrict(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.connection.connected) {\n                    try {\n                        yield this.open();\n                    }\n                    catch (e) {\n                        reject(e);\n                    }\n                }\n                this.events.on(`${request.id}`, (response) => {\n                    if ((0, core_1.isJsonRpcError)(response)) {\n                        reject(response.error);\n                    }\n                    else {\n                        resolve(response.result);\n                    }\n                });\n                try {\n                    (0, core_2.logDebug)('[RPC] >>> send request', request, context);\n                    yield this.connection.send(request, context);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }));\n        });\n    }\n    setConnection(connection = this.connection) {\n        return connection;\n    }\n    onPayload(payload) {\n        this.events.emit(\"payload\", payload);\n        if ((0, core_1.isJsonRpcResponse)(payload)) {\n            this.events.emit(`${payload.id}`, payload);\n        }\n        else {\n            this.events.emit(\"message\", {\n                type: payload.method,\n                data: payload.params,\n            });\n        }\n    }\n    onClose(event) {\n        // Code 3000 indicates an abnormal closure signalled by the relay -> emit an error in this case.\n        if (event && event.code === 3000) {\n            this.events.emit(\"error\", new Error(`WebSocket connection closed abnormally with code: ${event.code} ${event.reason ? `(${event.reason})` : \"\"}`));\n        }\n        this.events.emit(\"disconnect\");\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            if (this.connection === connection && this.connection.connected)\n                return;\n            if (this.connection.connected)\n                this.close();\n            if (typeof connection === \"string\") {\n                yield this.connection.open(connection);\n                connection = this.connection;\n            }\n            this.connection = this.setConnection(connection);\n            yield this.connection.open();\n            this.registerEventListeners();\n            this.events.emit(\"connect\");\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.connection.close();\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    registerEventListeners() {\n        if (this.hasRegisteredEventListeners)\n            return;\n        this.connection.on(\"payload\", (payload) => this.onPayload(payload));\n        this.connection.on(\"close\", (event) => this.onClose(event));\n        this.connection.on(\"error\", (error) => this.events.emit(\"error\", error));\n        this.connection.on(\"register_error\", (_error) => this.onClose());\n        this.hasRegisteredEventListeners = true;\n    }\n}\nexports.JsonRpcProvider = JsonRpcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolanaProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SolanaProvider {\n    constructor(opts, name) {\n        this.name = \"solana\";\n        this.namespace = opts.namespace;\n        this.events = (0, utils_1.getGlobal)(\"events\");\n        this.client = (0, utils_1.getGlobal)(\"client\");\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"solana request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"solana provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    //   {\n    //     \"chains\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\" ],\n    //     \"accounts\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp:F7wnJc5wiBGy1k87jv6gyNwE3jMEWd18oTQiYsF1xVG7\"],\n    //     \"methods\": [\n    //         \"solana_signTransaction\",\n    //         \"solana_signMessage\"\n    //     ],\n    //     \"defaultChain\": \"5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\"\n    // }\n    // TODO:确认上面的defaultChain是否正确（没有solana前缀）\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"solana\"))) {\n                chainId = `solana:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.SolanaProvider = SolanaProvider;\nexports.default = SolanaProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuiProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SuiProvider {\n    constructor(opts) {\n        this.name = core_1.NameSpaceKeySui;\n        this.namespace = opts.namespace;\n        this.events = (0, utils_1.getGlobal)(\"events\");\n        this.client = (0, utils_1.getGlobal)(\"client\");\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"sui request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"sui provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"sui\"))) {\n                chainId = `sui:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"sui_signMessage\":\n            case \"sui_signPersonalMessage\":\n            case \"sui_signTransactionBlock\":\n            case \"sui_signAndExecuteTransactionBlock\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.SuiProvider = SuiProvider;\nexports.default = SuiProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TONProvider {\n    constructor(opts) {\n        this.name = core_1.NameSpaceKeyTON;\n        this.namespace = opts.namespace;\n        this.events = (0, utils_1.getGlobal)(\"events\");\n        this.client = (0, utils_1.getGlobal)(\"client\");\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            (0, core_1.logDebug)(\"TONProvider request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"TONProvider request provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                if (!args.params) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params is nil\");\n                }\n                if (this.isRecord(args.params)) {\n                    const _e = args.params, { validUntil } = _e, newParams = __rest(_e, [\"validUntil\"]);\n                    let fromAddress = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n                    if ('from' in newParams) {\n                        fromAddress = newParams.from || ((_d = (_c = this.namespace.payload) === null || _c === void 0 ? void 0 : _c.ton_addr) === null || _d === void 0 ? void 0 : _d.address);\n                    }\n                    args.params['from'] = fromAddress;\n                    args.params['network'] = this.getDefaultChain();\n                    args.params['valid_until'] = validUntil;\n                    let response = yield this.client.request(args);\n                    if (this.isRecord(response) && 'result' in response) {\n                        const result = {\n                            boc: response.result.toString()\n                        };\n                        (0, core_1.logDebug)(\"TONProvider request provider response: \", JSON.stringify(response));\n                        (0, core_1.logDebug)(\"TONProvider request provider result: \", JSON.stringify(result));\n                        return result;\n                    }\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton_send request response is nil\");\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params type add nil\");\n                }\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        var _a, _b;\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"ton getAccounts accounts :\", accounts);\n        (0, core_1.logDebug)(\"ton getAccounts .namespace :\", JSON.stringify(this.namespace));\n        if (!accounts) {\n            return [];\n        }\n        let address = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n        (0, core_1.logDebug)(\"ton getAccounts address :\", address);\n        if (address) {\n            return [\n                address\n            ];\n        }\n        return [];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"ton_sendTransaction\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.default = TONProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./providers\"), exports);\n__exportStar(require(\"./misc\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IJSONRpcProvider = exports.IJSONRpcConnection = void 0;\nclass IJSONRpcConnection {\n}\nexports.IJSONRpcConnection = IJSONRpcConnection;\nclass IJSONRpcProvider {\n    constructor(opt) {\n    }\n}\nexports.IJSONRpcProvider = IJSONRpcProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setGlobal = exports.getGlobal = void 0;\nconst globals = {};\nconst getGlobal = (key) => {\n    return globals[key];\n};\nexports.getGlobal = getGlobal;\nconst setGlobal = (key, value) => {\n    globals[key] = value;\n};\nexports.setGlobal = setGlobal;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./misc\"), exports);\n__exportStar(require(\"./globals\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRpcUrl = getRpcUrl;\nexports.getChainId = getChainId;\nexports.convertChainIdToNumber = convertChainIdToNumber;\nexports.parseChainId = parseChainId;\nexports.mergeArrays = mergeArrays;\nfunction getRpcUrl(chainId, rpc, projectId) {\n    var _a;\n    const chain = parseChainId(chainId);\n    // no default\n    return (((_a = rpc.rpcMap) === null || _a === void 0 ? void 0 : _a[chain.reference]) ||\n        ``);\n}\nfunction getChainId(chain) {\n    return chain.includes(\":\") ? chain.split(\":\")[1] : chain;\n}\n// export function validateChainApproval(chain: string, chains: string[]): void {\n//   if (!chains.includes(chain)) {\n//     throw new Error(\n//       `Chain '${chain}' not approved. Please use one of the following: ${chains.toString()}`,\n//     );\n//   }\n// }\n// export function getChainsFromApprovedSession(accounts: string[]): string[] {\n//   return accounts.map((address) => `${address.split(\":\")[0]}:${address.split(\":\")[1]}`);\n// }\n// export function getAccountsFromSession(namespace: string, session: SessionTypes.Struct): string[] {\n//   // match namespaces e.g. eip155 with eip155:1\n//   const matchedNamespaceKeys = Object.keys(session.namespaces).filter((key) =>\n//     key.includes(namespace),\n//   );\n//   if (!matchedNamespaceKeys.length) return [];\n//   const accounts: string[] = [];\n//   matchedNamespaceKeys.forEach((key) => {\n//     const accountsForNamespace = session.namespaces[key].accounts;\n//     accounts.push(...accountsForNamespace);\n//   });\n//   return accounts;\n// }\n// export function mergeRequiredOptionalNamespaces(\n//   required: NamespaceConfig = {},\n//   optional: NamespaceConfig = {},\n// ){\n//   const requiredNamespaces = normalizeNamespaces(required);\n//   const optionalNamespaces = normalizeNamespaces(optional);\n//    return merge.merge(requiredNamespaces,optionalNamespaces)\n// }\n/**\n * Converts\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * into\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *\n */\n// export function normalizeNamespaces(namespaces: NamespaceConfig): NamespaceConfig {\n//   const normalizedNamespaces: NamespaceConfig = {};\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const rpcMap = values.rpcMap || {};\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       ...values,\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       rpcMap: { ...rpcMap, ...normalizedNamespaces[normalizedKey]?.rpcMap },\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n//\n// export function parseCaip10Account(caip10Account: string): string {\n//   return caip10Account.includes(\":\") ? caip10Account.split(\":\")[2] : caip10Account;\n// }\n/**\n * Populates the chains array for each namespace with the chains extracted from the accounts if are otherwise missing\n */\n// export function populateNamespacesChains(\n//   namespaces: SessionTypes.Namespaces,\n// ): Record<string, SessionTypes.Namespace> {\n//   const parsedNamespaces: Record<string, SessionTypes.Namespace> = {};\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const accounts = values.accounts || [];\n//     // If the key includes a CAIP separator `:` we know it's a namespace + chainId (e.g. `eip155:1`)\n//     const chains = isCaipNamespace(key)\n//       ? [key]\n//       : values.chains\n//       ? values.chains\n//       : getChainsFromApprovedSession(values.accounts);\n//     parsedNamespaces[key] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   }\n//   return parsedNamespaces;\n// }\nfunction convertChainIdToNumber(chainId) {\n    if (typeof chainId === \"number\")\n        return chainId;\n    if (chainId.includes(\"0x\")) {\n        return parseInt(chainId, 16);\n    }\n    chainId = chainId.includes(\":\") ? chainId.split(\":\")[1] : chainId;\n    return isNaN(Number(chainId)) ? chainId : Number(chainId);\n}\nconst CAIP_DELIMITER = \":\";\nfunction parseChainId(chain) {\n    const [namespace, reference] = chain.split(CAIP_DELIMITER);\n    return { namespace, reference };\n}\nfunction mergeArrays(a = [], b = []) {\n    return [...new Set([...a, ...b])];\n}\n","<template>\n  <div id=\"app\">\n    <el-container>\n      <el-header>OKX Connect</el-header>\n      <el-main>\n        <!-- 钱包信息 -->\n        <el-card class=\"wallet-info\">\n          <template #header>\n            <div>Wallet Info</div>\n          </template>\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Wallet Address:</strong> {{ getWalletAddress }}\n            </el-col>\n          </el-row>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Status :</strong> {{ currentStatus }}\n            </el-col>\n          </el-row>\n\n          <!--          <el-row class=\"info-row\">-->\n          <!--            <el-col :span=\"24\">-->\n          <!--              <strong>Universal Link:</strong> {{ updateUniLink }}-->\n          <!--            </el-col>-->\n          <!--          </el-row>-->\n        </el-card>\n\n        <!-- 连接钱包 -->\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div>Actions</div>\n          </template>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <el-checkbox v-model=\"withUI\" @change=\"handleWithUI\">\n                show UI</el-checkbox>\n            </el-col>\n          </el-row>\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Modals</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"modals\" placeholder=\"Modals\" @change=\"handleModalsSelect\" multiple>\n                <el-option label=\"Before\" value=\"before\" />\n                <el-option label=\"Success\" value=\"success\" />\n                <el-option label=\"Error\" value=\"error\" />\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center; justify-content: space-between;\">\n            <el-col :span=\"4\" style=\"gap: 2px\">\n              <p style=\"font-size: 11pt; margin: 0px\">Return Strategy</p>\n              <p style=\"font-size: 9pt; margin: 0px\">(Mobile only)</p>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-select\n                v-model=\"returnStrategy\"\n                @change=\"handleReturnStrategySelect\"\n                placeholder=\"Return Strategy\"\n              >\n                <el-option\n                  v-for=\"strategy in returnStrategies\"\n                  :key=\"`return-strategy-select-option-${strategy}`\"\n                  :label=\"strategy\"\n                  :value=\"strategy\"\n                />\n              </el-select>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-input\n                v-if=\"returnStrategy === 'deeplink'\"\n                v-model=\"deeplink\"\n                @change=\"handleReturnStrategyDeeplink\"\n                placeholder=\"Deeplink\"\n                :disabled=\"returnStrategy !== 'deeplink'\"\n                style=\"margin: 0px\"\n              />\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Language</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"language\" @change=\"handleLanguageSelect\" placeholder=\"Language\">\n                <el-option v-for=\"locale in locales\" :key=\"`language-select-option-${locale}`\" :label=\"locale\"\n                  :value=\"locale\" />\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Theme</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"theme\" @change=\"handleThemeSelect\" placeholder=\"Theme\">\n                <el-option label=\"LIGHT\" :value=\"THEME.LIGHT\" />\n                <el-option label=\"DARK\" :value=\"THEME.DARK\" />\n              </el-select>\n            </el-col>\n          </el-row>\n\n<!--          <el-row style=\"align-items: center\">-->\n<!--            <el-col :span=\"4\">-->\n<!--              <p style=\"font-size: 11pt\">Connect</p>-->\n<!--              <p style=\"font-size: 11pt\">Methods</p>-->\n<!--            </el-col>-->\n<!--            <el-col :span=\"20\">-->\n<!--              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" placeholder=\"Methods\">-->\n<!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n<!--                           :value=\"methods\" />-->\n\n<!--              </el-select>-->\n<!--            </el-col>-->\n<!--          </el-row>-->\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Connect</p>\n              <p style=\"font-size: 11pt\">Methods</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" multiple placeholder=\"methods\">\n                <el-option\n                    v-for=\"item in connectMethods\"\n                    :key=\"item\"\n                    :label=\"item\"\n                    :value=\"item\">\n                </el-option>\n              </el-select>\n\n\n<!--              <el-select v-model=\"selectedMethod\" placeholder=\"Methods\" @change=\"handleConnectMethodsSelect\" multiple>-->\n<!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n<!--                           :value=\"methods\" />-->\n<!--              </el-select>-->\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">ton_proof</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-input v-model=\"tonProofValue\"  placeholder=\"input ton_proof\"></el-input>\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" align=\"middle\">\n            <el-col :span=\"4\">\n              <div>req</div>\n            </el-col>\n            <el-col\n              :span=\"6\"\n              v-for=\"item in Object.keys(availableChains)\"\n              :key=\"item\"\n            >\n              <el-checkbox\n                v-model=\"availableChains[item].checked\"\n                :disabled=\"!areChainsInit\"\n                >{{ availableChains[item].name }}</el-checkbox\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" align=\"middle\" style=\"margin-top: 20px\">\n            <el-col :span=\"4\">\n              <div>opt</div>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(43114)\" @change=\"() => handleOptionChange(43114)\">\n                avax</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(10)\" @change=\"() => handleOptionChange(10)\">op</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(8453)\" @change=\"() => handleOptionChange(8453)\">\n                BASE</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(99781165)\"\n                @change=\"() => handleOptionChange(99781165)\">Non-exist chain</el-checkbox>\n            </el-col>\n          </el-row>\n\n          <!-- <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button type=\"primary\" @click=\"deeplinkActionTest\" icon=\"el-icon-connection\">测试Deeplink</el-button>\n            </el-col>\n          </el-row> -->\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                type=\"primary\"\n                @click=\"connectBtnClicked\"\n                icon=\"el-icon-connection\"\n                :disabled=\"!areChainsInit\"\n                >{{ connectStatusStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"connectBtnAndSignClicked\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectAndSignStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                type=\"danger\"\n                @click=\"disconnectAction\"\n                icon=\"el-icon-switch-button\"\n                :disabled=\"!areChainsInit || walletAddress.length == 0\"\n                >{{ disconnectStatusStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n          <teleport to=\"body\">\n            <div v-if=\"showModal\" class=\"modal-overlay\" @click=\"closeModal\">\n              <div class=\"modal-content\" @click.stop>\n                <button class=\"close-button\" @click=\"closeModal\">\n                  &times;\n                </button>\n                <h2>Scan to connect</h2>\n                <qrcode-vue :value=\"qrValue\" :size=\"350\" level=\"L\" />\n              </div>\n            </div>\n          </teleport>\n        </el-card>\n\n        <!-- 发送交易 -->\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div>Transactions</div>\n          </template>\n\n          <el-tabs v-model=\"activeTab\" type=\"border-card\" @tab-click=\"clickActiveTab\">\n            <!-- ETH -->\n            <el-tab-pane label=\"ETH\" name=\"eip155:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to ETH)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve TONCoin)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(eth mint\n                    nft)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add SPX6900)\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n            <!-- Polygon-->\n            <el-tab-pane label=\"Polygon\" name=\"eip155:137\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send POL)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve sushi)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(polygon mint\n                    nft)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add LGNS)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_testRpc()\">wallet_testRpc(Polygon)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- BSC-->\n            <el-tab-pane label=\"BNB\" name=\"eip155:56\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to BNB)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve POSI)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add FET)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_testRpc()\">wallet_testRpc(check balance on eth)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Fuse\" name=\"eip155:122\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_swap\">eth_sendTransaction(Swap)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\"\n                  >eth_sendTransaction(转账FUSE)</el-button\n                  >\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\"\n                  >eth_sendTransaction(授权USDC)</el-button\n                  >\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TON\" name=\"ton:-239\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_getAccount\">ton_getAccount</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_sendTransaction\">ton_sendTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- solana -->\n            <el-tab-pane label=\"Sol\" name=\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Sonic\" name=\"sonic:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Sonic(svm)\" name=\"svm:70000059\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- Sui-->\n            <el-tab-pane label=\"Sui\" name=\"sui:mainnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sui_getAccount()\">getAccount(Sui)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sui_signMessage()\">signMessage(Sui)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sui_signPersonalMessage()\">signPersonalMessage(Sui)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sui_signTransaction2()\">signTransaction(Sui)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sui_signAndExecuteTransaction()\">sendTransaction(send to Rally\n                    Tiger account)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sui_requestRpc()\">rpc(Sui)</el-button>\n                </el-col>\n              </el-row>\n\n              <div style=\"height: 48px\"></div>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"sui_signTransaction_pre_execution()\">signTransaction(prepared data)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"sui_signAndExecuteTransaction_pre_execution()\">sendTransaction(prepared data)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sui_signTransaction()\">signTransaction(Pattern account)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sui_signAndExecuteTransaction_stake()\">stake (Sui)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n            <!-- BTC -->\n            <el-tab-pane label=\"BTC\" name=\"btc:mainnet\">\n              <BTCPanel @generateTransactionParams=\"btc_generateTransactionParams\" />\n            </el-tab-pane>\n\n            <!-- Fractal BTC -->\n            <el-tab-pane label=\"Fractal\" name=\"fractal:mainnet\">\n              <FractalPanel @generateTransactionParams=\"fractal_generateTransactionParams\" />\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Aptos\" name=\"aptos:mainnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signTransaction\">aptos_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"aptos_signAndSubmitTransaction\">aptos_signAndSubmitTransaction</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Movement\" name=\"movement:testnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"move_signTransaction\">move_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"move_signAndSubmitTransaction\">move_signAndSubmitTransaction</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"cosmos\" name=\"cosmos:cosmoshub-4\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"osmos\" name=\"cosmos:osmosis-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"sei交易\" name=\"cosmos:pacific-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n          </el-tabs>\n\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Data:</div>\n            <el-input v-model=\"testTransaction\" type=\"textarea\" :rows=\"5\" placeholder=\"sendTransactions\"></el-input>\n          </el-col>\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Result :</div>\n            <el-input v-model=\"testboc\" type=\"textarea\" :rows=\"5\" placeholder=\"boc\"></el-input>\n          </el-col>\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button type=\"primary\" @click=\"sendTransaction()\">{{\n                testTransactionStr\n                }}</el-button>\n            </el-col>\n          </el-row>\n        </el-card>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<style scoped>\n/* 重置全局边距和内边距 */\nbody,\nhtml {\n  margin: 0;\n  padding: 0;\n  height: 100%;\n}\n\n/* 确保 app 容器占满整个视口 */\n#app {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin: 0 auto;\n  /* 居中 */\n  max-width: 600px;\n  /* 设置最大宽度 */\n  padding: 0 20px;\n  /* 添加一些左右内边距 */\n}\n\n/* 调整 el-container 样式 */\n.el-container {\n  min-height: 100vh;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n}\n\n/* 调整 el-header 样式 */\n.el-header {\n  background-color: #333333;\n  color: white;\n  height: 50px;\n  line-height: 50px;\n  font-size: 18px;\n  font-weight: bold;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n}\n\n/* 调整 el-main 样式 */\n.el-main {\n  padding: 70px 0 20px;\n  /* 增加顶部内边距以避免被固定header遮挡 */\n  flex-grow: 1;\n}\n\n.el-card {\n  margin-bottom: 20px;\n}\n\n.info-row {\n  margin-bottom: 10px;\n}\n\n.input-label {\n  margin-bottom: 5px;\n  text-align: left;\n}\n\n.el-input {\n  margin-bottom: 10px;\n}\n\n/* 通用按钮样式 */\n.wallet-actions .el-button,\n.transaction .el-button,\n.clear-cache .el-button {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 40px;\n}\n\n.wallet-actions .el-button span,\n.transaction .el-button span,\n.clear-cache .el-button span {\n  margin: 0 auto;\n}\n\n/* 按钮行间距 */\n.wallet-actions .button-row,\n.transaction .button-row {\n  margin-bottom: 8px;\n}\n\n.wallet-actions .button-row:last-child,\n.transaction .button-row:last-child {\n  margin-bottom: 0;\n}\n\n/* 调整图标和文字的对齐 */\n.wallet-actions .el-button [class^=\"el-icon-\"],\n.transaction .el-button [class^=\"el-icon-\"],\n.clear-cache .el-button [class^=\"el-icon-\"] {\n  margin-right: 5px;\n  vertical-align: middle;\n}\n\n/* 新增：调整发送交易按钮与输入框的间距 */\n.transaction .el-row:not(:last-child) {\n  margin-bottom: 10px;\n}\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  text-align: center;\n  position: relative;\n  max-width: 90%;\n  width: 400px;\n}\n\n.close-button {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  font-size: 24px;\n  border: none;\n  background: none;\n  cursor: pointer;\n}\n\n/* 响应式调整 */\n@media (max-width: 600px) {\n  #app {\n    padding: 0 10px;\n  }\n\n  .el-main {\n    padding: 60px 0 10px;\n  }\n}\n</style>\n<script>\nimport { ed25519 } from '@noble/curves/ed25519';\nimport {OKX_CONNECT_ERROR_CODES, safeJsonStringify,getAppWalletDeepLink} from \"@okxconnect/core\"\nimport {OKXBtcProvider, OKXUniversalProvider, OKXCosmosProvider} from \"@okxconnect/universal-provider\"\nimport {OKXSolanaProvider} from \"@okxconnect/solana-provider\";\nimport {\n  Connection,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n  TransactionMessage,\n  VersionedTransaction\n} from '@solana/web3.js';\nimport {OKXSuiProvider as SuiAdapter} from \"@okxconnect/sui-provider\"\nimport {Transaction as SuiTransaction} from '@mysten/sui/transactions';\nimport QrcodeVue from 'qrcode.vue'\nimport {getFullnodeUrl, SuiClient} from \"@mysten/sui/client\";\nimport { OKXTONProvider } from \"@okxconnect/ton-provider\"\n\nimport {OKXAptosProvider} from \"@okxconnect/aptos-provider\";\nimport {Aptos, AptosConfig, Network} from \"@aptos-labs/ts-sdk\";\nimport bs58 from \"bs58\";\nimport BTCPanel from \"./components/BtcTransactionPanel.vue\";\nimport FractalPanel from \"./components/FractalTransactionPanel.vue\"\n\nimport {OKXUniversalConnectUI, THEME} from \"@okxconnect/ui\";\n\nimport VConsole from 'vconsole'\n// import {StargateClient} from \"@cosmjs/stargate\";\n// import {makeSignDoc} from \"@cosmjs/amino\";\n// import {CosmosUtils} from \"@/cosmos/CosmosUils\";\nnew VConsole();\n\nconst allChains = {\n  1: { name: \"eth\", checked: false },\n  56: { name: \"BNB\", checked: false },\n  137: { name: \"Polygon\", checked: false },\n  122: { name: \"Fuse\", checked: false },\n  \"ton:-239\":{name: \"TON\",checked: false},\n  \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\": {\n    name: \"Sol mainnet\",\n    checked: false,\n  },\n  \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\": {\n    name: \"Sol testnet\",\n    checked: false,\n  },\n  \"sonic:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\": {\n    name: \"Sonic testnet\",\n    checked: false,\n  },\n  \"svm:70000059\": { name: \"70000059\", checked: false },\n  \"sui:mainnet\": { name: \"Sui mainnet\", checked: false },\n  \"aptos:mainnet\": { name: \"Aptos mainnet\", checked: false },\n  \"movement:testnet\": { name: \"Movement\", checked: false },\n  \"btc:mainnet\": { name: \"BTC\", checked: false },\n  \"fractal:mainnet\": { name: \"Fractal\", checked: false },\n  \"cosmos:osmosis-1\": {name: \"osmos\", checked: false},\n  \"cosmos:cosmoshub-4\": {name: \"cosmoshub\", checked: false},\n  \"cosmos:pacific-1\": {name: \"sei\", checked: false},\n  \"cosmos:abvdefg\": {name: \"cosmos:abvdefg\", checked: false},\n  997865: { name: \"不存在的链\", checked: false },\n};\n\nvar optionChains = new Set([]);\nvar selectedModals = [\"before\", \"success\", \"error\"];\nvar selectedReturnStrategy = \"none\";\nvar selectedDeepLink = \"tg://resolve\";\nvar selectedLanguage = \"en_US\";\nvar selectedTheme = THEME.LIGHT;\n\n// import QrcodeVue from 'qrcode.vue'\nexport default {\n  name: \"App\",\n  components: {\n    QrcodeVue,\n    BTCPanel,\n    FractalPanel\n  },\n\n  data: () => {\n    return {\n      activeTab: \"eip155:1\",\n      testTopic: \"\",\n      testPublicKey: \"\",\n      testProofPayload: \"\",\n      tonProofValue:\"\",\n      pendingDeepLink: \"-\",\n      logList: [],\n      connectReady: false,\n      connectStatusStr: \"Connect\",\n      connectAndSignStr: \"ConnectAndsign(two steps only ETH)\",\n      disconnectStatusStr: \"Disconnect\",\n      localPubKey: \"\",\n      localSecKey: \"\",\n      testTransaction: \"\",\n      selectedChain: \"eip155:1\",\n      testTransactionStr: \"Send\",\n      walletAddress: \"\",\n      testboc: \"\",\n      ProofPayloadVerify: \"\",\n      showModal: false,\n      showVerifyRow: false,\n      qrValue: \"https://www.okx.com/download\",\n      currentStatus: \"\",\n      areChainsInit: false,\n      availableChains: allChains,\n      isOptionalChecked: (chainId) => {\n        return optionChains.has(chainId);\n      },\n      withUI: localStorage.getItem(\"autoRefresh\") != \"false\",\n      modals: selectedModals,\n      returnStrategies: [\"none\", \"back\", \"deeplink\"],\n      returnStrategy: selectedReturnStrategy,\n      deeplink: selectedDeepLink,\n      locales: [\n        \"en_US\",\n        \"ru_RU\",\n        \"zh_CN\",\n        \"zh\",\n        \"ar_AE\",\n        \"cs_CZ\",\n        \"de_DE\",\n        \"es_ES\",\n        \"es_LAT\",\n        \"fr_FR\",\n        \"id_ID\",\n        \"it_IT\",\n        \"nl_NL\",\n        \"pl_PL\",\n        \"pt_BR\",\n        \"pt_PT\",\n        \"ro_RO\",\n        \"tr_TR\",\n        \"uk_UA\",\n        \"vi_VN\",\n      ],\n      selectedMethod:[],\n      selectedMethodData:[],\n      connectMethods:[\n        \"wallet_addEthereumChain\",\n        \"personal_sign\",\n        \"solana_signMessage\",\n        \"sui_signMessage\",\n        \"sui_signPersonalMessage\",\n        \"btc_signMessage\",\n        \"aptos_signMessage\",\n        \"cosmos_signArbitrary\",\n        \"test_noSupport_eth\"\n      ],\n\n      language: selectedLanguage,\n      theme: selectedTheme,\n      THEME: THEME,\n      handleWithUI: (isChecked) => {\n        localStorage.setItem(\"autoRefresh\", `${isChecked}`);\n        location.reload();\n      },\n      handleOptionChange: (chainId) => {\n        if (optionChains.has(chainId)) {\n          optionChains.delete(chainId);\n        } else {\n          optionChains.add(chainId);\n        }\n      },\n    };\n  },\n  computed: {\n    getWalletAddress: function () {\n      return this.walletAddress;\n    },\n  },\n  methods: {\n    isChecked(chainId) {\n      return this.selectedChains.has(chainId);\n    },\n\n    initChains(newChains) {\n      if (newChains.length > 0) {\n        const updatedChains = Object.assign({}, this.availableChains);\n        for (const chainId of newChains) {\n          if (updatedChains[chainId]){\n            updatedChains[chainId].checked = !updatedChains[chainId].checked;\n          }\n        }\n        this.availableChains = updatedChains;\n      }\n\n      this.areChainsInit = true;\n    },\n\n    async clickActiveTab(tab) {\n      const tabName = tab.props ? tab.props.name : tab.name;\n      this.selectedChain = tabName;\n      console.log(`已切换到链 :`, tabName);\n\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n      window.provider.setDefaultChain(this.selectedChain);\n    },\n\n    async connectBtnClicked() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        this.testTonSdk();\n      } else {\n        console.log(`connectBtnClicked provider not finish init`);\n      }\n    },\n    async connectBtnAndSignClicked() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        this.testTonSdk(true);\n      } else {\n        console.log(`connectBtnClicked provider not finish init`);\n      }\n    },\n\n    async disconnectAction() {\n      try {\n        console.log(\"get disconnect wallet btn clicked\");\n        // await TON.disconnect();\n        var provider = window.provider;\n        await provider.disconnect();\n        this.walletAddress = \"disconnected\";\n      } catch (error) {\n        console.log(\"Disconnect  error ==>> \", error.message);\n        this.currentStatus = error.message;\n      }\n    },\n\n    async eth_requestAccounts() {\n      var data = { method: \"eth_requestAccounts\" };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_chainId() {\n      var data = { method: \"eth_chainId\" };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_switchEthereumChain() {\n      var data = { method: \"wallet_switchEthereumChain\" };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_addEthereumChain() {\n      var data = {\n        method: \"wallet_addEthereumChain\",\n        params: {\n          blockExplorerUrls: [\"https://explorer.fuse.io\"],\n          chainId: \"0x7a\",\n          chainName: \"Fuse\",\n          nativeCurrency: { name: \"Fuse\", symbol: \"FUSE\", decimals: 18 },\n          rpcUrls: [\"https://rpc.fuse.io\"],\n        },\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n    async personal_sign() {\n      if (this.selectedChain === \"eip155:1\") {\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0x1ca023f10e157d148deed210f8bee193657a1eaa7f187909e20a9dc3b071dbc364c41fde37960c05093359f410a061ec8a7dca8c0c39fc7c1e24de8a3329775d1b\n\n        var accounts = await window.provider.request(\n          { method: \"eth_requestAccounts\" },\n          \"eip155\"\n        );\n        var address = accounts[0];\n        console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n        var dataETH = {\n          method: \"personal_sign\",\n          params: [\n            \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n            address,\n          ],\n        };\n\n        this.testTransaction = JSON.stringify(dataETH);\n      } else if (\n        this.selectedChain === \"eip155:137\" ||\n        this.selectedChain === \"eip155:122\"\n      ) {\n        // method\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0xebda9cfa2af43999058dffa0107031d1ef7fc0252dca85dcbd22ea097af922ca39b64d509ef61ce42b7641c5840b8a80337ffd1411b13e87e2260a3f1b6c151c1b\n\n        var dataPolygon = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n        this.testTransaction = JSON.stringify(dataPolygon);\n      } else if (this.selectedChain === \"eip155:56\") {\n        var data = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n\n        this.testTransaction = JSON.stringify(data);\n      }\n    },\n\n    async eth_sendTransaction_swap() {\n      var data = {\n        method: \"eth_sendTransaction\",\n        chainId: \"eip155:122\",\n        params: {\n          value: \"0x38d7ea4c68000\",\n          gas: \"0x2665f\",\n          to: \"0xf2614A233c7C3e7f08b1F887Ba133a13f1eb2c55\",\n          from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n          data: \"0x2646478b000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00000000000000000000000000000000000000000000000000038d7ea4c68000000000000000000000000000620fd5fa44be6af63715ef4e65ddfa0387ad13f5000000000000000000000000000000000000000000000000000000000000001b000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000700301ffff0201602352A9Eb5234466Eac23E59e7B99bCaE79C39c0BE9e53fd7EDaC9F859882AfdDa116645287C629040BE9e53fd7EDaC9F859882AfdDa116645287C62900602352A9Eb5234466Eac23E59e7B99bCaE79C39c01f2F3e73be57031114dd1f4E75c1DD87658be7F0E000bb800000000000000000000000000000000\",\n        },\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_signTypedData_v4() {\n      // method\n      // eth_signTypedData\n      // address\n      // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n      // valid\n      // true\n      // result\n      // 0xa8bb3c6b33a119d2d567c7632195c21988df778006082742125a591f5c633f716107883a37f7de6531a6312a5f69022135bf46fe5ab77905b62c82b3395f985e1b\n      //\n\n      // var data = {\n      //   \"method\": \"eth_signTypedData_v4\",\n      //   \"params\": {\n      //     \"typedDataJson\":\"{\\\"types\\\":{\\\"EIP712Domain\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"version\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"chainId\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"name\\\":\\\"verifyingContract\\\",\\\"type\\\":\\\"address\\\"}],\\\"Person\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"wallet\\\",\\\"type\\\":\\\"address\\\"}],\\\"Mail\\\":[{\\\"name\\\":\\\"from\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"to\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"contents\\\",\\\"type\\\":\\\"string\\\"}]},\\\"primaryType\\\":\\\"Mail\\\",\\\"domain\\\":{\\\"name\\\":\\\"Ether Mail\\\",\\\"version\\\":\\\"1\\\",\\\"chainId\\\":1,\\\"verifyingContract\\\":\\\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\\\"},\\\"message\\\":{\\\"from\\\":{\\\"name\\\":\\\"Cow\\\",\\\"wallet\\\":\\\"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\\\"},\\\"to\\\":{\\\"name\\\":\\\"Bob\\\",\\\"wallet\\\":\\\"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\\\"},\\\"contents\\\":\\\"Hello, Bob!\\\"}}\"\n      // }}\n\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        \"eip155\"\n      );\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n      var data = {\n        method: \"eth_signTypedData_v4\",\n        params: [\n          address,\n          {\n            types: {\n              EIP712Domain: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"version\",\n                  type: \"string\",\n                },\n                {\n                  name: \"chainId\",\n                  type: \"uint256\",\n                },\n                {\n                  name: \"verifyingContract\",\n                  type: \"address\",\n                },\n              ],\n              Person: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"wallet\",\n                  type: \"address\",\n                },\n              ],\n              Mail: [\n                {\n                  name: \"from\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"to\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"contents\",\n                  type: \"string\",\n                },\n              ],\n            },\n            primaryType: \"Mail\",\n            domain: {\n              name: \"Ether Mail\",\n              version: \"1\",\n              chainId: 1,\n              verifyingContract: \"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\",\n            },\n            message: {\n              from: {\n                name: \"Cow\",\n                wallet: \"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\",\n              },\n              to: {\n                name: \"Bob\",\n                wallet: \"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\",\n              },\n              contents: \"Hello, Bob!\",\n            },\n          },\n        ],\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_sendTransaction_transfer() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            chainId: \"0x1\",\n            to: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            value: \"0x5af3107a4000\",\n            maxPriorityFeePerGas: \"0x3b9aca00\",\n            gas: \"0x5e56\",\n            maxFeePerGas: \"0x2643b9db8\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gasPrice: \"0x17003f6530\",\n            nonce: \"0x0d30\",\n            data: \"0x\",\n            value: \"0x00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasLimit: \"0x5208\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x5e56\",\n            value: \"0x5af3107a4000\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasPrice: \"0x3b9aca00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            chainId: \"0x38\",\n          },\n        };\n      }else if(this.selectedChain === \"eip155:122\"){\n         data =   {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            value: \"0x0\",\n            chainId: \"0x7a\",\n          }\n        }\n      }\n\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        \"eip155\"\n      );\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"to\"] = address;\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_approve() {\n      var data = {};\n\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000000000000022d473030f116ddee9f6b43ac78ba3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x582d872a1b094fc48f5de31d3b73f2d9be47def1\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000f6f8096ac575b0\",\n            to: \"0x0b3F868E0BE5597D5DB7fEB59E1CADBb0fdDa50a\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            value: \"0x0\",\n            gas: \"0xe117\",\n            gasPrice: \"0xb2d05e00\",\n            data: \"0x095ea7b300000000000000000000000031c2f6fcff4f8759b3bd5bf0e1084a055615c768ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x5CA42204cDaa70d5c773946e69dE942b85CA6706\",\n          },\n        };\n      }else if (this.selectedChain === 'eip155:122'){\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000000000000013b3\",\n            to: \"0x620fd5fa44BE6af63715Ef4E65DDFA0387aD13F5\",\n          },\n        };\n      }\n\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        \"eip155\"\n      );\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_mint() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x4cacb\",\n            data: \"0xa64dfa75000000000000000000000000ed688002f3797599db8b4feacfe8b1dda0df1c8d000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cecb15396825a895ff8da8fc2d2c77a234dccee00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f6261667962656968643737366b6177706e71336f6f6a6635693274787a76617737737164656b34616a776472637472703261366f626b70723773792f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x30795\",\n            data: \"0xa64dfa75000000000000000000000000341b3687f0309778f08f29336b2c4b9c38b9f110000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f62616679626569686a6279676b68747a71376b68377434336266686e676e793236337668766f6578716a6d6e377161716166366e717a64743777712f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      }\n\n      let str = JSON.stringify(data);\n      console.log(\"-----长度--->\", str.length);\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        \"eip155\"\n      );\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_testRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n        `eip155:56`,\n        `https://eth-mainnet.g.alchemy.com/v2/NxUfYJUr-TQtEpLmSXhhD5pXn70GwsyV`\n      );\n      var data = {\n        method: \"eth_getBalance\",\n        params: [\"0x8D97689C9818892B700e27F316cc3E41e17fBeb9\", \"latest\"],\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_watchAsset() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xe0f63a424a4439cbe457d80e4f4b51ad25b2c56c\",\n              symbol: \"SPX6900\",\n              image:\n                \"https://assets.coingecko.com/coins/images/31401/standard/sticker_%281%29.jpg?1702371083\",\n              decimals: 8,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xeB51D9A39AD5EEF215dC0Bf39a8821ff804A0F01\",\n              symbol: \"LGNS\",\n              image: \"https://polygonscan.com/token/images/originlgns_32.png\",\n              decimals: 9,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0x031b41e504677879370e9dbcf937283a8691fa7f\",\n              symbol: \"FET\",\n              image: \"https://bscscan.com/token/images/fetch_32.png\",\n              decimals: 18,\n            },\n          },\n        };\n      }\n\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async ton_sendTransaction() {\n      var data  = {\n        \"messages\":[{\"address\":\"EQARULUYsmJq1RiZ-YiH-IJLcAZUVkVff-KBPwEmmaQGH6aC\",\"amount\":\"205000000\",\"payload\":\"te6cckEBAgEAhwABbQ+KfqUAAADNgG7tIEATEtAIAO87mQKicbKgHIk4pSPP4k5xhHqutqYgAB7USnesDnCcECwbgQMBAJUlk4VhgBD3JEg1TUr75iTijBghOKm/sxNDXUBl7CD6WMut0Q85x4RafwA/Es89DBXoTxuqxVFxyBbzt9Rav2HBUKl7hmkvLuKHLBCW57aK\"}],\n        \"validUntil\":1792481054,\n        \"network\":'-239'}\n      this.testTransaction = JSON.stringify(data)\n    },\n    ton_getAccount() {\n      this.testTransaction = \"这里是同步获取 不再需要点击 <<发送交易>>\"\n      const adapter = new OKXTONProvider(window.provider);\n      let result =   adapter.getAccount()\n      if (result) {\n        this.testboc = JSON.stringify(result);\n      } else {\n        this.testboc = 'null'\n      }\n    },\n\n    async sendTransactionAlert() {\n      //\n      const response = await fetch(`https://apitest.fireverse.ai/oauth/okx/getNonce?publicAddress=0x0cecb15396825a895ff8da8fc2d2c77a234dccee`);\n      const data = await response.json();\n      console.log(\"请求数据----\",JSON.stringify(data))\n      await this.personal_sign()\n      if (confirm(\"Are you want to sign message?\")) {\n        this.sendTransaction();\n      }\n\n      // window.open(\"https://www.okx.com/download?deeplink=okx%3A%2F%2Fweb3%2Fwallet%2Fconnect\",'_self')\n    },\n\n    async sendTransaction() {\n      if (this.selectedChain.startsWith(\"aptos\")\n          || this.selectedChain.startsWith(\"movement\")\n          || this.selectedChain.startsWith(\"solana\")\n          || this.selectedChain.startsWith(\"sonic\")\n          || this.selectedChain.startsWith(\"cosmos\")) {\n        return\n      }\n      console.log(\"sendTransaction\", window.provider);\n      console.log(\"sendTransaction内容11------\", this.testTransaction);\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (this.testTransaction && window.provider) {\n        // eslint-disable-next-line no-undef\n        const sendData = JSON.parse(this.testTransaction);\n        try {\n          console.log(\"sendTransaction-----22method>>\", sendData.method);\n\n          let chainId = \"eip155:1\";\n          if (this.selectedChain) {\n            chainId = this.selectedChain;\n            console.log(\n              \"sendTransaction-----this.selectedChain>>\",\n              this.selectedChain\n            );\n          }\n          console.log(\"windowOpen[click_1]: \", Date.now());\n          if (chainId == \"sui:mainnet\") {\n            const adapter = new SuiAdapter(window.provider);\n            var suiResult = \"invalid result\";\n            if (this.currentSuiMethod == \"sui_signTransaction\") {\n              suiResult = await adapter.signTransaction(\n                this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (\n              this.currentSuiMethod == \"sui_signAndExecuteTransaction\"\n            ) {\n              suiResult = await adapter.signAndExecuteTransaction(\n                this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signMessage\") {\n              console.log(\"signMessage----\", this.currentSuiTransaction);\n              suiResult = await adapter.signMessage(this.currentSuiTransaction);\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signPersonalMessage\") {\n              console.log(\n                \"signPersonalMessage----\",\n                this.currentSuiTransaction\n              );\n              suiResult = await adapter.signPersonalMessage(\n                this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_testRpc\") {\n              console.log(\"test rpc----\", this.currentSuiTransaction);\n              console.log(\n                `请求数据发送 rpc ----->> ${JSON.stringify(sendData)}`\n              );\n              const res = await window.provider.request(sendData, chainId);\n              console.log(`请求数据回调 rpc ----->> ${JSON.stringify(result)}`);\n              if (typeof res == \"string\") {\n                this.testboc = res;\n              } else {\n                this.testboc = JSON.stringify(res);\n              }\n            }\n            console.log(\"windowOpen[click_2]: \", Date.now());\n            return;\n          }else if(chainId === \"ton:-239\"){\n            console.log(\n                `请求数据发送 sendTransaction ---ton-->> ${JSON.stringify(sendData)}`\n            );\n            const adapter = new OKXTONProvider(window.provider);\n            let result =  await adapter.sendTransaction(sendData)\n            console.log(\n                `请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`\n            );\n            if (typeof result == \"string\") {\n              this.testboc = result;\n            } else {\n              this.testboc = JSON.stringify(result);\n            }\n            return\n          }\n\n          if (chainId == 'btc:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var btcResult = 'invalid result'\n\n            if (this.currentBtcMethod == 'btc_signMessage') {\n              btcResult = await btcAdapter.signMessage(chainId, this.currentBtcTransaction[\"signStr\"])\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_send') {\n              btcResult = await btcAdapter.send(chainId, this.currentBtcTransaction)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signPsbt') {\n              btcResult = await btcAdapter.signPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n\n              this.hexToBase64(btcResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentBtcMethod == 'btc_signPsbts') {\n              btcResult = await btcAdapter.signPsbts(chainId, this.currentBtcTransaction.psbtHexs, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_sendInscription') {\n              btcResult = await btcAdapter.sendInscription(chainId, this.currentBtcTransaction.address, this.currentBtcTransaction.inscriptionId, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signAndPushPsbt') {\n              btcResult = await btcAdapter.signAndPushPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            }else if (this.currentBtcMethod == 'btc_sendBitcoin') {\n              btcResult = await btcAdapter.sendBitcoin(chainId, this.currentBtcTransaction.toAddress, this.currentBtcTransaction.satoshis, this.currentBtcTransaction.options)\n\n              this.testboc = JSON.stringify(btcResult)\n            }\n            return\n          }\n\n          if (chainId == 'fractal:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var fractalResult = 'invalid result'\n\n            if (this.currentFractalMethod == 'fractal_signMessage') {\n              fractalResult = await btcAdapter.signMessage(chainId, this.currentFractalTransaction['signStr'])\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_send') {\n              fractalResult = await btcAdapter.send(chainId, this.currentFractalTransaction)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signPsbt') {\n              fractalResult = await btcAdapter.signPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.hexToBase64(fractalResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentFractalMethod == 'fractal_signPsbts') {\n              fractalResult = await btcAdapter.signPsbts(chainId, this.currentFractalTransaction.psbtHexs, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_sendInscription') {\n              fractalResult = await btcAdapter.sendInscription(chainId, this.currentFractalTransaction.address, this.currentFractalTransaction.inscriptionId, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signAndPushPsbt') {\n              fractalResult = await btcAdapter.signAndPushPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            }else if (this.currentFractalMethod == 'fractal_sendBitcoin') {\n              fractalResult = await btcAdapter.sendBitcoin(chainId, this.currentFractalTransaction.toAddress, this.currentFractalTransaction.satoshis, this.currentFractalTransaction.options)\n\n              this.testboc = JSON.stringify(fractalResult)\n            }\n\n            return\n          }\n\n          console.log(`请求数据发送 sendTransaction ----->> ${JSON.stringify(sendData)}`)\n          var result = await window.provider.request(sendData, chainId)\n          console.log(`请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`)\n\n          console.log(\"windowOpen[click_3]: \", Date.now());\n          if (typeof result == \"string\") {\n            this.testboc = result;\n          } else {\n            this.testboc = JSON.stringify(result);\n          }\n          console.log(\"方法数据回调 --this.testboc--\", this.testboc);\n        } catch (error) {\n          console.error(\"方法数据回调失败 --Error--\", error.message);\n\n          if (error.code === OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n            this.testboc = error.message;\n          } else {\n            this.testboc = \"签名错误！\" + error.message;\n          }\n        }\n      } else {\n        alert(\"交易数据为空，请选则或输入交易数据。\");\n      }\n    },\n\n    hexToBase64(hexStr) {\n      var bytes = [];\n      for (var i = 0; i < hexStr.length; i += 2) {\n        bytes.push(parseInt(hexStr.substr(i, 2), 16));\n      }\n      const buffer = new Uint8Array(bytes)\n      const blob = new Blob([buffer]);\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = function (e) {\n          var base64Data = e.target.result.split(\",\")[1]\n          resolve(base64Data);\n        };\n        reader.onerror = function (e) {\n          reject(e);\n        };\n        reader.readAsDataURL(blob);\n      });\n    },\n\n    async testTonSdk(isTwoSteps) {\n      // 1. connect\n      //  create sub providers for each namespace/chain\n      let nameSpacesChains = [];\n      let optSpaceChains = [];\n\n      let solanaChains = [\n        \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n        \"sonic:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n      ];\n      let hasEip155, hasSolana, hasSui, hasBtc, hasAptos, hasTon, hasCosmos = false\n\n      let suiChains = [\n        \"sui:mainnet\",\n      ];\n\n      let btcChains = [\n        \"btc:mainnet\",\n        \"fractal:mainnet\"\n      ];\n\n      const chains = Object.entries(this.availableChains)\n          .filter((chain) => chain[1].checked)\n          .map((chain) => chain[0]);\n      console.log(`chains  ===> ${chains.values()}`)\n      chains.forEach(function (chainId) {\n        console.log(`chains.forEach chainId  ===> ${chainId}`)\n\n        if (solanaChains.includes(chainId)) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"ton\")) {\n          nameSpacesChains.push(chainId)\n          hasTon = true\n          return\n        }\n        if (typeof chainId == 'string' && (chainId.startsWith(\"aptos\") || chainId.startsWith(\"movement\"))) {\n          nameSpacesChains.push(chainId)\n          hasAptos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId)\n          hasSolana = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"cosmos\")) {\n          nameSpacesChains.push(chainId)\n          hasCosmos = true\n          return\n        }\n\n        if (suiChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`);\n          nameSpacesChains.push(chainId);\n          hasSui = true;\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`)\n          nameSpacesChains.push(chainId)\n          hasBtc = true\n          return\n        }\n\n        hasEip155 = true\n        nameSpacesChains.push(`eip155:${chainId}`)\n      })\n\n\n      optionChains.forEach(function (chainId) {\n        if (solanaChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n        if (typeof chainId == \"string\" && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (suiChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          optSpaceChains.push(chainId)\n          return\n        }\n\n        optSpaceChains.push(`eip155:${chainId}`)\n      })\n\n      console.log(`namespaceChains  ===> ${JSON.stringify(nameSpacesChains)}`);\n      var connectData = {};\n      if (nameSpacesChains && nameSpacesChains.length > 0) {\n        var requireData = {};\n        if (isTwoSteps){\n          let includeEth = nameSpacesChains.includes(\"eip155:1\")\n          if (!includeEth){\n            alert(\"请选择ETH \");\n            return;\n          }\n        }\n\n        if (hasEip155) {\n          requireData.eip155 = {\n            chains: nameSpacesChains.filter((item) =>\n              item.startsWith(\"eip155\")\n            ),\n            defaultChain: nameSpacesChains.filter((item) =>\n              item.startsWith(\"eip155\")\n            )[0],\n          };\n        }\n        if (hasSolana) {\n          requireData.solana = {\n            chains: nameSpacesChains.filter(\n              (item) =>\n                item.startsWith(\"solana\") ||\n                item.startsWith(\"sonic\") ||\n                item.startsWith(\"svm\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n              (item) =>\n                item.startsWith(\"solana\") ||\n                item.startsWith(\"sonic\") ||\n                item.startsWith(\"svm\")\n            )[0],\n          };\n        }\n\n        if (hasCosmos) {\n          requireData.cosmos = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            )[0],\n          }\n        }\n        if (hasTon) {\n\n          //\n          let tonParams = {\n            ton_addr:{\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue){\n            tonParams = {\n              ton_addr:{\n                name: 'ton_addr',\n              },\n              ton_proof:{\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          requireData.ton = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"ton\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"ton\"))[0],\n            params:tonParams\n          };\n        }\n\n        if (hasSui) {\n          requireData.sui = {\n            chains: nameSpacesChains.filter((item) => item.startsWith(\"sui\")),\n            defaultChain: nameSpacesChains.filter((item) =>\n              item.startsWith(\"sui\")\n            )[0],\n            rpcMap: {\n              \"sui:mainnet\": \"https://www.okx.com/fullnode/sui/discover/rpc\"\n            }\n          };\n        }\n        if (hasAptos) {\n          requireData.aptos = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\"))[0]\n          }\n        }\n\n        if (hasBtc) {\n          let btcChains = nameSpacesChains.filter(item => item.startsWith(\"btc\") || item.startsWith(\"fractal\"))\n          requireData.btc = {\n            chains: btcChains,\n            defaultChain: btcChains[0]\n          }\n        }\n        console.log(`requireData  ===> ${JSON.stringify(requireData)}`)\n        connectData['namespaces'] = requireData;\n        console.log(JSON.stringify(connectData))\n      }\n\n      if (optSpaceChains && optSpaceChains.length > 0) {\n        var optData = {\n          eip155: {\n            chains: optSpaceChains.filter((item) => item.startsWith(\"eip155\")),\n            defaultChain: optSpaceChains.filter((item) =>\n              item.startsWith(\"eip155\")\n            )[0],\n          },\n        };\n        connectData[\"optionalNamespaces\"] = optData;\n      }\n\n      if (nameSpacesChains.length === 0 && optSpaceChains.length === 0) {\n        //未选择链\n        alert(\"请选择一条链\");\n        return;\n      }\n      console.log(\"=====>connectData \");\n      console.log(connectData);\n\n      var connectMethod;\n\n      if (!isTwoSteps){\n        connectData.requestMethods = this.getCurrentSelectedMethodData();\n      }\n\n      let datatest = {\"protocolVer\":1,\"topic\":\"8a7a4c3be73802d0ae2587123ade7bb79f27433b9aa3ca589a2208a2089eecfd\",\"clientId\":\"5f1bbf9eac92160affa7ef04d0a710817ddb6d8c22ebbd6263e86f059930b404\",\"requestId\":\"1731383250054\",\"dAppInfo\":{\"url\":\"connect.oker.vip\",\"origin\":\"https://connect.oker.vip\",\"name\":\"univer test dapp\",\"icon\":\"https://avatars.githubusercontent.com/u/37784886\"},\"requests\":[{\"name\":\"requestAccounts\",\"requiredNamespaces\":[{\"namespace\":\"aptos\",\"chains\":[\"aptos:637\"]}],\"optionalNamespaces\":[],\"connectRequestMethods\":[{\"chainId\":\"aptos:637\",\"method\":\"aptos_signMessage\",\"params\":{\"data\":{\"address\":true,\"application\":true,\"chainId\":true,\"message\":\"123 签名测试!\",\"nonce\":\"1234\"},\"applicationUrl\":\"https://connect.oker.vip\",\"prefix\":\"APTOS\",\"aptosChainId\":1}}]}],\"redirect\":\"none\"}\n      let json = JSON.stringify(datatest)\n      const utf8Array = new TextEncoder().encode(json);\n      let binary = '';\n      utf8Array.forEach(byte => {\n        binary += String.fromCharCode(byte);\n      });\n\n    let firstStr =  btoa(binary)\n        .replace(/\\+/g, '-')  // 替换 '+'\n        .replace(/\\//g, '_')  // 替换 '/'\n        .replace(/=+$/, '');  // 移除 '=';\n\n      console.log(\"第一中>>>>\",firstStr)\n\n    let urltest =  getAppWalletDeepLink(firstStr)\n      console.log(\"第二中>>>>\",urltest)\n\n    let urlencode =  encodeURIComponent(urltest)\n      console.log(\"第三中>>>>\",urlencode)\n\n      // connectData.sessionConfig = {\n      //   openUniversalUrl:true,\n      //   redirect:\"googlechrome://\"\n      // }\n\n      if (window.provider instanceof OKXUniversalConnectUI) {\n        connectMethod = window.provider.openModal(connectData);\n      } else {\n        connectMethod = window.provider.connect(connectData);\n      }\n\n      await connectMethod\n        .then((result) => {\n          // 2. set defaul chain\n          this.walletAddress = \"connected\";\n          if (this.isPC()) {\n            this.showModal = false;\n          }\n          if (result){\n            this.testboc = JSON.stringify(result)\n          }\n          if (isTwoSteps){\n            this.sendTransactionAlert()\n          }\n        })\n        .catch((error) => {\n          console.error(\"发生了错误：\", error);\n        });\n    },\n\n    getCurrentSelectedMethodData(){\n      var methodList = [];\n      this.selectedMethod.forEach(method =>{\n        switch (method) {\n          case \"wallet_addEthereumChain\":\n            methodList.push({\n              method: \"wallet_addEthereumChain\",\n              chainId:\"eip155:1\",\n              params: {\n                blockExplorerUrls: [\"https://explorer.fuse.io\"],\n                chainId: \"0x7a\",\n                chainName: \"Fuse\",\n                nativeCurrency: { name: \"Fuse\", symbol: \"FUSE\", decimals: 18 },\n                rpcUrls: [\"https://rpc.fuse.io\"],\n              },\n            })\n            break;\n          case \"personal_sign\":\n            methodList.push(\n              {\n                method: \"personal_sign\",\n                chainId: \"eip155:1\",\n                params: [\n                  \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n                ],\n              });\n            break;\n          case \"solana_signMessage\":\n            methodList.push(\n              {\n                \"chainId\": \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n                \"method\": \"solana_signMessage\",\n                \"params\": {\n                  \"message\": \"123 签名测试!\",\n                }\n              }\n            );\n            break;\n          case \"sui_signMessage\":\n          case \"sui_signPersonalMessage\": {\n            let suiData = [\n              76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n              109, 111, 118, 101,\n            ];\n            let uint8Array = new Uint8Array(suiData);\n            methodList.push(\n                {\n                  method: method,\n                  chainId: \"sui:mainnet\",\n                  params: {\n                    message: uint8Array,\n                  }\n                }\n            );\n            break;\n          }\n          case \"btc_signMessage\":\n\n            methodList.push(\n              {\n                method: \"btc_signMessage\",\n                chainId: \"btc:mainnet\",\n                params: {\n                  signStr: \"Welcome to UniSat!\\n\\nClick to sign in and accept the UniSat Terms of Service (https://unisat.io/terms-of-service.html) and Privacy Policy (https://unisat.io/privacy-policy.html).\\n    \\nThis request will not trigger a blockchain transaction.\\n    \\nYour authentication status will reset after 24 hours.\\n    \\nWallet address:\\nbc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\\n    \\nNonce:\\n162d70e3-8c21-4cfd-9a22-9bf0a4b7be51\\n\"\n                }\n              }\n            )\n            break;\n          case \"aptos_signMessage\":\n            methodList.push(\n              {\n                \"chainId\": \"aptos:mainnet\",\n                \"method\": \"aptos_signMessage\",\n                \"params\": {\n                  address: true,\n                  application: true,\n                  chainId: true,\n                  message: \"123 签名测试!\",\n                  nonce: \"1234\"\n                }\n              }\n            )\n            break;\n          case \"cosmos_signArbitrary\":\n            methodList.push(\n                {\n                  \"chainId\": \"cosmos:cosmoshub-4\",\n                  \"method\": \"cosmos_signArbitrary\",\n                  \"params\": {\n                    message: \"test cosmos\"\n                  }\n                }\n            )\n\n            break;\n          case \"test_noSupport_eth\":\n            methodList.push(\n                {\n                  chainId: \"eip155:1\",\n                  method: \"test_noSupport_eth\",\n                  params: {\n                    message: \"测试不支持的方法\",\n                  }\n                }\n            )\n            break;\n            //\n          default:\n\n            break;\n        }\n      })\n      return methodList\n\n    },\n\n\n    closeModal() {\n      this.showModal = false;\n    },\n\n    isPC() {\n      const userAgentInfo = navigator.userAgent;\n      console.log(\"current device ua is ===>\", userAgentInfo);\n\n      const Agents = [\n        \"Android\",\n        \"iPhone\",\n        \"SymbianOS\",\n        \"Windows Phone\",\n        \"iPad\",\n        \"iPod\",\n      ];\n      let flag = true;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = false;\n          break;\n        }\n      }\n      return flag;\n    },\n    isSafariOrChrome() {\n      const userAgentInfo = navigator.userAgent;\n      const Agents = [\"Safari\", \"Chrome\"];\n      let flag = false;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = true;\n          break;\n        }\n      }\n      return flag;\n    },\n\n    /// solana\n    async sol_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      let data = {\n        method: \"solana_signMessage\",\n        params: {\n          message: \"123 签名测试!\",\n          pubkey: \"\",\n        },\n      };\n      this.testTransaction = JSON.stringify(data);\n      let provider = new OKXSolanaProvider(window.provider);\n      let message = await provider.signMessage(\n          \"123 签名测试!\"\n      );\n      // \"ny7H1yisBitCanvZPTztudF4Jpok1iTyPEAeQPk3gFBWXGG1j7YZ4rmHhw6hFHqW86Mo2TDej5AVgLbTSMV7Kh7\"\n      let m = bs58.decode(\"4QFsar4z4gdsyjRaEfufNF7qqnLsL2ArEuGdL4PbxjzYJMci7em867aDJvxvGgk9gLMeLgidf4YJopyexX7VEhyu\")\n      const verify = ed25519.verify(m, new TextEncoder().encode(\"123 签名测试!\"),provider.getAccount(this.selectedChain).publicKey.toBytes());\n\n      console.log(\"verify\", verify)\n      if (typeof message == \"string\") {\n        this.testboc = message;\n      } else {\n        this.testboc = JSON.stringify(message);\n      }\n    },\n\n    async aptos_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      let data = {\n        address: true,\n        application: true,\n        chainId: true,\n        message: \"123 签名测试!\",\n        nonce: \"1234\"\n      }\n\n      let provider = new OKXAptosProvider(window.provider)\n      let message = await provider.signMessage(data, this.selectedChain)\n      this.testTransaction = JSON.stringify(data)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n          functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n          functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        },\n      });\n\n      // let data = {\n      //   \"arguments\": [\"100000\",[\"0\",\"0\",\"10533\"],[\"10\",\"5\",\"5\"],[\"false\",\"false\",\"true\"]],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x3\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\",\"0x73eb84966be67e4697fc5ae75173ca6c35089e802650f75422ab49a8729704ec::coin::DooDoo\",\"0x53a30a6e5936c0a4c5140daed34de39d17ca7fcae08f947c02e979cef98a3719::coin::LSD\",\"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::CurveV1\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x54cb0bb2c18564b86e34539b9f89cfe1186e39d89fce54e1cd007b8e61673a85::bin_steps::X80\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async sol_signVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(\n        provider.getAccount(\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\").address\n      );\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n         recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signTransaction(\n        transaction,\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAndSendVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n        transaction,\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllVersionedTransactions() {\n      let provider = new OKXSolanaProvider(window.provider);\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n        [transaction],\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signTransaction() {\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n         recentBlockhash: blockhash,\n      }).add(\n        SystemProgram.transfer({\n          fromPubkey: new PublicKey(provider.getAccount().address),\n          toPubkey: new PublicKey(provider.getAccount().address),\n          lamports: 1000,\n        })\n      );\n\n      this.testTransaction = safeJsonStringify(transaction)\n      let result = await provider.signTransaction(\n        transaction,\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllTransactions() {\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n        SystemProgram.transfer({\n          fromPubkey: new PublicKey(provider.getAccount().address),\n          toPubkey: new PublicKey(provider.getAccount().address),\n          lamports: \"100\",\n        })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n        [transaction],\n        this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    getSolConnect() {\n      let rpc = \"https://www.okx.com/fullnode/sol/discover/rpc\"\n      if (this.selectedChain === \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\") {\n        rpc = \"https://www.okx.com//fullnode/sol/discover/rpc\"\n      } else if (this.selectedChain === \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\"){\n        rpc = \"https://www.okx.com/fullnode/soltestnet/discover/rpc\"\n      } else if (this.selectedChain === \"sonic:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\") {\n        rpc = \"https://www.okx.com/fullnode/sonic/testnet/discover/rpc/sonic-testnet-rpc-light\"\n      }\n      return rpc\n    },\n\n    async sol_signAndSendTransaction() {\n\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n        SystemProgram.transfer({\n          fromPubkey: new PublicKey(provider.getAccount().address),\n          toPubkey: new PublicKey(provider.getAccount().address),\n          lamports: \"100\",\n        })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n        transaction,\n        this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async cosmos_signArbitrary() {\n      let provider = new OKXCosmosProvider(window.provider)\n      let message = await provider.signArbitrary(this.selectedChain, provider.getAccount(this.selectedChain).address, \"test cosmos\")\n      if (typeof message == \"string\") {\n        this.testboc = message;\n      } else {\n        this.testboc = JSON.stringify(message);\n      }\n    },\n\n    async cosmos_signAmino(){\n      let provider = new OKXCosmosProvider(window.provider)\n      // const rpcUrl = 'https://osmosis-rpc.publicnode.com:443';\n      // const client = await StargateClient.connect(rpcUrl);\n      // const height = await client.getHeight();\n      // let address = provider.getAccount(this.selectedChain).address\n      // const sequence = await client.getSequence(address)\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      // let signDoc = makeSignDoc(\n      //     transaction.msgs,\n      //     transaction.fee,\n      //     this.selectedChain.split(\":\")[1],\n      //     transaction.memo,\n      //     transaction.accountNumber,\n      //     transaction.sequence,\n      // )\n      let signDoc = {\n        \"chain_id\": \"osmosis-1\",\n        \"account_number\": \"630104\",\n        \"sequence\": \"480\",\n        \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]},\n        \"msgs\": [{\n          \"type\": \"osmosis/poolmanager/swap-exact-amount-in\",\n          \"value\": {\n            \"sender\": \"osmo1u6lts9ng4etxj0zdaxsada6zgl8dudpgelmuyu\",\n            \"routes\": [{\n              \"pool_id\": \"1096\",\n              \"token_out_denom\": \"ibc/987C17B11ABC2B20019178ACE62929FE9840202CE79498E29FE8E5CB02B7C0A4\"\n            }, {\n              \"pool_id\": \"611\",\n              \"token_out_denom\": \"ibc/27394FB092D2ECCD56123C74F36E4C1F926001CEADA9CA97EA622B25F41E5EB2\"\n            }],\n            \"token_in\": {\"denom\": \"uosmo\", \"amount\": \"100\"},\n            \"token_out_min_amount\": \"8\"\n          }\n        }],\n        \"memo\": \"FE\",\n        \"timeout_height\": \"23603788\",\n        \"signOptions\": {\n          \"useOneClickTrading\": false,\n          \"preferNoSetFee\": true,\n          \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]}\n        }\n      }\n\n\n\n\n\n\n\n      // let signOption = {\n      //   memo: true, // optional\n      //   fee: true, // optional\n      //   gasRate: {\n      //     // optional\n      //     average: \"0.2\",\n      //     low: \"0.02\",\n      //     tiny: \"0.002\",\n      //   },\n      // }\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signAmino(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, signDoc)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    messageToBuffer(message) {\n      var buffer = Buffer.from([]);\n      try {\n        if (typeof message === \"string\") {\n          buffer = Buffer.from(message.replace(\"0x\", \"\"), \"hex\");\n        } else {\n          buffer = Buffer.from(message);\n        }\n      } catch (err) {\n        console.log(`messageToBuffer error: ${err}`);\n      }\n      return buffer;\n    },\n\n\n\n    async cosmos_signDirect() {\n      let provider = new OKXCosmosProvider(window.provider)\n\n      let signDoc = {\n        \"bodyBytes\": this.messageToBuffer(\"0x0ac1010a292f6962632e6170706c69636174696f6e732e7472616e736665722e76312e4d73675472616e736665721293010a087472616e7366657212096368616e6e656c2d301a0d0a05756f736d6f120431303030222b6f736d6f3175366c7473396e67346574786a307a64617873616461367a676c386475647067656c6d7579752a2d636f736d6f733175366c7473396e67346574786a307a64617873616461367a676c386475647067337967766a773207080410ebe3f90a3880b0bcafd18cec8218\"),\n        \"authInfoBytes\": this.messageToBuffer(\"0x0a510a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a2102446e19e94ac0e83ea896d2712507577eb39fbdd2d6ae9f0fc0b9759f1fbaba9012040a02080118e00312140a0e0a05756f736d6f1205323530303010859a11\"),\n        \"chainId\": \"osmosis-1\",\n        \"accountNumber\": \"630104\",\n      }\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      this.testTransaction = safeJsonStringify(signDoc)\n      bs58.encode(Buffer.from(\"\"))\n      let res = await provider.signDirect(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, transaction)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    // Sui methods\n    sui_getAccount() {\n      let provider = new SuiAdapter(window.provider)\n      let result = provider.getAccount()\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n\n    //对单个交易签名（不发送)\n    async sui_signMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.testTransaction = JSON.stringify(input);\n      this.currentSuiTransaction = input;\n      this.currentSuiMethod = \"sui_signMessage\";\n    },\n\n    async sui_signPersonalMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.testTransaction = JSON.stringify(input);\n      this.currentSuiTransaction = input;\n      this.currentSuiMethod = \"sui_signPersonalMessage\";\n    },\n\n    //签名并发送交易\n    sui_signAndExecuteTransaction() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n        \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.testTransaction = JSON.stringify(input);\n      this.currentSuiTransaction = input;\n      this.currentSuiMethod = \"sui_signAndExecuteTransaction\";\n    },\n\n    async deeplinkActionTest() {\n      // let url = \"okx://web3/wallet/connect\"\n      let url =\n        \"https://www.okx.com/download?deeplink=okx%3A%2F%2Fweb3%2Fwallet%2Fconnect\";\n      await this.performAsyncTask();\n      window.open(url, \"_self\");\n    },\n    async performAsyncTask() {\n      // 模拟耗时的异步操作\n      return new Promise((resolve) => {\n        setTimeout(() => {\n          resolve(\"Task completed\");\n        }, 5000); // 模拟耗时5秒\n      });\n    },\n\n    sui_signTransaction2() {\n      // 定义要转移的金额和目标地址\n      const amount = 109; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n        \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n      this.testTransaction = JSON.stringify(input);\n      this.currentSuiTransaction = input;\n      this.currentSuiMethod = \"sui_signTransaction\";\n    },\n\n    //对交易块进行签名\n    async sui_signTransaction() {\n      // const tx = new Transaction();\n      // console.log(tx)\n      // // 定义要转移的金额和目标地址\n      // const amount = 100; // 需要转移的金额\n      // const recipientAddress = '0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2'; // 目标地址\n      // const [coin] = tx.splitCoins(tx.gas, [amount]);\n      // tx.setSender('0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2')\n      // tx.transferObjects([coin], recipientAddress);\n      // console.log(\"====rpcUrl: \", rpcUrl)\n\n      let str =\n        '{\"version\":1, \"expiration\":null,\"gasConfig\":{\"payment\":[{\"objectId\":\"0x04a1673fa847afa845e477925c271cb3e8cf0d19cfb830e8c3e841adc299cbca\",\"version\":\"391804724\",\"digest\":\"AHXon1Qvb1xUj5r7aaHyHfLgGhdeNXQ1V3RaNW755mVK\"}],\"owner\":\"0xe62ee1c436125b5b6224cb11b0fa9fbf2c313743aea84eead0450ab49dd0d6ed\",\"price\":\"750\",\"budget\":\"8177120\"},\"inputs\":[{\"kind\":\"Input\",\"type\":\"object\",\"index\":0,\"value\":\"0x0000000000000000000000000000000000000000000000000000000000000006\"},{\"kind\":\"Input\",\"type\":\"object\",\"index\":1,\"value\":\"0xbb4e2f4b6205c2e2a2db47aeb4f830796ec7c005f88537ee775986639bc442fe\"},{\"kind\":\"Input\",\"type\":\"object\",\"index\":2,\"value\":\"0x96df0fce3c471489f4debaaa762cf960b3d97820bd1f3f025ff8190730e958c5\"},{\"kind\":\"Input\",\"index\":3,\"value\":{\"Pure\":[0]},\"type\":\"pure\"},{\"kind\":\"Input\",\"index\":4,\"value\":{\"Pure\":[0,202,154,59,0,0,0,0]},\"type\":\"pure\"},{\"kind\":\"Input\",\"index\":5,\"value\":{\"Pure\":[0,202,154,59,0,0,0,0]},\"type\":\"pure\"},{\"kind\":\"Input\",\"type\":\"object\",\"index\":6,\"value\":\"0xaaf735bf83ff564e1b219a0d644de894ef5bdc4b2250b126b2a46dd002331821\"},{\"kind\":\"Input\",\"type\":\"object\",\"index\":7,\"value\":\"0xf87a8acb8b81d14307894d12595541a73f19933f88e1326d5be349c7a6f7559c\"}],\"transactions\":[{\"kind\":\"SplitCoins\",\"coin\":{\"kind\":\"GasCoin\"},\"amounts\":[{\"kind\":\"Input\",\"index\":4,\"value\":{\"Pure\":[0,202,154,59,0,0,0,0]},\"type\":\"pure\"}]},{\"kind\":\"MoveCall\",\"target\":\"0x834a86970ae93a73faf4fff16ae40bdb72b91c47be585fff19a2af60a19ddca3::incentive_v2::entry_deposit\",\"typeArguments\":[\"0x2::sui::SUI\"],\"arguments\":[{\"kind\":\"Input\",\"type\":\"object\",\"index\":0,\"value\":\"0x0000000000000000000000000000000000000000000000000000000000000006\"},{\"kind\":\"Input\",\"type\":\"object\",\"index\":1,\"value\":\"0xbb4e2f4b6205c2e2a2db47aeb4f830796ec7c005f88537ee775986639bc442fe\"},{\"kind\":\"Input\",\"type\":\"object\",\"index\":2,\"value\":\"0x96df0fce3c471489f4debaaa762cf960b3d97820bd1f3f025ff8190730e958c5\"},{\"kind\":\"Input\",\"index\":3,\"value\":{\"Pure\":[0]},\"type\":\"pure\"},{\"kind\":\"Result\",\"index\":0},{\"kind\":\"Input\",\"index\":5,\"value\":{\"Pure\":[0,202,154,59,0,0,0,0]},\"type\":\"pure\"},{\"kind\":\"Input\",\"type\":\"object\",\"index\":6,\"value\":\"0xaaf735bf83ff564e1b219a0d644de894ef5bdc4b2250b126b2a46dd002331821\"},{\"kind\":\"Input\",\"type\":\"object\",\"index\":7,\"value\":\"0xf87a8acb8b81d14307894d12595541a73f19933f88e1326d5be349c7a6f7559c\"}]}]}';\n\n      /// 从给定的交易中，反序列化一个transaction对象\n      const tx = SuiTransaction.from(str);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 记录当前交易的transaction，用来显示\n      this.testTransaction = JSON.stringify(input);\n      /// 记录当前的transaction对象，用来交易\n      this.currentSuiTransaction = input;\n      /// 记录当前的交易方法，用来SuiAdaper分发\n      this.currentSuiMethod = \"sui_signTransaction\";\n    },\n\n    async sui_requestRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n        `sui:mainnet`,\n        `https://fullnode.mainnet.sui.io:443`\n      );\n      var data = {\n        method: \"suix_getBalance\",\n        params: [\n          \"0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae\",\n          \"0x168da5bf1f48dafc111b0a488fa454aca95e0b5e::usdc::USDC\",\n        ],\n      };\n      this.testTransaction = JSON.stringify(data);\n      this.currentSuiTransaction = JSON.stringify(data);\n      this.currentSuiMethod = \"sui_testRpc\";\n    },\n\n    async sui_signAndExecuteTransaction_stake() {\n      if (this.testboc.length == 0) {\n        alert(\"输入input.serilize()读取到的参数\");\n        return;\n      }\n      let str = this.testboc;\n\n      let tx;\n      try {\n        /// 从给定的交易中，反序列化一个transaction对象\n        tx = SuiTransaction.from(str);\n      } catch (error) {\n        alert(\"参数错误\");\n      }\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 记录当前交易的transaction，用来显示\n      this.testTransaction = JSON.stringify(input);\n      /// 记录当前的transaction对象，用来交易\n      this.currentSuiTransaction = input;\n      /// 记录当前的交易方法，用来SuiAdaper分发\n      this.currentSuiMethod = \"sui_signAndExecuteTransaction\";\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 102; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n        \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n        input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n\n      this.testTransaction = JSON.stringify(input);\n      this.currentSuiTransaction = input;\n      this.currentSuiMethod = \"sui_signTransaction\";\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signAndExecuteTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n        \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n        input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n\n      this.testTransaction = JSON.stringify(input);\n      this.currentSuiTransaction = input;\n      this.currentSuiMethod = \"sui_signAndExecuteTransaction\";\n    },\n\n    /// generate txBytes and txSerialize\n    async generateTsBytesAndSerizlize(input) {\n      /// txBytes and txSerialize may be constructed in advance by the dapp side\n      let resultTuple = [\"\", \"\"];\n      if (\n        \"txBytes\" in input &&\n        input.txBytes.length > 0 &&\n        \"txSerialize\" in input &&\n        input.txSerialize.length > 0\n      ) {\n        resultTuple = [input.txBytes, input.txSerialize];\n      }\n\n      /// Otherwise, a transactionBlock parameter is required.\n      if (!(\"transactionBlock\" in input)) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      if (this.walletAddress != \"connected\") {\n        alert(\"请先连接钱包\");\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      let senderAccounts = window.provider.requestAccountsWithNamespace(\"sui\");\n      if (senderAccounts.length == 0) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      try {\n        let rpcUrl = getFullnodeUrl(\"mainnet\");\n        rpcUrl = \"https://www.okx.com/fullnode/sui/discover/rpc\"\n        const suiClient = new SuiClient({ url: rpcUrl });\n\n        /// sender is required\n        input.transactionBlock.setSender(senderAccounts[0]);\n        const result = await input.transactionBlock.build({\n          client: suiClient,\n        });\n        const txBytes = Buffer(result).toString(\"base64\");\n        const txSerialize = await SuiTransaction.from(txBytes).toJSON();\n        resultTuple = [txBytes, txSerialize];\n      } catch (error) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      return new Promise((resolve) => {\n        resolve(resultTuple)\n      })\n    },\n\n    btc_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentBtcTransaction = params\n      this.currentBtcMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n\n    fractal_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentFractalTransaction = params\n      this.currentFractalMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n    handleModalsSelect(modals) {\n      selectedModals = modals;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedDeepLink,\n            modals: modals.length === 3 ? \"all\" : modals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n\n    handleReturnStrategySelect(returnStrategy) {\n      selectedReturnStrategy = returnStrategy === \"deeplink\" ? this.deeplink : returnStrategy;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n\n    handleReturnStrategyDeeplink(deeplink) {\n      selectedReturnStrategy = deeplink;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: deeplink,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n\n    handleLanguageSelect(language) {\n      selectedLanguage = language;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: language,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n    handleConnectMethodsSelect() {\n      console.log(\"当前的方法 this.selectedMethod>>>>\",this.selectedMethod);\n    },\n\n\n\n    handleThemeSelect(theme) {\n      selectedTheme = theme;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: theme,\n          },\n        };\n      }\n    },\n  },\n  created() {\n    // for (const eventName of Object.values(OKX_TON_CONNECTION_AND_TRANSACTION_EVENT)) {\n    //   console.log(eventName);\n    //   window.addEventListener(eventName, (event) => {\n    //     console.log(eventName,event.detail)\n    //     this.currentStatus = eventName\n    //   });\n    // }\n  },\n\n  mounted() {\n\n    var scriptTag = document.createElement(\"script\");\n    scriptTag.src = \"https://telegram.org/js/telegram-web-app.js\";\n    scriptTag.id = \"tgsdk\";\n    document.getElementsByTagName('head')[0].appendChild(scriptTag);\n\n    this.connectReady = true;\n    document.title = \"OKX Connect\";\n    var initCall;\n    if (!this.withUI) {\n      initCall = OKXUniversalProvider.init({\n        dappMetaData: {\n          name: \"univer test dapp\",\n          icon: \"https://avatars.githubusercontent.com/u/37784886\",\n        },\n      });\n    } else {\n      initCall = OKXUniversalConnectUI.init({\n        dappMetaData: {\n          icon: \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\",\n          name: \"OKX WalletConnect UI Demo\",\n        },\n        actionsConfiguration: {\n          returnStrategy: selectedReturnStrategy,\n          modals: \"all\",\n        },\n        language: selectedLanguage,\n        uiPreferences: {\n          theme: selectedTheme\n        },\n      });\n    }\n\n    initCall.then((provider) => {\n      window.provider = provider;\n      console.log(\"init finished:\", provider);\n      console.log(\"init finished session:\", JSON.stringify(provider.session));\n\n      if (provider.session?.namespaces) {\n        const newChains = [];\n        console.log(\"namespaces\", provider.session.namespaces);\n        Object.entries(provider.session.namespaces).forEach(([key, value]) => {\n          if (key === \"eip155\") {\n            value.chains.forEach((chain) => {\n              newChains.push(parseInt(chain.substring(7)));\n            });\n          } else if (key === \"aptos\") {\n            value.chains.forEach((chain) => {\n              if (chain === \"aptos:637\") {\n                newChains.push(\"aptos:mainnet\")\n              } else {\n                newChains.push(\"movement:testnet\")\n              }\n            })\n          }\n          else {\n            value.chains.forEach((chain) => {\n              newChains.push(chain);\n            });\n          }\n        });\n\n        console.log(\"existing chains:\", newChains);\n        this.initChains(newChains);\n      } else {\n        this.initChains([]);\n      }\n\n      provider.on(\"display_uri\", (uri) => {\n        if (this.isPC()) {\n          if (uri && !this.withUI) {\n            this.qrValue = uri;\n            this.showModal = true;\n          }\n        }\n        console.log(\"通知>>>display_uri  ==> \", uri);\n      });\n\n      provider.on(\"connect\", (session) => {\n        console.log(\"通知>>>get connect session\", session);\n        // if (session.connectMethodsReply) {\n        //   for (const methodItem of session.connectMethodsReply) {\n        //     if (\"method\" in methodItem && methodItem.method === \"aptos_signMessage\"){\n        //       let successResult = methodItem.result\n        //       if (successResult && \"address\" in successResult && \"application\" in successResult\n        //           && \"fullMessage\" in successResult && \"message\" in successResult\n        //       && \"signature\" in successResult){\n        //         // console.log(\"apt_signMessage\", Buffer.from(successData, 'hex'))\n        //         // console.log(\"apt_signMessage\", successData)\n        //         let signStr = successResult.signature\n        //         if (signStr.startsWith(\"0x\")) {\n        //           signStr = signStr.slice(2, signStr.length)\n        //         }\n        //         const verified = nacl.sign.detached.verify(\n        //             Buffer.from(successResult.fullMessage),\n        //             Buffer.from(signStr, 'hex'),\n        //             Buffer.from(publicKey, 'hex'),\n        //         );\n        //         console.log(\"signMessage\", verified);\n        //\n        //       }\n        //\n        //     }\n        //\n        //\n        //   }\n        //\n        // }\n\n\n      });\n      provider.on(\"reconnect\", (session) => {\n        console.log(\"通知>>>get reconnect session\", session);\n        this.walletAddress = \"connected\";\n      });\n      provider.on(\"disconnect\", ({ topic }) => {\n        console.log(`通知>>>get disconnect  ${topic}`);\n        this.walletAddress = \"disconnecteddddd\";\n      });\n      provider.on(\"session_delete\", ({ topic }) => {\n        console.log(`通知>>>get session_delete  ${topic}`);\n      });\n      provider.on(\"session_update\", (session) => {\n        console.log(`通知>>>get session_update `, JSON.stringify(session));\n      });\n    });\n  },\n};\n</script>\n","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signMessage()\">signMessage(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_send()\">send(BTC)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendBitcoin()\">sendBitcoin(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signPsbt_up()\">signPsbt(上架NFT)</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"btc_signAndPushPsbt_up()\">signAndPushPsbt(上架NFT)</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在OKX App选择要上架的Btc NFT，点击【上架】\n        </li>\n        <li>\n          2. 弹出签名面板，点开高级选项，查看\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出上架流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendInscription()\">sendInscription(BTC)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Btc NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount\n    }\n  },\n  methods: {\n    btc_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to UniSat!\\n\\nClick to sign in and accept the UniSat Terms of Service (https://unisat.io/terms-of-service.html) and Privacy Policy (https://unisat.io/privacy-policy.html).\\n    \\nThis request will not trigger a blockchain transaction.\\n    \\nYour authentication status will reset after 24 hours.\\n    \\nWallet address:\\nbc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\\n    \\nNonce:\\n162d70e3-8c21-4cfd-9a22-9bf0a4b7be51\\n\"\n      };\n      this.$emit('generateTransactionParams', params, \"btc_signMessage\")\n    },\n\n    btc_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"btc_send\")\n    },\n\n    btc_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"btc_sendBitcoin\")\n    },\n\n    btc_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"btc_signPsbt\")\n    },\n\n    btc_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"btc_signAndPushPsbt\")\n    },\n\n    btc_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"btc_sendInscription\")\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./BtcTransactionPanel.vue?vue&type=template&id=17e9106e&scoped=true\"\nimport script from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./BtcTransactionPanel.vue?vue&type=style&index=0&id=17e9106e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-17e9106e\"]])\n\nexport default __exports__","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signMessage()\">signMessage(Fractal)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_send()\">send(Fractal)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_sendBitcoin()\">sendBitcoin(Fractal)</el-button>\n\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signPsbt_up()\">signPsbt(上架NFT)</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_signAndPushPsbt_up()\">signAndPushPsbt(上架NFT)</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在OKX App选择要上架的Fractal NFT，点击【上架】\n        </li>\n        <li>\n          2. 弹出签名面板，点开高级选项，查看\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出上架流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_sendInscription()\">sendInscription(Fractal)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Fractal NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount\n    }\n  },\n  methods: {\n    fractal_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to UniSat!\\n\\nClick to sign in and accept the UniSat Terms of Service (https://unisat.io/terms-of-service.html) and Privacy Policy (https://unisat.io/privacy-policy.html).\\n    \\nThis request will not trigger a blockchain transaction.\\n    \\nYour authentication status will reset after 24 hours.\\n    \\nWallet address:\\nbc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\\n    \\nNonce:\\n162d70e3-8c21-4cfd-9a22-9bf0a4b7be51\\n\"\n      };\n      this.$emit('generateTransactionParams', params, \"fractal_signMessage\")\n    },\n\n    fractal_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_send\")\n    },\n\n    fractal_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_sendBitcoin\")\n    },\n\n    fractal_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"fractal_signPsbt\")\n    },\n\n    fractal_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"fractal_signAndPushPsbt\")\n    },\n\n    fractal_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"fractal_sendInscription\")\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./FractalTransactionPanel.vue?vue&type=template&id=02b5b8a5&scoped=true\"\nimport script from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./FractalTransactionPanel.vue?vue&type=style&index=0&id=02b5b8a5&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-02b5b8a5\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=11c2d856&scoped=true\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=11c2d856&scoped=true&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-11c2d856\"]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\nimport App from './App.vue'\n\nconst app = createApp(App)\n\napp.use(ElementPlus)\napp.mount('#app')","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkokxconnectdemo\"] = self[\"webpackChunkokxconnectdemo\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(92308); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["require","__awaiter","this","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","OKXBtcProvider","_1","constructor","caip","provider","getUniversalProvider","getAddressForChainId","chainId","_a","_b","ns","checkChainId","undefined","OKXConnectError","OKX_CONNECT_ERROR_CODES","UNKNOWN_ERROR","accounts","session","namespaces","filter","account","startsWith","length","address","split","getAccount","_c","extra","publicKey","signMessage","signStr","type","params","from","ret","request","method","errorData","error","sendBitcoin","toAddress","satoshis","options","to","toString","feeRate","send","txhash","input","checkParameters","signPsbt","psbtHex","signPsbts","psbtResults","results","JSON","parse","catch","psbtHexs","signAndPushPsbt","sendInscription","inscriptionId","extension","coinId","protocolId","atomicSuffix","ordinalsSuffix","toLowerCase","endsWith","removeSuffix","scenario","txType","batchBean","coinAmount","nftId","str","suffix","slice","keys","unexistKeys","forEach","key","push","console","log","join","includes","namespaceKey","_","OKXCosmosProvider","core_1","uint8array_extras_1","_d","_e","NameSpaceKeyCosmos","accountArray","algo","bech32Address","pubKey","hexToUint8Array","signArbitrary","signerAddress","data","base64Encoded","stringToBase64","signDoc","chain_id","account_number","sequence","fee","gas","amount","msgs","memo","signData","signAmino","signOptions","resData","signed","signature","signDirect","object","bodyBytes","bufferToHex","authInfoBytes","accountNumber","res","messageToBuffer","message","buffer","Uint8Array","replace","toUint8Array","err","buf","uint8ArrayToHex","__importDefault","mod","__esModule","OKXUniversalProvider","utils_1","eip155_1","sui_1","constants_1","eventemitter3_1","client_1","namespaces_1","solana_1","btc_1","aptos_1","ton_1","cosmos_1","init","opts","initialize","rpcProviders","events","default","providerOpts","args","chain","connected","NOT_CONNECTED_ERROR","namespace","requestParam","buildRequestParamFromRequest","getProvider","logDebug","stringify","validateChain","keyArr","assign","enable","client","connectOpts","connect","requestAccounts","disconnect","called","onRequestSent","disconnectAndEmit","cleanup","engine","connectionManager","emit","topic","aptosChainNameToGeneralId","replaceAptos","aptosNameSpace","realNS","replaceAptosInner","aptos","optionAptosNameSpace","optionalNamespaces","realOptionNS","chains","map","defaultChain","replaceAptosGeneralIdWithNetName","replaceSessionAptos","index","values","disconnectInner","getCurrentConnectionReady","ALREADY_CONNECTED_ERROR","sessionConfig","openUniversalUrl","isMobileUserAgent","setNamespaces","onConnect","on","event","listener","once","removeListener","off","setDefaultChain","rpcUrl","test","checkStorage","sessionInfoStr","getFromStore","sessionInfo","restoreconnect","createProviders","setTimeout","registerEventListeners","url","window","location","hostname","origin","dappMetaData","setGlobal","SignClient","providersToCreate","Set","parseNamespaceKey","namespacesValue","currentNameSpace","Eip155Provider","opts1","solanaProvider","sonicProvider","svmProvider","optsTon","tonProvider","optsSui","suiProvider","SuiProvider","name","optsBtc","btcProvider","fbProvider","aptosProvider","moveProvider","cosmosProvider","addDisconnectListener","PROVIDER_EVENTS","DEFAULT_CHAIN_CHANGED","caip2ChainId","onChainChanged","UPDATE_NAMESPACES","nameSpaces","nameSpacekey","persist","icon","dappInfo","redirect","isChainNamespaceInSession","chainsArr","defaultNamespace","getDefaultChain","namespaceStr","requestAccountsWithNamespace","requestDefaultChainWithNamespace","caip2Chain","sessionProperties","saveSessionContent","getSessionContent","showRequestModal","__createBinding","create","o","m","k","k2","desc","getOwnPropertyDescriptor","writable","configurable","enumerable","get","__exportStar","p","prototype","hasOwnProperty","call","NameSpaceKeyBtc","NameSpaceKeySui","OKXUniversalProvider_1","OKXBtcProvider_1","OKXCosmosProvider_1","ConnectMethodUtils_1","ISignClient","metaData","super","Engine","ConnectionManager","connectRequest","requestAccountItem","requiredNamespaces","nameSpaceToConnectWalletNameSpace","requestMethods","connectRequestMethods","connectMethodsToConnectWalletMethods","universalConnect","metadata","info","encodeParams","encodeConnectParams","getUniversalLink","getAppWalletDeepLink","fillParamsToSession","isIos","openOKXWallet","response","requestId","code","onAck","getGlobal","openOKXDeeplinkWithFallback","standardDeeplink","connectSupportMethods","connectMethodsResponseUpdate","bs58_1","isArray","Array","isRecord","connectMethodsReply","methodItem","requireNameSpace","includeEip155","some","space","includeChain","item","paramsArr","firstParam","firstObj","convertedArray","uint8Array","decoder","TextDecoder","b64encoded","btoa","decode","atob","encode","stringToUint8Array","aptosParams","currentURL","protocol","signChainId","applicationUrl","prefix","aptosChainId","cosmosChain","freeze","getAccountsChains","isCaipNamespace","NameSpaceKeyEip155","NameSpaceKeySOL","NameSpaceKeyAptos","NameSpaceKeyTON","mergeRpcMap","targetRpcMap","sourceRpcMap","mergeNamespaces","target","source","rpcMap","GENERIC_SUBPROVIDER_NAME","RPC_URL","STORAGE","CONTEXT","WC_VERSION","PROTOCOL","RELAY_URL","LOGGER","JsonRpcConnection_1","JsonRpcProvider_1","AptosProvider","httpProviders","createHttpProviders","updateNamespace","getAccounts","methods","METHOD_NOT_SUPPORTED","setHttpProvider","Error","http","parsedChainId","getChainId","parsedRpc","getRpcUrl","httpProvider","createHttpProvider","getHttpProvider","rpc","JsonRpcProvider","JsonRpcConnection","BtcProvider","logError","CosmosProvider","parseInt","updateRequestParams","isDic","switchChainId","decimalNumber","isNaN","selectedChainId","chainNum","paramsChainId","paramsChainString","String","Number","adaptArray","messageObj","addressObj","isEqual","chainAddress","messages","typedDataJson","secondObj","hexChainId","getHexChainIdFromRequest","isChainApproved","handleSwitchChain","addEthereumChain","resultData","nameSpace","rpcUrls","eip155","cross_fetch_1","core_2","DEFAULT_HTTP_HEADERS","Accept","DEFAULT_HTTP_METHOD","DEFAULT_FETCH_OPTS","headers","disableProviderPing","EventEmitter","isAvailable","registering","isHttpUrl","connecting","open","arguments","register","close","onClose","payload","body","safeJsonStringify","json","onPayload","onError","id","jsonrpc","onOpen","parseError","safeJsonParse","formatJsonRpcError","parseConnectionError","types_1","IJSONRpcProvider","connection","hasRegisteredEventListeners","setConnection","context","requestStrict","formatJsonRpcRequest","getBigIntRpcId","isJsonRpcError","isJsonRpcResponse","reason","_error","SolanaProvider","getPubkey","getWalletAddress","components","__rest","s","t","indexOf","getOwnPropertySymbols","i","propertyIsEnumerable","TONProvider","validUntil","newParams","fromAddress","ton_addr","boc","IJSONRpcConnection","opt","globals","projectId","parseChainId","reference","convertChainIdToNumber","mergeArrays","CAIP_DELIMITER","a","b","_createElementBlock","_hoisted_1","_createVNode","_component_el_container","_withCtx","_component_el_header","_cache","_createTextVNode","_component_el_main","_component_el_card","class","header","_createElementVNode","_component_el_row","_component_el_col","span","_toDisplayString","$options","_ctx","currentStatus","_component_el_checkbox","modelValue","withUI","$event","onChange","handleWithUI","style","_component_el_select","modals","placeholder","handleModalsSelect","multiple","_component_el_option","label","returnStrategy","handleReturnStrategySelect","_Fragment","_renderList","returnStrategies","strategy","_createBlock","_component_el_input","deeplink","handleReturnStrategyDeeplink","disabled","_createCommentVNode","language","handleLanguageSelect","locales","locale","theme","handleThemeSelect","THEME","LIGHT","DARK","selectedMethod","handleConnectMethodsSelect","connectMethods","tonProofValue","gutter","align","availableChains","checked","areChainsInit","isOptionalChecked","handleOptionChange","_component_el_button","onClick","connectBtnClicked","connectStatusStr","connectBtnAndSignClicked","connectAndSignStr","disconnectAction","walletAddress","disconnectStatusStr","_Teleport","showModal","closeModal","_withModifiers","_component_qrcode_vue","qrValue","size","level","_component_el_tabs","activeTab","onTabClick","clickActiveTab","_component_el_tab_pane","eth_requestAccounts","eth_chainId","wallet_switchEthereumChain","wallet_addEthereumChain","personal_sign","eth_signTypedData_v4","eth_sendTransaction_transfer","eth_sendTransaction_approve","eth_sendTransaction_mint","wallet_watchAsset","wallet_testRpc","eth_sendTransaction_swap","ton_getAccount","ton_sendTransaction","sol_signMessage","sol_signTransaction","sol_signVersionedTransaction","sol_signAllTransactions","sol_signAllVersionedTransactions","sol_signAndSendTransaction","sol_signAndSendVersionedTransaction","sui_getAccount","sui_signMessage","sui_signPersonalMessage","sui_signTransaction2","sui_signAndExecuteTransaction","sui_requestRpc","sui_signTransaction_pre_execution","sui_signAndExecuteTransaction_pre_execution","sui_signTransaction","sui_signAndExecuteTransaction_stake","_component_BTCPanel","onGenerateTransactionParams","btc_generateTransactionParams","_component_FractalPanel","fractal_generateTransactionParams","aptos_signMessage","aptos_signTransaction","aptos_signAndSubmitTransaction","move_signTransaction","move_signAndSubmitTransaction","cosmos_signArbitrary","cosmos_signAmino","cosmos_signDirect","xs","sm","testTransaction","rows","testboc","sendTransaction","testTransactionStr","btc_signMessage","$setup","sendAmount","clearable","btc_send","sendSatoshisAmount","btc_sendBitcoin","btc_signPsbt_up","btc_signAndPushPsbt_up","receiver","btc_sendInscription","props","msg","setup","ref","$emit","alert","autoFinalized","__exports__","fractal_signMessage","fractal_send","fractal_sendBitcoin","fractal_signPsbt_up","fractal_signAndPushPsbt_up","fractal_sendInscription","VConsole","allChains","optionChains","selectedModals","selectedReturnStrategy","selectedDeepLink","selectedLanguage","selectedTheme","QrcodeVue","BTCPanel","FractalPanel","testTopic","testPublicKey","testProofPayload","pendingDeepLink","logList","connectReady","localPubKey","localSecKey","selectedChain","ProofPayloadVerify","showVerifyRow","has","localStorage","getItem","selectedMethodData","isChecked","setItem","reload","delete","add","computed","selectedChains","initChains","newChains","updatedChains","tab","tabName","Date","now","testTonSdk","blockExplorerUrls","chainName","nativeCurrency","symbol","decimals","dataETH","dataPolygon","types","EIP712Domain","Person","Mail","primaryType","domain","version","verifyingContract","wallet","contents","maxPriorityFeePerGas","maxFeePerGas","gasPrice","nonce","gasLimit","image","adapter","OKXTONProvider","sendTransactionAlert","fetch","confirm","sendData","SuiAdapter","suiResult","currentSuiMethod","signTransaction","currentSuiTransaction","signAndExecuteTransaction","signPersonalMessage","btcAdapter","btcResult","currentBtcMethod","currentBtcTransaction","hexToBase64","bs64Str","fractalResult","currentFractalMethod","currentFractalTransaction","USER_REJECTS_ERROR","hexStr","bytes","substr","blob","Blob","reader","FileReader","onload","base64Data","onerror","readAsDataURL","isTwoSteps","hasEip155","hasSolana","hasSui","hasBtc","hasAptos","hasTon","nameSpacesChains","optSpaceChains","solanaChains","hasCosmos","suiChains","btcChains","entries","connectMethod","connectData","requireData","includeEth","solana","cosmos","tonParams","ton_proof","ton","sui","btc","optData","getCurrentSelectedMethodData","datatest","utf8Array","TextEncoder","binary","byte","fromCharCode","firstStr","urltest","urlencode","encodeURIComponent","OKXUniversalConnectUI","openModal","isPC","methodList","suiData","application","userAgentInfo","navigator","userAgent","Agents","flag","v","isSafariOrChrome","pubkey","OKXSolanaProvider","bs58","verify","ed25519","toBytes","OKXAptosProvider","config","AptosConfig","network","Network","MAINNET","Aptos","transaction","build","simple","sender","function","typeArguments","functionArguments","signAndSubmitTransaction","PublicKey","Connection","getSolConnect","blockhash","getLatestBlockhash","versionedTransactionMessage","TransactionMessage","payerKey","recentBlockhash","instructions","SystemProgram","transfer","fromPubkey","toPubkey","lamports","compileToV0Message","VersionedTransaction","signAndSendTransaction","signAllTransactions","Transaction","feePayer","Buffer","recipientAddress","tx","SuiTransaction","coin","splitCoins","transferObjects","transactionBlock","showEffects","deeplinkActionTest","performAsyncTask","txBytes","txSerialize","generateTsBytesAndSerizlize","resultTuple","senderAccounts","getFullnodeUrl","suiClient","SuiClient","setSender","toJSON","uiOptions","actionsConfiguration","uiPreferences","created","mounted","initCall","scriptTag","document","createElement","src","getElementsByTagName","appendChild","title","substring","uri","render","app","createApp","App","use","ElementPlus","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","loaded","__webpack_modules__","amdO","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","j","every","splice","r","n","getter","d","definition","g","globalThis","Function","obj","prop","Symbol","toStringTag","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}