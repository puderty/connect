{"version":3,"file":"js/app.63765b50.js","mappings":"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","sources":["webpack://okxconnectdemo/../packages/universal-provider/src/OKXBtcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXCosmosProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXStarknetProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTonProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTronProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXUniversalProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/sign-client/client.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/ConnectMethodUtils.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/namespaces.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/events.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/values.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/aptos.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/btc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/cosmos.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/eip155.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcConnection.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/solana.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/starknet.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/sui.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/ton.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/tron.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/misc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/providers.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/globals.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/misc.js","webpack://okxconnectdemo/./src/App.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue?1b44","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue?e4fb","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue?aa83","webpack://okxconnectdemo/./src/components/StarknetTransactionPanel.vue","webpack://okxconnectdemo/./src/components/StarknetTransactionPanel.vue?1a06","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue?089a","webpack://okxconnectdemo/./src/App.vue?7ccd","webpack://okxconnectdemo/./src/main.js","webpack://okxconnectdemo/webpack/bootstrap","webpack://okxconnectdemo/webpack/runtime/amd options","webpack://okxconnectdemo/webpack/runtime/chunk loaded","webpack://okxconnectdemo/webpack/runtime/compat get default export","webpack://okxconnectdemo/webpack/runtime/create fake namespace object","webpack://okxconnectdemo/webpack/runtime/define property getters","webpack://okxconnectdemo/webpack/runtime/global","webpack://okxconnectdemo/webpack/runtime/hasOwnProperty shorthand","webpack://okxconnectdemo/webpack/runtime/make namespace object","webpack://okxconnectdemo/webpack/runtime/node module decorator","webpack://okxconnectdemo/webpack/runtime/jsonp chunk loading","webpack://okxconnectdemo/webpack/startup"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXBtcProvider = void 0;\nconst _1 = require(\"./\");\nclass OKXBtcProvider {\n    constructor(provider) {\n        this.caip = [\n            \"btc:mainnet\",\n            \"fractal:mainnet\"\n        ];\n        this.provider = provider;\n    }\n    getAddressForChainId(chainId) {\n        var _a, _b;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let accounts = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        });\n        if (accounts == undefined || accounts.length < 0) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `no connected account`);\n        }\n        let account = accounts[0];\n        const address = account.split(':')[2];\n        return address;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let extra = (_c = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.extra) === null || _c === void 0 ? void 0 : _c[chainId];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"compressedPublicKey\"];\n        }\n        return {\n            address: this.getAddressForChainId(chainId),\n            publicKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param signStr\n     * @param chainId\n     * @param type\n     * @returns\n     */\n    signMessage(chainId, signStr, type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (signStr === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signMessage parmas error`);\n            }\n            let params = {\n                signStr: signStr,\n                from: this.getAddressForChainId(chainId)\n            };\n            if (type) {\n                params.type = type;\n            }\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signMessage\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param toAddress\n     * @param satoshis\n     * @param options { feeRate: 0 }\n     * @returns\n     */\n    sendBitcoin(chainId, toAddress, satoshis, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            let params = {\n                from: this.getAddressForChainId(chainId),\n                to: toAddress,\n                value: (satoshis / 100000000).toString(),\n            };\n            if (options === null || options === void 0 ? void 0 : options.feeRate) {\n                params[\"satBytes\"] = options.feeRate.toString();\n            }\n            let result = yield this.send(chainId, params);\n            if (result !== undefined && ('txhash' in result)) {\n                // return txhash directly\n                return result.txhash;\n            }\n            // or return unexpected result\n            return result;\n        });\n    }\n    //  from - string：当前连接的钱包的 BTC 地址\n    //  to - string：接受 BTC 的地址\n    //  value - string：发送 BTC 的数量\n    //  satBytes - string： (可选) 自定义费率\n    //  memo - string： (可选) 指定 outputs OP_RETURN 内容 示例\n    //  memoPos - number： (可选) 指定 outputs OP_RETURN 输出位置，如果传了 memo 则必须传入 memoPos 指定位置，否则 memo 不生效\n    send(chainId, input) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (!this.checkParameters(input, 'to', 'value')) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send parmas  error`);\n            }\n            input[\"from\"] = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: 'btc_send',\n                    params: input\n                }, chainId);\n                if ('result' in ret) {\n                    return {\n                        txhash: ret.result\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param psbtHex string 要签名的 psbt 的十六进制字符串\n     * @param options object { autoFinalized: 0 }\n     */\n    signPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.signPsbts(chainId, [psbtHex], [options]).then(psbtResults => {\n                    let results = JSON.parse(psbtResults);\n                    resolve(results[0]);\n                }).catch(error => {\n                    reject(error);\n                });\n            });\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHexs Array\n     * @param options Array [{ autoFinalized: 0 }]\n     * @returns\n     */\n    signPsbts(chainId, psbtHexs, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHexs === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHexs: psbtHexs,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signPsbts\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHex string\n     * @param options object\n     * @returns\n     */\n    signAndPushPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHex === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHex: psbtHex,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signAndPushPsbt\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return JSON.parse(ret.result);\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param address string, receiver address\n     * @param inscriptionId string, 铭文 ID + 协议，没有传协议则默认是 Ordinals NFT ，目前仅支持 Ordinals 及 Atomicals 协议\n     * @param options object, { feeRate: number } custom rates\n     */\n    sendInscription(chainId, address, inscriptionId, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let extension = {\n                address: address,\n                inscriptionId: inscriptionId,\n                options: options\n            };\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (address === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method sendInscription params error`);\n            }\n            var feeRate = 0;\n            if (options && ('feeRate' in options)) {\n                feeRate = options.feeRate;\n            }\n            let coinId = '';\n            let from = this.getAddressForChainId(chainId);\n            var protocolId = 7; //ProtocolIdBRCNFT\n            if (inscriptionId !== 'undefined') {\n                let atomicSuffix = \"-Atomicals\";\n                let ordinalsSuffix = \"-Ordinals\";\n                if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(atomicSuffix.toLowerCase())) {\n                    protocolId = 8; //WXRCProtocolIdARCNFT\n                    inscriptionId = this.removeSuffix(inscriptionId, atomicSuffix);\n                }\n                else if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(ordinalsSuffix.toLowerCase())) {\n                    inscriptionId = this.removeSuffix(inscriptionId, ordinalsSuffix);\n                }\n            }\n            let params = {\n                scenario: 5,\n                feeRate: feeRate,\n                txType: \"20\",\n                to: address,\n                batchBean: [\n                    {\n                        coinAmount: \"1\",\n                        nftId: inscriptionId,\n                        protocolId: protocolId,\n                        coinId: coinId,\n                        inscriptionId: \"\",\n                        from: from\n                    }\n                ],\n                extension: extension\n            };\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_sendInscription\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    removeSuffix(str, suffix) {\n        if (str.endsWith(suffix)) {\n            return str.slice(0, str.length - suffix.length);\n        }\n        return str;\n    }\n    checkParameters(params, ...keys) {\n        var unexistKeys = [];\n        keys.forEach(key => {\n            if (!(`${key}` in params)) {\n                unexistKeys.push(key);\n            }\n        });\n        if (unexistKeys.length > 0) {\n            console.log('not find key: ', unexistKeys.join(\",\"));\n            return false;\n        }\n        return true;\n    }\n    /**\n     *\n     * @param chainId eg. btc:mainnet\n     * @returns eg. btc\n     */\n    checkChainId(chainId) {\n        if (this.caip.includes(chainId)) {\n            let [namespaceKey, _] = chainId.split(\":\");\n            return namespaceKey;\n        }\n        return undefined;\n    }\n}\nexports.OKXBtcProvider = OKXBtcProvider;\nexports.default = OKXBtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCosmosProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXCosmosProvider {\n    constructor(provider) {\n        this.provider = provider;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e, _f;\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount chainId:\", chainId);\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount namespaces:\", JSON.stringify((_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces));\n        let account = (_c = (_b = this.provider.session) === null || _b === void 0 ? void 0 : _b.namespaces[core_1.NameSpaceKeyCosmos]) === null || _c === void 0 ? void 0 : _c.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount account:\", JSON.stringify(account));\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount address:\", address);\n        let extra = (_f = (_e = (_d = this.provider.session) === null || _d === void 0 ? void 0 : _d.namespaces[core_1.NameSpaceKeyCosmos]) === null || _e === void 0 ? void 0 : _e.extra) === null || _f === void 0 ? void 0 : _f[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n            console.log(\"aptos_publicKey\", publicKey);\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            algo: \"secp256k1\",\n            address: address,\n            bech32Address: address,\n            pubKey: this.hexToUint8Array(publicKey),\n        };\n    }\n    signArbitrary(chainId, signerAddress, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const base64Encoded = window.btoa(data);\n            const signDoc = {\n                chain_id: \"\",\n                account_number: \"0\",\n                sequence: \"0\",\n                fee: {\n                    gas: \"0\",\n                    amount: []\n                },\n                msgs: [{\n                        \"type\": \"sign/MsgSignData\",\n                        \"value\": {\n                            \"signer\": signerAddress,\n                            \"data\": base64Encoded\n                        }\n                    }],\n                memo: \"\"\n            };\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signArbitrary\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chain_id\": chainId.split(\":\")[1],\n                    \"data\": signDoc\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    if (typeof ret.result == \"string\") {\n                        return JSON.parse(ret.result);\n                    }\n                    else {\n                        return ret.result;\n                    }\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAmino(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (signDoc.msgs[0].type == \"sign/MsgSignData\") {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signArbitrary\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chain_id\": chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        return ret.result;\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    return error;\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                }\n            }\n            else {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signAmino\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chainId\": chainId.split(\":\")[1],\n                        \"sign_doc\": signDoc,\n                        \"signOptions\": signOptions\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        const resData = JSON.parse(ret.result);\n                        console.log(\"signdoc\", signDoc, resData.signDoc);\n                        signDoc.fee = resData.signDoc.fee;\n                        return { signed: signDoc, signature: resData.signature };\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                    return error;\n                }\n            }\n        });\n    }\n    signDirect(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const object = {\n                bodyBytes: this.bufferToHex(signDoc.bodyBytes),\n                authInfoBytes: this.bufferToHex(signDoc.authInfoBytes),\n                chainId: signDoc.chainId,\n                accountNumber: signDoc.accountNumber ? signDoc.accountNumber.toString() : null,\n                signOptions: signOptions ? signOptions : null\n            };\n            let data = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signDirect\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chainId\": chainId.split(\":\")[1],\n                    \"sign_doc\": object,\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    const res = JSON.parse(ret.result);\n                    console.log(\"signdirect result\", res);\n                    signDoc.authInfoBytes = this.messageToBuffer(res.signDoc.authInfoBytes);\n                    return { signed: signDoc, signature: res.signature };\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    messageToBuffer(message) {\n        var buffer = Uint8Array.from([]);\n        try {\n            if (typeof message === \"string\") {\n                buffer = this.hexToUint8Array(message.replace(\"0x\", \"\"));\n            }\n            else {\n                buffer = Uint8Array.from(message);\n            }\n        }\n        catch (err) {\n            console.log(`messageToBuffer error: ${err}`);\n        }\n        return buffer;\n    }\n    bufferToHex(arr) {\n        let output = [...new Uint8Array(arr)]\n            .map(x => x.toString(16).padStart(2, '0'))\n            .join('');\n        return '0x' + output;\n    }\n    hexToUint8Array(hexString) {\n        if (hexString.length % 2 !== 0) {\n            throw \"Invalid hexString\";\n        }\n        var arrayBuffer = new Uint8Array(hexString.length / 2);\n        for (var i = 0; i < hexString.length; i += 2) {\n            var byteValue = parseInt(hexString.substr(i, 2), 16);\n            if (isNaN(byteValue)) {\n                throw \"Invalid hexString\";\n            }\n            arrayBuffer[i / 2] = byteValue;\n        }\n        return arrayBuffer;\n    }\n}\nexports.OKXCosmosProvider = OKXCosmosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXStarknetProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXStarknetProvider {\n    constructor(provider) {\n        this.STARKNET_CHAIN_ID = \"starknet:mainnet\";\n        this.provider = provider;\n    }\n    getChain(chainId) {\n        if (chainId == null) {\n            chainId = this.STARKNET_CHAIN_ID;\n        }\n        if (chainId != this.STARKNET_CHAIN_ID) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, \"The chainId:\" + chainId + \"is wrong for OKXStarknetProvider\");\n        }\n        return chainId;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyStarknet]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyStarknet]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address,\n            pubKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param chainId\n     * @param signerAddress\n     * @param data: { types, primaryType, domain, message } as TypedData\n     * @returns [signedDataR, signedDataS]\n     */\n    signMessage(signerAddress, typedData, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            if (signerAddress.length == 0) {\n                signerAddress = this.getAccount(chainId)[\"address\"];\n            }\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"starknet_signMessage\",\n                \"params\": {\n                    \"accountAddress\": signerAddress,\n                    \"typedData\": typedData\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    let results = ret.result;\n                    if (typeof results == 'string') {\n                        results = JSON.parse(results);\n                    }\n                    return [results[\"signedDataR\"], results[\"signedDataS\"]];\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     * sendTransaction\n     * @param chainId\n     * @param signerAddress\n     * @param transaction\n     * @returns { transaction_hash }\n     */\n    sendTransaction(signerAddress, transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let transactionData = {\n                \"accountAddress\": signerAddress,\n                \"executionRequest\": transaction\n            };\n            let data = {\n                \"method\": \"starknet_sendTransaction\",\n                \"params\": {\n                    \"data\": JSON.stringify(transactionData),\n                    \"from\": signerAddress\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return { transaction_hash: ret.result };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * signMessage old API（rarely used, no need provide to external）\n     * @param chainId\n     * @param payload\n     * @returns {transaction_hash, class_hash}\n     */\n    signMessageDeclareContractPayload(payload, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            try {\n                let data = {\n                    \"method\": \"starknet_signMessage\",\n                    \"params\": payload\n                };\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return {\n                        \"transaction_hash\": ret.result[\"txHash\"],\n                        \"class_hash\": ret.result[\"classHash\"]\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     * sendTransaction old API（rarely used, no need provide to external）\n     * @param chainId\n     * @param signerAddress\n     * @param calls\n     * @param abis\n     * @param transactionsDetail\n     * @returns { transaction_hash }\n     */\n    /// todo： \n    /// 修改方法名\n    /// chainId 放后面\n    sendMessageExecuteTransactionDetail(signerAddress, calls, abis, transactionsDetail, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            const transactions = Array.isArray(calls) ? calls : [calls];\n            const executionRequest = {\n                \"calls\": transactions,\n                \"abis\": abis,\n                \"transactionsDetail\": {\n                    \"nonce\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.nonce,\n                    \"maxFee\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.nonce,\n                    \"version\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.version,\n                }\n            };\n            return this.sendTransaction(signerAddress, executionRequest, chainId);\n        });\n    }\n}\nexports.OKXStarknetProvider = OKXStarknetProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTonProvider = void 0;\nconst _1 = require(\"./\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTonProvider {\n    constructor(generator) {\n        this.statusChangeSubscriptions = [];\n        this.statusChangeErrorSubscriptions = [];\n        this.provider = generator;\n        this.provider.on(\"connect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event connect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"reconnect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event reconnect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"disconnect\", () => {\n            (0, core_1.logDebug)(\"OKXTONProvider event disconnect:\");\n            this.statusChangeSubscriptions.forEach(callback => callback(null));\n        });\n        this.provider.on(\"connect_error\", (error) => {\n            (0, core_1.logDebug)(\"OKXTONProvider event connect_error:\", JSON.stringify(error));\n            this.statusChangeErrorSubscriptions.forEach(errorsHandler => errorsHandler(error));\n        });\n    }\n    connected() {\n        if (this.provider.connected()) {\n            return !!this.provider.session.namespaces[\"ton\"];\n        }\n        return false;\n    }\n    account() {\n        try {\n            if (!this.provider.session) {\n                return null;\n            }\n            let tonNameSpace = this.provider.session.namespaces['ton'];\n            if (!tonNameSpace || !tonNameSpace.payload || !tonNameSpace.payload.ton_addr) {\n                return null;\n            }\n            let ton_addr = tonNameSpace.payload.ton_addr;\n            return {\n                address: ton_addr.address,\n                chain: ton_addr.network,\n                walletStateInit: ton_addr.walletStateInit,\n                publicKey: ton_addr.publicKey,\n            };\n        }\n        catch (e) {\n            (0, core_1.logDebug)(\"OKXTONProvider account  error:\", JSON.stringify(e));\n            return null;\n        }\n    }\n    wallet() {\n        if (this.connected()) {\n            try {\n                let sessionWallet = this.provider.session.wallet;\n                let tonDeviceInfo = {\n                    platform: sessionWallet.platform,\n                    appName: sessionWallet.appName,\n                    appVersion: sessionWallet.appVersion,\n                    maxProtocolVersion: sessionWallet.maxProtocolVersion,\n                    features: ['ton_sendTransaction'],\n                };\n                const wallet = {\n                    device: tonDeviceInfo,\n                    provider: \"http\",\n                    account: this.account()\n                };\n                let tonNameSpace = this.provider.session.namespaces['ton'];\n                if (tonNameSpace && tonNameSpace.payload && tonNameSpace.payload.ton_proof) {\n                    wallet.connectItems = {\n                        tonProof: tonNameSpace.payload.ton_proof\n                    };\n                }\n                (0, core_1.logDebug)(\"OKXTONProvider wallet :\", JSON.stringify(wallet));\n                return wallet;\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"OKXTONProvider wallet  error:\", JSON.stringify(e));\n                return null;\n            }\n        }\n        return null;\n    }\n    onStatusChange(callback, errorsHandler) {\n        this.statusChangeSubscriptions.push(callback);\n        if (errorsHandler) {\n            this.statusChangeErrorSubscriptions.push(errorsHandler);\n        }\n        return () => {\n            this.statusChangeSubscriptions = this.statusChangeSubscriptions.filter(item => item !== callback);\n            if (errorsHandler) {\n                this.statusChangeErrorSubscriptions = this.statusChangeErrorSubscriptions.filter(item => item !== errorsHandler);\n            }\n        };\n    }\n    sendTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (transaction.network && transaction.network !== core_1.TONCHAIN.MAINNET) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, 'OKXTONProvider sendTransaction network error');\n            }\n            if (!transaction.network) {\n                transaction.network = core_1.TONCHAIN.MAINNET;\n            }\n            if (this.provider.session) {\n                if (!transaction.from) {\n                    const accounts = this.provider.requestAccountsWithNamespace('ton');\n                    transaction.from = accounts[0];\n                }\n            }\n            const requestParams = {\n                method: \"ton_sendTransaction\",\n                params: transaction,\n            };\n            let chain = 'ton:' + core_1.TONCHAIN.MAINNET;\n            (0, core_1.logDebug)(\"OKXTONProvider sendTransaction transaction----:\", chain, JSON.stringify(requestParams));\n            return this.provider.request(requestParams, chain);\n        });\n    }\n}\nexports.OKXTonProvider = OKXTonProvider;\nexports.default = OKXTonProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTronProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTronProvider {\n    constructor(provider) {\n        this.TRON_CHAIN_ID = \"tron:mainnet\";\n        this.provider = provider;\n    }\n    getChain(chainId) {\n        if (chainId == null) {\n            chainId = this.TRON_CHAIN_ID;\n        }\n        if (chainId != this.TRON_CHAIN_ID) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, \"The chainId:\" + chainId + \"is wrong for OKXTronProvider\");\n        }\n        return chainId;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        chainId = this.getChain(chainId);\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyTron]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyTron]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address\n        };\n    }\n    stringToHex(str) {\n        let hex = '';\n        for (let i = 0; i < str.length; i++) {\n            hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n        }\n        return hex;\n    }\n    signMessage(data, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessage\",\n                \"params\": {\n                    \"message\": this.stringToHex(data)\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signMessageV2(data, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessageV2\",\n                \"params\": {\n                    \"message\": data\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let data = {\n                \"method\": \"tron_signTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    let signedTx;\n                    if (typeof ret.result == \"string\") {\n                        signedTx = JSON.parse(ret.result);\n                    }\n                    else {\n                        signedTx = ret.result;\n                    }\n                    let realSignTx = {};\n                    realSignTx.visible = signedTx.visible;\n                    realSignTx.txID = signedTx.txID;\n                    let rawData = {};\n                    rawData.contract = signedTx.raw_data.contract;\n                    rawData.expiration = signedTx.raw_data.expiration;\n                    rawData.ref_block_bytes = signedTx.raw_data.ref_block_bytes;\n                    rawData.fee_limit = signedTx.raw_data.fee_limit;\n                    rawData.ref_block_hash = signedTx.raw_data.ref_block_hash;\n                    rawData.timestamp = signedTx.raw_data.timestamp;\n                    realSignTx.raw_data = rawData;\n                    realSignTx.raw_data_hex = signedTx.raw_data_hex;\n                    realSignTx.signature = signedTx.signature;\n                    return realSignTx;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAndSendTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let data = {\n                \"method\": \"tron_signAndSendTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n}\nexports.OKXTronProvider = OKXTronProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXUniversalProvider = void 0;\nconst eip155_1 = require(\"./provider/providers/eip155\");\nconst sui_1 = require(\"./provider/providers/sui\");\nconst constants_1 = require(\"./provider/constants\");\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nconst client_1 = require(\"./packages/sign-client/client\");\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"./packages/utils/namespaces\");\nconst solana_1 = __importDefault(require(\"./provider/providers/solana\"));\nconst btc_1 = __importDefault(require(\"./provider/providers/btc\"));\nconst aptos_1 = __importDefault(require(\"./provider/providers/aptos\"));\nconst ton_1 = __importDefault(require(\"./provider/providers/ton\"));\nconst cosmos_1 = __importDefault(require(\"./provider/providers/cosmos\"));\nconst tron_1 = __importDefault(require(\"./provider/providers/tron\"));\nconst utils_1 = require(\"./provider/utils\");\nconst packages_1 = require(\"./packages\");\nconst provider_1 = require(\"./provider\");\nconst starknet_1 = __importDefault(require(\"./provider/providers/starknet\"));\nclass OKXUniversalProvider {\n    static init(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider init() called');\n            (0, core_1.checkMetaData)(opts.dappMetaData);\n            // ignore rpc provider check by default\n            (0, utils_1.setGlobal)('disableProviderPing', true);\n            let provider;\n            if (window && window.okxConnectUniversalinwindow && window.okxConnectUniversalinwindow instanceof OKXUniversalProvider) {\n                (0, core_1.logDebug)('OKXUniversalConnect init() old called');\n                provider = window.okxConnectUniversalinwindow;\n            }\n            else {\n                (0, core_1.logDebug)('OKXUniversalConnect init() new called');\n                provider = new OKXUniversalProvider(opts);\n                if (window) {\n                    window.okxConnectUniversalinwindow = provider;\n                }\n                yield provider.initialize();\n            }\n            (0, core_1.getDefaultReporter)().configVersionAndSide('universalprovider-1.5.2', 'dapp', provider.providerOpts.dappMetaData.name);\n            return provider;\n        });\n    }\n    constructor(opts) {\n        this.rpcProviders = {};\n        this.events = new eventemitter3_1.default();\n        this.providerOpts = opts;\n    }\n    request(args, chain) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider request() called');\n            (0, core_1.reportLog)('OKXUniversalProvider request() called');\n            if (!this.connected()) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return yield this.getProvider(namespace).request(requestParam);\n        });\n    }\n    buildRequestParamFromRequest(args, chain) {\n        var _a;\n        (0, core_1.logDebug)(\"UniversalProvider request args >>>>>>>: \", chain, JSON.stringify(args));\n        let [namespace, chainId] = this.validateChain(chain);\n        if (!this.session) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Please call connect() before request()\");\n        }\n        let keyArr = Object.keys(this.session.namespaces);\n        if (!chain && keyArr && keyArr.length > 1) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Multiple chains have been linked, the request method requires chain`);\n        }\n        if (namespace == \"aptos\" && chainId == \"mainnet\") {\n            namespace = \"aptos\";\n            chainId = \"637\";\n        }\n        if (namespace == \"movement\" && chainId == \"testnet\") {\n            namespace = \"aptos\";\n            chainId = \"70000060\";\n        }\n        const requestParam = Object.assign(Object.assign({}, args), { chainId: `${namespace}:${chainId}`, redirect: (_a = args.redirect) !== null && _a !== void 0 ? _a : this.sessionConfig.redirect });\n        return { namespace, requestParam };\n    }\n    enable() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.client) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (!this.session) {\n                if (this.connectOpts) {\n                    yield this.connect(this.connectOpts);\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n                }\n            }\n            const accounts = yield this.requestAccounts();\n            return accounts;\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider disconnect() called');\n            (0, core_1.reportLog)('provider disconnect called');\n            if (!this.session) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                let called = false;\n                const onRequestSent = () => __awaiter(this, void 0, void 0, function* () {\n                    if (!called) {\n                        called = true;\n                        yield this.disconnectAndEmit();\n                        yield this.cleanup();\n                        resolve();\n                        (0, core_1.logDebug)(\"UniversalProvider disconnect Disconnected\");\n                        (0, core_1.reportLog)('provider disconnect disconnected');\n                    }\n                });\n                try {\n                    yield this.client.disconnect();\n                    yield onRequestSent();\n                }\n                catch (e) {\n                    yield onRequestSent();\n                }\n            }));\n        });\n    }\n    disconnectAndEmit() {\n        var _a, _b;\n        this.client.engine.connectionManager.disconnect();\n        this.events.emit(\"disconnect\", { topic: (_a = this.session) === null || _a === void 0 ? void 0 : _a.topic });\n        this.events.emit(\"session_delete\", { topic: (_b = this.session) === null || _b === void 0 ? void 0 : _b.topic });\n    }\n    aptosChainNameToGeneralId(chainId) {\n        if (chainId == \"aptos:mainnet\") {\n            return \"aptos:637\";\n        }\n        else if (chainId == \"movement:testnet\") {\n            return \"aptos:70000060\";\n        }\n        else {\n            return chainId;\n        }\n    }\n    replaceAptos(opts) {\n        var _a, _b;\n        let aptosNameSpace = (_a = opts.namespaces) === null || _a === void 0 ? void 0 : _a[\"aptos\"];\n        if (aptosNameSpace != undefined) {\n            let realNS = this.replaceAptosInner(aptosNameSpace);\n            if (opts.namespaces != undefined && \"aptos\" in opts.namespaces && realNS != undefined) {\n                opts.namespaces.aptos = realNS;\n            }\n        }\n        let optionAptosNameSpace = (_b = opts.optionalNamespaces) === null || _b === void 0 ? void 0 : _b[\"aptos\"];\n        if (optionAptosNameSpace != undefined) {\n            let realOptionNS = this.replaceAptosInner(optionAptosNameSpace);\n            if (opts.optionalNamespaces != undefined && \"aptos\" in opts.optionalNamespaces && realOptionNS != undefined) {\n                opts.optionalNamespaces.aptos = realOptionNS;\n            }\n        }\n        return opts;\n    }\n    replaceAptosInner(aptosNameSpace) {\n        var _a;\n        if (aptosNameSpace != undefined) {\n            aptosNameSpace.chains = (_a = aptosNameSpace.chains) === null || _a === void 0 ? void 0 : _a.map(chainId => {\n                return this.aptosChainNameToGeneralId(chainId);\n            });\n            if (aptosNameSpace.defaultChain != undefined) {\n                aptosNameSpace.defaultChain = this.aptosChainNameToGeneralId(aptosNameSpace.defaultChain);\n            }\n        }\n        return aptosNameSpace;\n    }\n    replaceAptosGeneralIdWithNetName(chainId) {\n        if (chainId.includes(\"aptos:637\")) {\n            chainId = chainId.replace(\"aptos:637\", \"aptos:mainnet\");\n        }\n        else if (chainId.includes(\"aptos:70000060\")) {\n            chainId = chainId.replace(\"aptos:70000060\", \"movement:testnet\");\n        }\n        return chainId;\n    }\n    replaceSessionAptos(session) {\n        var _a;\n        let namespaces = (_a = session === null || session === void 0 ? void 0 : session.namespaces) === null || _a === void 0 ? void 0 : _a[\"aptos\"];\n        if (namespaces != undefined && namespaces.chains != undefined) {\n            namespaces.chains = namespaces.chains.map(chain => {\n                return this.replaceAptosGeneralIdWithNetName(chain);\n            });\n            namespaces.accounts = namespaces.accounts.map((account) => {\n                return this.replaceAptosGeneralIdWithNetName(account);\n            });\n            let extra = {};\n            Object.keys(namespaces.extra || {}).forEach((key, index) => {\n                let newKey = this.replaceAptosGeneralIdWithNetName(key);\n                extra[this.replaceAptosGeneralIdWithNetName(key)] = Object.values((session === null || session === void 0 ? void 0 : session.namespaces[\"aptos\"].extra) || {})[index];\n            });\n            namespaces.extra = extra;\n        }\n        (0, core_1.logDebug)(\"replaceSessionAptos\", session);\n    }\n    connected() {\n        (0, core_1.logDebug)('OKXUniversalProvider connected() called');\n        (0, core_1.reportLog)('provider connected called');\n        let disconnectInner = () => {\n            try {\n                this.cleanup();\n                this.client.engine.connectionManager.disconnect();\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"Error during disconnect:\", e);\n            }\n        };\n        try {\n            if (!this.session)\n                return false;\n            if (!this.client.engine.connectionManager.getCurrentConnectionReady()) {\n                disconnectInner();\n                return false;\n            }\n            return true;\n        }\n        catch (e) {\n            disconnectInner();\n            return false;\n        }\n    }\n    connectAndSign(opts, signRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() called');\n            const updatedOpts = Object.assign(Object.assign({}, opts), { signRequest });\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() opts:', JSON.stringify(opts));\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() signRequest:', JSON.stringify(signRequest));\n            return yield this.connect(updatedOpts);\n        });\n    }\n    connect(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider connect() called');\n            (0, core_1.reportLog)('provider connect called');\n            if (!this.client) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (this.connected()) {\n                return this.session;\n            }\n            opts = this.replaceAptos(opts);\n            (0, core_1.logDebug)(`OKXUniversalProvider connect >>>>`, JSON.stringify(opts));\n            if (opts.sessionConfig === undefined) {\n                opts.sessionConfig = {};\n            }\n            if (opts.sessionConfig.openUniversalUrl === undefined) {\n                opts.sessionConfig.openUniversalUrl = (0, core_1.isMobileUserAgent)();\n            }\n            this.setNamespaces(opts);\n            try {\n                (0, core_1.logDebug)(`UniversalProvider connect opts.stringify ====> ${JSON.stringify(opts)}`);\n                let session = yield this.client.connect(opts);\n                this.replaceSessionAptos(session);\n                (0, core_1.logDebug)(`UniversalProvider connect success ====> ${JSON.stringify(session)}`);\n                if (session) {\n                    this.session = session;\n                    this.client.session = session;\n                    (0, core_1.logDebug)(`OKXUniversalProvider connect success opts>>>>`, JSON.stringify(opts));\n                    this.onConnect();\n                    if (opts.signRequest && opts.signRequest.length > 0) {\n                        let requestItem = opts.signRequest[0];\n                        let signResponseList = [];\n                        if (typeof window !== \"undefined\" && window && window.okxConnectUniversalUIinwindow) { //from UI\n                            (0, core_1.logDebug)(`OKXUniversalProvider connect success, us UI SDK>>>>`);\n                            if (this.session.signResponse && this.session.signResponse.length > 0) { // >=6.96\n                                signResponseList = this.session.signResponse;\n                            }\n                        }\n                        else {\n                            (0, core_1.logDebug)(`OKXUniversalProvider connect success, us Universal SDK>>>>`);\n                            if (this.session.signResponse && this.session.signResponse.length > 0) { // >=6.96\n                                signResponseList = this.session.signResponse;\n                            }\n                            else {\n                                signResponseList.push((0, packages_1.creatNotSupportMethodItemReplay)(requestItem));\n                            }\n                        }\n                        (0, core_1.logDebug)(`UniversalProvider connect success connectRequestReply ====> ${JSON.stringify(signResponseList)}`);\n                        setTimeout(() => {\n                            this.events.emit(\"connect_signResponse\", signResponseList);\n                        }, 100);\n                    }\n                    return session;\n                }\n                return undefined;\n            }\n            catch (error) {\n                (0, core_1.logDebug)(`UniversalProvider connect error ====> `, JSON.stringify(error));\n                throw error;\n            }\n        });\n    }\n    syncAllAddresses() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if ((0, provider_1.syncAddressAvailable)(this.session.wallet)) {\n                return this.client.syncAllAddress();\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n            }\n        });\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    setDefaultChain(chain, rpcUrl) {\n        (0, core_1.logDebug)('OKXUniversalProvider setDefaultChain() called');\n        // chain = this.aptosChainNameToGeneralId(chain)\n        try {\n            // ignore without active session\n            if (!this.connected())\n                return;\n            const [namespace, chainId] = this.validateChain(chain);\n            const provider = this.getProvider(namespace);\n            provider.setDefaultChain(chainId, rpcUrl);\n        }\n        catch (error) {\n            // ignore the error if the fx is used prematurely before namespaces are set\n            if (!/Please call connect/.test(error.message))\n                throw error;\n        }\n    }\n    checkStorage() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let sessionInfoStr = yield this.getFromStore(\"connectSession\");\n            (0, core_1.logDebug)(sessionInfoStr);\n            if (sessionInfoStr) {\n                let sessionInfo = sessionInfoStr;\n                this.session = sessionInfo;\n                this.client.session = this.session;\n                this.sessionConfig = sessionInfo.sessionConfig;\n                this.client.sessionConfig = this.sessionConfig;\n                (0, core_1.logDebug)('[evm u-provider] do reconnection', this.session);\n                yield this.client.restoreconnect(sessionInfo);\n                this.createProviders();\n                this.registerEventListeners();\n                setTimeout(() => {\n                    this.events.emit(\"reconnect\", { session: this.session });\n                }, 100);\n                this.registerEventListeners();\n            }\n        });\n    }\n    initialize() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider initialize() called');\n            (0, core_1.reportLog)('provider initialize called');\n            const data = Object.assign({ url: window.location.hostname, origin: window.location.origin }, this.providerOpts.dappMetaData);\n            this.client = new client_1.SignClient(data, this.events);\n            yield this.checkStorage();\n        });\n    }\n    createProviders() {\n        if (!this.client) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n        }\n        if (!this.connected()) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Session not initialized. Please call connect() before enable()\");\n        }\n        const providersToCreate = [\n            ...new Set(Object.keys(this.session.namespaces)\n                .filter((namespace) => { var _a, _b; return ((_b = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.accounts) === null || _b === void 0 ? void 0 : _b.length) > 0; })\n                .map((namespace) => (0, namespaces_1.parseNamespaceKey)(namespace))),\n        ];\n        providersToCreate.forEach((namespace) => {\n            if (!this.session)\n                return;\n            const namespacesValue = this.session.namespaces;\n            const currentNameSpace = namespacesValue[namespace];\n            (0, core_1.logDebug)(\"init eip155 >> \", currentNameSpace);\n            switch (namespace) {\n                case \"eip155\":\n                    const opts = {\n                        namespace: currentNameSpace\n                    };\n                    this.rpcProviders[namespace] = new eip155_1.Eip155Provider(opts, this.client, this.events);\n                    break;\n                case \"solana\":\n                    const opts1 = {\n                        namespace: currentNameSpace\n                    };\n                    let solanaProvider = new solana_1.default(opts1, \"solana\", this.client, this.events);\n                    this.rpcProviders[namespace] = solanaProvider;\n                    let sonicProvider = new solana_1.default(opts1, \"sonic\", this.client, this.events);\n                    this.rpcProviders['sonic'] = sonicProvider;\n                    let svmProvider = new solana_1.default(opts1, \"svm\", this.client, this.events);\n                    this.rpcProviders['svm'] = svmProvider;\n                    // this.rpcProviders[namespace] = new SolanaProvider(opts1, () => { return this.session; });\n                    break;\n                case \"ton\":\n                    const optsTon = {\n                        namespace: currentNameSpace\n                    };\n                    let tonProvider = new ton_1.default(optsTon, this.client, this.events);\n                    this.rpcProviders[namespace] = tonProvider;\n                    break;\n                case \"sui\":\n                    const optsSui = {\n                        namespace: currentNameSpace\n                    };\n                    let suiProvider = new sui_1.SuiProvider(optsSui, this.client, this.events);\n                    suiProvider.name = \"sui\";\n                    this.rpcProviders[namespace] = suiProvider;\n                    break;\n                case \"btc\":\n                    const optsBtc = {\n                        namespace: currentNameSpace\n                    };\n                    let btcProvider = new btc_1.default(optsBtc, \"btc\", this.client, this.events);\n                    this.rpcProviders[\"btc\"] = btcProvider;\n                    let fbProvider = new btc_1.default(optsBtc, \"fractal\", this.client, this.events);\n                    this.rpcProviders[\"fractal\"] = fbProvider;\n                    break;\n                case \"aptos\":\n                    let aptosProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"aptos\", this.client, this.events);\n                    this.rpcProviders[namespace] = aptosProvider;\n                    let moveProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"movement\", this.client, this.events);\n                    this.rpcProviders[\"movement\"] = moveProvider;\n                    break;\n                case \"cosmos\":\n                    let cosmosProvider = new cosmos_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = cosmosProvider;\n                    break;\n                case \"tron\":\n                    let tronProvider = new tron_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = tronProvider;\n                    break;\n                case \"starknet\":\n                    let starknetProvider = new starknet_1.default({\n                        namespace: currentNameSpace\n                    }, \"starknet\", this.client, this.events);\n                    this.rpcProviders[namespace] = starknetProvider;\n                    break;\n            }\n        });\n    }\n    registerEventListeners() {\n        if (typeof this.client === \"undefined\") {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client is not initialized\");\n        }\n        this.client.engine.addDisconnectListener(() => {\n            this.disconnectAndEmit();\n            this.cleanup();\n        });\n        this.on(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, (caip2ChainId) => {\n            this.onChainChanged(caip2ChainId);\n        });\n        this.on(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, (nameSpaces) => {\n            if (nameSpaces) {\n                const nameSpacekey = Object.keys(nameSpaces)[0];\n                if (this.session) {\n                    this.session.namespaces[nameSpacekey] = nameSpaces[nameSpacekey];\n                    if (this.session) {\n                        this.persist(\"connectSession\", this.session);\n                        this.events.emit(\"session_update\", this.session);\n                    }\n                    (0, core_1.logDebug)(\"PROVIDER_EVENTS.UPDATE_NAMESPACES this.session... ->>>\", JSON.stringify(this.session));\n                }\n            }\n        });\n    }\n    getProvider(namespace) {\n        (0, core_1.logDebug)('current get providers', this.rpcProviders);\n        (0, core_1.logDebug)('query namespace: ', namespace);\n        return this.rpcProviders[namespace];\n    }\n    setNamespaces(params) {\n        this.connectOpts = params;\n        const { namespaces, sessionConfig } = params;\n        const data = {\n            origin: window.location.origin,\n            url: window.location.hostname,\n            name: this.providerOpts.dappMetaData.name,\n            icon: this.providerOpts.dappMetaData.icon,\n        };\n        this.sessionConfig = Object.assign({ dappInfo: data }, sessionConfig);\n        (0, core_1.logDebug)(\"setNamespaces sessionConfig>>>\", this.sessionConfig);\n        this.client.sessionConfig = this.sessionConfig;\n        this.persist(\"sessionConfig\", sessionConfig);\n    }\n    validateChain(chain) {\n        var _a;\n        let [namespace, chainId] = (chain === null || chain === void 0 ? void 0 : chain.split(\":\")) || [\"\", \"\"];\n        if (!this.session || !this.session.namespaces || !Object.keys(this.session.namespaces).length) {\n            (0, core_1.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        if (namespace) {\n            if (!this.isChainNamespaceInSession(namespace)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace '${namespace}' is not configured. Please call connect() first with namespace config.`);\n            }\n            if (chainId && chain) {\n                (0, core_1.logDebug)('this.session.namespaces -->> ', namespace, JSON.stringify(this.session.namespaces));\n                const chainsArr = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.chains;\n                (0, core_1.logDebug)('get chainsArr & chain', JSON.stringify(chainsArr), chain);\n                if (chainsArr && !chainsArr.includes(chain)) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace not include the chain '${chain}'`);\n                }\n            }\n        }\n        if (namespace && chainId) {\n            (0, core_1.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        let defaultNamespace = (0, namespaces_1.parseNamespaceKey)(Object.keys(this.session.namespaces)[0]);\n        const defaultChain = this.rpcProviders[defaultNamespace].getDefaultChain();\n        (0, core_1.logDebug)('get default chain:', defaultChain);\n        return [defaultNamespace, defaultChain];\n    }\n    isChainNamespaceInSession(namespaceStr) {\n        var _a, _b;\n        if (Object.keys(((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces) || {})\n            .map((key) => (0, namespaces_1.parseNamespaceKey)(key))\n            .includes(namespaceStr)) {\n            return true;\n        }\n        let isChainNamespaceInSession = false;\n        Object.values(((_b = this.session) === null || _b === void 0 ? void 0 : _b.namespaces) || {})\n            .forEach(namespace => {\n            namespace.chains.forEach(chain => {\n                if (chain.split(\":\")[0] == namespaceStr) {\n                    isChainNamespaceInSession = true;\n                }\n            });\n        });\n        return isChainNamespaceInSession;\n    }\n    requestAccountsWithNamespace(namespace) {\n        return this.getProvider(namespace).requestAccounts();\n    }\n    requestDefaultChainWithNamespace(namespace) {\n        return this.getProvider(namespace).getDefaultChain();\n    }\n    requestAccounts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const [namespace] = this.validateChain();\n            return yield this.getProvider(namespace).requestAccounts();\n        });\n    }\n    onChainChanged(caip2Chain) {\n        var _a;\n        if (!((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces))\n            return;\n        const [namespace, chainId] = this.validateChain(caip2Chain);\n        if (!chainId)\n            return;\n        if (this.session.namespaces[namespace]) {\n            this.session.namespaces[namespace].defaultChain = chainId;\n            this.persist(\"connectSession\", this.session);\n        }\n        this.events.emit(\"chainChanged\", chainId);\n    }\n    onConnect() {\n        this.createProviders();\n        if (this.session) {\n            this.persist(\"connectSession\", this.session);\n        }\n        this.events.emit(\"connect\", { session: this.session });\n        this.registerEventListeners();\n    }\n    cleanup() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.session = undefined;\n            this.client.session = undefined;\n            this.sessionProperties = undefined;\n            this.persist(\"optionalNamespaces\", undefined);\n            this.persist(\"sessionProperties\", undefined);\n            this.persist(\"connectSession\", undefined);\n        });\n    }\n    persist(key, data) {\n        (0, core_1.logDebug)('[evm u-provider] persisit data', key, data);\n        return this.client.engine.connectionManager.saveSessionContent(key, data);\n    }\n    getFromStore(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.client.engine.connectionManager.getSessionContent(key);\n        });\n    }\n    showRequestModal(args, chain) {\n        try {\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return this.getProvider(namespace).showRequestModal(requestParam);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n}\nexports.OKXUniversalProvider = OKXUniversalProvider;\nexports.default = OKXUniversalProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXStarknetProvider = exports.OKXTronProvider = exports.OKXTonProvider = exports.OKXCosmosProvider = exports.OKXBtcProvider = exports.OKXUniversalProvider = void 0;\n__exportStar(require(\"./provider/types\"), exports);\n__exportStar(require(\"./packages\"), exports);\nvar OKXUniversalProvider_1 = require(\"./OKXUniversalProvider\");\nObject.defineProperty(exports, \"OKXUniversalProvider\", { enumerable: true, get: function () { return OKXUniversalProvider_1.OKXUniversalProvider; } });\nvar OKXBtcProvider_1 = require(\"./OKXBtcProvider\");\nObject.defineProperty(exports, \"OKXBtcProvider\", { enumerable: true, get: function () { return OKXBtcProvider_1.OKXBtcProvider; } });\nvar OKXCosmosProvider_1 = require(\"./OKXCosmosProvider\");\nObject.defineProperty(exports, \"OKXCosmosProvider\", { enumerable: true, get: function () { return OKXCosmosProvider_1.OKXCosmosProvider; } });\nvar OKXTonProvider_1 = require(\"./OKXTonProvider\");\nObject.defineProperty(exports, \"OKXTonProvider\", { enumerable: true, get: function () { return OKXTonProvider_1.OKXTonProvider; } });\nvar OKXTronProvider_1 = require(\"./OKXTronProvider\");\nObject.defineProperty(exports, \"OKXTronProvider\", { enumerable: true, get: function () { return OKXTronProvider_1.OKXTronProvider; } });\nvar OKXStarknetProvider_1 = require(\"./OKXStarknetProvider\");\nObject.defineProperty(exports, \"OKXStarknetProvider\", { enumerable: true, get: function () { return OKXStarknetProvider_1.OKXStarknetProvider; } });\n__exportStar(require(\"@okxconnect/core\"), exports);\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignClient = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"../utils/namespaces\");\nconst ConnectMethodUtils_1 = require(\"../utils/ConnectMethodUtils\");\nconst constants_1 = require(\"../../provider/constants\");\nclass SignClient extends core_1.ISignClient {\n    constructor(metaData, events) {\n        super(metaData);\n        // ---------- Engine ----------------------------------------------- //\n        this.connect = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    var connectRequest = [];\n                    (0, core_1.logDebug)(`client connect params >>>`, JSON.stringify(params));\n                    var requestAccountItem = {\n                        name: \"requestAccounts\",\n                        requiredNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.namespaces),\n                        optionalNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.optionalNamespaces),\n                    };\n                    this.engine.setSessionConnectingListener(() => {\n                        (0, core_1.logDebug)(`sessionConnectingListener >>>`);\n                        this.events.emit(constants_1.PROVIDER_EVENTS.SESSION_CONNECTING);\n                    });\n                    if (params.signRequest) {\n                        requestAccountItem.connectRequestMethods = yield (0, ConnectMethodUtils_1.connectMethodsToConnectWalletMethods)(params.signRequest, requestAccountItem.requiredNamespaces);\n                    }\n                    connectRequest.push(requestAccountItem);\n                    (0, core_1.logDebug)(`client connect connectRequest >>>`, JSON.stringify(connectRequest));\n                    this.engine.universalConnect(connectRequest, Object.assign({ dappInfo: this.metadata }, params.sessionConfig), (info) => {\n                        if (info && info.connectRequest) {\n                            (0, core_1.logDebug)(`universalConect info.connectRequest :`, info.connectRequest);\n                            (0, core_1.logDebug)(`universalConect url:`, (0, core_1.getOKXLink)(info.connectRequest, this.sessionConfig.useMini));\n                            this.events.emit(\"display_uri\", (0, core_1.getOKXLink)(info.connectRequest, this.sessionConfig.useMini));\n                            this.events.emit(\"short_display_uri\", (0, core_1.getAppWalletShortDeepLink)(info.connectRequest.topic, info.connectRequest.clientId));\n                            (0, core_1.logDebug)(`universalConect EngineConnectInfo  ${JSON.stringify(info)}`);\n                            this.events.emit(\"okx_engine_connect_params\", info);\n                        }\n                    }).then((session) => __awaiter(this, void 0, void 0, function* () {\n                        (0, namespaces_1.fillParamsToSession)(session, params.namespaces, params.optionalNamespaces, this.sessionConfig);\n                        (0, core_1.logDebug)(`signClient: connect: session ${JSON.stringify(session)}`);\n                        if (params.signRequest) {\n                            yield (0, ConnectMethodUtils_1.connectMethodsResponseUpdate)(session, params.signRequest);\n                        }\n                        resolve(session);\n                    })).catch((e) => {\n                        (0, core_1.logDebug)(`signClient: connect: catch ${JSON.stringify(e)}`);\n                        this.events.emit(\"connect_error\", e);\n                        reject(e);\n                    });\n                }\n                catch (error) {\n                    (0, core_1.logDebug)(`signClient: connect:  ${JSON.stringify(error)}`);\n                    reject(error);\n                }\n            }));\n        });\n        this.restoreconnect = (sessionConfig) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.restoreconnect(sessionConfig, (session) => {\n                    resolve(session);\n                });\n            });\n        });\n        this.reject = (params) => __awaiter(this, void 0, void 0, function* () {\n            //   try {\n            //     return await this.engine.reject(params);\n            //   } catch (error: any) {\n            //     this.logger.error(error.message);\n            //     throw error;\n            //   }\n        });\n        //\n        // public update: ISignClient[\"update\"] = async (params) => {\n        //   return\n        // //   try {\n        // //     return await this.engine.update(params);\n        // //   } catch (error: any) {\n        // //     this.logger.error(error.message);\n        // //     throw error;\n        // //   }\n        // };\n        this.request = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                (0, core_1.logDebug)(\"clint request --params>>>> >\", this.engine.connectionManager.getCurrentConnectionReady(), (_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl, JSON.stringify(params));\n                try {\n                    // this.sessionConfig\n                    if (((_b = this.sessionConfig) === null || _b === void 0 ? void 0 : _b.openUniversalUrl) && (0, core_1.isIos)()) {\n                        this.openOKXWallet();\n                    }\n                    yield this.engine.send(params, {\n                        resolve: (response) => {\n                            delete response.requestId;\n                            (0, core_1.logDebug)(\"clint request --response >\", JSON.stringify(response));\n                            if (('error' in response) && response.error) {\n                                let error = response.error;\n                                reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                            }\n                            else {\n                                resolve(response);\n                            }\n                        },\n                        onAck: () => {\n                            var _a;\n                            if (!(0, core_1.isIos)() && ((_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl)) {\n                                this.openOKXWallet();\n                            }\n                        }\n                    });\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }));\n        });\n        // public emit: ISignClient[\"emit\"] = async (params) => {\n        //     try {\n        //         // return await this.engine.emit(params);\n        //     } catch (error: any) {\n        //         throw error;\n        //     }\n        // };\n        this.disconnect = () => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"disconnect\"\n                }, {\n                    onAck: () => {\n                        resolve();\n                    }\n                }, undefined, 86400000).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n        this.engine = new core_1.Engine(new core_1.ConnectionManager(metaData.name));\n        this.events = events;\n        this.metadata = metaData;\n    }\n    openOKXWallet() {\n        var _a;\n        // if (this.openUniversalUrl){\n        (0, core_1.logDebug)('bridge-provider ==>> connect_5');\n        if ((_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.useMini) {\n            let url = (0, core_1.getTelegramWalletTWAUrl)(undefined, this.sessionConfig.tmaReturnUrl);\n            (0, core_1.openOKXTMAWalletlinkWithFallback)(url);\n        }\n        else {\n            (0, core_1.openOKXDeeplink)(core_1.standardDeeplink);\n        }\n        // }\n    }\n    syncAllAddress() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"sync_all_addresses\"\n                }, {\n                    resolve: (response) => {\n                        delete response.requestId;\n                        (0, core_1.logDebug)(\"clint syncAllAddress --response >\", JSON.stringify(response));\n                        if (('error' in response) && response.error) {\n                            let error = response.error;\n                            reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                        }\n                        else {\n                            let allAddressStr = response.result;\n                            resolve((0, ConnectMethodUtils_1.syncResoonseToRequire)(allAddressStr));\n                        }\n                    }\n                }).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n    }\n}\nexports.SignClient = SignClient;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.connectSupportMethods = void 0;\nexports.creatNotSupportMethodItemReplay = creatNotSupportMethodItemReplay;\nexports.connectMethodsAdaptOldVersion = connectMethodsAdaptOldVersion;\nexports.connectMethodsResponseUpdate = connectMethodsResponseUpdate;\nexports.connectMethodsToConnectWalletMethods = connectMethodsToConnectWalletMethods;\nexports.syncResoonseToRequire = syncResoonseToRequire;\nconst core_1 = require(\"@okxconnect/core\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst provider_1 = require(\"../../provider\");\nfunction isArray(value) {\n    return typeof value === \"object\" && value !== null && Array.isArray(value);\n}\nfunction isRecord(value) {\n    return typeof value === \"object\" && value !== null && !Array.isArray(value);\n}\n// \"wallet_addEthereumChain\",\n// \"solana_signMessage\",  There are risks\nexports.connectSupportMethods = Object.freeze([\n    \"personal_sign\",\n    \"sui_signMessage\",\n    \"sui_signPersonalMessage\",\n    \"btc_signMessage\",\n    \"aptos_signMessage\",\n    \"cosmos_signArbitrary\",\n    \"tron_signMessage\",\n    \"tron_signMessageV2\",\n    \"starknet_signMessage\",\n    \"sync_all_addresses\",\n    \"solana_signMessage\"\n]);\nfunction creatNotSupportMethodItemReplay(requestParams) {\n    let notSupportError = new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n    var errorItem = {\n        method: requestParams.method,\n        chainId: requestParams.chainId,\n        error: {\n            code: notSupportError.code,\n            message: notSupportError.message\n        },\n    };\n    return errorItem;\n}\nfunction connectMethodsAdaptOldVersion(requestParams, session) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b, _c, _d, _e;\n        try {\n            (0, core_1.logDebug)(\"connectMethodsAdaptOldVersion start params :\", JSON.stringify(requestParams));\n            let callBackParams = {};\n            if (requestParams.method === \"solana_signMessage\") {\n                let solAccount = (_a = session.namespaces[core_1.NameSpaceKeySOL]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account1) {\n                    return account1.startsWith(requestParams.chainId);\n                })[0];\n                const solAddress = (0, provider_1.fromAccountToAddress)(solAccount);\n                if (requestParams.params && solAddress && \"message\" in requestParams.params) {\n                    let realMessage = requestParams.params.message;\n                    if (((_b = session.wallet) === null || _b === void 0 ? void 0 : _b.appName) == \"OKX Wallet\") {\n                        let encodeMessage = new TextEncoder().encode(realMessage);\n                        realMessage = bs58_1.default.encode(encodeMessage);\n                    }\n                    requestParams.params = {\n                        message: realMessage,\n                        \"pubkey\": solAddress\n                    };\n                    callBackParams = {\n                        publicKey: solAddress\n                    };\n                    (0, core_1.logDebug)(\"solana_signMessage account and address:\", JSON.stringify(solAccount), solAddress);\n                    (0, core_1.logDebug)(\"solana_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"sui_signMessage\" || requestParams.method === \"sui_signPersonalMessage\") {\n                if (\"message\" in requestParams.params && requestParams.params.message) {\n                    let suiMessage = JSON.parse(JSON.stringify(requestParams.params.message));\n                    let convertedArray = Object.values(suiMessage);\n                    let uint8Array = new Uint8Array(convertedArray);\n                    let decoder = new TextDecoder(\"utf8\");\n                    let b64encoded = btoa(decoder.decode(uint8Array));\n                    requestParams.params = {\n                        message: atob(b64encoded),\n                    };\n                    console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", JSON.stringify(requestParams.params), b64encoded);\n                    if (requestParams.method === \"sui_signMessage\") {\n                        callBackParams = {\n                            \"messageBytes\": b64encoded,\n                            \"signature\": \"\"\n                        };\n                    }\n                    else if (requestParams.method === \"sui_signPersonalMessage\") {\n                        callBackParams = {\n                            \"bytes\": b64encoded,\n                            \"signature\": \"\"\n                        };\n                    }\n                    (0, core_1.logDebug)(\"sui_signMessage/sui_signPersonalMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"btc_signMessage\") {\n                let btcAccounts = (_c = session.namespaces[core_1.NameSpaceKeyBtc]) === null || _c === void 0 ? void 0 : _c.accounts.filter(function (account2) {\n                    return account2.startsWith(requestParams.chainId);\n                });\n                let btcAccount = btcAccounts[0];\n                const btcAddress = (0, provider_1.fromAccountToAddress)(btcAccount);\n                (0, core_1.logDebug)(\"btc_signMessage account and address:\", JSON.stringify(btcAccount), btcAddress);\n                if (btcAddress) {\n                    if (\"message\" in requestParams.params && requestParams.params.message && typeof requestParams.params.message === 'string') {\n                        requestParams.params = {\n                            from: btcAddress,\n                            signStr: requestParams.params.message\n                        };\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                    }\n                    requestParams.params[\"from\"] = btcAddress;\n                    (0, core_1.logDebug)(\"btc_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"aptos_signMessage\") {\n                let paramData = requestParams.params;\n                let aptosAccount = (_d = session.namespaces[core_1.NameSpaceKeyAptos]) === null || _d === void 0 ? void 0 : _d.accounts.filter(function (account3) {\n                    return account3.startsWith(requestParams.chainId);\n                })[0];\n                let aptosAddress = (0, provider_1.fromAccountToAddress)(aptosAccount);\n                if (paramData && aptosAddress) {\n                    let prefix = \"APTOS\";\n                    let message = \"\", nonce = \"\";\n                    var fullMessage = prefix;\n                    let application = window.location.protocol + \"//\" + window.location.hostname;\n                    if (\"address\" in paramData && paramData.address) {\n                        fullMessage += \"\\naddress: \" + aptosAddress;\n                    }\n                    if (\"application\" in paramData && paramData.application) {\n                        fullMessage += \"\\napplication: \" + application;\n                    }\n                    let aptosChainId = 1;\n                    if (\"chainId\" in paramData && paramData.chainId) {\n                        if (paramData.chainId == \"aptos:mainnet\") {\n                            aptosChainId = 1;\n                        }\n                        else if (paramData.chainId == \"movement:testnet\") {\n                            aptosChainId = 2;\n                        }\n                        fullMessage += \"\\nchainId: \" + aptosChainId;\n                    }\n                    if (\"message\" in paramData) {\n                        fullMessage += \"\\nmessage: \" + paramData.message;\n                        message = paramData.message;\n                    }\n                    if (\"nonce\" in paramData) {\n                        fullMessage += \"\\nnonce: \" + paramData.nonce;\n                        nonce = paramData.nonce;\n                    }\n                    const utf8Array = new TextEncoder().encode(fullMessage);\n                    const hex = Array.from(utf8Array)\n                        .map(byte => byte.toString(16).padStart(2, \"0\"))\n                        .join(\"\");\n                    requestParams.params = {\n                        \"message\": hex,\n                    };\n                    (0, core_1.logDebug)(\"aptos_signMessage requestParams:\", JSON.stringify(requestParams));\n                    callBackParams = {\n                        address: aptosAddress,\n                        application: application,\n                        chainId: aptosChainId,\n                        fullMessage: fullMessage,\n                        message: message,\n                        nonce: nonce,\n                        prefix: prefix,\n                        signature: \"\",\n                    };\n                    (0, core_1.logDebug)(\"aptos_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"cosmos_signArbitrary\") {\n                let cosmosAccount = (_e = session === null || session === void 0 ? void 0 : session.namespaces[core_1.NameSpaceKeyCosmos]) === null || _e === void 0 ? void 0 : _e.accounts.filter(function (account_cosmos) {\n                    return account_cosmos.startsWith(requestParams.chainId);\n                })[0];\n                const cosmosAddress = (0, provider_1.fromAccountToAddress)(cosmosAccount);\n                let cosmosData = requestParams.params[\"message\"];\n                const cosmosBase64Encoded = btoa(cosmosData);\n                (0, core_1.logDebug)(\"cosmos_signArbitrary account and address:\", JSON.stringify(cosmosAccount), cosmosAddress);\n                (0, core_1.logDebug)(\"cosmos_signArbitrary cosmosBase64Encoded:\", cosmosBase64Encoded);\n                if (cosmosData && cosmosAddress) {\n                    const signDoc = {\n                        chain_id: \"\",\n                        account_number: \"0\",\n                        sequence: \"0\",\n                        fee: {\n                            gas: \"0\",\n                            amount: []\n                        },\n                        msgs: [{\n                                \"type\": \"sign/MsgSignData\",\n                                \"value\": {\n                                    \"signer\": cosmosAddress,\n                                    \"data\": cosmosBase64Encoded\n                                }\n                            }],\n                        memo: \"\"\n                    };\n                    requestParams.params = {\n                        \"signer\": cosmosAddress,\n                        \"chain_id\": requestParams.chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    };\n                    (0, core_1.logDebug)(\"cosmos_signArbitrary callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            (0, core_1.logDebug)(\"sol_handleSignatureData end params:\", JSON.stringify(requestParams));\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\nfunction connectMethodsResponseUpdate(session, requestParams) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a;\n        try {\n            if (session.signResponse) {\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate signResponse:\", JSON.stringify(session.signResponse));\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate session.namespaces:\", JSON.stringify(session.namespaces));\n                for (const methodItem of session.signResponse) {\n                    (0, core_1.logDebug)(\"connectMethodsResponseUpdate methodItem:\", JSON.stringify(methodItem));\n                    if (\"result\" in methodItem) {\n                        if (methodItem.method === \"solana_signMessage\") {\n                            let solanaSuccessData = methodItem.result;\n                            (0, core_1.logDebug)(\"solana_signMessage methodItem.chainId:\", methodItem.chainId);\n                            let account = (_a = session.namespaces[core_1.NameSpaceKeySOL]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account) {\n                                (0, core_1.logDebug)(\"solana_signMessage account:\", account);\n                                return account.startsWith(methodItem.chainId);\n                            })[0];\n                            (0, core_1.logDebug)(\"solana_signMessage result account:\", solanaSuccessData, account);\n                            if (solanaSuccessData && account) {\n                                methodItem.result = {\n                                    \"signature\": bs58_1.default.decode(solanaSuccessData),\n                                    \"publicKey\": (0, provider_1.fromAccountToAddress)(account)\n                                };\n                            }\n                        }\n                        else if (methodItem.method === \"sui_signMessage\" || methodItem.method === \"sui_signPersonalMessage\") {\n                            let suiMethod = requestParams.filter(function (requestMethod) {\n                                return requestMethod.method === methodItem.method;\n                            })[0];\n                            if (suiMethod && suiMethod.params && \"message\" in suiMethod.params) {\n                                let suiMessage = suiMethod.params.message;\n                                let suiMessageb64 = btoa(suiMessage);\n                                console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", suiMessage, suiMessageb64);\n                                if (methodItem.method === \"sui_signMessage\") {\n                                    methodItem.result = {\n                                        \"messageBytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                                else if (methodItem.method === \"sui_signPersonalMessage\") {\n                                    methodItem.result = {\n                                        \"bytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                            }\n                        }\n                        else if (methodItem.method === \"aptos_signMessage\") {\n                            if (methodItem.chainId === \"aptos:637\") {\n                                methodItem.chainId = \"aptos:mainnet\";\n                            }\n                            else if (methodItem.chainId === \"aptos:70000060\") {\n                                methodItem.chainId = \"movement:testnet\";\n                            }\n                            methodItem.result = JSON.parse(methodItem.result);\n                            console.log(\"aptos_signMessage result methodItem.result before:>>>>\", JSON.stringify(methodItem.result));\n                            if (methodItem.result && \"signature\" in methodItem.result) {\n                                let aptosSignature = methodItem.result.signature;\n                                if (aptosSignature && aptosSignature.startsWith(\"0x\")) {\n                                    aptosSignature = aptosSignature.slice(2, aptosSignature.length);\n                                    methodItem.result.signature = aptosSignature;\n                                }\n                            }\n                            console.log(\"aptos_signMessage result methodItem.result after:>>>>\", JSON.stringify(methodItem.result));\n                        }\n                        else if (methodItem.method === \"cosmos_signArbitrary\") {\n                            methodItem.result = JSON.parse(methodItem.result);\n                        }\n                        else if (methodItem.method == 'starknet_signMessage') {\n                            let results = methodItem.result;\n                            if (typeof results == 'string') {\n                                results = JSON.parse(results);\n                            }\n                            methodItem.result = [results[\"signedDataR\"], results[\"signedDataS\"]];\n                        }\n                        else if (methodItem.method == 'sync_all_addresses') {\n                            methodItem.result = syncResoonseToRequire(methodItem.result);\n                        }\n                    }\n                }\n            }\n        }\n        catch (error) {\n            (0, core_1.logDebug)(\"connectMethodsResponseUpdate signResponse Error:\", JSON.stringify(error));\n            throw error;\n        }\n    });\n}\nfunction connectMethodsToConnectWalletMethods(params, requireNameSpace) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods requestMethods:\", JSON.stringify(params));\n            const result = [];\n            //TODO  后面需要打开限制\n            // if (params && params.length>1){\n            //     throw new OKXConnectError(\n            //         OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR,\n            //         `connectAndSign/openModalAndSign signRequest only support one data`\n            //     );\n            // }\n            if (!requireNameSpace && params && params.length > 0) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error , RequestMethods cannot be added when the NameSpace is empty`);\n            }\n            // check chianId\n            for (const methodItem of params) {\n                if (methodItem.method === \"aptos_signMessage\") { //update chainId\n                    if (methodItem.chainId === \"aptos:mainnet\") {\n                        methodItem.chainId = \"aptos:637\";\n                    }\n                    else if (methodItem.chainId === \"movement:testnet\") {\n                        methodItem.chainId = \"aptos:70000060\";\n                    }\n                }\n                // check chianId\n                if (methodItem.method === \"wallet_addEthereumChain\") {\n                    var includeEip155 = requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.namespace.includes(\"eip155\"));\n                    if (!includeEip155) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', the EVM chain needs to be included in the NameSpace`);\n                    }\n                }\n                else if (methodItem.method === \"sync_all_addresses\") {\n                    if ((0, provider_1.syncAddressHostAvailable)()) {\n                        methodItem.chainId = \"\";\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                    }\n                }\n                else {\n                    const includeChain = !!(requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.chains.some(chain => chain.includes(`${methodItem.chainId}`))));\n                    if (!includeChain) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', NameSpace must contain '${methodItem.chainId}'`);\n                    }\n                }\n            }\n            for (const item of params) {\n                if (!exports.connectSupportMethods.includes(item.method)) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect requestMethods not support method, method: '${item.method}'`);\n                }\n                if (item.method === \"wallet_addEthereumChain\") {\n                    if (Array.isArray(item.params)) {\n                        const paramsArr = item.params;\n                        if (paramsArr && paramsArr.length === 1) {\n                            const firstParam = paramsArr[0];\n                            if (isRecord(firstParam)) {\n                                item.params = firstParam;\n                            }\n                        }\n                        else if (paramsArr && paramsArr.length > 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params only support one data, method: '${item.method}'`);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is nil, method: '${item.method}'`);\n                        }\n                    }\n                }\n                else if (item.method === \"personal_sign\") {\n                    if (isArray(item.params)) {\n                        if (item.params && item.params.length !== 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params error,  method: '${item.method}' `);\n                        }\n                        let firstObj = item.params[0];\n                        if (firstObj && typeof firstObj === 'string') {\n                            item.params = {\n                                message: firstObj\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                }\n                else if (item.method === \"sui_signMessage\" || item.method === \"sui_signPersonalMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message) {\n                            (0, core_1.logDebug)(\"sui_signMessage item.params.message :\", item.params.message);\n                            let message = JSON.parse(JSON.stringify(item.params.message));\n                            let convertedArray = Object.values(message);\n                            let uint8Array = new Uint8Array(convertedArray);\n                            let decoder = new TextDecoder(\"utf8\");\n                            let b64encoded = btoa(decoder.decode(uint8Array));\n                            item.params.message = atob(b64encoded);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"solana_signMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            let encodeMessage = new TextEncoder().encode(item.params.message);\n                            item.params[\"bs58Message\"] = bs58_1.default.encode(encodeMessage);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"aptos_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (item.chainId && (item.chainId === \"aptos:637\" || item.chainId === \"aptos:70000060\")) {\n                            var aptosParams = item.params;\n                            var currentURL = window.location.protocol + \"//\" + window.location.hostname;\n                            let signChainId = 1;\n                            if (item.chainId === \"aptos:637\") {\n                            }\n                            else if (item.chainId === \"aptos:70000060\") {\n                                signChainId = 2;\n                            }\n                            item.params = {\n                                data: aptosParams,\n                                applicationUrl: currentURL,\n                                prefix: \"APTOS\",\n                                aptosChainId: signChainId\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"cosmos_signArbitrary\") {\n                    if (isRecord(item.params)) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            const base64Encoded = btoa(item.params.message);\n                            let cosmosChain = item.chainId.split(\":\")[1];\n                            if (cosmosChain) {\n                                item.params = {\n                                    chain_id: cosmosChain,\n                                    data: {\n                                        chain_id: \"\",\n                                        account_number: \"0\",\n                                        sequence: \"0\",\n                                        fee: {\n                                            gas: \"0\",\n                                            amount: []\n                                        },\n                                        msgs: [{\n                                                \"type\": \"sign/MsgSignData\",\n                                                \"value\": {\n                                                    \"signer\": \"\", //address\n                                                    \"data\": base64Encoded\n                                                }\n                                            }],\n                                        memo: \"\"\n                                    }\n                                };\n                            }\n                            else {\n                                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                            }\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params message is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method == \"tron_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (\"message\" in item.params && item.params.message && typeof item.params.message === 'string') {\n                            item.params.message = stringToHex(item.params.message);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method == \"btc_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (\"message\" in item.params && item.params.message && typeof item.params.message === 'string') {\n                            item.params = {\n                                signStr: item.params.message\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods item:\", JSON.stringify(item));\n                result.push(item);\n            }\n            return result;\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\nfunction stringToHex(str) {\n    let hex = '';\n    for (let i = 0; i < str.length; i++) {\n        hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n    }\n    return hex;\n}\nfunction syncResoonseToRequire(responseAddressStr) {\n    const allAddress = JSON.parse(responseAddressStr);\n    const result = {\n        type: allAddress.type,\n        isEvm: allAddress.isEvm,\n        walletName: allAddress.walletName,\n        deriveName: allAddress.deriveName,\n        addresses: allAddress.addresses.map((addr) => ({\n            coinId: addr.ci,\n            address: addr.a && addr.a !== 'null' ? addr.a : allAddress.evmAddress,\n        })),\n    };\n    return result;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.creatNotSupportMethodItemReplay = exports.connectMethodsAdaptOldVersion = void 0;\nvar ConnectMethodUtils_1 = require(\"./ConnectMethodUtils\");\nObject.defineProperty(exports, \"connectMethodsAdaptOldVersion\", { enumerable: true, get: function () { return ConnectMethodUtils_1.connectMethodsAdaptOldVersion; } });\nObject.defineProperty(exports, \"creatNotSupportMethodItemReplay\", { enumerable: true, get: function () { return ConnectMethodUtils_1.creatNotSupportMethodItemReplay; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAccountsChains = getAccountsChains;\nexports.nameSpaceToConnectWalletNameSpace = nameSpaceToConnectWalletNameSpace;\nexports.fillParamsToSession = fillParamsToSession;\nexports.isCaipNamespace = isCaipNamespace;\nexports.parseNamespaceKey = parseNamespaceKey;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getAccountsChains(accounts) {\n    const chains = [];\n    accounts.forEach((account) => {\n        const [chain, chainId] = account.split(\":\");\n        chains.push(`${chain}:${chainId}`);\n    });\n    return chains;\n}\nfunction nameSpaceToConnectWalletNameSpace(namespaces) {\n    var result = [];\n    if (!namespaces) {\n        return result;\n    }\n    Object.keys(namespaces).forEach((key) => {\n        if (key === core_1.NameSpaceKeyEip155 || key === core_1.NameSpaceKeySOL || key === core_1.NameSpaceKeySui || key === core_1.NameSpaceKeyAptos\n            || key == core_1.NameSpaceKeyBtc || key === core_1.NameSpaceKeyTON || key === core_1.NameSpaceKeyCosmos || key === core_1.NameSpaceKeyTron || key === core_1.NameSpaceKeyStarknet) {\n            if (namespaces[key].chains) {\n                result.push({\n                    namespace: key,\n                    chains: namespaces[key].chains,\n                    params: namespaces[key].params\n                });\n            }\n        }\n    });\n    return result;\n}\nfunction fillParamsToSession(session, namespaces, optionalNamespaces, sessionConfig) {\n    // Helper function to merge rpcMaps\n    const mergeRpcMap = (targetRpcMap, sourceRpcMap) => {\n        Object.assign(targetRpcMap, sourceRpcMap);\n    };\n    // Merge function for namespaces\n    const mergeNamespaces = (target, source) => {\n        for (const key in source) {\n            if (source.hasOwnProperty(key) && source[key].rpcMap) {\n                if (source[key].rpcMap) {\n                    if (!target[key].rpcMap) {\n                        target[key].rpcMap = {};\n                    }\n                    // 合并 rpcMap\n                    mergeRpcMap(target[key].rpcMap, source[key].rpcMap);\n                }\n                if (source[key].defaultChain && target[key].defaultChain === undefined) {\n                    //defaultChain need in session nameSpace\n                    if (target[key].chains.some(chain => chain.split(\":\")[1] === source[key].defaultChain)) {\n                        target[key].defaultChain = source[key].defaultChain;\n                    }\n                }\n            }\n        }\n    };\n    // 合并 namespaces\n    if (namespaces) {\n        mergeNamespaces(session.namespaces, namespaces);\n    }\n    // 合并 optionalNamespaces\n    if (optionalNamespaces) {\n        mergeNamespaces(session.namespaces, optionalNamespaces);\n    }\n    for (const key in session.namespaces) {\n        const namespace = session.namespaces[key];\n        if (!(namespace === null || namespace === void 0 ? void 0 : namespace.accounts) || namespace.accounts.length === 0) {\n            delete session.namespaces[key];\n        }\n    }\n    if (session.namespaces[core_1.NameSpaceKeyBtc] && session.wallet.appName === core_1.OKX_APP_WALLET_NAME) {\n        fixMobileBtcSession(session.namespaces[core_1.NameSpaceKeyBtc]);\n    }\n    session.sessionConfig = sessionConfig;\n}\nfunction fixMobileBtcSession(btcNameSpace) {\n    try {\n        if (btcNameSpace && btcNameSpace.extra) {\n            var data = btcNameSpace.extra;\n            Object.keys(data).forEach(key => {\n                const item = data[key];\n                if (Number(item.addressType) === 6) {\n                    item.publicKey = item.compressedPublicKey.slice(2);\n                }\n                else {\n                    item.publicKey = item.compressedPublicKey;\n                }\n            });\n        }\n    }\n    catch (e) {\n        (0, core_1.logDebug)(\"namespaces fixMobileBtcSession error\");\n    }\n}\n/**\n * util designed for Wallets that builds namespaces structure by provided supported chains, methods, events & accounts.\n * It takes required & optional namespaces provided in the session proposal\n * along with the supported chains/methods/events/accounts by the wallet and returns a structured namespaces object\n * @param {BuildApprovedNamespacesParams} params\n * @returns {SessionTypes.Namespaces}\n */\n// export function buildApprovedNamespaces(\n//   params: BuildApprovedNamespacesParams,\n// ): SessionTypes.Namespaces {\n//   const {\n//     proposal: { requiredNamespaces, optionalNamespaces = {} },\n//     supportedNamespaces,\n//   } = params;\n//   const normalizedRequired = normalizeNamespaces(requiredNamespaces);\n//   const normalizedOptional = normalizeNamespaces(optionalNamespaces);\n//\n//   // build approved namespaces\n//   const namespaces = {};\n//   Object.keys(supportedNamespaces).forEach((namespace) => {\n//     const supportedChains = supportedNamespaces[namespace].chains;\n//     const supportedMethods = supportedNamespaces[namespace].methods;\n//     const supportedEvents = supportedNamespaces[namespace].events;\n//     const supportedAccounts = supportedNamespaces[namespace].accounts;\n//\n//     supportedChains.forEach((chain) => {\n//       if (!supportedAccounts.some((account) => account.includes(chain))) {\n//         throw new Error(`No accounts provided for chain ${chain} in namespace ${namespace}`);\n//       }\n//     });\n//\n//     namespaces[namespace] = {\n//       chains: supportedChains,\n//       methods: supportedMethods,\n//       events: supportedEvents,\n//       accounts: supportedAccounts,\n//     };\n//   });\n//\n//   // verify all required namespaces are supported\n//   const err = isConformingNamespaces(requiredNamespaces, namespaces, \"approve()\");\n//   if (err) throw new Error(err.message);\n//\n//   const approvedNamespaces = {};\n//\n//   // if both required & optional namespaces are empty, return all supported namespaces by the wallet\n//   if (!Object.keys(requiredNamespaces).length && !Object.keys(optionalNamespaces).length)\n//     return namespaces;\n//\n//   // assign accounts for the required namespaces\n//   Object.keys(normalizedRequired).forEach((requiredNamespace) => {\n//     const chains = supportedNamespaces[requiredNamespace].chains.filter((chain) =>\n//       normalizedRequired[requiredNamespace]?.chains?.includes(chain),\n//     );\n//     const methods = supportedNamespaces[requiredNamespace].methods.filter((method) =>\n//       normalizedRequired[requiredNamespace]?.methods?.includes(method),\n//     );\n//     const events = supportedNamespaces[requiredNamespace].events.filter((event) =>\n//       normalizedRequired[requiredNamespace]?.events?.includes(event),\n//     );\n//\n//     const accounts = chains\n//       .map((chain: string) =>\n//         supportedNamespaces[requiredNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[requiredNamespace] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   });\n//\n//   // add optional namespaces\n//   Object.keys(normalizedOptional).forEach((optionalNamespace) => {\n//     if (!supportedNamespaces[optionalNamespace]) return;\n//\n//     const chainsToAdd = normalizedOptional[optionalNamespace]?.chains?.filter((chain) =>\n//       supportedNamespaces[optionalNamespace].chains.includes(chain),\n//     );\n//     const methodsToAdd = supportedNamespaces[optionalNamespace].methods.filter((method) =>\n//       normalizedOptional[optionalNamespace]?.methods?.includes(method),\n//     );\n//     const eventsToAdd = supportedNamespaces[optionalNamespace].events.filter((event) =>\n//       normalizedOptional[optionalNamespace]?.events?.includes(event),\n//     );\n//\n//     const accountsToAdd = chainsToAdd\n//       ?.map((chain: string) =>\n//         supportedNamespaces[optionalNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[optionalNamespace] = {\n//       chains: mergeArrays(approvedNamespaces[optionalNamespace]?.chains, chainsToAdd),\n//       methods: mergeArrays(approvedNamespaces[optionalNamespace]?.methods, methodsToAdd),\n//       events: mergeArrays(approvedNamespaces[optionalNamespace]?.events, eventsToAdd),\n//       accounts: mergeArrays(approvedNamespaces[optionalNamespace]?.accounts, accountsToAdd),\n//     };\n//   });\n//\n//   return approvedNamespaces;\n// }\nfunction isCaipNamespace(namespace) {\n    return namespace.includes(\":\");\n}\nfunction parseNamespaceKey(namespace) {\n    return isCaipNamespace(namespace) ? namespace.split(\":\")[0] : namespace;\n}\n/**\n * Converts\n * ```\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * ```\n * into\n * ```\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *```\n */\n// export function normalizeNamespaces(\n//   namespaces: ProposalTypes.RequiredNamespaces,\n// ): ProposalTypes.RequiredNamespaces {\n//   const normalizedNamespaces = {} as ProposalTypes.RequiredNamespaces;\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       methods: mergeArrays(methods, normalizedNamespaces[normalizedKey]?.methods),\n//       events: mergeArrays(events, normalizedNamespaces[normalizedKey]?.events),\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n// export function getNamespacesFromAccounts(accounts: string[]) {\n//   const namespaces = {};\n//   accounts?.forEach((account) => {\n//     const [namespace, chainId] = account.split(\":\");\n//     if (!namespaces[namespace]) {\n//       namespaces[namespace] = {\n//         accounts: [],\n//         chains: [],\n//         events: [],\n//       };\n//     }\n//     namespaces[namespace].accounts.push(account);\n//     namespaces[namespace].chains.push(`${namespace}:${chainId}`);\n//   });\n//\n//   return namespaces;\n// }\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PROVIDER_EVENTS = void 0;\nexports.PROVIDER_EVENTS = {\n    DEFAULT_CHAIN_CHANGED: \"default_chain_changed\",\n    UPDATE_NAMESPACES: \"update_name_spaces\",\n    SESSION_CONNECTING: \"session_connecting\"\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./values\"), exports);\n__exportStar(require(\"./events\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GENERIC_SUBPROVIDER_NAME = exports.RPC_URL = exports.STORAGE = exports.CONTEXT = exports.WC_VERSION = exports.PROTOCOL = exports.RELAY_URL = exports.LOGGER = void 0;\nexports.LOGGER = \"error\";\nexports.RELAY_URL = \"wss://relay.walletconnect.com\";\nexports.PROTOCOL = \"wc\";\nexports.WC_VERSION = 2;\nexports.CONTEXT = \"universal_provider\";\nexports.STORAGE = `${exports.PROTOCOL}@${exports.WC_VERSION}:${exports.CONTEXT}:`;\nexports.RPC_URL = \"https://rpc.walletconnect.com/v1/\";\nexports.GENERIC_SUBPROVIDER_NAME = \"generic\";\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./types\"), exports);\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass AptosProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"aptos\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"solana request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"solana provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = AptosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass BtcProvider {\n    constructor(opts, name, client, events) {\n        this.name = core_1.NameSpaceKeyBtc;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"btc request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"btc provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = BtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass CosmosProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyCosmos;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"cosmos request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"cosmos provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = CosmosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Eip155Provider = void 0;\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nclass Eip155Provider {\n    constructor(opts, client, events) {\n        this.name = \"eip155\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = parseInt(this.getDefaultChain());\n        // rpc\n        this.httpProviders = this.createHttpProviders();\n        (0, core_1.logDebug)(\"eip155 constructor --opts.namespace-->\", opts.namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    isArray(value) {\n        return typeof value === \"object\" && value !== null && Array.isArray(value);\n    }\n    updateRequestParams(args) {\n        let isDic = args.params && typeof args.params === 'object' && !Array.isArray(args.params);\n        if (args.method === 'wallet_switchEthereumChain') {\n            const switchChainId = args.chainId.split(\":\")[1];\n            // const hexChainId = parseInt(switchChainId, 16);\n            const decimalNumber = parseInt(switchChainId, 10);\n            if (isNaN(decimalNumber)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid decimal number,  chainId: '${switchChainId}' `);\n            }\n            if (!args.params) {\n                args.params = { chainId: '0x' + decimalNumber.toString(16) };\n            }\n            else if (isDic) { //为 Record<string, unknown>\n                let params = args.params;\n                if (!('chainId' in params)) {\n                    params['chainId'] = '0x' + decimalNumber.toString(16);\n                    args.params = params;\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params error ,  method: '${args.method}' `);\n            }\n        }\n        else if (args.method === 'personal_sign'\n            || args.method === 'eth_signTypedData_v4'\n            || args.method === 'eth_sendTransaction'\n            || args.method === 'wallet_watchAsset') {\n            if (!args.params) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params is nil, method: '${args.method}'`);\n            }\n            if (this.isRecord(args.params)) {\n                let params = args.params;\n                (0, core_1.logDebug)(\"eip155 updateRequestParams params>\", JSON.stringify(params));\n                if ('chainId' in params) {\n                    const selectedChainId = args.chainId.split(\":\")[1];\n                    const chainNum = parseInt(selectedChainId, 10);\n                    let paramsChainString = String(params.chainId);\n                    let paramsChainId;\n                    if (paramsChainString.startsWith(this.name) && args.chainId === paramsChainString) { //为\n                        paramsChainId = chainNum;\n                    }\n                    else if (paramsChainString.startsWith(\"0x\")) {\n                        paramsChainId = parseInt(paramsChainString, 16);\n                    }\n                    else if (!isNaN(Number(paramsChainString))) { //数字\n                        paramsChainId = parseInt(paramsChainString, 10);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid params.chainId format, method: '${args.method}'`);\n                    }\n                    if (chainNum !== paramsChainId) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params.chainId not equal chain,  method: '${args.method}' `);\n                    }\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid request params type, method: '${args.method}'`);\n            }\n        }\n    }\n    //adapt array\n    adaptArray(args) {\n        if (args.method === 'wallet_switchEthereumChain'\n            || args.method === 'wallet_addEthereumChain'\n            || args.method === 'wallet_watchAsset'\n            || args.method === 'eth_sendTransaction') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr) {\n                    if (paramsArr.length === 1) {\n                        let firstParam = args.params[0];\n                        if (this.isRecord(firstParam)) {\n                            args.params = firstParam;\n                        }\n                    }\n                    else if (paramsArr.length > 1) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                    }\n                }\n            }\n        }\n        else if (args.method === 'eth_signTypedData_v4') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr && paramsArr.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                }\n                else if (paramsArr && paramsArr.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let messageObj = {};\n                if (paramsArr && paramsArr.length === 2) {\n                    let addressObj = args.params[0]; //address\n                    if (addressObj && typeof addressObj === 'string') { //check address\n                        let isEqual = false;\n                        this.namespace.accounts.forEach((account) => {\n                            let chainAddress = (0, utils_1.fromAccountToAddress)(account);\n                            if (chainAddress.toLowerCase() === addressObj.toLowerCase()) {\n                                isEqual = true;\n                            }\n                        });\n                        (0, core_1.logDebug)(\"eip155 adaptArray eth_signTypedData_v4 >>>isEqual: \", isEqual);\n                        if (!isEqual) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error, not equal,  method: '${args.method}' `);\n                        }\n                        if (this.isRecord(args.params[1])) {\n                            messageObj = args.params[1];\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error , not string,  method: '${args.method}' `);\n                    }\n                }\n                else if (paramsArr && paramsArr.length === 1) {\n                    if (this.isRecord(args.params[0])) {\n                        messageObj = args.params[0];\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                    }\n                }\n                try {\n                    let messages = JSON.stringify(messageObj);\n                    args.params = {\n                        typedDataJson: messages\n                    };\n                }\n                catch (err) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params call JSON.stringify() failed,  method: '${args.method}' `);\n                }\n            }\n        }\n        else if (args.method === 'personal_sign') {\n            if (this.isArray(args.params)) {\n                if (args.params && args.params.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params error,  method: '${args.method}' `);\n                }\n                else if (args.params && args.params.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let firstObj = args.params[0];\n                let secondObj = args.params[1];\n                if (secondObj && typeof secondObj === 'string') { //check address\n                    let isEqual = false;\n                    this.namespace.accounts.forEach((account) => {\n                        let chainAddress = (0, utils_1.fromAccountToAddress)(account);\n                        if (chainAddress.toLowerCase() === secondObj.toLowerCase()) {\n                            isEqual = true;\n                        }\n                    });\n                    (0, core_1.logDebug)(\"eip155 adaptArray personal_sign >>>isEqual: \", isEqual);\n                    if (!isEqual) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error,  method: '${args.method}' `);\n                    }\n                }\n                if (firstObj && typeof firstObj === 'string') {\n                    args.params = {\n                        message: firstObj\n                    };\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is error,  method: '${args.method}' `);\n                }\n            }\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"eth_requestAccounts\":\n            case \"eth_accounts\":\n            case \"eth_chainId\":\n                return false;\n            case \"eth_sendTransaction\":\n            case \"eth_signTransaction\":\n            case \"eth_sign\":\n            case \"personal_sign\":\n            case \"eth_signTypedData\":\n            case \"wallet_addEthereumChain\":\n            case \"wallet_watchAsset\":\n            case \"eth_signTypedData_v4\":\n                return true;\n            case \"wallet_switchEthereumChain\": {\n                this.adaptArray(args);\n                this.updateRequestParams(args);\n                const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n                return !this.isChainApproved(parsedChainId);\n            }\n            default:\n                return false;\n        }\n        return false;\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.adaptArray(args);\n            (0, core_1.logDebug)(\"eip155 request --args--string>\", JSON.stringify(args));\n            this.updateRequestParams(args);\n            (0, core_1.logDebug)(\"eip155 request --params--string>\", JSON.stringify(args));\n            switch (args.method) {\n                case \"eth_requestAccounts\":\n                    return this.getAccounts();\n                case \"eth_accounts\":\n                    return this.getAccounts();\n                case \"eth_chainId\":\n                    return parseInt(this.getDefaultChain());\n                case \"wallet_switchEthereumChain\": {\n                    return (yield this.handleSwitchChain(args));\n                }\n                case \"wallet_addEthereumChain\":\n                    return this.addEthereumChain(args);\n                default:\n                    break;\n            }\n            if (this.namespace.methods.includes(args.method)) {\n                // personal_sign\n                // eth_signTypedData_v4\n                // eth_sendTransaction\n                // wallet_watchAsset\n                try {\n                    const response = yield this.client.request(args);\n                    (0, core_1.logDebug)(\"eip155 request --response----string>\", JSON.stringify(response));\n                    if (this.isRecord(response)) {\n                        if ('result' in response) {\n                            let result = response.result;\n                            if (result && typeof result === 'string' && (result === \"true\" || result === \"false\")) {\n                                (0, core_1.logDebug)(\"eip155 request --wallet_watchAsset>>>>\", result === \"true\");\n                                return (result === \"true\");\n                            }\n                            return response.result;\n                        }\n                    }\n                    return response;\n                }\n                catch (e) {\n                    (0, core_1.logDebug)(`eip155 request --response --error--string> e instanceof OKXConnectError ${e instanceof core_1.OKXConnectError}`, JSON.stringify(e));\n                    throw e;\n                }\n            }\n            else {\n                (0, core_1.logDebug)('[RPC] request begin');\n                return yield this.getHttpProvider().request(args);\n            }\n        });\n    }\n    addEthereumChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let resultData = (yield this.client.request(args));\n            try {\n                if ('result' in resultData) {\n                    let successData = resultData;\n                    let account = resultData.result;\n                    if (account) {\n                        const nameSpace = account.split(\":\")[0];\n                        const chainId = account.split(\":\")[1];\n                        const chain = nameSpace + ':' + chainId;\n                        let newNameSpace = this.namespace;\n                        this.namespace.accounts.push(account);\n                        this.namespace.chains.push(chain);\n                        if (this.isRecord(args.params)) {\n                            if (\"rpcUrls\" in args.params) {\n                                let rpcUrls = args.params.rpcUrls;\n                                let rpcUrl = rpcUrls ? rpcUrls[0] : undefined;\n                                if (rpcUrl) {\n                                    if (this.namespace.rpcMap) {\n                                        this.namespace.rpcMap[chainId] = rpcUrl;\n                                    }\n                                    else {\n                                        this.namespace.rpcMap = {\n                                            [chainId]: rpcUrl\n                                        };\n                                    }\n                                    this.setHttpProvider(chainId, rpcUrl);\n                                }\n                            }\n                        }\n                        this.events.emit(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, {\n                            eip155: this.namespace\n                        });\n                    }\n                }\n                else {\n                    new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request error`);\n                }\n            }\n            catch (error) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request  error`);\n            }\n            return null;\n        });\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        this.chainId = parseInt(chainId);\n        // set rpc\n        if (!this.httpProviders[chainId]) {\n            const rpc = rpcUrl || (0, utils_1.getRpcUrl)(`${this.name}:${chainId}`, this.namespace);\n            if (!rpc) {\n                // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n                (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            }\n            else {\n                this.setHttpProvider(chainId, rpc);\n            }\n        }\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId.toString();\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // ---------- Private ----------------------------------------------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"eip155 getAccounts \", accounts, this.chainId);\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => {\n                return (0, utils_1.fromAccountToAddress)(account);\n            })),\n        ];\n    }\n    getHexChainIdFromRequest(args) {\n        let params = args.params;\n        let hexChainId = \"0x0\";\n        if (params && \"chainId\" in params) {\n            hexChainId = params.chainId;\n        }\n        hexChainId = hexChainId.startsWith(\"0x\") ? hexChainId : `0x${hexChainId}`;\n        (0, core_1.logDebug)(\"handleSwitchChain -->args \", args);\n        (0, core_1.logDebug)(\"handleSwitchChain -->hexChainId \", hexChainId);\n        const parsedChainId = parseInt(hexChainId, 16);\n        (0, core_1.logDebug)(\"handleSwitchChain -->parsedChainId \", parsedChainId);\n        return { parsedChainId, hexChainId };\n    }\n    handleSwitchChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n            if (this.isChainApproved(parsedChainId)) {\n                this.setDefaultChain(`${parsedChainId}`);\n            }\n            else {\n                const resultData = (yield this.client.request({\n                    method: \"wallet_switchEthereumChain\",\n                    chainId: args.chainId,\n                    params: {\n                        chainId: hexChainId,\n                    },\n                }));\n                try {\n                    if ('result' in resultData) {\n                        let successData = resultData;\n                        let account = resultData.result;\n                        if (account) {\n                            const nameSpace = account.split(\":\")[0];\n                            const chainId = account.split(\":\")[1];\n                            const chain = nameSpace + ':' + chainId;\n                            let newNameSpace = this.namespace;\n                            this.namespace.accounts.push(account);\n                            this.namespace.chains.push(chain);\n                            (0, core_1.logDebug)(\"handleSwitchChain -->wallet_switchEthereumChain \", resultData);\n                            this.setDefaultChain(`${parsedChainId}`);\n                            this.events.emit(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, {\n                                eip155: this.namespace\n                            });\n                        }\n                    }\n                    else {\n                        new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request error`);\n                    }\n                }\n                catch (error) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request  error`);\n                }\n            }\n            return null;\n        });\n    }\n    isChainApproved(chainId) {\n        return this.namespace.chains.includes(`${this.name}:${chainId}`);\n    }\n    // rpc\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            //   throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            (0, core_1.logDebug)('get parsed chain and rpc:', parsedChainId, parsedRpc);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        (0, core_1.logDebug)('get http providermap:', http);\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n}\nexports.Eip155Provider = Eip155Provider;\nexports.default = Eip155Provider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcConnection = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\n// Source: https://nodejs.org/api/events.html#emittersetmaxlistenersn\nconst EVENT_EMITTER_MAX_LISTENERS_DEFAULT = 10;\nclass JsonRpcConnection {\n    constructor(url, disableProviderPing = false) {\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n        this.events = new eventemitter3_1.EventEmitter();\n        this.isAvailable = false;\n        this.registering = false;\n        if (!(0, core_2.isHttpUrl)(url)) {\n            throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n        }\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n    }\n    get connected() {\n        return this.isAvailable;\n    }\n    get connecting() {\n        return this.registering;\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            yield this.register(url);\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                throw new Error(\"Connection already closed\");\n            }\n            this.onClose();\n        });\n    }\n    send(payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                yield this.register();\n            }\n            try {\n                const body = (0, core_1.safeJsonStringify)(payload);\n                const res = yield (0, cross_fetch_1.default)(this.url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                const data = yield res.json();\n                this.onPayload({ data });\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    register() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (!(0, core_2.isHttpUrl)(url)) {\n                throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n            }\n            if (this.registering) {\n                return new Promise((resolve, reject) => {\n                    this.events.once(\"register_error\", (error) => {\n                        reject(error);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.isAvailable === \"undefined\") {\n                            return reject(new Error(\"HTTP connection is missing or invalid\"));\n                        }\n                        resolve();\n                    });\n                });\n            }\n            this.url = url;\n            this.registering = true;\n            try {\n                if (!this.disableProviderPing) {\n                    const body = (0, core_1.safeJsonStringify)({ id: 1, jsonrpc: \"2.0\", method: \"test\", params: [] });\n                    yield (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                }\n                this.onOpen();\n            }\n            catch (e) {\n                const error = this.parseError(e);\n                this.events.emit(\"register_error\", error);\n                this.onClose();\n                throw error;\n            }\n        });\n    }\n    onOpen() {\n        this.isAvailable = true;\n        this.registering = false;\n        this.events.emit(\"open\");\n    }\n    onClose() {\n        this.isAvailable = false;\n        this.registering = false;\n        this.events.emit(\"close\");\n    }\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        const payload = typeof e.data === \"string\" ? (0, core_1.safeJsonParse)(e.data) : e.data;\n        this.events.emit(\"payload\", payload);\n    }\n    onError(id, e) {\n        const error = this.parseError(e);\n        const message = error.message || error.toString();\n        const payload = (0, core_2.formatJsonRpcError)(id, message);\n        this.events.emit(\"payload\", payload);\n    }\n    parseError(e, url = this.url) {\n        return (0, core_2.parseConnectionError)(e, url, \"HTTP\");\n    }\n}\nexports.JsonRpcConnection = JsonRpcConnection;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcProvider = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst types_1 = require(\"../../types\");\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nclass JsonRpcProvider extends types_1.IJSONRpcProvider {\n    constructor(connection) {\n        super(connection);\n        this.events = new eventemitter3_1.EventEmitter();\n        this.connected = false;\n        this.connecting = false;\n        this.hasRegisteredEventListeners = false;\n        this.connection = this.setConnection(connection);\n        if (this.connection.connected) {\n            this.registerEventListeners();\n        }\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            yield this.open(connection);\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.close();\n        });\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    request(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.requestStrict((0, core_1.formatJsonRpcRequest)(request.method, request.params || [], (0, core_1.getBigIntRpcId)().toString()), // casting to any is required in order to use BigInt as rpcId\n            context);\n        });\n    }\n    // ---------- Protected ----------------------------------------------- //\n    requestStrict(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.connection.connected) {\n                    try {\n                        yield this.open();\n                    }\n                    catch (e) {\n                        reject(e);\n                    }\n                }\n                this.events.on(`${request.id}`, (response) => {\n                    if ((0, core_1.isJsonRpcError)(response)) {\n                        reject(response.error);\n                    }\n                    else {\n                        resolve(response.result);\n                    }\n                });\n                try {\n                    (0, core_2.logDebug)('[RPC] >>> send request', request, context);\n                    yield this.connection.send(request, context);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }));\n        });\n    }\n    setConnection(connection = this.connection) {\n        return connection;\n    }\n    onPayload(payload) {\n        this.events.emit(\"payload\", payload);\n        if ((0, core_1.isJsonRpcResponse)(payload)) {\n            this.events.emit(`${payload.id}`, payload);\n        }\n        else {\n            this.events.emit(\"message\", {\n                type: payload.method,\n                data: payload.params,\n            });\n        }\n    }\n    onClose(event) {\n        // Code 3000 indicates an abnormal closure signalled by the relay -> emit an error in this case.\n        if (event && event.code === 3000) {\n            this.events.emit(\"error\", new Error(`WebSocket connection closed abnormally with code: ${event.code} ${event.reason ? `(${event.reason})` : \"\"}`));\n        }\n        this.events.emit(\"disconnect\");\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            if (this.connection === connection && this.connection.connected)\n                return;\n            if (this.connection.connected)\n                this.close();\n            if (typeof connection === \"string\") {\n                yield this.connection.open(connection);\n                connection = this.connection;\n            }\n            this.connection = this.setConnection(connection);\n            yield this.connection.open();\n            this.registerEventListeners();\n            this.events.emit(\"connect\");\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.connection.close();\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    registerEventListeners() {\n        if (this.hasRegisteredEventListeners)\n            return;\n        this.connection.on(\"payload\", (payload) => this.onPayload(payload));\n        this.connection.on(\"close\", (event) => this.onClose(event));\n        this.connection.on(\"error\", (error) => this.events.emit(\"error\", error));\n        this.connection.on(\"register_error\", (_error) => this.onClose());\n        this.hasRegisteredEventListeners = true;\n    }\n}\nexports.JsonRpcProvider = JsonRpcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolanaProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SolanaProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"solana\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"solana request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"solana provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    //   {\n    //     \"chains\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\" ],\n    //     \"accounts\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp:F7wnJc5wiBGy1k87jv6gyNwE3jMEWd18oTQiYsF1xVG7\"],\n    //     \"methods\": [\n    //         \"solana_signTransaction\",\n    //         \"solana_signMessage\"\n    //     ],\n    //     \"defaultChain\": \"5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\"\n    // }\n    // TODO:确认上面的defaultChain是否正确（没有solana前缀）\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"solana\"))) {\n                chainId = `solana:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.SolanaProvider = SolanaProvider;\nexports.default = SolanaProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass StarknetProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"starknet\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"starknet request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"starknet provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Wallet doesn't support\" + args.method);\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = StarknetProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuiProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SuiProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeySui;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"sui request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"sui provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"sui\"))) {\n                chainId = `sui:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"sui_signMessage\":\n            case \"sui_signPersonalMessage\":\n            case \"sui_signTransactionBlock\":\n            case \"sui_signAndExecuteTransactionBlock\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.SuiProvider = SuiProvider;\nexports.default = SuiProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TONProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTON;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            (0, core_1.logDebug)(\"TONProvider request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"TONProvider request provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                if (!args.params) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params is nil\");\n                }\n                if (this.isRecord(args.params)) {\n                    const _e = args.params, { validUntil } = _e, newParams = __rest(_e, [\"validUntil\"]);\n                    let fromAddress = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n                    if ('from' in newParams) {\n                        fromAddress = newParams.from || ((_d = (_c = this.namespace.payload) === null || _c === void 0 ? void 0 : _c.ton_addr) === null || _d === void 0 ? void 0 : _d.address);\n                    }\n                    args.params['from'] = fromAddress;\n                    args.params['network'] = this.getDefaultChain();\n                    args.params['valid_until'] = validUntil;\n                    let response = yield this.client.request(args);\n                    if (this.isRecord(response) && 'result' in response) {\n                        const result = {\n                            boc: response.result.toString()\n                        };\n                        (0, core_1.logDebug)(\"TONProvider request provider response: \", JSON.stringify(response));\n                        (0, core_1.logDebug)(\"TONProvider request provider result: \", JSON.stringify(result));\n                        return result;\n                    }\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton_send request response is nil\");\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params type add nil\");\n                }\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        var _a, _b;\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"ton getAccounts accounts :\", accounts);\n        (0, core_1.logDebug)(\"ton getAccounts .namespace :\", JSON.stringify(this.namespace));\n        if (!accounts) {\n            return [];\n        }\n        let address = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n        (0, core_1.logDebug)(\"ton getAccounts address :\", address);\n        if (address) {\n            return [\n                address\n            ];\n        }\n        return [];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"ton_sendTransaction\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.default = TONProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TronProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTron;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"tron request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"tron provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = TronProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./providers\"), exports);\n__exportStar(require(\"./misc\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IJSONRpcProvider = exports.IJSONRpcConnection = void 0;\nclass IJSONRpcConnection {\n}\nexports.IJSONRpcConnection = IJSONRpcConnection;\nclass IJSONRpcProvider {\n    constructor(opt) {\n    }\n}\nexports.IJSONRpcProvider = IJSONRpcProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setGlobal = exports.getGlobal = void 0;\nconst globals = {};\nconst getGlobal = (key) => {\n    return globals[key];\n};\nexports.getGlobal = getGlobal;\nconst setGlobal = (key, value) => {\n    globals[key] = value;\n};\nexports.setGlobal = setGlobal;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./misc\"), exports);\n__exportStar(require(\"./globals\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRpcUrl = getRpcUrl;\nexports.getChainId = getChainId;\nexports.fromAccountToAddress = fromAccountToAddress;\nexports.convertChainIdToNumber = convertChainIdToNumber;\nexports.parseChainId = parseChainId;\nexports.mergeArrays = mergeArrays;\nexports.syncAddressAvailable = syncAddressAvailable;\nexports.syncAddressHostAvailable = syncAddressHostAvailable;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getRpcUrl(chainId, rpc, projectId) {\n    var _a;\n    const chain = parseChainId(chainId);\n    // no default\n    return (((_a = rpc.rpcMap) === null || _a === void 0 ? void 0 : _a[chain.reference]) ||\n        ``);\n}\nfunction getChainId(chain) {\n    return chain.includes(\":\") ? chain.split(\":\")[1] : chain;\n}\nfunction fromAccountToAddress(account) {\n    if (!account) {\n        return \"\";\n    }\n    try {\n        let addressArr = account.split(\":\").slice(2);\n        let address = addressArr.length > 0 ? addressArr.join(\":\") : \"\";\n        (0, core_1.logDebug)(\"fromAccountToAddress address and account:\", address, account);\n        return address;\n    }\n    catch (e) {\n        (0, core_1.logError)(\"fromAccountToAddress error:\", account);\n        return \"\";\n    }\n}\n// export function validateChainApproval(chain: string, chains: string[]): void {\n//   if (!chains.includes(chain)) {\n//     throw new Error(\n//       `Chain '${chain}' not approved. Please use one of the following: ${chains.toString()}`,\n//     );\n//   }\n// }\n// export function getChainsFromApprovedSession(accounts: string[]): string[] {\n//   return accounts.map((address) => `${address.split(\":\")[0]}:${address.split(\":\")[1]}`);\n// }\n// export function getAccountsFromSession(namespace: string, session: SessionTypes.Struct): string[] {\n//   // match namespaces e.g. eip155 with eip155:1\n//   const matchedNamespaceKeys = Object.keys(session.namespaces).filter((key) =>\n//     key.includes(namespace),\n//   );\n//   if (!matchedNamespaceKeys.length) return [];\n//   const accounts: string[] = [];\n//   matchedNamespaceKeys.forEach((key) => {\n//     const accountsForNamespace = session.namespaces[key].accounts;\n//     accounts.push(...accountsForNamespace);\n//   });\n//   return accounts;\n// }\n// export function mergeRequiredOptionalNamespaces(\n//   required: NamespaceConfig = {},\n//   optional: NamespaceConfig = {},\n// ){\n//   const requiredNamespaces = normalizeNamespaces(required);\n//   const optionalNamespaces = normalizeNamespaces(optional);\n//    return merge.merge(requiredNamespaces,optionalNamespaces)\n// }\n/**\n * Converts\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * into\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *\n */\n// export function normalizeNamespaces(namespaces: NamespaceConfig): NamespaceConfig {\n//   const normalizedNamespaces: NamespaceConfig = {};\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const rpcMap = values.rpcMap || {};\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       ...values,\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       rpcMap: { ...rpcMap, ...normalizedNamespaces[normalizedKey]?.rpcMap },\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n//\n// export function parseCaip10Account(caip10Account: string): string {\n//   return caip10Account.includes(\":\") ? caip10Account.split(\":\")[2] : caip10Account;\n// }\n/**\n * Populates the chains array for each namespace with the chains extracted from the accounts if are otherwise missing\n */\n// export function populateNamespacesChains(\n//   namespaces: SessionTypes.Namespaces,\n// ): Record<string, SessionTypes.Namespace> {\n//   const parsedNamespaces: Record<string, SessionTypes.Namespace> = {};\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const accounts = values.accounts || [];\n//     // If the key includes a CAIP separator `:` we know it's a namespace + chainId (e.g. `eip155:1`)\n//     const chains = isCaipNamespace(key)\n//       ? [key]\n//       : values.chains\n//       ? values.chains\n//       : getChainsFromApprovedSession(values.accounts);\n//     parsedNamespaces[key] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   }\n//   return parsedNamespaces;\n// }\nfunction convertChainIdToNumber(chainId) {\n    if (typeof chainId === \"number\")\n        return chainId;\n    if (chainId.includes(\"0x\")) {\n        return parseInt(chainId, 16);\n    }\n    chainId = chainId.includes(\":\") ? chainId.split(\":\")[1] : chainId;\n    return isNaN(Number(chainId)) ? chainId : Number(chainId);\n}\nconst CAIP_DELIMITER = \":\";\nfunction parseChainId(chain) {\n    const [namespace, reference] = chain.split(CAIP_DELIMITER);\n    return { namespace, reference };\n}\nfunction mergeArrays(a = [], b = []) {\n    return [...new Set([...a, ...b])];\n}\nfunction syncAddressAvailable(wallet) {\n    if (!wallet) {\n        return false;\n    }\n    if (wallet.appName !== 'OKX Wallet') {\n        return false;\n    }\n    if ((0, core_1.versionCompare)('6.97.0', wallet.appVersion) > 0) {\n        return false;\n    }\n    return syncAddressHostAvailable();\n}\nfunction syncAddressHostAvailable() {\n    try {\n        return !!(window.okxGlobal);\n    }\n    catch (e) {\n        return false;\n    }\n}\n","<template>\n  <div id=\"app\">\n    <el-container>\n      <el-header>OKX Connect</el-header>\n      <el-main>\n        <el-card class=\"wallet-info\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Wallet Info</div>\n          </template>\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Wallet Address:</strong> {{ getWalletAddress }}\n            </el-col>\n          </el-row>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Status :</strong> {{ currentStatus }}\n            </el-col>\n          </el-row>\n\n        </el-card>\n\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Connect Params</div>\n          </template>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"withUI\" @change=\"handleWithUI\">\n                Show UI</el-checkbox>\n            </el-col>\n\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"universalToTG\" @change=\"handleUniversalToTG\">\n                Use mini wallet</el-checkbox>\n            </el-col>\n          </el-row>\n\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Modals</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"modals\" placeholder=\"Modals\" @change=\"handleModalsSelect\" multiple>\n                <el-option label=\"Before\" value=\"before\" />\n                <el-option label=\"Success\" value=\"success\" />\n                <el-option label=\"Error\" value=\"error\" />\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center; justify-content: space-between;\">\n            <el-col :span=\"6\" style=\"gap: 2px\">\n              <p style=\"font-size: 11pt; margin: 0px\">Return Strategy</p>\n              <p style=\"font-size: 9pt; margin: 0px\">(Mobile only)</p>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-select\n                v-model=\"returnStrategy\"\n                @change=\"handleReturnStrategySelect\"\n                placeholder=\"Return Strategy\"\n              >\n                <el-option\n                  v-for=\"strategy in returnStrategies\"\n                  :key=\"`return-strategy-select-option-${strategy}`\"\n                  :label=\"strategy\"\n                  :value=\"strategy\"\n                />\n              </el-select>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-input\n                v-if=\"returnStrategy === 'deeplink'\"\n                v-model=\"deeplink\"\n                @change=\"handleReturnStrategyDeeplink\"\n                placeholder=\"Deeplink\"\n                :disabled=\"returnStrategy !== 'deeplink'\"\n                style=\"margin: 0px\"\n              />\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Lang</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"language\" @change=\"handleLanguageSelect\" placeholder=\"Language\">\n                <el-option v-for=\"locale in locales\" :key=\"`language-select-option-${locale}`\" :label=\"locale\"\n                  :value=\"locale\" />\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Theme</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"theme\" @change=\"handleThemeSelect\" placeholder=\"Theme\">\n                <el-option label=\"LIGHT\" :value=\"THEME.LIGHT\" />\n                <el-option label=\"DARK\" :value=\"THEME.DARK\" />\n              </el-select>\n            </el-col>\n          </el-row>\n\n<!--          <el-row>-->\n<!--          <el-row style=\"align-items: center\">-->\n<!--            <el-col :span=\"4\">-->\n<!--              <p style=\"font-size: 11pt\">Connect</p>-->\n<!--              <p style=\"font-size: 11pt\">Methods</p>-->\n<!--            </el-col>-->\n<!--            <el-col :span=\"20\">-->\n<!--              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" placeholder=\"Methods\">-->\n<!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n<!--                           :value=\"methods\" />-->\n\n<!--              </el-select>-->\n<!--            </el-col>-->\n<!--          </el-row>-->\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Connect</p>\n              <p style=\"font-size: 11pt\">Methods</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" multiple placeholder=\"methods\">\n                <el-option\n                    v-for=\"item in connectMethods\"\n                    :key=\"item\"\n                    :label=\"item\"\n                    :value=\"item\">\n                </el-option>\n              </el-select>\n\n\n<!--              <el-select v-model=\"selectedMethod\" placeholder=\"Methods\" @change=\"handleConnectMethodsSelect\" multiple>-->\n<!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n<!--                           :value=\"methods\" />-->\n<!--              </el-select>-->\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">ton_proof</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-input v-model=\"tonProofValue\"  placeholder=\"input ton_proof\"></el-input>\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" align=\"middle\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Required Chains</div>\n            </el-col>\n            <el-col\n              :span=\"6\"\n              v-for=\"item in Object.keys(availableChains)\"\n              :key=\"item\"\n            >\n              <el-checkbox\n                v-model=\"availableChains[item].checked\"\n                :disabled=\"!areChainsInit\"\n                >{{ availableChains[item].name }}</el-checkbox\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" align=\"middle\" style=\"margin-top: 20px\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Optional Chains</div>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(43114)\" @change=\"() => handleOptionChange(43114)\">\n                AVAX</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(10)\" @change=\"() => handleOptionChange(10)\">OP</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(8453)\" @change=\"() => handleOptionChange(8453)\">\n                BASE</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(99781165)\"\n                @change=\"() => handleOptionChange(99781165)\">Nonexist</el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp')\" @change=\"() => handleOptionChange('solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp')\">Solana</el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('ton:-239')\" @change=\"() => handleOptionChange('ton:-239')\">Ton</el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('btc:mainnet')\" @change=\"() => handleOptionChange('btc:mainnet')\">btc</el-checkbox>\n            </el-col>\n\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"initBtnClicked\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectInitStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                type=\"primary\"\n                @click=\"connectBtnClicked\"\n                icon=\"el-icon-connection\"\n                :disabled=\"!areChainsInit\"\n                >{{ connectStatusStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"syncAllAddressClick\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ syncAllAddressStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                type=\"danger\"\n                @click=\"disconnectAction\"\n                icon=\"el-icon-switch-button\"\n                :disabled=\"!areChainsInit || walletAddress.length == 0\"\n                >{{ disconnectStatusStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n          <teleport to=\"body\">\n            <div v-if=\"showModal\" class=\"modal-overlay\" @click=\"closeModal\">\n              <div class=\"modal-content\" @click.stop>\n                <button class=\"close-button\" @click=\"closeModal\">\n                  &times;\n                </button>\n                <h2>Scan to connect</h2>\n                <qrcode-vue :value=\"qrValue\" :size=\"350\" level=\"L\" />\n              </div>\n            </div>\n          </teleport>\n        </el-card>\n\n        <!-- 发送交易 -->\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Transactions</div>\n          </template>\n\n          <el-tabs v-model=\"activeTab\" type=\"border-card\" @tab-click=\"clickActiveTab\">\n            <!-- ETH -->\n            <el-tab-pane label=\"ETH\" name=\"eip155:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to ETH)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve TONCoin)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(eth mint\n                    nft)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add SPX6900)\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TON\" name=\"ton:-239\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_getAccount\">ton_getAccount</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_sendTransaction\">ton_sendTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- solana -->\n            <el-tab-pane label=\"Sol\" name=\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- Sui-->\n            <el-tab-pane label=\"Sui\" name=\"sui:mainnet\">\n              <SuiPanel @generateTransactionParams=\"sui_generateTransactionParams\" />\n            </el-tab-pane>\n            <!-- BTC -->\n            <el-tab-pane label=\"BTC\" name=\"btc:mainnet\">\n              <BTCPanel @generateTransactionParams=\"btc_generateTransactionParams\" />\n            </el-tab-pane>\n\n            <!-- Fractal BTC -->\n            <el-tab-pane label=\"Fractal\" name=\"fractal:mainnet\">\n              <FractalPanel @generateTransactionParams=\"fractal_generateTransactionParams\" />\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Tron\" name=\"tron:mainnet\">\n              <TronTransactionPanel\n                  @generateTransactionParams=\"tron_generateTransactionParams\"\n                  @generateTransactionResult=\"tron_getTransactionResult\" />\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Aptos\" name=\"aptos:mainnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signTransaction\">aptos_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"aptos_signAndSubmitTransaction\">aptos_signAndSubmitTransaction</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Cosmos\" name=\"cosmos:cosmoshub-4\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <!-- Polygon-->\n            <el-tab-pane label=\"Polygon\" name=\"eip155:137\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send POL)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve sushi)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(polygon mint\n                    nft)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add LGNS)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_testRpc()\">wallet_testRpc(Polygon)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\"\n                  >eth_sendTransaction(转账FUSE)</el-button\n                  >\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\"\n                  >eth_sendTransaction(授权USDC)</el-button\n                  >\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- BSC-->\n            <el-tab-pane label=\"BNB\" name=\"eip155:56\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to BNB)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve POSI)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add FET)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_testRpc()\">wallet_testRpc(check balance on eth)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Fuse\" name=\"eip155:122\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_swap\">eth_sendTransaction(Swap)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Sonic testnet\" name=\"svm:70000062\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Movement\" name=\"movement:testnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"move_signTransaction\">move_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"move_signAndSubmitTransaction\">move_signAndSubmitTransaction</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n\n            <el-tab-pane label=\"osmos\" name=\"cosmos:osmosis-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"SEI\" name=\"cosmos:pacific-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Starknet\" name=\"starknet:mainnet\">\n              <StarknetPanel ref=\"starknetPanelRef\" @generateTransactionParams=\"starknet_generateTransactionParams\" @generateTransactionResult=\"starknet_getTransactionResult\" />\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TEST \" name=\"test:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"testBase64UrlSafe\">testBase64UrlSafe</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n          </el-tabs>\n\n          <el-col :xs=\"24\" :sm=\"24\" style=\"margin: 16px 0px;\">\n            <el-row style=\"align-items: center; justify-content: space-between; margin-bottom: 8px;\">\n              <el-col :span=\"4\">\n                <p style=\"font-size: 11pt; margin: 0px; text-align: start\">Redirect param (only for ETH, Polygon, BNB, Fuse)</p>\n              </el-col>\n              <el-col :span=\"9\">\n                <el-select\n                  v-model=\"redirect\"\n                  @change=\"handleRedirectSelect\"\n                  placeholder=\"Return Strategy\"\n                  :disabled=\"!canChainAddRedirectParam()\"\n                  >\n                  <el-option\n                    v-for=\"strategy in returnStrategies\"\n                    :key=\"`return-strategy-select-option-${strategy}`\"\n                    :label=\"strategy\"\n                    :value=\"strategy\"\n                  />\n                </el-select>\n              </el-col>\n              <el-col :span=\"10\">\n                <el-input\n                  v-if=\"redirect === 'deeplink'\"\n                  v-model=\"redirectDeeplink\"\n                  @change=\"handleRedirectDeeplink\"\n                  placeholder=\"Deeplink\"\n                  :disabled=\"!canChainAddRedirectParam() || redirect !== 'deeplink'\"\n                  style=\"margin: 0px\"\n                />\n              </el-col>\n            </el-row>\n            <el-button\n              type=\"primary\" @click=\"addRedirectParam()\"\n              :disabled=\"!canChainAddRedirectParam() || !testTransaction\"\n            >\n              Add redirect param to data\n            </el-button>\n          </el-col>\n\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Data:</div>\n            <el-input v-model=\"testTransaction\" type=\"textarea\" :rows=\"5\" placeholder=\"sendTransactions\"></el-input>\n          </el-col>\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Result :</div>\n            <el-input v-model=\"testboc\" type=\"textarea\" :rows=\"5\" placeholder=\"boc\"></el-input>\n          </el-col>\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button type=\"primary\" :disabled=\"sendBtnDisabled\" @click=\"sendTransaction()\">{{\n                testTransactionStr\n                }}</el-button>\n            </el-col>\n          </el-row>\n        </el-card>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<style scoped>\n/* 重置全局边距和内边距 */\nbody,\nhtml {\n  margin: 0;\n  padding: 0;\n  height: 100%;\n}\n\n/* 确保 app 容器占满整个视口 */\n#app {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin: 0 auto;\n  /* 居中 */\n  max-width: 600px;\n  /* 设置最大宽度 */\n  padding: 0 20px;\n  /* 添加一些左右内边距 */\n}\n\n/* 调整 el-container 样式 */\n.el-container {\n  min-height: 100vh;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n}\n\n/* 调整 el-header 样式 */\n.el-header {\n  background-color: #333333;\n  color: white;\n  height: 50px;\n  line-height: 50px;\n  font-size: 18px;\n  font-weight: bold;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n}\n\n/* 调整 el-main 样式 */\n.el-main {\n  padding: 70px 0 20px;\n  /* 增加顶部内边距以避免被固定header遮挡 */\n  flex-grow: 1;\n}\n\n.el-card {\n  margin-bottom: 20px;\n}\n\n.info-row {\n  margin-bottom: 10px;\n}\n\n.input-label {\n  margin-bottom: 5px;\n  text-align: left;\n}\n\n.el-input {\n  margin-bottom: 10px;\n}\n\n/* 通用按钮样式 */\n.wallet-actions .el-button,\n.transaction .el-button,\n.clear-cache .el-button {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 40px;\n}\n\n.wallet-actions .el-button span,\n.transaction .el-button span,\n.clear-cache .el-button span {\n  margin: 0 auto;\n}\n\n/* 按钮行间距 */\n.wallet-actions .button-row,\n.transaction .button-row {\n  margin-bottom: 8px;\n}\n\n.wallet-actions .button-row:last-child,\n.transaction .button-row:last-child {\n  margin-bottom: 0;\n}\n\n/* 调整图标和文字的对齐 */\n.wallet-actions .el-button [class^=\"el-icon-\"],\n.transaction .el-button [class^=\"el-icon-\"],\n.clear-cache .el-button [class^=\"el-icon-\"] {\n  margin-right: 5px;\n  vertical-align: middle;\n}\n\n/* 新增：调整发送交易按钮与输入框的间距 */\n.transaction .el-row:not(:last-child) {\n  margin-bottom: 10px;\n}\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  text-align: center;\n  position: relative;\n  max-width: 90%;\n  width: 400px;\n}\n\n.close-button {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  font-size: 24px;\n  border: none;\n  background: none;\n  cursor: pointer;\n}\n\n/* 响应式调整 */\n@media (max-width: 600px) {\n  #app {\n    padding: 0 10px;\n  }\n\n  .el-main {\n    padding: 60px 0 10px;\n  }\n}\n</style>\n<script>\nimport {OKX_CONNECT_ERROR_CODES, safeJsonStringify,getAppWalletDeepLink,getUniversalLink} from \"@okxconnect/core\"\nimport {\n  OKXBtcProvider,\n  OKXUniversalProvider,\n  OKXCosmosProvider,\n  OKXTonProvider,\n  OKXTronProvider,\n  OKXStarknetProvider\n} from \"@okxconnect/universal-provider\"\nimport {OKXSolanaProvider} from \"@okxconnect/solana-provider\";\nimport {\n  Connection,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n  TransactionMessage,\n  VersionedTransaction\n} from '@solana/web3.js';\nimport {OKXSuiProvider as SuiAdapter} from \"@okxconnect/sui-provider\"\nimport QrcodeVue from 'qrcode.vue'\n\nimport {OKXAptosProvider} from \"@okxconnect/aptos-provider\";\nimport {Aptos, AptosConfig, Network} from \"@aptos-labs/ts-sdk\";\n\nimport BTCPanel from \"./components/BtcTransactionPanel.vue\";\nimport FractalPanel from \"./components/FractalTransactionPanel.vue\"\nimport SuiPanel from \"./components/SuiTransactionPanel.vue\";\nimport StarknetPanel from \"./components/StarknetTransactionPanel.vue\";\n\nimport {OKXUniversalConnectUI, THEME} from \"@okxconnect/ui\";\nimport {ethers} from 'ethers';\nimport VConsole from 'vconsole';\nimport nacl from \"tweetnacl\";\nconst { verifyADR36Amino } = require('@keplr-wallet/cosmos')\nconst { fromBech32 } = require('@cosmjs/encoding')\nimport { verifyPersonalMessageSignature } from '@mysten/sui/verify';\nimport {useShortLink} from \"@okxconnect/core\";\nimport TronTransactionPanel from \"@/components/TronTransactionPanel.vue\";\nimport {TronWeb} from \"tronweb\";\nimport { RpcProvider as StarknetRpcProvider, Account as StarknetAccount } from \"starknet\";\nimport { ref, toRaw } from \"vue\";\nnew VConsole();\n\nconst allChains = {\n  1: { name: \"Eth\", checked: false },\n  56: { name: \"BNB\", checked: false },\n  137: { name: \"Polygon\", checked: false },\n  122: { name: \"Fuse\", checked: false },\n  \"ton:-239\":{name: \"TON\",checked: false},\n  \"btc:mainnet\": { name: \"BTC\", checked: false },\n  \"sui:mainnet\": { name: \"Sui\", checked: false },\n  \"aptos:mainnet\": { name: \"Aptos\", checked: false },\n  \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\": {\n    name: \"Solana\",\n    checked: false,\n  },\n  \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\": {\n    name: \"Sol testnet\",\n    checked: false,\n  },\n  \"svm:70000062\": {\n    name: \"Sonic testnet\",\n    checked: false,\n  },\n  \"movement:testnet\": { name: \"Movement\", checked: false },\n  \"fractal:mainnet\": { name: \"Fractal\", checked: false },\n  \"cosmos:osmosis-1\": {name: \"Osmos\", checked: false},\n  \"cosmos:cosmoshub-4\": {name: \"Cosmos\", checked: false},\n  \"cosmos:pacific-1\": {name: \"SEI\", checked: false},\n  \"cosmos:abvdefg\": {name: \"cosmos:abvdefg\", checked: false},\n  \"tron:mainnet\": {name: \"tron\", checked: false},\n  997865: { name: \"Non Exist chain\", checked: false },\n  2020: { name: \"Ronin\", checked: false },\n  1666600000: { name: \"Harmony\", checked: false },\n  \"starknet:mainnet\": { name: \"starknet\", checked: false }\n};\n\nconst chainsThatCanAddRedirectParam = [\n  \"eip\"\n]\n\nvar optionChains = new Set([]);\nvar selectedModals = [\"before\", \"success\", \"error\"];\nvar selectedReturnStrategy = \"none\";\nvar selectedDeepLink = \"tg://resolve\";\nvar selectedLanguage = \"en_US\";\nvar selectedTheme = THEME.LIGHT;\n\n// import QrcodeVue from 'qrcode.vue'\nexport default {\n  name: \"App\",\n  components: {\n    TronTransactionPanel,\n    QrcodeVue,\n    BTCPanel,\n    FractalPanel,\n    SuiPanel,\n    StarknetPanel\n  },\n\n  setup() {\n    const sendBtnDisabled = ref(false)\n\n    return {\n      sendBtnDisabled\n    }\n  },\n  data: () => {\n    return {\n      activeTab: \"eip155:1\",\n      testTopic: \"\",\n      testPublicKey: \"\",\n      testProofPayload: \"\",\n      tonProofValue:\"\",\n      pendingDeepLink: \"-\",\n      logList: [],\n      connectReady: false,\n      connectStatusStr: \"Connect\",\n      syncAllAddressStr: \"syncAllAddress\",\n      connectInitStr: \"init test\",\n      disconnectStatusStr: \"Disconnect\",\n      localPubKey: \"\",\n      localSecKey: \"\",\n      testTransaction: \"\",\n      selectedChain: \"eip155:1\",\n      testTransactionStr: \"Send\",\n      walletAddress: \"\",\n      testboc: \"\",\n      ProofPayloadVerify: \"\",\n      showModal: false,\n      showVerifyRow: false,\n      qrValue: \"https://www.okx.com/download\",\n      currentStatus: \"\",\n      areChainsInit: false,\n      availableChains: allChains,\n      isOptionalChecked: (chainId) => {\n        return optionChains.has(chainId);\n      },\n      withUI: localStorage.getItem(\"autoRefresh\") != \"false\",\n      universalToTG: localStorage.getItem(\"universalToTG\") != \"false\",\n      modals: selectedModals,\n      returnStrategies: [\"none\", \"back\", \"deeplink\"],\n      returnStrategy: selectedReturnStrategy,\n      deeplink: selectedDeepLink,\n      locales: [\n        \"en_US\",\n        \"ru_RU\",\n        \"zh_CN\",\n        \"zh\",\n        \"ar_AE\",\n        \"cs_CZ\",\n        \"de_DE\",\n        \"es_ES\",\n        \"es_LAT\",\n        \"fr_FR\",\n        \"id_ID\",\n        \"it_IT\",\n        \"nl_NL\",\n        \"pl_PL\",\n        \"pt_BR\",\n        \"pt_PT\",\n        \"ro_RO\",\n        \"tr_TR\",\n        \"uk_UA\",\n        \"vi_VN\",\n        \"zh_TW\"\n      ],\n      selectedMethod:[],\n      selectedMethodData:[],\n      connectMethods:[\n        \"wallet_addEthereumChain(ETH)\",\n        \"personal_sign(ETH)\",\n        \"solana_signMessage(Sol mainnet)\",\n        \"sui_signMessage(Sui mainnet)\",\n        \"sui_signPersonalMessage(Sui mainnet)\",\n        \"btc_signMessage(BTC)\",\n        \"aptos_signMessage(aptos mainnet)\",\n        \"cosmos_signArbitrary(cosmoshub)\",\n        \"test_noSupport_eth(ETH)\",\n        \"tron_signMessage\",\n        \"tron_signMessageV2\",\n        \"starknet_signMessage\",\n        \"sync_all_addresses\"\n      ],\n\n      language: selectedLanguage,\n      theme: selectedTheme,\n      THEME: THEME,\n      redirect: selectedReturnStrategy,\n      redirectDeeplink: selectedDeepLink,\n      handleWithUI: (isChecked) => {\n        localStorage.setItem(\"autoRefresh\", `${isChecked}`);\n        location.reload();\n      },\n      handleUniversalToTG: (isChecked) => {\n        localStorage.setItem(\"universalToTG\", `${isChecked}`);\n      },\n      handleOptionChange: (chainId) => {\n        if (optionChains.has(chainId)) {\n          optionChains.delete(chainId);\n        } else {\n          optionChains.add(chainId);\n        }\n      },\n      starknetPanelTypedData: ''\n    };\n  },\n  computed: {\n    getWalletAddress: function () {\n      return this.walletAddress;\n    },\n  },\n  methods: {\n    isChecked(chainId) {\n      return this.selectedChains.has(chainId);\n    },\n\n    initChains(newChains) {\n      if (newChains.length > 0) {\n        const updatedChains = Object.assign({}, this.availableChains);\n        for (const chainId of newChains) {\n          if (updatedChains[chainId]){\n            updatedChains[chainId].checked = !updatedChains[chainId].checked;\n          }\n        }\n        this.availableChains = updatedChains;\n      }\n\n      this.areChainsInit = true;\n    },\n\n    async clickActiveTab(tab) {\n      const tabName = tab.props ? tab.props.name : tab.name;\n      this.selectedChain = tabName;\n      console.log(`已切换到链 :`, tabName);\n\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (tabName == \"starknet:mainnet\") {\n        this.sendBtnDisabled = true\n      }else {\n        this.sendBtnDisabled = false\n      }\n\n      window.provider.setDefaultChain(this.selectedChain);\n    },\n\n    async initBtnClicked() {\n      var initCall;\n      if (!this.withUI) {\n        initCall = OKXUniversalProvider.init({\n          dappMetaData: {\n            name: \"univer test dapp\",\n            icon: \"https://avatars.githubusercontent.com/u/37784886\",\n          },\n        });\n      } else {\n        initCall = OKXUniversalConnectUI.init({\n          dappMetaData: {\n            icon: \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\",\n            name: \"OKX WalletConnect UI Demo\",\n          },\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: \"all\",\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme\n          },\n        });\n      }\n\n      initCall.then((provider) => {\n        window.provider = provider;\n        window.tonProvider = new OKXTonProvider(window.provider);\n        window.tonProvider.onStatusChange((walletInfo) => {\n              console.log('TONConnection onStatusChange:', JSON.stringify(walletInfo));\n            }, (err) => {\n              console.log('TONConnection onStatusChange error:', err);\n            }\n        )\n\n        if (window.provider instanceof OKXUniversalConnectUI) {\n          window.provider.onModalStateChange((state)=>{\n            console.log(`onModalStateChange   ${JSON.stringify(state)}`)\n          })\n        }\n\n        console.log(\"init finished:\", provider);\n        console.log(\"init finished session:\", JSON.stringify(provider.session));\n\n        if (provider.session?.namespaces) {\n          const newChains = [];\n          console.log(\"namespaces\", provider.session.namespaces);\n          Object.entries(provider.session.namespaces).forEach(([key, value]) => {\n            if (key === \"eip155\") {\n              value.chains.forEach((chain) => {\n                newChains.push(parseInt(chain.substring(7)));\n              });\n            }\n            else {\n              value.chains.forEach((chain) => {\n                newChains.push(chain);\n              });\n            }\n          });\n\n          console.log(\"existing chains:\", newChains);\n          this.initChains(newChains);\n        } else {\n          this.initChains([]);\n        }\n\n        provider.on(\"display_uri\", (uri) => {\n          if (!useShortLink()){\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>display_uri  ==> \", uri);\n        });\n\n        provider.on(\"connect_signResponse\", (items) => {\n          console.log(\"通知>>>connect_signResponse  ==> \", JSON.stringify(items));\n          this.verifyMessage(items)\n        })\n\n        provider.on(\"short_display_uri\", (uri) => {\n          if (useShortLink()){\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>short_display_uri  ==> \", uri);\n        });\n\n\n        provider.on(\"session_connecting\", () => {\n          if (useShortLink()){\n            alert(\"session_connecting\")\n          }\n          console.log(\"通知>>>session_connecting  ==> \");\n        });\n\n        provider.on(\"connect\", (session) => {\n          console.log(\"通知>>>get connect session\", session);\n        });\n        provider.on(\"reconnect\", (session) => {\n          console.log(\"通知>>>get reconnect session\", session);\n          this.walletAddress = \"connected\";\n        });\n        provider.on(\"disconnect\", ({ topic }) => {\n          console.log(`通知>>>get disconnect  ${topic}`);\n          this.walletAddress = \"disconnecteddddd\";\n        });\n        provider.on(\"session_delete\", ({ topic }) => {\n          console.log(`通知>>>get session_delete  ${topic}`);\n        });\n        provider.on(\"session_update\", (session) => {\n          console.log(`通知>>>get session_update `, JSON.stringify(session));\n        });\n      });\n    },\n\n    async connectBtnClicked() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        this.testTonSdk();\n      } else {\n        console.log(`connectBtnClicked provider not finish init`);\n      }\n    },\n\n    async syncAllAddressClick() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        if (window.provider instanceof OKXUniversalProvider){\n          if (window.provider.connected()){\n            try {\n              let message = await window.provider.syncAllAddresses()\n              if (typeof message == \"string\") {\n                this.testboc = message\n              } else {\n                this.testboc = JSON.stringify(message)\n              }\n            }catch (e) {\n              this.testboc = JSON.stringify(e)\n            }\n          }else{\n            this.testboc = \"not connected\"\n          }\n        }\n\n      } else {\n        console.log(`syncAllAddress provider not finish init`);\n      }\n    },\n\n    async disconnectAction() {\n      try {\n        console.log(\"get disconnect wallet btn clicked\");\n        // await TON.disconnect();\n        var provider = window.provider;\n        await provider.disconnect();\n        this.walletAddress = \"disconnected\";\n      } catch (error) {\n        console.log(\"Disconnect  error ==>> \", error.message);\n        this.currentStatus = error.message;\n      }\n    },\n\n    async eth_requestAccounts() {\n      var data = { method: \"eth_requestAccounts\" };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_chainId() {\n      var data = { method: \"eth_chainId\" };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_switchEthereumChain() {\n      var data = { method: \"wallet_switchEthereumChain\" };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_addEthereumChain() {\n      var data = {\n        method: \"wallet_addEthereumChain\",\n        params: {\n          blockExplorerUrls: [\"https://explorer.fuse.io\"],\n          chainId: \"0x7a\",\n          chainName: \"Fuse\",\n          nativeCurrency: { name: \"Fuse\", symbol: \"FUSE\", decimals: 18 },\n          rpcUrls: [\"https://rpc.fuse.io\"],\n        },\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n    async personal_sign() {\n      if (this.selectedChain === \"eip155:1\") {\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0x1ca023f10e157d148deed210f8bee193657a1eaa7f187909e20a9dc3b071dbc364c41fde37960c05093359f410a061ec8a7dca8c0c39fc7c1e24de8a3329775d1b\n\n        var accounts = await window.provider.request(\n          { method: \"eth_requestAccounts\" },\n          \"eip155:1\"\n        );\n        var address = accounts[0];\n        console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n        var dataETH = {\n          method: \"personal_sign\",\n          params: [\n            \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n            address,\n          ],\n        };\n\n        this.testTransaction = JSON.stringify(dataETH);\n      } else if (\n        this.selectedChain === \"eip155:137\" ||\n        this.selectedChain === \"eip155:122\"\n      ) {\n        // method\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0xebda9cfa2af43999058dffa0107031d1ef7fc0252dca85dcbd22ea097af922ca39b64d509ef61ce42b7641c5840b8a80337ffd1411b13e87e2260a3f1b6c151c1b\n\n        var dataPolygon = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n        this.testTransaction = JSON.stringify(dataPolygon);\n      } else if (this.selectedChain === \"eip155:56\") {\n        var data = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n\n        this.testTransaction = JSON.stringify(data);\n      }\n    },\n\n    async eth_sendTransaction_swap() {\n      var data = {\n        method: \"eth_sendTransaction\",\n        chainId: \"eip155:122\",\n        params: {\n          value: \"0x38d7ea4c68000\",\n          gas: \"0x2665f\",\n          to: \"0xf2614A233c7C3e7f08b1F887Ba133a13f1eb2c55\",\n          from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n          data: \"0x2646478b000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00000000000000000000000000000000000000000000000000038d7ea4c68000000000000000000000000000620fd5fa44be6af63715ef4e65ddfa0387ad13f5000000000000000000000000000000000000000000000000000000000000001b000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000700301ffff0201602352A9Eb5234466Eac23E59e7B99bCaE79C39c0BE9e53fd7EDaC9F859882AfdDa116645287C629040BE9e53fd7EDaC9F859882AfdDa116645287C62900602352A9Eb5234466Eac23E59e7B99bCaE79C39c01f2F3e73be57031114dd1f4E75c1DD87658be7F0E000bb800000000000000000000000000000000\",\n        },\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_signTypedData_v4() {\n      // method\n      // eth_signTypedData\n      // address\n      // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n      // valid\n      // true\n      // result\n      // 0xa8bb3c6b33a119d2d567c7632195c21988df778006082742125a591f5c633f716107883a37f7de6531a6312a5f69022135bf46fe5ab77905b62c82b3395f985e1b\n      //\n\n      // var data = {\n      //   \"method\": \"eth_signTypedData_v4\",\n      //   \"params\": {\n      //     \"typedDataJson\":\"{\\\"types\\\":{\\\"EIP712Domain\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"version\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"chainId\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"name\\\":\\\"verifyingContract\\\",\\\"type\\\":\\\"address\\\"}],\\\"Person\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"wallet\\\",\\\"type\\\":\\\"address\\\"}],\\\"Mail\\\":[{\\\"name\\\":\\\"from\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"to\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"contents\\\",\\\"type\\\":\\\"string\\\"}]},\\\"primaryType\\\":\\\"Mail\\\",\\\"domain\\\":{\\\"name\\\":\\\"Ether Mail\\\",\\\"version\\\":\\\"1\\\",\\\"chainId\\\":1,\\\"verifyingContract\\\":\\\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\\\"},\\\"message\\\":{\\\"from\\\":{\\\"name\\\":\\\"Cow\\\",\\\"wallet\\\":\\\"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\\\"},\\\"to\\\":{\\\"name\\\":\\\"Bob\\\",\\\"wallet\\\":\\\"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\\\"},\\\"contents\\\":\\\"Hello, Bob!\\\"}}\"\n      // }}\n\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        this.selectedChain\n      );\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n      var data = {\n        method: \"eth_signTypedData_v4\",\n        params: [\n          address,\n          {\n            types: {\n              EIP712Domain: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"version\",\n                  type: \"string\",\n                },\n                {\n                  name: \"chainId\",\n                  type: \"uint256\",\n                },\n                {\n                  name: \"verifyingContract\",\n                  type: \"address\",\n                },\n              ],\n              Person: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"wallet\",\n                  type: \"address\",\n                },\n              ],\n              Mail: [\n                {\n                  name: \"from\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"to\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"contents\",\n                  type: \"string\",\n                },\n              ],\n            },\n            primaryType: \"Mail\",\n            domain: {\n              name: \"Ether Mail\",\n              version: \"1\",\n              chainId: 1,\n              verifyingContract: \"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\",\n            },\n            message: {\n              from: {\n                name: \"Cow\",\n                wallet: \"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\",\n              },\n              to: {\n                name: \"Bob\",\n                wallet: \"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\",\n              },\n              contents: \"Hello, Bob!\",\n            },\n          },\n        ],\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_sendTransaction_transfer() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            chainId: \"0x1\",\n            to: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            value: \"0x5af3107a4000\",\n            maxPriorityFeePerGas: \"0x3b9aca00\",\n            gas: \"0x5e56\",\n            maxFeePerGas: \"0x2643b9db8\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gasPrice: \"0x17003f6530\",\n            nonce: \"0x0d30\",\n            data: \"0x\",\n            value: \"0x00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasLimit: \"0x5208\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x5e56\",\n            value: \"0x5af3107a4000\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasPrice: \"0x3b9aca00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            chainId: \"0x38\",\n          },\n        };\n      }else if(this.selectedChain === \"eip155:122\"){\n         data =   {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            value: \"0x0\",\n            chainId: \"0x7a\",\n          }\n        }\n      }\n\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        this.selectedChain\n      );\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"to\"] = address;\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_approve() {\n      var data = {};\n\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000000000000022d473030f116ddee9f6b43ac78ba3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x582d872a1b094fc48f5de31d3b73f2d9be47def1\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000f6f8096ac575b0\",\n            to: \"0x0b3F868E0BE5597D5DB7fEB59E1CADBb0fdDa50a\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            value: \"0x0\",\n            gas: \"0xe117\",\n            gasPrice: \"0xb2d05e00\",\n            data: \"0x095ea7b300000000000000000000000031c2f6fcff4f8759b3bd5bf0e1084a055615c768ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x5CA42204cDaa70d5c773946e69dE942b85CA6706\",\n          },\n        };\n      }else if (this.selectedChain === 'eip155:122'){\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000000000000013b3\",\n            to: \"0x620fd5fa44BE6af63715Ef4E65DDFA0387aD13F5\",\n          },\n        };\n      }\n\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        this.selectedChain\n      );\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_mint() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x4cacb\",\n            data: \"0xa64dfa75000000000000000000000000ed688002f3797599db8b4feacfe8b1dda0df1c8d000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cecb15396825a895ff8da8fc2d2c77a234dccee00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f6261667962656968643737366b6177706e71336f6f6a6635693274787a76617737737164656b34616a776472637472703261366f626b70723773792f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x30795\",\n            data: \"0xa64dfa75000000000000000000000000341b3687f0309778f08f29336b2c4b9c38b9f110000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f62616679626569686a6279676b68747a71376b68377434336266686e676e793236337668766f6578716a6d6e377161716166366e717a64743777712f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      }\n\n      let str = JSON.stringify(data);\n      console.log(\"-----长度--->\", str.length);\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n          this.selectedChain\n      );\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_testRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n        `eip155:56`,\n        `https://eth-mainnet.g.alchemy.com/v2/NxUfYJUr-TQtEpLmSXhhD5pXn70GwsyV`\n      );\n      var data = {\n        method: \"eth_getBalance\",\n        params: [\"0x8D97689C9818892B700e27F316cc3E41e17fBeb9\", \"latest\"],\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_watchAsset() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xe0f63a424a4439cbe457d80e4f4b51ad25b2c56c\",\n              symbol: \"SPX6900\",\n              image:\n                \"https://assets.coingecko.com/coins/images/31401/standard/sticker_%281%29.jpg?1702371083\",\n              decimals: 8,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xeB51D9A39AD5EEF215dC0Bf39a8821ff804A0F01\",\n              symbol: \"LGNS\",\n              image: \"https://polygonscan.com/token/images/originlgns_32.png\",\n              decimals: 9,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0x031b41e504677879370e9dbcf937283a8691fa7f\",\n              symbol: \"FET\",\n              image: \"https://bscscan.com/token/images/fetch_32.png\",\n              decimals: 18,\n            },\n          },\n        };\n      }\n\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async ton_sendTransaction() {\n      var data  = {\n        \"messages\":[{\"address\":\"EQARULUYsmJq1RiZ-YiH-IJLcAZUVkVff-KBPwEmmaQGH6aC\",\"amount\":\"205000000\",\"payload\":\"te6cckEBAgEAhwABbQ+KfqUAAADNgG7tIEATEtAIAO87mQKicbKgHIk4pSPP4k5xhHqutqYgAB7USnesDnCcECwbgQMBAJUlk4VhgBD3JEg1TUr75iTijBghOKm/sxNDXUBl7CD6WMut0Q85x4RafwA/Es89DBXoTxuqxVFxyBbzt9Rav2HBUKl7hmkvLuKHLBCW57aK\"}],\n        \"validUntil\":1792481054,\n        \"network\":'-239'}\n      this.testTransaction = JSON.stringify(data)\n    },\n    ton_getAccount() {\n      this.testTransaction = \"这里是同步获取 不再需要点击 <<发送交易>>\"\n      let result =   window.tonProvider.account()\n      if (result) {\n        this.testboc = JSON.stringify(result);\n      } else {\n        this.testboc = 'null'\n      }\n    },\n\n    async tonUniversalLog() {\n      console.log(\"ton 信息: tonProvider  connected:\",window.tonProvider.connected())\n      console.log(\"ton 信息: tonProvider  account:\",JSON.stringify(window.tonProvider.account()))\n      console.log(\"ton 信息: tonProvider  wallet:\",JSON.stringify(window.tonProvider.wallet()))\n    },\n\n    async sendTransactionAlert() {\n      //\n      const response = await fetch(`https://apitest.fireverse.ai/oauth/okx/getNonce?publicAddress=0x0cecb15396825a895ff8da8fc2d2c77a234dccee`);\n      const data = await response.json();\n      console.log(\"请求数据----\",JSON.stringify(data))\n      await this.personal_sign()\n      if (confirm(\"Are you want to sign message?\")) {\n        this.sendTransaction();\n      }\n\n      // window.open(\"https://www.okx.com/download?deeplink=okx%3A%2F%2Fweb3%2Fwallet%2Fconnect\",'_self')\n    },\n\n    async sendTransaction() {\n      if (this.selectedChain.startsWith(\"aptos\")\n          || this.selectedChain.startsWith(\"movement\")\n          || this.selectedChain.startsWith(\"solana\")\n          || this.selectedChain.startsWith(\"sonic\")\n          || this.selectedChain.startsWith(\"cosmos\")) {\n        return\n      }\n      console.log(\"sendTransaction\", window.provider);\n      console.log(\"sendTransaction内容11------\", this.testTransaction);\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (this.testTransaction && window.provider) {\n        // eslint-disable-next-line no-undef\n        const sendData = JSON.parse(this.testTransaction);\n        try {\n          console.log(\"sendTransaction-----22method>>\", sendData.method);\n\n          let chainId = \"eip155:1\";\n          if (this.selectedChain) {\n            chainId = this.selectedChain;\n            console.log(\n              \"sendTransaction-----this.selectedChain>>\",\n              this.selectedChain\n            );\n          }\n          console.log(\"windowOpen[click_1]: \", Date.now());\n          if (chainId == \"sui:mainnet\") {\n            const adapter = new SuiAdapter(window.provider);\n            var suiResult = \"invalid result\";\n            if (this.currentSuiMethod == 'sui_getAccount') {\n              let result = adapter.getAccount()\n              if (typeof result == \"string\") {\n                this.testboc = result\n              } else {\n                this.testboc = JSON.stringify(result)\n              }\n            }\n            if (this.currentSuiMethod == \"sui_signTransaction\") {\n              suiResult = await adapter.signTransaction(\n                this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signAndExecuteTransaction\") {\n              suiResult = await adapter.signAndExecuteTransaction(\n                this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signMessage\") {\n              console.log(\"signMessage----\", this.currentSuiTransaction);\n              suiResult = await adapter.signMessage(this.currentSuiTransaction);\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_signPersonalMessage\") {\n              console.log(\n                \"signPersonalMessage----\",\n                this.currentSuiTransaction\n              );\n              suiResult = await adapter.signPersonalMessage(\n                this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_testRpc\") {\n              console.log(\"test rpc----\", this.currentSuiTransaction);\n              console.log(\n                `请求数据发送 rpc ----->> ${JSON.stringify(sendData)}`\n              );\n              const res = await window.provider.request(sendData, chainId);\n              console.log(`请求数据回调 rpc ----->> ${JSON.stringify(result)}`);\n              if (typeof res == \"string\") {\n                this.testboc = res;\n              } else {\n                this.testboc = JSON.stringify(res);\n              }\n            }\n            console.log(\"windowOpen[click_2]: \", Date.now());\n            return;\n          }else if(chainId === \"ton:-239\"){\n            console.log(\n                `请求数据发送 sendTransaction ---ton-->> ${JSON.stringify(sendData)}`\n            );\n            let result =  await window.tonProvider.sendTransaction(sendData)\n            console.log(\n                `请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`\n            );\n            if (typeof result == \"string\") {\n              this.testboc = result;\n            } else {\n              this.testboc = JSON.stringify(result);\n            }\n            return\n          }\n\n          if (chainId == 'btc:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var btcResult = 'invalid result'\n\n            if (this.currentBtcMethod == 'btc_signMessage') {\n              btcResult = await btcAdapter.signMessage(chainId, this.currentBtcTransaction[\"signStr\"])\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_send') {\n              btcResult = await btcAdapter.send(chainId, this.currentBtcTransaction)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signPsbt') {\n              btcResult = await btcAdapter.signPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n\n              this.hexToBase64(btcResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentBtcMethod == 'btc_signPsbts') {\n              btcResult = await btcAdapter.signPsbts(chainId, this.currentBtcTransaction.psbtHexs, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_sendInscription') {\n              btcResult = await btcAdapter.sendInscription(chainId, this.currentBtcTransaction.address, this.currentBtcTransaction.inscriptionId, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signAndPushPsbt') {\n              btcResult = await btcAdapter.signAndPushPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            }else if (this.currentBtcMethod == 'btc_sendBitcoin') {\n              btcResult = await btcAdapter.sendBitcoin(chainId, this.currentBtcTransaction.toAddress, this.currentBtcTransaction.satoshis, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            }else if (this.currentBtcMethod == 'btc_getAccount'){\n              btcResult = btcAdapter.getAccount(chainId)\n              this.testboc = JSON.stringify(btcResult)\n            }\n\n            return\n          }\n\n          if (chainId == 'fractal:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var fractalResult = 'invalid result'\n\n            if (this.currentFractalMethod == 'fractal_signMessage') {\n              fractalResult = await btcAdapter.signMessage(chainId, this.currentFractalTransaction['signStr'])\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_send') {\n              fractalResult = await btcAdapter.send(chainId, this.currentFractalTransaction)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signPsbt') {\n              fractalResult = await btcAdapter.signPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.hexToBase64(fractalResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentFractalMethod == 'fractal_signPsbts') {\n              fractalResult = await btcAdapter.signPsbts(chainId, this.currentFractalTransaction.psbtHexs, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_sendInscription') {\n              fractalResult = await btcAdapter.sendInscription(chainId, this.currentFractalTransaction.address, this.currentFractalTransaction.inscriptionId, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signAndPushPsbt') {\n              fractalResult = await btcAdapter.signAndPushPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            }else if (this.currentFractalMethod == 'fractal_sendBitcoin') {\n              fractalResult = await btcAdapter.sendBitcoin(chainId, this.currentFractalTransaction.toAddress, this.currentFractalTransaction.satoshis, this.currentFractalTransaction.options)\n\n              this.testboc = JSON.stringify(fractalResult)\n            }else if (this.currentFractalMethod == 'fractal_getAccount'){\n              fractalResult = btcAdapter.getAccount(chainId)\n              this.testboc = JSON.stringify(fractalResult)\n            }\n\n            return\n          }\n\n          console.log(`请求数据发送 sendTransaction ----->> ${JSON.stringify(sendData)}`)\n          var result = await window.provider.request(sendData, chainId)\n          console.log(`请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`)\n\n          console.log(\"windowOpen[click_3]: \", Date.now());\n          if (typeof result == \"string\") {\n            this.testboc = result;\n          } else {\n            this.testboc = JSON.stringify(result);\n          }\n          console.log(\"方法数据回调 --this.testboc--\", this.testboc);\n        } catch (error) {\n          console.error(\"方法数据回调失败 --Error--\", error.message);\n\n          if (error.code === OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n            this.testboc = error.message;\n          } else {\n            this.testboc = \"wrong signature！\" + error.message;\n          }\n        }\n      } else {\n        alert(\"Please input transaction data\");\n      }\n    },\n\n    hexToBase64(hexStr) {\n      var bytes = [];\n      for (var i = 0; i < hexStr.length; i += 2) {\n        bytes.push(parseInt(hexStr.substr(i, 2), 16));\n      }\n      const buffer = new Uint8Array(bytes)\n      const blob = new Blob([buffer]);\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = function (e) {\n          var base64Data = e.target.result.split(\",\")[1]\n          resolve(base64Data);\n        };\n        reader.onerror = function (e) {\n          reject(e);\n        };\n        reader.readAsDataURL(blob);\n      });\n    },\n    testBase64UrlSafe(){\n      let datatest = {\"protocolVer\":1,\"topic\":\"8a7a4c3be73802d0ae2587123ade7bb79f27433b9aa3ca589a2208a2089eecfd\",\"clientId\":\"5f1bbf9eac92160affa7ef04d0a710817ddb6d8c22ebbd6263e86f059930b404\",\"requestId\":\"1731383250054\",\"dAppInfo\":{\"url\":\"connect.oker.vip\",\"origin\":\"https://connect.oker.vip\",\"name\":\"univer test dapp\",\"icon\":\"https://avatars.githubusercontent.com/u/37784886\"},\"requests\":[{\"name\":\"requestAccounts\",\"requiredNamespaces\":[{\"namespace\":\"aptos\",\"chains\":[\"aptos:637\"]}],\"optionalNamespaces\":[],\"connectRequestMethods\":[{\"chainId\":\"aptos:637\",\"method\":\"aptos_signMessage\",\"params\":{\"data\":{\"address\":true,\"application\":true,\"chainId\":true,\"message\":\"123 中文测试!\",\"nonce\":\"1234\"},\"applicationUrl\":\"https://connect.oker.vip\",\"prefix\":\"APTOS\",\"aptosChainId\":\"1\"}}]}],\"redirect\":\"none\"}\n      let json = JSON.stringify(datatest)\n      const utf8Array = new TextEncoder().encode(json);\n      let binary = '';\n      utf8Array.forEach(byte => {\n        binary += String.fromCharCode(byte);\n      });\n\n      let firstStr =  btoa(binary)\n      console.log(\"字符串编码1>>>>\",firstStr)\n      firstStr = firstStr.replace(/\\+/g, '-')  // 替换 '+'\n      console.log(\"字符串编码2>>>>\",firstStr)\n      firstStr = firstStr.replace(/\\//g, '_')  // 替换 '/'\n      console.log(\"字符串编码3>>>>\",firstStr)\n      firstStr = firstStr.replace(/=+$/, '');  // 移除 '=';\n      console.log(\"字符串编码4>>>>\",firstStr)\n\n      let showUrl =  getUniversalLink(getAppWalletDeepLink(firstStr))\n      console.log(\"字符串编码5>>>>\",showUrl)\n      this.qrValue = showUrl;\n      this.showModal = true;\n    },\n\n\n    async testTonSdk() {\n      // 1. connect\n      //  create sub providers for each namespace/chain\n      let nameSpacesChains = [];\n      let optSpaceChains = [];\n\n      let solanaChains = [\n        \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n        \"svm:70000062\",\n      ];\n      let hasEip155, hasSolana, hasSui, hasBtc, hasAptos, hasTon, hasCosmos, hasTron, hasStarknet = false\n\n      let suiChains = [\n        \"sui:mainnet\",\n      ];\n\n      let btcChains = [\n        \"btc:mainnet\",\n        \"fractal:mainnet\"\n      ];\n\n      const chains = Object.entries(this.availableChains)\n          .filter((chain) => chain[1].checked)\n          .map((chain) => chain[0]);\n      console.log(`chains  ===> ${chains.values()}`)\n      chains.forEach(function (chainId) {\n        console.log(`chains.forEach chainId  ===> ${chainId}`)\n\n        if (solanaChains.includes(chainId)) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"ton\")) {\n          nameSpacesChains.push(chainId)\n          hasTon = true\n          return\n        }\n        if (typeof chainId == 'string' && (chainId.startsWith(\"aptos\") || chainId.startsWith(\"movement\"))) {\n          nameSpacesChains.push(chainId)\n          hasAptos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId)\n          hasSolana = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"cosmos\")) {\n          nameSpacesChains.push(chainId)\n          hasCosmos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"tron\")) {\n          nameSpacesChains.push(chainId)\n          hasTron = true\n          return\n        }\n\n        if (typeof chainId == 'string' && chainId.startsWith(\"starknet\")) {\n          nameSpacesChains.push(chainId)\n          hasStarknet = true\n          return\n        }\n\n        if (suiChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`);\n          nameSpacesChains.push(chainId);\n          hasSui = true;\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`)\n          nameSpacesChains.push(chainId)\n          hasBtc = true\n          return\n        }\n\n        hasEip155 = true\n        nameSpacesChains.push(`eip155:${chainId}`)\n      })\n\n\n      optionChains.forEach(function (chainId) {\n        if (solanaChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n        if (typeof chainId == \"string\" && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (suiChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          optSpaceChains.push(chainId)\n          return\n        }\n\n        if (chainId.startsWith('ton')) {\n          optSpaceChains.push(chainId)\n          return\n        }\n\n        optSpaceChains.push(`eip155:${chainId}`)\n      })\n\n      console.log(`namespaceChains  ===> ${JSON.stringify(nameSpacesChains)}`);\n      var connectData = {};\n      if (nameSpacesChains && nameSpacesChains.length > 0) {\n        var requireData = {};\n\n        if (hasEip155) {\n          requireData.eip155 = {\n            chains: nameSpacesChains.filter((item) =>\n              item.startsWith(\"eip155\")\n            ),\n            defaultChain: nameSpacesChains.filter((item) =>\n              item.startsWith(\"eip155\")\n            )[0],\n          };\n        }\n        if (hasSolana) {\n          requireData.solana = {\n            chains: nameSpacesChains.filter(\n              (item) =>\n                item.startsWith(\"solana\") ||\n                item.startsWith(\"sonic\") ||\n                item.startsWith(\"svm\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n              (item) =>\n                item.startsWith(\"solana\") ||\n                item.startsWith(\"sonic\") ||\n                item.startsWith(\"svm\")\n            )[0],\n          };\n        }\n\n        if (hasCosmos) {\n          requireData.cosmos = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            )[0],\n          }\n        }\n        if (hasTron) {\n          requireData.tron = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            )[0],\n          }\n        }\n        if (hasStarknet) {\n          requireData.starknet = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"starknet\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"starknet\")\n            )[0],\n          }\n        }\n        if (hasTon) {\n\n          //\n          let tonParams = {\n            ton_addr:{\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue){\n            tonParams = {\n              ton_addr:{\n                name: 'ton_addr',\n              },\n              ton_proof:{\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          requireData.ton = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"ton\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"ton\"))[0],\n            params:tonParams\n          };\n        }\n\n        if (hasSui) {\n          requireData.sui = {\n            chains: nameSpacesChains.filter((item) => item.startsWith(\"sui\")),\n            defaultChain: nameSpacesChains.filter((item) =>\n              item.startsWith(\"sui\")\n            )[0],\n            rpcMap: {\n              \"sui:mainnet\": \"https://www.okx.com/fullnode/sui/discover/rpc\"\n            }\n          };\n        }\n        if (hasAptos) {\n          requireData.aptos = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\"))[0]\n          }\n        }\n\n        if (hasBtc) {\n          let btcChains = nameSpacesChains.filter(item => item.startsWith(\"btc\") || item.startsWith(\"fractal\"))\n          requireData.btc = {\n            chains: btcChains,\n            defaultChain: btcChains[0]\n          }\n        }\n        console.log(`requireData  ===> ${JSON.stringify(requireData)}`)\n        connectData['namespaces'] = requireData;\n        console.log(JSON.stringify(connectData))\n      }\n\n      if (optSpaceChains && optSpaceChains.length > 0) {\n        const optData = {};\n\n        const eip155Chains = optSpaceChains.filter((item) => item.startsWith(\"eip155\"));\n        if (eip155Chains.length > 0) {\n          optData[\"eip155\"] = {\n            chains: eip155Chains,\n            defaultChain: eip155Chains[0],\n          };\n        }\n\n        const solanaChains = optSpaceChains.filter((item) => item.startsWith(\"solana\"));\n        if (solanaChains.length > 0) {\n          optData[\"solana\"] = {\n            chains: solanaChains,\n            defaultChain: solanaChains[0],\n          };\n        }\n\n        const tonChains = optSpaceChains.filter((item) => item.startsWith(\"ton\"));\n        if (tonChains.length > 0) {\n\n          let tonParams = {\n            ton_addr:{\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue){\n            tonParams = {\n              ton_addr:{\n                name: 'ton_addr',\n              },\n              ton_proof:{\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          optData[\"ton\"] = {\n            chains: tonChains,\n            defaultChain: tonChains[0],\n            params: tonParams\n          };\n        }\n\n        const btcChains = optSpaceChains.filter((item) => item.startsWith(\"btc\"));\n        if (btcChains.length > 0) {\n          optData[\"btc\"] = {\n            chains: btcChains,\n            defaultChain: btcChains[0],\n          };\n        }\n\n        connectData[\"optionalNamespaces\"] = optData;\n      }\n\n      if (nameSpacesChains.length === 0 && optSpaceChains.length === 0) {\n        //未选择链\n        alert(\"Please select a chain from above to continue\");\n        return;\n      }\n      console.log(\"=====>connectData \");\n      console.log(connectData);\n\n      var connectMethod;\n      let signMethods = this.getCurrentSelectedMethodData();\n      if (window.provider instanceof OKXUniversalConnectUI) {\n\n        if (signMethods && signMethods.length>0){\n          connectMethod = window.provider.openModalAndSign(connectData,JSON.parse(JSON.stringify(signMethods)));\n        }else {\n          connectMethod = window.provider.openModal(connectData);\n        }\n      } else {\n        if (this.universalToTG){\n          connectData.sessionConfig = {\n            useMini:true,\n            openUniversalUrl:true,\n            tmaReturnUrl:'back'\n          }\n        }else{\n          connectData.sessionConfig = {\n            redirect: selectedReturnStrategy\n          }\n        }\n        if (signMethods && signMethods.length>0){\n          connectMethod = window.provider.connectAndSign(connectData,JSON.parse(JSON.stringify(signMethods)));\n        }else {\n          connectMethod = window.provider.connect(connectData);\n        }\n      }\n\n      await connectMethod\n        .then((result) => {\n          // 2. set defaul chain\n          this.walletAddress = \"connected\";\n          if (this.isPC()) {\n            this.showModal = false;\n          }\n          if (result){\n            this.testboc = JSON.stringify(result)\n          }\n\n          if (window.provider.session && window.provider.session.namespaces){\n            let ton = window.provider.session.namespaces[\"ton\"];\n          console.log(\"是否包含ton\",ton)\n            if (ton){\n              this.tonUniversalLog()\n            }\n          }\n        })\n        .catch((error) => {\n          if (error.code == 301) {\n            setTimeout(() => {\n              alert(error.message)\n            }, 0.5);\n          } else if (error.message){\n            alert(error.message)\n          }\n          console.error(\"发生了错误：\", error);\n        });\n    },\n\n    getCurrentSelectedMethodData(){// 连接签名\n      var methodList = [];\n      this.selectedMethod.forEach(method =>{\n        switch (method) {\n          case \"wallet_addEthereumChain(ETH)\":\n            methodList.push({\n              method: \"wallet_addEthereumChain\",\n              chainId:\"eip155:1\",\n              params: {\n                blockExplorerUrls: [\"https://explorer.fuse.io\"],\n                chainId: \"0x7a\",\n                chainName: \"Fuse\",\n                nativeCurrency: { name: \"Fuse\", symbol: \"FUSE\", decimals: 18 },\n                rpcUrls: [\"https://rpc.fuse.io\"],\n              },\n            })\n            break;\n          case \"personal_sign(ETH)\":\n            methodList.push(\n              {\n                method: \"personal_sign\",\n                chainId: \"eip155:1\",\n                params: [\n                  \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n                ],\n              });\n            break;\n          case \"solana_signMessage(Sol mainnet)\":\n            methodList.push(\n              {\n                \"chainId\": \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n                \"method\": \"solana_signMessage\",\n                \"params\": {\n                  \"message\": \"Hello Solana\",\n                }\n              }\n            );\n            break;\n          case \"sui_signMessage(Sui mainnet)\":\n          case \"sui_signPersonalMessage(Sui mainnet)\": {\n            let suiData = [\n              76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n              109, 111, 118, 101,\n            ];\n            let uint8Array = new Uint8Array(suiData);\n            let currentMethod = \"sui_signMessage\";\n            this.currentSuiTransaction = {\n              message:uint8Array\n            }\n\n            if(method.startsWith(\"sui_signPersonalMessage\")){\n              currentMethod = \"sui_signPersonalMessage\";\n            }\n            methodList.push(\n                {\n                  method: currentMethod,\n                  chainId: \"sui:mainnet\",\n                  params: {\n                    message: uint8Array,\n                  }\n                }\n            );\n            break;\n          }\n          case \"btc_signMessage(BTC)\":\n            methodList.push(\n              {\n                method: \"btc_signMessage\",\n                chainId: \"btc:mainnet\",\n                params: {\n                  message: \"Welcome to BTC\"\n                }\n              }\n            )\n            break;\n          case \"aptos_signMessage(aptos mainnet)\":\n            methodList.push(\n              {\n                \"chainId\": \"aptos:mainnet\",\n                \"method\": \"aptos_signMessage\",\n                \"params\": {\n                  address: true,\n                  application: true,\n                  chainId: true,\n                  message: \"Hello Aptos\",\n                  nonce: \"1234\"\n                }\n              }\n            )\n            break;\n          case \"cosmos_signArbitrary(cosmoshub)\":\n            methodList.push(\n                {\n                  \"chainId\": \"cosmos:cosmoshub-4\",\n                  \"method\": \"cosmos_signArbitrary\",\n                  \"params\": {\n                    message: \"test cosmos\"\n                  }\n                }\n            )\n\n            break;\n          case \"test_noSupport_eth(ETH)\":\n            methodList.push(\n                {\n                  chainId: \"eip155:1\",\n                  method: \"test_noSupport_eth\",\n                  params: {\n                    message: \"test hello\",\n                  }\n                }\n            )\n            break;\n          case \"sync_all_addresses\":\n            methodList.push(\n                {\n                  method: \"sync_all_addresses\",\n                });\n            break;\n          case \"tron_signMessage\":\n            methodList.push(\n                {\n                  chainId:\"tron:mainnet\",\n                  method: \"tron_signMessage\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n          case \"tron_signMessageV2\":\n            methodList.push(\n                {\n                  chainId:\"tron:mainnet\",\n                  method: \"tron_signMessageV2\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n\n            //\n          case \"starknet_signMessage\": {\n            const signData = {\n              \"domain\": {\n                \"chainId\": \"0x534e5f4d41494e\",\n                \"name\": \"STRKFarm\",\n                \"version\": \"1\"\n              },\n              \"message\": {\n                \"document\": \"app.strkfarm.xyz/tnc/v1\",\n                \"message\": \"Read and Agree T&C\"\n              },\n              \"primaryType\": \"Tnc\",\n              \"types\": {\n                \"StarkNetDomain\": [\n                  {\n                    \"name\": \"name\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"version\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"chainId\",\n                    \"type\": \"felt\"\n                  }\n                ],\n                \"Tnc\": [\n                  {\n                    \"name\": \"message\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"document\",\n                    \"type\": \"felt\"\n                  }\n                ]\n              }\n            }\n            methodList.push({\n              chainId:\"starknet:mainnet\",\n              method: \"starknet_signMessage\",\n              params: {\n                accountAddress: \"\",\n                typedData: signData\n              }\n            })\n          }\n            break\n          default:\n\n            break;\n        }\n      })\n      this.selectedMethodData = methodList\n      return methodList\n\n    },\n\n    closeModal() {\n      this.showModal = false;\n    },\n\n    isPC() {\n      const userAgentInfo = navigator.userAgent;\n      console.log(\"current device ua is ===>\", userAgentInfo);\n\n      const Agents = [\n        \"Android\",\n        \"iPhone\",\n        \"SymbianOS\",\n        \"Windows Phone\",\n        \"iPad\",\n        \"iPod\",\n      ];\n      let flag = true;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = false;\n          break;\n        }\n      }\n      return flag;\n    },\n    isSafariOrChrome() {\n      const userAgentInfo = navigator.userAgent;\n      const Agents = [\"Safari\", \"Chrome\"];\n      let flag = false;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = true;\n          break;\n        }\n      }\n      return flag;\n    },\n\n    /// solana\n    async sol_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      let data = {\n        method: \"solana_signMessage\",\n        params: {\n          message: \"Hello Solana\",\n          pubkey: \"\",\n        },\n      };\n      this.testTransaction = JSON.stringify(data);\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let message = await provider.signMessage(\n          \"Hello Solana\",\n          this.selectedChain\n      );\n      console.log(\"solana_signMessage Result:\",JSON.stringify(message))\n      const result1 = nacl.sign.detached.verify(\n          new TextEncoder().encode(\"Hello Solana\"),\n          message.signature,\n          new PublicKey(message.publicKey).toBytes()\n      );\n      console.log(result1)\n\n      if (typeof message == \"string\") {\n        this.testboc = result1;\n      } else {\n        this.testboc = result1;\n      }\n    },\n\n    async aptos_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      let data = {\n        address: true,\n        application: true,\n        chainId: true,\n        message: \"Hello Aptos\",\n        nonce: \"1234\"\n      }\n\n      let provider = new OKXAptosProvider(window.provider)\n      let message = await provider.signMessage(data, this.selectedChain)\n      this.testTransaction = JSON.stringify(data)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n          functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n          functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        },\n      });\n\n      // let data = {\n      //   \"arguments\": [\"100000\",[\"0\",\"0\",\"10533\"],[\"10\",\"5\",\"5\"],[\"false\",\"false\",\"true\"]],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x3\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\",\"0x73eb84966be67e4697fc5ae75173ca6c35089e802650f75422ab49a8729704ec::coin::DooDoo\",\"0x53a30a6e5936c0a4c5140daed34de39d17ca7fcae08f947c02e979cef98a3719::coin::LSD\",\"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::CurveV1\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x54cb0bb2c18564b86e34539b9f89cfe1186e39d89fce54e1cd007b8e61673a85::bin_steps::X80\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async sol_signVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(\n        provider.getAccount(\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\").address\n      );\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n         recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signTransaction(\n        transaction,\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAndSendVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n        transaction,\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllVersionedTransactions() {\n      let provider = new OKXSolanaProvider(window.provider);\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n        [transaction],\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signTransaction() {\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n         recentBlockhash: blockhash,\n      }).add(\n        SystemProgram.transfer({\n          fromPubkey: new PublicKey(provider.getAccount().address),\n          toPubkey: new PublicKey(provider.getAccount().address),\n          lamports: 1000,\n        })\n      );\n\n      this.testTransaction = safeJsonStringify(transaction)\n      let result = await provider.signTransaction(\n        transaction,\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllTransactions() {\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n        SystemProgram.transfer({\n          fromPubkey: new PublicKey(provider.getAccount().address),\n          toPubkey: new PublicKey(provider.getAccount().address),\n          lamports: \"100\",\n        })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n        [transaction],\n        this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    getSolConnect() {\n      let rpc = \"https://www.okx.com/fullnode/sol/discover/rpc\"\n      if (this.selectedChain === \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\") {\n        rpc = \"https://www.okx.com//fullnode/sol/discover/rpc\"\n      } else if (this.selectedChain === \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\"){\n        rpc = \"https://www.okx.com/fullnode/soltestnet/discover/rpc\"\n      } else if (this.selectedChain === \"svm:70000062\") {\n        rpc = \"https://www.okx.com/fullnode/sonic/testnet/discover/rpc\"\n      }\n      return rpc\n    },\n\n    async sol_signAndSendTransaction() {\n\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n        SystemProgram.transfer({\n          fromPubkey: new PublicKey(provider.getAccount().address),\n          toPubkey: new PublicKey(provider.getAccount().address),\n          lamports: \"100\",\n        })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n        transaction,\n        this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async cosmos_signArbitrary() {\n      let provider = new OKXCosmosProvider(window.provider)\n      let message = await provider.signArbitrary(this.selectedChain, provider.getAccount(this.selectedChain).address, \"test cosmos\")\n      if (typeof message == \"string\") {\n        this.testboc = message;\n      } else {\n        let isValid =  await this.cosmos_verifySignArbitrary(provider.getAccount(this.selectedChain).address,\"test cosmos\",message.signature, message.pub_key.value)\n        console.log(\"verify\",isValid)\n        this.testboc = \"verify:\" + isValid + JSON.stringify(message);\n      }\n    },\n\n    async cosmos_verifySignArbitrary(signer, data, signature, pubkey) {\n      try {\n        console.log(\"cosmos_verifySignArbitrary signer:\",signer)\n        console.log(\"cosmos_verifySignArbitrary data:\",JSON.stringify(data))\n        console.log(\"cosmos_verifySignArbitrary signature:\",signature)\n        console.log(\"cosmos_verifySignArbitrary pubkey:\",pubkey)\n\n        // 将bech32地址转换为公钥\n        const {prefix: prefixStr} = fromBech32(signer)\n\n        const signatureBuffer = Buffer.from(signature, 'base64');\n\n        const uint8Signature = new Uint8Array(signatureBuffer); // Convert the buffer to an Uint8Array\n\n        const pubKeyValueBuffer = Buffer.from(pubkey, 'base64'); // Decode the base64 encoded value\n\n        const pubKeyUint8Array = new Uint8Array(pubKeyValueBuffer); // Convert the buffer to an Uint8Array\n\n        // 验证签名\n        return await verifyADR36Amino(\n            prefixStr,\n            signer,\n            data,\n            pubKeyUint8Array,\n            uint8Signature\n        )\n      } catch (err) {\n        console.error('Verification failed:', err)\n        return false\n      }\n    },\n\n    async cosmos_signAmino(){\n      let provider = new OKXCosmosProvider(window.provider)\n      // const rpcUrl = 'https://osmosis-rpc.publicnode.com:443';\n      // const client = await StargateClient.connect(rpcUrl);\n      // const height = await client.getHeight();\n      // let address = provider.getAccount(this.selectedChain).address\n      // const sequence = await client.getSequence(address)\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      // let signDoc = makeSignDoc(\n      //     transaction.msgs,\n      //     transaction.fee,\n      //     this.selectedChain.split(\":\")[1],\n      //     transaction.memo,\n      //     transaction.accountNumber,\n      //     transaction.sequence,\n      // )\n      let signDoc = {\n        \"chain_id\": \"osmosis-1\",\n        \"account_number\": \"630104\",\n        \"sequence\": \"480\",\n        \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]},\n        \"msgs\": [{\n          \"type\": \"osmosis/poolmanager/swap-exact-amount-in\",\n          \"value\": {\n            \"sender\": \"osmo1u6lts9ng4etxj0zdaxsada6zgl8dudpgelmuyu\",\n            \"routes\": [{\n              \"pool_id\": \"1096\",\n              \"token_out_denom\": \"ibc/987C17B11ABC2B20019178ACE62929FE9840202CE79498E29FE8E5CB02B7C0A4\"\n            }, {\n              \"pool_id\": \"611\",\n              \"token_out_denom\": \"ibc/27394FB092D2ECCD56123C74F36E4C1F926001CEADA9CA97EA622B25F41E5EB2\"\n            }],\n            \"token_in\": {\"denom\": \"uosmo\", \"amount\": \"100\"},\n            \"token_out_min_amount\": \"8\"\n          }\n        }],\n        \"memo\": \"FE\",\n        \"timeout_height\": \"23603788\",\n        \"signOptions\": {\n          \"useOneClickTrading\": false,\n          \"preferNoSetFee\": true,\n          \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]}\n        }\n      }\n\n\n\n\n\n\n\n      // let signOption = {\n      //   memo: true, // optional\n      //   fee: true, // optional\n      //   gasRate: {\n      //     // optional\n      //     average: \"0.2\",\n      //     low: \"0.02\",\n      //     tiny: \"0.002\",\n      //   },\n      // }\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signAmino(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, signDoc)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    messageToBuffer(message) {\n      var buffer = Buffer.from([]);\n      try {\n        if (typeof message === \"string\") {\n          buffer = Buffer.from(message.replace(\"0x\", \"\"), \"hex\");\n        } else {\n          buffer = Buffer.from(message);\n        }\n      } catch (err) {\n        console.log(`messageToBuffer error: ${err}`);\n      }\n      return buffer;\n    },\n\n\n\n    async cosmos_signDirect() {\n      let provider = new OKXCosmosProvider(window.provider)\n\n      let signDoc = {\n        \"bodyBytes\": this.messageToBuffer(\"0x0ac1010a292f6962632e6170706c69636174696f6e732e7472616e736665722e76312e4d73675472616e736665721293010a087472616e7366657212096368616e6e656c2d301a0d0a05756f736d6f120431303030222b6f736d6f3175366c7473396e67346574786a307a64617873616461367a676c386475647067656c6d7579752a2d636f736d6f733175366c7473396e67346574786a307a64617873616461367a676c386475647067337967766a773207080410ebe3f90a3880b0bcafd18cec8218\"),\n        \"authInfoBytes\": this.messageToBuffer(\"0x0a510a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a2102446e19e94ac0e83ea896d2712507577eb39fbdd2d6ae9f0fc0b9759f1fbaba9012040a02080118e00312140a0e0a05756f736d6f1205323530303010859a11\"),\n        \"chainId\": \"osmosis-1\",\n        \"accountNumber\": \"630104\",\n      }\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signDirect(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, transaction)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    sui_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentSuiTransaction = params\n      this.currentSuiMethod = flag\n    },\n\n    btc_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentBtcTransaction = params\n      this.currentBtcMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n\n    fractal_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentFractalTransaction = params\n      this.currentFractalMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n    tron_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n    tron_generateTransactionParams(params){\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n\n    starknet_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n\n    starknet_generateTransactionParams(params) {\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n\n    handleModalsSelect(modals) {\n      selectedModals = modals;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: modals.length === 3 ? \"all\" : modals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n\n    handleReturnStrategySelect(returnStrategy) {\n      selectedReturnStrategy = returnStrategy === \"deeplink\" ? this.deeplink : returnStrategy;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = selectedReturnStrategy;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: selectedReturnStrategy\n          };\n        }\n      }\n    },\n\n    handleReturnStrategyDeeplink(deeplink) {\n      console.log('handleReturnStrategyDeeplink', deeplink)\n      selectedReturnStrategy = deeplink;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: deeplink,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = deeplink;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: deeplink\n          };\n        }\n      }\n    },\n\n    handleLanguageSelect(language) {\n      selectedLanguage = language;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: language,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n    handleConnectMethodsSelect() {\n      console.log(\"当前的方法 this.selectedMethod>>>>\",this.selectedMethod);\n    },\n\n    eth_verifyMessage(message, signature,ethAddress) {\n      console.log(\"eth_verifyMessage   message>>>\",message)\n      console.log(\"eth_verifyMessage   signature>>>\",signature)\n      console.log(\"eth_verifyMessage   ethAddress>>>\",ethAddress)\n      if (!message || !signature){\n        return \"\"\n      }\n      let originalMessage = message\n      if (message.startsWith(\"0x\")){\n        originalMessage = originalMessage.replace(/^0x/, '');\n        let str = '';\n        for (let i = 0; i < originalMessage.length; i += 2) {\n          const byte = originalMessage.slice(i, i + 2);\n          str += String.fromCharCode(parseInt(byte, 16));\n        }\n        originalMessage = str\n      }\n      console.log(\"eth_verifyMessage   originalMessage>>>\",originalMessage)\n\n      // const messageHash = ethers.utils.hashMessage(originalMessage);\n      const recoveredAddress = ethers.utils.verifyMessage(originalMessage, signature);\n      console.log(\"eth_verifyMessage recoveredAddress:\", recoveredAddress);\n      return recoveredAddress.toLowerCase() === ethAddress.toLowerCase();\n    },\n\n    async verifyMessage(list){ //连接验签\n\n        if (window.provider && window.provider.session && list && list.length>0){\n          let verifyList = {}\n          for (let methodItem of list){\n            if (\"result\" in methodItem && \"method\" in methodItem){\n              let requestItme = this.selectedMethodData.filter(item => item.method === methodItem.method)[0];\n              console.log(\"验证签名 请求>>>:\", JSON.stringify(requestItme));\n              console.log(\"验证签名 结果>>>:\", JSON.stringify(methodItem));\n              if (methodItem.method === \"personal_sign\"){\n                let ethAddress = await window.provider.request({ method: \"eth_requestAccounts\" },methodItem.chainId)\n                ethAddress = ethAddress[0];\n                console.log(\"验证eth 钱包地址>>>:\", ethAddress);\n                let ethMessage = requestItme.params[0]\n                console.log(\"验证eth 签名消息体>>:\", JSON.stringify(ethMessage));\n                verifyList[methodItem.method] = this.eth_verifyMessage(ethMessage,methodItem.result,ethAddress)\n              }else if(methodItem.method === \"solana_signMessage\"){\n                let solanaMessage = methodItem.result\n                if (\"signature\" in solanaMessage && \"publicKey\" in solanaMessage){\n                  const verifySol = nacl.sign.detached.verify(\n                      new TextEncoder().encode(\"Hello Solana\"),\n                      solanaMessage.signature,\n                      new PublicKey(solanaMessage.publicKey).toBytes()\n                  );\n                  verifyList[methodItem.method] = verifySol\n                }else {\n                  verifyList[methodItem.method] = false\n                }\n              }else if(methodItem.method === \"sui_signPersonalMessage\" || methodItem.method === \"sui_signMessage\"){\n                let suiResult =  this.sui_verifySignature(methodItem.result);\n                  verifyList[methodItem.method] = (await suiResult).result\n              }else if(methodItem.method === \"btc_signMessage\"){\n\n                verifyList[methodItem.method] = \"Not verified yet\"\n\n              }else if(methodItem.method === \"aptos_signMessage\"){\n                let aptosMessage = methodItem.result\n                let aptosProvider = new OKXAptosProvider(window.provider)\n                let  aptosPublicKey  = aptosProvider.getAccount(methodItem.chainId)?.publicKey\n\n                let signStr = aptosMessage.signature\n                if (signStr.startsWith(\"0x\")) {\n                  signStr = signStr.slice(2, signStr.length)\n                }\n\n                console.log(\"aptos_signMessage aptosPublicKey And signStr\",aptosPublicKey,signStr)\n                verifyList[methodItem.method] = nacl.sign.detached.verify(\n                    Buffer.from(aptosMessage.fullMessage),\n                    Buffer.from(signStr, 'hex'),\n                    Buffer.from(aptosPublicKey, 'hex'),\n                );\n              }else if(methodItem.method === \"cosmos_signArbitrary\"){\n                let cosmosProvider = new OKXCosmosProvider(window.provider)\n                let cosmosAddress = cosmosProvider.getAccount(methodItem.chainId)?.address\n                let cosmosMessage = methodItem.result\n                let isValid =  await this.cosmos_verifySignArbitrary(cosmosAddress,\"test cosmos\",cosmosMessage.signature, cosmosMessage.pub_key.value)\n                verifyList[methodItem.method] = isValid\n\n              }else if (methodItem.method === \"tron_signMessage\") {\n                let tronMessage = methodItem.result\n                let tronWeb = new TronWeb({\n                  \"fullHost\": 'https://api.trongrid.io',\n                  \"headers\": {},\n                  \"privateKey\": ''\n                })\n                let provider = new OKXTronProvider(window.provider)\n                verifyList[methodItem.method] = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), tronMessage, provider.getAccount(\"tron:mainnet\").address)\n              } else if (methodItem.method === \"tron_signMessageV2\") {\n                let tronMessage = methodItem.result\n                let tronWeb = new TronWeb({\n                  \"fullHost\": 'https://api.trongrid.io',\n                  \"headers\": {},\n                  \"privateKey\": ''\n                })\n                const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", tronMessage);\n                let provider = new OKXTronProvider(window.provider)\n\n                verifyList[methodItem.method] = base58Address === provider.getAccount(\"tron:mainnet\").address\n              }else if (methodItem.method === \"starknet_signMessage\") {\n                let res = methodItem.result\n                let signData = this.starknetPanelTypedData\n\n                const rpcProvider = new StarknetRpcProvider({ nodeUrl: \"https://free-rpc.nethermind.io/mainnet-juno/v0_7\" });\n\n                let provider = new OKXStarknetProvider(window.provider)\n                let address = provider.getAccount(\"starknet:mainnet\").address\n                let pk = \"0x123\"; /// random pk\n                const account = new StarknetAccount(rpcProvider, address, pk)\n\n                let that = this\n                account.verifyMessage(signData, res).then(function (isValid) {\n                  that.testTransaction = `Verifyed result: \\n${isValid}`\n                }).catch(function (error) {\n                  that.testTransaction = `Verifyed failed: \\n${error}`\n                })\n                verifyList[methodItem.method] = \"starknet is verifying signature...\"\n              }\n              else {\n                verifyList[methodItem.method] = \"Not verified yet\"\n\n              }\n            }else if(\"method\" in methodItem && \"error\" in methodItem) {\n              verifyList[methodItem.method] = methodItem.error\n            }\n\n          }\n\n          console.log(\"验证签名 最后的结果>>>:\", JSON.stringify(verifyList));\n          this.testTransaction = \"签名验证结果如下: \\n\" + JSON.stringify(verifyList)\n        }else {\n          console.log(\"验证签名 window.provider.session.connectMethodsReply 为空:\");\n\n        }\n\n    },\n\n    handleThemeSelect(theme) {\n      selectedTheme = theme;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: theme,\n          },\n        };\n      }\n    },\n\n    async sui_verifySignature(signatureResult) {\n      let resultObj = signatureResult\n      let result = false\n      let msg = ''\n      try {\n        /// 获取当前account\n        const adapter = new SuiAdapter(window.provider);\n        let account = adapter.getAccount()\n        console.log(`Account中获取的address：${account.address}`)\n\n        /// 验证签名\n        let pubKey = await verifyPersonalMessageSignature(this.currentSuiTransaction.message, resultObj.signature)\n        let address = pubKey.toSuiAddress()\n        console.log(`验签结果计算得到address：${address}`)\n\n        /// 对比pubKey\n        console.log(`account pubkey: ${account.publicKey}`,)\n        console.log(`result pubkey: ${pubKey.toBase64()}`)\n        result = (account.address === address) && (account.publicKey === pubKey.toBase64())\n\n        msg = `address verify: ${account.address === address}\\npublicKey verify: ${account.publicKey === pubKey.toBase64()}`\n        console.log(\"signature verify success: \", pubKey)\n      } catch (e) {\n        console.log(\"signature verify failed: \", e)\n      }\n      return {\n        result,\n        msg\n      }\n    },\n\n\n    handleRedirectSelect(input) {\n      this.redirect = input;\n    },\n\n    handleRedirectDeeplink(input) {\n      this.redirectDeeplink = input;\n    },\n\n    addRedirectParam() {\n      if (this.testTransaction) {\n        const newTransaction = JSON.parse(this.testTransaction);\n        newTransaction.redirect = this.redirect === 'deeplink' ? this.redirectDeeplink : this.redirect;\n        this.testTransaction = JSON.stringify(newTransaction);\n      }\n    },\n\n    canChainAddRedirectParam() {\n      return chainsThatCanAddRedirectParam.some((c) => this.selectedChain.startsWith(c));\n    }\n  },\n  created() {\n    // for (const eventName of Object.values(OKX_TON_CONNECTION_AND_TRANSACTION_EVENT)) {\n    //   console.log(eventName);\n    //   window.addEventListener(eventName, (event) => {\n    //     console.log(eventName,event.detail)\n    //     this.currentStatus = eventName\n    //   });\n    // }\n  },\n\n  mounted() {\n\n    var scriptTag = document.createElement(\"script\");\n    scriptTag.src = \"https://telegram.org/js/telegram-web-app.js\";\n    scriptTag.id = \"tgsdk\";\n    document.getElementsByTagName('head')[0].appendChild(scriptTag);\n\n    this.connectReady = true;\n    document.title = \"OKX Connect\";\n    this.initBtnClicked()\n\n    console.log(\"挂载成功:\")\n    if (this.$refs.starknetPanelRef) {\n      this.starknetPanelTypedData = toRaw(this.$refs.starknetPanelRef.signData)\n      console.log(\"111: \", this.starknetPanelTypedData)\n    }else {\n      console.log(\"222\")\n    }\n  },\n};\n</script>\n","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_getAccount()\">getAccount(BTC)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signMessage()\">signMessage(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_send()\">send(BTC)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendBitcoin()\">sendBitcoin(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signPsbt_up()\">signPsbt(上架NFT)</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"btc_signAndPushPsbt_up()\">signAndPushPsbt(上架NFT)</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在OKX App选择要上架的Btc NFT，点击【上架】\n        </li>\n        <li>\n          2. 弹出签名面板，点开高级选项，查看\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出上架流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendInscription()\">sendInscription(BTC)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Btc NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount\n    }\n  },\n  methods: {\n\n    btc_getAccount() {\n      this.$emit('generateTransactionParams', {}, \"btc_getAccount\")\n    },\n\n    btc_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to BTC\"\n      };\n      this.$emit('generateTransactionParams', params, \"btc_signMessage\")\n    },\n\n    btc_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"btc_send\")\n    },\n\n    btc_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"btc_sendBitcoin\")\n    },\n\n    btc_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"btc_signPsbt\")\n    },\n\n    btc_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"btc_signAndPushPsbt\")\n    },\n\n    btc_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"btc_sendInscription\")\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./BtcTransactionPanel.vue?vue&type=template&id=376d03bc&scoped=true\"\nimport script from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./BtcTransactionPanel.vue?vue&type=style&index=0&id=376d03bc&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-376d03bc\"]])\n\nexport default __exports__","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_getAccount()\">getAccount(Fractal)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signMessage()\">signMessage(Fractal)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_send()\">send(Fractal)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_sendBitcoin()\">sendBitcoin(Fractal)</el-button>\n\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signPsbt_up()\">signPsbt(上架NFT)</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_signAndPushPsbt_up()\">signAndPushPsbt(上架NFT)</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在OKX App选择要上架的Fractal NFT，点击【上架】\n        </li>\n        <li>\n          2. 弹出签名面板，点开高级选项，查看\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出上架流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_sendInscription()\">sendInscription(Fractal)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Fractal NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount\n    }\n  },\n  methods: {\n\n    fractal_getAccount() {\n      this.$emit('generateTransactionParams', {}, \"fractal_getAccount\")\n    },\n\n    fractal_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to UniSat!\\n\\nClick to sign in and accept the UniSat Terms of Service (https://unisat.io/terms-of-service.html) and Privacy Policy (https://unisat.io/privacy-policy.html).\\n    \\nThis request will not trigger a blockchain transaction.\\n    \\nYour authentication status will reset after 24 hours.\\n    \\nWallet address:\\nbc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\\n    \\nNonce:\\n162d70e3-8c21-4cfd-9a22-9bf0a4b7be51\\n\"\n      };\n      this.$emit('generateTransactionParams', params, \"fractal_signMessage\")\n    },\n\n    fractal_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_send\")\n    },\n\n    fractal_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_sendBitcoin\")\n    },\n\n    fractal_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"fractal_signPsbt\")\n    },\n\n    fractal_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"fractal_signAndPushPsbt\")\n    },\n\n    fractal_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"fractal_sendInscription\")\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./FractalTransactionPanel.vue?vue&type=template&id=fb2f7e38&scoped=true\"\nimport script from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./FractalTransactionPanel.vue?vue&type=style&index=0&id=fb2f7e38&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-fb2f7e38\"]])\n\nexport default __exports__","<script>\n\nimport {getFullnodeUrl, SuiClient} from \"@mysten/sui/client\";\nimport {Transaction as SuiTransaction} from '@mysten/sui/transactions';\n\nexport default {\n  name: \"SuiTransactionPanel\",\n  methods: {\n    sui_getAccount() {\n      this.$emit('generateTransactionParams', '', \"sui_getAccount\")\n    },\n\n    //对单个交易签名（不发送)\n    async sui_signMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signMessage\")\n    },\n\n    async sui_signPersonalMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signPersonalMessage\")\n    },\n\n    sui_signTransaction2() {\n      // 定义要转移的金额和目标地址\n      const amount = 109; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    async sui_requestRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n          `sui:mainnet`,\n          `https://fullnode.mainnet.sui.io:443`\n      );\n      var data = {\n        method: \"suix_getBalance\",\n        params: [\n          \"0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae\",\n          \"0x168da5bf1f48dafc111b0a488fa454aca95e0b5e::usdc::USDC\",\n        ],\n      };\n\n      this.$emit(\"generateTransactionParams\", data, \"sui_testRpc\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 102; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signAndExecuteTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n      this.$emit(\"generateTransactionParams\", input, \"sui_signAndExecuteTransaction\")\n    },\n\n    /// generate txBytes and txSerialize\n    async generateTsBytesAndSerizlize(input) {\n      /// txBytes and txSerialize may be constructed in advance by the dapp side\n      let resultTuple = [\"\", \"\"];\n      if (\n          \"txBytes\" in input &&\n          input.txBytes.length > 0 &&\n          \"txSerialize\" in input &&\n          input.txSerialize.length > 0\n      ) {\n        resultTuple = [input.txBytes, input.txSerialize];\n      }\n\n      /// Otherwise, a transactionBlock parameter is required.\n      if (!(\"transactionBlock\" in input)) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      // if (this.walletAddress != \"connected\") {\n      //   alert(\"请先连接钱包\");\n      //   return new Promise((resolve) => {\n      //     resolve(resultTuple);\n      //   });\n      // }\n\n      let senderAccounts = window.provider.requestAccountsWithNamespace(\"sui\");\n      if (senderAccounts.length == 0) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      try {\n        let rpcUrl = getFullnodeUrl(\"mainnet\");\n        rpcUrl = \"https://www.okx.com/fullnode/sui/discover/rpc\"\n        const suiClient = new SuiClient({ url: rpcUrl });\n\n        /// sender is required\n        input.transactionBlock.setSender(senderAccounts[0]);\n        const result = await input.transactionBlock.build({\n          client: suiClient,\n        });\n        const txBytes = Buffer(result).toString(\"base64\");\n        const txSerialize = await SuiTransaction.from(txBytes).toJSON();\n        resultTuple = [txBytes, txSerialize];\n      } catch (error) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      return new Promise((resolve) => {\n        resolve(resultTuple)\n      })\n    },\n\n    //签名并发送交易\n    sui_signAndExecuteTransaction() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n        \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.testTransaction = JSON.stringify(input);\n      this.currentSuiTransaction = input;\n      this.currentSuiMethod = \"sui_signAndExecuteTransaction\";\n    },\n  },\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_getAccount()\">getAccount(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signMessage()\">signMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signPersonalMessage()\">signPersonalMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signTransaction2()\">signTransaction(Sui)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signAndExecuteTransaction()\">sendTransaction(Sui)</el-button>\n      <div style=\"font-size: 12px; color: gray;\">(send to Rally Tiger account)</div>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_requestRpc()\">RPC_getBalance</el-button>\n      <div style=\"font-size: 12px; color: gray;\">get USDC balance of address:</div>\n      <div style=\"font-size: 12px; color: gray\">0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae</div>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signTransaction_pre_execution()\">signTransaction(prepared data)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signAndExecuteTransaction_pre_execution()\">sendTransaction(prepared data)</el-button>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./SuiTransactionPanel.vue?vue&type=template&id=56a8eddf&scoped=true\"\nimport script from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./SuiTransactionPanel.vue?vue&type=style&index=0&id=56a8eddf&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-56a8eddf\"]])\n\nexport default __exports__","<script>\nimport { OKXStarknetProvider } from \"@okxconnect/universal-provider\";\nimport { CallData, uint256, RpcProvider, Account } from \"starknet\";\n\nexport default {\n  name: \"StarknetTransactionPanel\",\n  methods: {\n    async starknet_signMessage() {\n      this.address = this.getCurrentAddress()\n      if (this.address === \"\") {\n        alert(\"address can't be ''\");\n        return\n      }\n\n      let signData = this.signData\n      this.$emit(\"generateTransactionParams\", JSON.stringify(signData))\n      let provider = new OKXStarknetProvider(window.provider)\n      let res = await provider.signMessage(this.address, signData, \"starknet:mainnet\")\n      if (res.code) {\n        if (res.code == 301) {\n          let msg = \"Wallet address is registering, please try again later!\"\n          alert(msg)\n          this.$emit(\"generateTransactionResult\", msg, \"starknet_signMessage\")\n        }\n        this.$emit(\"generateTransactionResult\", res, \"starknet_signMessage\")\n        return\n      }\n      console.log(res)\n\n      const rpcProvider = new RpcProvider({ nodeUrl: \"https://free-rpc.nethermind.io/mainnet-juno/v0_7\" });\n      let pk = \"0x123\"; /// random pk\n      const account = new Account(rpcProvider, this.address, pk)\n      let that = this\n      account.verifyMessage(signData, res).then(function (isValid) {\n        that.$emit(\"generateTransactionResult\", \"verify:\" + isValid + \"\\n\" + res, \"starknet_signMessage\")\n      }).catch(function (error) {\n        that.$emit(\"generateTransactionResult\", \"failed:\" + error + \"\\n\" + res, \"starknet_signMessage\")\n      })\n    },\n\n    async starknet_sendTransaction() {\n      this.address = this.getCurrentAddress()\n      if (this.address === \"\") {\n        alert(\"address can't be ''\");\n        return\n      }\n\n      let val = uint256.bnToUint256(120000000000000000)\n      const transferCalldata = CallData.compile({\n        to: \"0x00b909cefa36ab6bc26f5887a867e46ef162238f0a171b1c2974b665afd4237f\",\n        value: val\n      })\n\n      // const ETHTokenAddress = \"0x049d36570d4e46f48e99674bd3fcc84644ddd6b96f7c741b1562b82f9e004dc7\"\n      // const STARKTokenAddress = \"0x04718f5a0fc34cc1af16a1cdee98ffb20c31f5cd61d6ab07201858f4287c938d\"\n      const DAITokenAddress = \"0x00da114221cb83fa859dbdb4c44beeaa0bb37c7537ad5ae66fe5e0efd20e6eb3\"\n\n      const invokeParams = {\n        calls: [\n          {\n            contract_address: DAITokenAddress,\n            entry_point: \"transfer\",\n            calldata: transferCalldata\n          }\n        ],\n      }\n\n      this.$emit(\"generateTransactionParams\", JSON.stringify(invokeParams))\n      let provider = new OKXStarknetProvider(window.provider)\n\n      let that = this\n      provider.sendTransaction(this.address, invokeParams, \"starknet:mainnet\").then(function(res){\n        console.log(\"starknet_sendTransaction result \", res)\n        that.$emit(\"generateTransactionResult\", res, \"starknet_sendTransaction\")\n      }).catch(function(error) {\n        if (error.code == 301) {\n          let msg = \"Wallet address is registering, please try again later!\"\n          alert(msg)\n          that.$emit(\"generateTransactionResult\", msg, \"starknet_sendTransaction\")\n        }else {\n          that.$emit(\"generateTransactionResult\", error, \"starknet_sendTransaction\")\n        }\n      });\n    },\n\n    getCurrentAddress() {\n      let provider = new OKXStarknetProvider(window.provider)\n      const address = provider.getAccount(\"starknet:mainnet\")?.address\n      return address\n    },\n\n    getPublicKey() {\n      let provider = new OKXStarknetProvider(window.provider)\n      const account = provider.getAccount(\"starknet:mainnet\")\n      console.log(\"获取到的account是：\")\n      console.log(account)\n      return \"05d8e5e9c1dd686246716c888159271d2f13986cb4acee46164e2c4e034629c0\"\n    }\n  },\n\n  data() {\n    const signData = {\n        \"domain\": {\n          \"chainId\": \"0x534e5f4d41494e\",\n          \"name\": \"STRKFarm\",\n          \"version\": \"1\"\n        },\n        \"message\": {\n          \"document\": \"app.strkfarm.xyz/tnc/v1\",\n          \"message\": \"Read and Agree T&C\"\n        },\n        \"primaryType\": \"Tnc\",\n        \"types\": {\n          \"StarkNetDomain\": [\n            {\n              \"name\": \"name\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"version\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"chainId\",\n              \"type\": \"felt\"\n            }\n          ],\n          \"Tnc\": [\n            {\n              \"name\": \"message\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"document\",\n              \"type\": \"felt\"\n            }\n          ]\n        }\n    }\n\n    return {\n      signData\n    }\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"starknet_signMessage()\">signMessage</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 验签不成功的话，请尝试连接VPN\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"starknet_sendTransaction(true)\">\n        sendTransaction\n      </el-button>\n\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 发送0.12个DAI到0x00b9...4237f的地址\n        </li>\n        <li>\n          2. 请保证你的钱包有足够的DAI\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./StarknetTransactionPanel.vue?vue&type=template&id=082fda2b&scoped=true\"\nimport script from \"./StarknetTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./StarknetTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./StarknetTransactionPanel.vue?vue&type=style&index=0&id=082fda2b&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-082fda2b\"]])\n\nexport default __exports__","<script>\n\n\nimport {OKXTronProvider} from \"@okxconnect/universal-provider\";\nimport {TronWeb} from \"tronweb\";\n\nexport default {\n  name: \"TronTransactionPanel\",\n  methods: {\n\n    async tron_signMessage() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessage(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n\n      const verify = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), res, provider.getAccount(\"tron:mainnet\").address)\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" + res, \"tron_signMessage\")\n    },\n\n    async tron_signMessageV2() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessageV2(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", res);\n      console.log(\"tron_signMessageV2_base58Address\", base58Address)\n      console.log(\"tron_signMessageV2_address\", provider.getAccount(\"tron:mainnet\").address)\n      const verify = base58Address === provider.getAccount(\"tron:mainnet\").address\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" +  res, \"tron_signMessage\")\n    },\n\n    async tron_signTransaction(isOnlySign) {\n      let provider = new OKXTronProvider(window.provider)\n        let tronWeb = new TronWeb({\n          \"fullHost\": 'https://api.trongrid.io',\n          \"headers\": {},\n          \"privateKey\": ''\n        })\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const transaction = await tronWeb.transactionBuilder.sendTrx(\"TGBcVLMnVtvJzjPWZpPiYBgwwb7th1w3BF\", 1000, address);\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let res = await provider.signTransaction( transaction, \"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", res, \"tron_signTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async getContract() {\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n      \n      try {\n        const contract = await tronWeb.trx.getContract(contractAddress)\n        const abi = contract.abi.entrys;\n        console.log(\"获取到的合约：\")\n        console.log(abi)\n      } catch (error) {\n        console.log(\"Error getting contract ABI:\", error);\n      }\n    },\n    \n    async tron_signAndSendTransactionContract(isOnlySign) {\n      // this.getContract()\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n      ]\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"quote(uint256,uint256,uint256)\", {}, parameter, address);\n      console.log(\"=====>transaction: \")\n      console.log(ret);\n      this.$emit(\"generateTransactionParams\", ret.transaction)\n      if (isOnlySign) {\n        let tx = await provider.signTransaction( ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async tron_signAndSendTransactionApprove(isOnlySign) {\n      let contractAddress = \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'address', value: contractAddress},\n        {type: 'uint256', value: 1000},\n      ]\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"approve(address,uint256)\", {}, parameter, address);\n\n      let transaction = ret.transaction\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let tx = await provider.signTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n\n    }\n\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessage()\">tron_signMessage</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessageV2()\">tron_signMessageV2</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(true)\">\n        tron_signTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(true)\">\n        tron_signTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(true)\">\n        tron_signTransaction(Approve)\n      </el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(false)\">\n        tron_signAndSendTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(false)\">\n        tron_signAndSendTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(false)\">\n        tron_signAndSendTransaction(approve)\n      </el-button>\n    </el-col>\n\n\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./TronTransactionPanel.vue?vue&type=template&id=55a13ab0&scoped=true\"\nimport script from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./TronTransactionPanel.vue?vue&type=style&index=0&id=55a13ab0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-55a13ab0\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=56a738bb&scoped=true\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=56a738bb&scoped=true&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-56a738bb\"]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\nimport App from './App.vue'\n\nconst app = createApp(App)\n\napp.use(ElementPlus)\napp.mount('#app')","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkokxconnectdemo\"] = self[\"webpackChunkokxconnectdemo\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(10837); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["require","__awaiter","this","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","OKXBtcProvider","_1","constructor","provider","caip","getAddressForChainId","chainId","_a","_b","ns","checkChainId","undefined","OKXConnectError","OKX_CONNECT_ERROR_CODES","UNKNOWN_ERROR","accounts","session","namespaces","filter","account","startsWith","length","address","split","getAccount","_c","extra","publicKey","signMessage","signStr","type","params","from","ret","request","method","errorData","error","sendBitcoin","toAddress","satoshis","options","to","toString","feeRate","send","txhash","input","checkParameters","signPsbt","psbtHex","signPsbts","psbtResults","results","JSON","parse","catch","psbtHexs","signAndPushPsbt","sendInscription","inscriptionId","extension","coinId","protocolId","atomicSuffix","ordinalsSuffix","toLowerCase","endsWith","removeSuffix","scenario","txType","batchBean","coinAmount","nftId","str","suffix","slice","keys","unexistKeys","forEach","key","push","console","log","join","includes","namespaceKey","_","OKXCosmosProvider","core_1","_d","_e","_f","logDebug","stringify","NameSpaceKeyCosmos","accountArray","algo","bech32Address","pubKey","hexToUint8Array","signArbitrary","signerAddress","data","base64Encoded","window","btoa","signDoc","chain_id","account_number","sequence","fee","gas","amount","msgs","memo","signData","signAmino","signOptions","resData","signed","signature","signDirect","object","bodyBytes","bufferToHex","authInfoBytes","accountNumber","res","messageToBuffer","message","buffer","Uint8Array","replace","err","arr","output","map","x","padStart","hexString","arrayBuffer","i","byteValue","parseInt","substr","isNaN","OKXStarknetProvider","STARKNET_CHAIN_ID","getChain","CHAIN_NOT_SUPPORTED","NameSpaceKeyStarknet","typedData","sendTransaction","transaction","transactionData","transaction_hash","signMessageDeclareContractPayload","payload","sendMessageExecuteTransactionDetail","calls","abis","transactionsDetail","transactions","Array","isArray","executionRequest","nonce","version","OKXTonProvider","statusChangeSubscriptions","statusChangeErrorSubscriptions","on","tonWallet","wallet","callback","errorsHandler","connected","tonNameSpace","ton_addr","chain","network","walletStateInit","sessionWallet","tonDeviceInfo","platform","appName","appVersion","maxProtocolVersion","features","device","ton_proof","connectItems","tonProof","onStatusChange","item","TONCHAIN","MAINNET","requestAccountsWithNamespace","requestParams","OKXTronProvider","TRON_CHAIN_ID","NameSpaceKeyTron","stringToHex","hex","charCodeAt","signMessageV2","signTransaction","signedTx","realSignTx","visible","txID","rawData","contract","raw_data","expiration","ref_block_bytes","fee_limit","ref_block_hash","timestamp","raw_data_hex","signAndSendTransaction","__importDefault","mod","__esModule","OKXUniversalProvider","eip155_1","sui_1","constants_1","eventemitter3_1","client_1","namespaces_1","solana_1","btc_1","aptos_1","ton_1","cosmos_1","tron_1","utils_1","packages_1","provider_1","starknet_1","init","opts","checkMetaData","dappMetaData","setGlobal","okxConnectUniversalinwindow","initialize","getDefaultReporter","configVersionAndSide","providerOpts","name","rpcProviders","events","default","args","reportLog","NOT_CONNECTED_ERROR","namespace","requestParam","buildRequestParamFromRequest","getProvider","validateChain","keyArr","assign","redirect","sessionConfig","enable","client","connectOpts","connect","requestAccounts","disconnect","called","onRequestSent","disconnectAndEmit","cleanup","engine","connectionManager","emit","topic","aptosChainNameToGeneralId","replaceAptos","aptosNameSpace","realNS","replaceAptosInner","aptos","optionAptosNameSpace","optionalNamespaces","realOptionNS","chains","defaultChain","replaceAptosGeneralIdWithNetName","replaceSessionAptos","index","values","disconnectInner","getCurrentConnectionReady","connectAndSign","signRequest","updatedOpts","openUniversalUrl","isMobileUserAgent","setNamespaces","onConnect","requestItem","signResponseList","okxConnectUniversalUIinwindow","signResponse","creatNotSupportMethodItemReplay","setTimeout","syncAllAddresses","syncAddressAvailable","syncAllAddress","METHOD_NOT_SUPPORTED","event","listener","once","removeListener","off","setDefaultChain","rpcUrl","test","checkStorage","sessionInfoStr","getFromStore","sessionInfo","restoreconnect","createProviders","registerEventListeners","url","location","hostname","origin","SignClient","providersToCreate","Set","parseNamespaceKey","namespacesValue","currentNameSpace","Eip155Provider","opts1","solanaProvider","sonicProvider","svmProvider","optsTon","tonProvider","optsSui","suiProvider","SuiProvider","optsBtc","btcProvider","fbProvider","aptosProvider","moveProvider","cosmosProvider","tronProvider","starknetProvider","addDisconnectListener","PROVIDER_EVENTS","DEFAULT_CHAIN_CHANGED","caip2ChainId","onChainChanged","UPDATE_NAMESPACES","nameSpaces","nameSpacekey","persist","icon","dappInfo","isChainNamespaceInSession","chainsArr","defaultNamespace","getDefaultChain","namespaceStr","requestDefaultChainWithNamespace","caip2Chain","sessionProperties","saveSessionContent","getSessionContent","showRequestModal","__createBinding","create","o","m","k","k2","desc","getOwnPropertyDescriptor","writable","configurable","enumerable","get","__exportStar","p","prototype","hasOwnProperty","call","OKXUniversalProvider_1","OKXBtcProvider_1","OKXCosmosProvider_1","OKXTonProvider_1","OKXTronProvider_1","OKXStarknetProvider_1","ConnectMethodUtils_1","ISignClient","metaData","super","connectRequest","requestAccountItem","requiredNamespaces","nameSpaceToConnectWalletNameSpace","setSessionConnectingListener","SESSION_CONNECTING","connectRequestMethods","connectMethodsToConnectWalletMethods","universalConnect","metadata","info","getOKXLink","useMini","getAppWalletShortDeepLink","clientId","fillParamsToSession","connectMethodsResponseUpdate","isIos","openOKXWallet","response","requestId","code","onAck","Engine","ConnectionManager","getTelegramWalletTWAUrl","tmaReturnUrl","openOKXTMAWalletlinkWithFallback","openOKXDeeplink","standardDeeplink","allAddressStr","syncResoonseToRequire","connectSupportMethods","connectMethodsAdaptOldVersion","bs58_1","isRecord","notSupportError","errorItem","callBackParams","solAccount","NameSpaceKeySOL","account1","solAddress","fromAccountToAddress","realMessage","encodeMessage","TextEncoder","encode","suiMessage","convertedArray","uint8Array","decoder","TextDecoder","b64encoded","decode","atob","btcAccounts","NameSpaceKeyBtc","account2","btcAccount","btcAddress","paramData","aptosAccount","NameSpaceKeyAptos","account3","aptosAddress","prefix","fullMessage","application","protocol","aptosChainId","utf8Array","byte","cosmosAccount","account_cosmos","cosmosAddress","cosmosData","cosmosBase64Encoded","methodItem","solanaSuccessData","suiMethod","requestMethod","suiMessageb64","aptosSignature","requireNameSpace","includeEip155","some","space","syncAddressHostAvailable","includeChain","paramsArr","firstParam","firstObj","aptosParams","currentURL","signChainId","applicationUrl","cosmosChain","responseAddressStr","allAddress","isEvm","walletName","deriveName","addresses","addr","ci","a","evmAddress","freeze","getAccountsChains","isCaipNamespace","NameSpaceKeyEip155","NameSpaceKeySui","NameSpaceKeyTON","mergeRpcMap","targetRpcMap","sourceRpcMap","mergeNamespaces","target","source","rpcMap","OKX_APP_WALLET_NAME","fixMobileBtcSession","btcNameSpace","Number","addressType","compressedPublicKey","GENERIC_SUBPROVIDER_NAME","RPC_URL","STORAGE","CONTEXT","WC_VERSION","PROTOCOL","RELAY_URL","LOGGER","JsonRpcConnection_1","JsonRpcProvider_1","AptosProvider","httpProviders","createHttpProviders","updateNamespace","getAccounts","methods","setHttpProvider","Error","http","parsedChainId","getChainId","parsedRpc","getRpcUrl","httpProvider","createHttpProvider","getHttpProvider","rpc","JsonRpcProvider","JsonRpcConnection","getGlobal","BtcProvider","logError","CosmosProvider","updateRequestParams","isDic","switchChainId","decimalNumber","selectedChainId","chainNum","paramsChainId","paramsChainString","String","adaptArray","messageObj","addressObj","isEqual","chainAddress","messages","typedDataJson","secondObj","hexChainId","getHexChainIdFromRequest","isChainApproved","handleSwitchChain","addEthereumChain","resultData","nameSpace","rpcUrls","eip155","cross_fetch_1","core_2","DEFAULT_HTTP_HEADERS","Accept","DEFAULT_HTTP_METHOD","DEFAULT_FETCH_OPTS","headers","disableProviderPing","EventEmitter","isAvailable","registering","isHttpUrl","connecting","open","arguments","register","close","onClose","body","safeJsonStringify","json","onPayload","onError","id","jsonrpc","onOpen","parseError","safeJsonParse","formatJsonRpcError","parseConnectionError","types_1","IJSONRpcProvider","connection","hasRegisteredEventListeners","setConnection","context","requestStrict","formatJsonRpcRequest","getBigIntRpcId","isJsonRpcError","isJsonRpcResponse","reason","_error","SolanaProvider","getPubkey","getWalletAddress","components","StarknetProvider","__rest","s","t","indexOf","getOwnPropertySymbols","propertyIsEnumerable","TONProvider","validUntil","newParams","fromAddress","boc","TronProvider","IJSONRpcConnection","opt","globals","convertChainIdToNumber","parseChainId","mergeArrays","projectId","reference","addressArr","CAIP_DELIMITER","b","versionCompare","okxGlobal","_createElementBlock","_hoisted_1","_createVNode","_component_el_container","_withCtx","_component_el_header","_cache","_createTextVNode","_component_el_main","_component_el_card","class","header","_createElementVNode","style","_component_el_row","_component_el_col","span","_toDisplayString","$options","_ctx","currentStatus","_component_el_checkbox","modelValue","withUI","$event","onChange","handleWithUI","universalToTG","handleUniversalToTG","_component_el_select","modals","placeholder","handleModalsSelect","multiple","_component_el_option","label","returnStrategy","handleReturnStrategySelect","_Fragment","_renderList","returnStrategies","strategy","_createBlock","_component_el_input","deeplink","handleReturnStrategyDeeplink","disabled","_createCommentVNode","language","handleLanguageSelect","locales","locale","theme","handleThemeSelect","THEME","LIGHT","DARK","selectedMethod","handleConnectMethodsSelect","connectMethods","tonProofValue","gutter","align","availableChains","checked","areChainsInit","isOptionalChecked","handleOptionChange","_component_el_button","onClick","initBtnClicked","connectInitStr","connectBtnClicked","connectStatusStr","syncAllAddressClick","syncAllAddressStr","disconnectAction","walletAddress","disconnectStatusStr","_Teleport","showModal","closeModal","_withModifiers","_component_qrcode_vue","qrValue","size","level","_component_el_tabs","activeTab","onTabClick","clickActiveTab","_component_el_tab_pane","eth_requestAccounts","eth_chainId","wallet_switchEthereumChain","wallet_addEthereumChain","personal_sign","eth_signTypedData_v4","eth_sendTransaction_transfer","eth_sendTransaction_approve","eth_sendTransaction_mint","wallet_watchAsset","ton_getAccount","ton_sendTransaction","sol_signMessage","sol_signTransaction","sol_signVersionedTransaction","sol_signAllTransactions","sol_signAllVersionedTransactions","sol_signAndSendTransaction","sol_signAndSendVersionedTransaction","_component_SuiPanel","onGenerateTransactionParams","sui_generateTransactionParams","_component_BTCPanel","btc_generateTransactionParams","_component_FractalPanel","fractal_generateTransactionParams","_component_TronTransactionPanel","tron_generateTransactionParams","onGenerateTransactionResult","tron_getTransactionResult","aptos_signMessage","aptos_signTransaction","aptos_signAndSubmitTransaction","cosmos_signArbitrary","cosmos_signAmino","cosmos_signDirect","wallet_testRpc","eth_sendTransaction_swap","move_signTransaction","move_signAndSubmitTransaction","_component_StarknetPanel","ref","starknet_generateTransactionParams","starknet_getTransactionResult","testBase64UrlSafe","xs","sm","handleRedirectSelect","canChainAddRedirectParam","redirectDeeplink","handleRedirectDeeplink","addRedirectParam","testTransaction","rows","testboc","$setup","sendBtnDisabled","testTransactionStr","btc_getAccount","btc_signMessage","sendAmount","clearable","btc_send","sendSatoshisAmount","btc_sendBitcoin","btc_signPsbt_up","btc_signAndPushPsbt_up","receiver","btc_sendInscription","props","msg","setup","$emit","alert","autoFinalized","__exports__","fractal_getAccount","fractal_signMessage","fractal_send","fractal_sendBitcoin","fractal_signPsbt_up","fractal_signAndPushPsbt_up","fractal_sendInscription","sui_getAccount","sui_signMessage","sui_signPersonalMessage","sui_signTransaction2","sui_signAndExecuteTransaction","sui_requestRpc","sui_signTransaction_pre_execution","sui_signAndExecuteTransaction_pre_execution","recipientAddress","tx","SuiTransaction","coin","splitCoins","transferObjects","transactionBlock","showEffects","txBytes","txSerialize","generateTsBytesAndSerizlize","resultTuple","senderAccounts","getFullnodeUrl","suiClient","SuiClient","setSender","build","Buffer","toJSON","currentSuiTransaction","currentSuiMethod","starknet_signMessage","starknet_sendTransaction","getCurrentAddress","rpcProvider","RpcProvider","nodeUrl","pk","Account","that","verifyMessage","isValid","val","uint256","bnToUint256","transferCalldata","CallData","compile","DAITokenAddress","invokeParams","contract_address","entry_point","calldata","getPublicKey","tron_signMessage","tron_signMessageV2","tron_signTransaction","tron_signAndSendTransactionContract","tron_signAndSendTransactionApprove","tronWeb","TronWeb","verify","trx","base58Address","verifyMessageV2","isOnlySign","transactionBuilder","sendTrx","getContract","contractAddress","abi","entrys","parameter","triggerSmartContract","verifyADR36Amino","fromBech32","VConsole","allChains","chainsThatCanAddRedirectParam","optionChains","selectedModals","selectedReturnStrategy","selectedDeepLink","selectedLanguage","selectedTheme","TronTransactionPanel","QrcodeVue","BTCPanel","FractalPanel","SuiPanel","StarknetPanel","testTopic","testPublicKey","testProofPayload","pendingDeepLink","logList","connectReady","localPubKey","localSecKey","selectedChain","ProofPayloadVerify","showVerifyRow","has","localStorage","getItem","selectedMethodData","isChecked","setItem","reload","delete","add","starknetPanelTypedData","computed","selectedChains","initChains","newChains","updatedChains","tab","tabName","initCall","OKXUniversalConnectUI","actionsConfiguration","uiPreferences","walletInfo","onModalStateChange","state","entries","substring","uri","useShortLink","isPC","items","Date","now","testTonSdk","blockExplorerUrls","chainName","nativeCurrency","symbol","decimals","dataETH","dataPolygon","types","EIP712Domain","Person","Mail","primaryType","domain","verifyingContract","contents","maxPriorityFeePerGas","maxFeePerGas","gasPrice","gasLimit","image","tonUniversalLog","sendTransactionAlert","fetch","confirm","sendData","adapter","SuiAdapter","suiResult","signAndExecuteTransaction","sui_verifySignature","signPersonalMessage","btcAdapter","btcResult","currentBtcMethod","currentBtcTransaction","hexToBase64","bs64Str","fractalResult","currentFractalMethod","currentFractalTransaction","USER_REJECTS_ERROR","hexStr","bytes","blob","Blob","reader","FileReader","onload","base64Data","onerror","readAsDataURL","datatest","binary","fromCharCode","firstStr","showUrl","getUniversalLink","getAppWalletDeepLink","hasEip155","hasSolana","hasSui","hasBtc","hasAptos","hasTon","hasCosmos","hasTron","nameSpacesChains","optSpaceChains","solanaChains","hasStarknet","suiChains","btcChains","connectMethod","connectData","requireData","solana","cosmos","tron","starknet","tonParams","ton","sui","btc","optData","eip155Chains","tonChains","signMethods","getCurrentSelectedMethodData","openModalAndSign","openModal","methodList","suiData","currentMethod","accountAddress","userAgentInfo","navigator","userAgent","Agents","flag","v","isSafariOrChrome","pubkey","OKXSolanaProvider","result1","nacl","detached","PublicKey","toBytes","OKXAptosProvider","config","AptosConfig","Network","Aptos","simple","sender","function","typeArguments","functionArguments","signAndSubmitTransaction","Connection","getSolConnect","blockhash","getLatestBlockhash","versionedTransactionMessage","TransactionMessage","payerKey","recentBlockhash","instructions","SystemProgram","transfer","fromPubkey","toPubkey","lamports","compileToV0Message","VersionedTransaction","signAllTransactions","Transaction","feePayer","cosmos_verifySignArbitrary","pub_key","signer","prefixStr","signatureBuffer","uint8Signature","pubKeyValueBuffer","pubKeyUint8Array","uiOptions","eth_verifyMessage","ethAddress","originalMessage","recoveredAddress","ethers","list","verifyList","requestItme","ethMessage","solanaMessage","verifySol","aptosMessage","aptosPublicKey","cosmosMessage","tronMessage","StarknetRpcProvider","StarknetAccount","signatureResult","resultObj","verifyPersonalMessageSignature","toSuiAddress","toBase64","newTransaction","c","created","mounted","scriptTag","document","createElement","src","getElementsByTagName","appendChild","title","$refs","starknetPanelRef","toRaw","render","app","createApp","App","use","ElementPlus","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","loaded","__webpack_modules__","amdO","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","j","every","splice","r","n","getter","d","leafPrototypes","getProto","getPrototypeOf","obj","__proto__","mode","def","current","getOwnPropertyNames","definition","g","globalThis","Function","prop","Symbol","toStringTag","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}