{"version":3,"file":"js/app.c13a2156.js","mappings":"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","sources":["webpack://okxconnectdemo/../packages/universal-provider/src/OKXBtcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXCosmosProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXUniversalProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/sign-client/client.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/ConnectMethodUtils.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/namespaces.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/events.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/values.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/aptos.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/btc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/cosmos.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/eip155.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcConnection.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/solana.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/sui.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/ton.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/misc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/providers.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/globals.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/misc.js","webpack://okxconnectdemo/./src/App.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue?1b44","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue?e4fb","webpack://okxconnectdemo/./src/App.vue?7ccd","webpack://okxconnectdemo/./src/main.js","webpack://okxconnectdemo/webpack/bootstrap","webpack://okxconnectdemo/webpack/runtime/amd options","webpack://okxconnectdemo/webpack/runtime/chunk loaded","webpack://okxconnectdemo/webpack/runtime/compat get default export","webpack://okxconnectdemo/webpack/runtime/define property getters","webpack://okxconnectdemo/webpack/runtime/global","webpack://okxconnectdemo/webpack/runtime/hasOwnProperty shorthand","webpack://okxconnectdemo/webpack/runtime/make namespace object","webpack://okxconnectdemo/webpack/runtime/node module decorator","webpack://okxconnectdemo/webpack/runtime/jsonp chunk loading","webpack://okxconnectdemo/webpack/startup"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXBtcProvider = void 0;\nconst _1 = require(\"./\");\nclass OKXBtcProvider {\n    constructor(generator) {\n        this.caip = [\n            \"btc:mainnet\",\n            \"fractal:mainnet\"\n        ];\n        this.provider = generator.getUniversalProvider();\n    }\n    getAddressForChainId(chainId) {\n        var _a, _b;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let accounts = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        });\n        if (accounts == undefined || accounts.length < 0) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `no connected account`);\n        }\n        let account = accounts[0];\n        const address = account.split(':')[2];\n        return address;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let extra = (_c = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[ns]) === null || _b === void 0 ? void 0 : _b.extra) === null || _c === void 0 ? void 0 : _c[chainId];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        return {\n            address: this.getAddressForChainId(chainId),\n            publicKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param signStr\n     * @param chainId\n     * @param type\n     * @returns\n     */\n    signMessage(chainId, signStr, type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (signStr === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signMessage parmas error`);\n            }\n            let params = {\n                signStr: signStr,\n                from: this.getAddressForChainId(chainId)\n            };\n            if (type) {\n                params.type = type;\n            }\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signMessage\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param toAddress\n     * @param satoshis\n     * @param options { feeRate: 0 }\n     * @returns\n     */\n    sendBitcoin(chainId, toAddress, satoshis, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            let params = {\n                from: this.getAddressForChainId(chainId),\n                to: toAddress,\n                value: (satoshis / 100000000).toString(),\n            };\n            if (options === null || options === void 0 ? void 0 : options.feeRate) {\n                params[\"satBytes\"] = options.feeRate.toString();\n            }\n            let result = yield this.send(chainId, params);\n            if (result !== undefined && ('txhash' in result)) {\n                // return txhash directly\n                return result.txhash;\n            }\n            // or return unexpected result\n            return result;\n        });\n    }\n    //  from - string：当前连接的钱包的 BTC 地址\n    //  to - string：接受 BTC 的地址\n    //  value - string：发送 BTC 的数量\n    //  satBytes - string： (可选) 自定义费率\n    //  memo - string： (可选) 指定 outputs OP_RETURN 内容 示例\n    //  memoPos - number： (可选) 指定 outputs OP_RETURN 输出位置，如果传了 memo 则必须传入 memoPos 指定位置，否则 memo 不生效\n    send(chainId, input) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (!this.checkParameters(input, 'to', 'value')) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send parmas  error`);\n            }\n            input[\"from\"] = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: 'btc_send',\n                    params: input\n                }, chainId);\n                if ('result' in ret) {\n                    return {\n                        txhash: ret.result\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param psbtHex string 要签名的 psbt 的十六进制字符串\n     * @param options object { autoFinalized: 0 }\n     */\n    signPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.signPsbts(chainId, [psbtHex], [options]).then(psbtResults => {\n                    let results = JSON.parse(psbtResults);\n                    resolve(results[0]);\n                }).catch(error => {\n                    reject(error);\n                });\n            });\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHexs Array\n     * @param options Array [{ autoFinalized: 0 }]\n     * @returns\n     */\n    signPsbts(chainId, psbtHexs, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHexs === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHexs: psbtHexs,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signPsbts\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHex string\n     * @param options object\n     * @returns\n     */\n    signAndPushPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHex === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHex: psbtHex,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signAndPushPsbt\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return JSON.parse(ret.result);\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param address string, receiver address\n     * @param inscriptionId string, 铭文 ID + 协议，没有传协议则默认是 Ordinals NFT ，目前仅支持 Ordinals 及 Atomicals 协议\n     * @param options object, { feeRate: number } custom rates\n     */\n    sendInscription(chainId, address, inscriptionId, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let extension = {\n                address: address,\n                inscriptionId: inscriptionId,\n                options: options\n            };\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (address === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method sendInscription params error`);\n            }\n            var feeRate = 0;\n            if (options && ('feeRate' in options)) {\n                feeRate = options.feeRate;\n            }\n            let coinId = '';\n            let from = this.getAddressForChainId(chainId);\n            var protocolId = 7; //ProtocolIdBRCNFT\n            if (inscriptionId !== 'undefined') {\n                let atomicSuffix = \"-Atomicals\";\n                let ordinalsSuffix = \"-Ordinals\";\n                if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(atomicSuffix.toLowerCase())) {\n                    protocolId = 8; //WXRCProtocolIdARCNFT\n                    inscriptionId = this.removeSuffix(inscriptionId, atomicSuffix);\n                }\n                else if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(ordinalsSuffix.toLowerCase())) {\n                    inscriptionId = this.removeSuffix(inscriptionId, ordinalsSuffix);\n                }\n            }\n            let params = {\n                scenario: 5,\n                feeRate: feeRate,\n                txType: \"20\",\n                to: address,\n                batchBean: [\n                    {\n                        coinAmount: \"1\",\n                        nftId: inscriptionId,\n                        protocolId: protocolId,\n                        coinId: coinId,\n                        inscriptionId: \"\",\n                        from: from\n                    }\n                ],\n                extension: extension\n            };\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_sendInscription\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    removeSuffix(str, suffix) {\n        if (str.endsWith(suffix)) {\n            return str.slice(0, str.length - suffix.length);\n        }\n        return str;\n    }\n    checkParameters(params, ...keys) {\n        var unexistKeys = [];\n        keys.forEach(key => {\n            if (!(`${key}` in params)) {\n                unexistKeys.push(key);\n            }\n        });\n        if (unexistKeys.length > 0) {\n            console.log('not find key: ', unexistKeys.join(\",\"));\n            return false;\n        }\n        return true;\n    }\n    /**\n     *\n     * @param chainId eg. btc:mainnet\n     * @returns eg. btc\n     */\n    checkChainId(chainId) {\n        if (this.caip.includes(chainId)) {\n            let [namespaceKey, _] = chainId.split(\":\");\n            return namespaceKey;\n        }\n        return undefined;\n    }\n}\nexports.OKXBtcProvider = OKXBtcProvider;\nexports.default = OKXBtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCosmosProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nconst uint8array_extras_1 = require(\"uint8array-extras\");\nclass OKXCosmosProvider {\n    constructor(provider) {\n        this.provider = provider.getUniversalProvider();\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyCosmos]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyCosmos]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n            console.log(\"aptos_publicKey\", publicKey);\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            algo: \"secp256k1\",\n            address: address,\n            bech32Address: address,\n            pubKey: (0, uint8array_extras_1.hexToUint8Array)(publicKey),\n        };\n    }\n    signArbitrary(chainId, signerAddress, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const base64Encoded = (0, uint8array_extras_1.stringToBase64)(data);\n            const signDoc = {\n                chain_id: \"\",\n                account_number: \"0\",\n                sequence: \"0\",\n                fee: {\n                    gas: \"0\",\n                    amount: []\n                },\n                msgs: [{\n                        \"type\": \"sign/MsgSignData\",\n                        \"value\": {\n                            \"signer\": signerAddress,\n                            \"data\": base64Encoded\n                        }\n                    }],\n                memo: \"\"\n            };\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signArbitrary\",\n                \"params\": {\n                    \"chain_id\": chainId.split(\":\")[1],\n                    \"data\": signDoc\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    if (typeof ret.result == \"string\") {\n                        return JSON.parse(ret.result);\n                    }\n                    else {\n                        return ret.result;\n                    }\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAmino(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (signDoc.msgs[0].type == \"sign/MsgSignData\") {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signArbitrary\",\n                    \"params\": {\n                        \"chain_id\": chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        return ret.result;\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    return error;\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                }\n            }\n            else {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signAmino\",\n                    \"params\": {\n                        \"chainId\": chainId.split(\":\")[1],\n                        \"sign_doc\": signDoc,\n                        \"signOptions\": signOptions\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        const resData = JSON.parse(ret.result);\n                        console.log(\"signdoc\", signDoc, resData.signDoc);\n                        signDoc.fee = resData.signDoc.fee;\n                        return { signed: signDoc, signature: resData.signature };\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                    return error;\n                }\n            }\n        });\n    }\n    signDirect(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const object = {\n                bodyBytes: this.bufferToHex(signDoc.bodyBytes),\n                authInfoBytes: this.bufferToHex(signDoc.authInfoBytes),\n                chainId: signDoc.chainId,\n                accountNumber: signDoc.accountNumber ? signDoc.accountNumber.toString() : null,\n                signOptions: signOptions ? signOptions : null\n            };\n            let data = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signDirect\",\n                \"params\": {\n                    \"chainId\": chainId.split(\":\")[1],\n                    \"sign_doc\": object,\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    const res = JSON.parse(ret.result);\n                    console.log(\"signdirect result\", res);\n                    signDoc.authInfoBytes = this.messageToBuffer(res.signDoc.authInfoBytes);\n                    return { signed: signDoc, signature: res.signature };\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    messageToBuffer(message) {\n        var buffer = Uint8Array.from([]);\n        try {\n            if (typeof message === \"string\") {\n                buffer = (0, uint8array_extras_1.hexToUint8Array)(message.replace(\"0x\", \"\"));\n            }\n            else {\n                buffer = (0, uint8array_extras_1.toUint8Array)(message);\n            }\n        }\n        catch (err) {\n            console.log(`messageToBuffer error: ${err}`);\n        }\n        return buffer;\n    }\n    bufferToHex(buf) {\n        return \"0x\" + (0, uint8array_extras_1.uint8ArrayToHex)(buf);\n    }\n}\nexports.OKXCosmosProvider = OKXCosmosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXUniversalProvider = void 0;\nconst utils_1 = require(\"./provider/utils\");\nconst eip155_1 = require(\"./provider/providers/eip155\");\nconst sui_1 = require(\"./provider/providers/sui\");\nconst constants_1 = require(\"./provider/constants\");\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nconst client_1 = require(\"./packages/sign-client/client\");\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"./packages/utils/namespaces\");\nconst solana_1 = __importDefault(require(\"./provider/providers/solana\"));\nconst btc_1 = __importDefault(require(\"./provider/providers/btc\"));\nconst aptos_1 = __importDefault(require(\"./provider/providers/aptos\"));\nconst ton_1 = __importDefault(require(\"./provider/providers/ton\"));\nconst cosmos_1 = __importDefault(require(\"./provider/providers/cosmos\"));\nclass OKXUniversalProvider {\n    static init(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const provider = new OKXUniversalProvider(opts);\n            yield provider.initialize();\n            return provider;\n        });\n    }\n    getUniversalProvider() {\n        return this;\n    }\n    constructor(opts) {\n        this.rpcProviders = {};\n        this.events = new eventemitter3_1.default();\n        this.providerOpts = opts;\n    }\n    request(args, chain) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.connected()) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return yield this.getProvider(namespace).request(requestParam);\n        });\n    }\n    buildRequestParamFromRequest(args, chain) {\n        (0, core_1.logDebug)(\"UniversalProvider request args >>>: \", chain, JSON.stringify(args));\n        const [namespace, chainId] = this.validateChain(chain);\n        if (!this.session) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Please call connect() before request()\");\n        }\n        let keyArr = Object.keys(this.session.namespaces);\n        if (!chain && keyArr && keyArr.length > 1) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Multiple chains have been linked, the request method requires chain`);\n        }\n        (0, core_1.logDebug)(\"UniversalProvider request >>args>>>: \", args);\n        const requestParam = Object.assign(Object.assign({}, args), { chainId: `${namespace}:${chainId}` });\n        return { namespace, requestParam };\n    }\n    enable() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.client) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (!this.session) {\n                if (this.connectOpts) {\n                    yield this.connect(this.connectOpts);\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n                }\n            }\n            const accounts = yield this.requestAccounts();\n            return accounts;\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.session) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                let called = false;\n                const onRequestSent = () => __awaiter(this, void 0, void 0, function* () {\n                    if (!called) {\n                        called = true;\n                        yield this.disconnectAndEmit();\n                        yield this.cleanup();\n                        resolve();\n                        (0, core_1.logDebug)(\"UniversalProvider disconnect Disconnected\");\n                    }\n                });\n                try {\n                    yield this.client.disconnect();\n                    yield onRequestSent();\n                }\n                catch (e) {\n                    yield onRequestSent();\n                }\n            }));\n        });\n    }\n    disconnectAndEmit() {\n        var _a, _b;\n        this.client.engine.connectionManager.disconnect();\n        this.events.emit(\"disconnect\", { topic: (_a = this.session) === null || _a === void 0 ? void 0 : _a.topic });\n        this.events.emit(\"session_delete\", { topic: (_b = this.session) === null || _b === void 0 ? void 0 : _b.topic });\n    }\n    aptosChainNameToGeneralId(chainId) {\n        if (chainId == \"aptos:mainnet\") {\n            return \"aptos:637\";\n        }\n        else if (chainId == \"movement:testnet\") {\n            return \"aptos:70000060\";\n        }\n        else {\n            return chainId;\n        }\n    }\n    replaceAptos(opts) {\n        var _a, _b;\n        let aptosNameSpace = (_a = opts.namespaces) === null || _a === void 0 ? void 0 : _a[\"aptos\"];\n        if (aptosNameSpace != undefined) {\n            let realNS = this.replaceAptosInner(aptosNameSpace);\n            if (opts.namespaces != undefined && \"aptos\" in opts.namespaces && realNS != undefined) {\n                opts.namespaces.aptos = realNS;\n            }\n        }\n        let optionAptosNameSpace = (_b = opts.optionalNamespaces) === null || _b === void 0 ? void 0 : _b[\"aptos\"];\n        if (optionAptosNameSpace != undefined) {\n            let realOptionNS = this.replaceAptosInner(optionAptosNameSpace);\n            if (opts.optionalNamespaces != undefined && \"aptos\" in opts.optionalNamespaces && realOptionNS != undefined) {\n                opts.optionalNamespaces.aptos = realOptionNS;\n            }\n        }\n        let requestMethods = opts.requestMethods;\n        if (requestMethods != undefined) {\n            requestMethods.forEach(requestMethod => {\n                if (requestMethod.chainId && requestMethod.chainId.startsWith(\"aptos\")) {\n                    requestMethod.chainId = this.aptosChainNameToGeneralId(requestMethod.chainId);\n                }\n            });\n        }\n        return opts;\n    }\n    replaceAptosInner(aptosNameSpace) {\n        var _a;\n        if (aptosNameSpace != undefined) {\n            aptosNameSpace.chains = (_a = aptosNameSpace.chains) === null || _a === void 0 ? void 0 : _a.map(chainId => {\n                return this.aptosChainNameToGeneralId(chainId);\n            });\n            if (aptosNameSpace.defaultChain != undefined) {\n                aptosNameSpace.defaultChain = this.aptosChainNameToGeneralId(aptosNameSpace.defaultChain);\n            }\n        }\n        return aptosNameSpace;\n    }\n    connected() {\n        let disconnectInner = () => {\n            try {\n                this.cleanup();\n                this.client.engine.connectionManager.disconnect();\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"Error during disconnect:\", e);\n            }\n        };\n        try {\n            if (!this.session)\n                return false;\n            if (!this.client.engine.connectionManager.getCurrentConnectionReady()) {\n                disconnectInner();\n                return false;\n            }\n            return true;\n        }\n        catch (e) {\n            disconnectInner();\n            return false;\n        }\n    }\n    connect(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.client) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (this.connected()) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.ALREADY_CONNECTED_ERROR);\n            }\n            opts = this.replaceAptos(opts);\n            (0, core_1.logDebug)(`OKXUniversalProvider connect >>>>`, JSON.stringify(opts));\n            if (opts.sessionConfig === undefined) {\n                opts.sessionConfig = {};\n            }\n            if (opts.sessionConfig.openUniversalUrl === undefined) {\n                opts.sessionConfig.openUniversalUrl = (0, core_1.isMobileUserAgent)();\n            }\n            this.setNamespaces(opts);\n            try {\n                (0, core_1.logDebug)(`UniversalProvider connect opts.stringify ====> ${JSON.stringify(opts)}`);\n                let session = yield this.client.connect(opts);\n                (0, core_1.logDebug)(`UniversalProvider connect success ====> ${JSON.stringify(session)}`);\n                if (session) {\n                    this.session = session;\n                    this.onConnect();\n                    return session;\n                }\n                return undefined;\n            }\n            catch (error) {\n                (0, core_1.logDebug)(`UniversalProvider connect error ====> `, JSON.stringify(error));\n                throw error;\n            }\n        });\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    setDefaultChain(chain, rpcUrl) {\n        chain = this.aptosChainNameToGeneralId(chain);\n        try {\n            // ignore without active session\n            if (!this.connected())\n                return;\n            const [namespace, chainId] = this.validateChain(chain);\n            const provider = this.getProvider(namespace);\n            provider.setDefaultChain(chainId, rpcUrl);\n        }\n        catch (error) {\n            // ignore the error if the fx is used prematurely before namespaces are set\n            if (!/Please call connect/.test(error.message))\n                throw error;\n        }\n    }\n    checkStorage() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let sessionInfoStr = yield this.getFromStore(\"connectSession\");\n            (0, core_1.logDebug)(sessionInfoStr);\n            if (sessionInfoStr) {\n                let sessionInfo = sessionInfoStr;\n                this.session = sessionInfo;\n                this.client.session = this.session;\n                this.sessionConfig = sessionInfo.sessionConfig;\n                this.client.sessionConfig = this.sessionConfig;\n                (0, core_1.logDebug)('[evm u-provider] do reconnection', this.session);\n                yield this.client.restoreconnect(sessionInfo);\n                this.createProviders();\n                setTimeout(() => {\n                    this.events.emit(\"reconnect\", { session: this.session });\n                }, 100);\n            }\n        });\n    }\n    initialize() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const data = Object.assign({ url: window.location.hostname, origin: window.location.origin }, this.providerOpts.dappMetaData);\n            (0, utils_1.setGlobal)(\"events\", this.events);\n            this.client = new client_1.SignClient(data);\n            (0, utils_1.setGlobal)(\"client\", this.client);\n            yield this.checkStorage();\n        });\n    }\n    createProviders() {\n        if (!this.client) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n        }\n        if (!this.connected()) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Session not initialized. Please call connect() before enable()\");\n        }\n        const providersToCreate = [\n            ...new Set(Object.keys(this.session.namespaces).map((namespace) => (0, namespaces_1.parseNamespaceKey)(namespace))),\n        ];\n        providersToCreate.forEach((namespace) => {\n            if (!this.session)\n                return;\n            const namespacesValue = this.session.namespaces;\n            const currentNameSpace = namespacesValue[namespace];\n            (0, core_1.logDebug)(\"init eip155 >> \", currentNameSpace);\n            switch (namespace) {\n                case \"eip155\":\n                    const opts = {\n                        namespace: currentNameSpace\n                    };\n                    this.rpcProviders[namespace] = new eip155_1.Eip155Provider(opts);\n                    break;\n                case \"solana\":\n                    const opts1 = {\n                        namespace: currentNameSpace\n                    };\n                    let solanaProvider = new solana_1.default(opts1, \"solana\");\n                    this.rpcProviders[namespace] = solanaProvider;\n                    let sonicProvider = new solana_1.default(opts1, \"sonic\");\n                    this.rpcProviders['sonic'] = sonicProvider;\n                    let svmProvider = new solana_1.default(opts1, \"svm\");\n                    this.rpcProviders['svm'] = svmProvider;\n                    // this.rpcProviders[namespace] = new SolanaProvider(opts1, () => { return this.session; });\n                    break;\n                case \"ton\":\n                    const optsTon = {\n                        namespace: currentNameSpace\n                    };\n                    let tonProvider = new ton_1.default(optsTon);\n                    this.rpcProviders[namespace] = tonProvider;\n                    break;\n                case \"sui\":\n                    const optsSui = {\n                        namespace: currentNameSpace\n                    };\n                    let suiProvider = new sui_1.SuiProvider(optsSui);\n                    suiProvider.name = \"sui\";\n                    this.rpcProviders[namespace] = suiProvider;\n                    break;\n                case \"btc\":\n                    const optsBtc = {\n                        namespace: currentNameSpace\n                    };\n                    let btcProvider = new btc_1.default(optsBtc, \"btc\");\n                    this.rpcProviders[\"btc\"] = btcProvider;\n                    let fbProvider = new btc_1.default(optsBtc, \"fractal\");\n                    this.rpcProviders[\"fractal\"] = fbProvider;\n                    break;\n                case \"aptos\":\n                    let aptosProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"aptos\");\n                    this.rpcProviders[namespace] = aptosProvider;\n                    break;\n                case \"cosmos\":\n                    let cosmosProvider = new cosmos_1.default({\n                        namespace: currentNameSpace\n                    });\n                    this.rpcProviders[namespace] = cosmosProvider;\n                    break;\n            }\n        });\n    }\n    registerEventListeners() {\n        if (typeof this.client === \"undefined\") {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client is not initialized\");\n        }\n        this.client.engine.addDisconnectListener(() => {\n            this.disconnectAndEmit();\n            this.cleanup();\n        });\n        this.on(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, (caip2ChainId) => {\n            this.onChainChanged(caip2ChainId);\n        });\n        this.on(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, (nameSpaces) => {\n            if (nameSpaces) {\n                const nameSpacekey = Object.keys(nameSpaces)[0];\n                if (this.session) {\n                    this.session.namespaces[nameSpacekey] = nameSpaces[nameSpacekey];\n                    if (this.session) {\n                        this.persist(\"connectSession\", this.session);\n                        this.events.emit(\"session_update\", this.session);\n                    }\n                    (0, core_1.logDebug)(\"PROVIDER_EVENTS.UPDATE_NAMESPACES this.session... ->>>\", JSON.stringify(this.session));\n                }\n            }\n        });\n    }\n    getProvider(namespace) {\n        (0, core_1.logDebug)('current get providers', this.rpcProviders);\n        (0, core_1.logDebug)('query namespace: ', namespace);\n        return this.rpcProviders[namespace];\n    }\n    setNamespaces(params) {\n        this.connectOpts = params;\n        const { namespaces, sessionConfig } = params;\n        const data = {\n            origin: window.location.origin,\n            url: window.location.hostname,\n            name: this.providerOpts.dappMetaData.name,\n            icon: this.providerOpts.dappMetaData.icon,\n        };\n        this.sessionConfig = {\n            dappInfo: data,\n            openUniversalUrl: sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.openUniversalUrl,\n            redirect: sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect,\n        };\n        (0, core_1.logDebug)(\"setNamespaces sessionConfig>>>\", this.sessionConfig);\n        this.client.sessionConfig = this.sessionConfig;\n        this.persist(\"sessionConfig\", sessionConfig);\n    }\n    validateChain(chain) {\n        var _a;\n        let [namespace, chainId] = (chain === null || chain === void 0 ? void 0 : chain.split(\":\")) || [\"\", \"\"];\n        if (!this.session || !this.session.namespaces || !Object.keys(this.session.namespaces).length) {\n            (0, core_1.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        if (namespace) {\n            if (!this.isChainNamespaceInSession(namespace)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace '${namespace}' is not configured. Please call connect() first with namespace config.`);\n            }\n            if (chainId && chain) {\n                (0, core_1.logDebug)('this.session.namespaces -->> ', namespace, JSON.stringify(this.session.namespaces));\n                const chainsArr = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.chains;\n                (0, core_1.logDebug)('get chainsArr & chain', JSON.stringify(chainsArr), chain);\n                if (chainsArr && !chainsArr.includes(chain)) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace not include the chain '${chain}'`);\n                }\n            }\n        }\n        if (namespace && chainId) {\n            (0, core_1.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        let defaultNamespace = (0, namespaces_1.parseNamespaceKey)(Object.keys(this.session.namespaces)[0]);\n        const defaultChain = this.rpcProviders[defaultNamespace].getDefaultChain();\n        (0, core_1.logDebug)('get default chain:', defaultChain);\n        return [defaultNamespace, defaultChain];\n    }\n    isChainNamespaceInSession(namespaceStr) {\n        var _a, _b;\n        if (Object.keys(((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces) || {})\n            .map((key) => (0, namespaces_1.parseNamespaceKey)(key))\n            .includes(namespaceStr)) {\n            return true;\n        }\n        let isChainNamespaceInSession = false;\n        Object.values(((_b = this.session) === null || _b === void 0 ? void 0 : _b.namespaces) || {})\n            .forEach(namespace => {\n            namespace.chains.forEach(chain => {\n                if (chain.split(\":\")[0] == namespaceStr) {\n                    isChainNamespaceInSession = true;\n                }\n            });\n        });\n        return isChainNamespaceInSession;\n    }\n    requestAccountsWithNamespace(namespace) {\n        return this.getProvider(namespace).requestAccounts();\n    }\n    requestDefaultChainWithNamespace(namespace) {\n        return this.getProvider(namespace).getDefaultChain();\n    }\n    requestAccounts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const [namespace] = this.validateChain();\n            return yield this.getProvider(namespace).requestAccounts();\n        });\n    }\n    onChainChanged(caip2Chain) {\n        var _a;\n        if (!((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces))\n            return;\n        const [namespace, chainId] = this.validateChain(caip2Chain);\n        if (!chainId)\n            return;\n        if (this.session.namespaces[namespace]) {\n            this.session.namespaces[namespace].defaultChain = chainId;\n            this.persist(\"connectSession\", this.session);\n        }\n        this.events.emit(\"chainChanged\", chainId);\n    }\n    onConnect() {\n        this.createProviders();\n        if (this.session) {\n            this.persist(\"connectSession\", this.session);\n        }\n        this.events.emit(\"connect\", { session: this.session });\n        this.registerEventListeners();\n    }\n    cleanup() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.session = undefined;\n            this.sessionProperties = undefined;\n            this.persist(\"optionalNamespaces\", undefined);\n            this.persist(\"sessionProperties\", undefined);\n            this.persist(\"connectSession\", undefined);\n        });\n    }\n    persist(key, data) {\n        (0, core_1.logDebug)('[evm u-provider] persisit data', key, data);\n        return this.client.engine.connectionManager.saveSessionContent(key, data);\n    }\n    getFromStore(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.client.engine.connectionManager.getSessionContent(key);\n        });\n    }\n    showRequestModal(args, chain) {\n        try {\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return this.getProvider(namespace).showRequestModal(requestParam);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n}\nexports.OKXUniversalProvider = OKXUniversalProvider;\nexports.default = OKXUniversalProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXConnectError = exports.OKX_CONNECT_ERROR_CODES = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.OKXCosmosProvider = exports.OKXBtcProvider = exports.OKXUniversalProvider = void 0;\n__exportStar(require(\"./provider/types\"), exports);\nvar OKXUniversalProvider_1 = require(\"./OKXUniversalProvider\");\nObject.defineProperty(exports, \"OKXUniversalProvider\", { enumerable: true, get: function () { return OKXUniversalProvider_1.OKXUniversalProvider; } });\nvar OKXBtcProvider_1 = require(\"./OKXBtcProvider\");\nObject.defineProperty(exports, \"OKXBtcProvider\", { enumerable: true, get: function () { return OKXBtcProvider_1.OKXBtcProvider; } });\nvar OKXCosmosProvider_1 = require(\"./OKXCosmosProvider\");\nObject.defineProperty(exports, \"OKXCosmosProvider\", { enumerable: true, get: function () { return OKXCosmosProvider_1.OKXCosmosProvider; } });\nvar core_1 = require(\"@okxconnect/core\");\nObject.defineProperty(exports, \"NameSpaceKeySui\", { enumerable: true, get: function () { return core_1.NameSpaceKeySui; } });\nObject.defineProperty(exports, \"NameSpaceKeyBtc\", { enumerable: true, get: function () { return core_1.NameSpaceKeyBtc; } });\nObject.defineProperty(exports, \"OKX_CONNECT_ERROR_CODES\", { enumerable: true, get: function () { return core_1.OKX_CONNECT_ERROR_CODES; } });\nObject.defineProperty(exports, \"OKXConnectError\", { enumerable: true, get: function () { return core_1.OKXConnectError; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignClient = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"../utils/namespaces\");\nconst utils_1 = require(\"../../provider/utils\");\nconst ConnectMethodUtils_1 = require(\"../utils/ConnectMethodUtils\");\nclass SignClient extends core_1.ISignClient {\n    constructor(metaData) {\n        super(metaData);\n        this.engine = new core_1.Engine(new core_1.ConnectionManager());\n        // ---------- Engine ----------------------------------------------- //\n        this.connect = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    var connectRequest = [];\n                    (0, core_1.logDebug)(`client connect params >>>`, JSON.stringify(params));\n                    var requestAccountItem = {\n                        name: \"requestAccounts\",\n                        requiredNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.namespaces),\n                        optionalNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.optionalNamespaces),\n                    };\n                    if (params.requestMethods) {\n                        requestAccountItem.connectRequestMethods = yield (0, ConnectMethodUtils_1.connectMethodsToConnectWalletMethods)(params.requestMethods, requestAccountItem.requiredNamespaces);\n                    }\n                    connectRequest.push(requestAccountItem);\n                    (0, core_1.logDebug)(`client connect connectRequest >>>`, JSON.stringify(connectRequest));\n                    this.engine.universalConnect(connectRequest, Object.assign({ dappInfo: this.metadata }, params.sessionConfig), (info) => {\n                        if (info && info.connectRequest) {\n                            var encodeParams = (0, core_1.encodeConnectParams)(info.connectRequest);\n                            this.events.emit(\"display_uri\", (0, core_1.getUniversalLink)((0, core_1.getAppWalletDeepLink)(encodeParams)));\n                            (0, core_1.logDebug)(`universalConect EngineConnectInfo  ${JSON.stringify(info)}`);\n                            this.events.emit(\"okx_engine_connect_params\", info);\n                        }\n                    }).then((session) => {\n                        (0, namespaces_1.fillParamsToSession)(session, params.namespaces, params.optionalNamespaces, this.sessionConfig);\n                        (0, core_1.logDebug)(`signClient: connect: session ${JSON.stringify(session)}`);\n                        resolve(session);\n                    }).catch((e) => {\n                        (0, core_1.logDebug)(`signClient: connect: catch ${JSON.stringify(e)}`);\n                        this.events.emit(\"connect_error\", e);\n                        reject(e);\n                    });\n                }\n                catch (error) {\n                    (0, core_1.logDebug)(`signClient: connect:  ${JSON.stringify(error)}`);\n                    reject(error);\n                }\n            }));\n        });\n        this.restoreconnect = (sessionConfig) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.restoreconnect(sessionConfig, (session) => {\n                    resolve(session);\n                });\n            });\n        });\n        this.reject = (params) => __awaiter(this, void 0, void 0, function* () {\n            //   try {\n            //     return await this.engine.reject(params);\n            //   } catch (error: any) {\n            //     this.logger.error(error.message);\n            //     throw error;\n            //   }\n        });\n        //\n        // public update: ISignClient[\"update\"] = async (params) => {\n        //   return\n        // //   try {\n        // //     return await this.engine.update(params);\n        // //   } catch (error: any) {\n        // //     this.logger.error(error.message);\n        // //     throw error;\n        // //   }\n        // };\n        this.request = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                (0, core_1.logDebug)(\"clint request --params>>>> >\", (_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl, JSON.stringify(params));\n                try {\n                    // this.sessionConfig\n                    if (((_b = this.sessionConfig) === null || _b === void 0 ? void 0 : _b.openUniversalUrl) && (0, core_1.isIos)()) {\n                        this.openOKXWallet();\n                    }\n                    yield this.engine.send(params, {\n                        resolve: (response) => {\n                            delete response.requestId;\n                            (0, core_1.logDebug)(\"clint request --response >\", JSON.stringify(response));\n                            if (('error' in response) && response.error) {\n                                let error = response.error;\n                                reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                            }\n                            else {\n                                resolve(response);\n                            }\n                        },\n                        onAck: () => {\n                            var _a;\n                            if (!(0, core_1.isIos)() && ((_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl)) {\n                                this.openOKXWallet();\n                            }\n                        }\n                    });\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }));\n        });\n        // public emit: ISignClient[\"emit\"] = async (params) => {\n        //     try {\n        //         // return await this.engine.emit(params);\n        //     } catch (error: any) {\n        //         throw error;\n        //     }\n        // };\n        this.disconnect = () => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"disconnect\"\n                }, {\n                    onAck: () => {\n                        resolve();\n                    }\n                }).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n        this.events = (0, utils_1.getGlobal)(\"events\");\n        this.metadata = metaData;\n    }\n    openOKXWallet() {\n        // if (this.openUniversalUrl){\n        (0, core_1.logDebug)('bridge-provider ==>> connect_5');\n        (0, core_1.openOKXDeeplinkWithFallback)(core_1.standardDeeplink);\n        // }\n    }\n}\nexports.SignClient = SignClient;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.connectSupportMethods = void 0;\nexports.connectMethodsToConnectWalletMethods = connectMethodsToConnectWalletMethods;\nconst core_1 = require(\"@okxconnect/core\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst uint8array_extras_1 = require(\"uint8array-extras\");\nfunction isArray(value) {\n    return typeof value === \"object\" && value !== null && Array.isArray(value);\n}\nfunction isRecord(value) {\n    return typeof value === \"object\" && value !== null && !Array.isArray(value);\n}\nexports.connectSupportMethods = Object.freeze([\n    \"wallet_addEthereumChain\",\n    \"personal_sign\",\n    \"solana_signMessage\",\n    \"sui_signMessage\",\n    \"sui_signPersonalMessage\",\n    \"btc_signMessage\",\n    \"aptos_signMessage\",\n    \"cosmos_signArbganitrary\",\n]);\nfunction connectMethodsToConnectWalletMethods(params, requireNameSpace) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods requestMethods:\", JSON.stringify(params));\n            const result = [];\n            //TODO  后面需要打开限制\n            // if (params && params.length>1){\n            //     throw new OKXConnectError(\n            //         OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR,\n            //         `connect requestMethods only support one data`\n            //     );\n            // }\n            if (!requireNameSpace && params && params.length > 0) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error , RequestMethods cannot be added when the NameSpace is empty`);\n            }\n            for (const methodItem of params) {\n                if (methodItem.method === \"wallet_addEthereumChain\") {\n                    var includeEip155 = requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.namespace.includes(\"eip155\"));\n                    if (!includeEip155) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', the EVM chain needs to be included in the NameSpace`);\n                    }\n                }\n                else {\n                    const includeChain = !!(requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.chains.some(chain => chain.includes(`${methodItem.chainId}`))));\n                    if (!includeChain) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', NameSpace must contain '${methodItem.chainId}'`);\n                    }\n                }\n            }\n            for (const item of params) {\n                if (!exports.connectSupportMethods.includes(item.method)) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect requestMethods not support method, method: '${item.method}'`);\n                }\n                if (item.method === \"wallet_addEthereumChain\") {\n                    if (Array.isArray(item.params)) {\n                        const paramsArr = item.params;\n                        if (paramsArr && paramsArr.length === 1) {\n                            const firstParam = paramsArr[0];\n                            if (isRecord(firstParam)) {\n                                item.params = firstParam;\n                            }\n                        }\n                        else if (paramsArr && paramsArr.length > 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params only support one data, method: '${item.method}'`);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is nil, method: '${item.method}'`);\n                        }\n                    }\n                }\n                else if (item.method === \"personal_sign\") {\n                    if (isArray(item.params)) {\n                        if (item.params && item.params.length !== 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params error,  method: '${item.method}' `);\n                        }\n                        let firstObj = item.params[0];\n                        if (firstObj && typeof firstObj === 'string') {\n                            item.params = {\n                                message: firstObj\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                }\n                else if (item.method === \"sui_signMessage\" || item.method === \"sui_signPersonalMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message) {\n                            (0, core_1.logDebug)(\"sui_signMessage item.params.message :\", item.params.message);\n                            let message = JSON.parse(JSON.stringify(item.params.message));\n                            let convertedArray = Object.values(message);\n                            let uint8Array = new Uint8Array(convertedArray);\n                            let decoder = new TextDecoder(\"utf8\");\n                            let b64encoded = btoa(decoder.decode(uint8Array));\n                            item.params.message = atob(b64encoded);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"solana_signMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            item.params[\"bs58Message\"] = bs58_1.default.encode((0, uint8array_extras_1.stringToUint8Array)(item.params.message));\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"aptos_signMessage\") {\n                    if (isRecord(item.params)) {\n                        var aptosParams = item.params;\n                        var currentURL = window.location.protocol + \"//\" + window.location.hostname;\n                        item.params = {\n                            data: aptosParams,\n                            applicationUrl: currentURL,\n                            prefix: \"APTOS\"\n                        };\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods item:\", JSON.stringify(item));\n                result.push(item);\n            }\n            return result;\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAccountsChains = getAccountsChains;\nexports.nameSpaceToConnectWalletNameSpace = nameSpaceToConnectWalletNameSpace;\nexports.fillParamsToSession = fillParamsToSession;\nexports.isCaipNamespace = isCaipNamespace;\nexports.parseNamespaceKey = parseNamespaceKey;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getAccountsChains(accounts) {\n    const chains = [];\n    accounts.forEach((account) => {\n        const [chain, chainId] = account.split(\":\");\n        chains.push(`${chain}:${chainId}`);\n    });\n    return chains;\n}\nfunction nameSpaceToConnectWalletNameSpace(namespaces) {\n    var result = [];\n    if (!namespaces) {\n        return result;\n    }\n    Object.keys(namespaces).forEach((key) => {\n        if (key === core_1.NameSpaceKeyEip155 || key === core_1.NameSpaceKeySOL || key === core_1.NameSpaceKeySui || key === core_1.NameSpaceKeyAptos\n            || key == core_1.NameSpaceKeyBtc || key === core_1.NameSpaceKeyTON || key === core_1.NameSpaceKeyCosmos) {\n            if (namespaces[key].chains) {\n                result.push({\n                    namespace: key,\n                    chains: namespaces[key].chains,\n                    params: namespaces[key].params\n                });\n            }\n        }\n    });\n    return result;\n}\nfunction fillParamsToSession(session, namespaces, optionalNamespaces, sessionConfig) {\n    // Helper function to merge rpcMaps\n    const mergeRpcMap = (targetRpcMap, sourceRpcMap) => {\n        Object.assign(targetRpcMap, sourceRpcMap);\n    };\n    // Merge function for namespaces\n    const mergeNamespaces = (target, source) => {\n        for (const key in source) {\n            if (source.hasOwnProperty(key) && source[key].rpcMap) {\n                if (source[key].rpcMap) {\n                    if (!target[key].rpcMap) {\n                        target[key].rpcMap = {};\n                    }\n                    // 合并 rpcMap\n                    mergeRpcMap(target[key].rpcMap, source[key].rpcMap);\n                }\n                if (source[key].defaultChain && target[key].defaultChain === undefined) {\n                    //defaultChain need in session nameSpace\n                    if (target[key].chains.some(chain => chain.split(\":\")[1] === source[key].defaultChain)) {\n                        target[key].defaultChain = source[key].defaultChain;\n                    }\n                }\n            }\n        }\n    };\n    // 合并 namespaces\n    if (namespaces) {\n        mergeNamespaces(session.namespaces, namespaces);\n    }\n    // 合并 optionalNamespaces\n    if (optionalNamespaces) {\n        mergeNamespaces(session.namespaces, optionalNamespaces);\n    }\n    session.sessionConfig = sessionConfig;\n}\n/**\n * util designed for Wallets that builds namespaces structure by provided supported chains, methods, events & accounts.\n * It takes required & optional namespaces provided in the session proposal\n * along with the supported chains/methods/events/accounts by the wallet and returns a structured namespaces object\n * @param {BuildApprovedNamespacesParams} params\n * @returns {SessionTypes.Namespaces}\n */\n// export function buildApprovedNamespaces(\n//   params: BuildApprovedNamespacesParams,\n// ): SessionTypes.Namespaces {\n//   const {\n//     proposal: { requiredNamespaces, optionalNamespaces = {} },\n//     supportedNamespaces,\n//   } = params;\n//   const normalizedRequired = normalizeNamespaces(requiredNamespaces);\n//   const normalizedOptional = normalizeNamespaces(optionalNamespaces);\n//\n//   // build approved namespaces\n//   const namespaces = {};\n//   Object.keys(supportedNamespaces).forEach((namespace) => {\n//     const supportedChains = supportedNamespaces[namespace].chains;\n//     const supportedMethods = supportedNamespaces[namespace].methods;\n//     const supportedEvents = supportedNamespaces[namespace].events;\n//     const supportedAccounts = supportedNamespaces[namespace].accounts;\n//\n//     supportedChains.forEach((chain) => {\n//       if (!supportedAccounts.some((account) => account.includes(chain))) {\n//         throw new Error(`No accounts provided for chain ${chain} in namespace ${namespace}`);\n//       }\n//     });\n//\n//     namespaces[namespace] = {\n//       chains: supportedChains,\n//       methods: supportedMethods,\n//       events: supportedEvents,\n//       accounts: supportedAccounts,\n//     };\n//   });\n//\n//   // verify all required namespaces are supported\n//   const err = isConformingNamespaces(requiredNamespaces, namespaces, \"approve()\");\n//   if (err) throw new Error(err.message);\n//\n//   const approvedNamespaces = {};\n//\n//   // if both required & optional namespaces are empty, return all supported namespaces by the wallet\n//   if (!Object.keys(requiredNamespaces).length && !Object.keys(optionalNamespaces).length)\n//     return namespaces;\n//\n//   // assign accounts for the required namespaces\n//   Object.keys(normalizedRequired).forEach((requiredNamespace) => {\n//     const chains = supportedNamespaces[requiredNamespace].chains.filter((chain) =>\n//       normalizedRequired[requiredNamespace]?.chains?.includes(chain),\n//     );\n//     const methods = supportedNamespaces[requiredNamespace].methods.filter((method) =>\n//       normalizedRequired[requiredNamespace]?.methods?.includes(method),\n//     );\n//     const events = supportedNamespaces[requiredNamespace].events.filter((event) =>\n//       normalizedRequired[requiredNamespace]?.events?.includes(event),\n//     );\n//\n//     const accounts = chains\n//       .map((chain: string) =>\n//         supportedNamespaces[requiredNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[requiredNamespace] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   });\n//\n//   // add optional namespaces\n//   Object.keys(normalizedOptional).forEach((optionalNamespace) => {\n//     if (!supportedNamespaces[optionalNamespace]) return;\n//\n//     const chainsToAdd = normalizedOptional[optionalNamespace]?.chains?.filter((chain) =>\n//       supportedNamespaces[optionalNamespace].chains.includes(chain),\n//     );\n//     const methodsToAdd = supportedNamespaces[optionalNamespace].methods.filter((method) =>\n//       normalizedOptional[optionalNamespace]?.methods?.includes(method),\n//     );\n//     const eventsToAdd = supportedNamespaces[optionalNamespace].events.filter((event) =>\n//       normalizedOptional[optionalNamespace]?.events?.includes(event),\n//     );\n//\n//     const accountsToAdd = chainsToAdd\n//       ?.map((chain: string) =>\n//         supportedNamespaces[optionalNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[optionalNamespace] = {\n//       chains: mergeArrays(approvedNamespaces[optionalNamespace]?.chains, chainsToAdd),\n//       methods: mergeArrays(approvedNamespaces[optionalNamespace]?.methods, methodsToAdd),\n//       events: mergeArrays(approvedNamespaces[optionalNamespace]?.events, eventsToAdd),\n//       accounts: mergeArrays(approvedNamespaces[optionalNamespace]?.accounts, accountsToAdd),\n//     };\n//   });\n//\n//   return approvedNamespaces;\n// }\nfunction isCaipNamespace(namespace) {\n    return namespace.includes(\":\");\n}\nfunction parseNamespaceKey(namespace) {\n    return isCaipNamespace(namespace) ? namespace.split(\":\")[0] : namespace;\n}\n/**\n * Converts\n * ```\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * ```\n * into\n * ```\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *```\n */\n// export function normalizeNamespaces(\n//   namespaces: ProposalTypes.RequiredNamespaces,\n// ): ProposalTypes.RequiredNamespaces {\n//   const normalizedNamespaces = {} as ProposalTypes.RequiredNamespaces;\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       methods: mergeArrays(methods, normalizedNamespaces[normalizedKey]?.methods),\n//       events: mergeArrays(events, normalizedNamespaces[normalizedKey]?.events),\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n// export function getNamespacesFromAccounts(accounts: string[]) {\n//   const namespaces = {};\n//   accounts?.forEach((account) => {\n//     const [namespace, chainId] = account.split(\":\");\n//     if (!namespaces[namespace]) {\n//       namespaces[namespace] = {\n//         accounts: [],\n//         chains: [],\n//         events: [],\n//       };\n//     }\n//     namespaces[namespace].accounts.push(account);\n//     namespaces[namespace].chains.push(`${namespace}:${chainId}`);\n//   });\n//\n//   return namespaces;\n// }\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PROVIDER_EVENTS = void 0;\nexports.PROVIDER_EVENTS = {\n    DEFAULT_CHAIN_CHANGED: \"default_chain_changed\",\n    UPDATE_NAMESPACES: \"update_name_spaces\",\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./values\"), exports);\n__exportStar(require(\"./events\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GENERIC_SUBPROVIDER_NAME = exports.RPC_URL = exports.STORAGE = exports.CONTEXT = exports.WC_VERSION = exports.PROTOCOL = exports.RELAY_URL = exports.LOGGER = void 0;\nexports.LOGGER = \"error\";\nexports.RELAY_URL = \"wss://relay.walletconnect.com\";\nexports.PROTOCOL = \"wc\";\nexports.WC_VERSION = 2;\nexports.CONTEXT = \"universal_provider\";\nexports.STORAGE = `${exports.PROTOCOL}@${exports.WC_VERSION}:${exports.CONTEXT}:`;\nexports.RPC_URL = \"https://rpc.walletconnect.com/v1/\";\nexports.GENERIC_SUBPROVIDER_NAME = \"generic\";\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass AptosProvider {\n    constructor(opts, name) {\n        this.name = \"aptos\";\n        this.namespace = opts.namespace;\n        this.events = (0, utils_1.getGlobal)(\"events\");\n        this.client = (0, utils_1.getGlobal)(\"client\");\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"solana request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"solana provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = AptosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass BtcProvider {\n    constructor(opts, name) {\n        this.name = core_1.NameSpaceKeyBtc;\n        this.namespace = opts.namespace;\n        this.events = (0, utils_1.getGlobal)(\"events\");\n        this.client = (0, utils_1.getGlobal)(\"client\");\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"btc request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"btc provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = BtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass CosmosProvider {\n    constructor(opts) {\n        this.name = core_1.NameSpaceKeyCosmos;\n        this.namespace = opts.namespace;\n        this.events = (0, utils_1.getGlobal)(\"events\");\n        this.client = (0, utils_1.getGlobal)(\"client\");\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"btc request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"btc provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = CosmosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Eip155Provider = void 0;\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nclass Eip155Provider {\n    constructor(opts) {\n        this.name = \"eip155\";\n        this.namespace = opts.namespace;\n        this.events = (0, utils_1.getGlobal)(\"events\");\n        this.client = (0, utils_1.getGlobal)(\"client\");\n        this.chainId = parseInt(this.getDefaultChain());\n        // rpc\n        this.httpProviders = this.createHttpProviders();\n        (0, core_1.logDebug)(\"eip155 constructor --opts.namespace-->\", opts.namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    isArray(value) {\n        return typeof value === \"object\" && value !== null && Array.isArray(value);\n    }\n    updateRequestParams(args) {\n        let isDic = args.params && typeof args.params === 'object' && !Array.isArray(args.params);\n        if (args.method === 'wallet_switchEthereumChain') {\n            const switchChainId = args.chainId.split(\":\")[1];\n            // const hexChainId = parseInt(switchChainId, 16);\n            const decimalNumber = parseInt(switchChainId, 10);\n            if (isNaN(decimalNumber)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid decimal number,  chainId: '${switchChainId}' `);\n            }\n            if (!args.params) {\n                args.params = { chainId: '0x' + decimalNumber.toString(16) };\n            }\n            else if (isDic) { //为 Record<string, unknown>\n                let params = args.params;\n                if (!('chainId' in params)) {\n                    params['chainId'] = '0x' + decimalNumber.toString(16);\n                    args.params = params;\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params error ,  method: '${args.method}' `);\n            }\n        }\n        else if (args.method === 'personal_sign'\n            || args.method === 'eth_signTypedData_v4'\n            || args.method === 'eth_sendTransaction'\n            || args.method === 'wallet_watchAsset') {\n            if (!args.params) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params is nil, method: '${args.method}'`);\n            }\n            if (this.isRecord(args.params)) {\n                let params = args.params;\n                (0, core_1.logDebug)(\"eip155 updateRequestParams params>\", JSON.stringify(params));\n                if ('chainId' in params) {\n                    const selectedChainId = args.chainId.split(\":\")[1];\n                    const chainNum = parseInt(selectedChainId, 10);\n                    let paramsChainString = String(params.chainId);\n                    let paramsChainId;\n                    if (paramsChainString.startsWith(this.name) && args.chainId === paramsChainString) { //为\n                        paramsChainId = chainNum;\n                    }\n                    else if (paramsChainString.startsWith(\"0x\")) {\n                        paramsChainId = parseInt(paramsChainString, 16);\n                    }\n                    else if (!isNaN(Number(paramsChainString))) { //数字\n                        paramsChainId = parseInt(paramsChainString, 10);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid params.chainId format, method: '${args.method}'`);\n                    }\n                    if (chainNum !== paramsChainId) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params.chainId not equal chain,  method: '${args.method}' `);\n                    }\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid request params type, method: '${args.method}'`);\n            }\n        }\n    }\n    //adapt array\n    adaptArray(args) {\n        if (args.method === 'wallet_switchEthereumChain'\n            || args.method === 'wallet_addEthereumChain'\n            || args.method === 'wallet_watchAsset'\n            || args.method === 'eth_sendTransaction') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr) {\n                    if (paramsArr.length === 1) {\n                        let firstParam = args.params[0];\n                        if (this.isRecord(firstParam)) {\n                            args.params = firstParam;\n                        }\n                    }\n                    else if (paramsArr.length > 1) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                    }\n                }\n            }\n        }\n        else if (args.method === 'eth_signTypedData_v4') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr && paramsArr.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                }\n                else if (paramsArr && paramsArr.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let messageObj = {};\n                if (paramsArr && paramsArr.length === 2) {\n                    let addressObj = args.params[0]; //address\n                    if (addressObj && typeof addressObj === 'string') { //check address\n                        let isEqual = false;\n                        this.namespace.accounts.forEach((chain) => {\n                            let chainAddress = chain.split(':')[2];\n                            if (chainAddress === addressObj) {\n                                isEqual = true;\n                            }\n                        });\n                        (0, core_1.logDebug)(\"eip155 adaptArray eth_signTypedData_v4 >>>isEqual: \", isEqual);\n                        if (!isEqual) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error, not equal,  method: '${args.method}' `);\n                        }\n                        if (this.isRecord(args.params[1])) {\n                            messageObj = args.params[1];\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error , not string,  method: '${args.method}' `);\n                    }\n                }\n                else if (paramsArr && paramsArr.length === 1) {\n                    if (this.isRecord(args.params[0])) {\n                        messageObj = args.params[0];\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                    }\n                }\n                try {\n                    let messages = JSON.stringify(messageObj);\n                    args.params = {\n                        typedDataJson: messages\n                    };\n                }\n                catch (err) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params call JSON.stringify() failed,  method: '${args.method}' `);\n                }\n            }\n        }\n        else if (args.method === 'personal_sign') {\n            if (this.isArray(args.params)) {\n                if (args.params && args.params.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params error,  method: '${args.method}' `);\n                }\n                else if (args.params && args.params.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let firstObj = args.params[0];\n                let secondObj = args.params[1];\n                if (secondObj && typeof secondObj === 'string') { //check address\n                    let isEqual = false;\n                    this.namespace.accounts.forEach((chain) => {\n                        let chainAddress = chain.split(':')[2];\n                        if (chainAddress === secondObj) {\n                            isEqual = true;\n                        }\n                    });\n                    (0, core_1.logDebug)(\"eip155 adaptArray personal_sign >>>isEqual: \", isEqual);\n                    if (!isEqual) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error,  method: '${args.method}' `);\n                    }\n                }\n                if (firstObj && typeof firstObj === 'string') {\n                    args.params = {\n                        message: firstObj\n                    };\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is error,  method: '${args.method}' `);\n                }\n            }\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"eth_requestAccounts\":\n            case \"eth_accounts\":\n            case \"eth_chainId\":\n                return false;\n            case \"eth_sendTransaction\":\n            case \"eth_signTransaction\":\n            case \"eth_sign\":\n            case \"personal_sign\":\n            case \"eth_signTypedData\":\n            case \"wallet_addEthereumChain\":\n            case \"wallet_watchAsset\":\n            case \"eth_signTypedData_v4\":\n                return true;\n            case \"wallet_switchEthereumChain\": {\n                this.adaptArray(args);\n                this.updateRequestParams(args);\n                const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n                return !this.isChainApproved(parsedChainId);\n            }\n            default:\n                return false;\n        }\n        return false;\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.adaptArray(args);\n            (0, core_1.logDebug)(\"eip155 request --args--string>\", JSON.stringify(args));\n            this.updateRequestParams(args);\n            (0, core_1.logDebug)(\"eip155 request --params--string>\", JSON.stringify(args));\n            switch (args.method) {\n                case \"eth_requestAccounts\":\n                    return this.getAccounts();\n                case \"eth_accounts\":\n                    return this.getAccounts();\n                case \"eth_chainId\":\n                    return parseInt(this.getDefaultChain());\n                case \"wallet_switchEthereumChain\": {\n                    return (yield this.handleSwitchChain(args));\n                }\n                case \"wallet_addEthereumChain\":\n                    return this.addEthereumChain(args);\n                default:\n                    break;\n            }\n            if (this.namespace.methods.includes(args.method)) {\n                // personal_sign\n                // eth_signTypedData_v4\n                // eth_sendTransaction\n                // wallet_watchAsset\n                try {\n                    const response = yield this.client.request(args);\n                    (0, core_1.logDebug)(\"eip155 request --response----string>\", JSON.stringify(response));\n                    if (this.isRecord(response)) {\n                        if ('result' in response) {\n                            let result = response.result;\n                            if (result && typeof result === 'string' && (result === \"true\" || result === \"false\")) {\n                                (0, core_1.logDebug)(\"eip155 request --wallet_watchAsset>>>>\", result === \"true\");\n                                return (result === \"true\");\n                            }\n                            return response.result;\n                        }\n                    }\n                    return response;\n                }\n                catch (e) {\n                    (0, core_1.logDebug)(`eip155 request --response --error--string> e instanceof OKXConnectError ${e instanceof core_1.OKXConnectError}`, JSON.stringify(e));\n                    throw e;\n                }\n            }\n            else {\n                (0, core_1.logDebug)('[RPC] request begin');\n                return yield this.getHttpProvider().request(args);\n            }\n        });\n    }\n    addEthereumChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let resultData = (yield this.client.request(args));\n            try {\n                if ('result' in resultData) {\n                    let successData = resultData;\n                    let account = resultData.result;\n                    if (account) {\n                        const nameSpace = account.split(\":\")[0];\n                        const chainId = account.split(\":\")[1];\n                        const chain = nameSpace + ':' + chainId;\n                        let newNameSpace = this.namespace;\n                        this.namespace.accounts.push(account);\n                        this.namespace.chains.push(chain);\n                        if (this.isRecord(args.params)) {\n                            if (\"rpcUrls\" in args.params) {\n                                let rpcUrls = args.params.rpcUrls;\n                                let rpcUrl = rpcUrls ? rpcUrls[0] : undefined;\n                                if (rpcUrl) {\n                                    if (this.namespace.rpcMap) {\n                                        this.namespace.rpcMap[chainId] = rpcUrl;\n                                    }\n                                    else {\n                                        this.namespace.rpcMap = {\n                                            [chainId]: rpcUrl\n                                        };\n                                    }\n                                    this.setHttpProvider(chainId, rpcUrl);\n                                }\n                            }\n                        }\n                        this.events.emit(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, {\n                            eip155: this.namespace\n                        });\n                    }\n                }\n                else {\n                    new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request error`);\n                }\n            }\n            catch (error) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request  error`);\n            }\n            return null;\n        });\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        this.chainId = parseInt(chainId);\n        // set rpc\n        if (!this.httpProviders[chainId]) {\n            const rpc = rpcUrl || (0, utils_1.getRpcUrl)(`${this.name}:${chainId}`, this.namespace);\n            if (!rpc) {\n                // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n                (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            }\n            else {\n                this.setHttpProvider(chainId, rpc);\n            }\n        }\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId.toString();\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // ---------- Private ----------------------------------------------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"eip155 getAccounts \", accounts, this.chainId);\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    getHexChainIdFromRequest(args) {\n        let params = args.params;\n        let hexChainId = \"0x0\";\n        if (params && \"chainId\" in params) {\n            hexChainId = params.chainId;\n        }\n        hexChainId = hexChainId.startsWith(\"0x\") ? hexChainId : `0x${hexChainId}`;\n        (0, core_1.logDebug)(\"handleSwitchChain -->args \", args);\n        (0, core_1.logDebug)(\"handleSwitchChain -->hexChainId \", hexChainId);\n        const parsedChainId = parseInt(hexChainId, 16);\n        (0, core_1.logDebug)(\"handleSwitchChain -->parsedChainId \", parsedChainId);\n        return { parsedChainId, hexChainId };\n    }\n    handleSwitchChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n            if (this.isChainApproved(parsedChainId)) {\n                this.setDefaultChain(`${parsedChainId}`);\n            }\n            else {\n                const resultData = (yield this.client.request({\n                    method: \"wallet_switchEthereumChain\",\n                    chainId: args.chainId,\n                    params: {\n                        chainId: hexChainId,\n                    },\n                }));\n                try {\n                    if ('result' in resultData) {\n                        let successData = resultData;\n                        let account = resultData.result;\n                        if (account) {\n                            const nameSpace = account.split(\":\")[0];\n                            const chainId = account.split(\":\")[1];\n                            const chain = nameSpace + ':' + chainId;\n                            let newNameSpace = this.namespace;\n                            this.namespace.accounts.push(account);\n                            this.namespace.chains.push(chain);\n                            (0, core_1.logDebug)(\"handleSwitchChain -->wallet_switchEthereumChain \", resultData);\n                            this.setDefaultChain(`${parsedChainId}`);\n                            this.events.emit(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, {\n                                eip155: this.namespace\n                            });\n                        }\n                    }\n                    else {\n                        new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request error`);\n                    }\n                }\n                catch (error) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request  error`);\n                }\n            }\n            return null;\n        });\n    }\n    isChainApproved(chainId) {\n        return this.namespace.chains.includes(`${this.name}:${chainId}`);\n    }\n    // rpc\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            //   throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            (0, core_1.logDebug)('get parsed chain and rpc:', parsedChainId, parsedRpc);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        (0, core_1.logDebug)('get http providermap:', http);\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n}\nexports.Eip155Provider = Eip155Provider;\nexports.default = Eip155Provider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcConnection = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\n// Source: https://nodejs.org/api/events.html#emittersetmaxlistenersn\nconst EVENT_EMITTER_MAX_LISTENERS_DEFAULT = 10;\nclass JsonRpcConnection {\n    constructor(url, disableProviderPing = false) {\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n        this.events = new eventemitter3_1.EventEmitter();\n        this.isAvailable = false;\n        this.registering = false;\n        if (!(0, core_2.isHttpUrl)(url)) {\n            throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n        }\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n    }\n    get connected() {\n        return this.isAvailable;\n    }\n    get connecting() {\n        return this.registering;\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            yield this.register(url);\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                throw new Error(\"Connection already closed\");\n            }\n            this.onClose();\n        });\n    }\n    send(payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                yield this.register();\n            }\n            try {\n                const body = (0, core_1.safeJsonStringify)(payload);\n                const res = yield (0, cross_fetch_1.default)(this.url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                const data = yield res.json();\n                this.onPayload({ data });\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    register() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (!(0, core_2.isHttpUrl)(url)) {\n                throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n            }\n            if (this.registering) {\n                return new Promise((resolve, reject) => {\n                    this.events.once(\"register_error\", (error) => {\n                        reject(error);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.isAvailable === \"undefined\") {\n                            return reject(new Error(\"HTTP connection is missing or invalid\"));\n                        }\n                        resolve();\n                    });\n                });\n            }\n            this.url = url;\n            this.registering = true;\n            try {\n                if (!this.disableProviderPing) {\n                    const body = (0, core_1.safeJsonStringify)({ id: 1, jsonrpc: \"2.0\", method: \"test\", params: [] });\n                    yield (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                }\n                this.onOpen();\n            }\n            catch (e) {\n                const error = this.parseError(e);\n                this.events.emit(\"register_error\", error);\n                this.onClose();\n                throw error;\n            }\n        });\n    }\n    onOpen() {\n        this.isAvailable = true;\n        this.registering = false;\n        this.events.emit(\"open\");\n    }\n    onClose() {\n        this.isAvailable = false;\n        this.registering = false;\n        this.events.emit(\"close\");\n    }\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        const payload = typeof e.data === \"string\" ? (0, core_1.safeJsonParse)(e.data) : e.data;\n        this.events.emit(\"payload\", payload);\n    }\n    onError(id, e) {\n        const error = this.parseError(e);\n        const message = error.message || error.toString();\n        const payload = (0, core_2.formatJsonRpcError)(id, message);\n        this.events.emit(\"payload\", payload);\n    }\n    parseError(e, url = this.url) {\n        return (0, core_2.parseConnectionError)(e, url, \"HTTP\");\n    }\n}\nexports.JsonRpcConnection = JsonRpcConnection;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcProvider = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst types_1 = require(\"../../types\");\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nclass JsonRpcProvider extends types_1.IJSONRpcProvider {\n    constructor(connection) {\n        super(connection);\n        this.events = new eventemitter3_1.EventEmitter();\n        this.connected = false;\n        this.connecting = false;\n        this.hasRegisteredEventListeners = false;\n        this.connection = this.setConnection(connection);\n        if (this.connection.connected) {\n            this.registerEventListeners();\n        }\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            yield this.open(connection);\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.close();\n        });\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    request(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.requestStrict((0, core_1.formatJsonRpcRequest)(request.method, request.params || [], (0, core_1.getBigIntRpcId)().toString()), // casting to any is required in order to use BigInt as rpcId\n            context);\n        });\n    }\n    // ---------- Protected ----------------------------------------------- //\n    requestStrict(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.connection.connected) {\n                    try {\n                        yield this.open();\n                    }\n                    catch (e) {\n                        reject(e);\n                    }\n                }\n                this.events.on(`${request.id}`, (response) => {\n                    if ((0, core_1.isJsonRpcError)(response)) {\n                        reject(response.error);\n                    }\n                    else {\n                        resolve(response.result);\n                    }\n                });\n                try {\n                    (0, core_2.logDebug)('[RPC] >>> send request', request, context);\n                    yield this.connection.send(request, context);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }));\n        });\n    }\n    setConnection(connection = this.connection) {\n        return connection;\n    }\n    onPayload(payload) {\n        this.events.emit(\"payload\", payload);\n        if ((0, core_1.isJsonRpcResponse)(payload)) {\n            this.events.emit(`${payload.id}`, payload);\n        }\n        else {\n            this.events.emit(\"message\", {\n                type: payload.method,\n                data: payload.params,\n            });\n        }\n    }\n    onClose(event) {\n        // Code 3000 indicates an abnormal closure signalled by the relay -> emit an error in this case.\n        if (event && event.code === 3000) {\n            this.events.emit(\"error\", new Error(`WebSocket connection closed abnormally with code: ${event.code} ${event.reason ? `(${event.reason})` : \"\"}`));\n        }\n        this.events.emit(\"disconnect\");\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            if (this.connection === connection && this.connection.connected)\n                return;\n            if (this.connection.connected)\n                this.close();\n            if (typeof connection === \"string\") {\n                yield this.connection.open(connection);\n                connection = this.connection;\n            }\n            this.connection = this.setConnection(connection);\n            yield this.connection.open();\n            this.registerEventListeners();\n            this.events.emit(\"connect\");\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.connection.close();\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    registerEventListeners() {\n        if (this.hasRegisteredEventListeners)\n            return;\n        this.connection.on(\"payload\", (payload) => this.onPayload(payload));\n        this.connection.on(\"close\", (event) => this.onClose(event));\n        this.connection.on(\"error\", (error) => this.events.emit(\"error\", error));\n        this.connection.on(\"register_error\", (_error) => this.onClose());\n        this.hasRegisteredEventListeners = true;\n    }\n}\nexports.JsonRpcProvider = JsonRpcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolanaProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SolanaProvider {\n    constructor(opts, name) {\n        this.name = \"solana\";\n        this.namespace = opts.namespace;\n        this.events = (0, utils_1.getGlobal)(\"events\");\n        this.client = (0, utils_1.getGlobal)(\"client\");\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"solana request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"solana provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    //   {\n    //     \"chains\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\" ],\n    //     \"accounts\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp:F7wnJc5wiBGy1k87jv6gyNwE3jMEWd18oTQiYsF1xVG7\"],\n    //     \"methods\": [\n    //         \"solana_signTransaction\",\n    //         \"solana_signMessage\"\n    //     ],\n    //     \"defaultChain\": \"5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\"\n    // }\n    // TODO:确认上面的defaultChain是否正确（没有solana前缀）\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"solana\"))) {\n                chainId = `solana:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.SolanaProvider = SolanaProvider;\nexports.default = SolanaProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuiProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SuiProvider {\n    constructor(opts) {\n        this.name = core_1.NameSpaceKeySui;\n        this.namespace = opts.namespace;\n        this.events = (0, utils_1.getGlobal)(\"events\");\n        this.client = (0, utils_1.getGlobal)(\"client\");\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"sui request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"sui provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"sui\"))) {\n                chainId = `sui:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"sui_signMessage\":\n            case \"sui_signPersonalMessage\":\n            case \"sui_signTransactionBlock\":\n            case \"sui_signAndExecuteTransactionBlock\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.SuiProvider = SuiProvider;\nexports.default = SuiProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TONProvider {\n    constructor(opts) {\n        this.name = core_1.NameSpaceKeyTON;\n        this.namespace = opts.namespace;\n        this.events = (0, utils_1.getGlobal)(\"events\");\n        this.client = (0, utils_1.getGlobal)(\"client\");\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            (0, core_1.logDebug)(\"TONProvider request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"TONProvider request provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                if (!args.params) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params is nil\");\n                }\n                if (this.isRecord(args.params)) {\n                    const _e = args.params, { validUntil } = _e, newParams = __rest(_e, [\"validUntil\"]);\n                    let fromAddress = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n                    if ('from' in newParams) {\n                        fromAddress = newParams.from || ((_d = (_c = this.namespace.payload) === null || _c === void 0 ? void 0 : _c.ton_addr) === null || _d === void 0 ? void 0 : _d.address);\n                    }\n                    args.params['from'] = fromAddress;\n                    args.params['network'] = this.getDefaultChain();\n                    args.params['valid_until'] = validUntil;\n                    let response = yield this.client.request(args);\n                    if (this.isRecord(response) && 'result' in response) {\n                        const result = {\n                            boc: response.result.toString()\n                        };\n                        (0, core_1.logDebug)(\"TONProvider request provider response: \", JSON.stringify(response));\n                        (0, core_1.logDebug)(\"TONProvider request provider result: \", JSON.stringify(result));\n                        return result;\n                    }\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton_send request response is nil\");\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params type add nil\");\n                }\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        var _a, _b;\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"ton getAccounts accounts :\", accounts);\n        (0, core_1.logDebug)(\"ton getAccounts .namespace :\", JSON.stringify(this.namespace));\n        if (!accounts) {\n            return [];\n        }\n        let address = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n        (0, core_1.logDebug)(\"ton getAccounts address :\", address);\n        if (address) {\n            return [\n                address\n            ];\n        }\n        return [];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"ton_sendTransaction\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.default = TONProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./providers\"), exports);\n__exportStar(require(\"./misc\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IJSONRpcProvider = exports.IJSONRpcConnection = void 0;\nclass IJSONRpcConnection {\n}\nexports.IJSONRpcConnection = IJSONRpcConnection;\nclass IJSONRpcProvider {\n    constructor(opt) {\n    }\n}\nexports.IJSONRpcProvider = IJSONRpcProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setGlobal = exports.getGlobal = void 0;\nconst globals = {};\nconst getGlobal = (key) => {\n    return globals[key];\n};\nexports.getGlobal = getGlobal;\nconst setGlobal = (key, value) => {\n    globals[key] = value;\n};\nexports.setGlobal = setGlobal;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./misc\"), exports);\n__exportStar(require(\"./globals\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRpcUrl = getRpcUrl;\nexports.getChainId = getChainId;\nexports.convertChainIdToNumber = convertChainIdToNumber;\nexports.parseChainId = parseChainId;\nexports.mergeArrays = mergeArrays;\nfunction getRpcUrl(chainId, rpc, projectId) {\n    var _a;\n    const chain = parseChainId(chainId);\n    // no default\n    return (((_a = rpc.rpcMap) === null || _a === void 0 ? void 0 : _a[chain.reference]) ||\n        ``);\n}\nfunction getChainId(chain) {\n    return chain.includes(\":\") ? chain.split(\":\")[1] : chain;\n}\n// export function validateChainApproval(chain: string, chains: string[]): void {\n//   if (!chains.includes(chain)) {\n//     throw new Error(\n//       `Chain '${chain}' not approved. Please use one of the following: ${chains.toString()}`,\n//     );\n//   }\n// }\n// export function getChainsFromApprovedSession(accounts: string[]): string[] {\n//   return accounts.map((address) => `${address.split(\":\")[0]}:${address.split(\":\")[1]}`);\n// }\n// export function getAccountsFromSession(namespace: string, session: SessionTypes.Struct): string[] {\n//   // match namespaces e.g. eip155 with eip155:1\n//   const matchedNamespaceKeys = Object.keys(session.namespaces).filter((key) =>\n//     key.includes(namespace),\n//   );\n//   if (!matchedNamespaceKeys.length) return [];\n//   const accounts: string[] = [];\n//   matchedNamespaceKeys.forEach((key) => {\n//     const accountsForNamespace = session.namespaces[key].accounts;\n//     accounts.push(...accountsForNamespace);\n//   });\n//   return accounts;\n// }\n// export function mergeRequiredOptionalNamespaces(\n//   required: NamespaceConfig = {},\n//   optional: NamespaceConfig = {},\n// ){\n//   const requiredNamespaces = normalizeNamespaces(required);\n//   const optionalNamespaces = normalizeNamespaces(optional);\n//    return merge.merge(requiredNamespaces,optionalNamespaces)\n// }\n/**\n * Converts\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * into\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *\n */\n// export function normalizeNamespaces(namespaces: NamespaceConfig): NamespaceConfig {\n//   const normalizedNamespaces: NamespaceConfig = {};\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const rpcMap = values.rpcMap || {};\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       ...values,\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       rpcMap: { ...rpcMap, ...normalizedNamespaces[normalizedKey]?.rpcMap },\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n//\n// export function parseCaip10Account(caip10Account: string): string {\n//   return caip10Account.includes(\":\") ? caip10Account.split(\":\")[2] : caip10Account;\n// }\n/**\n * Populates the chains array for each namespace with the chains extracted from the accounts if are otherwise missing\n */\n// export function populateNamespacesChains(\n//   namespaces: SessionTypes.Namespaces,\n// ): Record<string, SessionTypes.Namespace> {\n//   const parsedNamespaces: Record<string, SessionTypes.Namespace> = {};\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const accounts = values.accounts || [];\n//     // If the key includes a CAIP separator `:` we know it's a namespace + chainId (e.g. `eip155:1`)\n//     const chains = isCaipNamespace(key)\n//       ? [key]\n//       : values.chains\n//       ? values.chains\n//       : getChainsFromApprovedSession(values.accounts);\n//     parsedNamespaces[key] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   }\n//   return parsedNamespaces;\n// }\nfunction convertChainIdToNumber(chainId) {\n    if (typeof chainId === \"number\")\n        return chainId;\n    if (chainId.includes(\"0x\")) {\n        return parseInt(chainId, 16);\n    }\n    chainId = chainId.includes(\":\") ? chainId.split(\":\")[1] : chainId;\n    return isNaN(Number(chainId)) ? chainId : Number(chainId);\n}\nconst CAIP_DELIMITER = \":\";\nfunction parseChainId(chain) {\n    const [namespace, reference] = chain.split(CAIP_DELIMITER);\n    return { namespace, reference };\n}\nfunction mergeArrays(a = [], b = []) {\n    return [...new Set([...a, ...b])];\n}\n","<template>\n  <div id=\"app\">\n    <el-container>\n      <el-header>OKX Connect</el-header>\n      <el-main>\n        <!-- 钱包信息 -->\n        <el-card class=\"wallet-info\">\n          <template #header>\n            <div>Wallet Info</div>\n          </template>\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Wallet Address:</strong> {{ getWalletAddress }}\n            </el-col>\n          </el-row>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Status :</strong> {{ currentStatus }}\n            </el-col>\n          </el-row>\n\n          <!--          <el-row class=\"info-row\">-->\n          <!--            <el-col :span=\"24\">-->\n          <!--              <strong>Universal Link:</strong> {{ updateUniLink }}-->\n          <!--            </el-col>-->\n          <!--          </el-row>-->\n        </el-card>\n\n        <!-- 连接钱包 -->\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div>Actions</div>\n          </template>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <el-checkbox v-model=\"withUI\" @change=\"handleWithUI\">\n                show UI</el-checkbox>\n            </el-col>\n          </el-row>\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Modals</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"modals\" placeholder=\"Modals\" @change=\"handleModalsSelect\" multiple>\n                <el-option label=\"Before\" value=\"before\" />\n                <el-option label=\"Success\" value=\"success\" />\n                <el-option label=\"Error\" value=\"error\" />\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center; justify-content: space-between;\">\n            <el-col :span=\"4\" style=\"gap: 2px\">\n              <p style=\"font-size: 11pt; margin: 0px\">Return Strategy</p>\n              <p style=\"font-size: 9pt; margin: 0px\">(Mobile only)</p>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-select\n                v-model=\"returnStrategy\"\n                @change=\"handleReturnStrategySelect\"\n                placeholder=\"Return Strategy\"\n              >\n                <el-option\n                  v-for=\"strategy in returnStrategies\"\n                  :key=\"`return-strategy-select-option-${strategy}`\"\n                  :label=\"strategy\"\n                  :value=\"strategy\"\n                />\n              </el-select>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-input\n                v-if=\"returnStrategy === 'deeplink'\"\n                v-model=\"deeplink\"\n                @change=\"handleReturnStrategyDeeplink\"\n                placeholder=\"Deeplink\"\n                :disabled=\"returnStrategy !== 'deeplink'\"\n                style=\"margin: 0px\"\n              />\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Language</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"language\" @change=\"handleLanguageSelect\" placeholder=\"Language\">\n                <el-option v-for=\"locale in locales\" :key=\"`language-select-option-${locale}`\" :label=\"locale\"\n                  :value=\"locale\" />\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Theme</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"theme\" @change=\"handleThemeSelect\" placeholder=\"Theme\">\n                <el-option label=\"LIGHT\" :value=\"THEME.LIGHT\" />\n                <el-option label=\"DARK\" :value=\"THEME.DARK\" />\n              </el-select>\n            </el-col>\n          </el-row>\n\n<!--          <el-row style=\"align-items: center\">-->\n<!--            <el-col :span=\"4\">-->\n<!--              <p style=\"font-size: 11pt\">Connect</p>-->\n<!--              <p style=\"font-size: 11pt\">Methods</p>-->\n<!--            </el-col>-->\n<!--            <el-col :span=\"20\">-->\n<!--              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" placeholder=\"Methods\">-->\n<!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n<!--                           :value=\"methods\" />-->\n\n<!--              </el-select>-->\n<!--            </el-col>-->\n<!--          </el-row>-->\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Connect</p>\n              <p style=\"font-size: 11pt\">Methods</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" multiple placeholder=\"methods\">\n                <el-option\n                    v-for=\"item in connectMethods\"\n                    :key=\"item\"\n                    :label=\"item\"\n                    :value=\"item\">\n                </el-option>\n              </el-select>\n\n\n<!--              <el-select v-model=\"selectedMethod\" placeholder=\"Methods\" @change=\"handleConnectMethodsSelect\" multiple>-->\n<!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n<!--                           :value=\"methods\" />-->\n<!--              </el-select>-->\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">ton_proof</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-input v-model=\"tonProofValue\"  placeholder=\"input ton_proof\"></el-input>\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" align=\"middle\">\n            <el-col :span=\"4\">\n              <div>req</div>\n            </el-col>\n            <el-col\n              :span=\"6\"\n              v-for=\"item in Object.keys(availableChains)\"\n              :key=\"item\"\n            >\n              <el-checkbox\n                v-model=\"availableChains[item].checked\"\n                :disabled=\"!areChainsInit\"\n                >{{ availableChains[item].name }}</el-checkbox\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" align=\"middle\" style=\"margin-top: 20px\">\n            <el-col :span=\"4\">\n              <div>opt</div>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(43114)\" @change=\"() => handleOptionChange(43114)\">\n                avax</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(10)\" @change=\"() => handleOptionChange(10)\">op</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(8453)\" @change=\"() => handleOptionChange(8453)\">\n                BASE</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(99781165)\"\n                @change=\"() => handleOptionChange(99781165)\">Non-exist chain</el-checkbox>\n            </el-col>\n          </el-row>\n\n          <!-- <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button type=\"primary\" @click=\"deeplinkActionTest\" icon=\"el-icon-connection\">测试Deeplink</el-button>\n            </el-col>\n          </el-row> -->\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                type=\"primary\"\n                @click=\"connectBtnClicked\"\n                icon=\"el-icon-connection\"\n                :disabled=\"!areChainsInit\"\n                >{{ connectStatusStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                type=\"danger\"\n                @click=\"disconnectAction\"\n                icon=\"el-icon-switch-button\"\n                :disabled=\"!areChainsInit || walletAddress.length == 0\"\n                >{{ disconnectStatusStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n          <teleport to=\"body\">\n            <div v-if=\"showModal\" class=\"modal-overlay\" @click=\"closeModal\">\n              <div class=\"modal-content\" @click.stop>\n                <button class=\"close-button\" @click=\"closeModal\">\n                  &times;\n                </button>\n                <h2>Scan to connect</h2>\n                <qrcode-vue :value=\"qrValue\" :size=\"200\" level=\"H\" />\n              </div>\n            </div>\n          </teleport>\n        </el-card>\n\n        <!-- 发送交易 -->\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div>Transactions</div>\n          </template>\n\n          <el-tabs v-model=\"activeTab\" type=\"border-card\" @tab-click=\"clickActiveTab\">\n            <!-- ETH -->\n            <el-tab-pane label=\"ETH\" name=\"eip155:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to ETH)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve TONCoin)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(eth mint\n                    nft)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add SPX6900)\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n            <!-- Polygon-->\n            <el-tab-pane label=\"Polygon\" name=\"eip155:137\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send POL)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve sushi)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(polygon mint\n                    nft)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add LGNS)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_testRpc()\">wallet_testRpc(Polygon)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- BSC-->\n            <el-tab-pane label=\"BNB\" name=\"eip155:56\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to BNB)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve POSI)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add FET)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_testRpc()\">wallet_testRpc(check balance on eth)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Fuse\" name=\"eip155:122\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_swap\">eth_sendTransaction(Swap)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\"\n                  >eth_sendTransaction(转账FUSE)</el-button\n                  >\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\"\n                  >eth_sendTransaction(授权USDC)</el-button\n                  >\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TON\" name=\"ton:-239\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_getAccount\">ton_getAccount</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_sendTransaction\">ton_sendTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- solana -->\n            <el-tab-pane label=\"Sol\" name=\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Sonic\" name=\"sonic:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Sonic(svm)\" name=\"svm:70000059\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- Sui-->\n            <el-tab-pane label=\"Sui\" name=\"sui:mainnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sui_getAccount()\">getAccount(Sui)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sui_signMessage()\">signMessage(Sui)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sui_signPersonalMessage()\">signPersonalMessage(Sui)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sui_signTransaction2()\">signTransaction(Sui)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sui_signAndExecuteTransaction()\">sendTransaction(send to Rally\n                    Tiger account)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sui_requestRpc()\">rpc(Sui)</el-button>\n                </el-col>\n              </el-row>\n\n              <div style=\"height: 48px\"></div>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"sui_signTransaction_pre_execution()\">signTransaction(prepared data)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"sui_signAndExecuteTransaction_pre_execution()\">sendTransaction(prepared data)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sui_signTransaction()\">signTransaction(Pattern account)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sui_signAndExecuteTransaction_stake()\">stake (Sui)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n            <!-- BTC -->\n            <el-tab-pane label=\"BTC\" name=\"btc:mainnet\">\n              <BTCPanel @generateTransactionParams=\"btc_generateTransactionParams\" />\n            </el-tab-pane>\n\n            <!-- Fractal BTC -->\n            <el-tab-pane label=\"Fractal\" name=\"fractal:mainnet\">\n              <FractalPanel @generateTransactionParams=\"fractal_generateTransactionParams\" />\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Aptos\" name=\"aptos:mainnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signTransaction\">aptos_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"aptos_signAndSubmitTransaction\">aptos_signAndSubmitTransaction</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Movement\" name=\"movement:testnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"move_signTransaction\">move_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"move_signAndSubmitTransaction\">move_signAndSubmitTransaction</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"cosmos\" name=\"cosmos:cosmoshub-4\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"osmos\" name=\"cosmos:osmosis-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"sei交易\" name=\"cosmos:pacific-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n          </el-tabs>\n\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Data:</div>\n            <el-input v-model=\"testTransaction\" type=\"textarea\" :rows=\"5\" placeholder=\"sendTransactions\"></el-input>\n          </el-col>\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Result :</div>\n            <el-input v-model=\"testboc\" type=\"textarea\" :rows=\"5\" placeholder=\"boc\"></el-input>\n          </el-col>\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button type=\"primary\" @click=\"sendTransaction()\">{{\n                testTransactionStr\n                }}</el-button>\n            </el-col>\n          </el-row>\n        </el-card>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<style scoped>\n/* 重置全局边距和内边距 */\nbody,\nhtml {\n  margin: 0;\n  padding: 0;\n  height: 100%;\n}\n\n/* 确保 app 容器占满整个视口 */\n#app {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin: 0 auto;\n  /* 居中 */\n  max-width: 600px;\n  /* 设置最大宽度 */\n  padding: 0 20px;\n  /* 添加一些左右内边距 */\n}\n\n/* 调整 el-container 样式 */\n.el-container {\n  min-height: 100vh;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n}\n\n/* 调整 el-header 样式 */\n.el-header {\n  background-color: #333333;\n  color: white;\n  height: 50px;\n  line-height: 50px;\n  font-size: 18px;\n  font-weight: bold;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n}\n\n/* 调整 el-main 样式 */\n.el-main {\n  padding: 70px 0 20px;\n  /* 增加顶部内边距以避免被固定header遮挡 */\n  flex-grow: 1;\n}\n\n.el-card {\n  margin-bottom: 20px;\n}\n\n.info-row {\n  margin-bottom: 10px;\n}\n\n.input-label {\n  margin-bottom: 5px;\n  text-align: left;\n}\n\n.el-input {\n  margin-bottom: 10px;\n}\n\n/* 通用按钮样式 */\n.wallet-actions .el-button,\n.transaction .el-button,\n.clear-cache .el-button {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 40px;\n}\n\n.wallet-actions .el-button span,\n.transaction .el-button span,\n.clear-cache .el-button span {\n  margin: 0 auto;\n}\n\n/* 按钮行间距 */\n.wallet-actions .button-row,\n.transaction .button-row {\n  margin-bottom: 8px;\n}\n\n.wallet-actions .button-row:last-child,\n.transaction .button-row:last-child {\n  margin-bottom: 0;\n}\n\n/* 调整图标和文字的对齐 */\n.wallet-actions .el-button [class^=\"el-icon-\"],\n.transaction .el-button [class^=\"el-icon-\"],\n.clear-cache .el-button [class^=\"el-icon-\"] {\n  margin-right: 5px;\n  vertical-align: middle;\n}\n\n/* 新增：调整发送交易按钮与输入框的间距 */\n.transaction .el-row:not(:last-child) {\n  margin-bottom: 10px;\n}\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  text-align: center;\n  position: relative;\n  max-width: 90%;\n  width: 300px;\n}\n\n.close-button {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  font-size: 24px;\n  border: none;\n  background: none;\n  cursor: pointer;\n}\n\n/* 响应式调整 */\n@media (max-width: 600px) {\n  #app {\n    padding: 0 10px;\n  }\n\n  .el-main {\n    padding: 60px 0 10px;\n  }\n}\n</style>\n<script>\nimport { ed25519 } from '@noble/curves/ed25519';\nimport {OKX_CONNECT_ERROR_CODES, safeJsonStringify} from \"@okxconnect/core\"\nimport {OKXBtcProvider, OKXUniversalProvider, OKXCosmosProvider} from \"@okxconnect/universal-provider\"\nimport {OKXSolanaProvider} from \"@okxconnect/solana-provider\";\nimport {\n  Connection,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n  TransactionMessage,\n  VersionedTransaction\n} from '@solana/web3.js';\nimport {OKXSuiProvider as SuiAdapter} from \"@okxconnect/sui-provider\"\nimport {Transaction as SuiTransaction} from '@mysten/sui/transactions';\nimport QrcodeVue from 'qrcode.vue'\nimport {getFullnodeUrl, SuiClient} from \"@mysten/sui/client\";\nimport { OKXTONProvider } from \"@okxconnect/ton-provider\"\n\nimport {OKXAptosProvider} from \"@okxconnect/aptos-provider\";\nimport {Aptos, AptosConfig, Network} from \"@aptos-labs/ts-sdk\";\nimport bs58 from \"bs58\";\nimport BTCPanel from \"./components/BtcTransactionPanel.vue\";\nimport FractalPanel from \"./components/FractalTransactionPanel.vue\"\n\nimport {OKXUniversalConnectUI, THEME} from \"@okxconnect/ui\";\n\nimport VConsole from 'vconsole'\n// import {StargateClient} from \"@cosmjs/stargate\";\n// import {makeSignDoc} from \"@cosmjs/amino\";\n// import {CosmosUtils} from \"@/cosmos/CosmosUils\";\nnew VConsole();\n\nconst allChains = {\n  1: { name: \"eth\", checked: false },\n  56: { name: \"BNB\", checked: false },\n  137: { name: \"Polygon\", checked: false },\n  122: { name: \"Fuse\", checked: false },\n  \"ton:-239\":{name: \"TON\",checked: false},\n  \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\": {\n    name: \"Sol mainnet\",\n    checked: false,\n  },\n  \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\": {\n    name: \"Sol testnet\",\n    checked: false,\n  },\n  \"sonic:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\": {\n    name: \"Sonic testnet\",\n    checked: false,\n  },\n  \"svm:70000059\": { name: \"70000059\", checked: false },\n  \"sui:mainnet\": { name: \"Sui mainnet\", checked: false },\n  \"aptos:mainnet\": { name: \"Aptos mainnet\", checked: false },\n  \"movement:testnet\": { name: \"Movement\", checked: false },\n  \"btc:mainnet\": { name: \"BTC\", checked: false },\n  \"fractal:mainnet\": { name: \"Fractal\", checked: false },\n  \"cosmos:osmosis-1\": {name: \"osmos\", checked: false},\n  \"cosmos:cosmoshub-4\": {name: \"cosmoshub\", checked: false},\n  \"cosmos:pacific-1\": {name: \"sei\", checked: false},\n  \"cosmos:abvdefg\": {name: \"cosmos:abvdefg\", checked: false},\n  997865: { name: \"不存在的链\", checked: false },\n};\n\nvar optionChains = new Set([]);\nvar selectedModals = [\"before\", \"success\", \"error\"];\nvar selectedReturnStrategy = \"none\";\nvar selectedDeepLink = \"tg://resolve\";\nvar selectedLanguage = \"en_US\";\nvar selectedTheme = THEME.LIGHT;\n\n// import QrcodeVue from 'qrcode.vue'\nexport default {\n  name: \"App\",\n  components: {\n    QrcodeVue,\n    BTCPanel,\n    FractalPanel\n  },\n\n  data: () => {\n    return {\n      activeTab: \"eip155:1\",\n      testTopic: \"\",\n      testPublicKey: \"\",\n      testProofPayload: \"\",\n      tonProofValue:\"\",\n      pendingDeepLink: \"-\",\n      logList: [],\n      connectReady: false,\n      connectStatusStr: \"Connect\",\n      disconnectStatusStr: \"Disconnect\",\n      localPubKey: \"\",\n      localSecKey: \"\",\n      testTransaction: \"\",\n      selectedChain: \"eip155:1\",\n      testTransactionStr: \"Send\",\n      walletAddress: \"\",\n      testboc: \"\",\n      ProofPayloadVerify: \"\",\n      showModal: false,\n      showVerifyRow: false,\n      qrValue: \"https://www.okx.com/download\",\n      currentStatus: \"\",\n      areChainsInit: false,\n      availableChains: allChains,\n      isOptionalChecked: (chainId) => {\n        return optionChains.has(chainId);\n      },\n      withUI: localStorage.getItem(\"autoRefresh\") != \"false\",\n      modals: selectedModals,\n      returnStrategies: [\"none\", \"back\", \"deeplink\"],\n      returnStrategy: selectedReturnStrategy,\n      deeplink: selectedDeepLink,\n      locales: [\n        \"en_US\",\n        \"ru_RU\",\n        \"zh_CN\",\n        \"zh\",\n        \"ar_AE\",\n        \"cs_CZ\",\n        \"de_DE\",\n        \"es_ES\",\n        \"es_LAT\",\n        \"fr_FR\",\n        \"id_ID\",\n        \"it_IT\",\n        \"nl_NL\",\n        \"pl_PL\",\n        \"pt_BR\",\n        \"pt_PT\",\n        \"ro_RO\",\n        \"tr_TR\",\n        \"uk_UA\",\n        \"vi_VN\",\n      ],\n      selectedMethod:[],\n      selectedMethodData:[],\n      connectMethods:[\n        \"wallet_addEthereumChain\",\n        \"personal_sign\",\n        \"solana_signMessage\",\n        \"sui_signMessage\",\n        \"sui_signPersonalMessage\",\n        \"btc_signMessage\",\n        \"aptos_signMessage\",\n      ],\n\n      language: selectedLanguage,\n      theme: selectedTheme,\n      THEME: THEME,\n      handleWithUI: (isChecked) => {\n        localStorage.setItem(\"autoRefresh\", `${isChecked}`);\n        location.reload();\n      },\n      handleOptionChange: (chainId) => {\n        if (optionChains.has(chainId)) {\n          optionChains.delete(chainId);\n        } else {\n          optionChains.add(chainId);\n        }\n      },\n    };\n  },\n  computed: {\n    getWalletAddress: function () {\n      return this.walletAddress;\n    },\n  },\n  methods: {\n    isChecked(chainId) {\n      return this.selectedChains.has(chainId);\n    },\n\n    initChains(newChains) {\n      if (newChains.length > 0) {\n        const updatedChains = Object.assign({}, this.availableChains);\n        for (const chainId of newChains) {\n          if (updatedChains[chainId]){\n            updatedChains[chainId].checked = !updatedChains[chainId].checked;\n          }\n        }\n        this.availableChains = updatedChains;\n      }\n\n      this.areChainsInit = true;\n    },\n\n    async clickActiveTab(tab) {\n      const tabName = tab.props ? tab.props.name : tab.name;\n      this.selectedChain = tabName;\n      console.log(`已切换到链 :`, tabName);\n\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n      window.provider.setDefaultChain(this.selectedChain);\n    },\n\n    async connectBtnClicked() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        this.testTonSdk();\n      } else {\n        console.log(`connectBtnClicked provider not finish init`);\n      }\n    },\n\n    async disconnectAction() {\n      try {\n        console.log(\"get disconnect wallet btn clicked\");\n        // await TON.disconnect();\n        var provider = window.provider;\n        await provider.disconnect();\n        this.walletAddress = \"disconnected\";\n      } catch (error) {\n        console.log(\"Disconnect  error ==>> \", error.message);\n        this.currentStatus = error.message;\n      }\n    },\n\n    async eth_requestAccounts() {\n      var data = { method: \"eth_requestAccounts\" };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_chainId() {\n      var data = { method: \"eth_chainId\" };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_switchEthereumChain() {\n      var data = { method: \"wallet_switchEthereumChain\" };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_addEthereumChain() {\n      var data = {\n        method: \"wallet_addEthereumChain\",\n        params: {\n          blockExplorerUrls: [\"https://explorer.fuse.io\"],\n          chainId: \"0x7a\",\n          chainName: \"Fuse\",\n          nativeCurrency: { name: \"Fuse\", symbol: \"FUSE\", decimals: 18 },\n          rpcUrls: [\"https://rpc.fuse.io\"],\n        },\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n    async personal_sign() {\n      if (this.selectedChain === \"eip155:1\") {\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0x1ca023f10e157d148deed210f8bee193657a1eaa7f187909e20a9dc3b071dbc364c41fde37960c05093359f410a061ec8a7dca8c0c39fc7c1e24de8a3329775d1b\n\n        var accounts = await window.provider.request(\n          { method: \"eth_requestAccounts\" },\n          \"eip155\"\n        );\n        var address = accounts[0];\n        console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n        var dataETH = {\n          method: \"personal_sign\",\n          params: [\n            \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n            address,\n          ],\n        };\n\n        this.testTransaction = JSON.stringify(dataETH);\n      } else if (\n        this.selectedChain === \"eip155:137\" ||\n        this.selectedChain === \"eip155:122\"\n      ) {\n        // method\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0xebda9cfa2af43999058dffa0107031d1ef7fc0252dca85dcbd22ea097af922ca39b64d509ef61ce42b7641c5840b8a80337ffd1411b13e87e2260a3f1b6c151c1b\n\n        var dataPolygon = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n        this.testTransaction = JSON.stringify(dataPolygon);\n      } else if (this.selectedChain === \"eip155:56\") {\n        var data = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n\n        this.testTransaction = JSON.stringify(data);\n      }\n    },\n\n    async eth_sendTransaction_swap() {\n      var data = {\n        method: \"eth_sendTransaction\",\n        chainId: \"eip155:122\",\n        params: {\n          value: \"0x38d7ea4c68000\",\n          gas: \"0x2665f\",\n          to: \"0xf2614A233c7C3e7f08b1F887Ba133a13f1eb2c55\",\n          from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n          data: \"0x2646478b000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00000000000000000000000000000000000000000000000000038d7ea4c68000000000000000000000000000620fd5fa44be6af63715ef4e65ddfa0387ad13f5000000000000000000000000000000000000000000000000000000000000001b000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000700301ffff0201602352A9Eb5234466Eac23E59e7B99bCaE79C39c0BE9e53fd7EDaC9F859882AfdDa116645287C629040BE9e53fd7EDaC9F859882AfdDa116645287C62900602352A9Eb5234466Eac23E59e7B99bCaE79C39c01f2F3e73be57031114dd1f4E75c1DD87658be7F0E000bb800000000000000000000000000000000\",\n        },\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_signTypedData_v4() {\n      // method\n      // eth_signTypedData\n      // address\n      // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n      // valid\n      // true\n      // result\n      // 0xa8bb3c6b33a119d2d567c7632195c21988df778006082742125a591f5c633f716107883a37f7de6531a6312a5f69022135bf46fe5ab77905b62c82b3395f985e1b\n      //\n\n      // var data = {\n      //   \"method\": \"eth_signTypedData_v4\",\n      //   \"params\": {\n      //     \"typedDataJson\":\"{\\\"types\\\":{\\\"EIP712Domain\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"version\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"chainId\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"name\\\":\\\"verifyingContract\\\",\\\"type\\\":\\\"address\\\"}],\\\"Person\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"wallet\\\",\\\"type\\\":\\\"address\\\"}],\\\"Mail\\\":[{\\\"name\\\":\\\"from\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"to\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"contents\\\",\\\"type\\\":\\\"string\\\"}]},\\\"primaryType\\\":\\\"Mail\\\",\\\"domain\\\":{\\\"name\\\":\\\"Ether Mail\\\",\\\"version\\\":\\\"1\\\",\\\"chainId\\\":1,\\\"verifyingContract\\\":\\\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\\\"},\\\"message\\\":{\\\"from\\\":{\\\"name\\\":\\\"Cow\\\",\\\"wallet\\\":\\\"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\\\"},\\\"to\\\":{\\\"name\\\":\\\"Bob\\\",\\\"wallet\\\":\\\"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\\\"},\\\"contents\\\":\\\"Hello, Bob!\\\"}}\"\n      // }}\n\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        \"eip155\"\n      );\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n      var data = {\n        method: \"eth_signTypedData_v4\",\n        params: [\n          address,\n          {\n            types: {\n              EIP712Domain: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"version\",\n                  type: \"string\",\n                },\n                {\n                  name: \"chainId\",\n                  type: \"uint256\",\n                },\n                {\n                  name: \"verifyingContract\",\n                  type: \"address\",\n                },\n              ],\n              Person: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"wallet\",\n                  type: \"address\",\n                },\n              ],\n              Mail: [\n                {\n                  name: \"from\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"to\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"contents\",\n                  type: \"string\",\n                },\n              ],\n            },\n            primaryType: \"Mail\",\n            domain: {\n              name: \"Ether Mail\",\n              version: \"1\",\n              chainId: 1,\n              verifyingContract: \"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\",\n            },\n            message: {\n              from: {\n                name: \"Cow\",\n                wallet: \"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\",\n              },\n              to: {\n                name: \"Bob\",\n                wallet: \"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\",\n              },\n              contents: \"Hello, Bob!\",\n            },\n          },\n        ],\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_sendTransaction_transfer() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            chainId: \"0x1\",\n            to: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            value: \"0x5af3107a4000\",\n            maxPriorityFeePerGas: \"0x3b9aca00\",\n            gas: \"0x5e56\",\n            maxFeePerGas: \"0x2643b9db8\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gasPrice: \"0x17003f6530\",\n            nonce: \"0x0d30\",\n            data: \"0x\",\n            value: \"0x00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasLimit: \"0x5208\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x5e56\",\n            value: \"0x5af3107a4000\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasPrice: \"0x3b9aca00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            chainId: \"0x38\",\n          },\n        };\n      }else if(this.selectedChain === \"eip155:122\"){\n         data =   {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            value: \"0x0\",\n            chainId: \"0x7a\",\n          }\n        }\n      }\n\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        \"eip155\"\n      );\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"to\"] = address;\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_approve() {\n      var data = {};\n\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000000000000022d473030f116ddee9f6b43ac78ba3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x582d872a1b094fc48f5de31d3b73f2d9be47def1\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000f6f8096ac575b0\",\n            to: \"0x0b3F868E0BE5597D5DB7fEB59E1CADBb0fdDa50a\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            value: \"0x0\",\n            gas: \"0xe117\",\n            gasPrice: \"0xb2d05e00\",\n            data: \"0x095ea7b300000000000000000000000031c2f6fcff4f8759b3bd5bf0e1084a055615c768ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x5CA42204cDaa70d5c773946e69dE942b85CA6706\",\n          },\n        };\n      }else if (this.selectedChain === 'eip155:122'){\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000000000000013b3\",\n            to: \"0x620fd5fa44BE6af63715Ef4E65DDFA0387aD13F5\",\n          },\n        };\n      }\n\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        \"eip155\"\n      );\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_mint() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x4cacb\",\n            data: \"0xa64dfa75000000000000000000000000ed688002f3797599db8b4feacfe8b1dda0df1c8d000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cecb15396825a895ff8da8fc2d2c77a234dccee00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f6261667962656968643737366b6177706e71336f6f6a6635693274787a76617737737164656b34616a776472637472703261366f626b70723773792f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x30795\",\n            data: \"0xa64dfa75000000000000000000000000341b3687f0309778f08f29336b2c4b9c38b9f110000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f62616679626569686a6279676b68747a71376b68377434336266686e676e793236337668766f6578716a6d6e377161716166366e717a64743777712f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      }\n\n      let str = JSON.stringify(data);\n      console.log(\"-----长度--->\", str.length);\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        \"eip155\"\n      );\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_testRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n        `eip155:56`,\n        `https://eth-mainnet.g.alchemy.com/v2/NxUfYJUr-TQtEpLmSXhhD5pXn70GwsyV`\n      );\n      var data = {\n        method: \"eth_getBalance\",\n        params: [\"0x8D97689C9818892B700e27F316cc3E41e17fBeb9\", \"latest\"],\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_watchAsset() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xe0f63a424a4439cbe457d80e4f4b51ad25b2c56c\",\n              symbol: \"SPX6900\",\n              image:\n                \"https://assets.coingecko.com/coins/images/31401/standard/sticker_%281%29.jpg?1702371083\",\n              decimals: 8,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xeB51D9A39AD5EEF215dC0Bf39a8821ff804A0F01\",\n              symbol: \"LGNS\",\n              image: \"https://polygonscan.com/token/images/originlgns_32.png\",\n              decimals: 9,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0x031b41e504677879370e9dbcf937283a8691fa7f\",\n              symbol: \"FET\",\n              image: \"https://bscscan.com/token/images/fetch_32.png\",\n              decimals: 18,\n            },\n          },\n        };\n      }\n\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async ton_sendTransaction() {\n      var data  = {\n        \"messages\":[{\"address\":\"EQARULUYsmJq1RiZ-YiH-IJLcAZUVkVff-KBPwEmmaQGH6aC\",\"amount\":\"205000000\",\"payload\":\"te6cckEBAgEAhwABbQ+KfqUAAADNgG7tIEATEtAIAO87mQKicbKgHIk4pSPP4k5xhHqutqYgAB7USnesDnCcECwbgQMBAJUlk4VhgBD3JEg1TUr75iTijBghOKm/sxNDXUBl7CD6WMut0Q85x4RafwA/Es89DBXoTxuqxVFxyBbzt9Rav2HBUKl7hmkvLuKHLBCW57aK\"}],\n        \"validUntil\":1792481054,\n        \"network\":'-239'}\n      this.testTransaction = JSON.stringify(data)\n    },\n    ton_getAccount() {\n      this.testTransaction = \"这里是同步获取 不再需要点击 <<发送交易>>\"\n      const adapter = new OKXTONProvider(window.provider);\n      let result =   adapter.getAccount()\n      if (result) {\n        this.testboc = JSON.stringify(result);\n      } else {\n        this.testboc = 'null'\n      }\n    },\n\n\n    async sendTransaction() {\n      if (this.selectedChain.startsWith(\"aptos\")\n          || this.selectedChain.startsWith(\"movement\")\n          || this.selectedChain.startsWith(\"solana\")\n          || this.selectedChain.startsWith(\"sonic\")\n          || this.selectedChain.startsWith(\"cosmos\")) {\n        return\n      }\n      console.log(\"sendTransaction\", window.provider);\n      console.log(\"sendTransaction内容11------\", this.testTransaction);\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (this.testTransaction && window.provider) {\n        // eslint-disable-next-line no-undef\n        const sendData = JSON.parse(this.testTransaction);\n        try {\n          console.log(\"sendTransaction-----22method>>\", sendData.method);\n\n          let chainId = \"eip155:1\";\n          if (this.selectedChain) {\n            chainId = this.selectedChain;\n            console.log(\n              \"sendTransaction-----this.selectedChain>>\",\n              this.selectedChain\n            );\n          }\n          console.log(\"windowOpen[click_1]: \", Date.now());\n          if (chainId == \"sui:mainnet\") {\n            const adapter = new SuiAdapter(window.provider);\n            var suiResult = \"invalid result\";\n            if (this.currentSuiMethod == \"sui_signTransaction\") {\n              suiResult = await adapter.signTransaction(\n                this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (\n              this.currentSuiMethod == \"sui_signAndExecuteTransaction\"\n            ) {\n              suiResult = await adapter.signAndExecuteTransaction(\n                this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signMessage\") {\n              console.log(\"signMessage----\", this.currentSuiTransaction);\n              suiResult = await adapter.signMessage(this.currentSuiTransaction);\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signPersonalMessage\") {\n              console.log(\n                \"signPersonalMessage----\",\n                this.currentSuiTransaction\n              );\n              suiResult = await adapter.signPersonalMessage(\n                this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_testRpc\") {\n              console.log(\"test rpc----\", this.currentSuiTransaction);\n              console.log(\n                `请求数据发送 rpc ----->> ${JSON.stringify(sendData)}`\n              );\n              const res = await window.provider.request(sendData, chainId);\n              console.log(`请求数据回调 rpc ----->> ${JSON.stringify(result)}`);\n              if (typeof res == \"string\") {\n                this.testboc = res;\n              } else {\n                this.testboc = JSON.stringify(res);\n              }\n            }\n            console.log(\"windowOpen[click_2]: \", Date.now());\n            return;\n          }else if(chainId === \"ton:-239\"){\n            console.log(\n                `请求数据发送 sendTransaction ---ton-->> ${JSON.stringify(sendData)}`\n            );\n            const adapter = new OKXTONProvider(window.provider);\n            let result =  await adapter.sendTransaction(sendData)\n            console.log(\n                `请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`\n            );\n            if (typeof result == \"string\") {\n              this.testboc = result;\n            } else {\n              this.testboc = JSON.stringify(result);\n            }\n            return\n          }\n\n          if (chainId == 'btc:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var btcResult = 'invalid result'\n\n            if (this.currentBtcMethod == 'btc_signMessage') {\n              btcResult = await btcAdapter.signMessage(chainId, this.currentBtcTransaction[\"signStr\"])\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_send') {\n              btcResult = await btcAdapter.send(chainId, this.currentBtcTransaction)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signPsbt') {\n              btcResult = await btcAdapter.signPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n\n              this.hexToBase64(btcResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentBtcMethod == 'btc_signPsbts') {\n              btcResult = await btcAdapter.signPsbts(chainId, this.currentBtcTransaction.psbtHexs, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_sendInscription') {\n              btcResult = await btcAdapter.sendInscription(chainId, this.currentBtcTransaction.address, this.currentBtcTransaction.inscriptionId, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signAndPushPsbt') {\n              btcResult = await btcAdapter.signAndPushPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            }else if (this.currentBtcMethod == 'btc_sendBitcoin') {\n              btcResult = await btcAdapter.sendBitcoin(chainId, this.currentBtcTransaction.toAddress, this.currentBtcTransaction.satoshis, this.currentBtcTransaction.options)\n\n              this.testboc = JSON.stringify(btcResult)\n            }\n            return\n          }\n\n          if (chainId == 'fractal:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var fractalResult = 'invalid result'\n\n            if (this.currentFractalMethod == 'fractal_signMessage') {\n              fractalResult = await btcAdapter.signMessage(chainId, this.currentFractalTransaction['signStr'])\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_send') {\n              fractalResult = await btcAdapter.send(chainId, this.currentFractalTransaction)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signPsbt') {\n              fractalResult = await btcAdapter.signPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.hexToBase64(fractalResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentFractalMethod == 'fractal_signPsbts') {\n              fractalResult = await btcAdapter.signPsbts(chainId, this.currentFractalTransaction.psbtHexs, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_sendInscription') {\n              fractalResult = await btcAdapter.sendInscription(chainId, this.currentFractalTransaction.address, this.currentFractalTransaction.inscriptionId, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signAndPushPsbt') {\n              fractalResult = await btcAdapter.signAndPushPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            }else if (this.currentFractalMethod == 'fractal_sendBitcoin') {\n              fractalResult = await btcAdapter.sendBitcoin(chainId, this.currentFractalTransaction.toAddress, this.currentFractalTransaction.satoshis, this.currentFractalTransaction.options)\n\n              this.testboc = JSON.stringify(fractalResult)\n            }\n\n            return\n          }\n\n          console.log(`请求数据发送 sendTransaction ----->> ${JSON.stringify(sendData)}`)\n          var result = await window.provider.request(sendData, chainId)\n          console.log(`请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`)\n\n          console.log(\"windowOpen[click_3]: \", Date.now());\n          if (typeof result == \"string\") {\n            this.testboc = result;\n          } else {\n            this.testboc = JSON.stringify(result);\n          }\n          console.log(\"方法数据回调 --this.testboc--\", this.testboc);\n        } catch (error) {\n          console.error(\"方法数据回调失败 --Error--\", error.message);\n\n          if (error.code === OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n            this.testboc = error.message;\n          } else {\n            this.testboc = \"签名错误！\" + error.message;\n          }\n        }\n      } else {\n        alert(\"交易数据为空，请选则或输入交易数据。\");\n      }\n    },\n\n    hexToBase64(hexStr) {\n      var bytes = [];\n      for (var i = 0; i < hexStr.length; i += 2) {\n        bytes.push(parseInt(hexStr.substr(i, 2), 16));\n      }\n      const buffer = new Uint8Array(bytes)\n      const blob = new Blob([buffer]);\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = function (e) {\n          var base64Data = e.target.result.split(\",\")[1]\n          resolve(base64Data);\n        };\n        reader.onerror = function (e) {\n          reject(e);\n        };\n        reader.readAsDataURL(blob);\n      });\n    },\n\n    async testTonSdk() {\n      // 1. connect\n      //  create sub providers for each namespace/chain\n      let nameSpacesChains = [];\n      let optSpaceChains = [];\n\n      let solanaChains = [\n        \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n        \"sonic:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n      ];\n      let hasEip155, hasSolana, hasSui, hasBtc, hasAptos, hasTon, hasCosmos = false\n\n      let suiChains = [\n        \"sui:mainnet\",\n      ];\n\n      let btcChains = [\n        \"btc:mainnet\",\n        \"fractal:mainnet\"\n      ];\n\n      const chains = Object.entries(this.availableChains)\n          .filter((chain) => chain[1].checked)\n          .map((chain) => chain[0]);\n      console.log(`chains  ===> ${chains.values()}`)\n      chains.forEach(function (chainId) {\n        console.log(`chains.forEach chainId  ===> ${chainId}`)\n\n        if (solanaChains.includes(chainId)) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"ton\")) {\n          nameSpacesChains.push(chainId)\n          hasTon = true\n          return\n        }\n        if (typeof chainId == 'string' && (chainId.startsWith(\"aptos\") || chainId.startsWith(\"movement\"))) {\n          nameSpacesChains.push(chainId)\n          hasAptos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId)\n          hasSolana = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"cosmos\")) {\n          nameSpacesChains.push(chainId)\n          hasCosmos = true\n          return\n        }\n\n        if (suiChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`);\n          nameSpacesChains.push(chainId);\n          hasSui = true;\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`)\n          nameSpacesChains.push(chainId)\n          hasBtc = true\n          return\n        }\n\n        hasEip155 = true\n        nameSpacesChains.push(`eip155:${chainId}`)\n      })\n\n\n      optionChains.forEach(function (chainId) {\n        if (solanaChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n        if (typeof chainId == \"string\" && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (suiChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          optSpaceChains.push(chainId)\n          return\n        }\n\n        optSpaceChains.push(`eip155:${chainId}`)\n      })\n\n      console.log(`namespaceChains  ===> ${JSON.stringify(nameSpacesChains)}`);\n      var connectData = {};\n      if (nameSpacesChains && nameSpacesChains.length > 0) {\n        var requireData = {};\n        if (hasEip155) {\n          requireData.eip155 = {\n            chains: nameSpacesChains.filter((item) =>\n              item.startsWith(\"eip155\")\n            ),\n            defaultChain: nameSpacesChains.filter((item) =>\n              item.startsWith(\"eip155\")\n            )[0],\n          };\n        }\n        if (hasSolana) {\n          requireData.solana = {\n            chains: nameSpacesChains.filter(\n              (item) =>\n                item.startsWith(\"solana\") ||\n                item.startsWith(\"sonic\") ||\n                item.startsWith(\"svm\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n              (item) =>\n                item.startsWith(\"solana\") ||\n                item.startsWith(\"sonic\") ||\n                item.startsWith(\"svm\")\n            )[0],\n          };\n        }\n\n        if (hasCosmos) {\n          requireData.cosmos = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            )[0],\n          }\n        }\n        if (hasTon) {\n\n          //\n          let tonParams = {\n            ton_addr:{\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue){\n            tonParams = {\n              ton_addr:{\n                name: 'ton_addr',\n              },\n              ton_proof:{\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          requireData.ton = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"ton\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"ton\"))[0],\n            params:tonParams\n          };\n        }\n\n        if (hasSui) {\n          requireData.sui = {\n            chains: nameSpacesChains.filter((item) => item.startsWith(\"sui\")),\n            defaultChain: nameSpacesChains.filter((item) =>\n              item.startsWith(\"sui\")\n            )[0],\n            rpcMap: {\n              \"sui:mainnet\": \"https://www.okx.com/fullnode/sui/discover/rpc\"\n            }\n          };\n        }\n        if (hasAptos) {\n          requireData.aptos = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\"))[0]\n          }\n        }\n\n        if (hasBtc) {\n          let btcChains = nameSpacesChains.filter(item => item.startsWith(\"btc\") || item.startsWith(\"fractal\"))\n          requireData.btc = {\n            chains: btcChains,\n            defaultChain: btcChains[0]\n          }\n        }\n        console.log(`requireData  ===> ${JSON.stringify(requireData)}`)\n        connectData['namespaces'] = requireData;\n        console.log(JSON.stringify(connectData))\n      }\n\n      if (optSpaceChains && optSpaceChains.length > 0) {\n        var optData = {\n          eip155: {\n            chains: optSpaceChains.filter((item) => item.startsWith(\"eip155\")),\n            defaultChain: optSpaceChains.filter((item) =>\n              item.startsWith(\"eip155\")\n            )[0],\n          },\n        };\n        connectData[\"optionalNamespaces\"] = optData;\n      }\n\n      if (nameSpacesChains.length === 0 && optSpaceChains.length === 0) {\n        //未选择链\n        alert(\"请选择一条链\");\n        return;\n      }\n      console.log(\"=====>connectData \");\n      console.log(connectData);\n\n      var connectMethod;\n      connectData.requestMethods = this.getCurrentSelectedMethodData();\n\n      if (window.provider instanceof OKXUniversalConnectUI) {\n        connectMethod = window.provider.openModal(connectData);\n      } else {\n        connectMethod = window.provider.connect(connectData);\n      }\n\n      await connectMethod\n        .then((result) => {\n          // 2. set defaul chain\n          this.walletAddress = \"connected\";\n          if (this.isPC()) {\n            this.showModal = false;\n          }\n          if (result){\n            this.testboc = JSON.stringify(result)\n          }\n\n        })\n        .catch((error) => {\n          console.error(\"发生了错误：\", error);\n        });\n    },\n\n    getCurrentSelectedMethodData(){\n      var methodList = [];\n      this.selectedMethod.forEach(method =>{\n        switch (method) {\n          case \"wallet_addEthereumChain\":\n            methodList.push({\n              method: \"wallet_addEthereumChain\",\n              params: {\n                blockExplorerUrls: [\"https://explorer.fuse.io\"],\n                chainId: \"0x7a\",\n                chainName: \"Fuse\",\n                nativeCurrency: { name: \"Fuse\", symbol: \"FUSE\", decimals: 18 },\n                rpcUrls: [\"https://rpc.fuse.io\"],\n              },\n            })\n            break;\n          case \"personal_sign\":\n            methodList.push(\n              {\n                method: \"personal_sign\",\n                chainId: \"eip155:1\",\n                params: [\n                  \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n                ],\n              });\n            break;\n          case \"solana_signMessage\":\n            methodList.push(\n              {\n                \"chainId\": \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n                \"method\": \"solana_signMessage\",\n                \"params\": {\n                  \"message\": \"123 签名测试!\",\n                }\n              }\n            );\n            break;\n          case \"sui_signMessage\":\n          case \"sui_signPersonalMessage\": {\n            let suiData = [\n              76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n              109, 111, 118, 101,\n            ];\n            let uint8Array = new Uint8Array(suiData);\n            methodList.push(\n                {\n                  method: method,\n                  chainId: \"sui:mainnet\",\n                  params: {\n                    message: uint8Array,\n                  }\n                }\n            );\n            break;\n          }\n          case \"btc_signMessage\":\n\n            methodList.push(\n              {\n                method: \"btc_signMessage\",\n                chainId: \"btc:mainnet\",\n                params: {\n                  signStr: \"Welcome to UniSat!\\n\\nClick to sign in and accept the UniSat Terms of Service (https://unisat.io/terms-of-service.html) and Privacy Policy (https://unisat.io/privacy-policy.html).\\n    \\nThis request will not trigger a blockchain transaction.\\n    \\nYour authentication status will reset after 24 hours.\\n    \\nWallet address:\\nbc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\\n    \\nNonce:\\n162d70e3-8c21-4cfd-9a22-9bf0a4b7be51\\n\"\n                }\n              }\n            )\n            break;\n          case \"aptos_signMessage\":\n            methodList.push(\n              {\n                \"chainId\": \"aptos:mainnet\",\n                \"method\": \"aptos_signMessage\",\n                \"params\": {\n                  address: true,\n                  application: true,\n                  chainId: true,\n                  message: \"123 签名测试!\",\n                  nonce: \"1234\"\n                }\n              }\n            )\n            break;\n          case \"cosmos_signArbganitrary\":\n\n            break;\n          default:\n\n            break;\n        }\n      })\n      return methodList\n\n    },\n\n\n    closeModal() {\n      this.showModal = false;\n    },\n\n    isPC() {\n      const userAgentInfo = navigator.userAgent;\n      console.log(\"current device ua is ===>\", userAgentInfo);\n\n      const Agents = [\n        \"Android\",\n        \"iPhone\",\n        \"SymbianOS\",\n        \"Windows Phone\",\n        \"iPad\",\n        \"iPod\",\n      ];\n      let flag = true;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = false;\n          break;\n        }\n      }\n      return flag;\n    },\n    isSafariOrChrome() {\n      const userAgentInfo = navigator.userAgent;\n      const Agents = [\"Safari\", \"Chrome\"];\n      let flag = false;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = true;\n          break;\n        }\n      }\n      return flag;\n    },\n\n    /// solana\n    async sol_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      let data = {\n        method: \"solana_signMessage\",\n        params: {\n          message: \"123 签名测试!\",\n          pubkey: \"\",\n        },\n      };\n      this.testTransaction = JSON.stringify(data);\n      let provider = new OKXSolanaProvider(window.provider);\n      let message = await provider.signMessage(\n          \"123 签名测试!\"\n      );\n      // \"ny7H1yisBitCanvZPTztudF4Jpok1iTyPEAeQPk3gFBWXGG1j7YZ4rmHhw6hFHqW86Mo2TDej5AVgLbTSMV7Kh7\"\n      let m = bs58.decode(\"4QFsar4z4gdsyjRaEfufNF7qqnLsL2ArEuGdL4PbxjzYJMci7em867aDJvxvGgk9gLMeLgidf4YJopyexX7VEhyu\")\n      const verify = ed25519.verify(m, new TextEncoder().encode(\"123 签名测试!\"),provider.getAccount(this.selectedChain).publicKey.toBytes());\n\n      console.log(\"verify\", verify)\n      if (typeof message == \"string\") {\n        this.testboc = message;\n      } else {\n        this.testboc = JSON.stringify(message);\n      }\n    },\n\n    async aptos_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      let data = {\n        address: true,\n        application: true,\n        chainId: true,\n        message: \"123 签名测试!\",\n        nonce: \"1234\"\n      }\n\n      let provider = new OKXAptosProvider(window.provider)\n      let message = await provider.signMessage(data, this.selectedChain)\n      this.testTransaction = JSON.stringify(data)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n          functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n          functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        },\n      });\n\n      // let data = {\n      //   \"arguments\": [\"100000\",[\"0\",\"0\",\"10533\"],[\"10\",\"5\",\"5\"],[\"false\",\"false\",\"true\"]],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x3\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\",\"0x73eb84966be67e4697fc5ae75173ca6c35089e802650f75422ab49a8729704ec::coin::DooDoo\",\"0x53a30a6e5936c0a4c5140daed34de39d17ca7fcae08f947c02e979cef98a3719::coin::LSD\",\"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::CurveV1\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x54cb0bb2c18564b86e34539b9f89cfe1186e39d89fce54e1cd007b8e61673a85::bin_steps::X80\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async sol_signVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(\n        provider.getAccount(\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\").address\n      );\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n         recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signTransaction(\n        transaction,\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAndSendVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n        transaction,\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllVersionedTransactions() {\n      let provider = new OKXSolanaProvider(window.provider);\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n        [transaction],\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signTransaction() {\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n         recentBlockhash: blockhash,\n      }).add(\n        SystemProgram.transfer({\n          fromPubkey: new PublicKey(provider.getAccount().address),\n          toPubkey: new PublicKey(provider.getAccount().address),\n          lamports: 1000,\n        })\n      );\n\n      this.testTransaction = safeJsonStringify(transaction)\n      let result = await provider.signTransaction(\n        transaction,\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllTransactions() {\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n        SystemProgram.transfer({\n          fromPubkey: new PublicKey(provider.getAccount().address),\n          toPubkey: new PublicKey(provider.getAccount().address),\n          lamports: \"100\",\n        })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n        [transaction],\n        this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    getSolConnect() {\n      let rpc = \"https://www.okx.com/fullnode/sol/discover/rpc\"\n      if (this.selectedChain === \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\") {\n        rpc = \"https://www.okx.com//fullnode/sol/discover/rpc\"\n      } else if (this.selectedChain === \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\"){\n        rpc = \"https://www.okx.com/fullnode/soltestnet/discover/rpc\"\n      } else if (this.selectedChain === \"sonic:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\") {\n        rpc = \"https://www.okx.com/fullnode/sonic/testnet/discover/rpc/sonic-testnet-rpc-light\"\n      }\n      return rpc\n    },\n\n    async sol_signAndSendTransaction() {\n\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n        SystemProgram.transfer({\n          fromPubkey: new PublicKey(provider.getAccount().address),\n          toPubkey: new PublicKey(provider.getAccount().address),\n          lamports: \"100\",\n        })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n        transaction,\n        this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async cosmos_signArbitrary() {\n      let provider = new OKXCosmosProvider(window.provider)\n      let message = await provider.signArbitrary(this.selectedChain, provider.getAccount(this.selectedChain).address, \"test cosmos\")\n      if (typeof message == \"string\") {\n        this.testboc = message;\n      } else {\n        this.testboc = JSON.stringify(message);\n      }\n    },\n\n    async cosmos_signAmino(){\n      let provider = new OKXCosmosProvider(window.provider)\n      // const rpcUrl = 'https://osmosis-rpc.publicnode.com:443';\n      // const client = await StargateClient.connect(rpcUrl);\n      // const height = await client.getHeight();\n      // let address = provider.getAccount(this.selectedChain).address\n      // const sequence = await client.getSequence(address)\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      // let signDoc = makeSignDoc(\n      //     transaction.msgs,\n      //     transaction.fee,\n      //     this.selectedChain.split(\":\")[1],\n      //     transaction.memo,\n      //     transaction.accountNumber,\n      //     transaction.sequence,\n      // )\n      let signDoc = {\n        \"chain_id\": \"osmosis-1\",\n        \"account_number\": \"630104\",\n        \"sequence\": \"480\",\n        \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]},\n        \"msgs\": [{\n          \"type\": \"osmosis/poolmanager/swap-exact-amount-in\",\n          \"value\": {\n            \"sender\": \"osmo1u6lts9ng4etxj0zdaxsada6zgl8dudpgelmuyu\",\n            \"routes\": [{\n              \"pool_id\": \"1096\",\n              \"token_out_denom\": \"ibc/987C17B11ABC2B20019178ACE62929FE9840202CE79498E29FE8E5CB02B7C0A4\"\n            }, {\n              \"pool_id\": \"611\",\n              \"token_out_denom\": \"ibc/27394FB092D2ECCD56123C74F36E4C1F926001CEADA9CA97EA622B25F41E5EB2\"\n            }],\n            \"token_in\": {\"denom\": \"uosmo\", \"amount\": \"100\"},\n            \"token_out_min_amount\": \"8\"\n          }\n        }],\n        \"memo\": \"FE\",\n        \"timeout_height\": \"23603788\",\n        \"signOptions\": {\n          \"useOneClickTrading\": false,\n          \"preferNoSetFee\": true,\n          \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]}\n        }\n      }\n\n\n\n\n\n\n\n      // let signOption = {\n      //   memo: true, // optional\n      //   fee: true, // optional\n      //   gasRate: {\n      //     // optional\n      //     average: \"0.2\",\n      //     low: \"0.02\",\n      //     tiny: \"0.002\",\n      //   },\n      // }\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signAmino(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, signDoc)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    messageToBuffer(message) {\n      var buffer = Buffer.from([]);\n      try {\n        if (typeof message === \"string\") {\n          buffer = Buffer.from(message.replace(\"0x\", \"\"), \"hex\");\n        } else {\n          buffer = Buffer.from(message);\n        }\n      } catch (err) {\n        console.log(`messageToBuffer error: ${err}`);\n      }\n      return buffer;\n    },\n\n\n\n    async cosmos_signDirect() {\n      let provider = new OKXCosmosProvider(window.provider)\n\n      let signDoc = {\n        \"bodyBytes\": this.messageToBuffer(\"0x0ac1010a292f6962632e6170706c69636174696f6e732e7472616e736665722e76312e4d73675472616e736665721293010a087472616e7366657212096368616e6e656c2d301a0d0a05756f736d6f120431303030222b6f736d6f3175366c7473396e67346574786a307a64617873616461367a676c386475647067656c6d7579752a2d636f736d6f733175366c7473396e67346574786a307a64617873616461367a676c386475647067337967766a773207080410ebe3f90a3880b0bcafd18cec8218\"),\n        \"authInfoBytes\": this.messageToBuffer(\"0x0a510a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a2102446e19e94ac0e83ea896d2712507577eb39fbdd2d6ae9f0fc0b9759f1fbaba9012040a02080118e00312140a0e0a05756f736d6f1205323530303010859a11\"),\n        \"chainId\": \"osmosis-1\",\n        \"accountNumber\": \"630104\",\n      }\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      this.testTransaction = safeJsonStringify(signDoc)\n      bs58.encode(Buffer.from(\"\"))\n      let res = await provider.signDirect(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, transaction)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    // Sui methods\n    sui_getAccount() {\n      let provider = new SuiAdapter(window.provider)\n      let result = provider.getAccount()\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n\n    //对单个交易签名（不发送)\n    async sui_signMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.testTransaction = JSON.stringify(input);\n      this.currentSuiTransaction = input;\n      this.currentSuiMethod = \"sui_signMessage\";\n    },\n\n    async sui_signPersonalMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.testTransaction = JSON.stringify(input);\n      this.currentSuiTransaction = input;\n      this.currentSuiMethod = \"sui_signPersonalMessage\";\n    },\n\n    //签名并发送交易\n    sui_signAndExecuteTransaction() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n        \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.testTransaction = JSON.stringify(input);\n      this.currentSuiTransaction = input;\n      this.currentSuiMethod = \"sui_signAndExecuteTransaction\";\n    },\n\n    async deeplinkActionTest() {\n      // let url = \"okx://web3/wallet/connect\"\n      let url =\n        \"https://www.okx.com/download?deeplink=okx%3A%2F%2Fweb3%2Fwallet%2Fconnect\";\n      await this.performAsyncTask();\n      window.open(url, \"_self\");\n    },\n    async performAsyncTask() {\n      // 模拟耗时的异步操作\n      return new Promise((resolve) => {\n        setTimeout(() => {\n          resolve(\"Task completed\");\n        }, 5000); // 模拟耗时5秒\n      });\n    },\n\n    sui_signTransaction2() {\n      // 定义要转移的金额和目标地址\n      const amount = 109; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n        \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n      this.testTransaction = JSON.stringify(input);\n      this.currentSuiTransaction = input;\n      this.currentSuiMethod = \"sui_signTransaction\";\n    },\n\n    //对交易块进行签名\n    async sui_signTransaction() {\n      // const tx = new Transaction();\n      // console.log(tx)\n      // // 定义要转移的金额和目标地址\n      // const amount = 100; // 需要转移的金额\n      // const recipientAddress = '0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2'; // 目标地址\n      // const [coin] = tx.splitCoins(tx.gas, [amount]);\n      // tx.setSender('0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2')\n      // tx.transferObjects([coin], recipientAddress);\n      // console.log(\"====rpcUrl: \", rpcUrl)\n\n      let str =\n        '{\"version\":1, \"expiration\":null,\"gasConfig\":{\"payment\":[{\"objectId\":\"0x04a1673fa847afa845e477925c271cb3e8cf0d19cfb830e8c3e841adc299cbca\",\"version\":\"391804724\",\"digest\":\"AHXon1Qvb1xUj5r7aaHyHfLgGhdeNXQ1V3RaNW755mVK\"}],\"owner\":\"0xe62ee1c436125b5b6224cb11b0fa9fbf2c313743aea84eead0450ab49dd0d6ed\",\"price\":\"750\",\"budget\":\"8177120\"},\"inputs\":[{\"kind\":\"Input\",\"type\":\"object\",\"index\":0,\"value\":\"0x0000000000000000000000000000000000000000000000000000000000000006\"},{\"kind\":\"Input\",\"type\":\"object\",\"index\":1,\"value\":\"0xbb4e2f4b6205c2e2a2db47aeb4f830796ec7c005f88537ee775986639bc442fe\"},{\"kind\":\"Input\",\"type\":\"object\",\"index\":2,\"value\":\"0x96df0fce3c471489f4debaaa762cf960b3d97820bd1f3f025ff8190730e958c5\"},{\"kind\":\"Input\",\"index\":3,\"value\":{\"Pure\":[0]},\"type\":\"pure\"},{\"kind\":\"Input\",\"index\":4,\"value\":{\"Pure\":[0,202,154,59,0,0,0,0]},\"type\":\"pure\"},{\"kind\":\"Input\",\"index\":5,\"value\":{\"Pure\":[0,202,154,59,0,0,0,0]},\"type\":\"pure\"},{\"kind\":\"Input\",\"type\":\"object\",\"index\":6,\"value\":\"0xaaf735bf83ff564e1b219a0d644de894ef5bdc4b2250b126b2a46dd002331821\"},{\"kind\":\"Input\",\"type\":\"object\",\"index\":7,\"value\":\"0xf87a8acb8b81d14307894d12595541a73f19933f88e1326d5be349c7a6f7559c\"}],\"transactions\":[{\"kind\":\"SplitCoins\",\"coin\":{\"kind\":\"GasCoin\"},\"amounts\":[{\"kind\":\"Input\",\"index\":4,\"value\":{\"Pure\":[0,202,154,59,0,0,0,0]},\"type\":\"pure\"}]},{\"kind\":\"MoveCall\",\"target\":\"0x834a86970ae93a73faf4fff16ae40bdb72b91c47be585fff19a2af60a19ddca3::incentive_v2::entry_deposit\",\"typeArguments\":[\"0x2::sui::SUI\"],\"arguments\":[{\"kind\":\"Input\",\"type\":\"object\",\"index\":0,\"value\":\"0x0000000000000000000000000000000000000000000000000000000000000006\"},{\"kind\":\"Input\",\"type\":\"object\",\"index\":1,\"value\":\"0xbb4e2f4b6205c2e2a2db47aeb4f830796ec7c005f88537ee775986639bc442fe\"},{\"kind\":\"Input\",\"type\":\"object\",\"index\":2,\"value\":\"0x96df0fce3c471489f4debaaa762cf960b3d97820bd1f3f025ff8190730e958c5\"},{\"kind\":\"Input\",\"index\":3,\"value\":{\"Pure\":[0]},\"type\":\"pure\"},{\"kind\":\"Result\",\"index\":0},{\"kind\":\"Input\",\"index\":5,\"value\":{\"Pure\":[0,202,154,59,0,0,0,0]},\"type\":\"pure\"},{\"kind\":\"Input\",\"type\":\"object\",\"index\":6,\"value\":\"0xaaf735bf83ff564e1b219a0d644de894ef5bdc4b2250b126b2a46dd002331821\"},{\"kind\":\"Input\",\"type\":\"object\",\"index\":7,\"value\":\"0xf87a8acb8b81d14307894d12595541a73f19933f88e1326d5be349c7a6f7559c\"}]}]}';\n\n      /// 从给定的交易中，反序列化一个transaction对象\n      const tx = SuiTransaction.from(str);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 记录当前交易的transaction，用来显示\n      this.testTransaction = JSON.stringify(input);\n      /// 记录当前的transaction对象，用来交易\n      this.currentSuiTransaction = input;\n      /// 记录当前的交易方法，用来SuiAdaper分发\n      this.currentSuiMethod = \"sui_signTransaction\";\n    },\n\n    async sui_requestRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n        `sui:mainnet`,\n        `https://fullnode.mainnet.sui.io:443`\n      );\n      var data = {\n        method: \"suix_getBalance\",\n        params: [\n          \"0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae\",\n          \"0x168da5bf1f48dafc111b0a488fa454aca95e0b5e::usdc::USDC\",\n        ],\n      };\n      this.testTransaction = JSON.stringify(data);\n      this.currentSuiTransaction = JSON.stringify(data);\n      this.currentSuiMethod = \"sui_testRpc\";\n    },\n\n    async sui_signAndExecuteTransaction_stake() {\n      if (this.testboc.length == 0) {\n        alert(\"输入input.serilize()读取到的参数\");\n        return;\n      }\n      let str = this.testboc;\n\n      let tx;\n      try {\n        /// 从给定的交易中，反序列化一个transaction对象\n        tx = SuiTransaction.from(str);\n      } catch (error) {\n        alert(\"参数错误\");\n      }\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 记录当前交易的transaction，用来显示\n      this.testTransaction = JSON.stringify(input);\n      /// 记录当前的transaction对象，用来交易\n      this.currentSuiTransaction = input;\n      /// 记录当前的交易方法，用来SuiAdaper分发\n      this.currentSuiMethod = \"sui_signAndExecuteTransaction\";\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 102; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n        \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n        input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n\n      this.testTransaction = JSON.stringify(input);\n      this.currentSuiTransaction = input;\n      this.currentSuiMethod = \"sui_signTransaction\";\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signAndExecuteTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n        \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n        input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n\n      this.testTransaction = JSON.stringify(input);\n      this.currentSuiTransaction = input;\n      this.currentSuiMethod = \"sui_signAndExecuteTransaction\";\n    },\n\n    /// generate txBytes and txSerialize\n    async generateTsBytesAndSerizlize(input) {\n      /// txBytes and txSerialize may be constructed in advance by the dapp side\n      let resultTuple = [\"\", \"\"];\n      if (\n        \"txBytes\" in input &&\n        input.txBytes.length > 0 &&\n        \"txSerialize\" in input &&\n        input.txSerialize.length > 0\n      ) {\n        resultTuple = [input.txBytes, input.txSerialize];\n      }\n\n      /// Otherwise, a transactionBlock parameter is required.\n      if (!(\"transactionBlock\" in input)) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      if (this.walletAddress != \"connected\") {\n        alert(\"请先连接钱包\");\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      let senderAccounts = window.provider.requestAccountsWithNamespace(\"sui\");\n      if (senderAccounts.length == 0) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      try {\n        let rpcUrl = getFullnodeUrl(\"mainnet\");\n        rpcUrl = \"https://www.okx.com/fullnode/sui/discover/rpc\"\n        const suiClient = new SuiClient({ url: rpcUrl });\n\n        /// sender is required\n        input.transactionBlock.setSender(senderAccounts[0]);\n        const result = await input.transactionBlock.build({\n          client: suiClient,\n        });\n        const txBytes = Buffer(result).toString(\"base64\");\n        const txSerialize = await SuiTransaction.from(txBytes).toJSON();\n        resultTuple = [txBytes, txSerialize];\n      } catch (error) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      return new Promise((resolve) => {\n        resolve(resultTuple)\n      })\n    },\n\n    btc_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentBtcTransaction = params\n      this.currentBtcMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n\n    fractal_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentFractalTransaction = params\n      this.currentFractalMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n    handleModalsSelect(modals) {\n      selectedModals = modals;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedDeepLink,\n            modals: modals.length === 3 ? \"all\" : modals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n\n    handleReturnStrategySelect(returnStrategy) {\n      selectedReturnStrategy = returnStrategy === \"deeplink\" ? this.deeplink : returnStrategy;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n\n    handleReturnStrategyDeeplink(deeplink) {\n      selectedReturnStrategy = deeplink;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: deeplink,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n\n    handleLanguageSelect(language) {\n      selectedLanguage = language;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: language,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n    handleConnectMethodsSelect() {\n      console.log(\"当前的方法 this.selectedMethod>>>>\",this.selectedMethod);\n    },\n\n\n\n    handleThemeSelect(theme) {\n      selectedTheme = theme;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: theme,\n          },\n        };\n      }\n    },\n  },\n  created() {\n    // for (const eventName of Object.values(OKX_TON_CONNECTION_AND_TRANSACTION_EVENT)) {\n    //   console.log(eventName);\n    //   window.addEventListener(eventName, (event) => {\n    //     console.log(eventName,event.detail)\n    //     this.currentStatus = eventName\n    //   });\n    // }\n  },\n\n  mounted() {\n\n    var scriptTag = document.createElement(\"script\");\n    scriptTag.src = \"https://telegram.org/js/telegram-web-app.js\";\n    scriptTag.id = \"tgsdk\";\n    document.getElementsByTagName('head')[0].appendChild(scriptTag);\n\n    this.connectReady = true;\n    document.title = \"OKX Connect\";\n    var initCall;\n    if (!this.withUI) {\n      initCall = OKXUniversalProvider.init({\n        dappMetaData: {\n          name: \"univer test dapp\",\n          icon: \"https://avatars.githubusercontent.com/u/37784886\",\n        },\n      });\n    } else {\n      initCall = OKXUniversalConnectUI.init({\n        dappMetaData: {\n          icon: \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\",\n          name: \"OKX WalletConnect UI Demo\",\n        },\n        actionsConfiguration: {\n          returnStrategy: selectedReturnStrategy,\n          modals: \"all\",\n        },\n        language: selectedLanguage,\n        uiPreferences: {\n          theme: selectedTheme\n        },\n      });\n    }\n\n    initCall.then((provider) => {\n      window.provider = provider;\n      console.log(\"init finished:\", provider);\n      console.log(\"init finished session:\", JSON.stringify(provider.session));\n\n      if (provider.session?.namespaces) {\n        const newChains = [];\n        console.log(\"namespaces\", provider.session.namespaces);\n        Object.entries(provider.session.namespaces).forEach(([key, value]) => {\n          if (key === \"eip155\") {\n            value.chains.forEach((chain) => {\n              newChains.push(parseInt(chain.substring(7)));\n            });\n          } else if (key === \"aptos\") {\n            value.chains.forEach((chain) => {\n              if (chain === \"aptos:637\") {\n                newChains.push(\"aptos:mainnet\")\n              } else {\n                newChains.push(\"movement:testnet\")\n              }\n            })\n          }\n          else {\n            value.chains.forEach((chain) => {\n              newChains.push(chain);\n            });\n          }\n        });\n\n        console.log(\"existing chains:\", newChains);\n        this.initChains(newChains);\n      } else {\n        this.initChains([]);\n      }\n\n      provider.on(\"display_uri\", (uri) => {\n        if (this.isPC()) {\n          if (uri && !this.withUI) {\n            this.qrValue = uri;\n            this.showModal = true;\n          }\n        }\n        console.log(\"通知>>>display_uri  ==> \", uri);\n      });\n\n      provider.on(\"connect\", (session) => {\n        console.log(\"通知>>>get connect session\", session);\n      });\n      provider.on(\"reconnect\", (session) => {\n        console.log(\"通知>>>get reconnect session\", session);\n        this.walletAddress = \"connected\";\n      });\n      provider.on(\"disconnect\", ({ topic }) => {\n        console.log(`通知>>>get disconnect  ${topic}`);\n        this.walletAddress = \"disconnecteddddd\";\n      });\n      provider.on(\"session_delete\", ({ topic }) => {\n        console.log(`通知>>>get session_delete  ${topic}`);\n      });\n      provider.on(\"session_update\", (session) => {\n        console.log(`通知>>>get session_update `, JSON.stringify(session));\n      });\n    });\n  },\n};\n</script>\n","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signMessage()\">signMessage(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_send()\">send(BTC)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendBitcoin()\">sendBitcoin(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signPsbt_up()\">signPsbt(上架NFT)</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"btc_signAndPushPsbt_up()\">signAndPushPsbt(上架NFT)</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在OKX App选择要上架的Btc NFT，点击【上架】\n        </li>\n        <li>\n          2. 弹出签名面板，点开高级选项，查看\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出上架流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendInscription()\">sendInscription(BTC)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Btc NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount\n    }\n  },\n  methods: {\n    btc_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to UniSat!\\n\\nClick to sign in and accept the UniSat Terms of Service (https://unisat.io/terms-of-service.html) and Privacy Policy (https://unisat.io/privacy-policy.html).\\n    \\nThis request will not trigger a blockchain transaction.\\n    \\nYour authentication status will reset after 24 hours.\\n    \\nWallet address:\\nbc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\\n    \\nNonce:\\n162d70e3-8c21-4cfd-9a22-9bf0a4b7be51\\n\"\n      };\n      this.$emit('generateTransactionParams', params, \"btc_signMessage\")\n    },\n\n    btc_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"btc_send\")\n    },\n\n    btc_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"btc_sendBitcoin\")\n    },\n\n    btc_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"btc_signPsbt\")\n    },\n\n    btc_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"btc_signAndPushPsbt\")\n    },\n\n    btc_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"btc_sendInscription\")\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./BtcTransactionPanel.vue?vue&type=template&id=17e9106e&scoped=true\"\nimport script from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./BtcTransactionPanel.vue?vue&type=style&index=0&id=17e9106e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-17e9106e\"]])\n\nexport default __exports__","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signMessage()\">signMessage(Fractal)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_send()\">send(Fractal)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_sendBitcoin()\">sendBitcoin(Fractal)</el-button>\n\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signPsbt_up()\">signPsbt(上架NFT)</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_signAndPushPsbt_up()\">signAndPushPsbt(上架NFT)</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在OKX App选择要上架的Fractal NFT，点击【上架】\n        </li>\n        <li>\n          2. 弹出签名面板，点开高级选项，查看\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出上架流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_sendInscription()\">sendInscription(Fractal)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Fractal NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount\n    }\n  },\n  methods: {\n    fractal_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to UniSat!\\n\\nClick to sign in and accept the UniSat Terms of Service (https://unisat.io/terms-of-service.html) and Privacy Policy (https://unisat.io/privacy-policy.html).\\n    \\nThis request will not trigger a blockchain transaction.\\n    \\nYour authentication status will reset after 24 hours.\\n    \\nWallet address:\\nbc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\\n    \\nNonce:\\n162d70e3-8c21-4cfd-9a22-9bf0a4b7be51\\n\"\n      };\n      this.$emit('generateTransactionParams', params, \"fractal_signMessage\")\n    },\n\n    fractal_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_send\")\n    },\n\n    fractal_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_sendBitcoin\")\n    },\n\n    fractal_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"fractal_signPsbt\")\n    },\n\n    fractal_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"fractal_signAndPushPsbt\")\n    },\n\n    fractal_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"fractal_sendInscription\")\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./FractalTransactionPanel.vue?vue&type=template&id=02b5b8a5&scoped=true\"\nimport script from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./FractalTransactionPanel.vue?vue&type=style&index=0&id=02b5b8a5&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-02b5b8a5\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=9c85d6d8&scoped=true\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=9c85d6d8&scoped=true&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-9c85d6d8\"]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\nimport App from './App.vue'\n\nconst app = createApp(App)\n\napp.use(ElementPlus)\napp.mount('#app')","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkokxconnectdemo\"] = self[\"webpackChunkokxconnectdemo\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(99156); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["require","__awaiter","this","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","OKXBtcProvider","_1","constructor","caip","provider","getUniversalProvider","getAddressForChainId","chainId","_a","_b","ns","checkChainId","undefined","OKXConnectError","OKX_CONNECT_ERROR_CODES","UNKNOWN_ERROR","accounts","session","namespaces","filter","account","startsWith","length","address","split","getAccount","_c","extra","publicKey","signMessage","signStr","type","params","from","ret","request","method","errorData","error","sendBitcoin","toAddress","satoshis","options","to","toString","feeRate","send","txhash","input","checkParameters","signPsbt","psbtHex","signPsbts","psbtResults","results","JSON","parse","catch","psbtHexs","signAndPushPsbt","sendInscription","inscriptionId","extension","coinId","protocolId","atomicSuffix","ordinalsSuffix","toLowerCase","endsWith","removeSuffix","scenario","txType","batchBean","coinAmount","nftId","str","suffix","slice","keys","unexistKeys","forEach","key","push","console","log","join","includes","namespaceKey","_","OKXCosmosProvider","core_1","uint8array_extras_1","_d","_e","NameSpaceKeyCosmos","accountArray","algo","bech32Address","pubKey","hexToUint8Array","signArbitrary","signerAddress","data","base64Encoded","stringToBase64","signDoc","chain_id","account_number","sequence","fee","gas","amount","msgs","memo","signData","signAmino","signOptions","resData","signed","signature","signDirect","object","bodyBytes","bufferToHex","authInfoBytes","accountNumber","res","messageToBuffer","message","buffer","Uint8Array","replace","toUint8Array","err","buf","uint8ArrayToHex","__importDefault","mod","__esModule","OKXUniversalProvider","utils_1","eip155_1","sui_1","constants_1","eventemitter3_1","client_1","namespaces_1","solana_1","btc_1","aptos_1","ton_1","cosmos_1","init","opts","initialize","rpcProviders","events","default","providerOpts","args","chain","connected","NOT_CONNECTED_ERROR","namespace","requestParam","buildRequestParamFromRequest","getProvider","logDebug","stringify","validateChain","keyArr","assign","enable","client","connectOpts","connect","requestAccounts","disconnect","called","onRequestSent","disconnectAndEmit","cleanup","engine","connectionManager","emit","topic","aptosChainNameToGeneralId","replaceAptos","aptosNameSpace","realNS","replaceAptosInner","aptos","optionAptosNameSpace","optionalNamespaces","realOptionNS","requestMethods","requestMethod","chains","map","defaultChain","disconnectInner","getCurrentConnectionReady","ALREADY_CONNECTED_ERROR","sessionConfig","openUniversalUrl","isMobileUserAgent","setNamespaces","onConnect","on","event","listener","once","removeListener","off","setDefaultChain","rpcUrl","test","checkStorage","sessionInfoStr","getFromStore","sessionInfo","restoreconnect","createProviders","setTimeout","url","window","location","hostname","origin","dappMetaData","setGlobal","SignClient","providersToCreate","Set","parseNamespaceKey","namespacesValue","currentNameSpace","Eip155Provider","opts1","solanaProvider","sonicProvider","svmProvider","optsTon","tonProvider","optsSui","suiProvider","SuiProvider","name","optsBtc","btcProvider","fbProvider","aptosProvider","cosmosProvider","registerEventListeners","addDisconnectListener","PROVIDER_EVENTS","DEFAULT_CHAIN_CHANGED","caip2ChainId","onChainChanged","UPDATE_NAMESPACES","nameSpaces","nameSpacekey","persist","icon","dappInfo","redirect","isChainNamespaceInSession","chainsArr","defaultNamespace","getDefaultChain","namespaceStr","values","requestAccountsWithNamespace","requestDefaultChainWithNamespace","caip2Chain","sessionProperties","saveSessionContent","getSessionContent","showRequestModal","__createBinding","create","o","m","k","k2","desc","getOwnPropertyDescriptor","writable","configurable","enumerable","get","__exportStar","p","prototype","hasOwnProperty","call","NameSpaceKeyBtc","NameSpaceKeySui","OKXUniversalProvider_1","OKXBtcProvider_1","OKXCosmosProvider_1","ConnectMethodUtils_1","ISignClient","metaData","super","Engine","ConnectionManager","connectRequest","requestAccountItem","requiredNamespaces","nameSpaceToConnectWalletNameSpace","connectRequestMethods","connectMethodsToConnectWalletMethods","universalConnect","metadata","info","encodeParams","encodeConnectParams","getUniversalLink","getAppWalletDeepLink","fillParamsToSession","isIos","openOKXWallet","response","requestId","code","onAck","getGlobal","openOKXDeeplinkWithFallback","standardDeeplink","connectSupportMethods","bs58_1","isArray","Array","isRecord","requireNameSpace","methodItem","includeEip155","some","space","includeChain","item","paramsArr","firstParam","firstObj","convertedArray","uint8Array","decoder","TextDecoder","b64encoded","btoa","decode","atob","encode","stringToUint8Array","aptosParams","currentURL","protocol","applicationUrl","prefix","freeze","getAccountsChains","isCaipNamespace","NameSpaceKeyEip155","NameSpaceKeySOL","NameSpaceKeyAptos","NameSpaceKeyTON","mergeRpcMap","targetRpcMap","sourceRpcMap","mergeNamespaces","target","source","rpcMap","GENERIC_SUBPROVIDER_NAME","RPC_URL","STORAGE","CONTEXT","WC_VERSION","PROTOCOL","RELAY_URL","LOGGER","JsonRpcConnection_1","JsonRpcProvider_1","AptosProvider","httpProviders","createHttpProviders","updateNamespace","getAccounts","methods","METHOD_NOT_SUPPORTED","setHttpProvider","Error","http","parsedChainId","getChainId","parsedRpc","getRpcUrl","httpProvider","createHttpProvider","getHttpProvider","rpc","JsonRpcProvider","JsonRpcConnection","BtcProvider","logError","CosmosProvider","parseInt","updateRequestParams","isDic","switchChainId","decimalNumber","isNaN","selectedChainId","chainNum","paramsChainId","paramsChainString","String","Number","adaptArray","messageObj","addressObj","isEqual","chainAddress","messages","typedDataJson","secondObj","hexChainId","getHexChainIdFromRequest","isChainApproved","handleSwitchChain","addEthereumChain","resultData","nameSpace","rpcUrls","eip155","cross_fetch_1","core_2","DEFAULT_HTTP_HEADERS","Accept","DEFAULT_HTTP_METHOD","DEFAULT_FETCH_OPTS","headers","disableProviderPing","EventEmitter","isAvailable","registering","isHttpUrl","connecting","open","arguments","register","close","onClose","payload","body","safeJsonStringify","json","onPayload","onError","id","jsonrpc","onOpen","parseError","safeJsonParse","formatJsonRpcError","parseConnectionError","types_1","IJSONRpcProvider","connection","hasRegisteredEventListeners","setConnection","context","requestStrict","formatJsonRpcRequest","getBigIntRpcId","isJsonRpcError","isJsonRpcResponse","reason","_error","SolanaProvider","getPubkey","getWalletAddress","components","__rest","s","t","indexOf","getOwnPropertySymbols","i","propertyIsEnumerable","TONProvider","validUntil","newParams","fromAddress","ton_addr","boc","IJSONRpcConnection","opt","globals","projectId","parseChainId","reference","convertChainIdToNumber","mergeArrays","CAIP_DELIMITER","a","b","_createElementBlock","_hoisted_1","_createVNode","_component_el_container","_withCtx","_component_el_header","_cache","_createTextVNode","_component_el_main","_component_el_card","class","header","_createElementVNode","_component_el_row","_component_el_col","span","_toDisplayString","$options","_ctx","currentStatus","_component_el_checkbox","modelValue","withUI","$event","onChange","handleWithUI","style","_component_el_select","modals","placeholder","handleModalsSelect","multiple","_component_el_option","label","returnStrategy","handleReturnStrategySelect","_Fragment","_renderList","returnStrategies","strategy","_createBlock","_component_el_input","deeplink","handleReturnStrategyDeeplink","disabled","_createCommentVNode","language","handleLanguageSelect","locales","locale","theme","handleThemeSelect","THEME","LIGHT","DARK","selectedMethod","handleConnectMethodsSelect","connectMethods","tonProofValue","gutter","align","availableChains","checked","areChainsInit","isOptionalChecked","handleOptionChange","_component_el_button","onClick","connectBtnClicked","connectStatusStr","disconnectAction","walletAddress","disconnectStatusStr","_Teleport","showModal","closeModal","_withModifiers","_component_qrcode_vue","qrValue","size","level","_component_el_tabs","activeTab","onTabClick","clickActiveTab","_component_el_tab_pane","eth_requestAccounts","eth_chainId","wallet_switchEthereumChain","wallet_addEthereumChain","personal_sign","eth_signTypedData_v4","eth_sendTransaction_transfer","eth_sendTransaction_approve","eth_sendTransaction_mint","wallet_watchAsset","wallet_testRpc","eth_sendTransaction_swap","ton_getAccount","ton_sendTransaction","sol_signMessage","sol_signTransaction","sol_signVersionedTransaction","sol_signAllTransactions","sol_signAllVersionedTransactions","sol_signAndSendTransaction","sol_signAndSendVersionedTransaction","sui_getAccount","sui_signMessage","sui_signPersonalMessage","sui_signTransaction2","sui_signAndExecuteTransaction","sui_requestRpc","sui_signTransaction_pre_execution","sui_signAndExecuteTransaction_pre_execution","sui_signTransaction","sui_signAndExecuteTransaction_stake","_component_BTCPanel","onGenerateTransactionParams","btc_generateTransactionParams","_component_FractalPanel","fractal_generateTransactionParams","aptos_signMessage","aptos_signTransaction","aptos_signAndSubmitTransaction","move_signTransaction","move_signAndSubmitTransaction","cosmos_signArbitrary","cosmos_signAmino","cosmos_signDirect","xs","sm","testTransaction","rows","testboc","sendTransaction","testTransactionStr","btc_signMessage","$setup","sendAmount","clearable","btc_send","sendSatoshisAmount","btc_sendBitcoin","btc_signPsbt_up","btc_signAndPushPsbt_up","receiver","btc_sendInscription","props","msg","setup","ref","$emit","alert","autoFinalized","__exports__","fractal_signMessage","fractal_send","fractal_sendBitcoin","fractal_signPsbt_up","fractal_signAndPushPsbt_up","fractal_sendInscription","VConsole","allChains","optionChains","selectedModals","selectedReturnStrategy","selectedDeepLink","selectedLanguage","selectedTheme","QrcodeVue","BTCPanel","FractalPanel","testTopic","testPublicKey","testProofPayload","pendingDeepLink","logList","connectReady","localPubKey","localSecKey","selectedChain","ProofPayloadVerify","showVerifyRow","has","localStorage","getItem","selectedMethodData","isChecked","setItem","reload","delete","add","computed","selectedChains","initChains","newChains","updatedChains","tab","tabName","Date","now","testTonSdk","blockExplorerUrls","chainName","nativeCurrency","symbol","decimals","dataETH","dataPolygon","types","EIP712Domain","Person","Mail","primaryType","domain","version","verifyingContract","wallet","contents","maxPriorityFeePerGas","maxFeePerGas","gasPrice","nonce","gasLimit","image","adapter","OKXTONProvider","sendData","SuiAdapter","suiResult","currentSuiMethod","signTransaction","currentSuiTransaction","signAndExecuteTransaction","signPersonalMessage","btcAdapter","btcResult","currentBtcMethod","currentBtcTransaction","hexToBase64","bs64Str","fractalResult","currentFractalMethod","currentFractalTransaction","USER_REJECTS_ERROR","hexStr","bytes","substr","blob","Blob","reader","FileReader","onload","base64Data","onerror","readAsDataURL","hasEip155","hasSolana","hasSui","hasBtc","hasAptos","hasTon","nameSpacesChains","optSpaceChains","solanaChains","hasCosmos","suiChains","btcChains","entries","connectMethod","connectData","requireData","solana","cosmos","tonParams","ton_proof","ton","sui","btc","optData","getCurrentSelectedMethodData","OKXUniversalConnectUI","openModal","isPC","methodList","suiData","application","userAgentInfo","navigator","userAgent","Agents","flag","v","isSafariOrChrome","pubkey","OKXSolanaProvider","bs58","verify","ed25519","TextEncoder","toBytes","OKXAptosProvider","config","AptosConfig","network","Network","MAINNET","Aptos","transaction","build","simple","sender","function","typeArguments","functionArguments","signAndSubmitTransaction","PublicKey","Connection","getSolConnect","blockhash","getLatestBlockhash","versionedTransactionMessage","TransactionMessage","payerKey","recentBlockhash","instructions","SystemProgram","transfer","fromPubkey","toPubkey","lamports","compileToV0Message","VersionedTransaction","signAndSendTransaction","signAllTransactions","Transaction","feePayer","Buffer","recipientAddress","tx","SuiTransaction","coin","splitCoins","transferObjects","transactionBlock","showEffects","deeplinkActionTest","performAsyncTask","txBytes","txSerialize","generateTsBytesAndSerizlize","resultTuple","senderAccounts","getFullnodeUrl","suiClient","SuiClient","setSender","toJSON","uiOptions","actionsConfiguration","uiPreferences","created","mounted","initCall","scriptTag","document","createElement","src","getElementsByTagName","appendChild","title","substring","uri","render","app","createApp","App","use","ElementPlus","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","loaded","__webpack_modules__","amdO","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","j","every","splice","r","n","getter","d","definition","g","globalThis","Function","obj","prop","Symbol","toStringTag","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}